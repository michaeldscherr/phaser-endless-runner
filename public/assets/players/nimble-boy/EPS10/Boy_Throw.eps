%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Boy_Throw.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: WINDOWS
%%CreationDate: 12/15/2014
%%BoundingBox: 0 0 341 167
%%HiResBoundingBox: 0 0 340.7325 166.6690
%%CropBox: 0 0 340.7325 166.6690
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.1 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 64 8%%BeginData: 10061 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD3AFF7627767676527D4B764B7DA8FD74FFA1274B6F4B4B4B6F76
%7D767D4B4B52FD22FF4B4B4B527DA1FD1CFFA17D52524B52527D4B525252
%7DFD21FF4B4B4B764B6F4B764B6F4B767D7D4B52A8FD1FFF4B4B4B767676
%5252527DA8FD14FF76522776527D76764B6F4B4B4B7D7D7D2776A8FD1AFF
%A84B4B204B204B4B6F4B4B4B6F4B4B4B6F4B767D5276FD1CFFCA7D7D204B
%4B6F4B4B4B7D76762776A8FD0FFF7D27764B764B764B764B764B764B764B
%764BA1A14BA8FD18FF76276F4B766F766F766F766F766F764B764B764B76
%767D4BFD19FF204B274B274B4B764B764B764B764BA17D7652FD0EFF7627
%4B6F4B4B4B6F4B4B4B6F4B6F4B766F766F767D4BFD18FFA1274B766F7676
%766F7676766F7676766F7676766F76767D52FD18FF4B4B6F4B764B764B76
%4B4B4B6F4B4B4B6F4B7D4B7DFD0DFF7D274B764B6F4B766FFD0B767D7DFD
%18FFA84B4B764B766F766FFD0D76A14BA8FD17FFA84BFD0A766F764B6F4B
%764B767D52FD0AFFCA2727204B4B766F766F766F766F766F766F764B6F4B
%7D527DFD16FFA85220FD044B6F4B4B4B6F4B6F4B764B766F766F764B7652
%A8FD17FFCA4B274B6F4B764B766F766F766F766F764B6F4B767652FD08FF
%7D20764BFD09766F766F764B764B764B764BA127FD15FF4B4B4B764B764B
%764B764B764B764B764B764B764B764B764BA127FD15FF764B274B4B764B
%764B764B766FFD0A76A17D7DFD06FF52204B4B7676764B764B4B4B6F4B4B
%4B6F4B4B4B6F4B4B4B274B7D7DFD13FF20FD044B6F4B4B4B6FFD074B6F4B
%4B4B6F4B4B4B6F4B7D7DFD12FFCA20FD044B6F4B4B4B6F4B4B4B6F4B4B4B
%766F766F7676766FA84BFD06FF7D4B4B766F764B6F4B764B6F4B764B6F4B
%764B6F4B764B4B4B52767DFD13FF52FD044B20512027FD054B764B6F4B76
%4B6F4B764B6F204B767DFD13FF4B4B6F4B6F4B6F4B6F4B764B6F4B764B6F
%4B764B764B7676766F7DA8FD07FFA1F84B4B6FFD044B204B4B6F4B4B206F
%4B4B4B514BC97C4B52FD13FFA827204B2076C9A0754B20FD044B6F4B4B20
%6F4B4B4B6F2027207D52FD13FF7D4B204B4B4B20FD084B6F4B4B4B6F4B4B
%4B6F4B4B7D76FD06FFA8274B4B764B764B4B274B4B764B76204B4B764B51
%75C9C9CF207DFD14FFA8FD044BCEC9CEC94B4B764B764B4B20764B764B76
%2775C94B767DFD14FFFD0D4B764B764B764B764B764B764BA14BFD05FF7D
%206F4B4B274B4B4B20FD044B6F4B4B4B6F4B4B75FD04C927A8FD14FF7D20
%4B274BA0C9C9C9FD044B204B204B4B6F4B4B20A0C9C95227A8FD13FFA87D
%204B274B204B274B20FD044B6F4B4B4B6F4B4B4B6F4B274B76FD04FFA827
%6F4B76FD074B76FD064B2776A0C9C9CEC97C4BFD14FFFD064BA1C9CEC976
%264B51A09A4B274B20519AC9C9CEC97627FD13FF7D4B4B4B274B4B4B27FD
%044B764B6F4B4B276F4B764B6F4B4B266F52FD04FF274B4B4B274B274B20
%4B20FD044BA04B7576C2A0FD04C9A04B4BFD14FF524B274B2651A0C9A051
%272775A0274B75A0A0C9A0FD04C9A027FD15FF204B274B204B274B204B27
%4B204B264B206FFD064B757C4B4BFD05FF27FD094B2051A0C9A07676C9C9
%CEC9CEC9C9267676FD15FFFD044B76514B4B274B4B4B7CC9C9764BCEC9CE
%C9CEC9A0514BFD15FF76FD0A4B76A0A0C95175FD054B76C2CECF4B4BFD06
%FF524B204B274B204B274B75C976517C7C2076A6C9C9C95176527CA8FD15
%FF2727A0767C4B2027274B204BC9C97D764B7CC9C9A04B20A74BFD15FFA8
%4B274B7676274B204BA0C9754B275175A075A0A0FD04C9A8F8A8FD07FF27
%4B274B4B4B274B4BC9C9CEC9C9A1FF2027A0CEC9C9764B76A8FD16FF27A0
%7551A0A0A04B4B4B20C9A07D274B7CC9C9CE52A84B7CFD16FFA84BA7767C
%4B4B4BA0CEC9A7C9C94B7CC9CEC9C9C9CEC9C9527DFD06FFA1204B274B20
%4B274B2051FD05C9765220A0FD05C9767DA8FD16FF52A0C2757CC9C92027
%2027A0C9274BA0FD04C9A020767DFD17FF27A0764B7651A6FD06C9A127A0
%FD05C9762727FD07FFA8FD044BA0C9C94B4BC9CEC9CEC9CEC97675CEC9CE
%C9C9C9CE52FD17FFA827A0C9C9CEC94B4B4B20C976A1C9CEC9CEC9CEC9A0
%52FD18FF76C9C975A7C9CEC9CEC9CEC9A07D522076C9CE7C4B27CA4BFD08
%FFA84B274BA04B27A0A0FD06C9A075FD04C9A7C9C9C952FD18FF7D274B4B
%76A0204B274BA0204BA0FD07C94BFD18FF7D4BA0FD09C9A62726FD05C952
%A1527DFD0AFFA127A0A0C34BC9C9CEC9C9C9CE51274B524B5220CEC9A876
%FD1CFF76272720274BA1204B274B524B76C9C9A176FD19FF764B7676C9CE
%C9C9C9CEC9C97CCEC9C9C9CEC9A02676A8FD06FF7CA8FFFFFFA74BC2A0FD
%08C9A0202027524B4BC9CA27FD1CFFA8272E2727F87CA6204420274BF8C9
%C9A827FD1DFF7D51FD05C95175FD05C9A6C9A6A727FFFFFF762751767627
%FD04FF7D2076755275CEC9CEC9CEC9276F6F204B76CF4BCAFD1CFF272E35
%36355A27CE764B6F27207CC9A84BFD1DFFA8522776C9CEC9CEC95176CEC9
%CEC9CEC9CE7DA7FFFFFF522075A020A17CFD05FFA1A87D272076A0C9C9C9
%A04B204B4B7D27A8FD1DFF27F83535352E4B277676754B767C5252FD1EFF
%2728282051A7FD04C97C4B7675A7C9C9A74BFD04FF4BC9CEC927A752FD07
%FF272E35274B4B4B757C76764B527DFD1EFFCA2727355A352726C34B4B4B
%7D76A8A8FD1FFF272E2E2E274B76C9C9CEC9C9C9CEC9C9A852A8FD04FF27
%C9C9C927A04BFD05FFA87D00272727052726A0752727FD21FF7D27273535
%2E2727F827F8A8FD1FFFA87DA8A127F8270527F875265176FD04C9CA764B
%A8FD05FF5251C9C9C94B4B27A8FFFF522E2E353535272E2727204B207DFD
%22FF27282F2F273635592E27FD1FFF4B4B522727272E27352E272051264B
%4B7C4B7D52A8FD08FFCA524B4B4B204B202720272EFD04352F2735353527
%2E27FD06FFA8764BA8FD18FF27352E28FD053527FD1EFFA8202720272027
%2E2E35352EFD0427FD11FF52274B274B204B2028353635352735355A3536
%2E2E27FD04FF4B4B76A04BA7FD16FF7D7D845936355A35363527FD1EFF52
%4B272720272736275A35362E2E354BFD12FF76204B204B2727F8352E2705
%FD0735052E27FFFFA8755126A0A04BFD16FF4BFFFFFFA884595A353527FD
%1EFF4B2027F85227A8592E2E353535003527FD13FFA1204B274B4B522727
%A8AF8460355A353635522727A8FFA876754BA0C951FD16FF76FD09FF7DFD
%1EFF204B274BA876FFFFA82E35362E272E7DFD15FFA1FD05FF4BFD09FF27
%2720277D2720A04B75A04BCAFD14FF7D59FD09FF27FD1DFF4B4B274B5176
%A1FFFFFF27352027202752FFFFFF7D764B76FD13FFA87DFD09FF52204B20
%27204B27A04B4BA7FD15FF275A5984A8FD06FF52FD1CFFA84BA0C3A05127
%AFFD04FF2727274B2052A1FF4BA0A7277DFD13FF7D59FD09FF5227202020
%2720274BA1FD16FFA827FD0535605A84847E52FD1CFF7C264B20754B2E35
%6084FFFFFF274B2027204B2076C9C9A07627FD12FF285A35605AA984AFA8
%AF84594B4B274B204BA1FD18FFA82E5A3536355A3536355A2E52FFFFA17D
%FD18FF4BC9A0764B4B3536355A356084A827FD054B75CEC9CE7C7651FD11
%FF2EFD0A3552FF27272052A8FD19FF27FD0A352E202727754B4BA8FD16FF
%7675C2A0C2F8FD08352E204B204B2076FD04C9207DFD11FF2736355A3536
%355A35363559FFFF7DA8FD1BFF523536355A3536355A3536274B27C34B75
%754BA8FD16FF765176272E355A3536355A353635352752274B4B76A0CEC9
%51A8FD10FF7D2EFD0A3552FD1FFFF82E2FFD0835272075A0274BC24BFD1A
%FF522FFD09352E52FD04FFA8524B4BA1FD11FF7D2E36355A3536355A3536
%2E7DFD1FFF4B2727272E2E352E5A3535274B75A04BC9A051FD1AFF522E2F
%5A3536355A353635357DFD07FFA8FD12FF52282EFD08352E52FD1FFF204B
%2027202720272027274BA84B26A0A0A052FD1AFF7D2027F8272E2FFD0435
%27A8FD1BFF20FD04272E272E2727274BFD1EFF7D4B274B4B4B2027204B20
%4B27FFFFA14B754BFD1BFF274B274B2027272720272727A8FD1AFFA12020
%2720272027202720272052FD1DFF52204B204B204B20272027202752FFFF
%FFA8FD13FFA1FD08FF27204B2027202720272027204BFD1AFFA8204B4B4B
%2027204B204B274B20A8FD1CFF27FD054BA8A8204B204B274BFD16FF524B
%277DFD06FF20FD044B272027204B274B207DFD19FF7D4B204B2727527620
%272027202727FD1BFFA827274B204B27FFFF4B20272027207DFD14FFA127
%2E35284BA8FFFFFF7627204B274B207620272027202720FD19FF76274B27
%4B20A8FF7D204B204B2727A1FD1AFF7D204B4B4B2776FFFF7D27274B204B
%4BFD14FF76273535527D7652FFFF4B4B4B274B4B52FFA8204B204B272752
%FD18FF524B274B2027FFFFFF4B20272027204BFD1AFF5227204B2727A8FF
%FFFF202720272027FD14FF2752353527FFFFA12052204B274B2027A8FFFF
%7D202720272027FD18FF76FD044B27FD04FF27204B274B20FD1AFFA74B51
%4B4B27FD04FF52204B204B27FD13FF7D4B2F5A3552FFFF27C9A0FD054B27
%FD04FF4B204B274B20A8FD17FF274B274B204BFD04FF762720272027FD19
%FFA84BC9A0C24BA7FD04FFA84B4B757552FD13FF7627523535207DA176C9
%C9754B264B207DFD04FFA8272027202076FD17FF7D20754B4B52FD05FF52
%76A0C94BFD18FFA84BC9C9C9A752FD06FF7DA0A0C327FD13FF4B4B7D4C27
%A87D524BC9C9C9A0A04B27A8FD05FFA14B9AC975A8FD17FF7DA0A0C975A8
%FD05FF7C75C2A04BFD17FFA826C9C9C9A64BA8FD06FFA175C2A04BFD13FF
%2752FF5252FFFFFFCA4B4B75A0754BA8FD06FFA84BC2A075A1FD17FF76C9
%CEC976A8FD05FF4BC9A0C94BFD16FFA15252A0CEC94B7DFD07FF76A0A0C9
%4BFD13FF277DA876FD07FFA876A1FD08FFA176A0C94BFD18FF4BC9C9C927
%FD06FF2775A0757DFD14FF7D2752FFA84BA04BA8FD08FF4B75A0A052FD13
%FF522752A8FD12FF5275A0A04BFD17FF7D4B205127A1FD05FFA14B762727
%A8FD13FF52272F4BFFFFA827A8FD09FF4B76274BA1FD29FF4B7D27277DFD
%17FF4BA8FFA14BA8FD05FF27A8A8A84BFD13FFA1272F3552527D52A8FD09
%FF4BA8A8A827FD29FF527DA8A827FD17FF7D20A8A8A152FD05FF7D275252
%2752FD13FFA8275335363552A1FD09FFA827527D4B52A8FD28FF274B7D52
%27A8FD16FF27352E2E2852FD05FF272E2E062F272752FD12FF4B20353535
%2E7DFD09FF52062E282E06274BCAFD25FF7D272E062E2E2727FD14FFA82E
%352E275227FD04FFA827352E352E35527E4BA8FD10FFA84B275A355220CA
%FD08FF27352E352E3552A84BA8FD24FF27352E352E3552A84B7DFD12FFA8
%05277DFFFF7D52FFFFFF52272728052E277D7D7D52FD11FF7D4B274CA8CA
%27FD07FF7D4B272E272E277D7D7D4BFD23FFA8272752272E27527D7D52FD
%12FF522752FFFFFFA87DFFFFFFA852524B5227524B52277DFD12FF522752
%FFFFA8A8FD07FF525227524B5227524B52FD24FF27764B5227524B522727
%FD12FFA827524B7D27204BFD09FFA1A8A8A8FD14FF27274B4B27A8FD0CFF
%A8A8A1A8FD2AFFA1A8A8A8FD15FF76524B527DFD23FF7D7D4B52A8FDC7FF
%FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2014-12-15T11:31:51+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2014-12-15T11:31:51+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2014-12-15T11:31:51+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>128</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAgAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FUu1vzHoGhWwudZ&#xA;1C30+Fjxja4kWMu38qAmrt7LvikAlhOofnz5Mt5Gjs4ru+Ze/GKyWvj/ALkJLRyvuqn2rkTMNsdP&#xA;M9Elk/5yIsi9IrKziB+z9avblSB/lfVbG8UfQTv7b4PEDZ+Un3fj5rof+cgrYycXtNOlHX/Rr+6r&#xA;8gbzT7JK/Nqe+PiBTpJ934+bKdJ/N3ypeBPr3q6OJGVEnvPSe0Z26IL22kuLQMeytKGPhkhINMsR&#xA;DNgQRUdMLW7FXYq7FXYq7FVk00MELzTSLFDGpaSRyFVVAqSxOwAxV4f+eP5gfl7rnlaXTtN8xxza&#xA;vZSrdWsNok91b3DIpVoJHt45oSHRzx5GgfiTkJEOThxyu6sPBrSW3WGsdjaKkoVmjlsrYnbpVXjN&#xA;CK5RxF2vhRPRN7HzLe2ThoIbeEDoLWIWJHXo9j9WcdezYeMsDpoFlui/nL5ksWQfpC9hQH4keRdQ&#xA;hp7peh7lvou1yQyNE9EOj1Dyr+edvejjqsCTRCpe904SM8agV5z2D8p0UDq0LTqv7TKMsEwXDyaa&#xA;UXqVjfWV/Zw3tjPHc2lwokguIWDxujbhlZagg5Nx1bFXYq7FXYq7FXYqx7z7e6tB5U1UaDdx2vmB&#xA;LV5dO5ekzNIg5BVSUMpL8SoqKVwFlGr3eD6L/wA5GechEjXMtrdQ0FWktC0rU61aKe1RTXanpmmV&#xA;eI550QIsFmelf85FQyuiXumQPXqbS7KyH/Y3sVpAv/SR9OSGQNMtHMM00z82vJd4iNc3L6UHIVJN&#xA;QT0rdmPRUvFL2jn2SY5MFx5YyGYo6SIrowdHAZWU1BB3BBGFg3irsVWySRxxtJIwSNAWd2NAANyS&#xA;T0AxV8bfmWdHXz3fT6Prx8y2t87u15ylma2+In6ubhh6UsS1pGY3NBsRtU0ZPe7XSXW8fiksVjdy&#xA;/YiNPE7D8cqc1FJolwftuq/KpOKUQmhwj7cjN8gB/XFUwsLpNGZpLaUQM6lJQSGEiHqjo1Q6nupB&#xA;B8MINMZREhReu/k759sYRFpU0xi0q+dYtMjc8ks70lw1kCSWjhmRVe2V9uXONTsq5kQlbqNRh4S9&#xA;mybiuxV2KuxV2KsF/OfyrpHmTyVNbalq0WipbSLc295dSiO09ZAQqXIYqrRtX5g7jpgkLDZinwyv&#xA;m+V7W60pHmgeIzS2zmNpozzt5OJI5wyfAHQ0qDxr45jEU7vHPiF0i1v9L6G2p/sFORbFVbjRn6oi&#xA;n3Sn6hiq8WukyfZ4E/5LU/UcVVYLC2gmS4hLJJGweORXYFWU1BBBBBGKCHqf5T+bntddhhSQfVdU&#xA;uBa6naKQI1upY5JYL2NOiNKYGinVftMyP15Vvxyt1erwiO4e75a4LsVdirsVdirHPzE8qJ5r8man&#xA;oRn+qyXMYaC5JIVJoWEsbPT9jmg5j+WuAhlCVG3x1Fo+hxXNxY3ohj1C0kaO8hQRyASA0JWReaup&#xA;7MDvmMbDu8ZhIWAj4dJ0kLwt5Qg7KpUbn2AGBtAAbk0N/wDdcoPswp+quBLVqNd0yUzWUssLkcWa&#xA;ByOSnqrAfaU9wRQ4QWMog82V+SvzL1jy9cqlu62KM1ZLQq36OlJrX1LZB/ozGv8Ae2wHi0cmWRyO&#xA;Hm0gO4fR/k7zlpvmexklt1a3vbUrHqFhIQZIZHUOvxL8MkbqeUci/C67juBcC6yUSCn+Fi8Z/P7y&#xA;r+ZOuiH9FUvPKkMYe90u3cRTtKpLNJMrlFnjVQOKBuv7J2OQmCeTk6acIn1PA7TU9LEKvYRmWm3q&#xA;yKV3HgCP1ZjkO4jIEbL31e9bowQewH8a4EqK6ndSryWcsp6MpFNtu2FbU3u5mYK8zFjUhSx3A9sC&#xA;qbuqKzuwVVFWY9AMKksl07yt5s07TbfXbyEwaDrJFlIBUTQJMwSKeVKDjWTjJEa/C6p0JGQx5omR&#xA;iOjjZjY3+D608q6lPqnlfR9TuKCe+sra5mA2HOaJXan0tmcHTkUU0xQ7FXYq7FXxX+Y0nmmLznfW&#xA;nnO5lvtWtJCIZ5P7n0W3je2iHwRo60NEHWvL4gcondu203Bw2Ao6P5R846/pN1qmg6d9atLcuiu0&#xA;iI0skdOSRoxBalf4ddsxp5oRNEt5yHoEr1aLVdHmittTsZLe5nijngRgy+pHKKoyBgG9iGAKkEHp&#xA;k4SEuRUZfJqEzMlZVCMf2Qa7dt6DJNgt3rRer6PIerx5FO/GtK4pvovwKmflTULoaxDZoJIbPVGF&#xA;rDebqhuFdeEsLmi+paTNHICDsdulclE7uPmqQI7n2H5R1iTW/Kmi6zKoSTU7C2vHRdgGuIVkIH/B&#xA;ZlB0xFFNsUOxV2KtOCylQxUkEBhSo9xUEYq+LPPGr+cZ9ev9F85ardX93YTtFJDM3C1YrukqWycI&#xA;VEiEOp4dCMomS7bTwx1dJAk9srCKIfQgoMrpyhIcgrFlHUgYslaG7uIv7qQgDtWo+7pgVGxa3Ou0&#xA;iK48R8J/jilFJrVqftKyn5Aj9eKvQPyo8yrH5g064SUxrDdR6bcM2yvaX6TcEfr9i9jh9MnoZGX/&#xA;AHZl2Muu1sBzfSGXOtfK35yfmxqHmjWL3QLSZrLyzYTPbyWxJjkvJYWKO842YRBweER6/abegWmc&#xA;+gdlpdOK4i8wlu1DrGhpGv2ivt2GV05hmhy0t5cLCxIjILSAbfCO3zNcPJjvIpvp1ndX1wLLS7Z7&#xA;udaAxQgcYwehdtkRdv2jlU5iIslsvoFfR/J3my8unppM4u3co8k6NBEig0AV5QhZf9RTXIy1EAOa&#xA;Ig863et+SPyYt7WaLUdfcXdxGQ8VsARCjDcEKd2YfzN9Cg75gZtWZbDYJO3Pc/YnP5u6rYHyxe+W&#xA;linnu7y1+tOLQR1tba0mjk+tSF2QKiugpTcnoNjSWhB476ONnOz2ixs7exsreytk9O2tY0hgjHRU&#xA;jUKo+gDN66hWxV2KuxV2Kvj/APPPz9e+ZfMktjdaJFps2hTTWySHk17Iqkji71WP032dRwNOqvRj&#xA;WqZdhp8dC7Tr/nHiz1iPVr+5hu7d9Emtx9YtknVpPrPJfTcwbSRkLyUlgK7ddqavXSBA23cmHNF/&#xA;85C695ZaLT7NJlm8wafcc2SMcvSt5UKyLK4B4VPBqfa26UyOihLc/wAKTKiw4eTI7ZY5de8w6bpk&#xA;M0S3EEMEyyzywvQq6mX01VWrs/Bly86gn6Yktt95AS/RPy/86zW8ZttIknaekkl0Z7do2Ldw6yOW&#xA;UDYFQdsnLUwHVEAQOX3PQPLX5D39xKk/me7WO2Bq2n2ZYcx4PMeL08Qqr88xcmt/mhJ82TfmR5eh&#xA;utK8t+VPLUdvBqv6Wtl0+CMojWsS29y73HCoPposZLbfF0G9Mn2eDKRJcXUTp7bpen2+m6baadbA&#xA;i2soY7eEHchIkCL+AzcOqJROKuxV2Kqd1JLFbSyxRGaVEZo4QQC7AVCgnYVO2Kviv8zfzCHnvW4N&#xA;X/REOkyRw+i/pyPNLKoNU9VyI1+CppSMHehJoKUylbs8OPhHNiSuy14mldiRkG8FpFWWb02kEaAc&#xA;pXJANOwBPjTFQLKZ2r2prDZD1mWpaO3UytXuSEDGuQJrm2iURyW2lzLcj1gnC2YfuuX22/yqdh4Y&#xA;SmMr36K7yIhUE/E54ogBLMTsAqjcn2GBJICdJpfmjQJJW1K1a0Gq6Tez6bETRyYoHZA47SxzLDKF&#xA;7VTvXHFkEuTj5pWCC+1MzHTPAf8AnJTR/wAuLeJb6Yva+c7pOVslooPrqvwh7xCVUJ+yJPt7UHIL&#xA;xEJ05WnM725Pnu2trm5mWC3ieed/sxRKXY0FTRVFTlJIHNz1kWmXF/eRWVsjPd3Ei26QgkFpC3BU&#xA;I6faam/TEyAFoL6rg8iJZeWbPQtIvP0YIliiu72KJGmeJF4yCIt8EbyEfbKt32ruNF4tyMiLbbNU&#xA;GBectdm/LjUJ59O1sTrZ2trczaJq8hnlvhdTyw0tZQnqRtEICzfEV3FRtvm4MIzQJO3uacmWUSBz&#xA;eo+V9U1XVdIj1DUrFdOe5/eQWglEzLCVBQu6jjybc0Hald65gZIgGgbbQbeM/mB5W1uy8z3101vq&#xA;F88thqjTeZ5W528elvpMsf1SWOJUjVopeTKTQtUdTm20uWBgBsC4uWMrvo+qYHkeCN5E9ORlBdP5&#xA;SRUj6M2TrV+KuxV2KuxV5B+fP5X6DrGnP5s5PZ6jYeiNQmiAKzWfqqsjSDs0MbMyyeAoainGvKNi&#xA;RzcjBlINdGIa95XZ510VtI0y105pWsdHvNPilW+suYP1a4knr+8V5KesnEdd2bfNJDL1s31vkXaS&#xA;xGreZfmB+W2o+R4dOury7S7i1IMLmRCaRXYqzKvL42QpSjnuDULUDM7BqBksAcmuuFnn5D+YL4eX&#xA;fMdjHbrdtpMCXNhRQXdZVmK2zEUJXnEeH+sR0AzG1kBxA96Y7WgPyn8167qXmG6sPJEddDNrBc6t&#xA;+lhxjt9Qmatw9vHbBVCsS3GIcAeNdu9usx4wATzasJk9i87ajq+l+VtQ1PSWhF1YQtckXEbyIY4g&#xA;WkHFGRq8ASM12GIlIA9W+RIGzzv8hTFq3n66mN1Hrp0661S6TzR6IiluQ8dpbxoQw5qvGaTiv2RT&#xA;bYZ0GPGInbk63NIkbvpDLnGdirsVdirsVfOP5ofk5pUX5iQ3kEskWj6vDe6nf2duvKdZLQI0y21Q&#xA;VPrvOpCnoeVNqAYmqnwCx1c/SzMhXcwTzX5L02aBLrytp2pW93FJFDf6FdKJp1W4VjBcRmFpqozR&#xA;MjfEaHstDmNizn+Iiu9yiCHoX5afkta6XCdU8yQpNq868Y7aiOlvGaHiWowaQn7RBoOg7k4up1XF&#xA;tHkzhtuq+e/K3mWHQr4pqNrJaXJa3i0iC0mSaVJTwS3glR7hzNIDSvpEf5IG+DARKQABtM8hANnZ&#xA;A+Ufyp8heYNHh1K2nupYmrHNbyTSxywyxmkkMgjePi6NsfwJFMll1GWEqKYyiRYv5s10zyP5F8qQ&#xA;yaklrb2ot0LTX09Kog68pXq1Pm2Y0sk57Xa8QHLZLtPs7H8yvPul3MJmj0HyrCLy5jubeWB7me8l&#xA;V7YRiVVrFSyV2buPh/aNNxosXDDfvddqcm72zM5wmDed/Ink38y9MliNyhvtNmltYtTtSry21xEe&#xA;MsEg/aAb7cbU9qHfAQC2QyGBeW+WvIGu+SLzVtDF3DBrt8sNxY6tCgkaXT4nImEEcylVmRivqKeQ&#xA;HJT8W2avXRIIJ3j+l2WnyDJ5Mh8peTo312XzJrVus2uWzNBa6kAsf1iJkWk8sKBUE6hmiLKBVR92&#xA;DPN6eEcm8wos7zHV4R+cGqaFH+ZNna+cdKtr7RILJJ9PdHmhnJkkIYSyL8DAPE3wMQtCDyqSM2el&#xA;gTjPCaNtGQ77hPrz8+tM4Q2+macJbu4ZIraCS5SjM7BFAa0F0BUnbkV+YyH5AjeRT43cGeebl+vW&#xA;MflqH4r3zGxsUjHUWrU+vTN/kRW7Nv3ZkX9rBoMJlPi6BjqMlCnpmbx1TsVdirsVdiqyeCG4gkgn&#xA;jWWCZTHLE4DKyMKMrA7EEYq89uvImq6DBI+l+YbOz0O1QmM6xam5ayhFSQl0txbViRdlEtSB1egz&#xA;CyaCEjfJzIayQFPnf82vN2r+Zb3T4Y7Zb2HRUnhuNQ04m4sri4dlDTW7pzPplI1Ir9mpG9Kk6fRS&#xA;hZG4KZa/GJVKQEu4l2g2E6fkj5j1u1kkju7nUbVH+rSssi29tIiUcRkNu0smzDwOUZJfvgDypyR6&#xA;hsyXyn+ecGmWhs9R0+3t5ko0/wC6uLWd2PVmihgulkJH+7CyVP7IrtCeijPeMv0sp+JjPDOJB+T1&#xA;ryb5m/xP5eXWXtfqlpcNKIA78leGMlfV+NImVW4nZl6b5g5MPDPhG5ZCdizsj/ys0fTg2pa/p1lD&#xA;Y6ZemO00aOCNYY3srUu/rqihQBPcTyupp8ScDm+wQMYgHm6vPO5M/wAuaXYq7FXYq7FWMeevK97r&#xA;NraXmlSRxa3pUrTWJn5CCVJFMc9vNxDMElQ9QKqwVt6UNWbEMkaLbhymErYTb3UWiahHeav5fv8A&#xA;R5LxksZdSuGtpbVCWYxRtLDM54PI1EYp1YA0rmny6PJGPkHZjVRmfNl2YLawX8ytPu/MkcGgeXtY&#xA;GmebNOkj1iyY+oqhI+UFWkRW4/323U17UzK02TwzxkbcmvJHiFO/Lb8rdO8pWaXV641DzLL6j32q&#xA;M0jcnmYs/EOTvTYvTk3fwwajUHIfJMIAJT+d2hXl/p9rPZ6Jda+Zo57GSytZpVVZJ4yLW5eKM0cQ&#xA;S/EOQoK75dockRIgsM0SRszv8i9Ku7byTDf3zCS7vxEvqg8g0Fjbx2ULK3dZRbmYf6+bqAoOsymy&#xA;wXyR5A0rVbc+Z7uOGFtZD3YtreIxXNpNI5Y8NQDte8lataydeirTiNNqNTITNbV+OTsseMcO+6M/&#xA;Kad9Ev8AQGjvTczeaZr6112Gcj1vrsH1m89ZgAv7yHg1vJsKgp/KMzNNmkckgeXP8e9x9RjHAD3P&#xA;XvMHljRPMFtHb6rbesIX9S3mR3imhkpTnDNEUkjam1VYZnSiCKLhxkRuHgn523OmeVbnSLLTNbuJ&#xA;NQuDO8t7c6jLI9l9X9IoFijkiQPN6hHKVW+EEdzlePSYrqgE5tVljGwOI9ySaP8A85A61YosWpw2&#xA;mvotAbizlW3uaU3ZoR6iP/sOPyzFzdkj+CTPB2mT/eRMfu+aO88+ZvKHmvRrHVr/AETU4mhcx2Gq&#xA;WraZPRpdjGUe6PNSR8SsgK/5OYeHDMS4ARZ6bj9DthqPBHi9B7j9ij+Xv5NarqV5p3m3TLWP6meN&#xA;zp735itIeaMeE0lpaNdvIyMOQX1IqkbnM+OCRjwk7fNo1XaEckuIRA/qih8n0F5Y8oQaNLNf3Vy+&#xA;p65dKI7nU5VCH01PJYYI1qsMKk1CDqd2LNvmTCAiKDrZzMjuyDJsHYq7FXYq7FXYq80/5yJP/IL7&#xA;tKkepeWC1/Y2u42+P/J+H76YY8wxyGoS/qn7ngfliaKLy3FdzOqo3rXE0tfhHKRnY18BXNniPot5&#xA;fWRJzGI8h9gCl5e8/S6Va66s7xWsmoK850nVbQSW17CI/TSJJA0DqxQBWVmZd60+1mg1+KU8gkQf&#xA;1PZdl+HDBwiQJjz6si8qflBeee9Lh1u106O30pLh47SF9VmihkVAA7Q1sLucxFuSf367qadjiNNK&#xA;JNEfL8D7HLn2rPLjjGfFQ5A8x+n4W9t038tbqe2t7PX7uE6NbIkcXl7TY3gtGSMAIlxK7NLOgA+x&#xA;8CN+0jZPFpowN9XDyZzJncccccaxxqEjQBURRQADYAAdAMyGhdirsVdirsVdiqEvdX0qxp9evYLW&#xA;vT1pUj/4kR4Ypp8o/m753v8AWPNOuWMutXsuiPObGzttOmm+pvCkakj04D6cpJLFi4bcEdBl0IxM&#xA;d7cPNlyxnUOGgLN1+lV/Lr8777Sjb6NrJbW9M/u7TUIiBdxAbLHNHIVL+Ar8R6DkTQafWaAfVA/j&#xA;9DuNJq5S9MxUvxy73rTXfkvzmIhZ6iBqdmS9vJbyG21C2YijVjcCRQwHxJInFu4Oaypw5jb7HO2K&#xA;OsdH80QXMRn1/wCuWkZq8b2kSTOB2aSMqgH+rGMFg7CO68uZWXN7N5meTQfLcpmWUmHVtaho1tZw&#xA;naVUm+xJdFfhRE5cD8T0oA2w0mjIPFJxc+oFUHpNlZ2tjZwWVpEsNraxpDbwpsqRxqFRR7BRTNs6&#xA;5iF5+WVpbOLnyrey6HcqSWtiZLrT5Ax5cXtJJFCb9DC0Z+Y2zHy6WE+Y3b8eolF8u/mxpfnLTfO9&#xA;w3mkFb2RzJpl5ByS3eGNqobRq1X06jkK8lbc9amMMQxig5mOYmFDWfzn/NW/0N9HuNemWySP0Hkj&#xA;SJJpoyDvLOF9QtQ8SQwr3qct4iwOCI3TjR7nRYNBs9Qpb2kLwxszgJGAxXcbU3rUZucZiIg7B4XU&#xA;Qyyyyh6pGz5qdtY22p6hJfSWSJYNCYVSaMBrglg3qNGw2VQKJy33PtiIiRutvvTPLLFAREvVd7H6&#xA;fK/v9wWz+S9JKOtq09rG7eq9tDM6xPKEZFYqa0IDHdaZCWkhfEBu3Q7WzCPASJR8x+Pte1/kF+ac&#xA;Wt6Np/lfU4lttWtLKNrB4l4w3NrEigUUbJLGpAdeh+0vcLgSiRXm9BHKJk1ziaLKvzG/MeXyrJa2&#xA;djZRX2o3SNMRc3AtYIo1kSJecnCU85ZZQka8dzWpFMoy5hAbuVgwHJyYN5S/NzzNGYNc166XUfLt&#xA;0rR6lHFbpbzaZcLJxduAJZoYviWUMzOKcgSK5j49X6+GW3c5WXRejij8XuAIIBBqDuCMzXXOxV2K&#xA;uxV2KsK/Ne3fVvLkflO3WN7vzPMtihlXmkcKA3FxMRQ04RQng3ZytN6Y+9d6Nc3jOp/kl5k0tij2&#xA;s93piSGVLS2ZJrbkTyrwVRNx5fFxb4fbM+EsZ67dzz+bHqI78IMqriG5/HnVpde6fv6N7bbg19OZ&#xA;OhHejDMrYurBlA9QXuf5JIV/LHR9qBmu3X/Ve8mZfwOaifMvY4voHuH3M5yLN2KuxV2KuxV2KsY/&#xA;M7zO/lfyBrmuRtxuLS2YWjUBpcTEQwEg9vVkXAWUBZp8JWmnazreqCCytbjVtTumeSRYo3ubiQ0L&#xA;O54hnbxYnKnPNBl2k+TNas/KN7rOo2NxHbMJksxJGyoEjbjcgVH2maNl4+3vmdgj6CS8/wBoZCM8&#xA;QBQNWe89Pl+OSd+YfLGnaxarNHDGblFBhb7KyJTaNmXfiR0I+z27g5eXCJjzdNpNbPDKiTw9fLz/&#xA;ABzT/wDJrynomvefbNtX9TWYGsrmQ2moBJPSktPRt1VwFHIxcytWqOVG675gTwwhEcPI29Bp9Xky&#xA;zlx1cQNxe4L6CX8rfINaSaRHcRAgi3uXluIBT/imZ3j/AOFykRAcs5D3smtra2tYEt7aJIIIhxjh&#xA;jUIigdlVaADJMFTFXYqlXmbyp5e8z6W+l69Yx31kxDBHqGRxsHjdSrxsK/aUg40kSI5MT0n8g/yo&#xA;02cTroSXcq9Pr0s12n/IqZ3i/wCFwcIZnLI9UsPk38utK/NXTILWws7GaO0vNUnEhB5T3MqQQLEs&#xA;pKotPrDcI6CtDTJAE8ujVKcQNyPV9rNb3yF5OvSTPpMAJ6mIGEn/AJFFMsGaY6uNPRYZc4j7vuS8&#xA;flP5H5V+pORWvH1pafL7Vcl+Zn3tX8mYe77S+JvLPm3zH5X1nTtesZnh1HT44xDHIpCPAyCkTpty&#xA;jlRh86hga0OYpmS7qGCABrqb+LN/MX56ar5i82Lq2r6dbjRDbtYy6Qo9Qi1kYO5aVgvqSAioqAtN&#xA;gBWuY+fHxjbYjk36f9353zegeVvKvm+/t77RtA0uRtBvebQa3qSS2gh+sk+oGjmCy3QQGqMg32Un&#xA;9rMaOklMiUtm6erhAEDd9E6dZR2Gn2tjGxaO1hjgRm+0VjUKCad9s2jqCURih2KuxV2KvHvN35hN&#xA;pn5ru0dul5baHYiyaNiVKz3xS4nKNuAfSSDsep8cvw4OMEuBrdd4JiALvn+Pmy3TPzc8n3igXEsl&#xA;jKf2J4yRX2aPmPvphlppjzY4+1MUufpTkedvKBiaX9M2YRRyPKZFNPkSDlfhS7nJGrxH+IfNB/lg&#xA;jD8u/LkjjjJcafb3UgNah7lBM1a96yb5UHKlzZPhYuxV2KuxV2KuxV4z+fWtWGpz2nkW5mlhsrmI&#xA;ahqktrE89wOEoFrEnBJgnN1ZmLL0Wg65janKYDbm5mjxCRsvJvLEml+SLu517yrfNqdxeWU2m25u&#xA;IZImie7dEiuIHKpHIYpVXmn8tdxTevTZZynwkblu1kIRxmd7R3fSfkvWPJNx5estD0qeM21rbpar&#xA;YXAVZSiKFo6N9uv7RFQTmxnilHm6TFrMeXkd+586fm55L85+Q7WKO0aH/Dlzcy2thfxMzXEcdPUg&#xA;ilDAKjenyQMC1eBPw1GE6mQjQTj7LxTymct73rolf5FfmHonkvzFNca6LmS0S0ntraaCMy8WuJoZ&#xA;ZFIJU0Bt61FdzlAybUXYz0gEjKI3NX8H0BZ/mhqnmw3EvkdbRdJtmWB9W1KOclrgosjpHaKbd6Rq&#xA;61Z3Wp+zUbnE1GsGM1Vllj0pPNU/LPz9qV3ENP8AOc7WfmG+ndrC0uLVrRDCFAWKOTeKWT4Wcqrl&#xA;hWm4HLL8WaM+RsteXEY9Nno+XNDsVdirsVfOP5j3xv8A8ytek5cksha6dEf8mKATsPolunGZ+jGx&#xA;Loe2Z+qMe4X8/wCxLrTXNbs1C2eoXNuo2CxTSIPuUjMkwB5h1Uc048iR8UXJ5y82SLxbWLzietJn&#xA;H6iMj4Ue4Nh1eU/xS+ad6h+Rml+fPyx8n6nYSppnmSLQ9OT62VJiuEFpHxjuAu/w/suNwNqEUpp+&#xA;G3thkMSUx/LH/nGrQfLdxFq3mSZNb1iI87eEIRZwMOjBG3lcdQz0A7LUVxEUTzE8ntGSaXYq7FXY&#xA;q7FXYq+S4NYj1m81HVvUDTahe3F1LHX44xJK3pxOvVTHGFSh32zZ6YDgeZ7UMjmNihyCIy91yB1y&#xA;4Nvo19OPtR28rL8whp+OQyGok+TfpocWWI75Bryb+YHny4/L+8TUNZmh0PQRHBYtDIbSWRiFVYpr&#xA;uIrMIoPhoEKseVCxAAzms+eQkIx5l9ExaaNGRepfld5+80tqem6XdSrqug6vdXcOlXNw0jX8UEEU&#xA;kqSvMxYTxP6B486PR1+JumS0+oMjwnmA1anTCI4xye05mOA7FXYq7FXYq8y86+T/ADPH5oute0Wz&#xA;GrWuoxQpd2SzRw3MUturIGi9YxxOjpSoLqQRXeu2Fq9KclEc3P0mrGMUXjXmLRJ7LzZbWFxo8+iP&#xA;axNqE1o9yk0LtcFooXWKCaaBCKTV2Br7Zl9maaUZky3p1fb+ticIjH+I/crZvHjV+q3N9qmjT6Ne&#xA;Xk8mnTgcoDIxVWUhkZVaqhlYAg0yueGMhuHKwazLiIMSdvkx/wAqfkj528z21/c6TcWElvp9z9Ud&#xA;7iWWGR3EUcx4osUy7LMvVhvmnyYeGRFva6btAZMYkRVvUvIPlvzP+W2jXthr+lXF3Bc3TXw1DSVa&#xA;+iRWhiiMckaAXIZfSqSIiu/XbNbq9JOZsdzl49TEu1HSdB/MnzTo66Le38ttAjnWNR0+QxQW0SKZ&#xA;Lfk0oaNbtbgqY1EZcDkW40U4NDhmCeIbI1GQAbc3u+bV1rsVdirsVfG/5leaLny7+ZfmfT441v4P&#xA;rzXCu5MUnK5RJmQkeoKRmTgu3QZdj1RgKpxdR2SM54+Kikg/M+2A/eWDq1CaCQEUHvxGXDXDucGX&#xA;YExykFO6/MkSQskGnmrqRykloBUeAU1wS1w6Bsx9gSuzL7H1h+S/mnSPMP5c6NJpznlp1tDp95A1&#xA;OcU9tEqMrU7EAMp7qR8swwXbzjRZvhYOxV2KuxV2KuxVAa/q8OjaFqOrz7w6dazXcg8VgjMh/wCI&#xA;4pAsvgD0JpJTeSTP9ekJklnrRzI55Oaih3Y5SJEHZ2UsEZCiEV9f87Wdml+st6NJeY20V/IrvA0q&#xA;qXaNZZAylwB9mtdjl0dRMdXX5OztPI1wj4bKlr5v1T67aPq8rajpkU8Ul7YMsaCeGORXkiJRU+2o&#xA;phlqJkUSsOzMEDxRjR+L6Q138qJUsbPVfIXpXvle5ntdVGgKAr8KK/KylkdEKv8ADJ6chG9eLb8c&#xA;w82mErkOdOZg1Zj6ZcrZF5E8seYJ/NEeu6tp8mlWWnQSxWNvO0TTzT3HEPIyxPKqRoilQC1WLVoA&#xA;BWGk0xx2TzTrNUMgAi9OzOde7FXYq0zKqlmIVVFSTsABiq2C4guIUmt5FmhkFUljYMrDxDCoOKr8&#xA;VfKf/OTGsyr+ZcEWkSC2urLT4lvp49mkkld3RJAaqwSPiVqP2sHimJ2LbHSQzRqYt5vF+Ymu2vw3&#xA;cMNwBQdDG5JNOoJX/hcyI62XUOvy9gYz9JI+1HRfmeroWbTCDuBxmBFQadSi7ZZ+eHc4p9n5dJ/Z&#xA;+19J/wDOOOr6PqX5fGSzlU6gb25l1a2r8cUsshMStXqPQCAMNjT2IGLKfESXaQw+FEQ7g9TwJWRQ&#xA;QRFzFGsZlYySFQBycgAs1Op264qvxV2KuxV2Kvhv8ypRcfmN5plYAn9KXUfj/dSmP/jTKJc3aYB6&#xA;AyP8k/yk8t/mBda/HrD3EK6fBbCBrVxGQ90ZhyIZXDU9DJQFtOonwkUwXz95G1jyT5ln0LVKSMgE&#xA;tpdoCqXFuxISVQa06EMvZgRv1xIpMJ8QZV/zj957m8rfmBa2sslNJ15ksL5CfhEjmltN4VSRuJJ6&#xA;KzYYljmhYfaOWOE7FXYq7FXYq7FXl/8AzkjrU2m/lbeQxK9dVuILB5UG0cbt6khc9ldIjH82AyMj&#xA;s24Bcg+R5HVEZ2+yoJP0ZS7QvrOH8pVvfyGtvJdxEI9V+pC6jL0Bi1NybndiDQCZyjf5FRl1bOrO&#xA;T12+OCrqxSRSkikq6MKFWBoQQe4OVua+t/8AnFrzW+reQZtGuJOdzoFwYYwak/VZwZYak+Deog9l&#xA;GWRLh5o0XsuSaXYq7FXYq8x/PnzM+neWo9Hgo02rc/XjqRztoyiGM034zXE8MMn/ABWzntjVmgkS&#xA;EQZHkHlf5c6R5lg80WOm+T7/APRuoyJJdalcOC9o8ERUSvcWoKrIXklVF48WFfhYAZlajHGEQBzd&#xA;V2fqcuacpSPo7vup7Wn5n6fpOpx6J50WPQdWeMyxXBkElhPGGCerHPsYl5ECk6pvsC3XMTirm7fg&#xA;vcPkrzt5i/xJ5y1rXlfnDf3cj2r0pW2jpFb7f8YY0ymR3dlhjUQn35QflhY/mD5muLHU5J4dK062&#xA;NxczWzKsnqyMEgTk6uByo7dP2cMBbVqMnCAx78zvy31PyB5kbSLkmexmUy6VfUoJoAaUPYSR1o4+&#xA;R6EYSKRjnxBF/k3+YE3knzxZ30kpTSL1ltNYjJ+AwO1BKR4wsedetOQ74xKMsLD7ky1wXYq7FXYq&#xA;7FXYq+PPNH5YecdQ83eZLqwhhvYG1e9Pro5UF5JTMwoy7cTLxO53BzBzaiEJUXbaeJMBT1v/AJxm&#xA;8o6houk6/fX4VJ7y8W09JSWK/UQ6tU0A/vJWG3hmThlcbHVwtUfVXcnP/OQX5fWfmryPPf8AqJba&#xA;j5fjmv7e6cVBhjjLTwtT9l1QH/WUe+TkGrFOi+fH/Jie109NRudXqoMLejBCVf8AeOo+GRnPEjlt&#xA;8Oa6Gs4pCIDtp6eok2+0s2bpXYq7FXYq7FVk00MEMk88ixQxKXllchVVVFWZmOwAHU4q8x1a6H5g&#xA;3EVVZfJVq/qwIwodTnQ/u5ipH+80TfFGD/eNRqcVXlq9bq69MXYaXBXqLD7D8nfJt9+Ydja6da1t&#xA;dMYX2vIhcQIAK2tsU5GNXlko5VQP3amv2lyWhM5by5M9XkiBQ2L6BzZOsfNn5kfkx5Uk/Mi5KTXk&#xA;EeqW76pPFFJHxFxLcOJOPKNyFatQK7GvbYYOszHHVdXZ6KHiAg9GZ/kL5a0ry7q3mjT9ORhGU06V&#xA;pZGLu3IXAoSewKk7eOT0eUzjZatdARkAHsGZbguxV2KuxV4Z+Yuiaz5y/NN9G0yeGGTTrNZY1uOX&#xA;pE2qB3DcPiX1G1WHejf3fQ0wwnwytGbEJ4jEmr/H6EJ+VPl/z3Lr+p61pq22nNpIm0e5gv0aaO5u&#xA;FmRp443hdSixGIASjkCTTiaGlufLx1TiaHRnAJCRuynzajeaVreual520uTS31SSNI79a3mnraQw&#xA;JGkP1pFHpr6hlf8AfpHUsc0muw5JGxyDvdNkiBV7vHfOn5Z6NaJLqnl3WLR9PlatvacxKjM32Y7d&#xA;4fUYljssfAmvTagwYdRInhkDblyjGrBe9fkT+Xd55N8oyfpVFTW9Vl+tXqKeXpIFCwwFuhKLUn/K&#xA;ZuozaRFB1GbJxSTH83/y6tPPXlGXTmkjtb+1dbnT7+UErC6fb5cd+Dx8lb6D1AwkWxxz4S+VoPyi&#xA;vZPKp1661OOGM2JvvqwhYtQw+rwZ2dQp7E0Oa06wcfCB1p24054eK+j7S0KD6voenW/N5PRtoY/U&#xA;kNXbjGByc0FWNN82bpijsUOxV2KuxVLfMmu2ug6FfaxdAvFZRNJ6S/bkfokSeLyOQijxOKQLLyfS&#xA;9R8xeTvKkh8xeXb9ruEz3uoXlu1rNBPcXUzTSMj+sHq8ktFVlB7Cu1dRn0eSczLbd2OPUQAp6X5D&#xA;0O60XypY2d7T9Iyepd6jx3H1u7la4uAD3CyysAfAZtYR4YgdzgZJcUiUj/OO6uZvKj+WtPKHVfMr&#xA;GwgR2KqIKc7uR+ILBFhDKSB9plHfCUQIBs9GBWll5h1PzXoXl/UdMW0jnulvrmaO4SdDb6a6XDUA&#xA;CPxeURRkso+3mvwaEwnZLss2ujOBAD3jNi6t2KuxV2KpJ50836T5R8u3Wu6oW+r2wokKUMksjfZj&#xA;QEgVPvsBUmgBOKQLeO6Z5/fzP5strf8AMGSC18s3ClrPTI2K2K3aOrQpfStQz1WvHnxj5gfBXjlu&#xA;XAYAEuJpddDLIxjsR9qeWen61Hr1z5P8l39vcaHbqGk1N1Mh0ZZKMtohH7q5bg1YUqDGtOfJeNdX&#xA;k0MZT4vm7eOpIju9M8t+WdJ8uaaNP0yNlQs0txPIxkmnmf7c00jfE8j9yfkKAAZnRiAKDiSkSbKa&#xA;4WLw/XrvzFrfnHVtf0iwi1DSIgukWh9cQysLB5DNLGHUxujXE0iA8x9gdsw9Vpjlqjyc7S6qOLY9&#xA;WWfktaXMujal5guoRBLrV4xgjDcqW1ooto/iFKh3jkkU9wwy3T4vDhTVqsvHO3omXuM7FXYq7FWE&#xA;ah+W1zL5tvvMWm6/c6VLqcRivI4YoJGHKOCJmhklV/TJW0j6q1N6YKZ8W1Mr0bR9P0bTLfTNPj9K&#xA;ztV4RISWbckszMxLMzMSzMTUk1OFiTaMxQl0Plry5Bf/AKRh0qzi1CpP1xLeJZqnr+8C8t/njSbK&#xA;Y4oYn+aGqXNn5QurOxIGra1/uK0z2mulKtJ8oYg8p9lwFlHnbyWfR/MVwdK8o3elR28OrTRac89v&#xA;crLH9VRS90UVljkp9WicfEo3IGa6GhMZ8RNh2cu0IygQBvT6GzZOqdirsVdirsVeM/8AORGu8Bom&#xA;h/WJLeAvJql5LC7xyD6qVS1ClPiqZ5ea8d+SDLcUQTvyDjarLOEfR9cjQYxeWf583em2Wp3dpqep&#xA;6Zptzbaimk3badFLOtpKs4EkMSR3Df3eyu3PlQ8a4J8HS2eHxrHHwfC30Do2rWOsaRZatYP6llfw&#xA;R3Nu5FCY5VDLUdjQ7jK24h8vfnD5vXUfzMvp3vnsk0J/0fpUqyvbsjIP9JdXBX4nlZkah3VRXLsU&#xA;YEepw9XPMCBjBrrtaTaB5q8yp5osbnSPMrx6xdt9TN7dzpcQrb/3sokjl5JwVYyaLxJam9TkssIA&#xA;bc2GlzZpTqQ9Ndz6K8k+fL2/11vLuq3FjfXhtXvLPUdOYqkscLpHKssBeX0pFMyEUkYMCfs0pmO7&#xA;CtrZ5ih2KuxVJPOnlmLzL5cutKZxFM4ElpcMOQiuIzyicr3XkKOv7Skr3xKYmi+XQJNNnfRL+3db&#xA;qOQ21vY0aaZnDBTagbmWSNnVR/OhSTo+ZuDUDhqXR0mu7On4olj5S+wvZPybn1fyxbjyp5i0SXRP&#xA;r91PcaFO5t2jn5r60kD/AFeSURzJR2VWpVB/k5hzIMjXJ3GKEhACRuQG71nAyYd+bnme78t+QNT1&#xA;CxYpqMoS0sXFSyS3LiISKBWpiVjJT/JxX7XyvputtY2Tabpmtz2lp9l7SC7eMAnrQBuSFup40rmX&#xA;wY+/7XUHPqRzB/0r0z8rPOfnWx0Jlt9e02bSLAi00vR9UKLIYoF4sq3MRR4lrRULpJ06UpmNMAHb&#xA;k7TDKRgDMeovevLOvWvmDy9p+t2qlINQgSdY2oWQsPiRiNqq1VNMi2EUUzxQ7FXYq7FXYq7FXYq7&#xA;FXzL+fvm0Xf5gDT5bprS18tpGttIHaGl5cIlxJKsoK/EsTxKN9vi/my3EIm+JxdXLLEDwwfPa2HW&#xA;fmvzIutWN/p3mKY6yri1sbme4SWKIXJVX5pKHi4UAZyVrQeNMsyQgBY+9o0+bPKYEhQ67Pofyh5/&#xA;1OTzBaeXtZvNP1V7+KQ2Wp6d+6PqQJzeOe3Mk4XknJldXpsRxG2YzsuYeiYodirsVdirzj8yfysv&#xA;fMmv6d5k0u7WHVdNRI4YpWMa1ilM0ciSencxq4c/7st5R0oARXAyiR1CDfS/z3mQQHUIYVIKmZbm&#xA;0VxU9S/6MlBoOnGIfRjuyuLOPJPl6by75W0/RZ7n63NaIwkuAvEMzuzniCSaDlQVNaYQwkbKD1H8&#xA;s/JOoXc93Npxiubpme4ltJ7i0aR3+07/AFaSKrHu3XFeIpTN+R/5fSSep9XvQ9KFm1G+lJ/5HTSU&#xA;+jBSeIpl5a/LDyf5c1T9K6bbTDUPSaBZ5rmebjFIVZlVHcxipQfFxr740pkSyvCxdirsVdirAPzE&#xA;/K1fMV3Drej3X6L8x2vEpcqSiymOvplnQFkljBISQBtiVZXQ8cBDOM6S+y0H84NR1jRV8xT6d+iN&#xA;OvEvbiSJudwxiRwoDLFCjVZgPsJt9xd03Ho9PwtaC1jRNJ1qxax1W1jvLRirGKUVAZTVWU9VYHoR&#xA;vikGmMXH5PeQbgUktLwJTj6cep6lGlPDglwq0+jBSeIoMfkX+X9OJhvCvQj67c1I+Yev440vGWZ6&#xA;Loum6JpVtpWmQ+hYWaenbxF3kKrWu7yF3br1JwoJtG4odirsVdirsVdirsVdirHNV/Lrybql9Nf3&#xA;Wncb65INxdW0s9rJIVUIC727xFjxAG/hiniKTTfkj+X0rh/Qvg4HHk2pX8tR1p++mkp9GCk8ZRug&#xA;flR5L0LV4dXsbac6hbBxbyzXM8gT1FKPRGfgSVYipU+2NKZFl+Fi7FX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:F946D21B1384E411BCEDA968A3005EC0</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:F946D21B1384E411BCEDA968A3005EC0</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:F846D21B1384E411BCEDA968A3005EC0</stRef:instanceID>
            <stRef:documentID>xmp.did:F846D21B1384E411BCEDA968A3005EC0</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F846D21B1384E411BCEDA968A3005EC0</stEvt:instanceID>
                  <stEvt:when>2014-12-15T11:31:40+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F946D21B1384E411BCEDA968A3005EC0</stEvt:instanceID>
                  <stEvt:when>2014-12-15T11:31:51+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>400.000000</stDim:w>
            <stDim:h>200.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Web Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -166.669 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 166.669 li
340.732 166.669 li
340.732 0 li
cp
clp
[1 0 0 1 0 0 ]ct
70.9561 159.77 mo
74.916 159.939 78.6357 159.91 80.7461 159.52 cv
80.8164 160.51 80.7461 161.37 80.666 161.689 cv
76.5059 162.36 58.1465 161.77 55.4766 160.439 cv
55.5059 159.62 55.5957 158.85 55.7158 158.12 cv
55.876 158.149 li
58.2061 158.75 64.876 159.5 70.9561 159.77 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.181369 .0870985 .113436 0 cmyk
f
74.8457 153.34 mo
77.0762 154.03 79.0859 154.729 80.0059 156.36 cv
80.4863 157.22 80.6953 158.45 80.7461 159.52 cv
78.6357 159.91 74.916 159.939 70.9561 159.77 cv
70.9766 159.439 li
70.9766 156.11 73.3359 153.689 74.8359 153.36 cv
74.8457 153.34 li
cp
f
71.2461 144.93 mo
70.2754 147.57 69.2559 150.01 69.0459 150.689 cv
69.0254 150.68 li
66.2754 152.43 60.2559 151.8 59.5059 149.3 cv
59.3652 149.229 li
60.4453 147.05 61.5156 145.149 62.3066 143.149 cv
62.4658 143.21 li
63.7959 145.21 68.9658 145.71 71.0459 144.86 cv
71.2461 144.93 li
cp
f
44.0664 161.85 mo
44.1563 162.899 44.126 163.71 44.0859 163.86 cv
42.7559 166.86 29.5859 167.28 26.2559 163.03 cv
26.2754 162.33 26.3262 161.64 26.3965 160.99 cv
26.7559 161.03 li
27.4258 161.56 28.1953 162 29.0254 162.35 cv
34.2363 164.57 42.0156 163.59 43.916 161.86 cv
44.0664 161.85 li
cp
0 0 0 0 cmyk
f
43.7559 160.03 mo
43.7959 160.02 li
43.9355 160.649 44.0156 161.29 44.0664 161.85 cv
43.916 161.86 li
42.0156 163.59 34.2363 164.57 29.0254 162.35 cv
29.0859 162.2 li
30.0859 155.28 42.2559 153.11 43.7559 160.03 cv
cp
f
42.4961 145.649 mo
41.4961 147.75 40.4063 150.01 40.1758 151.26 cv
40.0859 151.24 li
38.1465 153.05 31.7754 152.93 29.7559 150.03 cv
29.6152 149.96 li
30.3857 148.35 31.5156 146.3 32.5664 144.05 cv
32.7363 144.13 li
34.2363 146.3 40.0664 146.86 42.3965 145.61 cv
42.4961 145.649 li
cp
f
74.8359 153.36 mo
73.3359 153.689 70.9766 156.11 70.9766 159.439 cv
70.9561 159.77 li
64.876 159.5 58.2061 158.75 55.876 158.149 cv
55.7158 158.12 li
56.3457 154.55 58.0156 151.97 59.3359 149.3 cv
59.3457 149.28 59.3555 149.25 59.3652 149.229 cv
59.5059 149.3 li
60.2559 151.8 66.2754 152.43 69.0254 150.68 cv
69.0459 150.689 li
69.0156 150.77 69.0059 150.83 69.0059 150.86 cv
70.7158 152.11 72.8652 152.72 74.8457 153.34 cv
74.8359 153.36 li
cp
.823453 .403418 .425788 .104005 cmyk
f
40.126 151.689 mo
40.5156 153.79 41.2559 154.61 42.916 157.53 cv
43.3359 158.26 43.6152 159.14 43.7959 160.02 cv
43.7559 160.03 li
42.2559 153.11 30.0859 155.28 29.0859 162.2 cv
29.0254 162.35 li
28.1953 162 27.4258 161.56 26.7559 161.03 cv
26.3965 160.99 li
26.8066 157.12 27.9453 153.99 29.0859 151.149 cv
29.2266 150.79 29.4063 150.39 29.6152 149.96 cv
29.7559 150.03 li
31.7754 152.93 38.1465 153.05 40.0859 151.24 cv
40.1758 151.26 li
40.1465 151.42 40.126 151.56 40.126 151.689 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
63.5859 133.01 mo
66.3359 132.899 71.0859 132.41 73.1357 131.399 cv
73.166 131.46 li
73.5059 133.71 73.416 137.899 72.5059 141.13 cv
72.166 142.33 71.7158 143.649 71.2461 144.93 cv
71.0459 144.86 li
68.9658 145.71 63.7959 145.21 62.4658 143.21 cv
62.3066 143.149 li
63.2559 140.79 63.8262 136.29 63.5859 133.03 cv
63.5859 133.01 li
cp
.0797436 .400244 .584497 0 cmyk
f
45.3652 134.08 mo
45.3965 134.18 li
45.1465 137.43 44.7061 140.82 43.1465 144.24 cv
42.9355 144.689 42.7158 145.17 42.4961 145.649 cv
42.3965 145.61 li
40.0664 146.86 34.2363 146.3 32.7363 144.13 cv
32.5664 144.05 li
33.8066 141.399 34.9258 136.479 35.166 133.7 cv
35.1758 133.67 li
37.8066 134.439 42.0957 135.05 45.3652 134.08 cv
cp
0 .167361 .439734 0 cmyk
f
53.8359 106.77 mo
53.8359 109.54 53.0859 117.52 51.7559 119.74 cv
51.7559 119.91 li
49.9766 119.91 47.8359 119.899 47.8359 119.899 cv
49.2061 117.28 50.0859 109.229 50.0059 106.85 cv
50.0059 106.649 li
51.3262 106.649 52.6055 106.649 53.8359 106.649 cv
53.8359 106.77 li
cp
.498634 .76672 .682032 .673518 cmyk
f
73.9766 130.77 mo
73.8066 131 73.5156 131.21 73.1357 131.399 cv
71.0859 132.41 66.3359 132.899 63.5859 133.01 cv
62.6357 133.04 61.9258 133.03 61.6465 132.979 cv
60.1855 128.91 54.8164 121.53 52.0156 119.91 cv
51.9258 119.91 51.8457 119.91 51.7559 119.91 cv
51.7559 119.74 li
53.0859 117.52 53.8359 109.54 53.8359 106.77 cv
53.8359 106.649 li
58.0156 106.64 61.4658 106.6 62.7559 106.53 cv
63.166 111.38 li
64.6758 113.26 71.5361 120.67 73.9766 130.77 cv
cp
f
50.0059 106.85 mo
50.0859 109.229 49.2061 117.28 47.8359 119.899 cv
47.0859 124.729 47.3359 129.14 46.3359 133.74 cv
46.0254 133.87 45.7061 133.99 45.3652 134.08 cv
42.0957 135.05 37.8066 134.439 35.1758 133.67 cv
34.5361 133.49 33.9961 133.29 33.5859 133.1 cv
34.7559 123.12 34.0859 114.78 36.5859 106.53 cv
40.3652 106.6 45.3555 106.64 50.0059 106.649 cv
50.0059 106.85 li
cp
.433509 .775906 .674159 .526574 cmyk
f
47.8359 119.899 mo
47.8262 119.97 47.8164 120.05 47.8066 120.12 cv
47.6953 120.1 li
43.626 116.939 37.5566 117.41 34.7266 117.88 cv
35.0254 114.41 35.5156 110.06 36.5859 106.53 cv
40.3652 106.6 45.3555 106.64 50.0059 106.649 cv
50.0059 106.85 li
50.0859 109.229 49.2061 117.28 47.8359 119.899 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
45.3652 134.08 mo
45.3965 134.18 li
45.3262 135.05 45.2461 135.78 45.1357 136.46 cv
42.5957 137.71 38.0361 137.52 34.8164 135.899 cv
34.9863 135.16 35.1055 134.42 35.166 133.7 cv
35.1758 133.67 li
37.8066 134.439 42.0957 135.05 45.3652 134.08 cv
cp
.0797436 .400244 .584497 0 cmyk
f
80.2334 161.247 mo
75.5 161.839 59.2041 161.206 55.9932 160.111 cv
56.0195 159.63 56.0674 159.168 56.1309 158.72 cv
59.4561 159.477 68.6484 160.368 75.2832 160.368 cv
77.2461 160.368 78.9814 160.289 80.2754 160.106 cv
80.2793 160.565 80.2627 160.971 80.2334 161.247 cv
cp
58.9531 151.133 mo
59.1152 150.822 59.2715 150.515 59.4297 150.205 cv
59.8545 150.777 60.5303 151.256 61.4561 151.6 cv
62.4287 151.962 63.668 152.17 64.9297 152.17 cv
66.3125 152.17 67.7051 151.901 68.8262 151.333 cv
70.2363 152.339 71.8711 152.927 73.5039 153.441 cv
72.0293 154.452 70.5547 156.608 70.4863 159.252 cv
64.8418 158.981 58.8066 158.317 56.3086 157.738 cv
56.8359 155.185 57.9043 153.13 58.9531 151.133 cv
cp
62.4902 144.005 mo
63.7549 145.189 66.248 145.762 68.4043 145.762 cv
69.1641 145.762 69.873 145.686 70.4805 145.546 cv
70.0674 146.646 69.6592 147.685 69.3242 148.536 cv
68.9609 149.456 68.7559 149.984 68.6406 150.313 cv
66.9766 151.297 63.9531 151.462 61.8047 150.663 cv
60.8105 150.293 60.1621 149.757 59.9824 149.153 cv
59.9805 149.148 59.9766 149.146 59.9746 149.141 cv
60.2285 148.638 60.4805 148.14 60.7266 147.66 cv
61.3652 146.416 61.9668 145.223 62.4902 144.005 cv
cp
64.0977 133.476 mo
66.4023 133.356 70.4023 132.988 72.7422 132.097 cv
72.9922 134.287 72.7773 138.333 72.0215 140.994 cv
71.7188 142.063 71.3223 143.233 70.9072 144.384 cv
70.8896 144.39 70.8721 144.388 70.8545 144.395 cv
68.957 145.173 64.123 144.69 62.9082 142.975 cv
63.7422 140.783 64.2422 136.425 64.0977 133.476 cv
cp
62.0098 132.512 mo
60.3457 128.227 55.2354 121.333 52.4043 119.568 cv
53.6035 117.027 54.2754 110.079 54.3301 107.146 cv
58.0273 107.135 60.873 107.101 62.2959 107.051 cv
62.6719 111.424 li
62.6797 111.522 62.7168 111.616 62.7793 111.693 cv
62.998 111.968 63.3291 112.337 63.7422 112.798 cv
66.2109 115.548 71.3213 122.242 73.4238 130.634 cv
72.0977 131.812 65.8018 132.525 62.5938 132.525 cv
62.3281 132.525 62.1406 132.52 62.0098 132.512 cv
cp
46.7363 126.049 mo
46.5684 128.556 46.4102 130.928 45.9023 133.376 cv
44.6982 133.844 43.2129 134.08 41.4824 134.08 cv
38.7148 134.08 35.7393 133.438 34.125 132.787 cv
34.5059 129.422 34.6816 126.389 34.8516 123.452 cv
35.1699 117.958 35.4453 112.195 36.957 107.037 cv
40.3691 107.098 44.9092 107.137 49.5059 107.146 cv
49.5234 109.812 48.6426 117.287 47.3936 119.664 cv
47.3857 119.679 47.3867 119.694 47.3809 119.709 cv
47.3652 119.745 47.3477 119.78 47.3418 119.82 cv
47.0088 121.969 46.8701 124.043 46.7363 126.049 cv
cp
42.6934 144.03 mo
42.5273 144.396 42.3398 144.788 42.1582 145.175 cv
40.0371 146.308 34.5703 145.748 33.1895 143.9 cv
34.3057 141.471 35.2676 136.864 35.5879 134.302 cv
37.2813 134.745 39.4131 135.08 41.4824 135.08 cv
42.7227 135.08 43.8389 134.95 44.8457 134.72 cv
44.5869 137.526 44.1094 140.932 42.6934 144.03 cv
cp
39.7754 150.854 mo
39.7656 150.862 39.7539 150.864 39.7441 150.873 cv
38.8779 151.684 36.8145 152.094 34.7227 151.877 cv
32.6719 151.661 31.0488 150.915 30.2344 149.831 cv
30.5225 149.242 30.8525 148.6 31.21 147.905 cv
31.7012 146.952 32.2217 145.934 32.7305 144.876 cv
34.0205 146.118 36.6172 146.773 38.9805 146.773 cv
39.9141 146.773 40.7959 146.661 41.5566 146.454 cv
40.7646 148.133 40.0586 149.699 39.7754 150.854 cv
cp
41.5039 156.104 mo
41.5371 156.161 41.5781 156.229 41.6123 156.287 cv
40.4766 155.615 39.0576 155.257 37.4277 155.307 cv
33.7539 155.435 29.5635 157.692 28.6924 161.635 cv
28.1064 161.349 27.5518 161.025 27.0645 160.639 cv
27.0313 160.612 26.9932 160.601 26.957 160.583 cv
27.3994 156.988 28.4639 154.049 29.5508 151.334 cv
29.6133 151.177 29.6914 151.002 29.7676 150.83 cv
30.8125 151.919 32.5352 152.652 34.6182 152.871 cv
35.042 152.916 35.4609 152.938 35.8701 152.938 cv
37.3789 152.938 38.7461 152.64 39.707 152.109 cv
40.0303 153.62 40.5703 154.538 41.5039 156.104 cv
cp
43.2646 160.136 mo
43.2803 160.208 43.3135 160.272 43.3555 160.328 cv
43.4365 160.741 43.4961 161.146 43.5391 161.525 cv
41.8633 162.967 34.6543 163.959 29.6289 162.04 cv
30.293 158.472 34.1152 156.423 37.4629 156.307 cv
40.5508 156.177 42.7207 157.629 43.2646 160.136 cv
cp
43.6289 163.654 mo
43.2607 164.485 41.4902 165.193 39.0078 165.503 cv
34.5352 166.062 28.8008 165.22 26.7598 162.86 cv
26.7764 162.462 26.8115 162.081 26.8428 161.698 cv
29.3125 163.444 32.8936 164.146 36.2188 164.146 cv
39.2842 164.146 42.1133 163.56 43.6299 162.677 cv
43.6523 163.189 43.6436 163.555 43.6289 163.654 cv
cp
53.3301 107.147 mo
53.2695 110.162 52.5195 117.371 51.3633 119.406 cv
50.3496 119.405 49.2949 119.401 48.6045 119.399 cv
49.7764 116.46 50.5176 109.67 50.5059 107.148 cv
50.9063 107.148 51.3086 107.149 51.709 107.149 cv
52.2656 107.149 52.8027 107.148 53.3301 107.147 cv
cp
79.5674 156.604 mo
79.9531 157.282 80.1436 158.22 80.2256 159.104 cv
78.1924 159.408 74.9658 159.435 71.4902 159.296 cv
71.5586 156.265 73.6699 154.196 74.874 153.872 cv
76.9102 154.509 78.7607 155.182 79.5674 156.604 cv
cp
80.4375 156.109 mo
79.3564 154.205 77.0332 153.489 74.5742 152.73 cv
72.8408 152.196 71.0508 151.645 69.5801 150.652 cv
69.7148 150.274 69.9883 149.58 70.2539 148.903 cv
71.0547 146.87 72.2656 143.797 72.9844 141.268 cv
73.8174 138.332 74.0234 134.1 73.6943 131.639 cv
73.9824 131.462 74.2266 131.274 74.377 131.064 cv
74.4629 130.946 74.4922 130.796 74.458 130.654 cv
72.3379 121.877 66.8359 114.747 64.4873 112.13 cv
64.1445 111.749 63.8613 111.433 63.6543 111.185 cv
63.251 106.487 li
63.2285 106.219 62.998 106.003 62.7266 106.031 cv
61.3223 106.105 57.2031 106.149 51.709 106.149 cv
46.2217 106.149 40.5723 106.104 36.5957 106.03 cv
36.3672 106.017 36.1719 106.171 36.1074 106.385 cv
34.4668 111.797 34.1816 117.708 33.8535 123.395 cv
33.6777 126.424 33.4961 129.557 33.0889 133.042 cv
33.0635 133.257 33.1797 133.463 33.377 133.554 cv
33.7197 133.712 34.1484 133.868 34.6191 134.021 cv
34.1719 137.94 32.0488 144.091 30.3203 147.447 cv
29.6162 148.816 29.0078 149.998 28.6211 150.963 cv
27.2637 154.356 25.9229 158.083 25.7539 163.014 cv
25.75 163.132 25.7871 163.247 25.8594 163.34 cv
27.6621 165.637 32.0957 166.669 36.2461 166.669 cv
37.2363 166.669 38.2129 166.609 39.1309 166.495 cv
40.8438 166.282 43.8242 165.682 44.5713 163.978 cv
44.668 163.595 44.7471 159.721 43.3535 157.282 cv
42.9785 156.626 42.6504 156.075 42.3633 155.593 cv
41.3906 153.962 40.9023 153.144 40.6289 151.688 cv
40.6289 150.749 41.7666 148.345 42.7715 146.224 cv
43.0586 145.615 43.3438 145.014 43.6035 144.446 cv
45.1152 141.137 45.6143 137.625 45.877 134.431 cv
46.0977 134.356 46.3262 134.287 46.5322 134.199 cv
46.6816 134.136 46.79 134.004 46.8242 133.846 cv
47.3926 131.233 47.5586 128.747 47.7344 126.115 cv
47.8574 124.265 47.9844 122.354 48.2666 120.398 cv
49.0039 120.4 50.5508 120.406 51.873 120.406 cv
54.5723 122.08 59.7285 129.12 61.1797 133.146 cv
61.2393 133.313 61.3828 133.435 61.5566 133.468 cv
61.7588 133.506 62.0977 133.525 62.5938 133.525 cv
62.7188 133.525 62.8984 133.521 63.0996 133.517 cv
63.3398 138.332 61.7969 143.387 59.8369 147.204 cv
59.5254 147.81 59.207 148.43 58.8877 149.075 cv
58.625 149.606 58.3477 150.135 58.0664 150.668 cv
56.6191 153.427 55.1211 156.279 54.9785 160.423 cv
54.9717 160.618 55.0801 160.8 55.2539 160.888 cv
57.2871 161.904 67.2031 162.472 74.2715 162.472 cv
77.1357 162.472 79.5332 162.379 80.748 162.185 cv
80.9453 162.152 81.1045 162.007 81.1533 161.813 cv
81.334 161.097 81.4629 157.918 80.4375 156.109 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
84.9746 81.082 mo
86.3936 82.7363 88.8154 85.541 87.5547 86.5654 cv
87.3252 86.748 87.0723 86.8555 86.8047 86.8809 cv
86.832 87.0195 li
86.3936 87.9277 87.584 89.9844 89.3154 90.4316 cv
89.5391 90.9629 90.3457 91.7891 91.4297 91.9834 cv
91.4131 92.0459 li
89.6865 93.4648 86.6211 94.4746 85.2363 94.0801 cv
83.917 92.0596 81.1621 89.1768 80.2695 88.499 cv
80.3721 88.3613 li
79.5303 85.335 80.0283 82.3506 81.1289 81.4023 cv
82.123 80.5625 83.2656 79.6416 84.5166 80.6328 cv
84.668 80.7461 84.8213 80.8955 84.9746 81.082 cv
cp
.0797436 .400244 .584497 0 cmyk
f
84.6299 80.4795 mo
86.3193 78.7568 87.8135 77.9033 89.1064 78.0557 cv
90.2207 78.1865 91.5547 79.4121 91.4551 80.8594 cv
93 80.9766 97.8604 85.7656 95.2109 89.7578 cv
93.8877 91.7588 92.5166 92.1914 91.4297 91.9834 cv
90.3457 91.7891 89.5391 90.9629 89.3154 90.4316 cv
87.584 89.9844 86.3936 87.9277 86.832 87.0195 cv
86.8047 86.8809 li
87.0723 86.8555 87.3252 86.748 87.5547 86.5654 cv
88.8154 85.541 86.3936 82.7363 84.9746 81.082 cv
84.8213 80.8955 84.668 80.7461 84.5166 80.6328 cv
84.6299 80.4795 li
cp
f
55.9326 75.9502 mo
59.0439 72.04 66.583 79.625 70.5908 84.2324 cv
70.3652 84.623 70.0977 85.0449 69.7783 85.4678 cv
68.3789 87.3135 66.1084 89.4043 63.6875 90.998 cv
62.9932 91.4619 62.2793 91.8848 61.5703 92.2432 cv
58.251 88.082 53.1445 79.4629 55.9326 75.9502 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
75.0977 91.8389 mo
76.6836 90.543 78.6729 89.3809 80.1006 88.373 cv
80.1426 88.4004 80.2002 88.4385 80.2695 88.499 cv
81.1621 89.1768 83.917 92.0596 85.2363 94.0801 cv
85.3086 94.1885 85.373 94.291 85.4355 94.3936 cv
83.8838 96.1816 76.5342 101.692 74.4912 101.473 cv
71.3301 101.13 65.6953 93.6846 63.7695 91.127 cv
63.6875 90.998 li
66.1084 89.4043 68.3789 87.3135 69.7783 85.4678 cv
69.9238 85.5908 li
71.375 87.5078 73.7158 90.1973 75.0039 91.7285 cv
75.0977 91.8389 li
cp
.498634 .76672 .682032 .673518 cmyk
f
90.959 80.8301 mo
90.9414 81.1035 91.1475 81.3398 91.4209 81.3613 cv
92.0488 81.4092 93.8916 82.8057 94.8896 84.8506 cv
95.4648 86.0322 95.916 87.791 94.7959 89.4805 cv
94.792 89.4863 94.7891 89.4912 94.7852 89.4961 cv
93.8311 90.9268 92.7646 91.627 91.7031 91.5225 cv
90.6885 91.4209 89.9414 90.625 89.7832 90.2383 cv
89.7236 90.0928 89.5977 89.9834 89.4443 89.9434 cv
88.5117 89.7061 87.7646 88.8955 87.4375 88.1973 cv
87.2285 87.7529 87.2188 87.4346 87.2734 87.2754 cv
87.4844 87.2002 87.6846 87.1006 87.8662 86.9551 cv
87.9814 86.8613 88.0801 86.752 88.1592 86.6328 cv
88.293 86.4336 88.374 86.1982 88.3975 85.9404 cv
88.5195 84.5762 87.0469 82.7363 85.3496 80.7559 cv
85.3037 80.7031 85.2539 80.6699 85.2051 80.6201 cv
86.7178 79.1338 88.0088 78.4336 89.0498 78.5537 cv
89.8604 78.6455 91.0371 79.6016 90.959 80.8301 cv
cp
85.5293 93.623 mo
84.2617 91.7559 81.9863 89.3105 80.8594 88.3301 cv
80.8574 88.2959 80.8613 88.2627 80.8525 88.2285 cv
80.0566 85.3691 80.5176 82.5889 81.458 81.7861 cv
82.0039 81.3193 82.5352 80.8867 83.0605 80.75 cv
83.4277 80.6523 83.9307 80.6387 84.6348 81.4609 cv
85.6357 82.625 87.4951 84.7939 87.4014 85.8516 cv
87.3877 85.9951 87.3359 86.0957 87.2363 86.1777 cv
86.9814 86.3828 86.6826 86.4492 86.3154 86.377 cv
85.377 86.1914 84.25 85.1592 83.5098 83.8027 cv
83.377 83.5615 83.0742 83.4717 82.8301 83.6055 cv
82.5879 83.7402 82.5 84.04 82.6318 84.2832 cv
83.5225 85.9082 84.8906 87.1143 86.1221 87.3584 cv
86.168 87.3672 86.2129 87.3643 86.2568 87.3701 cv
86.2373 87.7471 86.3213 88.1709 86.5322 88.6221 cv
86.9043 89.417 87.7578 90.4463 88.9707 90.8467 cv
89.2305 91.2949 89.7383 91.8145 90.4131 92.1582 cv
88.7783 93.2061 86.5801 93.8027 85.5293 93.623 cv
cp
74.54 100.975 mo
72.6162 100.77 69.2012 97.4521 64.3936 91.125 cv
66.4561 89.71 68.4121 87.9492 69.7949 86.2432 cv
70.9033 87.6807 72.3906 89.4277 73.6094 90.8574 cv
74.3887 91.7773 li
73.252 92.7686 72.3584 93.8438 72.0508 95.041 cv
71.9814 95.3086 72.1426 95.5801 72.4111 95.6504 cv
72.6777 95.7188 72.9551 95.5566 73.0186 95.2891 cv
73.5342 93.2852 76.3945 91.417 78.6934 89.915 cv
79.1865 89.5938 79.6611 89.2832 80.0957 88.9844 cv
80.9473 89.7021 83.4561 92.3164 84.7578 94.2646 cv
84.7705 94.2949 84.7822 94.3213 84.7988 94.3477 cv
82.7891 96.4063 76.166 101.147 74.54 100.975 cv
cp
56.3242 76.2617 mo
56.791 75.6748 57.377 75.3818 58.1172 75.3652 cv
60.6455 75.3115 64.957 78.5596 69.9717 84.29 cv
68.4336 86.7783 64.9268 89.8672 61.7041 91.6016 cv
58.2793 87.2051 53.8799 79.3477 56.3242 76.2617 cv
cp
89.165 77.5605 mo
87.7676 77.3984 86.21 78.2021 84.4141 79.998 cv
83.9043 79.7217 83.3691 79.6328 82.8057 79.7822 cv
82.0762 79.9746 81.4434 80.4805 80.8066 81.0283 cv
79.5313 82.125 79.1094 85.1113 79.7734 87.9893 cv
79.2832 88.3369 78.7266 88.6982 78.1465 89.0771 cv
77.1514 89.7285 76.1094 90.4141 75.1641 91.1465 cv
74.3701 90.21 li
73.0957 88.7139 71.5244 86.8633 70.416 85.4102 cv
70.4785 85.3203 70.5527 85.2295 70.6123 85.1416 cv
70.7656 84.915 70.9004 84.6943 71.0215 84.4756 cv
71.124 84.2939 71.1006 84.0645 70.9629 83.9053 cv
67.1504 79.5088 61.8223 74.2842 58.0977 74.3652 cv
57.0547 74.3896 56.1934 74.8184 55.541 75.6416 cv
52.3174 79.7021 58.5576 89.2734 61.1797 92.5508 cv
61.3262 92.7354 61.5859 92.791 61.7979 92.6836 cv
62.3789 92.3867 62.9639 92.0391 63.5488 91.6709 cv
66.8408 96.0098 71.4629 101.651 74.4336 101.97 cv
76.791 102.221 84.3574 96.4053 85.8145 94.7236 cv
85.8291 94.707 85.8418 94.6895 85.8516 94.6738 cv
85.8564 94.668 85.8545 94.6611 85.8574 94.6563 cv
87.5098 94.6865 90.0137 93.7881 91.6191 92.5186 cv
92.6338 92.6133 94.1445 92.2607 95.6182 90.0508 cv
95.6201 90.0449 95.625 90.04 95.6289 90.0342 cv
97.0117 87.9512 96.4785 85.8252 95.7881 84.4111 cv
94.8408 82.4697 93.125 80.8848 91.9512 80.4668 cv
91.8154 78.9443 90.4531 77.707 89.165 77.5605 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
63.7188 76.0732 mo
62.7383 76.7969 61.4424 77.3418 60.3213 77.7725 cv
60.6055 76.4199 61.4785 72.7832 61.9824 70.1875 cv
62.2109 70.2363 li
62.918 70.3086 65.3398 71.5234 65.2803 73.6123 cv
65.2588 74.6045 64.625 75.4102 63.7188 76.0732 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
52.79 72.3984 mo
52.707 72.5215 li
48.373 69.7871 44.7559 68.0439 42.5479 67.7793 cv
42.4141 67.7568 42.2813 67.7559 42.1592 67.7432 cv
42.1641 67.7119 li
44.8496 66.1934 49.6943 67.4004 53.5996 68.2451 cv
53.8184 68.2949 li
53.5488 69.5342 53.2617 70.7979 52.79 72.3984 cv
cp
.826932 .410346 .420874 .105837 cmyk
f
42.5479 67.7793 mo
44.7559 68.0439 48.373 69.7871 52.707 72.5215 cv
55.0762 74.0059 57.6484 75.7852 60.3213 77.7725 cv
53.6738 75.5254 49.0352 73.5625 44.5527 73.7178 cv
44.5605 73.9795 li
43.2637 75.3232 42.0176 77.7295 40.8574 80.832 cv
40.7188 80.7803 li
38.8135 79.7949 37.4063 76.9639 38.8916 74.0996 cv
36.6719 71.3818 38.0957 67.5059 42.1592 67.7432 cv
42.2813 67.7559 42.4141 67.7568 42.5479 67.7793 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
63.7285 76.082 mo
64.9512 81.1113 65.0098 101.864 64.0293 111.555 cv
59.7891 114.08 41.0703 113.813 34.0586 110.627 cv
35.5938 100.425 37.9785 88.5166 40.8574 80.832 cv
42.0176 77.7295 43.2637 75.3232 44.5605 73.9795 cv
44.5527 73.7178 li
49.0352 73.5625 53.6738 75.5254 60.3213 77.7725 cv
61.4424 77.3418 62.7383 76.7969 63.7188 76.0732 cv
63.7285 76.082 li
cp
.74789 .241123 .31931 .00552377 cmyk
f
64.6328 87.7598 mo
64.7031 90.4863 64.7236 93.4326 64.7012 96.3633 cv
57.3066 98.5039 43.9863 96.7705 37.2412 93.4678 cv
37.9121 90.5557 38.6309 87.7686 39.3867 85.2383 cv
45.1367 87.207 57.8887 89.6367 64.6328 87.7598 cv
cp
0 0 0 0 cmyk
f
62.3564 67.6104 mo
62.3672 68.043 62.209 69.0049 61.9824 70.1875 cv
61.4785 72.7832 60.6055 76.4199 60.3213 77.7725 cv
57.6484 75.7852 55.0762 74.0059 52.707 72.5215 cv
52.79 72.3984 li
53.2617 70.7979 53.5488 69.5342 53.8184 68.2949 cv
53.999 67.4922 54.1816 66.709 54.3965 65.8613 cv
57.3867 66.4512 59.1719 66.5732 62.3564 67.6104 cv
cp
.0797436 .400244 .584497 0 cmyk
f
64.7852 73.5996 mo
64.7461 75.0938 62.8984 76.165 61.0166 76.958 cv
61.0859 76.6494 61.1641 76.3027 61.249 75.9297 cv
61.6738 74.0518 62.0781 72.25 62.375 70.7803 cv
63.1172 71.0176 64.8242 72.0303 64.7852 73.5996 cv
cp
63.5605 111.244 mo
59.2383 113.452 41.6641 113.267 34.6094 110.322 cv
35.7598 102.771 39.6348 79.79 44.9189 74.3242 cv
44.9531 74.2891 44.9727 74.2471 44.9941 74.2061 cv
48.4805 74.1953 52.1191 75.4561 56.9531 77.1406 cv
57.9727 77.4951 59.0391 77.8682 60.165 78.248 cv
60.1699 78.25 60.1738 78.249 60.1787 78.25 cv
60.1953 78.2559 60.2129 78.2539 60.2305 78.2578 cv
60.2764 78.2656 60.3223 78.2715 60.3682 78.2666 cv
60.377 78.2666 60.3867 78.2705 60.3945 78.2695 cv
60.4316 78.2637 60.4688 78.2549 60.5039 78.2412 cv
61.5059 77.8564 62.5156 77.4209 63.3818 76.8975 cv
64.4668 82.9023 64.4395 102.207 63.5605 111.244 cv
cp
39.0078 77.9805 mo
38.7246 77.1484 38.5527 75.8389 39.3398 74.3301 cv
39.4326 74.1523 39.4102 73.9355 39.2832 73.7813 cv
38.2891 72.5713 38.0664 71.0234 38.7158 69.8359 cv
39.373 68.6357 40.75 68.0674 42.4932 68.2744 cv
45.2695 68.6064 50.6973 71.5264 57.3154 76.208 cv
57.3047 76.2041 57.293 76.2002 57.2813 76.1963 cv
50.6992 73.9023 45.9424 72.2412 40.7988 73.8379 cv
40.5352 73.9199 40.3877 74.1992 40.4688 74.4629 cv
40.5508 74.7256 40.8271 74.8799 41.0947 74.793 cv
41.9531 74.5273 42.7969 74.3623 43.6426 74.2744 cv
42.5635 75.6475 41.5488 77.6846 40.6074 80.1123 cv
39.8965 79.624 39.3076 78.8652 39.0078 77.9805 cv
cp
52.6641 68.5537 mo
53.2236 68.6748 li
53.0098 69.6182 52.7734 70.6143 52.4521 71.7666 cv
49.0449 69.6563 46.1816 68.2285 44.0801 67.6035 cv
46.5117 67.2168 49.8584 67.9424 52.6641 68.5537 cv
cp
54.3008 68.4482 mo
54.4492 67.7822 54.5977 67.1289 54.7686 66.4414 cv
55.4141 66.5645 56.0059 66.667 56.5742 66.7666 cv
58.2793 67.0635 59.7637 67.3213 61.8418 67.9717 cv
61.7002 69.4131 60.8193 73.2998 60.2734 75.708 cv
60.1719 76.1582 60.0801 76.5635 60.002 76.916 cv
57.627 75.1699 55.3906 73.6289 53.3359 72.3213 cv
53.7617 70.833 54.0371 69.6172 54.3008 68.4482 cv
cp
62.5664 69.7979 mo
62.7559 68.7832 62.8672 68.0098 62.8613 67.6055 cv
62.8584 67.3906 62.7197 67.2031 62.5156 67.1367 cv
60.1758 66.3779 58.5859 66.1016 56.7461 65.7803 cv
56.0508 65.6602 55.3203 65.5322 54.498 65.3701 cv
54.2383 65.3203 53.9844 65.4775 53.917 65.7344 cv
53.7393 66.417 53.5898 67.0586 53.4453 67.7002 cv
52.877 67.5762 li
49.0176 66.7354 44.6484 65.7871 41.9746 67.2432 cv
40.125 67.2002 38.6035 67.959 37.8379 69.3555 cv
37.0391 70.8174 37.2295 72.6699 38.3105 74.1582 cv
37.002 77.0078 38.2354 79.8682 40.2422 81.083 cv
36.7695 90.6006 34.3691 105.2 33.5635 110.553 cv
33.5313 110.774 33.6484 110.99 33.8516 111.082 cv
39.5313 113.659 52.252 114.299 59.6055 113.266 cv
61.6943 112.972 63.3496 112.543 64.2881 111.985 cv
64.4238 111.904 64.5137 111.764 64.5303 111.606 cv
65.4609 102.417 65.4697 81.9111 64.2773 76.2734 cv
65.1621 75.5605 65.7568 74.7002 65.7842 73.624 cv
65.8398 71.4121 63.6367 70.1006 62.5664 69.7979 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
79.7603 17.9463 mo
86.8677 22.5957 86.4126 32.3174 84.0347 36.459 cv
83.7739 36.4883 li
83.5083 34.3125 83.2427 32.4541 83.0698 31.1699 cv
82.3335 29.4521 80.6011 27.501 78.2769 26.3242 cv
78.1831 26.2744 li
73.9897 33.627 60.5298 40.582 54.4067 40.7334 cv
54.4741 39.291 54.8257 37.9688 55.3726 36.7842 cv
53.6899 38.3838 48.5679 41.3633 43.1616 43.1953 cv
43.2017 43.3203 li
42.811 49.0557 39.8882 53.0654 37.4673 56.2715 cv
34.7544 51.9414 31.1772 50.541 28.1567 52.2637 cv
25.98 53.5049 24.5024 56.3916 25.2437 59.5156 cv
25.0991 59.5586 li
22.1147 58.3184 18.7554 56.5273 15.4917 52.9707 cv
16.7778 51.3398 19.4214 49.457 22.0864 48.1953 cv
19.0269 46.5928 14.7026 43.998 11.9663 41.0381 cv
13.686 37.9521 18.439 33.5088 24.3228 30.0986 cv
21.2739 29.6523 17.2026 28.1504 14.7495 26.417 cv
16.9497 23.7236 22.0679 19.9756 29.0542 18.3623 cv
27.3286 17.5605 24.4712 15.3574 22.603 13.1816 cv
31.2446 8.02539 48.2085 5.21777 59.1089 6.29297 cv
70.9761 7.46289 79.0396 12.6006 79.7603 17.9463 cv
cp
.373144 .782101 .665248 .350225 cmyk
f
83.7739 36.4883 mo
84.604 43.2861 85.4565 53.1572 83.603 58.2852 cv
81.2056 64.8838 75.0767 68.9678 70.4478 70.21 cv
65.936 71.4268 50.856 73.543 39.1245 64.9619 cv
37.0229 67.3252 31.0483 67.5449 27.2075 63.1768 cv
26.1606 61.9707 25.5347 60.7305 25.2437 59.5156 cv
24.5024 56.3916 25.98 53.5049 28.1567 52.2637 cv
31.1772 50.541 34.7544 51.9414 37.4673 56.2715 cv
39.8882 53.0654 42.811 49.0557 43.2017 43.3203 cv
43.1616 43.1953 li
48.5679 41.3633 53.6899 38.3838 55.3726 36.7842 cv
54.8257 37.9688 54.4741 39.291 54.4067 40.7334 cv
60.5298 40.582 73.9897 33.627 78.1831 26.2744 cv
78.2769 26.3242 li
80.6011 27.501 82.3335 29.4521 83.0698 31.1699 cv
83.2427 32.4541 83.5083 34.3125 83.7739 36.4883 cv
cp
0 .167361 .439734 0 cmyk
f
64.3735 50.8945 mo
64.6362 53.5391 63.2612 55.8408 61.3032 56.0352 cv
59.3462 56.2295 57.5454 54.2432 57.2837 51.5977 cv
57.02 48.9531 58.395 46.6514 60.353 46.4561 cv
62.311 48.3066 62.5063 48.4287 63.9097 49.0576 cv
64.146 49.6133 64.3081 50.2334 64.3735 50.8945 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
61.3882 50.166 mo
61.2554 51.2998 60.4644 52.1387 59.6265 52.0381 cv
58.7866 51.9395 58.2144 50.9385 58.3491 49.8047 cv
58.4839 48.6719 59.2729 47.834 60.1128 47.9336 cv
60.9517 48.0313 61.5239 49.0322 61.3882 50.166 cv
cp
0 0 0 0 cmyk
f
83.147 46.5381 mo
83.6323 49.1514 82.7563 51.5039 81.1948 51.7949 cv
79.6323 52.084 77.9712 50.1982 77.4858 47.5859 cv
77.4019 47.1309 77.3589 46.6826 77.354 46.252 cv
78.4937 44.3203 78.4331 44.418 79.4399 42.3301 cv
81.0024 42.04 82.6636 43.9238 83.147 46.5381 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
80.8374 46.7412 mo
81.0132 47.6904 80.6021 48.5615 79.9194 48.6895 cv
79.2358 48.8154 78.5376 48.1484 78.3628 47.2002 cv
78.186 46.251 78.5981 45.3789 79.2817 45.252 cv
79.9644 45.126 80.6616 45.793 80.8374 46.7412 cv
cp
0 0 0 0 cmyk
f
70.606 10.8838 mo
73.8687 12.3887 75.7759 14.1553 76.8677 15.7305 cv
73.6108 22.5166 51.4458 22.5322 40.6772 23.6748 cv
31.3706 24.6631 25.4985 26.9219 22.2104 29.6611 cv
21.1743 29.3984 20.0991 29.0518 19.0601 28.6436 cv
29.5942 17.9922 58.3237 16.1826 65.356 14.0566 cv
68.5317 13.0977 70.0845 12.001 70.606 10.8838 cv
cp
.341833 .684718 .553277 .151247 cmyk
f
79.7603 17.9463 mo
79.5435 16.3438 78.6626 14.75 77.2173 13.2881 cv
75.6597 11.6982 73.4263 10.2539 70.6519 9.07715 cv
67.4546 7.72168 63.5522 6.73438 59.1089 6.29297 cv
49.0474 5.2998 33.8188 7.61523 24.7397 12.0313 cv
35.1987 8.56934 53.2661 6.18457 64.311 8.77539 cv
66.8384 9.36328 68.9048 10.0869 70.606 10.8838 cv
73.8687 12.3887 75.7759 14.1553 76.8677 15.7305 cv
77.8062 17.083 78.1577 18.2959 78.2808 19.0977 cv
82.0308 21.0234 85.7036 26.2207 84.4487 35.6348 cv
86.4399 31.1426 86.4321 22.3076 79.7603 17.9463 cv
cp
0 0 0 0 cmyk
f
78.397 26.3994 mo
75.1245 38.7217 58.7671 44.335 51.6743 45.2129 cv
51.6372 43.9385 51.6265 42.7813 52.0776 41.4043 cv
50.2974 43.1602 46.1685 45.457 42.603 46.8662 cv
42.9116 45.7578 43.1128 44.582 43.2017 43.3203 cv
43.1616 43.1953 li
48.5679 41.3633 53.6899 38.3838 55.3726 36.7842 cv
54.8257 37.9688 54.4741 39.291 54.4067 40.7334 cv
60.5298 40.582 73.9897 33.627 78.1831 26.2744 cv
78.2769 26.3242 li
78.3228 26.3447 78.3589 26.3672 78.397 26.3994 cv
cp
.0797436 .400244 .584497 0 cmyk
f
83.7739 36.4883 mo
84.604 43.2861 85.4565 53.1572 83.603 58.2852 cv
81.2056 64.8838 75.0767 68.9678 70.4478 70.21 cv
69.8872 70.3594 69.1567 70.5283 68.2788 70.6807 cv
73.3042 68.668 78.5308 65.1631 81.8921 58.7012 cv
84.3472 53.998 83.4897 44.415 80.9839 28.2646 cv
81.9458 29.1934 82.6646 30.2168 83.0698 31.1699 cv
83.2427 32.4541 83.5083 34.3125 83.7739 36.4883 cv
cp
0 0 0 0 cmyk
f
29.5015 57.3447 mo
28.0581 59.0322 29.1411 62.0938 32.3501 63.0166 cv
34.8228 63.7275 36.7515 62.373 35.5229 59.7178 cv
33.9858 56.3955 31.0503 55.5332 29.5015 57.3447 cv
cp
.0797436 .400244 .584497 0 cmyk
f
72.8022 55.6016 mo
73.3589 54.4414 74.769 54.1211 74.7505 55.1514 cv
74.7319 56.1826 72.4556 56.3223 72.8022 55.6016 cv
cp
f
83.5269 30.9678 mo
82.7095 29.0684 80.936 27.2305 78.8521 26.0791 cv
79.1118 25.5879 79.3394 25.0957 79.5083 24.6055 cv
79.5991 24.3457 79.4604 24.0605 79.2007 23.9697 cv
78.937 23.8789 78.6548 24.0176 78.564 24.2793 cv
75.9692 31.7578 61.9028 39.6338 54.9438 40.2041 cv
55.3374 36.3779 57.9136 33.3877 60.0815 31.9492 cv
60.311 31.7969 60.3735 31.4873 60.2212 31.2568 cv
60.0688 31.0273 59.7583 30.9619 59.5288 31.1162 cv
57.8394 32.2373 56.0562 34.0977 54.9575 36.4893 cv
52.4644 38.791 43.8384 43.3633 37.0425 44.1396 cv
37.4897 39.8418 41.1499 33.7363 44.6011 31.6836 cv
44.8384 31.541 44.9165 31.2354 44.7749 30.998 cv
44.6343 30.7627 44.3306 30.6836 44.0894 30.8232 cv
40.1763 33.1514 36.1704 40.0137 36.0015 44.6777 cv
35.9976 44.8203 36.0532 44.958 36.1567 45.0566 cv
36.2603 45.1563 36.4019 45.2061 36.5435 45.1934 cv
37.6167 45.1055 38.7437 44.917 39.8892 44.6523 cv
40.7935 44.4434 41.7104 44.1836 42.6245 43.8916 cv
42.1079 48.9463 39.5679 52.6396 37.4937 55.4072 cv
34.729 51.3818 31.103 50.0127 27.9106 51.833 cv
26.2144 52.7988 24.9966 54.6055 24.6499 56.6641 cv
24.5308 57.377 24.5308 58.0957 24.6235 58.8115 cv
22.1675 57.7402 19.1313 56.0967 16.1597 52.9521 cv
17.4663 51.4854 19.8677 49.7959 22.2993 48.6475 cv
22.4722 48.5654 22.5815 48.3955 22.5864 48.2041 cv
22.5894 48.0156 22.4858 47.8398 22.3179 47.751 cv
19.8872 46.4805 15.4546 43.9385 12.5874 40.9668 cv
14.2485 38.2373 18.5044 34.0537 24.5747 30.5352 cv
24.7593 30.4287 24.855 30.2178 24.814 30.0088 cv
24.7749 29.7988 24.6079 29.6387 24.397 29.6074 cv
21.4644 29.1768 17.8267 27.8193 15.4927 26.3125 cv
17.814 23.7197 22.6245 20.3613 29.1665 18.8496 cv
29.3755 18.8018 29.5298 18.627 29.5513 18.4141 cv
29.5737 18.2021 29.4585 17.999 29.2642 17.9092 cv
27.8159 17.2383 25.2495 15.3369 23.3784 13.3066 cv
32.4468 8.18164 48.9917 5.7959 59.061 6.79004 cv
71.4966 8.01855 78.6372 13.3652 79.2642 18.0127 cv
79.2847 18.1572 79.3647 18.2852 79.4868 18.3643 cv
85.7759 22.4785 85.8403 30.8154 84.105 35.1348 cv
83.9614 34.0156 83.8237 33.001 83.7085 32.1592 cv
83.5649 31.0996 li
83.5581 31.0527 83.5454 31.0098 83.5269 30.9678 cv
cp
83.1284 58.1113 mo
80.8569 64.3682 75.0562 68.4561 70.3169 69.7305 cv
64.2876 71.3496 50.0845 72.3525 39.4224 64.5537 cv
39.2153 64.4023 38.9263 64.4316 38.7544 64.625 cv
37.9106 65.5732 36.3472 66.1357 34.5688 66.1279 cv
31.9526 66.1191 29.4077 64.9229 27.5894 62.8457 cv
25.9849 61.0156 25.2915 58.8779 25.6372 56.8301 cv
25.9331 55.0645 26.9692 53.5205 28.4058 52.7002 cv
31.2407 51.0898 34.5493 52.5557 37.0415 56.541 cv
37.1284 56.6807 37.2788 56.7676 37.4438 56.7754 cv
37.606 56.7842 37.7642 56.708 37.8647 56.5771 cv
40.1294 53.5752 43.2192 49.4717 43.6782 43.542 cv
47.9214 42.0635 51.9761 39.9121 54.3218 38.2588 cv
54.106 39.0381 53.9438 39.8486 53.9028 40.7109 cv
53.897 40.8496 53.9487 40.9844 54.0464 41.084 cv
54.1431 41.1826 54.2769 41.2373 54.4146 41.2344 cv
55.2378 41.2139 56.1753 41.0791 57.1958 40.8428 cv
63.9966 39.2725 74.4058 33.2334 78.3462 26.9424 cv
80.5679 28.1592 81.9849 29.957 82.5815 31.3018 cv
82.7173 32.2949 li
82.9556 34.0293 83.2847 36.46 83.5757 39.1748 cv
83.1665 38.668 82.7095 38.5479 82.3755 38.5664 cv
80.897 38.6563 79.4634 41.0811 77.7583 44.7109 cv
77.3315 45.6211 76.9644 45.8691 76.8276 45.8623 cv
76.6938 45.8623 76.4429 45.6387 76.2075 45.1455 cv
76.063 44.8457 75.7065 44.7188 75.4067 44.8623 cv
75.1079 45.0059 74.981 45.3633 75.1226 45.6621 cv
75.6782 46.8213 76.3569 47.0635 76.8315 47.0615 cv
76.9351 47.0625 77.0376 47.0508 77.1392 47.0264 cv
77.7769 46.8799 78.3501 46.2744 78.8442 45.2217 cv
81.0474 40.5244 82.0474 39.7842 82.4419 39.7637 cv
82.5513 39.7588 82.6724 39.9297 82.7358 40.0322 cv
82.9087 40.3154 83.2778 40.4033 83.561 40.2314 cv
83.606 40.2041 83.6382 40.1641 83.6743 40.126 cv
84.3052 46.4053 84.6479 53.9297 83.1284 58.1113 cv
cp
80.2202 17.6514 mo
79.23 11.7861 70.6274 6.92773 59.1587 5.79492 cv
48.7329 4.76563 31.4526 7.31445 22.3423 12.7539 cv
22.2153 12.8291 22.1284 12.9561 22.105 13.1016 cv
22.0815 13.2471 22.1226 13.3965 22.2192 13.5088 cv
23.8198 15.3711 26.022 17.1504 27.7007 18.1875 cv
21.1987 19.9707 16.4888 23.4971 14.3618 26.0957 cv
14.2739 26.2031 14.2339 26.3418 14.2524 26.4795 cv
14.271 26.6162 14.3452 26.7402 14.4595 26.8203 cv
16.5503 28.3037 19.936 29.6992 22.9312 30.3545 cv
17.7944 33.5264 13.2993 37.623 11.5298 40.7939 cv
11.4253 40.9834 11.4536 41.2188 11.6001 41.377 cv
14.2495 44.2441 18.3325 46.7305 20.9956 48.1797 cv
18.5405 49.4629 16.2886 51.1641 15.1001 52.6563 cv
14.9468 52.8496 14.9565 53.123 15.1226 53.3057 cv
18.5786 57.085 22.1431 58.873 24.8706 60.0078 cv
25.23 61.2324 25.8862 62.4199 26.8364 63.5049 cv
28.8452 65.7979 31.6616 67.1191 34.5659 67.1289 cv
36.4253 67.1377 38.1118 66.5762 39.1802 65.6113 cv
51.6089 74.4453 66.8315 71.5693 70.0034 70.8369 cv
70.3159 70.7646 70.5112 70.7139 70.5767 70.6963 cv
75.5669 69.3545 81.6733 65.0479 84.0688 58.4541 cv
85.9233 53.3496 85.1343 43.6523 84.3198 36.8652 cv
84.3774 36.8242 84.4292 36.7734 84.4683 36.708 cv
86.8872 32.4971 87.5024 22.5889 80.2202 17.6514 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
30.7417 56.001 mo
30.7075 56.0068 30.6743 56.0146 30.6421 56.0215 cv
29.3315 56.3242 28.4409 57.3506 28.4644 58.5479 cv
28.4692 58.8232 28.6978 59.0439 28.9741 59.0371 cv
29.2505 59.0381 29.4702 58.8047 29.4644 58.5273 cv
29.4497 57.793 30.0522 57.1299 30.936 56.9814 cv
32.2231 56.7236 34.1411 57.4863 35.3198 60.4814 cv
35.4116 60.7148 35.6597 60.8408 35.897 60.7861 cv
35.9214 60.7803 35.9438 60.7725 35.9683 60.7637 cv
36.2251 60.6631 36.3511 60.3721 36.2505 60.1162 cv
34.8472 56.5459 32.4048 55.668 30.7417 56.001 cv
cp
f
60.3091 47.6299 mo
63.1626 49.8271 64.6616 50.5684 65.7671 50.3135 cv
65.7974 50.3057 65.8257 50.2979 65.856 50.291 cv
66.7837 50.0273 67.1968 49.1172 67.5698 48.1279 cv
67.687 47.8174 67.5308 47.4717 67.2212 47.3545 cv
66.9097 47.2373 66.564 47.3945 66.4478 47.7031 cv
66.1411 48.5137 65.8804 49.0361 65.5278 49.1367 cv
64.5444 49.373 61.9165 47.3535 61.0405 46.6797 cv
56.1011 42.877 51.7407 44.4795 49.5063 47.0078 cv
49.2866 47.2559 49.311 47.6357 49.5591 47.8545 cv
49.8081 48.0742 50.187 48.0498 50.4058 47.8027 cv
52.2974 45.6631 56.0259 44.332 60.3091 47.6299 cv
cp
f
42.6255 43.8945 mo
42.5073 45.0303 42.2847 46.1074 41.9927 47.1094 cv
40.356 47.7119 38.8765 48.1064 37.8599 48.1455 cv
37.8306 47.4434 38.0034 46.2344 38.4634 44.9365 cv
38.938 44.8584 39.4077 44.7607 39.8853 44.6504 cv
40.7905 44.4414 41.7075 44.1875 42.6255 43.8945 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
12.5874 40.9668 mo
16.5864 41.9316 20.6753 41.5527 23.5474 41.1875 cv
24.9634 38.4268 27.1069 35.4902 31.6548 33.5371 cv
29.3931 36.502 29.229 38.5918 29.4126 42.1416 cv
32.2671 35.5713 37.3882 33.167 42.9243 31.6328 cv
39.4175 34.4854 36.1519 40.4834 36.0015 44.6748 cv
35.9937 44.8193 36.0571 44.959 36.1616 45.0596 cv
36.2573 45.1602 36.4019 45.208 36.5425 45.1963 cv
37.1655 45.1445 37.813 45.0566 38.4634 44.9365 cv
38.0034 46.2344 37.8306 47.4434 37.8599 48.1455 cv
38.8765 48.1064 40.356 47.7119 41.9927 47.1094 cv
40.9839 50.5645 39.0913 53.2598 37.4937 55.4043 cv
34.7271 51.3828 31.1069 50.0117 27.9126 51.8271 cv
26.2192 52.8037 24.9927 54.6055 24.6479 56.666 cv
24.5347 57.3789 24.5278 58.0996 24.6206 58.8164 cv
22.1655 57.7422 19.1274 56.0928 16.1548 52.9502 cv
17.4683 51.4883 19.8696 49.7949 22.3042 48.6475 cv
22.4702 48.5684 22.5845 48.3975 22.5806 48.2041 cv
22.5894 48.0176 22.4858 47.8359 22.3228 47.751 cv
19.8843 46.4756 15.4585 43.9375 12.5874 40.9668 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
70.1567 67.3203 mo
70.2046 67.3926 li
69.2729 67.9492 68.0112 68.2617 66.2817 68.2295 cv
62.2827 68.1426 60.1079 66.5811 58.9985 64.6289 cv
59.1323 64.5449 li
60.6626 63.7197 66.9468 62.9502 70.1567 67.3203 cv
cp
0 .919585 .825986 0 cmyk
f
58.0874 60.043 mo
60.145 62.8701 68.1392 63.4131 73.0317 61.2627 cv
73.1812 61.2871 li
72.7886 63.5654 72.394 66.1123 70.2046 67.3926 cv
70.1567 67.3203 li
66.9468 62.9502 60.6626 63.7197 59.1323 64.5449 cv
58.9985 64.6289 li
58.1616 63.168 57.9243 61.4971 57.9575 60.0381 cv
58.0874 60.043 li
cp
.433509 .775906 .674159 .526574 cmyk
f
58.1616 58.0049 mo
60.2192 60.8223 68.4673 61.2949 73.8159 58.7002 cv
73.52 59.4395 73.3462 60.3438 73.1812 61.2871 cv
73.0317 61.2627 li
68.1392 63.4131 60.145 62.8701 58.0874 60.043 cv
57.9575 60.0381 li
57.9546 59.2773 58.0503 58.5811 58.1616 58.0049 cv
cp
0 0 0 0 cmyk
f
70.2993 66.7129 mo
67.0435 62.7188 61.2202 63.166 59.2183 63.9531 cv
58.771 63.0205 58.5513 62.0361 58.4761 61.1338 cv
59.9741 62.3271 62.4888 62.959 65.1919 63.0596 cv
67.729 63.1514 70.4165 62.7773 72.5552 61.9854 cv
72.2183 63.834 71.7651 65.6348 70.2993 66.7129 cv
cp
66.2925 67.7246 mo
66.0493 67.7178 li
63.2661 67.6162 61.2095 66.748 59.938 65.1377 cv
59.8569 65.0371 59.7964 64.9277 59.7261 64.8232 cv
61.5483 64.1523 66.5386 63.8252 69.4253 67.2207 cv
68.6255 67.5645 67.605 67.7529 66.2925 67.7246 cv
cp
64.9673 60.8936 mo
67.7827 60.9971 70.6519 60.5283 73.0122 59.5947 cv
72.9165 59.9873 72.8384 60.4053 72.7622 60.8291 cv
68.0474 62.8643 60.3374 62.2871 58.4868 59.749 cv
58.48 59.7373 58.4673 59.7314 58.4556 59.7188 cv
58.4663 59.4854 58.4849 59.2627 58.5054 59.0625 cv
59.853 60.1221 62.1665 60.791 64.9673 60.8936 cv
cp
74.1509 58.332 mo
74.0005 58.1914 73.7788 58.1602 73.5933 58.248 cv
71.2104 59.4082 68.0806 60.0068 65.0044 59.8936 cv
62.0591 59.7861 59.686 59.0088 58.6997 57.8574 cv
58.9204 57.8379 59.1548 57.8525 59.3979 57.9111 cv
59.6724 57.9785 59.937 57.8086 60.0024 57.541 cv
60.0669 57.2715 59.8989 57.002 59.6323 56.9385 cv
58.0669 56.5693 56.6646 57.3584 56.146 58.9121 cv
56.0581 59.1729 56.2007 59.4561 56.4624 59.5439 cv
56.5073 59.5586 56.5552 59.5674 56.6021 59.5684 cv
56.8169 59.5781 57.021 59.4434 57.0933 59.2275 cv
57.2056 58.8916 57.3765 58.6162 57.5825 58.4004 cv
57.355 59.9063 57.1538 63.2275 59.1519 65.7588 cv
60.6147 67.6084 62.9224 68.6035 66.0132 68.7178 cv
66.272 68.7246 li
72.3745 68.8506 73.0825 64.7891 73.6509 61.5244 cv
73.8237 60.542 73.9858 59.6143 74.2769 58.8848 cv
74.3521 58.6914 74.3032 58.4727 74.1509 58.332 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
31.8184 75.3027 mo
31.7578 75.7559 31.7285 76.249 31.7412 76.7881 cv
31.752 79.0986 32.3271 82.1357 33.3213 84.8555 cv
33.6074 85.6406 33.9238 86.3975 34.2734 87.1074 cv
39.4131 85.7549 48.6631 81.8877 48.5176 77.3984 cv
48.3604 72.3984 37.7842 73.9893 31.8184 75.3027 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
23.8252 78.9619 mo
22.8066 77.7773 20.9873 76.3984 17.665 74.2988 cv
17.6084 74.3135 17.5449 74.3203 17.4951 74.3418 cv
15.8672 74.7441 12.9502 77.8096 12.0938 79.6162 cv
12.0566 79.6943 12.0215 79.7705 11.9941 79.8428 cv
14.5977 82.9219 18.9463 86.3115 20.8037 87.2168 cv
23.3018 88.4434 29.8662 86.085 33.1719 84.9033 cv
33.3213 84.8555 li
32.3271 82.1357 31.752 79.0986 31.7412 76.7881 cv
31.541 76.7871 li
29.2344 77.4561 25.7881 78.3701 23.8252 78.9619 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
33.3203 84.8506 mo
33.1699 84.9014 li
32.4199 85.1709 31.5 85.501 30.4902 85.8408 cv
29.0107 83.5313 27.9707 80.4414 27.8408 77.8213 cv
29.1406 77.4609 30.46 77.1006 31.54 76.791 cv
31.7402 76.791 li
31.75 79.1006 32.3301 82.1309 33.3203 84.8506 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
12.4307 67.957 mo
12.126 67.7656 li
10.2236 65.6504 8.36719 64.9287 6.4248 64.6162 cv
4.16211 64.2695 .978516 64.7227 1.12402 65.6787 cv
1.39941 67.4902 4.77246 65.792 6.35449 67.9824 cv
5.11035 67.6807 2.69824 67.9609 1.22363 68.96 cv
.0966797 69.7256 .375977 70.6738 1.44922 71.0889 cv
.294922 71.5303 .366211 73.0361 1.50195 73.8525 cv
.373047 74.8467 1.06836 76.1992 2.2793 76.084 cv
4.70996 75.8525 5.90918 77.1875 7.41016 78.0918 cv
8.91992 79.0029 10.7002 79.8027 11.958 79.5518 cv
12.0938 79.6162 li
12.9502 77.8096 15.8672 74.7441 17.4951 74.3418 cv
17.4668 74.2139 li
18.1729 72.6826 18.5498 70.293 16.5078 68.1221 cv
14.458 65.957 14.043 62.0596 12.5557 62.916 cv
11.584 63.4717 12.3721 64.5059 12.8135 66.9971 cv
12.8486 67.1875 12.6631 67.5127 12.4307 67.957 cv
cp
0 .167361 .439734 0 cmyk
f
1.62109 65.5986 mo
1.82129 65.2617 4.14453 64.7725 6.34766 65.1143 cv
7.91797 65.3613 9.79199 65.915 11.7568 68.1016 cv
11.7637 68.1104 11.7744 68.1143 11.7822 68.123 cv
11.0742 69.541 10.2041 71.9814 12.8828 74.6826 cv
12.9189 74.7178 12.9541 74.752 12.9902 74.7881 cv
13.1875 74.9805 13.5049 74.9785 13.6973 74.7793 cv
13.8896 74.583 13.8887 74.3145 13.6885 74.0742 cv
11.0674 71.5352 12.1816 69.4893 12.9033 68.1357 cv
13.1836 67.6064 13.3691 67.2588 13.3066 66.9023 cv
13.165 66.1084 12.9893 65.4561 12.8486 64.9316 cv
12.5195 63.709 12.5127 63.5176 12.8057 63.3486 cv
12.9258 63.2793 12.9736 63.293 12.9932 63.2998 cv
13.3105 63.3994 13.7373 64.3164 14.1152 65.126 cv
14.6035 66.1758 15.2148 67.4854 16.1406 68.4678 cv
18.1309 70.5811 17.5537 72.8105 17.0225 73.9707 cv
15.2783 74.6729 12.8154 77.3076 11.8252 79.0654 cv
10.9023 79.2236 9.42969 78.7314 7.66602 77.668 cv
7.36133 77.4834 7.06836 77.2793 6.77539 77.0762 cv
5.63281 76.2842 4.33594 75.3887 2.2373 75.5859 cv
1.88672 75.6201 1.59766 75.4707 1.48047 75.2031 cv
1.34863 74.9014 1.47949 74.5381 1.8291 74.2266 cv
1.94238 74.127 2.00488 73.9795 1.99707 73.8281 cv
1.99121 73.6777 1.91504 73.5361 1.79004 73.4482 cv
1.32813 73.1133 1.06738 72.6133 1.12207 72.1709 cv
1.15039 71.9688 1.25781 71.6953 1.62988 71.5508 cv
1.82422 71.4756 1.9502 71.2891 1.94824 71.082 cv
1.94922 70.876 1.82129 70.6914 1.62695 70.6162 cv
1.26758 70.4805 1.02441 70.2646 1.00195 70.0596 cv
.979492 69.8555 1.16113 69.6084 1.50391 69.375 cv
2.8877 68.4375 5.19141 68.2129 6.23438 68.4658 cv
6.43848 68.5156 6.65039 68.4326 6.7666 68.2598 cv
6.88379 68.085 6.87988 67.8564 6.75781 67.6865 cv
5.80176 66.3604 4.27832 66.2588 3.16797 66.1807 cv
2.02539 66.1006 1.68262 66.0137 1.62109 65.5986 cv
cp
12.5801 79.7617 mo
13.4287 78.0508 16.1592 75.2168 17.5684 74.8281 cv
20.7744 76.8643 22.4893 78.1836 23.4375 79.3047 cv
23.4404 79.3105 23.4434 79.3184 23.4482 79.3242 cv
23.4512 79.3262 23.4541 79.3271 23.457 79.3291 cv
24.5225 80.6025 24.5957 81.6211 24.6875 83.1357 cv
24.7061 83.4121 24.9424 83.6201 25.2158 83.6035 cv
25.4932 83.5879 25.7021 83.3506 25.6865 83.0742 cv
25.5938 81.5303 25.4502 80.4189 24.6543 79.2412 cv
25.6504 78.9512 26.873 78.6123 28.1143 78.2686 cv
29.2109 77.9678 30.3008 77.665 31.252 77.3916 cv
31.3428 79.5703 31.8652 82.1641 32.6826 84.5498 cv
29.4639 85.6973 23.2549 87.8604 21.0215 86.7656 cv
19.3564 85.9531 15.2139 82.7881 12.5801 79.7617 cv
cp
34.5459 86.5156 mo
32.9814 83.168 32.0205 78.5977 32.2744 75.7158 cv
40.1123 74.0283 45.6045 74.0742 47.3711 75.8555 cv
47.7861 76.2725 47.998 76.7842 48.0186 77.417 cv
48.1357 81.1377 40.3428 84.918 34.5459 86.5156 cv
cp
.930664 64.9102 mo
.691406 65.1504 .584961 65.4492 .631836 65.751 cv
.826172 67.0205 2.03418 67.1035 3.09766 67.1787 cv
3.61621 67.2148 4.14453 67.252 4.62695 67.3896 cv
3.36621 67.4834 1.94434 67.8672 .941406 68.5479 cv
.0361328 69.1602 -.03125 69.8301 .00878906 70.1748 cv
.0498047 70.5352 .233398 70.8682 .537109 71.124 cv
.317383 71.377 .176758 71.6885 .131836 72.042 cv
.0488281 72.6924 .294922 73.3682 .790039 73.8955 cv
.411133 74.4268 .322266 75.0469 .563477 75.6006 cv
.643555 75.7891 .757813 75.9551 .893555 76.0928 cv
1.25 76.4512 1.76465 76.6338 2.3291 76.5801 cv
4.06738 76.4189 5.10547 77.1377 6.20605 77.8994 cv
6.5166 78.1143 6.8252 78.3271 7.14941 78.5234 cv
8.94922 79.6084 10.4326 80.1338 11.5771 80.0947 cv
11.5918 80.1191 11.5947 80.1465 11.6123 80.168 cv
12.0732 80.7158 12.5869 81.2686 13.125 81.8115 cv
15.7705 84.4785 19.0654 86.9238 20.5811 87.6641 cv
23.1904 88.9424 29.4629 86.7588 33.0264 85.4893 cv
33.2725 86.1289 33.54 86.748 33.8271 87.3291 cv
33.8525 87.3779 33.8838 87.4219 33.9219 87.46 cv
34.0439 87.583 34.2256 87.6367 34.4033 87.5908 cv
38.5225 86.5088 49.1797 82.5674 49.0186 77.3848 cv
48.9902 76.502 48.6738 75.75 48.0801 75.1514 cv
45.4277 72.4766 37.7129 73.4932 31.709 74.8154 cv
31.5039 74.8613 31.3486 75.0313 31.3213 75.2393 cv
31.2773 75.5869 31.252 75.9629 31.2432 76.3545 cv
30.2402 76.6455 29.0439 76.9736 27.8496 77.3066 cv
26.4346 77.6963 25.0449 78.0811 23.9854 78.3975 cv
22.9131 77.2324 21.1152 75.8994 18.1006 73.9834 cv
18.6006 72.668 19.0889 70.1406 16.8691 67.7813 cv
16.0518 66.916 15.5049 65.7393 15.0205 64.7031 cv
14.4697 63.5166 14.0322 62.5791 13.2939 62.3467 cv
13.0732 62.2783 12.7207 62.2432 12.3076 62.4805 cv
11.3066 63.0576 11.5615 64 11.8809 65.1924 cv
12.0186 65.6953 12.1885 66.3252 12.3213 67.0781 cv
12.3174 67.0928 12.2949 67.1396 12.2666 67.1973 cv
10.1572 64.9561 8.08594 64.374 6.5 64.1279 cv
4.54297 63.8223 1.77637 64.0703 .930664 64.9102 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
254.003 121.23 mo
254.203 121.36 254.403 121.49 254.613 121.631 cv
254.563 121.7 li
251.973 122.061 248.833 128.53 251.453 132.011 cv
249.783 133.601 248.604 135.53 247.543 137.28 cv
247.513 137.261 li
247.413 135.73 245.263 133.141 241.263 132.391 cv
241.043 132.341 li
242.233 127.271 244.323 121.601 247.133 117.761 cv
247.173 117.621 li
250.483 118.57 252.113 119.99 254.003 121.23 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
241.043 132.341 mo
240.063 136.501 239.684 140.261 240.013 142.261 cv
239.973 142.61 li
238.983 142.511 238.263 142.211 237.934 142.07 cv
236.763 137.141 240.883 121.141 245.133 117.141 cv
245.883 117.28 246.553 117.44 247.173 117.621 cv
247.133 117.761 li
244.323 121.601 242.233 127.271 241.043 132.341 cv
cp
0 0 0 0 cmyk
f
241.263 132.391 mo
245.263 133.141 247.413 135.73 247.513 137.261 cv
247.543 137.28 li
246.263 139.4 245.153 141.271 243.513 142.021 cv
242.173 142.631 240.943 142.721 239.973 142.61 cv
240.013 142.261 li
239.684 140.261 240.063 136.501 241.043 132.341 cv
241.263 132.391 li
cp
f
262.394 126.041 mo
262.243 126.36 li
260.083 127.36 258.033 131.371 258.633 134.841 cv
255.543 133.521 252.253 132.131 251.453 132.011 cv
248.833 128.53 251.973 122.061 254.563 121.7 cv
254.613 121.631 li
256.684 122.971 259.333 124.601 262.394 126.041 cv
cp
f
277.653 133.94 mo
277.633 134.261 li
275.213 138.771 272.553 140.271 263.684 136.931 cv
262.593 136.521 260.653 135.69 258.633 134.841 cv
258.033 131.371 260.083 127.36 262.243 126.36 cv
262.394 126.041 li
263.713 126.671 265.104 127.251 266.553 127.771 cv
268.173 131.591 274.203 133.73 277.653 133.94 cv
cp
0 .167361 .439734 0 cmyk
f
309.973 153.36 mo
308.473 153.7 306.113 156.11 306.113 159.45 cv
306.093 159.78 li
300.003 159.501 293.333 158.761 291.013 158.15 cv
290.854 158.121 li
291.483 154.551 293.144 151.971 294.473 149.301 cv
294.483 149.28 294.493 149.251 294.503 149.23 cv
294.644 149.301 li
295.394 151.801 301.413 152.431 304.163 150.681 cv
304.184 150.69 li
304.153 150.771 304.144 150.831 304.144 150.86 cv
305.843 152.121 307.993 152.73 309.973 153.341 cv
309.973 153.36 li
cp
.823453 .403418 .425788 .104005 cmyk
f
315.803 161.7 mo
311.644 162.36 293.283 161.78 290.613 160.45 cv
290.644 159.621 290.723 158.851 290.854 158.121 cv
291.013 158.15 li
293.333 158.761 300.003 159.501 306.093 159.78 cv
310.053 159.95 313.773 159.921 315.883 159.53 cv
315.953 160.521 315.883 161.381 315.803 161.7 cv
cp
.181369 .0870985 .113436 0 cmyk
f
309.973 153.341 mo
312.203 154.03 314.213 154.73 315.144 156.36 cv
315.623 157.221 315.833 158.461 315.883 159.53 cv
313.773 159.921 310.053 159.95 306.093 159.78 cv
306.113 159.45 li
306.113 156.11 308.473 153.7 309.973 153.36 cv
309.973 153.341 li
cp
f
306.383 144.931 mo
305.413 147.57 304.394 150.011 304.184 150.69 cv
304.163 150.681 li
301.413 152.431 295.394 151.801 294.644 149.301 cv
294.503 149.23 li
295.473 147.271 296.434 145.23 297.184 143.081 cv
297.593 143.221 li
298.934 145.221 304.093 145.721 306.184 144.86 cv
306.383 144.931 li
cp
f
298.723 133.141 mo
301.473 133.03 306.223 132.541 308.273 131.53 cv
308.303 131.591 li
308.644 133.841 308.553 137.91 307.644 141.141 cv
307.303 142.331 306.854 143.65 306.383 144.931 cv
306.184 144.86 li
304.093 145.721 298.934 145.221 297.593 143.221 cv
297.184 143.081 li
298.293 140.001 298.983 136.7 298.723 133.16 cv
298.723 133.141 li
cp
.0797436 .400244 .584497 0 cmyk
f
291.373 107.521 mo
291.333 107.761 li
290.203 114.021 288.573 117.391 287.144 120.041 cv
285.313 120.041 283.953 120.021 283.953 120.021 cv
283.953 120.021 287.213 112.601 287.713 106.931 cv
287.723 106.881 li
288.963 107.101 290.184 107.311 291.373 107.521 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
309.113 130.9 mo
308.943 131.131 308.653 131.341 308.273 131.53 cv
306.223 132.541 301.473 133.03 298.723 133.141 cv
297.773 133.171 297.063 133.16 296.783 133.11 cv
295.323 129.041 289.953 121.66 287.144 120.041 cv
288.573 117.391 290.203 114.021 291.333 107.761 cv
291.373 107.521 li
293.913 107.95 296.323 108.341 298.453 108.641 cv
298.703 112.641 li
300.203 114.521 306.663 120.801 309.113 130.9 cv
cp
f
273.623 104.141 mo
277.934 105.041 282.934 106.011 287.723 106.881 cv
287.713 106.931 li
287.213 112.601 283.953 120.021 283.953 120.021 cv
282.453 124.851 281.213 128.101 278.883 133.931 cv
278.533 133.971 278.113 133.98 277.653 133.94 cv
274.203 133.73 268.173 131.591 266.553 127.771 cv
269.453 120.471 270.453 112.971 273.623 104.141 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
287.723 106.881 mo
287.713 106.931 li
287.213 112.601 283.953 120.021 283.953 120.021 cv
283.903 120.181 283.854 120.341 283.803 120.49 cv
282.243 116.07 276.823 112.581 270.854 113.2 cv
271.623 110.32 272.483 107.32 273.623 104.141 cv
277.934 105.041 282.934 106.011 287.723 106.881 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
277.653 133.94 mo
277.633 134.261 li
276.833 135.751 276.013 136.91 274.943 137.671 cv
271.173 137.11 265.903 134.121 265.413 127.351 cv
265.793 127.49 266.173 127.631 266.553 127.771 cv
268.173 131.591 274.203 133.73 277.653 133.94 cv
cp
.0797436 .400244 .584497 0 cmyk
f
315.37 161.254 mo
310.632 161.845 294.34 161.212 291.13 160.118 cv
291.156 159.637 291.204 159.175 291.268 158.727 cv
294.593 159.483 303.784 160.375 310.419 160.375 cv
312.382 160.375 314.118 160.296 315.411 160.113 cv
315.416 160.572 315.399 160.978 315.37 161.254 cv
cp
294.09 151.139 mo
294.252 150.829 294.408 150.521 294.566 150.213 cv
294.991 150.784 295.666 151.262 296.592 151.606 cv
297.565 151.969 298.804 152.177 300.066 152.177 cv
301.449 152.177 302.842 151.908 303.962 151.34 cv
305.372 152.346 307.008 152.934 308.641 153.448 cv
307.166 154.459 305.69 156.616 305.622 159.26 cv
299.979 158.988 293.943 158.324 291.444 157.745 cv
291.973 155.19 293.041 153.136 294.09 151.139 cv
cp
299.242 133.594 mo
301.806 133.471 305.622 133.073 307.874 132.22 cv
308.125 134.562 307.972 138.139 307.157 141.001 cv
306.854 142.069 306.458 143.241 306.043 144.391 cv
306.025 144.396 306.008 144.395 305.991 144.401 cv
304.082 145.184 299.181 144.691 298.014 142.943 cv
297.964 142.869 297.896 142.82 297.822 142.783 cv
298.787 139.932 299.404 136.862 299.242 133.594 cv
cp
297.148 132.647 mo
295.537 128.493 290.679 121.879 287.802 119.872 cv
289.178 117.288 290.69 113.977 291.775 108.09 cv
293.95 108.459 296.052 108.796 297.979 109.075 cv
298.204 112.672 li
298.211 112.774 298.248 112.873 298.313 112.953 cv
298.512 113.202 298.797 113.527 299.146 113.927 cv
301.334 116.424 306.427 122.238 308.56 130.765 cv
307.051 132.099 299.09 132.79 297.148 132.647 cv
cp
278.535 133.46 mo
275.397 133.621 268.85 131.481 267.093 127.755 cv
268.565 124.012 269.545 120.232 270.58 116.234 cv
271.528 112.576 272.507 108.798 273.945 104.72 cv
277.643 105.485 282.404 106.422 287.181 107.286 cv
286.582 112.753 283.526 119.744 283.476 119.867 cv
282.022 124.552 280.815 127.753 278.535 133.46 cv
cp
263.859 136.461 mo
262.823 136.07 261.009 135.301 259.088 134.486 cv
258.691 131.348 260.545 127.702 262.459 126.813 cv
262.521 126.784 262.572 126.744 262.615 126.697 cv
263.76 127.224 264.952 127.718 266.193 128.165 cv
267.946 131.908 273.473 133.951 276.998 134.375 cv
274.747 138.38 272.178 139.59 263.859 136.461 cv
cp
243.302 141.562 mo
242.383 141.982 241.445 142.171 240.499 142.142 cv
240.217 140.35 240.537 136.88 241.419 132.946 cv
245.131 133.734 246.856 136.052 246.994 137.223 cv
245.798 139.199 244.75 140.896 243.302 141.562 cv
cp
245.298 117.682 mo
245.693 117.761 246.059 117.85 246.414 117.939 cv
241.62 124.854 238.862 137.071 239.482 142.027 cv
239.112 141.953 238.741 141.852 238.369 141.709 cv
237.407 136.64 241.299 121.774 245.298 117.682 cv
cp
253.56 121.537 mo
252.484 122.132 251.437 123.439 250.727 125.151 cv
249.673 127.694 249.728 130.192 250.829 131.952 cv
249.54 133.246 248.539 134.712 247.672 136.116 cv
246.94 134.555 244.952 132.688 241.652 131.977 cv
242.811 127.213 244.755 121.949 247.425 118.229 cv
249.811 118.976 251.279 119.975 252.695 120.952 cv
252.982 121.15 253.27 121.345 253.56 121.537 cv
cp
251.773 131.576 mo
250.569 129.835 250.905 127.332 251.65 125.534 cv
252.397 123.732 253.598 122.378 254.585 122.205 cv
256.652 123.535 258.969 124.926 261.544 126.186 cv
259.576 127.469 257.857 130.802 258.042 134.043 cv
254.885 132.707 252.692 131.807 251.773 131.576 cv
cp
290.789 107.924 mo
289.711 113.764 288.205 117 286.849 119.537 cv
285.968 119.535 285.22 119.53 284.704 119.524 cv
285.495 117.617 287.644 112.115 288.167 107.464 cv
289.045 107.621 289.921 107.774 290.789 107.924 cv
cp
304.46 148.545 mo
304.098 149.465 303.892 149.992 303.776 150.32 cv
302.113 151.306 299.09 151.471 296.94 150.67 cv
295.946 150.299 295.299 149.764 295.117 149.16 cv
295.115 149.154 295.11 149.149 295.108 149.144 cv
295.932 147.47 296.758 145.692 297.457 143.814 cv
298.647 145.128 301.273 145.769 303.54 145.769 cv
304.3 145.769 305.01 145.692 305.616 145.553 cv
305.203 146.652 304.795 147.692 304.46 148.545 cv
cp
314.704 156.61 mo
315.089 157.289 315.279 158.227 315.362 159.11 cv
313.328 159.416 310.102 159.441 306.627 159.304 cv
306.694 156.272 308.806 154.203 310.01 153.879 cv
312.047 154.516 313.896 155.188 314.704 156.61 cv
cp
315.573 156.116 mo
314.492 154.212 312.17 153.496 309.711 152.737 cv
307.977 152.203 306.188 151.651 304.717 150.659 cv
304.851 150.281 305.124 149.587 305.39 148.911 cv
306.191 146.877 307.401 143.805 308.119 141.274 cv
309.007 138.151 309.144 134.202 308.828 131.771 cv
309.122 131.594 309.363 131.404 309.514 131.195 cv
309.6 131.077 309.629 130.927 309.595 130.785 cv
307.442 121.881 302.156 115.846 299.898 113.269 cv
299.615 112.944 299.376 112.671 299.192 112.449 cv
298.952 108.609 li
298.951 108.591 298.942 108.575 298.939 108.558 cv
298.935 108.529 298.929 108.504 298.92 108.478 cv
298.905 108.433 298.885 108.393 298.859 108.354 cv
298.854 108.347 298.85 108.34 298.844 108.332 cv
298.809 108.285 298.766 108.247 298.716 108.216 cv
298.712 108.214 298.708 108.212 298.705 108.21 cv
298.659 108.184 298.61 108.167 298.556 108.157 cv
298.544 108.154 298.535 108.147 298.523 108.146 cv
290.942 107.063 280.425 105.048 273.722 103.652 cv
273.471 103.594 273.233 103.739 273.149 103.973 cv
271.616 108.251 270.598 112.183 269.612 115.983 cv
268.609 119.855 267.648 123.518 266.256 127.119 cv
261.566 125.391 257.572 122.973 254.273 120.814 cv
253.933 120.591 253.6 120.36 253.263 120.129 cv
251.34 118.802 249.352 117.43 245.228 116.649 cv
245.074 116.62 244.909 116.666 244.792 116.776 cv
240.39 120.92 236.209 136.985 237.449 142.19 cv
237.486 142.346 237.595 142.474 237.742 142.535 cv
238.798 142.979 239.784 143.146 240.673 143.146 cv
241.901 143.146 242.942 142.826 243.718 142.47 cv
245.477 141.664 246.611 139.788 247.925 137.616 cv
248.927 135.961 250.056 134.093 251.609 132.56 cv
252.646 132.848 255.659 134.118 258.265 135.224 cv
258.358 135.331 258.49 135.402 258.638 135.402 cv
258.651 135.402 258.665 135.4 258.679 135.398 cv
258.685 135.401 258.69 135.404 258.696 135.406 cv
260.627 136.226 262.451 136.999 263.508 137.396 cv
272.712 140.86 275.538 139.224 278.075 134.502 cv
278.083 134.487 278.083 134.471 278.089 134.456 cv
278.151 134.457 278.22 134.463 278.279 134.463 cv
278.52 134.463 278.741 134.451 278.94 134.43 cv
279.123 134.409 279.28 134.289 279.349 134.118 cv
281.662 128.334 282.89 125.098 284.316 120.521 cv
284.819 120.526 285.799 120.536 287.009 120.537 cv
289.709 122.212 294.865 129.251 296.315 133.277 cv
296.376 133.443 296.519 133.565 296.692 133.599 cv
296.834 133.626 297.155 133.641 297.608 133.641 cv
297.797 133.641 298.012 133.638 298.243 133.632 cv
298.532 139.425 296.228 144.636 294.024 149.082 cv
293.762 149.613 293.484 150.141 293.204 150.674 cv
291.756 153.433 290.258 156.285 290.114 160.43 cv
290.107 160.625 290.216 160.807 290.391 160.895 cv
292.423 161.911 302.34 162.479 309.408 162.479 cv
312.272 162.479 314.67 162.386 315.884 162.191 cv
316.081 162.159 316.241 162.014 316.29 161.819 cv
316.47 161.103 316.6 157.925 315.573 156.116 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
297.61 77.6611 mo
298.812 82.5107 288.19 83.8311 282.091 84.1709 cv
281.911 83.751 281.761 83.2813 281.621 82.7607 cv
281.011 80.5205 280.751 77.4512 280.981 74.5605 cv
281.041 73.7305 281.142 72.9111 281.291 72.1406 cv
286.601 72.0508 296.541 73.3008 297.61 77.6611 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
280.981 74.5605 mo
280.751 77.4512 281.011 80.5205 281.621 82.7607 cv
281.431 82.8105 li
279.03 82.7813 275.461 82.9912 273.461 83.0713 cv
273.19 83.0313 li
272.871 85.1006 272.11 87.3506 271.69 89.1113 cv
271.621 89.1309 271.53 89.1406 271.401 89.1406 cv
270.19 89.2012 266.36 88.8506 264.091 88.2412 cv
263.961 88.2012 263.831 88.1611 263.711 88.1211 cv
263.69 85.751 265.791 77.8213 267.142 76.2607 cv
268.921 74.2012 278.511 74.5205 280.812 74.5508 cv
280.981 74.5605 li
cp
.498634 .76672 .682032 .673518 cmyk
f
272.901 97.9111 mo
273.142 97.9404 273.36 97.9404 273.551 97.9111 cv
273.562 98.1113 li
273.521 100.531 273.021 102.181 271.981 102.961 cv
271.091 103.631 269.28 103.65 268.351 102.541 cv
267.151 103.511 260.331 103.381 259.501 98.6709 cv
259.091 96.3105 259.78 95.0508 260.711 94.4404 cv
261.631 93.8506 262.791 93.8906 263.312 94.1309 cv
264.881 93.251 267.161 93.9307 267.471 94.8809 cv
267.581 94.9707 li
267.411 95.1807 267.301 95.4209 267.261 95.7109 cv
267.051 97.3311 270.731 97.6904 272.901 97.9111 cv
cp
.0797436 .400244 .584497 0 cmyk
f
271.401 89.2813 mo
274.091 90.9004 275.621 93.5908 275.461 95.041 cv
275.341 96.3311 275.131 97.7813 273.551 97.9111 cv
273.36 97.9404 273.142 97.9404 272.901 97.9111 cv
270.731 97.6904 267.051 97.3311 267.261 95.7109 cv
267.301 95.4209 267.411 95.1807 267.581 94.9707 cv
267.471 94.8809 li
267.161 93.9307 264.881 93.251 263.312 94.1309 cv
262.791 93.8906 261.631 93.8506 260.711 94.4404 cv
260.681 94.3906 li
260.892 91.2207 262.671 89.0713 264.062 88.3506 cv
264.091 88.2412 li
266.36 88.8506 270.19 89.2012 271.401 89.1406 cv
271.401 89.2813 li
cp
f
296.739 79.7422 mo
295.235 81.7734 290.028 83.1924 282.426 83.6484 cv
281.404 80.9404 281.1 76.2773 281.708 72.6348 cv
281.784 72.6338 li
287.446 72.6338 296.204 74.0029 297.13 77.7754 cv
297.308 78.5029 297.181 79.1465 296.739 79.7422 cv
cp
275.056 82.498 mo
274.579 82.5195 274.147 82.5391 273.751 82.5557 cv
273.917 81.1465 273.857 79.8311 273.324 78.7852 cv
273.198 78.54 272.897 78.4404 272.651 78.5674 cv
272.405 78.6924 272.308 78.9941 272.434 79.2402 cv
273.372 81.0801 272.462 84.3711 271.731 87.0166 cv
271.573 87.5869 271.422 88.1357 271.293 88.6484 cv
270.165 88.6758 266.478 88.3633 264.22 87.7471 cv
264.384 85.0361 266.353 77.9336 267.519 76.5879 cv
268.517 75.4355 272.788 74.9219 280.216 75.043 cv
280.444 75.0469 li
280.298 77.5664 280.501 80.1895 281.001 82.3105 cv
279.2 82.3057 276.92 82.4121 275.056 82.498 cv
cp
274.968 94.9902 mo
274.874 95.9004 274.749 96.752 274.252 97.1553 cv
273.96 97.3916 273.535 97.4756 272.892 97.4092 cv
271.364 97.252 268.519 96.96 267.858 96.126 cv
267.769 96.0137 267.737 95.9043 267.754 95.7744 cv
267.796 95.4521 267.97 95.1982 268.286 94.999 cv
269.094 94.4883 270.623 94.4619 272.093 94.9355 cv
272.354 95.0225 272.637 94.877 272.722 94.6133 cv
272.806 94.3506 272.662 94.0684 272.399 93.9844 cv
270.638 93.416 268.813 93.4814 267.751 94.1543 cv
267.712 94.1787 267.683 94.2109 267.646 94.2373 cv
267.4 93.9492 267.048 93.7002 266.585 93.5186 cv
265.768 93.1963 264.44 93.0381 263.282 93.583 cv
262.774 93.4316 262.024 93.4072 261.28 93.6396 cv
261.676 91.1816 263.055 89.4297 264.286 88.8008 cv
264.289 88.7998 264.291 88.7969 264.294 88.7949 cv
266.435 89.3242 269.567 89.6416 271.067 89.6445 cv
271.093 89.667 271.11 89.6934 271.14 89.7109 cv
273.794 91.3047 275.089 93.8438 274.968 94.9902 cv
cp
271.683 102.558 mo
271.03 103.05 269.519 103.163 268.731 102.218 cv
268.556 102.009 268.245 101.978 268.031 102.15 cv
267.541 102.549 265.245 102.8 263.114 102.005 cv
261.884 101.544 260.345 100.577 259.995 98.5801 cv
259.698 96.875 259.989 95.626 260.838 94.9688 cv
261.644 94.3467 262.731 94.4121 263.109 94.582 cv
263.255 94.6494 263.421 94.6416 263.56 94.5635 cv
264.401 94.0938 265.503 94.1689 266.22 94.4492 cv
266.677 94.6279 266.902 94.8516 266.972 95.0039 cv
266.871 95.2031 266.793 95.4141 266.763 95.6445 cv
266.711 96.043 266.819 96.4238 267.074 96.7471 cv
267.926 97.8223 270.264 98.1445 272.853 98.4102 cv
272.921 98.417 272.984 98.417 273.05 98.4209 cv
272.976 100.534 272.52 101.93 271.683 102.558 cv
cp
298.101 77.5371 mo
296.954 72.8682 286.927 71.6338 281.784 71.6338 cv
281.28 71.6377 li
281.044 71.6416 280.842 71.8115 280.798 72.0439 cv
280.676 72.6846 280.592 73.3613 280.525 74.0488 cv
280.232 74.0439 li
274.806 73.9473 268.368 74.0811 266.763 75.9336 cv
265.282 77.6416 263.187 85.7393 263.208 88.124 cv
263.209 88.1768 263.241 88.2197 263.257 88.2676 cv
261.847 89.2842 260.439 91.4033 260.202 94.1992 cv
259.4 94.832 258.554 96.1318 259.011 98.752 cv
259.44 101.215 261.289 102.39 262.765 102.941 cv
264.786 103.697 267.12 103.668 268.26 103.164 cv
268.858 103.692 269.645 103.935 270.407 103.935 cv
271.107 103.935 271.787 103.73 272.283 103.357 cv
273.405 102.516 273.982 100.867 274.054 98.335 cv
274.367 98.2529 274.646 98.1221 274.882 97.9316 cv
275.743 97.2334 275.87 95.9961 275.963 95.0928 cv
276.125 93.5479 274.723 90.9619 272.185 89.2158 cv
272.325 88.6201 272.505 87.9678 272.694 87.2832 cv
273.029 86.0723 273.374 84.7988 273.599 83.5635 cv
274.042 83.5449 274.546 83.5225 275.102 83.4971 cv
277.048 83.4082 279.452 83.2998 281.264 83.3125 cv
281.378 83.6836 281.499 84.043 281.636 84.3633 cv
281.714 84.5488 281.896 84.668 282.095 84.668 cv
282.104 84.668 282.114 84.668 282.123 84.667 cv
287.934 84.3447 295.325 83.332 297.544 80.3369 cv
298.163 79.499 298.351 78.5576 298.101 77.5371 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
304.505 77.2334 mo
303.435 77.8135 302.075 78.1729 300.905 78.4434 cv
301.374 77.1436 302.745 73.6631 303.604 71.1631 cv
303.825 71.2432 li
304.515 71.4131 306.745 72.9531 306.395 75.0137 cv
306.235 75.9932 305.495 76.7031 304.505 77.2334 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
294.194 72.0732 mo
294.095 72.1836 li
290.185 68.873 286.845 66.6436 284.694 66.0732 cv
284.565 66.0332 284.435 66.0137 284.315 65.9834 cv
284.325 65.9531 li
287.194 64.8232 291.825 66.6934 295.575 68.0732 cv
295.784 68.1533 li
295.345 69.3428 294.885 70.5537 294.194 72.0732 cv
cp
.826932 .410346 .420874 .105837 cmyk
f
284.694 66.0732 mo
286.845 66.6436 290.185 68.873 294.095 72.1836 cv
296.235 73.9834 298.534 76.1035 300.905 78.4434 cv
294.635 75.293 290.315 72.7031 285.854 72.2334 cv
285.825 72.4932 li
284.354 73.6436 282.784 75.8535 281.204 78.7637 cv
281.075 78.6934 li
279.325 77.4531 278.325 74.4531 280.194 71.8232 cv
278.374 68.8232 280.325 65.1836 284.315 65.9834 cv
284.435 66.0137 284.565 66.0332 284.694 66.0732 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
304.515 77.2432 mo
305.024 82.3936 302.194 102.953 299.874 112.413 cv
295.325 114.323 276.825 111.453 270.325 107.323 cv
273.265 97.4336 277.284 85.9736 281.204 78.7637 cv
282.784 75.8535 284.354 73.6436 285.825 72.4932 cv
285.854 72.2334 li
290.315 72.7031 294.635 75.293 300.905 78.4434 cv
302.075 78.1729 303.435 77.8135 304.505 77.2334 cv
304.515 77.2432 li
cp
.74789 .241123 .31931 .00552377 cmyk
f
303.784 88.9336 mo
303.475 91.6436 303.085 94.5635 302.655 97.4629 cv
295.034 98.5537 282.085 94.9834 275.864 90.7734 cv
276.935 87.9834 278.034 85.3232 279.135 82.9229 cv
284.555 85.6729 296.845 89.8535 303.784 88.9336 cv
cp
0 0 0 0 cmyk
f
304.335 68.6631 mo
304.284 69.0928 303.995 70.0234 303.604 71.1631 cv
302.745 73.6631 301.374 77.1436 300.905 78.4434 cv
298.534 76.1035 296.235 73.9834 294.095 72.1836 cv
294.194 72.0732 li
294.885 70.5537 295.345 69.3428 295.784 68.1533 cv
296.075 67.3828 296.364 66.6328 296.694 65.8232 cv
299.575 66.8232 301.325 67.1934 304.335 68.6631 cv
cp
.0797436 .400244 .584497 0 cmyk
f
305.905 74.9316 mo
305.659 76.4063 303.681 77.21 301.706 77.7334 cv
301.818 77.4375 301.944 77.1055 302.08 76.7471 cv
302.763 74.9473 303.413 73.2188 303.911 71.8047 cv
304.612 72.1426 306.163 73.3838 305.905 74.9316 cv
cp
299.454 112.04 mo
294.867 113.625 277.489 110.995 270.913 107.098 cv
273.103 99.7793 280.138 77.5625 286.132 72.8848 cv
286.171 72.8545 286.196 72.8164 286.224 72.7783 cv
289.677 73.2529 293.104 75.0078 297.657 77.3486 cv
298.616 77.8418 299.622 78.3594 300.684 78.8926 cv
300.688 78.8945 300.692 78.8945 300.696 78.8965 cv
300.713 78.9043 300.73 78.9053 300.747 78.9111 cv
300.792 78.9258 300.837 78.9375 300.882 78.9395 cv
300.892 78.9404 300.899 78.9453 300.908 78.9453 cv
300.946 78.9453 300.983 78.9414 301.021 78.9326 cv
302.066 78.6914 303.127 78.4004 304.058 78.0029 cv
304.296 84.1006 301.581 103.213 299.454 112.04 cv
cp
279.769 75.6826 mo
279.604 74.8193 279.617 73.499 280.606 72.1143 cv
280.724 71.9512 280.731 71.7334 280.626 71.5625 cv
279.81 70.2266 279.806 68.6621 280.614 67.5771 cv
281.432 66.4795 282.875 66.1084 284.571 66.5566 cv
287.274 67.2715 292.243 70.9189 298.146 76.4756 cv
298.136 76.4697 298.125 76.4648 298.114 76.459 cv
291.915 73.2715 287.436 70.9648 282.12 71.8301 cv
281.847 71.874 281.662 72.1309 281.706 72.4033 cv
281.751 72.6748 282.003 72.8662 282.28 72.8164 cv
283.167 72.6729 284.026 72.627 284.876 72.6582 cv
283.615 73.8672 282.327 75.7432 281.058 78.0166 cv
280.421 77.4346 279.943 76.6006 279.769 75.6826 cv
cp
294.604 68.248 mo
295.142 68.4463 li
294.8 69.3506 294.427 70.3047 293.948 71.4004 cv
290.868 68.8369 288.231 67.0244 286.237 66.1133 cv
288.698 66.0684 291.911 67.2529 294.604 68.248 cv
cp
296.239 68.3721 mo
296.48 67.7334 296.718 67.1064 296.983 66.4492 cv
297.605 66.6611 298.177 66.8457 298.726 67.0225 cv
300.372 67.5537 301.808 68.0166 303.774 68.9492 cv
303.434 70.3574 302.021 74.083 301.146 76.3926 cv
300.981 76.8242 300.835 77.2129 300.707 77.5508 cv
298.599 75.4912 296.599 73.6533 294.745 72.0732 cv
295.374 70.6582 295.817 69.4932 296.239 68.3721 cv
cp
304.237 70.8584 mo
304.567 69.8799 304.785 69.1299 304.835 68.7285 cv
304.862 68.5156 304.751 68.3105 304.558 68.2168 cv
302.347 67.1396 300.811 66.6445 299.032 66.0703 cv
298.362 65.8545 297.655 65.626 296.864 65.3506 cv
296.614 65.2656 296.34 65.3857 296.238 65.6309 cv
295.967 66.2822 295.73 66.8965 295.497 67.5117 cv
294.952 67.3105 li
291.247 65.9404 287.053 64.3936 284.202 65.4629 cv
282.376 65.1631 280.765 65.7031 279.812 66.9795 cv
278.816 68.3154 278.747 70.1768 279.611 71.8008 cv
277.919 74.4404 278.742 77.4443 280.56 78.9268 cv
275.798 87.8691 271.388 101.992 269.845 107.181 cv
269.782 107.396 269.868 107.626 270.057 107.745 cv
275.321 111.087 287.831 113.491 295.256 113.491 cv
297.366 113.491 299.065 113.297 300.071 112.875 cv
300.218 112.813 300.325 112.688 300.364 112.533 cv
302.563 103.563 305.427 83.2578 305.031 77.5098 cv
306.007 76.9268 306.715 76.1572 306.892 75.0957 cv
307.255 72.9131 305.255 71.3076 304.237 70.8584 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
335.229 48.748 mo
333.728 55.418 331.222 65.0029 327.742 69.1992 cv
323.267 74.6074 316.131 76.4033 311.343 76.0166 cv
306.685 75.6445 291.782 72.5596 283.619 60.5342 cv
280.833 62.0615 275.134 60.2598 272.995 54.8555 cv
272.093 52.5762 272.17 50.5313 272.823 48.8955 cv
273.702 46.7129 275.595 45.2422 277.548 44.8965 cv
280.981 44.2891 283.868 46.8105 284.968 51.8008 cv
288.022 49.791 291.684 47.3086 294.048 42.9121 cv
294.042 42.8809 li
298.925 41.9307 305.192 42.2275 311.228 39.2559 cv
311.272 39.3018 li
309.72 40.9531 308.256 43.1582 307.452 45.7334 cv
311.184 44.3848 326.009 46.5762 333.415 37.2813 cv
333.471 37.3174 li
335.264 39.208 336.24 41.627 336.356 43.4834 cv
336.088 44.7607 335.712 46.5996 335.229 48.748 cv
cp
0 .167361 .439734 0 cmyk
f
337.685 29.9258 mo
342.817 36.6855 339.118 45.6973 335.485 48.7979 cv
335.229 48.748 li
335.712 46.5996 336.088 44.7607 336.356 43.4834 cv
336.24 41.627 335.264 39.208 333.471 37.3174 cv
333.415 37.2813 li
326.009 46.5762 311.184 44.3848 307.452 45.7334 cv
308.256 43.1582 309.72 40.9531 311.272 39.3018 cv
311.228 39.2559 li
305.192 42.2275 298.925 41.9307 294.042 42.8809 cv
294.048 42.9121 li
291.684 47.3086 288.022 49.791 284.968 51.8008 cv
283.868 46.8105 280.981 44.2891 277.548 44.8965 cv
275.595 45.2422 273.702 46.7129 272.823 48.8955 cv
272.486 48.7559 li
270.177 46.9766 266.995 42.5791 266.137 38.4521 cv
268.351 38.207 270.511 36.9482 273.686 36.3115 cv
270.559 33.5918 267.776 28.3643 266.576 24.5693 cv
270.11 24.4785 274.331 21.4463 281.973 20.665 cv
278.331 18.7305 275.829 15.751 274.456 11.7354 cv
277.952 11.9717 283.58 10.0703 290.122 11.2051 cv
288.002 9.61914 285.999 6.23438 286.024 3.17676 cv
289.195 4.72461 309.881 5.7959 322.154 12.0078 cv
332.804 17.3857 338.804 24.6396 337.685 29.9258 cv
cp
.373144 .782101 .665248 .350225 cmyk
f
331.462 20.1689 mo
334.011 22.6621 335.204 24.9551 335.702 26.8047 cv
330.376 31.832 309.559 23.6875 299.032 21.1426 cv
290.27 19.0137 283.965 18.2598 279.882 19.334 cv
278.973 18.6748 278.156 17.9053 277.438 17.0664 cv
290.619 10.3066 318 21.0479 325.438 21.4209 cv
328.78 21.5889 330.604 21.0566 331.462 20.1689 cv
cp
.341833 .684718 .553277 .151247 cmyk
f
337.685 29.9258 mo
338.021 28.3438 337.721 26.5967 336.847 24.7637 cv
335.909 22.7813 334.289 20.71 332.088 18.6914 cv
329.533 16.3301 326.177 14.0371 322.154 12.0078 cv
309.881 5.7959 289.195 4.72461 286.024 3.17676 cv
286.026 3.32715 286.03 3.46973 286.042 3.62109 cv
297.854 7.65527 312.522 7.40234 326.219 16.0957 cv
328.412 17.4883 330.126 18.8564 331.462 20.1689 cv
334.011 22.6621 335.204 24.9551 335.702 26.8047 cv
336.14 28.416 336.061 29.6963 335.906 30.5029 cv
338.8 33.5791 340.502 39.707 336.154 48.1611 cv
339.54 44.5986 342.504 36.2656 337.685 29.9258 cv
cp
0 0 0 0 cmyk
f
277.11 50.1289 mo
275.183 51.2324 275.175 54.4795 277.886 56.4277 cv
279.977 57.9297 282.247 57.3018 281.982 54.3887 cv
281.652 50.7422 279.178 48.9443 277.11 50.1289 cv
cp
.0797436 .400244 .584497 0 cmyk
f
335.229 48.748 mo
333.728 55.418 331.222 65.0029 327.742 69.1992 cv
323.267 74.6074 316.131 76.4033 311.343 76.0166 cv
310.755 75.9678 310 75.8799 309.122 75.7275 cv
314.542 75.5234 320.651 73.9795 326 69.0254 cv
329.886 65.4111 332.31 56.0996 335.367 40.0557 cv
335.964 41.2422 336.296 42.4492 336.356 43.4834 cv
336.088 44.7607 335.712 46.5996 335.229 48.748 cv
cp
0 0 0 0 cmyk
f
307.452 45.7334 mo
311.184 44.3848 326.009 46.5762 333.415 37.2813 cv
333.471 37.3174 li
333.542 37.3955 333.613 37.4746 333.684 37.5635 cv
328.463 49.6309 311.446 47.2246 304.083 49.0752 cv
304.354 47.4355 305.003 45.498 305.893 44.3428 cv
301.758 45.9551 295.748 45.0029 292.24 47.0313 cv
292.563 45.9912 292.801 45.1523 293.198 44.334 cv
293.492 43.8838 293.779 43.4141 294.048 42.9121 cv
294.041 42.8906 li
294.041 42.8906 294.041 42.8906 294.052 42.8828 cv
298.935 41.9316 305.192 42.2275 311.228 39.2559 cv
311.272 39.3018 li
309.72 40.9531 308.256 43.1582 307.452 45.7334 cv
cp
.0797436 .400244 .584497 0 cmyk
f
294.052 42.8828 mo
294.041 42.8906 294.041 42.8906 294.041 42.8906 cv
294.042 42.8809 li
294.052 42.8828 li
cp
f
336.859 43.4512 mo
336.727 41.374 335.662 39.0293 334.069 37.2412 cv
334.401 36.8027 334.722 36.3496 335.021 35.8623 cv
335.166 35.6279 335.092 35.3193 334.856 35.1748 cv
334.618 35.0293 334.313 35.1045 334.169 35.3398 cv
329.125 43.5645 319.003 44.208 312.307 44.6328 cv
310.655 44.7373 309.263 44.8262 308.226 45.0195 cv
309.657 41.3105 312.582 38.2656 314.901 37.0811 cv
315.147 36.9551 315.245 36.6543 315.119 36.4082 cv
314.994 36.1621 314.692 36.0645 314.446 36.1904 cv
313.403 36.7227 312.227 37.6191 311.096 38.7813 cv
311.063 38.7891 311.032 38.79 311.001 38.8047 cv
306.838 40.8623 302.491 41.334 298.655 41.75 cv
296.266 42.0078 293.991 42.2539 292.008 42.8525 cv
293.174 38.3516 297.554 33.5244 301.307 32.7891 cv
301.577 32.7354 301.755 32.4727 301.7 32.2021 cv
301.647 31.9316 301.387 31.7559 301.114 31.8076 cv
296.704 32.6719 291.713 38.3652 290.843 43.5234 cv
290.813 43.6992 290.879 43.8789 291.018 43.9922 cv
291.093 44.0537 291.184 44.0918 291.277 44.1025 cv
291.355 44.1123 291.435 44.1025 291.51 44.0752 cv
291.997 43.8926 292.514 43.7422 293.05 43.6094 cv
290.852 47.1406 287.765 49.3516 285.289 50.9912 cv
284.039 46.2705 281.082 43.7598 277.466 44.4023 cv
275.544 44.7432 273.789 46.0342 272.771 47.8564 cv
272.709 47.9658 272.663 48.082 272.607 48.1943 cv
270.404 46.4004 267.677 42.4961 266.747 38.8633 cv
267.752 38.6836 268.754 38.3311 269.808 37.9629 cv
270.962 37.5586 272.27 37.0996 273.785 36.7969 cv
273.971 36.7598 274.121 36.6191 274.17 36.4346 cv
274.219 36.25 274.158 36.0537 274.015 35.9287 cv
271.163 33.4521 268.528 28.6973 267.257 25.0244 cv
268.694 24.8584 270.243 24.3027 271.998 23.6719 cv
274.573 22.7471 277.777 21.5947 282.021 21.1582 cv
282.24 21.1357 282.419 20.9727 282.46 20.7578 cv
282.503 20.541 282.399 20.3223 282.204 20.2197 cv
278.913 18.4658 276.551 15.7881 275.175 12.252 cv
276.355 12.2461 277.708 12.0703 279.23 11.873 cv
282.246 11.4824 285.994 10.999 290.033 11.6992 cv
290.25 11.7402 290.486 11.6172 290.578 11.4043 cv
290.669 11.1934 290.604 10.9453 290.42 10.8066 cv
288.646 9.47754 286.826 6.63184 286.556 3.90723 cv
287.984 4.33594 290.563 4.73535 293.905 5.25195 cv
301.821 6.47754 313.786 8.32813 321.934 12.4502 cv
332.009 17.5469 338.287 24.6885 337.199 29.8184 cv
337.17 29.96 337.203 30.1074 337.291 30.2227 cv
341.83 36.2129 339.09 44.0859 336.002 47.5703 cv
336.242 46.4688 336.455 45.4658 336.629 44.6348 cv
336.85 43.5879 li
336.858 43.543 336.862 43.4971 336.859 43.4512 cv
cp
327.358 68.8809 mo
323.115 74.0098 316.277 75.9092 311.384 75.5156 cv
305.163 75.0107 291.448 71.1826 284.03 60.2539 cv
283.886 60.041 283.603 59.9717 283.376 60.0967 cv
282.264 60.7061 280.601 60.71 278.93 60.1055 cv
276.469 59.2168 274.474 57.2344 273.46 54.667 cv
272.565 52.4043 272.63 50.1582 273.644 48.3447 cv
274.516 46.7813 276.011 45.6758 277.64 45.3867 cv
280.854 44.8203 283.474 47.3145 284.481 51.9072 cv
284.517 52.0674 284.629 52.2002 284.78 52.2617 cv
284.932 52.3252 285.105 52.3076 285.244 52.2168 cv
288.056 50.3701 291.887 47.8389 294.382 43.334 cv
295.757 43.082 297.229 42.9102 298.764 42.7432 cv
302.135 42.3779 305.896 41.9648 309.634 40.4961 cv
308.533 41.957 307.569 43.6699 306.97 45.5859 cv
306.913 45.7676 306.964 45.9648 307.102 46.0977 cv
307.182 46.1738 307.283 46.2197 307.39 46.2324 cv
307.465 46.2412 307.544 46.2324 307.617 46.2051 cv
308.529 45.875 310.31 45.7617 312.37 45.6318 cv
318.262 45.2559 327.749 44.6328 333.422 38.0205 cv
335.041 39.8896 335.748 42.0078 335.856 43.4482 cv
335.65 44.4297 li
335.291 46.1426 334.784 48.543 334.146 51.1973 cv
333.931 50.582 333.541 50.3154 333.221 50.2207 cv
331.803 49.8105 329.63 51.6094 326.806 54.4551 cv
326.097 55.168 325.672 55.2754 325.542 55.2266 cv
325.415 55.1816 325.255 54.8867 325.198 54.3428 cv
325.164 54.0127 324.869 53.7715 324.539 53.8066 cv
324.211 53.8418 323.97 54.1357 324.004 54.4648 cv
324.137 55.7441 324.695 56.2002 325.143 56.3574 cv
325.24 56.3926 325.34 56.416 325.444 56.4277 cv
326.095 56.5039 326.837 56.127 327.656 55.3018 cv
331.312 51.6201 332.506 51.252 332.879 51.3711 cv
332.983 51.4023 333.041 51.6045 333.066 51.7227 cv
333.135 52.0479 333.452 52.2529 333.776 52.1875 cv
333.829 52.1768 333.872 52.1494 333.918 52.126 cv
332.401 58.252 330.194 65.4541 327.358 68.8809 cv
cp
338.222 29.7998 mo
339.209 24.1689 332.89 16.8721 322.385 11.5566 cv
314.096 7.36426 302.038 5.49902 294.058 4.26465 cv
290.239 3.67383 287.223 3.20703 286.239 2.72852 cv
286.086 2.65137 285.904 2.66211 285.758 2.75391 cv
285.611 2.84473 285.522 3.00293 285.521 3.1748 cv
285.502 5.88965 286.941 8.68359 288.601 10.4902 cv
285.042 10.1113 281.785 10.5332 279.103 10.8818 cv
277.296 11.1152 275.736 11.3184 274.487 11.2324 cv
274.32 11.2207 274.158 11.293 274.056 11.4258 cv
273.954 11.5596 273.926 11.7344 273.98 11.8936 cv
275.226 15.5264 277.398 18.3633 280.451 20.3467 cv
276.809 20.8809 273.982 21.8965 271.659 22.7305 cv
269.632 23.459 268.031 24.0342 266.567 24.0723 cv
266.411 24.0762 266.265 24.1543 266.174 24.2822 cv
266.082 24.4102 266.057 24.5732 266.104 24.7227 cv
267.202 28.2051 269.669 33.0576 272.652 36.0264 cv
271.467 36.3223 270.421 36.6875 269.478 37.0186 cv
268.233 37.4541 267.16 37.8311 266.083 37.9502 cv
265.943 37.9668 265.815 38.04 265.732 38.1543 cv
265.65 38.2676 265.62 38.4111 265.649 38.5498 cv
266.515 42.7002 269.652 47.1973 272.184 49.1475 cv
272.192 49.1543 272.204 49.1543 272.216 49.1602 cv
271.629 50.9609 271.724 52.9961 272.53 55.0352 cv
273.649 57.8691 275.859 60.0605 278.59 61.0459 cv
280.339 61.6797 282.115 61.7178 283.446 61.1689 cv
292.181 73.667 307.484 76.0762 310.718 76.4531 cv
311.036 76.4902 311.237 76.5078 311.305 76.5137 cv
316.455 76.9268 323.655 74.9248 328.128 69.5195 cv
331.59 65.335 334.107 55.9385 335.623 49.2725 cv
335.691 49.2539 335.757 49.2227 335.815 49.1738 cv
339.51 46.0215 343.42 36.8975 338.222 29.7998 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
316.892 67.2939 mo
310.894 68.6465 305.067 65.4316 303.83 62.5273 cv
303.921 62.5322 304.002 62.5439 304.063 62.5674 cv
304.323 62.6631 304.609 62.5342 304.708 62.2754 cv
304.806 62.0176 304.675 61.7285 304.417 61.6309 cv
303.867 61.4238 303.055 61.5244 302.484 61.873 cv
302.091 62.1113 301.852 62.4492 301.808 62.8223 cv
301.775 63.0967 301.971 63.3447 302.246 63.377 cv
302.52 63.4092 302.769 63.2129 302.801 62.9385 cv
302.804 62.9131 302.828 62.875 302.868 62.834 cv
303.946 65.5449 307.843 67.9834 312.303 68.5029 cv
313.869 68.6855 315.506 68.6318 317.112 68.2695 cv
317.381 68.208 317.551 67.9404 317.489 67.6709 cv
317.429 67.4023 317.164 67.2324 316.892 67.2939 cv
cp
f
278.729 49.2803 mo
277.342 49.0449 276.119 49.75 275.729 50.9141 cv
275.641 51.1748 275.782 51.458 276.044 51.5459 cv
276.306 51.6377 276.59 51.4932 276.678 51.2305 cv
276.91 50.5332 277.707 50.124 278.584 50.2686 cv
279.882 50.459 281.432 51.8232 281.535 55.0391 cv
281.543 55.291 281.734 55.4922 281.977 55.5195 cv
282.001 55.5234 282.025 55.5234 282.051 55.5225 cv
282.327 55.5146 282.543 55.2832 282.535 55.0078 cv
282.412 51.1738 280.408 49.5254 278.729 49.2803 cv
cp
f
309.391 51.3379 mo
311.339 54.3662 312.502 55.5684 313.63 55.6992 cv
313.659 55.7031 313.689 55.7051 313.72 55.708 cv
314.683 55.7725 315.376 55.0537 316.061 54.248 cv
316.276 53.9951 316.245 53.6162 315.992 53.4023 cv
315.739 53.1875 315.36 53.2188 315.146 53.4707 cv
314.586 54.1309 314.164 54.5352 313.8 54.5107 cv
313.79 54.5098 313.78 54.5088 313.771 54.5078 cv
312.783 54.3926 310.991 51.6094 310.398 50.6885 cv
307.025 45.4463 302.38 45.4883 299.427 47.1201 cv
299.136 47.2793 299.031 47.6455 299.19 47.9355 cv
299.351 48.2266 299.716 48.3301 300.006 48.1709 cv
302.507 46.792 306.465 46.792 309.391 51.3379 cv
cp
f
312.12 55.7783 mo
311.479 58.3574 309.41 60.0625 307.502 59.5879 cv
305.593 59.1123 304.564 56.6357 305.206 54.0566 cv
305.849 51.4775 307.918 49.7715 309.827 50.2471 cv
311.048 52.6475 311.191 52.8281 312.302 53.8926 cv
312.337 54.4951 312.281 55.1338 312.12 55.7783 cv
cp
f
309.554 54.0889 mo
309.048 55.1113 308.021 55.6357 307.265 55.2598 cv
306.508 54.8848 306.305 53.75 306.813 52.7266 cv
307.321 51.7051 308.347 51.1807 309.104 51.5566 cv
309.86 51.9316 310.063 53.0654 309.554 54.0889 cv
cp
0 0 0 0 cmyk
f
331.267 57.9873 mo
330.845 60.6113 329.229 62.5332 327.66 62.2813 cv
326.091 62.0293 325.16 59.6943 325.582 57.0713 cv
325.657 56.6143 325.767 56.1777 325.907 55.7705 cv
327.63 54.335 327.539 54.4063 329.189 52.7773 cv
330.759 53.0303 331.689 55.3623 331.267 57.9873 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
329.022 57.4023 mo
328.87 58.3555 328.188 59.0381 327.503 58.9287 cv
326.816 58.8184 326.384 57.9541 326.537 57.002 cv
326.69 56.0498 327.372 55.3672 328.059 55.4775 cv
328.744 55.5879 329.177 56.4502 329.022 57.4023 cv
cp
0 0 0 0 cmyk
f
272.773 47.8525 mo
272.71 47.9658 272.667 48.082 272.604 48.1953 cv
270.405 46.3984 267.679 42.4971 266.743 38.8652 cv
267.752 38.6807 268.759 38.335 269.809 37.9639 cv
270.964 37.5547 272.274 37.1035 273.78 36.7949 cv
273.977 36.7578 274.123 36.624 274.174 36.4375 cv
274.216 36.252 274.158 36.0537 274.013 35.9268 cv
271.197 33.4834 268.608 28.8223 267.312 25.1787 cv
270.131 27.9336 274.219 30.4434 277.144 31.0859 cv
280.521 28.8018 283.16 28.4355 287.147 28.4365 cv
284.655 30.0391 283.165 32.3818 282.133 35.7852 cv
288.33 30.9902 295.703 31.0439 300.344 31.998 cv
296.142 33.3301 291.655 38.6572 290.847 43.5254 cv
290.815 43.7031 290.876 43.8809 291.014 43.9883 cv
291.096 44.0586 291.184 44.0889 291.282 44.1006 cv
291.353 44.1084 291.435 44.0977 291.507 44.0752 cv
292.001 43.8926 292.513 43.7402 293.051 43.6113 cv
290.848 47.1396 287.761 49.3477 285.284 50.9922 cv
284.043 46.2666 281.084 43.7578 277.465 44.4023 cv
275.542 44.7432 273.79 46.0381 272.773 47.8525 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
318.476 63.0449 mo
319.392 62.1406 320.826 62.3125 320.463 63.2764 cv
320.099 64.2412 317.907 63.6084 318.476 63.0449 cv
cp
.0797436 .400244 .584497 0 cmyk
f
300.666 84.8193 mo
300.394 85.1855 300.07 85.5596 299.685 85.9375 cv
298.065 87.585 295.534 89.3594 292.925 90.6152 cv
292.172 90.9775 291.417 91.2988 290.672 91.5635 cv
287.933 87.0098 284.004 77.7852 287.239 74.6709 cv
290.841 71.1982 297.308 79.7158 300.666 84.8193 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
303.84 93.0176 mo
305.396 92.8789 307.661 93.1602 311.507 93.9736 cv
311.537 94.0234 311.577 94.0732 311.598 94.123 cv
312.483 95.5469 312.436 99.7783 311.788 101.67 cv
311.761 101.752 311.732 101.831 311.701 101.902 cv
307.688 102.292 302.208 101.687 300.246 101.039 cv
297.601 100.176 294.542 93.9063 292.998 90.7529 cv
292.925 90.6152 li
295.534 89.3594 298.065 87.585 299.685 85.9375 cv
299.829 86.0762 li
301.015 88.1641 302.847 91.2236 303.84 93.0176 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
292.929 90.6123 mo
293.001 90.7529 li
293.351 91.4697 293.779 92.3477 294.266 93.2959 cv
296.937 92.6729 299.838 91.1855 301.759 89.3984 cv
301.079 88.2334 300.385 87.0547 299.827 86.0801 cv
299.684 85.9395 li
298.065 87.5879 295.536 89.3545 292.929 90.6123 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
319.681 93.082 mo
320.032 93.1572 li
322.871 92.9688 324.705 93.7471 326.314 94.8779 cv
328.178 96.209 330.143 98.7539 329.371 99.3379 cv
327.91 100.443 326.678 96.873 324.017 97.3389 cv
325.118 97.9912 326.651 99.875 327.011 101.619 cv
327.283 102.954 326.422 103.438 325.363 102.986 cv
325.883 104.108 324.781 105.138 323.397 104.93 cv
323.513 106.43 322.071 106.914 321.284 105.986 cv
319.704 104.125 317.914 104.245 316.207 103.846 cv
314.49 103.445 312.656 102.776 311.931 101.719 cv
311.788 101.67 li
312.436 99.7783 312.483 95.5469 311.598 94.123 cv
311.708 94.0508 li
312.271 92.4619 313.667 90.4863 316.645 90.3555 cv
319.624 90.2344 322.64 87.7324 323.108 89.3828 cv
323.417 90.459 322.131 90.6504 320.076 92.127 cv
319.918 92.2393 319.824 92.6016 319.681 93.082 cv
cp
0 .167361 .439734 0 cmyk
f
327.557 98.2715 mo
326.706 97.5527 325.544 96.5625 323.934 96.8457 cv
323.728 96.8828 323.565 97.043 323.527 97.25 cv
323.49 97.4551 323.584 97.6621 323.766 97.7695 cv
324.688 98.3154 326.183 100.084 326.521 101.721 cv
326.603 102.127 326.561 102.431 326.402 102.562 cv
326.243 102.692 325.918 102.678 325.566 102.524 cv
325.374 102.442 325.154 102.485 325.011 102.634 cv
324.865 102.781 324.825 103.002 324.912 103.191 cv
325.078 103.555 324.964 103.826 324.843 103.99 cv
324.573 104.346 324.038 104.521 323.474 104.439 cv
323.322 104.415 323.169 104.464 323.061 104.567 cv
322.949 104.67 322.891 104.819 322.902 104.97 cv
322.936 105.437 322.776 105.788 322.471 105.913 cv
322.2 106.022 321.889 105.928 321.662 105.659 cv
320.296 104.054 318.742 103.79 317.371 103.561 cv
317.02 103.502 316.667 103.443 316.319 103.363 cv
314.314 102.895 312.916 102.22 312.365 101.463 cv
312.882 99.5127 312.955 95.9072 312.195 94.1875 cv
312.624 92.9854 313.767 90.9854 316.667 90.8594 cv
318.016 90.8018 319.367 90.29 320.449 89.8789 cv
321.284 89.5625 322.23 89.2031 322.527 89.3525 cv
322.546 89.3613 322.59 89.3848 322.627 89.5186 cv
322.719 89.8438 322.581 89.9766 321.492 90.623 cv
321.025 90.9004 320.444 91.2451 319.789 91.7148 cv
319.496 91.9268 318.828 92.8486 319.474 93.4316 cv
319.677 93.6143 320.143 93.6494 320.183 93.6475 cv
323.043 93.4854 324.742 94.3828 326.022 95.2891 cv
327.839 96.5811 329.162 98.5527 329.07 98.9336 cv
328.737 99.1875 328.431 99.0107 327.557 98.2715 cv
cp
311.338 101.436 mo
307.34 101.766 302.164 101.144 300.404 100.564 cv
298.041 99.79 295.102 93.9092 293.596 90.8418 cv
295.846 89.7021 298.029 88.209 299.614 86.7109 cv
300.105 87.5703 300.675 88.5479 301.251 89.5283 cv
301.9 90.6406 302.54 91.7363 303.051 92.6387 cv
301.659 92.9277 300.781 93.623 299.638 94.665 cv
299.434 94.8516 299.418 95.168 299.605 95.3721 cv
299.79 95.5752 300.104 95.5908 300.311 95.4063 cv
301.433 94.3848 302.195 93.7061 303.848 93.5371 cv
303.851 93.5381 303.854 93.5391 303.857 93.54 cv
303.864 93.5391 303.872 93.5352 303.879 93.5332 cv
305.34 93.3916 307.489 93.6426 311.206 94.4209 cv
311.945 95.6816 311.924 99.6172 311.338 101.436 cv
cp
290.89 90.9502 mo
287.851 85.7607 284.904 77.6162 287.584 75.0322 cv
288.04 74.5928 288.549 74.374 289.138 74.3652 cv
291.646 74.3213 295.613 78.1201 300.051 84.7969 cv
298.223 87.0391 294.346 89.6426 290.89 90.9502 cv
cp
326.602 94.4766 mo
325.293 93.5459 323.403 92.5176 320.328 92.6523 cv
320.349 92.5908 320.365 92.542 320.372 92.5283 cv
320.993 92.082 321.554 91.749 322.004 91.4844 cv
323.064 90.8535 323.904 90.3555 323.59 89.2441 cv
323.459 88.7861 323.183 88.5654 322.977 88.46 cv
322.285 88.1113 321.317 88.4785 320.096 88.9443 cv
319.025 89.3486 317.813 89.8096 316.623 89.8594 cv
313.387 90.001 311.974 92.1523 311.414 93.4443 cv
307.918 92.7139 305.7 92.4141 304.119 92.501 cv
303.58 91.5352 302.854 90.29 302.111 89.0234 cv
301.488 87.9521 300.859 86.8818 300.344 85.9736 cv
300.611 85.6875 300.855 85.4004 301.066 85.1201 cv
301.191 84.9521 301.199 84.7227 301.084 84.5469 cv
297.705 79.4102 292.887 73.2998 289.121 73.3662 cv
288.277 73.3809 287.526 73.6982 286.891 74.3115 cv
283.159 77.9121 288.045 88.1709 290.241 91.8193 cv
290.337 91.9766 290.504 92.0645 290.678 92.0615 cv
290.731 92.0605 290.784 92.0508 290.837 92.0342 cv
291.447 91.8184 292.071 91.5615 292.694 91.2744 cv
294.361 94.6699 297.332 100.61 300.093 101.515 cv
301.695 102.042 305.762 102.589 309.518 102.523 cv
310.282 102.51 311.036 102.473 311.748 102.401 cv
311.776 102.398 311.797 102.381 311.824 102.373 cv
312.617 103.2 314.047 103.858 316.093 104.337 cv
316.462 104.422 316.832 104.485 317.204 104.548 cv
318.524 104.77 319.77 104.979 320.902 106.307 cv
321.27 106.739 321.766 106.968 322.271 106.96 cv
322.464 106.955 322.662 106.916 322.851 106.837 cv
323.41 106.608 323.778 106.103 323.878 105.457 cv
324.601 105.425 325.248 105.112 325.643 104.589 cv
325.857 104.305 325.974 103.982 325.992 103.648 cv
326.389 103.677 326.753 103.566 327.033 103.337 cv
327.303 103.118 327.722 102.591 327.5 101.521 cv
327.257 100.333 326.506 99.0664 325.668 98.1191 cv
326.109 98.3574 326.514 98.6992 326.91 99.0352 cv
327.725 99.7236 328.648 100.507 329.673 99.7324 cv
329.917 99.5488 330.05 99.2607 330.046 98.9219 cv
330.025 97.7305 328.217 95.6221 326.602 94.4766 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
141.007 149.217 mo
140.137 153.497 141.938 155.087 143.697 156.667 cv
143.677 156.687 li
141.427 155.187 136.967 156.557 135.097 160.307 cv
135.007 160.387 li
131.397 156.367 127.257 149.467 126.347 146.807 cv
126.247 146.727 li
127.857 144.737 130.097 143.297 132.307 142.377 cv
132.507 142.297 132.728 142.187 132.967 142.057 cv
132.967 146.187 136.747 150.137 141.007 149.217 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
138.597 163.307 mo
141.097 164.187 143.807 164.307 146.307 163.687 cv
146.407 163.687 li
146.207 164.877 145.787 165.677 145.507 165.937 cv
142.507 166.437 139.257 166.106 137.507 165.267 cv
132.617 162.937 126.847 153.437 124.847 148.937 cv
125.228 148.137 125.697 147.407 126.247 146.727 cv
126.347 146.807 li
127.257 149.467 131.397 156.367 135.007 160.387 cv
136.337 161.867 137.597 162.957 138.597 163.307 cv
cp
0 0 0 0 cmyk
f
146.257 160.267 mo
146.567 161.587 146.557 162.757 146.407 163.687 cv
146.307 163.687 li
143.807 164.307 141.097 164.187 138.597 163.307 cv
137.597 162.957 136.337 161.867 135.007 160.387 cv
135.097 160.307 li
136.967 156.557 141.427 155.187 143.677 156.687 cv
143.697 156.667 li
144.797 157.646 145.867 158.627 146.257 160.267 cv
cp
f
145.027 144.687 mo
145.268 145.037 li
143.237 146.907 141.377 148.657 141.007 149.217 cv
136.747 150.137 132.967 146.187 132.967 142.057 cv
134.387 141.287 136.507 139.707 138.707 137.797 cv
138.877 137.987 li
138.877 140.387 142.807 143.807 145.027 144.687 cv
cp
f
187.067 153.356 mo
185.567 153.697 183.207 156.106 183.207 159.447 cv
183.188 159.777 li
177.097 159.507 170.427 158.757 168.107 158.157 cv
167.947 158.127 li
168.567 154.557 170.237 151.967 171.567 149.297 cv
171.577 149.277 171.587 149.257 171.597 149.237 cv
171.728 149.297 li
172.478 151.797 178.497 152.427 181.247 150.677 cv
181.268 150.687 li
181.247 150.777 181.228 150.827 181.228 150.856 cv
182.938 152.117 185.097 152.727 187.067 153.347 cv
187.067 153.356 li
cp
.823453 .403418 .425788 .104005 cmyk
f
183.188 159.777 mo
187.157 159.947 190.877 159.917 192.978 159.527 cv
193.047 160.517 192.978 161.377 192.897 161.697 cv
188.728 162.356 170.367 161.777 167.707 160.447 cv
167.737 159.627 167.817 158.856 167.947 158.127 cv
168.107 158.157 li
170.427 158.757 177.097 159.507 183.188 159.777 cv
cp
.181369 .0870985 .113436 0 cmyk
f
187.067 153.347 mo
189.297 154.027 191.307 154.727 192.228 156.356 cv
192.717 157.217 192.927 158.447 192.978 159.527 cv
190.877 159.917 187.157 159.947 183.188 159.777 cv
183.207 159.447 li
183.207 156.106 185.567 153.697 187.067 153.356 cv
187.067 153.347 li
cp
f
183.547 144.957 mo
182.587 147.597 181.497 150.007 181.268 150.687 cv
181.247 150.677 li
178.497 152.427 172.478 151.797 171.728 149.297 cv
171.597 149.237 li
172.587 147.237 173.627 145.337 174.407 143.127 cv
174.688 143.217 li
176.018 145.217 181.188 145.717 183.268 144.856 cv
183.547 144.957 li
cp
f
184.617 129.667 mo
185.457 132.837 185.787 136.667 184.728 141.137 cv
184.438 142.347 184.007 143.677 183.547 144.957 cv
183.268 144.856 li
181.188 145.717 176.018 145.217 174.688 143.217 cv
174.407 143.127 li
175.487 140.087 176.057 136.457 175.287 131.167 cv
175.297 130.967 li
178.107 131.146 182.147 130.707 184.607 129.646 cv
184.617 129.667 li
cp
.0797436 .400244 .584497 0 cmyk
f
157.007 130.437 mo
157.007 130.606 li
155.927 134.187 154.007 137.106 150.617 140.197 cv
149.527 141.197 147.307 143.167 145.268 145.037 cv
145.027 144.687 li
142.807 143.807 138.877 140.387 138.877 137.987 cv
138.707 137.797 li
142.407 134.577 146.347 130.417 147.547 127.547 cv
147.627 127.417 li
149.997 128.767 153.697 130.347 157.007 130.437 cv
cp
0 .167361 .439734 0 cmyk
f
167.768 101.827 mo
168.768 102.037 169.717 102.257 170.607 102.457 cv
170.597 102.687 li
170.228 105.967 167.967 111.627 166.107 114.577 cv
166.067 114.657 166.018 114.737 165.967 114.807 cv
165.217 114.937 164.217 114.807 162.847 114.687 cv
162.967 114.277 163.087 113.856 163.217 113.437 cv
165.347 110.557 166.967 105.557 167.717 102.057 cv
167.768 101.827 li
cp
.498634 .76672 .682032 .673518 cmyk
f
185.787 129.007 mo
185.457 129.237 185.057 129.457 184.607 129.646 cv
182.147 130.707 178.107 131.146 175.297 130.967 cv
174.237 130.896 173.357 130.747 172.787 130.507 cv
172.037 126.267 167.367 117.106 166.107 114.577 cv
167.967 111.627 170.228 105.967 170.597 102.687 cv
170.607 102.457 li
174.327 103.307 177.077 103.967 177.847 104.187 cv
178.047 105.567 178.117 107.337 178.457 109.667 cv
180.617 115.167 184.287 121.337 185.787 129.007 cv
cp
f
167.768 101.827 mo
167.717 102.057 li
166.967 105.557 165.347 110.557 163.217 113.437 cv
163.087 113.856 162.967 114.277 162.847 114.687 cv
161.438 119.457 160.438 123.377 157.677 130.437 cv
157.457 130.447 157.228 130.447 157.007 130.437 cv
153.697 130.347 149.997 128.767 147.627 127.417 cv
146.697 126.887 145.967 126.387 145.557 126.027 cv
148.737 118.237 149.507 107.687 153.507 98.8564 cv
158.307 99.7666 163.447 100.867 167.768 101.827 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
167.768 101.827 mo
167.717 102.057 li
166.967 105.557 165.347 110.557 163.217 113.437 cv
163.177 113.577 163.127 113.727 163.087 113.867 cv
159.287 110.308 152.954 109.975 149.787 110.642 cv
150.487 108.182 152.467 101.157 153.507 98.8564 cv
158.307 99.7666 163.447 100.867 167.768 101.827 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
157.007 130.437 mo
157.007 130.606 li
156.747 131.477 156.438 132.297 156.057 133.097 cv
152.518 133.207 148.387 131.787 146.147 129.957 cv
146.757 129.087 147.237 128.277 147.547 127.547 cv
147.627 127.417 li
149.997 128.767 153.697 130.347 157.007 130.437 cv
cp
.0797436 .400244 .584497 0 cmyk
f
192.46 161.251 mo
187.722 161.841 171.43 161.209 168.22 160.115 cv
168.246 159.634 168.294 159.172 168.357 158.724 cv
171.683 159.48 180.874 160.372 187.509 160.372 cv
189.472 160.372 191.208 160.293 192.501 160.11 cv
192.506 160.569 192.489 160.975 192.46 161.251 cv
cp
171.18 151.136 mo
171.342 150.826 171.498 150.519 171.656 150.21 cv
172.081 150.781 172.756 151.259 173.682 151.604 cv
174.655 151.966 175.894 152.174 177.156 152.174 cv
178.539 152.174 179.932 151.905 181.052 151.337 cv
182.462 152.343 184.098 152.931 185.73 153.445 cv
184.256 154.456 182.78 156.613 182.712 159.257 cv
177.068 158.986 171.033 158.322 168.534 157.742 cv
169.063 155.188 170.131 153.133 171.18 151.136 cv
cp
174.645 143.926 mo
175.881 145.163 178.428 145.766 180.63 145.766 cv
181.427 145.766 182.173 145.685 182.798 145.531 cv
182.302 146.845 181.795 148.07 181.41 148.998 cv
181.141 149.647 180.978 150.045 180.876 150.313 cv
179.216 151.302 176.184 151.47 174.03 150.667 cv
173.036 150.296 172.389 149.761 172.207 149.157 cv
172.206 149.152 172.202 149.149 172.2 149.146 cv
172.344 148.859 172.487 148.573 172.631 148.289 cv
173.336 146.897 174.048 145.487 174.645 143.926 cv
cp
175.831 131.494 mo
176.099 131.504 176.37 131.511 176.651 131.511 cv
179.141 131.511 182.104 131.124 184.26 130.327 cv
185.107 133.867 185.107 137.371 184.242 141.02 cv
183.99 142.081 183.623 143.237 183.223 144.37 cv
183.175 144.375 183.127 144.379 183.081 144.398 cv
181.172 145.182 176.271 144.688 175.104 142.94 cv
175.081 142.907 175.051 142.886 175.022 142.86 cv
175.989 139.932 176.492 136.405 175.831 131.494 cv
cp
166.771 114.793 mo
166.683 114.614 li
168.469 111.675 170.578 106.445 171.047 103.065 cv
174.064 103.755 176.382 104.312 177.395 104.581 cv
177.461 105.102 177.515 105.674 177.573 106.309 cv
177.666 107.302 177.771 108.428 177.959 109.742 cv
177.965 109.78 177.975 109.818 177.989 109.854 cv
178.634 111.49 179.402 113.169 180.216 114.946 cv
182.068 118.991 184.163 123.564 185.23 128.773 cv
182.449 130.48 175.596 130.919 173.226 130.136 cv
172.369 125.949 168.318 117.875 166.771 114.793 cv
cp
163.502 114.245 mo
163.562 114.045 163.617 113.852 163.68 113.647 cv
165.793 110.739 167.39 105.856 168.152 102.413 cv
168.813 102.561 169.452 102.704 170.068 102.843 cv
169.644 106.087 167.494 111.39 165.765 114.197 cv
165.718 114.24 165.681 114.289 165.653 114.346 cv
165.107 114.392 164.383 114.327 163.502 114.245 cv
cp
157.335 129.942 mo
157.329 129.942 157.324 129.942 157.319 129.942 cv
153.036 129.942 147.932 127.228 146.156 125.871 cv
147.547 122.358 148.463 118.376 149.432 114.166 cv
150.573 109.205 151.754 104.078 153.807 99.4189 cv
158.284 100.277 163.058 101.287 167.176 102.196 cv
166.428 105.573 164.868 110.365 162.818 113.139 cv
162.799 113.164 162.793 113.194 162.779 113.222 cv
162.768 113.246 162.75 113.265 162.742 113.291 cv
162.371 114.518 162.037 115.671 161.707 116.812 cv
160.603 120.623 159.559 124.226 157.335 129.942 cv
cp
150.282 139.827 mo
149.874 140.199 149.309 140.708 148.654 141.298 cv
147.494 142.343 146.368 143.36 145.339 144.302 cv
145.3 144.271 145.262 144.239 145.213 144.22 cv
143.016 143.352 139.379 140.08 139.377 137.987 cv
139.377 137.945 139.363 137.908 139.354 137.87 cv
142.873 134.774 146.501 130.912 147.834 128.088 cv
150.116 129.319 153.366 130.639 156.387 130.891 cv
155.294 134.234 153.453 136.936 150.282 139.827 cv
cp
140.734 148.757 mo
139.13 149.05 137.498 148.614 136.125 147.506 cv
134.557 146.242 133.566 144.277 133.479 142.323 cv
134.78 141.566 136.563 140.249 138.46 138.642 cv
139.01 141.125 142.426 144.045 144.555 145.021 cv
142.695 146.731 141.264 148.101 140.734 148.757 cv
cp
141.917 155.622 mo
141.258 155.57 140.552 155.624 139.828 155.816 cv
137.816 156.351 136.033 157.738 134.942 159.571 cv
131.565 155.633 127.802 149.343 126.865 146.774 cv
128.673 144.677 131.027 143.445 132.497 142.835 cv
132.501 142.833 132.507 142.83 132.511 142.828 cv
132.736 144.906 133.834 146.944 135.497 148.285 cv
136.775 149.315 138.253 149.853 139.761 149.853 cv
139.975 149.853 140.188 149.84 140.402 149.818 cv
139.984 152.684 140.809 154.358 141.917 155.622 cv
cp
145.775 160.384 mo
146.034 161.481 146.046 162.446 145.953 163.248 cv
143.612 163.786 141.069 163.646 138.761 162.839 cv
137.892 162.534 136.805 161.618 135.643 160.36 cv
136.58 158.61 138.223 157.277 140.085 156.783 cv
141.374 156.439 142.583 156.557 143.401 157.103 cv
143.424 157.117 143.449 157.121 143.473 157.132 cv
144.493 158.051 145.438 158.948 145.775 160.384 cv
cp
145.258 165.471 mo
142.512 165.896 139.44 165.633 137.727 164.818 cv
133.071 162.602 127.478 153.518 125.397 148.944 cv
125.622 148.497 125.876 148.079 126.15 147.686 cv
128 152.075 134.699 162.478 138.431 163.782 cv
139.932 164.308 141.525 164.573 143.108 164.573 cv
144.004 164.573 144.89 164.464 145.759 164.294 cv
145.601 164.868 145.4 165.276 145.258 165.471 cv
cp
191.794 156.607 mo
192.179 157.286 192.369 158.224 192.452 159.107 cv
190.418 159.413 187.191 159.439 183.717 159.301 cv
183.784 156.27 185.896 154.2 187.1 153.876 cv
189.137 154.513 190.986 155.186 191.794 156.607 cv
cp
192.663 156.113 mo
191.582 154.209 189.26 153.493 186.801 152.734 cv
185.069 152.201 183.283 151.649 181.813 150.66 cv
181.928 150.359 182.133 149.864 182.334 149.381 cv
183.165 147.377 184.558 144.023 185.215 141.25 cv
186.118 137.443 186.104 133.637 185.193 129.929 cv
185.52 129.769 185.819 129.597 186.078 129.411 cv
186.237 129.297 186.315 129.101 186.277 128.909 cv
185.209 123.447 183.039 118.71 181.125 114.529 cv
180.326 112.785 179.571 111.137 178.94 109.542 cv
178.762 108.277 178.659 107.183 178.569 106.216 cv
178.496 105.428 178.431 104.732 178.341 104.113 cv
178.313 103.919 178.172 103.759 177.983 103.705 cv
176.096 103.166 163.95 100.333 153.605 98.3623 cv
153.379 98.3203 153.152 98.4365 153.057 98.6475 cv
150.862 103.492 149.64 108.805 148.457 113.942 cv
147.466 118.249 146.53 122.317 145.092 125.838 cv
145.011 126.037 145.065 126.266 145.229 126.406 cv
145.592 126.72 146.199 127.139 146.966 127.594 cv
144.788 132.337 135.184 140.635 132.113 141.911 cv
130.023 142.779 126.243 144.818 124.394 148.722 cv
124.331 148.854 124.33 149.006 124.389 149.139 cv
126.232 153.286 132.041 163.219 137.297 165.721 cv
138.589 166.336 140.56 166.669 142.617 166.669 cv
143.612 166.669 144.627 166.591 145.594 166.43 cv
145.688 166.414 145.777 166.371 145.849 166.307 cv
146.523 165.692 147.479 163.258 146.748 160.155 cv
146.323 158.348 145.142 157.286 143.998 156.26 cv
142.313 154.746 140.722 153.316 141.481 149.422 cv
142.243 148.421 146.829 144.288 149.324 142.041 cv
149.98 141.449 150.547 140.938 150.956 140.565 cv
154.303 137.514 156.302 134.532 157.427 130.933 cv
157.517 130.933 157.607 130.939 157.696 130.937 cv
157.896 130.93 158.071 130.805 158.145 130.619 cv
160.469 124.678 161.537 120.992 162.667 117.09 cv
162.845 116.476 163.025 115.854 163.211 115.222 cv
163.336 115.233 li
164.066 115.303 164.697 115.362 165.245 115.362 cv
165.487 115.362 165.703 115.341 165.914 115.313 cv
167.361 118.198 171.603 126.671 172.295 130.592 cv
172.324 130.758 172.436 130.898 172.59 130.965 cv
173.114 131.189 173.891 131.346 174.815 131.432 cv
175.95 139.517 173.906 143.562 171.739 147.837 cv
171.53 148.249 171.321 148.661 171.114 149.079 cv
170.852 149.61 170.574 150.138 170.294 150.671 cv
168.846 153.43 167.348 156.282 167.204 160.427 cv
167.197 160.622 167.306 160.804 167.48 160.892 cv
169.513 161.908 179.43 162.476 186.498 162.476 cv
189.362 162.476 191.76 162.383 192.974 162.188 cv
193.171 162.156 193.331 162.011 193.38 161.816 cv
193.56 161.1 193.689 157.922 192.663 156.113 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
167.605 89.9512 mo
166.967 84.6787 167.149 74.6563 171.374 73.1338 cv
176.076 71.4365 178.507 81.8564 179.487 87.8838 cv
179.093 88.1016 178.634 88.3086 178.135 88.5078 cv
175.971 89.3389 172.946 89.9248 170.052 90.0117 cv
169.214 90.0391 168.396 90.0225 167.605 89.9512 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
179.029 96.668 mo
180.516 97.1689 182.476 98.3555 185.645 100.663 cv
185.653 100.718 185.672 100.767 185.672 100.823 cv
185.879 102.301 184.472 105.553 183.195 107.266 cv
182.979 107.548 182.768 107.793 182.576 107.979 cv
178.754 106.696 174.001 103.896 172.483 102.516 cv
170.422 100.642 170.182 93.6738 170.064 90.167 cv
170.052 90.0117 li
172.946 89.9248 175.971 89.3389 178.135 88.5078 cv
178.208 88.6846 li
178.432 91.0762 178.866 94.626 179.029 96.668 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
192.217 97.8457 mo
193.484 98.2227 194.897 98.6982 194.678 100.338 cv
194.657 100.517 194.612 100.693 194.558 100.893 cv
193.936 102.99 192.885 106.539 191.336 106.03 cv
191.067 105.936 190.85 105.787 190.672 105.59 cv
190.57 105.677 li
189.565 105.795 188.483 107.902 189.05 109.606 cv
188.717 110.078 188.454 111.207 188.874 112.228 cv
188.818 112.249 li
185.74 111.44 183.573 109.141 183.233 107.287 cv
183.195 107.266 li
184.472 105.553 185.879 102.301 185.672 100.823 cv
185.796 100.759 li
187.888 98.4238 190.826 97.4248 192.217 97.8457 cv
cp
.0797436 .400244 .584497 0 cmyk
f
194.558 100.893 mo
194.612 100.693 194.657 100.517 194.678 100.338 cv
194.881 100.287 li
197.249 100.779 198.771 101.573 199.346 102.748 cv
199.835 103.748 199.523 105.527 198.252 106.243 cv
198.981 107.602 197.582 114.276 192.798 114.198 cv
190.402 114.166 189.295 113.248 188.874 112.228 cv
188.454 111.207 188.717 110.078 189.05 109.606 cv
188.483 107.902 189.565 105.795 190.57 105.677 cv
190.672 105.59 li
190.85 105.787 191.067 105.936 191.336 106.03 cv
192.885 106.539 193.936 102.99 194.558 100.893 cv
cp
f
171.545 73.6025 mo
172.919 73.1084 174.165 73.8184 175.354 75.7754 cv
177.254 78.9033 178.394 84.3857 178.934 87.6064 cv
176.35 88.9072 171.745 89.7021 168.057 89.4814 cv
167.404 83.5029 168.041 74.8672 171.545 73.6025 cv
cp
178.094 92.3975 mo
178.233 93.6836 178.369 94.9531 178.468 95.9932 cv
177.08 95.6885 175.997 95.9639 174.525 96.4463 cv
174.262 96.5332 174.119 96.8154 174.204 97.0781 cv
174.29 97.3389 174.573 97.4824 174.836 97.3975 cv
176.285 96.9209 177.26 96.6113 178.853 97.1455 cv
178.869 97.1494 178.885 97.1563 178.901 97.1611 cv
180.287 97.6357 182.14 98.7432 185.184 100.952 cv
185.345 102.401 183.718 105.986 182.442 107.407 cv
178.658 106.074 174.185 103.393 172.814 102.146 cv
170.98 100.471 170.693 93.8965 170.571 90.4824 cv
173.098 90.3652 175.69 89.8877 177.753 89.165 cv
177.849 90.1445 177.971 91.2676 178.094 92.3975 cv
cp
192.073 98.3213 mo
192.949 98.585 193.777 98.8867 194.065 99.4287 cv
194.245 99.7617 194.25 100.194 194.063 100.815 cv
193.622 102.288 192.804 105.026 191.861 105.517 cv
191.734 105.587 191.621 105.596 191.494 105.556 cv
191.188 105.453 190.971 105.232 190.835 104.889 cv
190.482 103.999 190.743 102.492 191.483 101.137 cv
191.616 100.896 191.526 100.594 191.283 100.46 cv
191.041 100.325 190.738 100.415 190.605 100.657 cv
189.718 102.283 189.442 104.086 189.904 105.255 cv
189.922 105.299 189.945 105.335 189.966 105.374 cv
189.637 105.562 189.326 105.861 189.063 106.281 cv
188.595 107.024 188.188 108.299 188.508 109.54 cv
188.265 110.011 188.1 110.74 188.187 111.512 cv
185.782 110.636 184.103 108.809 183.761 107.326 cv
184.945 105.614 186.202 102.77 186.181 101.088 cv
188.242 98.7861 190.971 97.9902 192.073 98.3213 cv
cp
198.894 102.965 mo
199.255 103.698 199.086 105.201 198.01 105.8 cv
197.769 105.934 197.681 106.233 197.812 106.475 cv
198.11 107.031 197.93 109.337 196.748 111.279 cv
196.067 112.401 194.83 113.73 192.802 113.702 cv
191.073 113.675 189.901 113.146 189.412 112.202 cv
188.951 111.292 189.218 110.233 189.457 109.896 cv
189.548 109.765 189.573 109.6 189.523 109.449 cv
189.218 108.533 189.497 107.466 189.908 106.813 cv
190.17 106.399 190.432 106.22 190.594 106.181 cv
190.771 106.317 190.963 106.434 191.184 106.507 cv
191.565 106.631 191.959 106.596 192.323 106.405 cv
193.537 105.77 194.294 103.535 195.039 101.038 cv
195.061 100.973 195.065 100.911 195.082 100.847 cv
197.146 101.313 198.445 102.014 198.894 102.965 cv
cp
167.111 90.0127 mo
167.142 90.2451 167.33 90.4287 167.567 90.4482 cv
168.211 90.501 168.888 90.5127 169.572 90.5068 cv
169.707 94.2871 169.989 100.929 172.143 102.884 cv
173.646 104.251 178.396 107.103 182.421 108.457 cv
182.595 108.515 182.789 108.474 182.923 108.347 cv
182.955 108.317 182.986 108.278 183.016 108.249 cv
183.749 109.979 185.72 111.894 188.536 112.678 cv
189.006 113.593 190.128 114.661 192.789 114.702 cv
195.286 114.741 196.785 113.145 197.604 111.799 cv
198.725 109.952 199.132 107.654 198.851 106.439 cv
200.06 105.504 200.364 103.687 199.791 102.523 cv
199.749 102.44 199.706 102.358 199.657 102.278 cv
198.973 101.147 197.501 100.353 195.191 99.8467 cv
195.168 99.5215 195.091 99.2236 194.947 98.9561 cv
194.931 98.9248 194.911 98.8916 194.894 98.8623 cv
194.343 97.958 193.201 97.6152 192.361 97.3623 cv
190.839 96.9063 187.947 97.8486 185.739 100.118 cv
182.865 98.0381 180.971 96.8682 179.5 96.3027 cv
179.401 95.1963 179.247 93.7559 179.088 92.2891 cv
178.952 91.0605 178.819 89.832 178.722 88.7988 cv
179.079 88.6455 179.425 88.4883 179.728 88.3174 cv
179.913 88.2158 180.013 88.0078 179.979 87.8008 cv
179.338 83.8545 178.165 78.4756 176.209 75.2549 cv
174.397 72.2725 172.488 72.1982 171.206 72.6611 cv
166.328 74.4229 166.598 85.7822 167.111 90.0127 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
182.576 73.5576 mo
181.529 74.1826 180.187 74.5986 179.029 74.918 cv
179.443 73.5996 180.667 70.0654 181.422 67.5313 cv
181.645 67.6016 li
182.341 67.7432 184.633 69.1875 184.37 71.2607 cv
184.252 72.2461 183.543 72.9863 182.576 73.5576 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
172.058 68.8359 mo
171.963 68.9502 li
167.916 65.8066 164.485 63.7197 162.313 63.2412 cv
162.183 63.2061 162.051 63.1924 161.931 63.167 cv
161.938 63.1367 li
164.759 61.8867 169.463 63.5605 173.268 64.7813 cv
173.48 64.8525 li
173.092 66.0596 172.683 67.2891 172.058 68.8359 cv
cp
.826932 .410346 .420874 .105837 cmyk
f
162.313 63.2412 mo
164.485 63.7197 167.916 65.8066 171.963 68.9502 cv
174.176 70.6582 176.563 72.6797 179.029 74.918 cv
172.633 72.0342 168.207 69.6289 163.73 69.3467 cv
163.713 69.6084 li
162.291 70.8193 160.816 73.0928 159.36 76.0674 cv
159.227 76.002 li
157.427 74.8359 156.302 71.8809 158.06 69.1748 cv
156.115 66.2539 157.909 62.5352 161.931 63.167 cv
162.051 63.1924 162.183 63.2061 162.313 63.2412 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
182.585 73.5674 mo
183.312 78.6924 181.349 99.3525 179.429 108.901 cv
174.963 111.001 156.359 108.911 149.691 105.058 cv
152.213 95.0537 155.746 83.4346 159.36 76.0674 cv
160.816 73.0928 162.291 70.8193 163.713 69.6084 cv
163.73 69.3467 li
168.207 69.6289 172.633 72.0342 179.029 74.918 cv
180.187 74.5986 181.529 74.1826 182.576 73.5576 cv
182.585 73.5674 li
cp
.74789 .241123 .31931 .00552377 cmyk
f
182.348 85.2783 mo
182.151 87.998 181.885 90.9326 181.577 93.8477 cv
174.01 95.2568 160.921 92.2344 154.53 88.29 cv
155.481 85.458 156.468 82.7539 157.467 80.3096 cv
162.998 82.8291 175.452 86.4893 182.348 85.2783 cv
cp
0 0 0 0 cmyk
f
182.045 65.0029 mo
182.014 65.4346 181.762 66.376 181.422 67.5313 cv
180.667 70.0654 179.443 73.5996 179.029 74.918 cv
176.563 72.6797 174.176 70.6582 171.963 68.9502 cv
172.058 68.8359 li
172.683 67.2891 173.092 66.0596 173.48 64.8525 cv
173.738 64.0713 173.996 63.3096 174.293 62.4863 cv
177.212 63.3652 178.977 63.6602 182.045 65.0029 cv
cp
.0797436 .400244 .584497 0 cmyk
f
183.878 71.2002 mo
183.694 72.6836 181.751 73.5693 179.801 74.1748 cv
179.899 73.875 180.011 73.5381 180.132 73.1748 cv
180.738 71.3467 181.315 69.5928 181.754 68.1592 cv
182.47 68.4678 184.07 69.6416 183.878 71.2002 cv
cp
178.992 108.546 mo
174.476 110.322 157.003 108.426 150.269 104.809 cv
152.149 97.4043 158.244 74.9111 164.036 69.9863 cv
164.073 69.9541 164.097 69.9141 164.122 69.876 cv
167.593 70.2041 171.092 71.8135 175.738 73.9609 cv
176.719 74.4131 177.744 74.8887 178.827 75.376 cv
178.832 75.3789 178.836 75.3779 178.841 75.3799 cv
178.856 75.3867 178.874 75.3867 178.892 75.3926 cv
178.937 75.4043 178.981 75.415 179.027 75.415 cv
179.036 75.415 179.046 75.4199 179.054 75.4199 cv
179.091 75.418 179.129 75.4131 179.165 75.4023 cv
180.2 75.1172 181.247 74.7822 182.16 74.3457 cv
182.655 80.4277 180.748 99.6377 178.992 108.546 cv
cp
157.797 73.0488 mo
157.596 72.1934 157.553 70.873 158.482 69.4482 cv
158.593 69.2803 158.592 69.0625 158.48 68.8965 cv
157.608 67.5957 157.538 66.0332 158.3 64.915 cv
159.07 63.7842 160.496 63.3525 162.211 63.7285 cv
164.942 64.3291 170.06 67.7646 176.19 73.0684 cv
176.18 73.0635 176.169 73.0586 176.157 73.0537 cv
169.83 70.1289 165.258 68.0127 159.982 69.1006 cv
159.713 69.1563 159.538 69.4199 159.594 69.6904 cv
159.649 69.96 159.909 70.1406 160.185 70.0801 cv
161.064 69.8994 161.92 69.8174 162.771 69.8115 cv
161.563 71.0732 160.354 73.002 159.182 75.3262 cv
158.521 74.7715 158.009 73.959 157.797 73.0488 cv
cp
172.307 64.9971 mo
172.852 65.1729 li
172.547 66.0908 172.215 67.0586 171.782 68.1748 cv
168.598 65.7422 165.887 64.042 163.855 63.2158 cv
166.313 63.0674 169.574 64.1152 172.307 64.9971 cv
cp
173.945 65.0518 mo
174.158 64.4033 174.37 63.7676 174.606 63.1006 cv
175.237 63.2852 175.816 63.4453 176.372 63.5996 cv
178.04 64.0615 179.492 64.4619 181.497 65.3125 cv
181.216 66.7334 179.961 70.5156 179.183 72.8584 cv
179.038 73.2969 178.907 73.6914 178.795 74.0342 cv
176.602 72.0654 174.525 70.3135 172.608 68.8125 cv
173.177 67.373 173.569 66.1895 173.945 65.0518 cv
cp
182.041 67.2002 mo
182.328 66.209 182.514 65.4502 182.548 65.0469 cv
182.565 64.833 182.446 64.6328 182.249 64.5469 cv
179.994 63.5635 178.439 63.1338 176.64 62.6348 cv
175.959 62.4473 175.244 62.249 174.441 62.0078 cv
174.188 61.9326 173.92 62.0645 173.828 62.3135 cv
173.585 62.9756 173.373 63.5996 173.167 64.2236 cv
172.613 64.0449 li
168.854 62.832 164.599 61.4629 161.796 62.6514 cv
159.959 62.4287 158.371 63.0361 157.473 64.3506 cv
156.535 65.7285 156.544 67.5908 157.476 69.1768 cv
155.896 71.8857 156.844 74.8525 158.723 76.2568 cv
154.34 85.3906 150.528 99.6875 149.205 104.936 cv
149.151 105.153 149.247 105.38 149.44 105.491 cv
154.842 108.609 167.44 110.484 174.859 110.173 cv
176.967 110.084 178.656 109.818 179.645 109.354 cv
179.787 109.287 179.891 109.156 179.922 109.001 cv
181.744 99.9463 183.75 79.5391 183.112 73.8115 cv
184.063 73.1885 184.738 72.3896 184.87 71.3213 cv
185.141 69.126 183.076 67.6055 182.041 67.2002 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
209.668 40.1875 mo
208.877 46.9912 207.388 56.7764 204.38 61.3154 cv
200.499 67.165 193.582 69.7041 188.792 69.8242 cv
184.119 69.9473 168.964 68.4512 159.578 57.3525 cv
156.979 59.167 151.111 57.9766 148.413 52.8281 cv
147.443 50.9678 147.212 49.2051 147.457 47.667 cv
147.895 45.0225 149.785 43.0615 151.9 42.4434 cv
155.241 41.4775 158.389 43.6797 160.009 48.5264 cv
162.823 46.2168 166.202 43.3506 168.09 38.7402 cv
168.082 38.5986 li
174.397 38.1846 181.266 35.3662 183.918 33.2725 cv
183.967 33.3135 li
182.762 34.8105 181.721 36.7598 181.226 39.2461 cv
187.283 40.5469 200.913 36.6279 206.564 28.8955 cv
206.713 29.0068 li
208.695 30.6973 209.923 33.001 210.232 34.834 cv
210.1 36.1328 209.92 38.001 209.668 40.1875 cv
cp
0 .167361 .439734 0 cmyk
f
152.013 47.6953 mo
150.213 48.9951 150.547 52.2256 153.448 53.877 cv
155.687 55.1494 157.878 54.2861 157.308 51.417 cv
156.595 47.8252 153.944 46.2979 152.013 47.6953 cv
cp
.0797436 .400244 .584497 0 cmyk
f
209.668 40.1875 mo
208.877 46.9912 207.388 56.7764 204.38 61.3154 cv
200.499 67.165 193.582 69.7041 188.792 69.8242 cv
188.201 69.8379 187.44 69.8311 186.542 69.7705 cv
191.91 68.9961 197.823 66.8174 202.619 61.3262 cv
206.11 57.333 207.528 47.8164 208.887 31.5293 cv
209.605 32.6465 210.063 33.8115 210.232 34.834 cv
210.1 36.1328 209.92 38.001 209.668 40.1875 cv
cp
0 0 0 0 cmyk
f
206.87 29.1592 mo
202.21 39.8818 186.122 43.5059 177.738 41.8389 cv
178.002 40.5928 178.264 39.4648 179.026 38.2227 cv
176.318 39.8438 170.94 41.6191 166.397 41.9424 cv
167.037 40.9697 167.608 39.915 168.09 38.7402 cv
168.082 38.5986 li
174.397 38.1846 181.266 35.3662 183.918 33.2725 cv
183.967 33.3135 li
182.762 34.8105 181.721 36.7598 181.226 39.2461 cv
187.283 40.5469 200.913 36.6279 206.564 28.8955 cv
206.713 29.0068 li
206.763 29.0576 206.821 29.0977 206.87 29.1592 cv
cp
.0797436 .400244 .584497 0 cmyk
f
210.123 21.2119 mo
215.929 27.3926 213.213 36.7441 209.928 40.2109 cv
209.668 40.1875 li
209.92 38.001 210.1 36.1328 210.232 34.834 cv
209.923 33.001 208.695 30.6973 206.713 29.0068 cv
206.564 28.8955 li
200.913 36.6279 187.283 40.5469 181.226 39.2461 cv
181.721 36.7598 182.762 34.8105 183.967 33.3135 cv
183.918 33.2725 li
181.266 35.3662 174.397 38.1846 168.082 38.5986 cv
168.09 38.7402 li
166.202 43.3506 162.823 46.2168 160.009 48.5264 cv
158.389 43.6797 155.241 41.4775 151.9 42.4434 cv
149.785 43.0615 147.895 45.0225 147.457 47.667 cv
147.269 47.6455 li
144.657 45.749 141.567 42.8369 139.728 38.8174 cv
141.49 37.5859 143.631 36.6084 147.008 35.8926 cv
144.412 33.6162 140.71 28.957 139.117 25.3105 cv
142.271 23.0928 146.794 20.7695 153.813 19.0918 cv
150.944 17.9326 147.352 15.2754 145.378 12.625 cv
148.023 10.2822 154.294 8.21582 160.92 8.66406 cv
158.936 7.14453 156.968 3.99316 155.992 1.61328 cv
165.271 -1.04102 182.446 1.42578 192.788 5.03223 cv
204.049 8.95898 210.678 15.8369 210.123 21.2119 cv
cp
.373144 .782101 .665248 .350225 cmyk
f
202.887 12.1963 mo
205.692 14.4258 207.13 16.5801 207.822 18.3682 cv
203.091 24.1992 181.534 19.0176 170.788 17.5967 cv
161.879 16.4248 155.749 16.5625 151.861 18.1318 cv
150.808 17.54 149.726 16.8096 148.725 15.9893 cv
161.494 8.33105 189.723 14.4609 197.036 14.0469 cv
200.349 13.8604 202.115 13.1592 202.887 12.1963 cv
cp
.341833 .684718 .553277 .151247 cmyk
f
210.123 21.2119 mo
210.29 19.5938 209.809 17.8486 208.746 16.0771 cv
207.596 14.165 205.775 12.2471 203.354 10.4512 cv
200.565 8.38184 197.004 6.50586 192.788 5.03223 cv
182.446 1.42578 165.271 -1.04102 155.992 1.61328 cv
156.031 1.7041 156.07 1.80371 156.119 1.89453 cv
166.673 .643555 186.417 3.19629 197.262 8.66797 cv
199.569 9.83203 201.418 11.0205 202.887 12.1963 cv
205.692 14.4258 207.13 16.5801 207.822 18.3682 cv
208.417 19.9043 208.474 21.1748 208.404 21.9844 cv
211.606 24.7266 213.946 30.6514 210.525 39.5068 cv
213.515 35.6074 215.574 27.0088 210.123 21.2119 cv
cp
0 0 0 0 cmyk
f
210.725 34.751 mo
210.368 32.6748 209.035 30.4248 207.229 28.8096 cv
207.541 28.3584 207.83 27.8945 208.084 27.4199 cv
208.214 27.1768 208.124 26.874 207.88 26.7432 cv
207.636 26.6143 207.334 26.7041 207.203 26.9482 cv
202.855 35.0488 188.637 39.9248 181.824 38.8486 cv
182.825 34.6045 185.423 32.1406 187.466 30.8096 cv
187.697 30.6582 187.763 30.3477 187.611 30.1172 cv
187.461 29.8857 187.151 29.8203 186.92 29.9707 cv
186.051 30.5381 184.877 31.4668 183.764 32.7979 cv
183.707 32.8164 183.652 32.8408 183.604 32.8809 cv
180.261 35.5234 171.009 38.8301 164.32 38.0166 cv
165.288 33.4268 169.406 28.4902 173.376 27.2646 cv
173.641 27.1826 173.788 26.9033 173.707 26.6396 cv
173.626 26.377 173.347 26.2295 173.082 26.3086 cv
168.649 27.6777 164.052 33.3076 163.239 38.3604 cv
163.218 38.4932 163.251 38.627 163.329 38.7344 cv
163.408 38.8418 163.524 38.9131 163.657 38.9346 cv
164.537 39.0713 165.447 39.1396 166.372 39.1494 cv
166.7 39.1523 167.03 39.1406 167.361 39.1299 cv
165.563 43.0967 162.605 45.7324 160.236 47.6895 cv
158.496 43.127 155.292 40.9414 151.761 41.9639 cv
149.887 42.5039 148.277 43.9736 147.457 45.8936 cv
147.317 46.2227 147.21 46.5615 147.119 46.9053 cv
144.063 44.585 141.787 41.9307 140.362 38.9912 cv
142.189 37.79 144.293 36.9775 147.113 36.3818 cv
147.297 36.3428 147.444 36.2021 147.492 36.0186 cv
147.54 35.8359 147.48 35.6406 147.338 35.5156 cv
144.915 33.3965 141.398 29.0303 139.745 25.4844 cv
143.55 22.8779 148.194 20.9424 153.923 19.5732 cv
154.135 19.5225 154.289 19.3408 154.307 19.124 cv
154.322 18.9063 154.196 18.7041 153.995 18.623 cv
151.223 17.5059 147.966 15.0605 146.065 12.7012 cv
148.737 10.625 154.629 8.73926 160.881 9.1582 cv
161.117 9.19238 161.306 9.04102 161.384 8.83594 cv
161.461 8.62988 161.396 8.39648 161.219 8.26172 cv
159.475 6.92676 157.68 4.17383 156.675 1.94043 cv
165.86 -.413086 182.338 1.91211 192.623 5.50098 cv
204.422 9.61719 210.107 16.4932 209.625 21.1572 cv
209.609 21.3018 209.658 21.4453 209.758 21.5518 cv
214.904 27.0283 213.01 35.1465 210.307 38.9375 cv
210.43 37.8164 210.534 36.7969 210.62 35.9521 cv
210.729 34.8877 li
210.733 34.8428 210.732 34.7959 210.725 34.751 cv
cp
203.96 61.042 mo
200.28 66.5889 193.682 69.1992 188.773 69.3242 cv
182.537 69.4863 168.492 67.1191 159.962 57.0332 cv
159.796 56.8389 159.507 56.7979 159.295 56.9463 cv
158.253 57.6689 156.601 57.8506 154.874 57.4248 cv
152.333 56.7998 150.142 55.0391 148.86 52.5928 cv
147.733 50.4365 147.561 48.1973 148.378 46.2861 cv
149.08 44.6396 150.449 43.3828 152.038 42.9229 cv
155.176 42.0234 158.044 44.2256 159.53 48.6846 cv
159.582 48.8408 159.708 48.9619 159.865 49.0068 cv
160.021 49.0537 160.194 49.0186 160.322 48.9131 cv
162.932 46.7725 166.492 43.8418 168.494 39.0654 cv
173.734 38.6572 179.129 36.6777 182.328 34.8896 cv
181.648 36.0898 181.067 37.4844 180.735 39.1475 cv
180.682 39.415 180.853 39.6768 181.12 39.7344 cv
181.909 39.9043 182.799 39.9922 183.767 40.002 cv
190.686 40.0732 201.487 36.1309 206.617 29.6064 cv
208.502 31.3145 209.461 33.4023 209.728 34.8535 cv
209.625 35.8516 li
209.447 37.5928 209.198 40.0342 208.844 42.7393 cv
208.563 42.1514 208.148 41.9268 207.819 41.8662 cv
206.368 41.6084 204.396 43.627 201.887 46.7539 cv
201.258 47.5381 200.848 47.6943 200.712 47.6543 cv
200.582 47.624 200.39 47.3467 200.277 46.8125 cv
200.208 46.4863 199.892 46.2793 199.565 46.3486 cv
199.241 46.418 199.035 46.7354 199.104 47.0596 cv
199.368 48.3174 199.974 48.7129 200.434 48.8213 cv
200.535 48.8467 200.638 48.8594 200.741 48.8594 cv
201.396 48.8662 202.095 48.4131 202.822 47.5059 cv
206.069 43.459 207.214 42.9688 207.602 43.0459 cv
207.709 43.0664 207.788 43.2617 207.824 43.376 cv
207.927 43.6924 208.265 43.8633 208.58 43.7637 cv
208.631 43.7471 208.672 43.7158 208.715 43.6875 cv
207.853 49.9395 206.416 57.333 203.96 61.042 cv
cp
210.639 21.0322 mo
211.054 15.0967 203.834 8.35352 192.952 4.55762 cv
182.316 .845703 165.107 -1.51855 155.851 1.12793 cv
155.713 1.16699 155.6 1.26172 155.538 1.38965 cv
155.476 1.51758 155.471 1.66699 155.524 1.79785 cv
156.325 3.75684 157.844 6.34961 159.55 8.10254 cv
159.488 8.10059 159.427 8.09961 159.365 8.09961 cv
153.102 8.03516 147.522 10.0537 145.042 12.25 cv
144.848 12.4229 144.817 12.7158 144.972 12.9229 cv
146.643 15.1631 149.568 17.5391 152.309 18.9473 cv
146.915 20.3652 142.496 22.3203 138.829 24.9023 cv
138.636 25.0391 138.564 25.293 138.659 25.5107 cv
140.144 28.916 143.438 33.1729 145.97 35.6152 cv
143.301 36.2607 141.26 37.1387 139.441 38.4072 cv
139.244 38.5459 139.173 38.8066 139.273 39.0254 cv
140.813 42.4004 143.388 45.4238 146.922 48.0146 cv
146.751 49.6484 147.097 51.3799 147.975 53.0566 cv
149.389 55.7568 151.816 57.7031 154.636 58.3955 cv
156.442 58.8408 158.213 58.6914 159.478 58.0049 cv
169.484 69.5117 184.955 70.293 188.211 70.3271 cv
188.53 70.3301 188.732 70.3262 188.8 70.3252 cv
193.966 70.1924 200.915 67.4424 204.792 61.5947 cv
207.793 57.0693 209.306 47.458 210.108 40.6699 cv
210.175 40.6445 210.238 40.6064 210.288 40.5518 cv
213.63 37.0273 216.557 27.541 210.639 21.0322 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
153.534 46.6807 mo
152.135 46.583 150.987 47.4229 150.723 48.6201 cv
150.662 48.8906 150.833 49.1572 151.103 49.2168 cv
151.372 49.2803 151.639 49.1064 151.699 48.8359 cv
151.857 48.1182 152.604 47.6279 153.494 47.6787 cv
154.804 47.7314 156.49 48.9238 156.931 52.1113 cv
156.967 52.3604 157.178 52.54 157.422 52.543 cv
157.445 52.543 157.471 52.542 157.495 52.5371 cv
157.77 52.5 157.96 52.2471 157.922 51.9746 cv
157.396 48.1748 155.229 46.7471 153.534 46.6807 cv
cp
f
184.24 45.4922 mo
186.497 48.2979 187.781 49.3701 188.916 49.3818 cv
188.945 49.3818 188.978 49.3809 189.007 49.3809 cv
189.97 49.3428 190.585 48.5557 191.181 47.6816 cv
191.368 47.4082 191.297 47.0342 191.022 46.8477 cv
190.75 46.6611 190.377 46.7324 190.189 47.0049 cv
189.701 47.7207 189.326 48.167 188.959 48.1826 cv
187.966 48.1885 185.868 45.6006 185.175 44.7393 cv
181.268 39.8818 176.651 40.4141 173.888 42.3486 cv
173.615 42.5381 173.55 42.9131 173.739 43.1846 cv
173.929 43.4551 174.303 43.5215 174.574 43.332 cv
176.916 41.6973 180.851 41.2783 184.24 45.4922 cv
cp
f
187.423 49.6191 mo
187.058 52.252 185.181 54.166 183.233 53.8945 cv
181.284 53.624 180.001 51.2695 180.366 48.6367 cv
180.733 46.0039 182.611 44.0898 184.559 44.3613 cv
186.027 46.6201 186.188 46.7842 187.404 47.7256 cv
187.504 48.3203 187.516 48.9609 187.423 49.6191 cv
cp
f
184.694 48.21 mo
184.297 49.2803 183.332 49.9102 182.541 49.6152 cv
181.748 49.3223 181.426 48.2148 181.824 47.1445 cv
182.223 46.0752 183.186 45.4453 183.979 45.7402 cv
184.77 46.0322 185.091 47.1396 184.694 48.21 cv
cp
0 0 0 0 cmyk
f
206.696 49.7969 mo
206.553 52.4502 205.15 54.5322 203.563 54.4473 cv
201.976 54.3613 200.804 52.1377 200.948 49.4854 cv
200.973 49.0225 201.036 48.5771 201.132 48.1572 cv
202.693 46.5479 202.611 46.6279 204.082 44.835 cv
205.668 44.9199 206.839 47.1416 206.696 49.7969 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
204.403 49.4512 mo
204.352 50.415 203.747 51.165 203.053 51.1289 cv
202.358 51.0908 201.838 50.2783 201.889 49.3154 cv
201.942 48.3516 202.547 47.6006 203.24 47.6377 cv
203.935 47.6758 204.455 48.4883 204.403 49.4512 cv
cp
0 0 0 0 cmyk
f
167.356 39.1318 mo
166.885 40.167 166.336 41.1221 165.736 41.9854 cv
165.027 42.0078 164.337 42.001 163.696 41.9443 cv
163.767 40.9453 164.098 39.958 164.597 39.0439 cv
165.176 39.1094 165.776 39.1455 166.376 39.1523 cv
166.695 39.1553 167.027 39.1396 167.356 39.1318 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
147.455 45.8975 mo
147.313 46.2266 147.209 46.5654 147.115 46.9033 cv
144.06 44.582 141.786 41.9287 140.366 38.9951 cv
142.188 37.7939 144.298 36.9746 147.113 36.3828 cv
147.294 36.3457 147.445 36.1973 147.498 36.0186 cv
147.539 35.8379 147.481 35.6367 147.343 35.5166 cv
144.975 33.4512 141.566 29.2363 139.863 25.7383 cv
143.071 27.8613 146.958 29.2217 149.824 29.5508 cv
152.601 26.9492 154.821 25.8926 159.701 25.0625 cv
156.806 27.4131 156.155 29.4063 155.5 32.8994 cv
161.136 27.4873 167.538 26.2832 172.125 26.6709 cv
168.016 28.4785 164.003 33.667 163.244 38.3604 cv
163.223 38.4893 163.251 38.6299 163.33 38.7305 cv
163.41 38.8408 163.528 38.9131 163.658 38.9346 cv
163.968 38.9873 164.277 39.0215 164.597 39.0439 cv
164.098 39.958 163.767 40.9453 163.696 41.9443 cv
164.337 42.001 165.027 42.0078 165.736 41.9854 cv
164.052 44.4287 161.982 46.2471 160.238 47.6895 cv
158.494 43.1318 155.287 40.9375 151.767 41.9609 cv
149.892 42.5029 148.275 43.9756 147.455 45.8975 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
194.511 56.1748 mo
195.324 55.1787 196.771 55.1982 196.511 56.1953 cv
196.25 57.1934 194.005 56.7949 194.511 56.1748 cv
cp
.0797436 .400244 .584497 0 cmyk
f
189.187 66.9443 mo
189.216 67.0264 li
188.18 67.3477 186.88 67.3545 185.206 66.917 cv
181.339 65.8936 179.592 63.8643 178.973 61.7061 cv
179.122 61.6563 li
180.804 61.2139 187.093 61.9414 189.187 66.9443 cv
cp
0 .919585 .825986 0 cmyk
f
179.164 57.0352 mo
180.5 60.2666 188.143 62.6729 193.403 61.7314 cv
193.543 61.791 li
192.626 63.9131 191.645 66.2959 189.216 67.0264 cv
189.187 66.9443 li
187.093 61.9414 180.804 61.2139 179.122 61.6563 cv
178.973 61.7061 li
178.503 60.0889 178.664 58.4092 179.039 56.999 cv
179.164 57.0352 li
cp
.433509 .775906 .674159 .526574 cmyk
f
179.716 55.0713 mo
181.054 58.293 188.959 60.6904 194.768 59.4258 cv
194.307 60.0742 193.926 60.9121 193.543 61.791 cv
193.403 61.7314 li
188.143 62.6729 180.5 60.2666 179.164 57.0352 cv
179.039 56.999 li
179.215 56.2598 179.473 55.6045 179.716 55.0713 cv
cp
0 0 0 0 cmyk
f
189.468 66.3877 mo
187.24 61.7402 181.477 60.8066 179.345 61.1006 cv
179.13 60.0898 179.146 59.0811 179.286 58.1855 cv
180.462 59.6982 182.757 60.9033 185.361 61.6357 cv
187.806 62.3213 190.506 62.5898 192.771 62.3223 cv
192.009 64.04 191.146 65.6836 189.468 66.3877 cv
cp
185.334 66.4297 mo
185.101 66.3652 li
182.419 65.6123 180.623 64.2861 179.766 62.4219 cv
179.711 62.3047 179.678 62.1846 179.634 62.0664 cv
181.563 61.8418 186.49 62.6973 188.498 66.6758 cv
187.641 66.8223 186.604 66.7646 185.334 66.4297 cv
cp
185.651 59.4785 mo
188.364 60.2402 191.263 60.459 193.776 60.1055 cv
193.592 60.4648 193.417 60.8525 193.244 61.2471 cv
188.183 62.1172 180.824 59.7441 179.622 56.8428 cv
179.617 56.8301 179.606 56.8213 179.598 56.8066 cv
179.664 56.5811 179.734 56.3691 179.801 56.1797 cv
180.862 57.5264 182.954 58.7207 185.651 59.4785 cv
cp
195.181 59.1455 mo
195.066 58.9736 194.859 58.8916 194.658 58.9336 cv
192.069 59.501 188.886 59.3477 185.923 58.5146 cv
183.085 57.7178 180.961 56.4053 180.272 55.0537 cv
180.492 55.0879 180.716 55.1563 180.939 55.2705 cv
181.189 55.4004 181.487 55.2979 181.613 55.0527 cv
181.739 54.8066 181.64 54.5039 181.396 54.3799 cv
179.961 53.6533 178.412 54.0908 177.543 55.4785 cv
177.396 55.7119 177.468 56.0205 177.702 56.167 cv
177.743 56.1934 177.787 56.2119 177.832 56.2246 cv
178.039 56.2842 178.269 56.2012 178.39 56.0078 cv
178.578 55.709 178.809 55.4814 179.06 55.3193 cv
178.485 56.7295 177.509 59.9102 178.856 62.8408 cv
179.843 64.9824 181.853 66.4922 184.83 67.3291 cv
185.08 67.3965 li
190.981 68.9521 192.624 65.1719 193.944 62.1318 cv
194.343 61.2178 194.718 60.3535 195.173 59.7139 cv
195.291 59.542 195.295 59.3184 195.181 59.1455 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
162.773 61.2188 mo
163.225 61.1846 163.718 61.1758 164.253 61.2041 cv
164.256 61.1924 li
166.563 61.3027 169.569 61.9941 172.257 63.0869 cv
173.021 63.4141 173.767 63.7656 174.468 64.1436 cv
172.922 69.2227 168.688 78.3066 164.208 77.9873 cv
159.229 77.6309 161.225 67.1182 162.773 61.2188 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
167.016 50.9746 mo
165.682 49.7129 164.27 47.4805 161.945 43.46 cv
161.96 43.4434 161.971 43.417 161.988 43.4014 cv
162.661 42.4795 165.672 40.0322 167.79 39.1543 cv
167.827 39.1357 167.857 39.1162 167.893 39.1074 cv
170.868 41.8359 173.816 46.4502 174.796 48.2646 cv
176.305 51.0635 173.33 59.9121 172.319 62.9502 cv
172.257 63.0869 li
169.569 61.9941 166.563 61.3027 164.256 61.1924 cv
164.263 61.0049 li
165.036 58.7197 166.476 52.918 167.013 50.9854 cv
167.016 50.9746 li
cp
.433509 .775906 .674159 .526574 cmyk
f
160.857 27.1094 mo
162.067 27.8457 167.438 32.2607 167.759 39.0908 cv
167.79 39.1543 li
165.672 40.0322 162.661 42.4795 161.988 43.4014 cv
158.737 44.4561 156.675 43.8926 153.996 42.5459 cv
151.295 41.2021 148.132 40.1553 148.433 39.168 cv
148.746 38.1846 149.756 37.8779 151.77 38.6592 cv
153.781 39.4473 154.759 38.5938 155.181 37.7148 cv
155.719 36.582 154.731 34.4443 152.215 32.5186 cv
149.748 30.6309 151.748 29.3262 152.629 29.5674 cv
152.271 28.6357 153.59 27.6943 154.936 28.376 cv
155.107 27.7451 155.777 27.4629 156.758 27.7832 cv
158.184 28.249 160.102 29.4941 160.609 30.2793 cv
160.193 28.5254 158.386 27.7061 158.81 26.8809 cv
159.131 26.2441 159.891 26.5254 160.857 27.1094 cv
cp
0 .167361 .439734 0 cmyk
f
164.263 61.0049 mo
164.49 60.3311 164.773 59.3682 165.069 58.2852 cv
167.779 57.8838 171.075 58.2549 173.487 59.2871 cv
173.033 60.7939 172.604 62.0967 172.319 62.9502 cv
172.257 63.0869 li
169.569 61.9941 166.563 61.3027 164.256 61.1924 cv
164.263 61.0049 li
cp
.498634 .76672 .682032 .673518 cmyk
f
152.501 30.0479 mo
152.684 30.0967 152.877 30.041 153.005 29.9004 cv
153.128 29.7598 153.166 29.5586 153.098 29.3848 cv
153.017 29.1758 153.135 29.0088 153.249 28.9033 cv
153.538 28.6436 154.1 28.5127 154.714 28.8242 cv
154.848 28.8906 155.009 28.8965 155.146 28.834 cv
155.285 28.7715 155.386 28.6504 155.424 28.5049 cv
155.457 28.3789 155.522 28.291 155.627 28.2344 cv
155.837 28.1182 156.194 28.1279 156.605 28.2617 cv
158.019 28.7148 159.784 29.9248 160.191 30.5547 cv
160.322 30.7588 160.581 30.8379 160.807 30.7432 cv
161.031 30.6484 161.153 30.4063 161.096 30.168 cv
160.862 29.1816 160.268 28.4844 159.789 27.9219 cv
159.538 27.6289 159.194 27.2246 159.254 27.1064 cv
159.289 27.0342 159.314 27.0273 159.328 27.0244 cv
159.415 26.999 159.713 26.9971 160.596 27.5361 cv
161.906 28.334 166.808 32.5703 167.239 38.8643 cv
165.218 39.8213 162.566 41.9082 161.703 42.9658 cv
158.724 43.8945 156.824 43.4043 154.214 42.0996 cv
153.527 41.7559 152.808 41.4307 152.124 41.123 cv
150.88 40.5605 149.001 39.7109 148.917 39.3164 cv
148.991 39.0713 149.118 38.9131 149.31 38.8223 cv
149.614 38.6729 150.263 38.5967 151.59 39.126 cv
154.194 40.1816 155.293 38.6299 155.63 37.9248 cv
156.333 36.4482 155.053 34.0596 152.516 32.1182 cv
151.722 31.5107 151.381 30.9277 151.585 30.5195 cv
151.757 30.1689 152.263 29.9834 152.501 30.0479 cv
cp
171.951 62.4463 mo
171.838 62.4033 171.734 62.3525 171.617 62.3096 cv
169.311 61.4531 166.901 60.9043 164.874 60.7393 cv
165.409 59.0439 166.173 56.1357 166.8 53.75 cv
166.989 53.0205 167.159 52.3721 167.303 51.8379 cv
168.24 52.5322 169.223 52.8584 170.467 52.9834 cv
170.742 53.0117 170.986 52.8105 171.016 52.5361 cv
171.043 52.2598 170.842 52.0137 170.567 51.9893 cv
167.764 51.7051 166.607 50.5068 162.542 43.5049 cv
163.36 42.5771 165.908 40.5479 167.792 39.6943 cv
170.609 42.3721 173.412 46.751 174.356 48.5029 cv
175.274 50.207 174.463 54.9023 171.951 62.4463 cv
cp
164.247 77.4893 mo
163.995 77.4717 163.759 77.4229 163.546 77.3428 cv
161.021 76.4063 160.883 70.5684 163.165 61.6934 cv
165.289 61.5918 168.413 62.1875 171.269 63.2461 cv
172.201 63.5928 173.072 63.9766 173.868 64.3877 cv
172.044 70.1172 167.962 77.7539 164.247 77.4893 cv
cp
151.907 32.9111 mo
154.202 34.6699 155.143 36.623 154.727 37.4961 cv
154.253 38.4932 153.293 38.7354 151.953 38.1943 cv
150.604 37.6719 149.59 37.5762 148.877 37.9189 cv
148.435 38.1318 148.119 38.5127 147.96 39.0195 cv
147.602 40.1758 149.326 40.9561 151.712 42.0322 cv
152.386 42.3369 153.091 42.6572 153.767 42.9951 cv
156.46 44.3408 158.575 44.8965 161.681 44.0088 cv
163.753 47.5811 165.137 49.7754 166.465 51.1045 cv
166.303 51.6982 166.084 52.5313 165.832 53.4961 cv
165.21 55.8633 164.37 59.0713 163.842 60.6895 cv
163.45 60.6846 163.072 60.6895 162.728 60.7217 cv
162.518 60.7402 162.341 60.8887 162.287 61.0938 cv
160.454 68.0986 159.121 76.7676 163.196 78.2803 cv
163.5 78.3926 163.829 78.4629 164.177 78.4873 cv
169.348 78.8564 173.704 68.3623 174.947 64.2881 cv
175.017 64.0596 174.916 63.8164 174.709 63.7021 cv
174.142 63.3936 173.521 63.1045 172.881 62.8271 cv
174.606 57.6602 176.654 50.6602 175.236 48.0283 cv
174.446 46.5586 171.462 41.6973 168.232 38.7393 cv
168.231 38.7373 168.23 38.7373 168.231 38.7363 cv
167.755 32.1631 162.838 27.7295 161.117 26.6816 cv
160.781 26.4766 160.438 26.2861 160.104 26.1621 cv
159.737 26.0264 159.38 25.9688 159.053 26.0635 cv
158.754 26.1475 158.515 26.3516 158.361 26.6553 cv
158.096 27.1758 158.308 27.6445 158.636 28.0898 cv
158.061 27.7646 157.458 27.4854 156.913 27.3086 cv
156.223 27.0859 155.612 27.1016 155.146 27.3564 cv
154.964 27.4561 154.813 27.5869 154.696 27.7451 cv
153.832 27.4951 153.037 27.748 152.577 28.165 cv
152.298 28.418 152.131 28.7363 152.084 29.0674 cv
151.539 29.168 150.965 29.5156 150.688 30.0771 cv
150.432 30.5928 150.252 31.6445 151.907 32.9111 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.1
%%For: (WINDOWS) ()
%%Title: (Boy_Throw.eps)
%%CreationDate: 12/15/2014 11:31 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CNJN*Q6?%;,3hD^M^.T%;f!^#$(sGd&KjX<GdmSVQ[?^k',qZ;M<3/f-.T#kG'e]:4jSKUTEMqZ;MH;dA29:g4F-M1oAg]p
%/C(HEN_drL=e,N`YHtU)]eWSObA7W+m)p2PI.;,&5Ai]0.a=0gZ</oP(J.aqokIfE`o'#LVQ01+jn[<Sa6hRA%i=D!gWuMHo@*;h
%c[VLn^MhD0hemmoD`4s%ZTUH7s)#2(h&QA#pGCbADq?A7g\(B]a3E_ic4_\OhU9YursX*;"8H3F^H"A:]fP$L!;CDm^\J/mJ#7/,
%\+JY(p@8iB%8Sk6U\<IBo=r3"r,n=Lb9BLer3p6SX,Pm\Bpuo.3\`ObIJKL"DLX\BI!N!-4?5Y'^L(D2br:r8oOdu7_dC3Ci$!&f
%$"(uDg\72<dnB,obh%HUQXA"AM>qMfr?j/l9R#/m68q8%jPit4EWpd&66HN`qX<p%3m2+q5NdeDQM?E'/(eBu([uPs2jiG(YiJIB
%,Qdb=mDi##S'*BZI$2\]GWbp45A4Vq3i_s)9`]]n+^&*rX\I63jT6[!jT^bigOG`0J,AQuhmT$7m=eq7F)h$<jM,-Co-D/m8b%jC
%Vq[-ET:K3gln"FP4<*1L+)ar#Wo`sIklrM"KFn.5)F&'kIbA$/HCpg9iFMk/<k5,UGP1M!k4e8^B5Ol%qu*G[fh^f2:*"a_VD.k@
%6pN)!%</^9>:,gW;[9Y-:#c+r\$fN#"T8=6qYeCT0.1C^I0F,N]um/ZjkIOUS/cka0%3tBIqTtr.X9M?P+KP#0/'eIg3&UnD85`q
%_2Ng>7\9/!LT?L)c8I$U2d$!.n.kY3!B>S;gg"`i3(^3&M>?=NnbXUaY69<[%0+1D_G=IthmV(`/AqKjL>QS\I[apHm<VL9o53&f
%2/D`G[91[WXCgjGXc:mheu<Gd;o9.%?Ir;]Y-AnZ_nT<UD6[:!iiR'Uhm=ud=g.AMp"ET\ID*W-lS[S<S`VPGO8,.@/`*MbB,TKb
%s0*E%$iaZn*1)\O^V`@r?`\m4_S7pN"UEqDj2/S+#mZ06Ypfkm2iWI,^GL+]K>ff&Hn*$uH[sXcB_WD0XOgROZUC?s82De7<;;eu
%jjEZ"\GP&CIQhm\Vb4#Z%p$S&ia6MZ-^%!FhoWgq)m"d(e<spqnBEp^r/71dJ;aa.=#uC2p_U!i)"B7T-DLqNQ[=8/<*Z*A.jjN1
%E>KMd=H.m0Yi4"$!3#ME21@<iXjb9ioEX^?!#8"DJ93l6SA3&uia8e,\;k'0\F@c<([KuZiHE1\>tGGgIKj;nU9c&'iZ305;213"
%(Q$Eh6_F7rYidAin>Pq>0fhMd5$$.qF7\/eJ'U@-H![G.ff]!;+DtX_5E*a6p%(=c]<5JTc4jB0*AFAV)Xs+b[sMr>Q1&?i@I7\0
%qkW/GgHA*7]@phE1,mFd)O&MYrYJIHj9KoRrV6EjPNVkss5tK6]dUD3s6$#[jNmfis&9__Xt'2<8q*4`^[hF#B<gC@r]gFumE6dl
%q>^B!>4H8*T77LJ,BP!i&HD>!nn7p>s)F!3hWDe'R5O;QC"'ApGSOr'bSTd)U0KV,H<KCrF^riT?eBM8^ro&]\@l-6od(@fl$Abp
%C\\kfBZtd:>.h+F(+D.rJ%9"#k]XJXkY7o8pAKJSSuQ9BTUMp:(Nl<RUp"hZ5`t%;YRIT-mUAQF'#13Q%?8'#n>eD)=#`,<+8Z&_
%=WU2i:btoeDN@u1$p8>HJ]lC!Ta\VRm-q25NIejsV2F6XcU?u??XX%Y4+[ZS"Os=mPl0f2$fR.#JY'"=+]7F?s7+S"!L:sDPk*<!
%mEY`)Hlh/0!?$!.!7"5b5o5jr]FYHYM(]OYL@l0sV_1tuXP@6s).l,7>&kW3D%qNQS3UDmQo$e'BaIkX%1^3<^)[de3asX(!AH-W
%B(@*1L<\\(_KkNRg[KmhX2[rroa$VW#\anLn1,ocLQM[O4>#M87C]Q'XLm`YDoYWpWM8,Rh@7>kV^6lqKS<d+>glL@+P+q6;Ze@6
%7.,X>5*lcMIAEPU;jtRS=U>$hV"KNnk[>(`r7lL1:kU`1<#D?L<]a%iPTq>#9U[+!Os4_\NLbt=9`F/cBgUnNs64\;HWauLpCbDc
%Z`Y:XnsGrDM;1j:)7nYTA]s-QTA<J*q1r!eh'?Q_mmBpKaNH\&EHG$&W=:!6pj$mieV/E*mmr6OiqV:?2.PXBBS8N<a;8\&f,C:)
%Pb(>S?#3S=%^/W+8OREG'Gjk?+:bk*WONH<#qlkiOkLo\I0[CBEC27\[&qg*EMFh2Nc/_H)FEg=.%V^`*n_@c:,=+j(Y\<Vn&BDq
%S+o,K==0&coIF+mY\^j7/&hbu'cOcM'Bj*:R\Xinl%Q)UGH3#VOm)oS?rRc4`f>@'XPD'K"si>b""V.Y%IeueF>DPS(JFiXRPkJi
%\KUH^a&0:<Rk47J^E^*OWa6H86=>BEr0?-A1p.?sr%Cjd2L,`dE1d^n58V_"ep5M:iPokK,'6ZN(=WJOTEWM7j5Bu,2^,]R(@*,S
%pb'4MDT7gc.#Acc`Pn<l."rh7,<F;N:jXcWZQqOE:c`+(Fb%djgTndedTFL]-paQ+-/:$7Fp&kGVo@E\'/r9!?.)WE:,djK9rYgB
%.YmUH'_-%m@A5>"FrTZS%RT<P>$">='_5gk:Ps'eeZ=T/6$"O[RE0IcDf-13(H<F[l%5b2@B$!_`_`PN:Wg\NLFE&.N`>Q_RM)[E
%D(>f+s(<4"8=B!UG+D-f^r[aEV^[[l5)HdAlk1A&,"`H5,W'Z^?-PdT+_r:?X5m-84CK.3dKgX,]06BG9UJ2D98J?ii*?'o1gG]9
%-f@i.ML4B_/;"W3IbY>p?%kIK">Il-[h:G+ju)O`:ocuE#h]Dj*DQ`u*<-D(#\+KLP_-4;W$UI00k^]S2S`FM0Yi]aALTuG65Wj[
%(COhEk-SQJQW@6)@NRmj6t+YY;T=iV80r$W%/H-$N^jN+Ub!`E;1a,-<`\(.49;SoE=IY37C,6V"W&Wdi0n/%Lm5>W1r1R"e#;"1
%dC<5er/,HfJd.=Ok1n""`Pedr.SuPODads.0F04W2:qp-i%U:,Lc3(+S4-@YIApZi^Q@lab_&<`D7E["V[TP!B!\4^c2pVBG_?]!
%Mg_=V>DeqV19gP-:WNJYV-UpkOq&+j+mi&*i[p@0d'bDl(SZ;oO)a"s1WD(^EA!*V=':)U\mgt^6_c)G;<rm=.h]ps]a?B&!@=Kh
%i\abK<+XL6nBmL+%k3A(PtG`k%#u&&3FM)S[#C8"-jV'!QWh="`HbF..b0SoQLQF>hdW=6?t=R+Pa9'P>Z[MO+A.IHVe&1j_mRPG
%"BBRG@#8j=YmX=c9Da5K5`Z>?@hXB6"gV_U9b8sHS"Qnu3*CsoShSE%%#9$WKFH+VTWa0OX9PE0JY9c4X!AsjZ'r-:+O\WE_Ceb#
%.%jcV8nk#c!g3oLbY(G01g\8f$G-bVYBepU)]?91Z6V;b(,&IXTj^rm6<IRJ>b\^2(q["pWb)NRbCF.O.H7#^BB!::JBZ1'o_b4L
%MAV=8N&_7q7TEdE]WemPm0V0$I"la@b&Aq2-12GK\WkZiU7qan#(0rZn9TlX,ZM#13A1rHb]C<*n=Rg%Kfu+7'I"<%2]09pMFCj?
%319(XOj7P^Dq2rTZtVe_Z&'PAJ(7L\(V!.A5S@`QhBBjD\u.VJ!S+`EoQ3_SZD)J3"G?6.[;B&%$oXt-/=,:&U1m!tMcqVe+]0ru
%nXm<"K8%Z?ciHt$W@H(keggaU'^O9p?-!X,=gi$DL4rA:Fd4J@+S+$>>Q[Y.`CL3h=r4qGFFa=#J:jggEI"PS]FKQZ98piL*BBV3
%9s!VlKhVo!=I#4'I5XW`,W_.=a)p0iEi>bboqeZ99@!_t>h0Wb/N2>@YZRpD=YFNf,p^p"MPneZK);1C(pI\J?j9mk&SChf?hbSE
%B0$kBPF7uK-tD5YA3u8K[6\UB!%)0CPhF(F!.bd64(s(2dURW0d?;;S->LFuFe($s'FiZqQ([Af&&qU*W_hFXS=o;[$'C('+JU=m
%&rD$L8-,s=Fh0iUQ,c3QP8)u[^t\A@KZLo`!mt/DnuHja6RmfUP%[1HTFkagWmj"C<V_^o&WdE^(n9q(KP2A,Kis#Uo+a,/<5kt+
%;OH+P$]fsi@HVuIUiduX0k))$X_:h%p5bRiRs@B4Xbm[HWKqZ8WnsuP_`U`QOY_nHFeW!)'i)3c(!&e2X=2B.T^+oM2<-BNOfC'F
%q</Gh6=.g0=F:PoD#C";00N>"E'$RN6m,PtbUcZ(enpZ7Re`He:AdYi]@:(9bCsnuDpTE&)"I!iW`X!?n5&*,#VTq2KL-NK=fsj[
%P/0UsYZ$<G`c+:a[O!.,)N^YeA`H28i5mku^WQ121L`L\=?d,%BOa01W.rJ8Lug+h8[k`n6Pt;&7XXA&;5U9GpZ$J)cIkW!Q.s4H
%lBF#WQi9u?n*>*U54/fe/R3\J3$p%!O'kM8NB4Y]&gj-TAOndW@*p1J.E1)?#,EN*O>JXKV<^J30K(1WSO+I&6;\!Rb&H%48C!Fa
%qH5m+'\c"_VUDc[)iCq?L/7-nOeB#gR2ANF`:0k&VqU.k.7EF*0;L-615-nUM[o(G<UL0/&QFa#4'##i*ium4Xb]FpcaoSYdA&3l
%JFWkImsnM@g'b>8@>S(sOE34YU0b&95jUmuaLQ-\#\mqF$5Gs'<LuM,Sk69ZT1"ViGU&Fll%O8+S1(t&12;@D4V&KDQ6a0g\s3Mn
%9*Upm,r.tKHEof7`![qA"L#[6d=t=cgg)31\1DobYu*hf"goa62COV:73E^$E!6ChP:.-_<2q4,DOjJ%NW^aAfpRdP'oQL*Q'l4+
%T8?sS9O!Yg=)k8J6G+<lKa^kfFH$Y5abf4EN:T`#=Th>glm"*BN<4^7<5U,q11UZ)#t3(0:h2&?dn"7'9t`&9X`uF,+$>Ig:3Qd,
%8Y<l45-a@@Bc@-j6-79$'+\2G9i-GFk_>7Snl31mALgV[`J9PX8@$*!KY(Tm=N3#Xp.@`N7*SY(Hd\^,(i>ekVmeM,2O8&@oSr^K
%BZ6Zo$jFQLFP2K$>-WOqY%nrdEIpO3<:k8ino:p,(46M8HE&S=)B]PiRmXPS'l?rPj1_a:-:Y.9s(fZc9\;bn9Xf8!YK["]#&MWT
%ho^gd0Q8a^<2s],X[_XqU96K)^bTWCI?3S_E,MBh$B>6c$VHkm6EJhkQGV\?cPNXg@go`.\*`u]%#DhU3tB.)iSse-r"o1[J"Z8e
%CbMtU^#\*<.X:jH3S\RoL4Oe,?[ToO<H!@H]n.p;G&`!(l'o$Rk:^1ifc6X!gWk8ZfGm3%g%Xt7CO:1!ea,pXnF,4=SQp'qS!-WT
%h9a[JFE=^Xn[EI!I>%Xhnc,!RQeV8t(E\&->e2una7f0';p_a!fpj)/raU$>Bh[POS8QV1(Gkp)[Jfs_+7RMZJE:#0AYY^M?@;_T
%J>8U4:?N5@<!^2Vor--sLY:[/HZo>?[E]jUS`djE9tpH%j1Fp3PKt=VK40U`5I,L"gP`E,ca]G\=.__$IQB\Xomks-ns,j.MbCcs
%D][mf%m9p,gu$-+c0=K70,L*R+&7iNg)p+H4_VmLUTis<TK`"dpac*CrZ1n+*!Gp2PI"c/KrCSuh"eud\G]k0k/6<p(1YU3:t)mX
%]EKK"'&coqXs_PmSh87).Y#(_*1m35paa_<bqY=Do@`F(QS%ZfJ;4PucB;<g>9(D*nXhIA,]d1r9*BGo+JY]U=]M+0-CL3'>nf01
%1Kg+]<+]$,=>!7)*8]b_0A\<6*k8JJF#.ZNVQJ+MZ'i$Xe#$a*dO^q(#tC\"HPjKrp48Z:I"%0K'bB$'ikbKaT\\U6/X@I4'k);/
%nTWaZZe:DLmpPkX-bl0g@7_XY%i+,2M:1F(R?Uj?1'j$]_dVM0?BdGn@?juZ':L4YN]K87aif@B&JXaRpR!Aor@;t-A?U\m</Z(M
%/=)2oS$]';g:T#kZ3<h.?*m7HdOipZ[`k'Aafj7#=[H[.H!RRS$(Ccmq5RQM(%bp7Y,YJ((Gl=4<08leokM08i%fDNEb04KhjiQb
%EY\-]rkEj>9(S]V-<EgCnA<cH.2Yti09*iFSh.-Bcq!HUK)4-H<C<DK.d=6X'm/Ok1;$FJ0lSG>"QWUr<YY*4^d1N(HiXeX!A5,'
%a21gVZuU\"#*;KE"sB;+G`30QRj\[be=[REG,c=q4tOL^!6F='J'_ES'P>4ha^P\qF;,bu2_5^u:CYNK[4(">0REuWb82U40\ubm
%B/P7`d&$b@XoUDj0&K%)G.7m><0F]"9e2jp0=4ikn#b(lJkqfA`3&#ti5s5Irk]%n]S+$m(biZ+Lc#XSDjm,$<E%>HBQAE1oYO]B
%$uoJ$CNqGs7GYh]VH6p<U90>7YL>Ob=7YoND<_6NE=&faoSj$eWiC`q<d@\E=Ts[e"Y)<%d/j=)PgD[Pmc1r2b,dG`=1)h64PST0
%Jei!7%.T!$\#E(QkV!*5/5/u@5_JP0rdY2U,Xmm"E5DVa9ht,B]V&s21cIGYhge*KXY4#]Yj8C4WiRIG4O;G,b=n4pAJu,V9cKIi
%)AM9O*P?*HWh.Kc5R%p-\PeA_#.Pdd<pW@(\C>YT_ZK%(Je#YQY6:N)7MH$i+FIREUmLV4Pm][7O@h#jYZ_^Q#XJW'220N^V$+<i
%!4NXbB/#@]K$k-%VkjdZLL&ho8:hrmf,D.3S&!H]3$Jti/5(P+:@L(D.$jp2BJHEhXoPJ-\?95%+VH^8=+kBbqiVMnCOkbL+PW]&
%:a3t)CbsdXO:X]]_ICE:;WFtjFhhNQlJVu((+jo=<(V^M9RmBr2!Jtq=sYiW/UqkCM,IkX,D\N7M)$bb.#8e;6j7Q.2mhu\>[Ok,
%(:869XHjPS!ETO<H<M+&$j:3i;:VlP&Go24OuY'2h[.mN0Lll%&7IQB$dM>'``0rnQik--J:A$T[fH.2+J/YhQ[mBjDbJGP"kG9`
%D^3mB\-qd`"Q>V2(m*=a)uq190MWUH>6e_m1I@NA7UQ[dQ7I*E_$fD@7+],%TZ'"K`Nop3nlNE_g@^[%05*'`-k0Oa*S5?$C@QoG
%[Cp@\j(`aBFa-31r_p5b.X,-@k^jS.*ETu8b'%$A/[AF+0)c8a"1&=G6MRZJ]YH"OAhaB=7U3Ae2iq_(#"eCfYT9#di&qE/#unj8
%$s!MZFH/ejJ/6['QPQfC>+ebD&r@5f)rqF3gk\a.=D&@f%ceW<j<Uu/ORfM^aRFFf'W^@VE,&LO(?d#Ab;q",5>]]QdS^XT&9MTf
%7g!U'o[^l_8,?F7F+LaV&nPAaCRP65!Fe;312%BtTI"nj!R3n+^*$%_"I]kN+"#BsX"u!7:d@J'H:8gK+cb:Y-NWc&jbn/=S/ACC
%kYb12)0o!aHjJ@@na6SMW$Ma]CI0F:Hp.X]<Y01"Yp+/!#&#&K'>XQ3!(0>/&CVau8W(;lfnRc=2=Kl5\HBdXB'!WikL6rOjI*+*
%/?[b:Ao@;lR^n-t)U0/G(sIQ#0:o;BS#MWb8S3eALM(8eAgV`.;X9:SHm(:Tgg!r?%h"p1R=WRJ^N,E+\22>Him:1#n&E1imGQ2b
%/ffUL#@$6Hb##2TU*-)0:t?jo1D@Hr'[:(f]F2*)`L?FW<&>"V3^uhI7LOT^7@Js.>m#>H-#KD(IA:r]L']^I5`o6W%Fd5c1om=)
%_c!]dAS\hEoI!o%Mo9TLY@S5P:#$KF;S4Pf,_tK'H!)\0H&SP!Q-!'[O\:k\(>'>CAsJS)=?6Q;'sKV#\/URW<[>SWN4'iH(2p3D
%P/T:V6kUCNe2>H%95"^mmSFKrQqD%[88&=O[O[MX;7(!#X9tc0'P0(^E4p)=5UT\iK2DlZ=i.H^i,),M=\Y&^$!:JhKO@>?=HdRP
%l8g0DVa!^u%F[eQP)C"q<`]\1"9;WR=sUr3jDm!*"eJNYP[#HJ><<m];r&(I=pRW5!*GgK+[GP3'j6Qm%**:NQh\>>=`W`7k9jEN
%5uP`^r*M+D,`\ets,SImR"<$%".G("IfG\e0f4cX`a9@+)M6`7/i4/Pp_p/W(RbV3G7@Qb$Vc;>E=Gp\$V^bME",g[SgHMC%dB)%
%-)"82et/%bc8mlLh$(2sWO7mmjGQRR!]3!E''N+af2Aad?"d5?42HuE*XO!,-<ErD5o6VP<pNj"Cl(8Gr,U%mZ^&SP(3_NnOL51o
%2.!RF%:;BV8MMG/8Oh9oS1I?YOV5AZjW^OD.HFHa2%N.t_u$X275j_@Kk;o'0G>6/^D;/+OY=!0+;_:D'543LY?_4=]?Ks"b822b
%<;4OQ\FT(<Z%oTLD"hLZ\:AumMrcftFmW0>?-o>GeD,!piiC8;Pu\;iM_;^,92SuP!AjmlatV@R\e.gMV&c6t<HY*?TH>:L0b*A?
%Z`uXIQ"UW[AMTDNMGUGZM4c2P@3K`IA_Rr&_H7.$,3,Oq$=T?u:cUt?(7';_ZF@+2]+@!Cb<7<]`>$D@+X\YX>cdhs0f`CT`?H<S
%/5%"m9`tBrr)u+*T<kRnad*.^7R]ds(0OsOa[%djeqdI9<f)I9E7ZtumofBd\V6grOBO,sC)W4SR+*nu<anKUWK^j\S]$bN-.)1#
%Ym.NdfK)*uEV@tL,[%RY>-Y-*,,;;/12Xs=#SJRo*Qb'e7pV#eaq?*qT7oh--BL8gk4J3k8Xh8HK'q9KXLV!PN9/9dN#>9UQLrp.
%_Ber?Ck&kFU'e.pH/"rpUag#@b!N-Cb_OoKE*dA,.`F:p[JO*i%Ps:AS6[9,(_jhk]\bu&#=_BBCZducM&0Ubp_\([LAV@;j*6j\
%/?!d/$D1;#R5n&1Wr1Cm*:O$0-_,GG]FV.)fT#YLpgW)dMGJi-_YGO!Pn1r'Oc#LB3!7U_q(#K@ib6;P_*<p(0P\I0^.=+^N4._g
%.)``jre\ij6H8>4TdHZndH)]6Eh>Ys'lgPFq;6=b'<`ItKbi^3lhPacs*$(t"OQ.N'#aJ6a"F@1J%@oIl:O_PqKM5#ha/ShQ@Kp:
%9p[>lMBnWOq6LV_J_CDqaoo@Uq/RbsK1)dFWKSS8-U1YWI^!dSi[U$#@9pbH%4+@h'8e`14bL-rabB>&WcrOK4H+(L3>27QaNLQg
%?5gq.IJHWN]Em[:s,n?>cDI'MK"C\qWb8XMDl+7&AkJ9mkm^LW---oC^*qhCU_HIr"lA]uhFChib[ZIH"M-]n;RD+^[gHh#C4/?g
%8aA_^S.e%TXUjYPgFZ:g@uFnnEZA:5)tG`Ae?+NAUBJWg8[M2M,.ju!H^'C>Z4ng"9*>jg2<6k;E?Wp*f^ah\C'eo!>"_[Y6S;um
%03F'tY[t!]a^g8''2]r`+(Hld8'oiFmukAHm$WN.-JhAg>aFBkXMqO!P/N%e<\+0q(&L?qZ>.tOWF^!^.c++sUZ+nf*>R("eubZO
%1dM',mLYGnC5^lIC65;[6QIb$'&IJT;R%=J$rmKi"I+gF@Tt^@*MF$+_F!SpC`QU3\/!1H>K'fUBPL&Q*uH).']W.[X?eGs+]^V9
%')OWR"t%\+SE1^^JVMg:kQbSk2WV'cS^"cifS8!MCu307(VI`!%PWsO"BM9kUa)hQ<O._.`B(k61^*L,js6@oI_Z^)_FV7;.kkFd
%i!Ta3k?5LWB69&!?5;pQ;9oYY&%%]c$+tBNFsC&#-/8,;HPB\[L?qcJN?U$Zg7fF:fFDHrG>P>.NKWs+9:@,7MPE?]8>V+W/#G<L
%b?E=-(IW,-dZcN5/!sP:/1&B[$^s9^<2:)jZ%Ue%JNd21$qLm_1*WKl$KQmMnNc/aBb5Vin$7f]bj$f&<nGsRKmdo+MdAX5?b?5T
%K75oUks:5U5Mn*.@(kTXr/K'ts0TsNg%T7P2<YDo$8m4u1AL2;[etY>dJ_b[rsa@oJL,:"1q1L#+"[5mEq)"`%MdCM]RM*u0')(F
%90"IKngfB"Ks"4f38H4\.BnOs3Z_*VNVcOH:]1X%l`%>5qOVGLWC23RrWUaJJ-*d]+//dZr!]S1Z6lNa#1`rX)e=AYj(oY)Qa0Z5
%HD,).X;e0_aSMTFLoM\7F9q2h^o8c76":a6>?$#J29(l/pS'MtP;]WpY"1HT8?>rBQPh0=[3V0jV!H\SE?Q#L"u7mQMfEhE7u;5=
%fGuOFJ1#t-J\,+h+s0cl'=bYC!+a#6S&!i3!YPmjZO'lT&Vr967gR2S.7<co!p.?0=]1>W:<PkqO>pPD/K"n84f_d!n_R+;caj/l
%KINrJ^l+P)`lf@!Cdl0G3baQ]mOBKlMjLq7&(`*#TM\2qqne&4<GoqEU<cDYie=#9^ooUiZBBa((i2P`=A;_SP>2TX+U24mcm8sR
%#.6E4"-NX,2.YZUKEtH7HDIJbln4L;Ya(j_TF.@o,6BN<2@IJnTu7n(SD-Pfo86Xubj5_8jBC_KWJU:$BYbqb8%OnH3ufWK%K^P^
%k7#[mR,k!O<^@#ZP!a0,RDDLpW0(OK#aJ2*$-;"%9`/Yhmi1ZA]#9*?_ZMJCq-EISg'RP3lO;Q?/V`0[CR:`-aH.(&C<55Y284b/
%G,>W?@,N>b>pB.T>lD;JQP+tnc@0s3.oY#l9FT1P,0mOlT,De6!a/HB$Q'6''\4k>'p2o(>"Z"L]P*Q`aiU2/<c.Y4'?P,_dAU;0
%!Pb]L!r0a.Z9ZB";+ZUJ:uJDX)lR_[,h7VOBbr$!=%#2$;M,;m<\&a/-*.IUq3"'4QUEu5V5bsAck=;g?'m2Kg+FcjYp#QdZljLb
%[OY*`5c`d??t(_hTkdj#*"6!_ld)n"#e!^@b(e>(,^\JYTd:RB@KqaVPD(fIT^&)1H&J)+l[gi!@]DtqQP>V9d*1Z@PrV*46^%n0
%YT]CB"@4kK'L[3UdG*4UBGSN5'7rnNoFgC6dRQ0\[k:@<"#Z2a!qdcSg;:*^TmMgbWSiEEm4psqp.E1TEmFl>Ffcn;\;"d6+CF(/
%-AI-=m\<[7!L=6-Wo\jG87[*u:b<cR!;QO9TisW.!S6=aKPL=U"Min"$.\Tt>-Q"9L2$lXPsYo4[HcDKl4k^T3u'?aS+nJ-b=3;)
%5K*Fl#t9`T3kCdD>'-pu?fZ<47b=Y]72G]ZrZ2T2IR'.j5?W*id8b9@)dT;T83!b5<ukT+JIV`1=)N1\nPtAqCeGQk><=7@/m*;Y
%7LQ]JQnfI9>IZk3?T<:2_e5=sD;u12%AHSME(I%#6Skh]&2g,Hc%m?=/&juO!?,.B_6n)]ZnCtNW<-tuCRgftAJ6uM#T%;MaY>(!
%<Xk+U3#[S.C>eK2jPcp<H`fmV;c@4!_$V(M8.NPf5hsL"-5S9SGNm>8*5V\pPe^N]<#1]SZ#g!U2+dg5!kQ[HO[d#=-7<iS9DEWF
%38]LN905g>JJkF/F<1X_LBaL=9gq3k':OT/bWFft1q^e$<-rc#/DOhmh+!]g,M7h<=#Z/YW]j&L44X9qARAI9Y+j6WIR>8#?5bP9
%$WSF@VhX7E/*_LK'&J3d&sD<PKkC^0,mo#g>GH49h,fEA$lRaJUg'9g[%Rd`.n`bE/kHCd+Nh-eQ*2ML%e[d-2]51+83of#T^^5a
%aVudPZnefoc*^.c<?QcF(@f!jJ28EkEu'FaUk6!$Gc+sr*p[a+8oBkr3+c[Ns&n2t[F\]%0B5c.F2M#D"YJ:eY3O$-*4ffZBGp0=
%N%X9jI)*8>K$oTBADASr8Kac=(cR<R)D'9O6o9Tk\9EOHEkcgMT3aL,-MO3jUWoSfD?g?DT1*Z773hf-ALGVOQ.WB/,0RPZ.4C48
%A,eur%#l<^`2H^"O8j6ua.H$K040MaU_/_f4oQ-cg1=4]SQ"/.L:Vi3'E!R7Wk4k6N$Z-J]:&Lhb;$A3-W@NV.<d7>Fq*IOA@0aE
%\".8sGVkD)bn88>b?*[Xce)G3kgPWcHmN+i>]@7tIhqq$)0a^\hP`)4E24'6<l<SEMg8@RU8M+T/c.TZU?LtGOU-ugpn\QAJFGtC
%)PVP,#J)^@4b-TjAd^fr0P2IOK?;nbqj>9+(mMb@_SF[q=d-=1+VFMX@=8i&L^$D-0f6`q$SkIXiXnVQH:cM;?C43j>DTu),,KcT
%"os\8TP0=H:%cU"0PM'#CDd5]a?_XA>rT#;a3^Ku?**HtL)G[3F=q7SJ*Qtl>Mu&=.sJU&5c;@qB]X+j$3iKI-+%^%)[0c`CM`.Y
%[`6.<6g5%0#pj]X%6DT?QG)>`Pm[iH":(=tXs=YNV]3(UN`,<qPtgi+:(,!5D7%48Yqh^nSu6f`<[2K89dtU/Q`['Wj"teI%Ver4
%L)XIS.p:.8"UUq<bkA-'"NP$cC/r5>'$O!M9F:qL'pVa#;K7Qdf:#+)c3@-fZ#qs]mabNFYHn^PXK8hl@KjB-hTC\"7:W1@)Uq^g
%0apEb<YRc+-ih/?et=.=o<tMm$puhO64_@&c@;ma7KG/C`8OW%e&Y,)WC7Y6AsP,,MmP^`IA=Ch,M665q,.!Tpai)WmRE#bf?s>j
%m.Qj/;@5!^mqW6uocBCFY7c1].LLk=4Xnqc\9:"`52=P$am7"Sh?[3P3c^l@9:.O@/(P?1R$%+`kt=[#M@16%>WV-O%$$!u3+YED
%oYa4@,RLj.S8:NWKTtH,=\C_W:8't>edARDPm^A]Bk8Dr2A@LFhuL^t<fdG5VM+W.JqbbLe-cU(C5I6eQ?1-A"t^TYlRTjEMQ$Q,
%n=;o`)<8CCO@Vp;+UXGIp1noJH?7`Nj1RU@n/V-*Z!V/Vpkme@LU>RH89r22Vj7!MC%@P)GGRTilJ'`]/ih>5dKQqU!`D+P)/je7
%KiTioKg]7%_Ccogb\b.I'a-o>c2puLeg8ur)$Qo--BF$4Ggl=VJG;P>?H"._FPK9XBsjtO7(4tg5Sp"=h?Tk#5`pWLf+K.:-EPCH
%b&Wjf$i,NjBH\RK9<,$9Hmu31n6*D2$<?`XrIP[WX<h\JP6@lB?n$PA0AL%[)ldq$TZDh<gW"qakA17tT5#Ws^gJ&F_1Ms8i24hU
%%@/0Phh)-V&2/O[?lAM@N!u!YN&lq$=+s`-X&)8em#d+:'srR%In&ejkl/MlP$"bk944*4=h5ZAfK[hS=4anppjJgSVW/KXHB$)2
%MEO_>2i?6![-52'YqPG>KJKge2=R6##P\(*0s.=0ECM>u,?23m5jMm51)CSUM&.(j('6\QNu-50_-O<4)DX8h.0R#>@tc=Z<$u!c
%8`#jhAuK`A$`luN`SlI_:me#*]lmh<'NjQ3:":k^8Abfm^b@!$U``#@AuI/W!1MuNdM5WiO@.$/`Fm.pD^AaN**bI=3T67u-5CS9
%6PLJ]hH,a[[[+NG>InT9GB9$inX_Di"fC&#<;fboSRbN0O]b98p6_\mrcGnN4UlS8a8bs>rNH+K%'oqF"MpZe<CE60[)#MF8d%\s
%nCd4XgRdau;e8oC;=!!i.4Ll/*[F$t6$SdZj!uAb*2,`=TTtjAmrK+Y.q5,&"b\J`?@#!9SWNMI(EQVfm#8U3W?l/e@WsrIN9l?r
%jcqjbgV7c<[fqWOnihART=jBj!dl=HZQO2M\LZP*#^t4YNk,b#EB>0=m`%5-@MjirfiBp4ZLr/Op1kZFjXbW-0OGu<FiVQ9k"Ai<
%(-KZkamlbOimcoG\Am1L:_(+!$#:TiL!-8m\86\c8Zek[)OB/jaDa-fV\U(O8p9X!gRX5Q6jc7#bUjV<7I3hrEQC-RlX"26Os#df
%6\[?#Y5,_N'tF]Naf!3_jY2>HMR*893TYWX3R$ctPV=D:!YUWKE[*IVX@;094E?lZ:34LY`)4VOq8,D@V.=nG#W3`$C/k^!Is$!E
%pEp:ud_I%9/W-iZM*4j_//9eY8AgD95iYQq`W[OPcK2HoEd?c[*!bcb>*<"NNAS?I9]G55:KNY"/(i5`jZK2Ag2S1;riW-@"UTu'
%)MRXY"$I(l(_6Q_%KHf%5Ub(;LV+H/lRW<K)%$K!)$g:b0Gk5XAg7ci)%6b,"%$B*1aHTc-mURM\Y,$5hq7=;lbj!,U@OQ9Q"U`X
%pFpDl*J?!u2)dkB_a$g1Zp=UF+&#g6Lagg><cX3M]hUGT1/aK=>tQAhl[gngq+Ll8p(TJiXi;rbq\)t1+++t3I#'f<Kq:3.8Y??4
%FKD"CRoNG.+TqDE%Lh&O"oEJ.do(mIi0Tkma;n;U<J5S]C#Dk"QZZouB-1<!]$UV6")'@gLcW-l2X_Kb$,Z.kGg0OARQ@kh8Tjm*
%iYl8lgW)/Mm&$`5S"WrqA3%7H?Zu]T8=5#63bYHZ)!p/nkdZ]Z(\F@LF'Q:/N2@%_FntN^dO"))Zs7GZ#,-SZM,SJ#0EfU(&L?5]
%h'&5).nYK19#3c+`6E*FA2;A<r.`lKAhCf7<l/$&@pug?GbPU8/X'TCK""H,"Xb!/HjISM$:1W4.a;1l;tAr#0Xr:A4nUT?A"PM+
%AlX8lj#mnrhKc24%hbcCW8,tiV5+,gqe55uCdf:j282*]JFGHp[?0ZS?eXi;-R"oP2<f8n\cCr"-J^cG6_Z!.>8_Od#na]CH.Nmp
%!A1ogH?Z$tbsl7%eKFBhDb0;1YhmLjh#*k@hf#"k*HKPa#0r6mKP)4]Tc$.F+O(=j3IuPX5aVdIZ<"IdY!*O"+AS?Ml6pkW%gpCK
%"i7]Se3d+\]85/=Zkg]$-;6_#hinEq"%\'g*EKWG<DbZo<X=56IT+,P84"No.:rY(#h$M_7F21Gi%85;?jlSWZ-[6O\53R*Rq_!:
%%mchnM.st#[aV5+:<+#Op;GPFA_0]V*M:#B1H0'o`at6cLTEhf.cp%q).hmN,0NludfQ@!gTsHT05/bf]Ss0iXX+5(8o/(@B#bL1
%<'f*6K#V@AmN]Vd.1]9Cq/R%qF.0"kAs8om$QU]B*t)OKQtZ^+5mkaka-eQG'Q0L71fqri6]'VK-u,fKC_iIJVf:<?(6U&mB=.00
%\J_+2[?U51$,nmHG7j$7eiZ#]GnFh4<aQdd95`pYSB;b4We-bD2p,al68?QtH]<ArB]F[+'Id:C9dR@HQ;O#D6&+u'@c^Wc&@.HX
%U_VK46^]`bX9cBC>B\%>.Ar-J'nTVqj<q7ono*oQ":rck_P0as@SISJ$*c8Z27^+&&gJYlLklQf=j8sMd`Ak*'F4dAIjd[?gSUs1
%)jeGc4LnrEK0p[M$Eqt\7VDu2jVZ,r]'"9jq&>XF$/*Q;SWb)5kAO1PA360l+cEWbXIO?0h34XWMi0a>hVe%p3-RaS[.(k:\^O\<
%ln7Q`N$Ps#Eu<$MbD"T6L7C_cDPOr+8DQbr;B9cu%6BPn\;tenOG7%3OV:;lK7O@eAW:roX:`:R?o)Y;VQJ+MZ'hsVe#$a2dO^rS
%`S;f;R$H>E89l*nNV9UDo%@mSCU6QD<B19kS39t5K-p853T-SHcZmWsUo\/7?ZTH1\`3+Uk0r8`enT)[4H7XM]>O%6A>in@#0I0r
%+nq7Jp0=/Ug>Wt7.L.Tg)Ltgh#1(%S,Bk#T4\s6H^[q6^p4pME)X^.s#K7-dnpu*h6cBtZo70!R-E2b+h],03:&rR(?o=2]Qbc5o
%aY:OaF.NkZ_9>2M$RYCMXY?O`T[YFa3O8mKO'>HQ"'V;E)2jb/i4ZLZc;RYr^q!5kpOGap07h.#(EV#I6X`_J2^"8I.-='a&(SRF
%SeY9$TKSMd\VETW@KkQrqLp6L2Fgai`CBoP2l8o@8W'OBLVd;l[;-&DNtA]?TWriO3q,V#'^gnDd`VN^A*58(4V2_2Z%p,p'\WVF
%%GRsXno/-Gg[7G2J9h^"mt34mDXj#?bl2R%p?V'8pp`?'P@_Xm1BS*PJ[/UmmN2WX1!Z?bAnRWQC:!>(EKSKg,&;#$TgZ\t6u047
%9`rVM("?3V1!WEH<u?e#8+i=7"SuUJeo%*O-9Flu&It>(FmZ:0RI`B%;.L%E@$"LSGUmX@NAfW]bAlo0q]Ngj;3Tua4%Yr4.J+p/
%rCC`cN'0^Xe4\,37!kR`FKUH_8;eU8/j.@SH]UlaG`YQYE0*`e5SnpGM]V0C%sA8>GB'VD]3A<jnnjiO=3o7RbrS$_Bq>_ZM@F(d
%2-m9k7WJ63N!,np-qYY&qDG6g*3J*j(s7^M3q\O/5R`.hObTIkNi[p;SWN$YKkE+-B9EOiNHL["]-2m7-.R'*@8MEV<pIOo32iWp
%!@<_0+%oRKaeY8bU78]hfr+o2H7;E+f'FU>0!1h;,2IZM\mK"t;7sEFAM)<C\h>RT40pKW"?3W!A`8doY@O!N=qYd%HF,5l!,2+3
%+fhaSdNOAPOnFY53<_]ljfN4:K"iSXReEElaeS"%I./V/?g<>$]\@3r];Jid'33N\-VHOmG_]5WFuEX@B>M-g?G:ARY-+6EG'&G@
%0'DR.p+JCL(XNKWo#d`@Ot5^S>4hM[%dfFDPd6P?>Vk$3H`FDB1.Wq]'?^mPP2r^.0\bQ[F^Z?%G'%hO'ONKg8:6B,O#$H4.60%-
%)`)oD3?'h3\'9Hj?\pRYY$LZ[a.I,U]#LFZ/:->#dVBYcXqu5PetGR5LY'mK^ADq4%sQuA*uj6F1bgmLLMM!R\W*oT-,FKU/j=UE
%X5?\tmT4FQKa3id0iHi&]9=4YE0BpHNS1k33iqZiUDVr9Kqeg]l)<$4gl/KoV^R90L'DuI\el@FkRa$mScUOa\D"o&'BGR;0fHu(
%!-8/W6i??3EANF"]dkjLr[2F4F;_[<=_?e=,A"3o7cDsR3qTiQ<*KU)bUNe?:S$Wi#:LKU`sn>H?8OQ3&o$R=]CV=$p#"*@2BTEK
%ZX9MAAl,]Q.#!Fg.UW3+D49b.D[+UY[-c1r5!E>,ME@A.=g$oVpP!r/5p497-q,MF_M)Rr/67a'q4hYNaR/9V:jfq#5T\J46#Pel
%6)qh2WiI8B-kDi6%Ct6Qkd*+'5%CL%(ji-,a`g4G&Vg^!Q>uQM.QE6OV2*Kq6?1$V]*[arLW`3,P,n!t/R?ecMF.(aonU^terjOQ
%V3Ef0(MKqeemZA%cVqi?5reXC"0aS%7p,MpUk?a9.!A$Wn05rof1HC4-mKfo4G$gcDR:C&DhF2+i11<fG25_/Ap0+4gZ[i$IqX(S
%E,0\L)j](&\##>"Dri+Nd_0fG7.-97pbFi<c7Q#Nge<Sl(S+r^P7R%]-a<tF\sEZHObMTXmVt=8g_j_I+EF3kUIWW[$hs:h&i"E4
%/5\X#BIK1f72&Pr=-uN(N[5U(-L/M^3RZJA2f%>&X<=^`E%X)ACaMhU1QZNl0RK6a]AkntmOjH1akW/mbO8a0HTHS`#N%O%/[`L7
%k6?`G;N[*F0$2BJPU%^1n5l<'%ujXJOCGRneRX\NAf<A^HaP%M0U%bJ)8T!\'7L%JfWZ0MD]jN7)^&p4dVojJ;4,H&quD_59+:U'
%@@pTF_h.!:PgiGTU[]+'i^*`&b5Id>\%o::@KDT;nKJ?>\1$FkT+W%H4F<ig5F:$6i:L4H:Pu-/,5m5tSi\+A]la%S=_c>:*7Lll
%)MWAK3Mi]rN&+/YA>!'s:pZ`b`Xu,hb,f6;Xhs];PhI?UXh\S0[:3=`am@FE),K2t5dC,mS,s:@T,uWMm?CgO%(tR2DPHQ;UQ.92
%pU3u3Lt)`'B>mHeaftA%afN@X$0nT;%EO,O<4f8#E,.eYY!kqL\pD25EjhfUFL#n"?.rjank)dD0A;QHIhol.$ngWA\dLg-1q4fO
%#c>ZbnXI-R$@7uR<V(4F_TITb")JdXK0e-0r`E(VUXpBL'^Sr49H(2"UYCrP[sbWK%7u]jT/K",2C(pC*@/!X\"R%`en)[)\uf0S
%jhG0NVCg"JX-rEr/#f@^=p]$lD(+:i:7;,BbC)rP`,Ye0-0:^MBd6YF\Rq=ElR\Ua&MI2,=;/u(R*$SrrYV4/)CE(#"rEoHU=UU!
%6@>ke/,UjPAc5'0'`=4$=1BTo"<1e?M*Q=:jA\C=eE3IV1:Z&r>.?-2s2l9<n!7g?GafnYoK-^?+5Wk#V"2gap4mi48Ud2Wg%GYe
%,oC;oQ"6_A6)3)K<XKU*i(XMS0Z+*T>Mc@q'l+7D*i4iI"UZfijVj.hao+bS=Yn)]J'gW%J%%TX,XIeVP4OXWC:U\/?@iSrn6JhE
%]^:^Q(5oJE=>#3rNj$t2)Z@@h%L04KB'1GVm4s4r<<Qp]f6n&EqYK(/ca2U#6[:Y?n!s!P@dbkN,ACuG[^0r5=b\;m$ea_WNL47p
%"=*5L5#Y@A;AtpA$ecfWJsNqu\D?O\f8tf%K;Y<ukm9dH.NG__7\VT[EgYW5AGs!jIMcug'T&?$Ogod,Bucba9'97KF]<6W@NA#*
%cFln56Mr`1Q/#GikK8=m<h6X,d^1JrR&3aU@7W\C,7?LO,L!PLNkOdi0X+0]]-:_XOq"X^R)*lH%*@Fe$TA?4-\PUOc'tqXQkT`F
%ON7cFh.+o#c@K7]6*u\OALDc[_JMp[gqn"5\%U;piaa*=R2*QClJPhZ@%:Jt.E'gn^2AW<rcD5<(a7.[W!;15V]-dKB`<eQ"HGd1
%KD$@.0qp19oEC8XaPfo#^)eZ]mAH5E02;e0n:E*JAk`P*d>KL"l`RDZ<3s1A\_YFMFtCUtel=gH5Pc3p"F/pG-,:?YAjZ#7`goT(
%k)%D-IY\bpN]7md8r4r;RI.U#DdY)=YS#Wfq=ViQ210-NCr#2KWCfKDf$8$(kG>BH$u<:SFO)LU.;c6?.nE)pkD#R1gsR5p5-[(,
%YLr51>#L*TP]B^qG9LP@S6SfV#mP_?"\+8JN(aFI=g2eSGPHL]rKQl"=$"FWm=CCaK6h'5h)RIDpq>W":/!W%iP^B_fAa_+C,]kG
%F+E`PH8F*5T^O(u\9j.r'fKc6g3jIF\%1:rnb*fh*QE<\roSPXm)9Hg*Qg`FcD7[?$N$X':C?upYYPW'Up*W%qkUGlK(u.39fOld
%`.Se"V6K"-#Mi@$WirB#Z>]iWH3Ak,5+&g$#;UhZjjMTQ,_;rDXcb)8@%8iGG9D%V"k$f]h1U?95=s5h7T.H,ged?6r,<K>aj96#
%J3.uPNc)e!+\\$s5oR\TU?JO0Q$"EN;BA%hm"fY6dN270EQ3r$??iOWET4Qo7n]#B(;]h%4u%Pe8bcQs@Ri*9kq/$('1f3RmOF?>
%D.a&oOc_Ng@s99;\^VX\Q0<#"S:W"-mk5&m4o1SsocKb4\I)q-8At5m7>DYsC"S.g66*-m&?q4N/6k!sf-S'JU^<3'X@F!L]$SCs
%LB[*r#,Mfhm)8DV[--k=#'VVN_hmed2hBQ>_rj>qa6Plp(NMK#;3Yd^r\M?BPsf2,0qmC-c]Fk%!@Qm_L5HF-4(.)I6C2S&T`t[!
%3&"o2ekk;\3"`#m%l\M#3<ceBi>,q.@V6lA3lOY=d"PT,M_]sm_'MJ_S64PV-NY`*-uCZ]#=HP&jE)^ons\d@';@U6fSKbO8a0?F
%(?W<+K*F;-[AKVZ$p(nM3NEDF;_o9KRL^()9GNk$cGuK_&uAb;eO:lB`T71t;Kq1.65<Rj5<==&q=;KW.N:[ZESOV=l!`fe6:j7o
%LHiL"rb*kfG)Cb:P,;lm)L^6B*P-=T.+Y(/<ksQ=7'R6@YQCB*7hk:Y@2lhR=G%7m_F*-t3.p/NMe`iH^[V^63`V]2Ec:abGL.iQ
%3dEZZdrm=6XBX0,\LjA"]:NtN_MJRH-Cbp,'6+6,>PN3%\Ol(u3e?DT*V%uERHI_d4)%#Xjjq`CjDI,0J-^4#%6LYb]G"^+-[@:^
%k8`3dW0Y+ACr1l@VA%^tYZa5X5!$QXlZQUUiS8m-%38s-G<9GXk].7d[O@t;i,6hO_<I,`UB>42Hr`>@Q0B]c[$sfAE$UA=fTAWj
%`%_jJM0GKRVprDs963qJ=XZ&L;piip&YoR9\(9lBI%UB\:4f.!R>+BA$d.P5BthH;#a,SsM)`.)#srk@SXr4skmo0C66upL2#0F)
%C($[+LD2)/?)3><e5"-EP=`4Mn-lmcZ'H(K4ai@:T@7lE;KqD2)<CZK%d#<uGF_dj=YPC<T1Pmkn(:5]K8:?:_]!eS;rO8-U*Q\K
%:]sj[=[_%l)gte0lK@TMc8B)upeET36p8VC]CLM#'V4\mU#F<#$,X),^s`j\M7co4+jgBBmVP/uXiIeSqB7cC3pZ=Z(Csq=%^!cn
%<rBYua.Z4X%_!Ed5BaX8dUc!S"DJEpl3!Aa7ab"!#q%b_-U@-UH#-d7M4oQ4_o*5V3*A8u3_VZp;GVfgdSE'S:HoF3AeQ4udn;rW
%fs&$mg0A]p:$5?Bi)gq2rF5f?[rmCJlKDn#kD<VWHP9Yl]DNGq1:V-RY>:87#?o=t77Ndo@k^d"N`6n>0NEkg*E()uQRq1NF;`G7
%-Y:<MKGcjLB'@X]9:,(B%?d=Xe0iL+=q-s%Pg(@C?ptr^P>sE\=(Ng`7]e,>_OTsi>)dm9,'%.)N5]<DWQ>NX,eGb7a21a&M,\NB
%<lL*s>'FlC^=$LP*:9+kY[](C3lNCh+Z5rUjcVH[%H=.hUkXKrermIa3+srRgC&Z-)G,tPe$m?UH==m$'Y*<npO[q&e1#D9FB.^g
%:paPZ,J\+<&<5Yd'Ok]?=tpkU<X5$[_I0aR4/WmRk!l;I$&-2r@1Zb4XOg+s?G=uU4;gAPk_"C9T<nXhUNSqp*WeX3<H%L4!D1;h
%dkUL4Y+gFs%Fii=\hLW@a9JP4/TP=QQ-2g0.JYKc270)GYAmk]3`_A<C'r9+b4WCjJf11>eAuo&q;?Nc/a1IdSR@38Q8K@K\tmf0
%poL/c4\+V(<V)ekmcO#qVmaNQ#uK.;"HsF1[WI39OSq\>g!Y(ZlNeSUHoWnRCW8=(>afnrJ7kY&V<O#fc/Abp]b?D=7ecsrmt>2(
%&WSu#-Q_<@kpK-V(fFe^-VAZG;4`KAKXJp)XG"\BSECsNpr!CX7en1o8P4I?]G*.FjE4YUP^4F2'/cVJb$gTJA.;-[WDp%r[/e#3
%^qLZU&?XcTSI]f5*]&#?gU)$1g:8p)>aT[e9KO&fSI<olKk]_eZu]Z58=lR*-_-QC@`!sd3n;#__BsReJ_Sti,<Fo>>_!?XRd\VJ
%H[,V3C]`NH!+RqfN!^_HJn_eN<-VpRo%4_sF$(cVM.2Rd7]#L#Mm52K,9"X.PU*]u2[*?I]]5piL'+(;i6&V:SQbc+m-1ffk(?;Q
%+#IJq5r4fc<Q)_/3CTn5#X3pLGI)jPI0mO&%m.$o0Z-6_Y%2kN,.UAC+c+_Q+ef3LglX*a+CZ=J(^;5Ek*pa"5[n9TdZ?j+9%4+q
%kID8T<D!j$!1Fj,7aq6FH<2#aC@kS:EOofYlo;,F'2?q=.&LOep#&\%/j`0h*%fRGG3HFQVL'"#77ncNaS<!,nAptZ4=l6:8F,93
%C,n&3\,NaDD?XpnIMI'39GfSI,Go9rG[a&6_j47uM4>c/C"sCNGbgQ>f?BG>o$NhsZnjX\gfiiH3R*ahXo5kVVL7`mO&?=[Pr(N/
%s5H.p8)E`^J)j=CbY9_tc6$PkF%inL/]PidK^[nfE,&Gi+,Ake^6,1,gbCe>k6(2.'jpL?i=S'Q!?-*.maNLRn$aP_BKU&;crne5
%[4Ye,`s?BY:uP.`d+BFsp'K`*Q5&R@FHT``)!.$;;-pqGKdarqA=EM66N*[5bd@Z`/UV@N`LM^g?2_Zp1pY<FG'/i]MW23\(\3Tr
%XrY-8>te>0pXhuXl$gTbT%6)qap0C"a6rekOW3>oHDe7^`d@*/p)6%-$"j1J=KcljcKg30OeB[ULE^"Ch\AP(!A<b%'PV3%QZkOd
%"$G?^%n)cB)UK7`X<]H7$M%$9DVlr*Z]LiYb"31E2es/<=Zadd^"R`M?*Y<3O,L/g4<4eh*=E_*'%=+9e$4GPZ%2^n/E"5^I!;d#
%r5,&\X-rj*76AR*D:cK_EQ*bb:0_euMA'(H;m*V`]P)fio6n,X3QMrY.3s-F$(aJ8Vi]gc,^9Y&SjJ%,OPhQ5ps8&pSAIK<S="8)
%_MPtDM*Fj.n8RBql@HelD(j+1`+u9>h_rPqV#p@HYWdL._ts31II^-r9m)*bHm5\q)7sD$*Yl\ln,$O0g+1Va!lH_#:b[h1g:BRd
%5rdV/KPa:YAtX>AU336JP^Eh5DO=<\8853G7nGel%8uaD`GUc8a-c`L@6#QaEX%JfKr$='8Xe7%=3/HrfuBuDH`AhM.^Cek78d2S
%o]fc-4:Ut`#H:dQ$gQ9g&DL9^D@Y*4HLtu48*j'<=>CIbqMa'GeB&DO$UqO#o9(0V1BS=ETJo.jEuZMGd_d77M[^Y0'IqgZl\-t)
%7]FcW(.W\s9Rn77h&q)N9>k]l@m*0@j"5nbH=PqdHc59*XEsQ$J#Ym2@cB=7#5dJ#LbLFcF4Kr?AY3WGB<bB5C'Q@];#A0DABfup
%0j.MMgOfd%eLW;;7bQ<-"7M!.jBZ!b6V-9fCbE158/:q01f+=.OO>^bRd<Wn^C_t'gJM!2O0kn-aMss5d)mMcO<jLKKH:]nrs5]j
%@\M"=f)jqmO[(7FKigpo:0LLI/0oh3gD<oqO[1=IIP42>*;PD=[?/pi:tio)Z9Si`G`]+-K0"mO429j&2=)5-XES,O/WPro>Tmn)
%U2@u`Ro(g*S@lS%b[M<`lr)kG9-.TgX,RpO#io48aO?[V'i"Ub2g2-&O;qiWe@grsALY12fJ'66Z5"j&iZ@+dj/kbPRj]YL7n-#Z
%UK@`Z'.IM:jhM2bTPT^#ror6[Ndh,Y1ng'1_2Z1G*J8DhLd)+-,/FX1)[N?+6i`8LTe7B1!Z`lQ1ih$dh<)H:G.*%X=q8-B(O.4k
%!Dh.g=U8)[%gap9fZ@\d5(ZgYFKK(TQO.hX%JqI9LU&akT#i*J,:?KNI$-jb)V$>eIS#pOa?/(K/"m#&r8.q^NtjY!fBb:OG87Ti
%dam5!(@Ne('>L`ka8;N+e]9qZL!-.6Qc)&.*o"*M+5+4o.QT!;,jOq(eBKRRNMB)le$bsrrba=6>\$js>%RB!F)i)0hcHDEK!de+
%1Nj:Wc@\n]k?Icc/b1tR44s1pdXC9XQ0])8h+kF"oqN;e$#]Q'A>WrqN<(9;X`<]^7!bMigrhN4PXo`F>j>d`1g\;e=m!4?^E7+I
%I(?XiQ!C03^&7FiYY0c3RX?GoNc4JC:16o[SS&@/G_,j9:Dp7.;[,lb,*ZX!d92*Bg)t5[%8Imbd9uotV/Fd\2g2/>_%c9T$)3j9
%c=K%<&md_04NqWsh#Z!\#Lh"A*:JaKm#6K2UE)*qQ?%tn]usH$m<L7X[RA.:)FIr@JO=lOgI;crpfnRDeEDU#8=0nkqRh4'&+t2`
%Y3Fb,-MeZ'/s2#:'j2KY[>jnI'.0s-VNG..hIp1kJ?`9$_JQhI]\#<l/&sp@LlFm*'O'"ZA)2Ie]'\*q/L5%a%n'`=#a/DX/jtj>
%C(dc1`$CCPP<Ejq<6pN/$4I<I.A`%u!ab-;#<&e)3\[M=NHN%@dR7NBZ)+sOC]P+4e.^htkXJc\HcHqU#8m5T@$i=/ZedUlSMo\?
%.s,<>fjS,/W'Q?N3YYu"7G7nJ6]3lF$SWP7]]3)oJ8j<R%IT^,!6oO>]AuBi)CS+^ee[(YBF60/c/s*(L+,TlGu`Q\0^RT0/IpI9
%ZD+#I^DS*:JdnS;aBE+08hBc>l#pQ/9?Df@1GCaeQLb1/6J/:72^Sb4!*cIB:e=Yi8eRXnR4Zp9<Fa$Xg0Il/coO$\V!tTD%=O[h
%DhNH<TZmpi*a59O%tLEI+ECdi8ObTp;cn-)b^gU4M:g/^1C%q4:=oY*p*`Bj.!b^Gq:Q8p-YJbnB>;**'cQDTDdL0QmLt#8nTR36
%/ha[MB7HJ#\NJPm4?kp![9)h*T@'5H(X26Y!+n/GAe*`pB2p\4&l[&tH<pTo@`P[^pMu;3m-!:%oDaF:rro76c19PsZiBs<amAdK
%QN-k-Ic"l5@o+LHcX(*akBV'@hYhbn74LA<C?"9URMak[1EQ8aP*2apl3s4g`e*nPLL#G%<7[S&85H`D@>,Nm,m\Q70[>.(i8&Z5
%Y;(dGY]Jl,gu5>h:=Wq\?fi3a:X;]dU3rjm9BR$@=EjZ.Tf/n>IJ?O&c[k_Qn^Gp.?=knhk\3nf5##sF4k-?YRP!YMhRYW/Bgk0\
%$@l.[G\nZTKJa6e5)m2$D6s7!Khq=tl<H@!@kH3.7H!RAl(?O\%mA1eYl8]j1SU:RDUN>(`8;*MI.XLR&Fup$9V-A_/k$UDk[)pZ
%6YnV=2%\uMNMoZ.6uRQ<e7O3UW/W?hkNlfNeiAZ"cu%5r9p]n-f#h`6k/j!902l!;AZ&nk2Z$:.es\eiAt7GM7E_^cB)cSm]]mmg
%_ab+-C!dW;g[&FG[LlqY":DudW(\o9Ao)cH*4a4Rr;mI\MN$Nq&CQ1(2C5$@B3oD+s*TV7L.*99AK!YE\)V2hmf)(U>'8iEe(ELB
%FZ^\mRS!FI_)cu_1nJcIVrbNNa*=aHSsJj-MBUO"Td?6U3g,;CRd*$\)Gnj*3[9LUd#s9*TuL$EZ7<kJBG$<'h;(!X_C<LRmZF"`
%]oH$MVqluiE25%YP<5@Zn!59>b=PknM4ZS+Vn[u,F/2*Y\Mj'%k1O^uh&PZkDB$!WR'0:)X?!M>A^h=[.h!YE)UJGpD;L!$%ea#F
%2HY##pB.h!Zq<DhVEU0fG+/!Jq"r5NX-]nEJta\Dj3,&LSeZaa\@DD5_6rB6lDSq3j^5\pAp?l8m-!84^:;$=Tjg$`<jGX!WiUco
%<(Tf/or>(n;_<NZMdCUbM?;<^bN4-35S;mu7QmHjI#k^i,QWUkN]==Y7bb*3Wi?HP2d;W[b8Dd,'XhFk!"'dhlpocF?'i2KgQk:N
%D_d8\7nk\<$So<O5u.ZM\:YA&2>hM_a#VCnHO8_(CReXfS[\3dXCUPA#9JaUJ))][k+H]0!gfRN?0/ekGFbT\"6*Ed$e5,,>2F*'
%(PPHG?C,i##OT1i)Gq'EKB)76+_lC+B6M+"(iI\<=<dG)bHGMBs2Y*-!ZkVa=Hb%>/(?:iW'HSAkAXoPPRAu(o/s-RKMOJOl7/-@
%jHhaA/Lp4uY>Z<$_?)HjMV_$!E>M)07P)?pG:8)PpWL1Nn".RN2L8Ycg>7O"]7@*nBPBY#IiIB7%I5RHh]L=Zqp'<n1QWu]m`oqa
%F-L/mlHWYdYkW$3Q/->q'Ba(5'ts0eq_tXJ#dth_nLVkA0$F?Ok(tg,(KNUZZ`E]s\^B1Ao]JMJ*]+fYGlXiUa`e8EW,k>.4$)&e
%duV+rs!D84pYlfkU(S.(TH$@N.T<()(%WWWF`0G9gNeT8)<aQ!HSNe"[G48ogCNo3%e/A["C69UZ.bKDnN+DhMn9P4s0N7u[+kDd
%P<jKDahc8HfNRH$8TGsP`H'aYq/2M]>nPE,RSVrH4emU8"Z412]iJi#Ph5P+<?f-(_>8M%Q&!do,+[-eeptt9b%QoK2HM)*_L1&g
%."C&%LRC\LlKF+@B30B*cC'I4K+J.r52SFEiH:^b7T88<ZfOmE3f&8Of=8'-Z6C\ZdW+@!jIOGBcp>!H+nafm&##^#m3cXL_%u]0
%$]c8PiXUa/_[1>-p>>p&]RL'S0DfM/m;X1XPf2^n_g-IPY4<Fmohj8PcBGo%m=)%Qf^>),N7G)%?0-PA[enq#fH->?Zn0UKQZWkL
%S6&:Jp9D<"kF"ng91&q)/L"O=@XAA(LR,*r(kJLo*Gfp?%P*;JigT8NiK:@X\i[>2X7CCubtT8+kbtFPkCqQVga_M(`JFL9(m`Ds
%S!@UZm7S3?9i7b'_`oV6Z^&pYcqK+aJ`&)5R-[9MiF,iU!<SL>Vhf%aB3\c4gdl"G'dQe3Na`VN`'0QiP!W,QN`=(Ol6MSa$jO_*
%J39)RCUL+D[0N?>l2:fSr\Wa-,Umc5X?B+:RV8H:-np[0nb+W\`T?[Okjmg4Cif.Dm&sObjXUGc$$q:'CA*uQQPV#^^WaDs/=N?/
%X,fK:?Z*+==0mCmWaFd.*K6-D675?8>X.!G_SpKUT#W`6!+'6:4IFcaLC3-7A_k9CJoh#+=RHMJbCTm%cBrQ[RJg5)'==SLRn7%N
%("Q)1P6iY]X"'LhWml')$9,58/^6m0BPL2XI/o';_:0g>F?%P#`25TR/2(Uf:jALec(llNT_LmO2U.UP-Fp7rW@bJ>b>Yl4.k/\:
%iX2e&``lGS),>$LMp_uD`D*HIqpLp4!Lo<W=QXlg[CMCgZ7:j'>*X`I%lC\)UjtYY=_bjR[?YjDE0t1b\sB$)Q(o9Q*$/[3h/dAu
%q&_?%3Bp@HCG<;uYi6@@RHroL;Fk=m-T<WF]`V]f_TCofU8h53`IKp#"AYGsWQg-4"g_sR#\e%Q'3J;8F3;C7<`QRNRMsCb.`2>5
%ib,[K0iaXZX;Cqu1TNQQU<8N[X/OYdR;a_jB>!M->%*T&a>/mGd]sY&#=*?aE$H/7\3QQ,V+W_%.84O-&@/*DRZsN16M^\IUp/,H
%`M9@=.F/Ys!gN2S<!lnQTWl_L%n.Cu%:-9d@?=*WZBC1U#H9If#7_8.\bHGU/p%_Qr^TYb?u.R$lGS@>Rqd4OeS]E0n33#WFE1MV
%[NNLK$&0eYM"7/VSQ]/PV3>8"C(%"RNE`kK[AfI):/8"9=rZ!5i7+2nH;Ko1345/njXa!1"mnZ3YERI1D%)+gRG(X%L(\k4LJ2Qa
%VCCQE@fWF/Ki&Jje>Z0=0Wu*jLbZA<82@NDg:S'+-I6]s\V9<lR55Z[j3b_+08%@u=`8i]U3(-Ta^bIAANi\$\Z3/uW,OH"7b+Wj
%l%(`m"qK"'p_AG?ETU;o>?;e,n@3Ot^;3diChZcp+W%'YLkH2#bY/c4igS[("hPJFY[V/RmO9oh*^b4p<">L^aeHU$M%o)d<Jkgd
%UnrmlH#DES#IufC"Ols/Yespb/6RlrB!he?Y.,!bD1)dL@&&PMBr24qX;W83ASSX+%NHO=Eo@U!+u40^%c9dK>[%TC0tV$W\Z(ks
%kB)ogJod4p='0#X,F>6*?>+@Z*);Di.i5aR_m[WB2n?KG")Fq]SD7'oQaP+K<S(.4qLFcFXN9X?ObT'hBnpb,ic&q?TLW:lSDK%=
%UJ,R.*3$fH5PjGmP`]O/gRucfhVNj>[S"(Fqa:W47kMB=W7\/l$tG^d*]`gcVLUN1MlG@18Q:Cq\X#RT=]/?=j/?u.g:cKDOU;C"
%jjP-qBj;aQYfsKc!I@"VA[TEu;G1TD.)eQSF"QaoiSc.#*[,%&/k"Z\-MKPOhHaT79Yt/Nq=hY+:JRU_QS8?thID?@o(0>o^H4[:
%dee8?f6m8am)sm-4?\<M?U4oM:>T8^ig(5p'nG@Se#d]`iT0Y+@a!e,B7Ka>m*^B?IkH6N[&#Fj9YLeJ(0:7Ok4D:2r,Y@C1hT\q
%Ho1S0?\e.JL`u]qF@.b(QpLXnEd[[k`'C-TILkSYp>hPNQQntp'q]5#br9R1dn_&DDp?OZ3]S69+KY37K/nGU?e_@!`VJ';1%]I*
%^2%Ef@sUqXlgJI6Q_-bV/unk'j+ajX2"C/%in`/Lp?ZI>1N`Dp)o:MPJ$K+24HtckkH!&d.oIl]eSrgZhcuaX*pk/*_2piZ]q8%p
%[psA9Wr5nL95bm%g"".3O"NBk(cA7rnrn',:rR;nf"92imJ:;hs/obkNT&K[qBLjAXq@&e7W:/Gh#;C/d0R=4rB*3a'YQNA\iAFC
%m:,\O_o^:37X$bFd@KYdaZDN;[G9b]Ue`q2SWF>9EW0[!Z+3!3(ble5onh9nHiEQaq<*sbEQdI+H9oEjboQT&Er1=Zoq]at`=O@r
%DVkY>GcG"4WH*Iu<UTh)#)(m_n'4]m:WhJN?m]IQ&I17Hc5`K42o6+al#Mt?2sG@H/iW$8GJfYHkqg]K`XQD7ossu\l#WU(F%H/_
%@f)5Rl'i3Qj7D.Lg-Kq=q@9i\;KAB1j*u9![>Ub$U8g"9)u+f+]\NMH7&!^O-ok`/-^Fi5[^l84q.+QTfKF$I/N8`XTAqXWp\5&?
%m[,_fiOHp(aE#<Qqn8n6kO7;XhHjNp)X^27SoUr_:LcK-<ITf\$V'_.SY)K\r:RN0]ChJG0`QS_`\o7<VPS@;@=8']4o5.m(OdAK
%miN/AnG2A/rT7ejk%HO\e"Z,'VGW9h(JNuAl/n^'5Poi=3?'bYrEGk0I*)-aY5\7]r+p_\!W$"1<8i(%,fp<'mCT3H%a@"Y>K*Xb
%gbA_S`%_2fa^pDQc;2_<?]R!3r6+,Cj,GV?f-3-nUsLodU$fU-E(^SZhYRGIT;XPk3VJR:N*m%.mP5i:dt*eX=P3O/)`*4b^W/$_
%B`7d\1i!LPm2BUo#4p>ljS:dWDo(E,SgU,$>lLrffr7L_,#d9%S6UO<\@il7CO^*]G_eu]D(NB0+XBiDU#0`@Ib>nj%oV+!:I1T8
%Hou-sVC8&A1S0#7pnkAp+XMJQ3&>.Ro%>mh4UCUmcd,B'(Ye>,O)WTCq_k%`^'uk?Yn%b6pq7RJ&Zti8]&n'jar3'jI:%XP`c*W3
%jmgIWAkWKJ+f^gbSmQmAE.3-4b6S,X&(Qd)7E1o$nJ\`rAD`6qF5$UP&[/ko?E]qh/Eq5K=jJ8_fU+ru;6\Nhpd\X;Hb\-%#`SYq
%f#L=pLE`ESlN@A9_NGE`6,<j!Rh?Dt+nOA%UD'f,Yu1!d)ufj"iApcW2=bVf>4"Q?*&38%@@]WCn8>ZV2J6[Wdl6%1mEmol^44=)
%NNX5Ypq6S#qR8RA[oo;MrcG_3g4%hK?%0E]FHA':is(qkiG(F[9h/!W:M-ri>8+]`H,0&qN+f+(pR*f)5HB2BR0Ub@im:@Z/T(dl
%p,XD&ht1b"@dX-Z(nluXs6:FULkCiJ`bb,B"&bHOgM2("1)T9Sam&'"Ln3"mS)Y+UH?h\D-9?Xf0l0U7g\ecYMMW/+jlU%5b2\pd
%2D$/.F$(eu%bH"^=`qY:hVjT"@uPA3Di]b6qht',@hq1,H`D(USt'XV,IT'AD,-/+4Wb>W*`RQf6(OR=N?H:]4;RAMRZN/@:grI`
%)V2ln<::DD4$Gj=4Sd$rEOi)F26%6D6T?oNpieQNS&Z>sIo=O#F*@+o'Xmt`A+eat,\DC'9p$iNTqEDhLIdXaK/b^Z`>"07:\NI=
%b@L(nqK%H\))I)$0uc?A8<bicedaAJANKU*ce6VMdIKP3;>r[_BE)I=Nh/Thb*YI7%.fuu;5RH[4^g@s3u5g5$"?b$OnZP%[Eg!3
%A]u8,c'WS9Ypc@YC[Y?FF,37&1Pg[Gi:\E3jUf']LDWrGC;J_XC-:T_*d7+e;.4^u9H7BYNPh0?8+"8op>B*805S@J];5?FD]dWe
%Fbos2N3V_G1As>EjOdCsR>J*&M6>NgY)NFt7+Wcs2USpbTPLS9.%/#]8R1"_ZF31ISZ(71eS[n--=La(eg@CT;75RReO#>DgBVoQ
%+!P\D!J3P$")qF5[pMVd[#@J)?s6%K1?pKe+&;gG4oO>]oD@;*YR.O)B#TR^7%V@>7g11CFe<DJe(I&4J98'pGeS6kr1PETH%q/O
%ba=V<;s'9.F@p0-lSP#t!raN&G^U%iiW%O!`U"J]Fe>0EDr71Wm68NJ>#Cp#S'0nA4:LL=e^-L0_R(sT%r4f61*q?oS5J)f9Do/Q
%^?h>&oXkY`HoLIYmX8/:`XUs9_Y>MM_g^'bOfN*O(]UVN8,L'!r;>TQo?SPKIXa67>l0/I#<O[)^jT[o:=hd0JJ#>q?[)<U_Wej.
%:StO[(rNL1TP+beIZInGjneWV$.g#!g,7/h%-CBBmt#Gud=V?`n]"'kn+S[$h2@K?%j/9I@ml\K23U-j8&R!AG1u1>mI]-@s6k#"
%$p"-5UCg9#ha,=Wrnkit48FA[>+u6]9thZ?3@CHfe,+NjK0CWSn)X*="-fD!kIWC%Xi]b<6`-?#^6?n;\bgc8:Yrk$)KUeWhQQt,
%,<6SR0\S#VAn8@KW:j/LlM']1l1o6V&+0#MQOfEZiRJP&Fr`<KmL=M*D1\hUq:XrSc.Nq=m+q2BHL2!PFER*pjRTQX)-7p%QhHCZ
%9GXos[ua<s_sX"JN#BI`^KbTaB4$9N[Jfs_m.fY.o<816EdkU5r;'lLr:Tm)k%pqkC,2>SVR+Bd2OVhl$lgEG:A2"A(R@`P_AffV
%murf6Qb-#\Ml&pY4r)r-&]<:n_P`N^R\9'^Rq\09Ui*ibL%V7H.8/6A?HW[?8@3jn-DSnZ[R\-I/tQ-<4\2'gfd?4oW9m@pq(Q8c
%K!;^<\+FUll^<snY5\5'`78'$d,-Sr?7*S5UYtTOGj,_!M%)+IAmrT8=CK;M1)XCF_olS8R1(a4iFOdW*/*;4oGY?[+iQ'-"sgZg
%*igN(7,^.>$du.N07.V.H>YfZT;Q+68iEr8Pi+PIRi!r9I8;aUAdnR.Cgp)TN."J[n_?mR(a#*Vs*XA/jRS)Na\K27+Yq"cai)+;
%T:RJ"4*-oI1$o3e*)D+ZShJqu"$RRY3+ZLo'/ITqoXE]Z@AiHb;td&c6IY(d[r4HHNmE3%(.[ge8W$!,!<-68nde2:(m+f8g<T\N
%MeBsoOiP)4:)'Jrc_n[c0k2&?g+$+Vmq'9.eEd&2qp4"i>R_M(j,kV_0!ssofDPA"`]p4.E0o7+T$"j_c-.ED5n7O*-4T>R1pg>]
%pu5lo*@#VfTu\s+&7^BR-^6VbSr=N)D^WT#Jc_e*P78iX1RJ^-E<0dVi_p<,gG,9e$L,Zm1"e8kgQ#\i42tS7^st6F@uM;CAB3>,
%9m<mQ*"&U7lkoUl`[<jfAB-Y@3sKG5Q^^jg/sCbX*;$T3(Rq2Cc09H8-Y)/Bq7[dKj-kI\+WW^b1saVZi]1+3`XLj7Pi]7C2jYnY
%8%YjWOj8pYIQBJ0PtN=$rD\CgPBlBYlJqV(/,h8<<+4md)H8I6O`'C=k4<bEZ2K/RgU!Y0H>'5UJWftEQ"VS6O#UM+npCl+3e+_<
%4Mu84cQufD(cq6eir%i(PsX#mC*Za7TIFg+PW.fg7Q!Yup_0M6H7Zt[:KJA$Y"f#KLM7GBV;UaQQMTC"SkSB7*c]._.mrQg\=>\m
%pDPi@I1Q$DSl;lFW50HOYa9"MDg1U:59t=4jA6ZoUs#7GZ9r[\i.*.1p0j>n7g'bOTG9QA)`.2`bM@e=9\S9tbtZpIUs2Wfgn`18
%\2H94+ITUIkFg'__sjm%T0"$@DF>+r"4ZL'N+u8R-?X3(kMl#*lJ/2\ND3sQ$l$9mK@kC5Y'<\kh5J.0P"PHjkNBn#>\qDVek)K\
%%f4t%4'?%RcKou"h.N$T@YB=hjcu5(@nuhST2T'QB0_3L";uP\[bdX.\B:`?rq5+3k31F#B3]QXBleB:q>4MhRFXQ/rdHoJ8hK_-
%$5Z2R5.pW*C?.>aD&KGfnIBRSNCBqdi&\?lGI.$EcHh^tZ$dt"s,Z0<P<o&e%+>#Bhk#[$4oW[LIA[+@7rg9kJ+WPKDiQ`NABh(H
%;iU(O&#8iPT?<SnYHANa_SLA5f]-*J<,Kt-5$r2N*\eM"&%ZsIe`]JUA:;2'GeZ8mN^_+#qFI3bDqr-=,65(Gmurf6UHDAUk#4u1
%/Z.]m)p42^34(i&:EqI06/<n(T9^im$=8d7"9-JRG(aPXCSAM,2"uZ,h/,o54W$3C\P!?\!)MEP8OsHe(8=Y*Q7!X/#i;;h?2aBD
%q:YIB"8'&r6IGc<7?^D%a[A(3jGg8"K,0>^H#EPOb=9f0:AK1XHBYU\+">#3L@OR^T6N=9=Que=CWmW=V2pJQOR;cZ`Xo:[T9*rM
%cjG6X<@8];H"p[VI,\ANH\(m_0:nb?rieE9WG*@s;qtWJ>^lIX*Hb].`#SN6..96=*(,tbSN2]J_nIqI0t=UZb],`GhKut]9+?.*
%N>$6c>MaU\(?F_a_0m&E*f%fYc?q`h0+JU>Sm`,$kB3g"NTj=NOo7N1]L:*:\?m^2m(QEhNuMbM6sbLuT]'LKa>NV8Q/"K*H95`$
%BuNH4o6\fjrW[Rr^*`.0JG8cbk,WF(>AO+1-D$QGoLq3)9fY!&HP*r;%S8E^NKEAt5"ioU=dbjl38[M'-MD`@ha4JkQDes,c4[Ls
%j.LjI?C@=]#ePM\#Id(/]dF-FE(4Xg4IF)t`gkF>$.KVuIBZ`DoD@poqW-WBm2u3`_j?j:@qPHXXHVmbKSc<*r9n.?O&>9lVC(W0
%Z_JTQP)MLN,b(.,AG4g+lu*Q+4Z/[rk>0;;:Dt3>.Lp>&romm5pA+ZSP8*^%kAM`um(JL(lb+DG@JJbX4eCRlR6DtHL\.3*hO;pB
%8]/+)!h;S.+","tOa:ui6]f#q^+maae_.2h%#N+6/:.3Lq:Q;*$Dk"Q-0:'P0.1Dk2_SNcpIX,50Al^,n_O!i3k[GDJ)+F[oeMpm
%04-!2T7;4`ip,W`s)Ea&>[khLn7Q&C8IE>jgm5@M14#.[.Hmr+3\`OZ(n.'UG_=#er;8X*qHra[^S'r&=[)_+p7M@DR2s2OIfAm!
%McWnfb'B;?CfVi?S"%@A5&.>Odi=;9!HgE?_IB+jdR%A>c](LH.a7%3/b>X>KbgnVo/b(3b-/A2cH@aHlXO?eYL:RHO/'QI8Q+G'
%BfMSpBo^/40e[9G;T$kD$:%KgrUT@^U%gdfAP(.3G+P%#!FM2T]IIba&;\J;,c.p$V6ZIi8QK;/c'>OfL[VdN'HV6%q:lZeeu>/K
%24Jac^dIeV(*9!3<aZc/",tZ+]-35fEDknsDd"Q;Eru_!gS&4r[h%j9\1q7IWsXrdW7)eYK5s3M$JMJ:4GFKmTTtrX81VK>XQ\0Y
%LK_s7?"gVH.?>VjPl%/dVZedF4c9@+LCmQ>LKZ:A?"eFIblP2+Jip#Y!"I*Ld%Sfg)oJV_o1UW'n>p&pR%deF+)3\%G(G#-b@?&,
%jaQFmE<2/KhdVDQEJ/JXTiT?S(YTm+'7a+T;U(-,MkFL`%NNWqPqk`r/kj\GH:"m-)^'O!]#?q07HaIuhlk!B/Akp;FSI6hStK:2
%,f:dYFfU'_X3U=k@;%A8s2X"3LTJa^G$!3V0++c$=T]trOWN';g]GaKd3Q;TC*7"H]Yd&l:WeV'F)8d:$5!>BXlJs5(+=UI/bir$
%\P8$NBcg7<6T*0sLU=iH9T<>4$9"q_kup,EPQK0%_K%2l(<[+GZ27espC&i-WbU`=YdN(K&\t=l`p$]^Pu#r;#Q!,UYcOkIT\Q`T
%U<:"d\YZC3P^ib[8W\0+:/J!E`J+I.^/rQ0;eI+95V'r=8b-%hafI/AM#Gd9;gr0WgkF<3FfhUAd*)Neo%s/Ckm\(IK*oU7JqdJ!
%i7!a0fFeq`1qX<UFJcp@h/mh5^p%h,(Lp*E-\@i-!(H^^'9M@QiGMW'//9@Zeq!3o%PR*"X8uG,=f9WjF&UUT$a%QB8V,[MTZ@;b
%Nlk+NJC#.3@1jJV:fu"A=LPQG"dg'p3/Jg[r$^N\#1,"j#s]aC>Z.efTH*%'atW.:.X>0?$:0J?D9tQ&"d0&*Y?"cT+>Qu`MiDk[
%;@<M\&[r"=gdZ<&5W-gWS7`[N1XfJtOldBE3<M1]q4W(se59't8!"+>dD?;_ZZ$T8?93kL_`d](Qbjt9JNUDEVfFN<;d-D6ZbA-Y
%J1hDDl<=^Pe/SFMUVcNt`EQ.Z04X,=MmnBg8YC3:5CfcE]f>m$FH=b7(Zai[8bJo5hASK!X'#o84p0.6g=827EE".]o&Fn7as#28
%0l!e=F*b\P/j[DNgVq;)s5*`-%As(o@ku#]bM])@pu;5L1p1qTk2sEaSK*P[r5Dmi^YZ\P;9uuSCA.7KKZ][\:kMs%e`l>lEqX7V
%fGskdgZIM*X'f54C:-uG1.bh[8k:#)<+#_*@TcE7AVfDL^n?XS/:T:+-f?A9'WRMH-YX]>b8C4`n69&*-%D*>.Z`N!,maXe/cAp6
%<K):p3r#M!%,.F1n<<?Y)iY[%?+`Pon?r%Ao^U,>T:rE84T"5LF*t9Il*asXf7:S#SPU[kF.9$b'bKuo"mEfP0^c7+c`csC/P,4J
%C:bT]00T^H==fg`6[9-c6,W:&FLk_a?Kcm$elZ,6J(0WYg&fq0eR8\FV&1oEU-bl<70o!DJX7<&:]/lHYE"-71[q>oYcYjp*dDf1
%]NPI\Gm)a$==86.l">c&=bJ>/fZ0X:)M95,(*O%l>\h[+\CAX3"b2^/!I"C/oR)%E-2Jc^$.T_2)Z%QH7;=$Ojii^s%/Q1?JCeJR
%'%M)@69dF^=F(7o-gm3W@>#lI\CtV\Y=%SGX8D\R$`bNuEL)kH>5n?agR!eP+DZK1<@a[B!AZ1rTU[>"X=aili7@$I2hm\:83:sZ
%.G3'^1?fIZ;Ui+1h=MKZSbgH%UB.>ZKBtNmN7::N*k%o;4hD69nlk^0S(OscTR(5>ee[5s3\Y5mq%#(QngdsrBT0g9>go.fCu/Oj
%Y>BgEd%^+].mYcmZ0PD-B>.@/Q9g??7+\%qqKnlMRa49o.>I<5np-5\@<$Ddk:FV;#FB4D6'YRm"f*U0+NQDOLFSa(+KciRl'asg
%Mj4G\FXti`lcNg*Oh:/VDSW.f6/LVt&^Vos3X+6,'&9ara9u%#?fdQ(WD%"Q%*HYA,_",.*RNdk/TMHPatdJta8NmnaX[q`16]i)
%l/9fd?@`4[&nl5?K']WN?As:d64Xh;fc@s8]=AiGPJ2DJ"JpcsY^oAjZ"T/XY!2i0Id+`OiV)ctfjDHT^\i(uFFJ3<1F"["0$*bi
%WODWbD_d_F]g':,W;FqDkQ.[Hq#&tAD=^L#(:sDJcR=2,+!/Tppf&MXLb%^AEM^9B),Q>m)A8DW>>X(<olO4`[uL/LoLWehm@""g
%8:nek-i_tnrij(\^HK/=H1'QJB?-q)GfVt#hAb0X!V9A?W89j1:1o)Zn8$ImQAj'1+W2rZIlj-qi]f[X2I@W0b,W+Q1OPN)8IjGi
%Z:Y\WTUkK`bY\[(-&]h?JL(J(1Pe;69TrqKOXD%Bl"/pP7(-DiFqSi+;a@L'&s2\i'Thp%"lq-IO<]lo"QZ9_7M_'bHLVj6Pg!)L
%2QD:tQR45,$HV^-OCo53SATqob4a&^J8@O4b46PS1(5Kg2A2+l5,TnR?h57ZEnDS:7L@.Hp.ClsOJnW%%;khQeeB$bc-rK^-"Lou
%jHHLBVh%OpAOQf,=&Y`:ZWLL6"suI#Z(tpO7>9cHKgRSF9JH&\k/-9q(0h&9#2(l\.#K4767W$TqOuA9*#g>L(l]e#MZs>em'p$(
%KD-72>F0^V!r*7$>E!tKJZl6*i,L[_dF(_Z+@>^<5js7H4bOi>*'I>_2D_"T8-$o@OJCFj(R'Dq1,)M@o-?Fo#3O%Cr'qWlBgP/h
%1Vb%[F@qJ-)49a$B4-a;]SD&@-+'D8)[nEWCs9*8esd0UVkLL6:a[h]CFr6fgNrBEC?lnM3Nif%@uI^(lFlM9(S`(29=67@f#537
%p3Ro%:KHW"b3YtbfA$&5i:]`!Sug/"TKEP'PEgF!1-`44R4Q<p=-%`Tm6=Tg%nQ^6=cdD.i(d1YNJ?C27%po3$7$e-OWSQJ'D!`F
%/n7fgnjSE]!g=9c`Tlc*[2s"e^oIU_i"\s,I9Ao*TYV>bo.&X?-[rkmK[X$>JCk.a4$7\+]>lZ0.Caba*;s8SoJ!6<5^o;`bP)^C
%T9F9j7lj.eP+O,tH'4dIq0A-q-i*S!Q(N=PTNc3"Q_3B'PF1\8VbhghlSM%CK\#Ch-U65^&U0>/GL)StYC.Qn(3q;c#IbH>b*m)>
%D+2_kN-NW;5AbD@V`g'9//$)N6pB3.Kti,+,fiQ/S0Z0IK)B+(aNP\rS3dh]G`j0k7tTf0&4IYc2A=*j`h+aZKYh4>(>s*/6oN)J
%FJMe_LlZ7Te%/>!$M/\bHalsXcI4%/$R)>h.H$UNJL'&Oi=<4[K_#e_,i_Hg+.bo29p-VTaQ/@:aTq6f3C0C*;m;_CASFX&o&.J=
%*mEPqDh\1N&MnDM)W5iN&D(k1gaB`#,Z=)b8:>c/IYMP_0UH0SW4na+D%0<L(7/#J.8b]W<-,ucJIG'agu2G&AR&=V8WFK!eak7b
%8L/>9R=t!Lcbn)Q+]AqRD-_)mj.ub\QC"#p<Rs_o<IE7mTk6a`7BW[W@gOMNER2PKD'',:ORA"FloHeYFf[J'JnD1o$-Y2e%<CY?
%oOsh#;_(ck\K=q2$m-lNkRhfV+PpEkEH1$p8@e<&kf*qcp>LqA4<2-pn'Z#Q(%T5-)=@/HZbf\;-5bJ3JVlbqquSa1Z:p1hk)>Ij
%'M1+cQmn\N'r/T8`JgOc1dV[.9$1Fn9EsXQNXAYQ;F/MC!cHLVAct'8PT6a*PQeR*qm`>6d4gna=_2Ui@=IKB#WEb>\kWB^^:Q[P
%f<#Xo49Ae4=?3B!#PV95[ig3$>kEmV.,P8Fngl8LH<UR5U/YN/F$^qB[F8:+ZCDcYVQbL]!j=959$JUpP:m@-9aguNp>30YN>u^N
%IQu/$c$s[n)d+j@W?bII8FV3SKHqh)I5T#pK<^8MHD]lCo@r0/8?+/o(h`*)m^`4_k>&o\V<-q-3]bE\S*Ng',o/0h+]ab!r/gN_
%/)jiO62r0%/>1O/dTlf\Och5$&I>9EY)/n=@GnY/:q)HE'?SWqj8b=?:Q.%B4AkGH+>@1k\7fpa#X)_801/\QF/j:(E5sU8@9X[X
%RiNkq8!.:l98+/$#TO;m<ftCIc76&S@nBprmm+\'*YZ8<*P+aq4ESMF_BDI6QI@g6)_euL2;6l#48U5"ATKmF&HQs2aPjF4nAa2&
%-,:S0>/iQ^!#8V)L.[,-A^594&M*<9%[_cdasd!I@L,tL#P>n=+Ens4#[sHcNMEj#kpS"QRY,1hB>A>TTu[(_-<FQDrtZ$#n<@2Z
%+DQ*`&PL<h8MpbU;$BM)%HDnG3`IS@<l(MQo&mu[$E/pqKr6!"QKjh@3+GWD1h);5N]lKS3B7e(M(T1XOf-PR-+Zl>DX*>,KFh?p
%+OrDO&u[sV`GRJ>D?;h+2V$/eISl:GW"ntpp@gP-+di=N;iu\g8XhunZ/T^k%[`_n!!;h-_f[+iT2^Md&jo536\%p?79XMd76grP
%qee2tIZ#sh2V$/eISl:GW*OqA9/T4*H!hGk;I5"gN'MZn8]##IZZ]HP-4Qee$_L`H6'sI_I8PM4AJJg%JOmoJfPhUjOC<%($s$J8
%0L'OZY]Oc1g"1a`e39D4p!#j)^LtV9_:5I*9J\aDOAHN1@MtHL<3%!T=0:Zk$`l^=Ca,.a^4hmuTO9ADkN.N#j/?hUPlhf@'[o"h
%!5Sj=`GO\G\`U=Z<hYPZ-N\/E?poOY1OT]3l#b9`'cFdF)Ft-/9PW%KeTY=SF/X]6D,O%;c&T)";5F-YgYqnJ`ap77V+BFpn"K]P
%0llgAY>:"+"SpLk$*p(ldq"RD-/<JA>BYiRTWc->eYWVr+pf,8@JuY`bZfUH]I_VD5-/kO@*\4sND8sj\_pZiU$Db6(t/L"VOHg%
%EfgMi??T^U^qpKlSoW1aK%A-i$(uQUjUj%90L=ou&Z3R)XT`WJ\LF:FAJ:/OA)Vb\(jt$"b-F,JMr]BRkgf,?*B.>_FD<MG8p%SZ
%2bA+S.VB4u%N0e)#<Tgd90lti-cQN^&V:9H<]3_f-4g=tb@<55jZ*DD:$>]Fnm0L9'$e8?3mBI8$B.86k@&60"d#3dY,b]A&NCu4
%NH0:6Df=^Nc%S42>=B,#Cjl`LCWJIV",\YViE%;JWD.LahjKClj=k)`=Z?ah&c2>^c!iM;RJC^h?0?dlG%Dd\eQcaoShVci8.fp"
%q=fKe.OX.7NQ,U.B[C@Y`joYOk214,V.BK_fCI7db[S]k/3l8c&%X%G^N,jXdJUC:^t5q?($"\S)1S8KETh)'8t.104:unj_duL!
%+ZEG_%r_Z'>G9,@6(lAlH(jeq#ZU5Dq][*SP_IQ81C@%RNNagZU,g2hS5NIDJFkl&3faF(%Pfa5iu!C*p0b,"M:#8[AsIBD!JPVu
%RX;cF6WEg.%[cuS^'Z)X'c#Hn'*Zt@I'<I,5o?.WQ7=ghAf1GFi0tD5RV7f$&2:2W?^K]WrB.+DeI#"]$Y=RZB.lNdkkkoemK&r'
%"sDr``3U5um7LlS<XDgH=$"oXU^/[O%A&^5gj-9-"eT^+\q-BR4:t7`9[VJ<rf1;u7Su_[[LDD9%pu+FVG?ai4PD-D7N]cniX:9b
%Ga6/LP*,"T^<=YI'q/aDrl^,aXB2D1V3MekdIZ#_5dqi^D\AmVNId[t?P_4oB36Y=P*?9a#b4aQaWrijC.o5T;1\jG6?$BY!aQqf
%,Vja`I,m<0:.EDN:0`;_]Z\sTLQ+/3049;m)'aDl8/r[)dU)fL;[s0S+FYoMn!$K6j'rFfk@apWQVGJn-4q=!!!^J'>>jgNF9Et5
%KuK8:!3\1!_\Bp#Qepkd9!^BQMB\`f;H<)cC:dGrrp]dc(d^gY"b@@dG[iEl,s<LRlH&t]RcsKfe2H(;M<r@=`NtHZ9+Mo%3n=Z?
%,=@_,0W?<F]\tY6g;sc/0(H%RT='>:[QO#:,kZX5(0-[Lr`fu$<ej&<fjO.M8cp&.G*9Y`(p!cYN&V(,2ZJ%jZW>c66Tc!MRDM)t
%j(B%e$GgEU,XtmmqeK;NY(qOpr*UYt2)@ucY7-`AIgTLdr]qO^dkp'Qh!QPFEXW298Ve!'8pn(7:&*8M33342CjGCm"[u9ke:Ad5
%VYn#gmt-4%7)C^<kHH$'(Q&25A6ot#C!+/`mm4O*1XqaY]H7X@O<N;@T+`W[5UGh3[iR':?c/W0>m(QN`WM_<V]N.cjaghXdr=*b
%^F,:S#h.lbE;94XcRq*A1Z6`6_S7.Yb1PhU)SaG9CM46#4+aLUc'E:<TUmmnXbdnD&Mc!):]h'Y"Ji&<'It!=N[&u^$@ZM5$VAQM
%OILf%=Qdof_227GW5p4X:lu0[8cU@lgt!*=(Yp$FSG<J'Jm_4OJ<BDtdG$p(ET"EDZ8a'c]pSTb0cS_HEWhZTit(Grcu"7>99j4r
%E<=]o`42'0qBO``FRm6u2M$<b7;.GfR#YR"LQ^/so2*TYb6)ap6:ZJ:3I"G^[.0n/ag\8ZQT*pGZ6>26@PClG^$*?K5J]rJ$1G)*
%P_gd*`g_O2X:!)W`<__*5%a,I:.&O5;$bsJ3-KJL(9)f2a$!4T3)Uo3Q/^7ceieJYFlFLRP;,#9@/CcH,[?kQW0`8Ak@LJ__+*?A
%`$XEZ\-TO+DVM7B+q;OjY2C)n#`N>?Ag@`df%nN3pkG+LrWu&u?/416,*lQp8aVP!M8riWMG5?2@KHtYes-b7#@=nFSYFX1R\I&;
%:kcV_imA71`gG9C0uXM;-kk\D/WnuT?OiIo^4m[G:?JbmIQ/9fg]^/gmmU!mQQZ7Sk"GK3/j-eN+_MN$Sf"#N4$/q?),jsR7qr'Z
%%k+80,7+SZr5G8:?'k?YQ4AYL)rC`<Idn<k]i(/3S/?_:1uE'Y<gZ,^SkV-/28?-t'X[eCr_IiL$B2j:oYXRrrR6V%`#nPP0A&&"
%-f3<f@F?6R\R6TM8@X+]g`(0/QLCD=Ka9BA5j%3,XI[fl_2Ip!Q3:=q,0CFtHr:VYjQ4G15Y+`.S+Fn7b]5_1l>Oe;bDgE3<![me
%No@d(d#sG-Es#+R`-1ZNhh^VOlJ.d<14sCUO@06XWr8oYgfNoA_^#@,?;+%I7^e@UUV`k(BVLbDG4&$HN`u:0V1355>DP2tql!4$
%PPirV,koi]0o5W7Op"c.GdSI@K;T26k4V2tSuiYQr@:O-Vh=pUNW_eMEomL`pa2\ci>C\S-`Jj^$?2Q?`N_sX\EG[",gtB-(EMAA
%"Wl`TU2rkQ!$geR&+nmBQR7?;KqhnS..h1NISW$";=8Y+h8?mGm;a`K4\f4!CVH;gV/Bj)LM63'mV#7&Eo/'Ii577N.Y2Sp8ebli
%#D3B&Kk-1OLrmCDVta+`H?+%?*iUWd<__bEbAKkp3Nk[4Y!a>-e*]pE:ceKJKKns<)P;>8M"VNicn[AgJ1@MIX9VZTR]g4b$&$AQ
%!qAiWoV<I$H8qq@aE_[+;ll.#"$O6Q!];=(.^\_g34#2sYem>aGaMsCcYP=GCS!=@:`.K=O"a^tde:IV;d:h7(5\SEgK*N6\8)t?
%rYK2UUi^ng9EuW!.?a1G8Fq\?U82i%;6Ar\1)LCV>^j4F)ReR-J95r^_B,bO1mc(<7dGVaVcYWJ"d!tn(4ZFb231]A-e"CqPXD(!
%6m[a^V;GQp3rr@+i>pg9LdNP]P.8Op0L'ppT$9.ED-0]Eki2C<_ehlpdSc)N?ceI6TGXc*A6enibp:*hKV&d66]ZKYP8"SeI]m='
%Q41H3]1f#T*qR1PIIQ`BY.8ERqhBR1[DLoV%8ot^iFR:s?!mh74"!,,("T\OqZZ3YU@LA<eujcuI(mJC>&7ZnXERDaQ$uAk1-&ah
%L`l3I@Ujug]JTG%$U?Y+Q9TV8E"#lOc8s%X`DXUj"VAQk4>;#HDSi)eIVGM1Bm?"D2i;j7,Sq/8+lU7%qRL4=2.O&fEM&EL54KGG
%k$oIFM\l\*aP[sm\6X&J#X3?hb:uIHh748ui&XsG5Z8k"Z#.?I7%r'<jsJIGZGFG"[;J=7Qt%RC;4)oiKh/;7D8'kqXB_qB3;=Bg
%KCO%Wo&f"OpPYY]=Kf0P/`Q"_2Kk32MNOHi_ZcronL>d*7:/rZ(JVqiZ1;&d":R8d'=U;<4<TS2(7shM#E5uK>lehnJ_Z,L[ht:G
%>JPqQG[T/>2rT/ECh^Ft-h-U][KV`i^m4&!n\9bQqSC0YWSdbWm$3-"iVb#47G6YZQJfn4I(C5)4OAcd_.7NoiIE*LCSWPj"b?[p
%a2M@@TUS3&]R$dlep-Bm>W/.QUc8Ac%*&lr[e[pOZ+3WM&F_K!"*umMAs6fRs5G@Ul-d*]CeTlN/QIhCC)OYD1)3^5F5VlCg2m0D
%MRZ]Db8t/d$)cS^%(d`^X2Z'U(h'^[h.ApD6FOQ.S<'DV?6tt7liZCIi.)sXl0"OOS6p7!FrUlS7Ekg4g=RnopPYZH'Rh_n_(V1u
%+"Ig<KCRt"h[H#o1>3om#.\L^.GfsAoGmXb;GT*A'-L]PVK&:aV,YB);WtOhFAm-AGW97M.%-=jh9t8>]8@6`&:i`$dGG\\20LLn
%HC]Y@T;,Q)S1qru(B1.d0fRg&m8*ON:.U!p"2`&6:'O4WEeaqYmF0m<=%%u8Vc^NFV/sEp<@G8LcoB#AGDRblRfWI-*0*0%/I987
%l_.B:pU(Et?p',CD#'#$So;>_=BVfY8M'cR`mMT(:Aqes$i%TDr6oVq;BBLS:Qo]rd#I%iA/72g/`Ang<(8B>_?NOTEi,1`>Z)K[
%Ps'EAq2NRp+]hAmS?e:pkV&;)GroX?JC9.aSXn]cCs25p=EC#nSsR3j*/.]r@W7?'`'"911.F;siPS/Hn^W"PO22PnF^t:1Cb1P%
%g/nOo#WSN9V>rM<Jd2"+NGBI\d_B`Q&e8QJk-r/;PupIF]?qh*Ko!32CrD$*=>E\.Lt9OZmR$MF,nO$TChch_#%;OM8gWUtj/R^(
%#ikq-&BmoZ%WmSh/S]nCHbu%4;4&/4q"^D8*nJ3+DD814s-rRN&r,ffGJoEE"+Jlk-WD=g6pDQIH%D1:C:\PELNsfmRoEtL:FPoA
%5K"/bq3b_t/q3p19$hsZS1L`Y2!%BQ0Mn8Cbg!3[c^>CRA#d(K1jhH!NP7ioFq76*J%U*M2soXTZ^f03EkEYmLq4fPP=_-AWnf6t
%Ehu*?AY]L]/`7'37=HD:]fA1`&MB[V`"PVm!#Y>'FNsPRQf8l(3U8Kp=X3uHf#&]Jq,K-s1q(&!FNG%+CFh43;dCW^1sboL(L?<c
%ni&R?B!jp/Nn[[[k:shB-jXl.>##]C2FsH3KQ8E+Z3#@*d^*B_Vk+bCa8SJc71'&)V<eg+'=;N2:l6hp-=(:6Dba2L9R&CSD8c1k
%,V8Cm;PIW&/cD"U41&W#j03A5'H*VIO9k1W?R=[].@X_jV'1*pD,o7#P0r*LWUs=\,'$ndQ#aj3%!X`Kr)@o23l,SEQu4h8!N79[
%<<?^R\KT\<Vl,'71%T'U)(]>XmGhoUPF)BK_rA,`&n#9_lF3u67OKg?P@AOJlF5!m"_P,'8>3]_3T%!Vqor1@GgZKYg"F-GYd-]+
%KaBN;$kDEs7,]Nrr(Lm2OUn5_F:?JUPLuFTHU\gkk=8uF)tKXtOTnt+),6RbUbOEsPV11rTh@W*CF&,L<#TD`"@c<LGDFMu;kGI1
%q=#)^iS6=pKD"u9i6T90g@/=`er*OU"WZ'4bhqsXd)>24:pQ'eXOA>L&.:E&B7eP0!=.]`0*!JgH\oNdEB0t.><4PQfJ,-6:hqbk
%bZgtjg!K#L/f6XS'0dVA1`ek7;T9+o?"-5r+9S5DC`#8Q6"s^-^L5AY5!%2d8W4EqQ%S<OM,>!f^r5R0asG+JI^C#p>;4e,\`aab
%e,[AoRcml4`=$cEa1mpb.tFg;_fV.l9?cflITNJ-&A'C2'',9qVi4;F8"29Il2g9\i&I;*O:lfS&@*9XMdd0abW07[^upAZd"u.)
%lT%TYWsG>Nr>G1jS+lKW/"X\4E'fOLJSMJp_Q/hl\>lQFVQdP+,l)4tq,/sZdocE@"PuHO79C.nY]",?C8oT#73\BnPK3e#c;'$N
%GbQr8g2al'9NVpt_$1R2fP\S0Aa)rA'deW:G6$a2*;QUli(saBNk/.,)hRr(^>t3:_Jis9]>e%NE"0TOOuUS,FYO^]h6TFu#?Nu/
%F$P.sWfBFY>_'.28'/Bs^$uH.dV8%V6G](J'3k#*mTlR.&^XYYB$pS/6%PQB?<+erMb6e[.q-i4W.C_NA.L1+AC=l1)ad[fZuG9c
%QuG[.k?&c4YC2KQ"_%\naok2S]2C$X-9p([A@U3e8R1dW18-s,7J&X@6)fLI'QX`-?67(A%=S@*.*d:a[rahaEb-2ohGJFP3Q(h&
%T193f1D]"N0.s])?pnj\_TSS/]U=7Lfu.(K(Vs-W0$@ff-=uR=U;R9>_8gV';QQt7Jk=1>`AH92bDs)dE=j4b';'[b;t,SqP\B#k
%K8\BlBM:&7),(r_;dTOBAZ6X/ZKEsBjBn^u)\b&M#F-!P$CUJ#nKakBY4Kf5\Yd00N;9=l+*0F[#n?.I83$T(M8.$.;f,fMHFAa8
%.q2J78QOgY`<7H+kX&!7hD&@D_BLm%,reKkm[aIF.J>L'Z$lBJ6Rg"dZ+rl30o1mgP-@S%@APe_GmVm3#^F3j&oePY9duO6)ADe;
%2i6A,*Xb*Aje*e5/#+OklilhZEj]0akZFbj\rSSN)-u*UY<bgT`=4^R88KCj4BCt!-?,p4P/8=Kp+an'/;I'3K/Q&A"<0&^9+2t5
%52dO'fU(inB?#>qBit1'I^j2H3<VaAJo1KcXJBdhaM4en,5(<girMHA8`m5pC]/B$1g0T=-db,+ROj4_\gYEN5U-(RS)"4q8kTD5
%pN<]R8*&B%!WXaP#RdlIL*k.h4"22&+p5FYI1`?B8S@,20p6V;Lt-2C>)Ab<`/YSZ0d#W,&gCDrh\?7PfVY\g#sabFraGr*rm4pc
%UGub;JVN9eia<\Bgq=4$g/.IhfAECVOt`kbo\Lk9]rrHqr`$P?$U8#079ZpDY;GK=.V"6R)14jlk)iR>=Q6.`b_>5t7gX'oU9G8$
%#\Ze]S!>ZM`+na>WgN7\@o3^"]J[@mK?ehD<5S(f[*M&-@aH4gQsg-6G@pUV7PI36nfELMa?,f.FFK$C=c55K.'A6ESGoYKd[5DJ
%.2LcURr@S^>/Y.<TI["ar]CgMMAXK,rsZg/)gCtY.ZpUHPS,J08?pg'P9`o:KH\<0g55).H==T\Z[`?*]]HpV@b(]OC>R+[<k>1h
%AE6aOG/[=oA$XO4+%m+7L_*3fETAlf%+]6QrG=T>6-eDf7*+srS@W2a+%kkc:ljHhTU:mb=*bN]EJ*^pYigkZ"mlY)R-a=n\=:9M
%04Gf$#,WrGdYM1R4uWOgj"@g'I96#1d$0JUUErY^j7+**/B4p,9150"L**X`;N99UnKKIud#7/M<Iko;3$],11N7l[&Jo/5joM&`
%:dbTlA6=9lgfeYY93@WY@[%'AM6:GMf%u7cb7=bpM1a\.HXSiam#Xu(7DQ3rnhp?"&N',MYlZ#AS6[7k;\X<pVX]ttHioRgM=CeR
%/7C(c!FhVtP"p$_,*Hp)_hRI31F?IkC6d8I7"eV8Hi^&XF0pGp;1n>kbJ1&rb$@r6QGRRr<Efsm7%rUS#04AKmC&O'RH&/0fU[AG
%h!ZD=-M=?1gl-mu?WQd3j["@Ri'r!:_EjQ:T:eUdUN5H1h!a4M/'fp$/@Rn%hm?D0O:.BG3*]1)ad37;a8kDO/'MT1NGLU5VQn=3
%Sn]kn]>o7)FHJKd_+iN[Ej[t<84&lc\Z'3flKC)GYUIsUSTA053Uh$gN9'&fZ"!Ib3-b+c#>]_`cG+H7\G=*g<-)4]H$X2\POH)o
%omCt-r6A?-h:_Xq/qoH5:Uph.G%*R43urr`r_Y)q"-i$9oa(!fZ<WDgATL,W*89YeI+r2;dgY@d&C-J%SBdOM_&oR7P:717^u1ip
%g#a49QCIP.M$#)^$Z9+\I_>X=@3*;Z6E;nUJZP*.DO$OP5$rsE'`M4!R=)$N);jf3KZYE>;]r>Z%_h>h^]T$X`ctQ=_Qt`cCim`F
%8mNlOHiYkkmm&ZYGLRR#WCI\";=)Mp84g8kR\,Q?+;jC;BMsAu&ElIUW?kfcT@<D[e/+4''06W@gpWSgIS;B*FoaA,r>g20(83)F
%K_LtGHpJ??pl:\Mo.%T"`84^W'E:$o@f7c*I>[(Z3jI?f*?5C2hc])`<FMD6#?@Z!_.1>>&f%%2:RuOnJu*;`[(Gf]3`\g=',ks#
%rYP1B#cp$Fnh5<?Fgp0H[#V'9Zi-F&pJKJO.,e>qi&B<,?QtVSB&ph@4tM:\ZK=CUZ3S!3@"G./5<OIV:6qmfS?&"rnVL:SO03+n
%hunO<+S(@G/e\Z\dTH<<"SBbeFb$<n_W;eFCE6akLq-lU'X<O$GmWu&]]V\^&Y,NVAVtK*F&]JGB&Zkq*^q.Vb\`rVn-*>6mOjmc
%!H]#`$.fL&6S*u&dVQ#nE87#MiJ2,s^]*I[r'Q^"T)AMn!S6oIHg^q),J-^!9\jplbE)!PoPhY'o3Zr_pM#(TpRhKV,8>(tcDba1
%\1`(_H)Iiqb3ekGmk@@@aUa;=IY\:l9R3B36CWHlRPBW%1.Ud24Djlp:qq<X[g,'C.Dm5SLUlJ!LKrm_XH/5t/6$ro?7E-Vn;)Pn
%HDLpM"ahO!#api^_SNoMit5ELN8](S"I.V'HQ0T()6D%"9,gj'j>.$%&;h4[q9[+rAASGB6n7M3.Yb,]@_uRIA?=e-Tk%10pMQ(X
%/kpj''H9g=Tgbn"XQK-Kl0`Dn/_6Y<0;N'^++J4Jj\TF;2ccjf0kSCk^D#ieOSG-,iTG3b.[]cePeI27erd>5BG]eu`U4L>)KE\&
%b@h2h#Lp]ilKI;('^tj0In)jC5<AJW8h=cgbTs:MfNfp1:XC0f=FZu7!O%qNkp10sh?4J.hZEnQkBnSPI"`ao+N1+FFEf>D,Q'In
%AluooI.<>lPR\2-rhrCUm4M$/TF5K]4H>,n5(!X*n,WN-Sl2`8b/?JjQogTCH"+=mGjajS:uSa(mKN](#&'@Q-C#"=?bl5+'NfAb
%0/R_ALT?);KYY):4Wq-0>m$#iLZ3,(*..Z%cX_F`)/r2ZeHD>[M/Y$,DM4Z:dDf6t-$ZFQgkJ-W2Kq#RC%c(g3EZsUpO&,fC)>7A
%p,m7f+QY*se"?Zk`&C[#V-5sc`@(O6<X):gci?po`Phbu[dL(S\G-)[r*s@15N1P'jT?rGbWk\0<.inE:M[;K\a>FX?.&c8?5jcR
%aQBQriqu>Yjdd#Xi-$(QMkj1P#l"M?[J-9^A8ecM#m(!6a#8(*KF8G:N_#C]k<#1.fG_6^IU/Ko:859"KIs8>r8n_rDH#CmQZS;6
%h66LdYl(f+Hb5bYiD4gl.U35]=m6)OAe_$^OkTSN:aeD8lRi\pQl?k2DIn?.)1>l<$g!aK1G`.64s8^l8lciTbJF(p+rmko>GF0j
%`.@`m$!deO9+P.:.u:,`V:'fNU?l<t:RFQmF4Gc#qW7G^YP*_m0O4_.,`5=<:=^$!n6F:e?U9d1S"BsV?R9iYT/^2;EYlH2$cVC8
%G\:>V+9j]tQ0ADq;gJ[$SNo:aK?7eIUC)@Z4^#-Z.'AaGSjncp;aGLm^eN85Z_Q8#DEUaI;Z=bGkOO:HXYDQPWhb/\c%g.eXT[N1
%/$u\J=J,"uiV^c%^tdgD%<ELnc#h=A4MaI0=/$p`C-tPpVgaCGRCM?WY#X-MQquhJ6t9s5X_IeJ+ViMf"#rCKZITcU<pj5=L(_*(
%9Z('IQ6(KNfO=iLQ5M#/jFoTRQr=oJe!Du/Rl6s2.kZHQPL6\QXK=b`Xq5j#8K6F@[HE_/j39/V!)FuR`s]d;P;G3=5,<.Y2WeUI
%pbEEthnpG`XCU-Hg:&_^[2s-4bAWcA8>^TQ@7Vqk4"aJug),aI4Ya\NJf0k/T'G:j.Ol_29H0P/K#u!I",<%<o.[G4*iYP+C#WG,
%8-E8W5p$d#qqjJOFl$QsOO3ji"K>/tb9&6.2hRjK!f9OOromSc]Q[0j*]MF!V:5F[=J`[RO!]=q-l7'uh_phpRMXM_q[P-uV(;<W
%gb`716DpEc).Z&s>)?"J/!Q%./'K59>fbWEMK.o3)utf*8Rl(jFfk.WS+"o-mKVf[..>pQVr<*:L^>pn+[5$+bAd/&;KT$Q]k<=m
%nsCLN<&c)^f9=<\6$8KnM-$c5`fA*&;a3%_3?3O]HENCMT<+VA''>C.jYV.*G<WGAiON[V.]R'O^$UUK:rJ.%e>mpPJfNY:Hc5B>
%YSN>?DcO5+Y-*j>-]Ykic7;[``IZJE)Mu+\UEuDBr"]-9kgf_$#'MhdTAF`$jB'.1nj+_>r`d02m8B(,eZEt;P,pt:b^.bI/0)m6
%>GOl2q;$qa%1gZq)10J!`3-iIe;pEaTZPj`ATJ;[rJ#meE(c0<S6^RT4C.=#7W>RfL_g<e<R@^Oq=ZdQF)`g.%S9,""cB9j"Kc3(
%7#pn=7X@sf-GJdId*9Ij2T"-nT-ALY`:@mVgG=Lnb_Zr066Cob0:%S)1Yk\m_*cO?clbc>#c`>g6RBaji9X4>o5mS.^grm/OK'.u
%Lb_8tr[G0n;WS6rGpVZtVFU\#8@P;ST<T"_3'i'?@.)pcPje):KGg.=(Hq6_LY4b(N1XT7_9\,qoDEFSmqqOOAUtPf;Bh,jP<4Vu
%UmL2Qcf/6`MqG4lT)KR68!L<-!HUn[\8dJD0-?oLpCQNr->>Te^nJV93S!+#C*Hfb"L=JkUepEF6?.Y='ae$m.4CFN/L(Y:k0+tg
%34"]q<.k+r'UReMDrktino1F&o?tVn7Wel$]hgG7L]kBu[65#NTdUgU(Y*$4'V45i8'/\U7nI;A]BA&GHCNKZM%1i]E^6.Lch!i`
%n'oCUrQHpSD.'YqlKhn.#TfsJG-JhuWL0iH\&'O\[qK[aMUqP:gr/6eP/-UaT?!<4C6ESspfg7lIb3eJB82i,"\L94=Ma[iIEf</
%md?ci]j-7E-#B+M/i^LJ$bM*TS->2rU,dMX-dkr-=9#mC$Ss"PSt5D&8$2@jE4n_iJR`B(eFWN+Jtj9*MRU7.?+uC?maSc0V6Fot
%]\k"WK?-R.^3QMof5&r.F:V]:#Ks!tWr>#:s&"C`ANM5NS%k3,Wq#gZ:\qbq6)QYnfdna:3#T$t^\m[F:X80B$3+k?HOg'>h>[O)
%!E5>f+-`dXoAO]REO47ZC(Ep4#7'Y4Xip]GikO'5h/3H7l0Pq/E_Z:9PtNE+3ZF>W:Od5uc]_(SiNSC@#C>M;;jq_KNG`fZkm*)0
%G`L2'@U&81aqscG0.,Gb[0Sqk#nZ=L*piQ>U$la&f4tnE)^5GEO5?,PQ,0-n0*eIRf(0H-/A"U[67?a9GEU"m-E.B7Kp7ck'`Cdf
%?Glf(,5sh'boJ:[?Kl[Z+JVXP?fM)Z$'^5f>PrAKX7=.Zpn(o>mXN!pi/Dql)'3"K[(!6f5@W[^jZ'Q=;&@&k;iGef3t6)JEGj`b
%hi.0!bp(Vi"&=or"&F$<jGamlZ\--?s,RjpM.fll/*.:JKMuD[(G\F"?+?n4*7"k$8NGghA1H(]&V^Qsb"HON`P35;;Z<0#eMmEh
%5F*A`qZ#j.DeQ34nkGIB^iWHP03,fVq6_6s/CiOD@AD9T1t-*Fj(>2ji[,(G+*ku9_/?9t@AfCfLA-QBTN(4fJ@r\Q&B0\G*d50Y
%PQo\\PhZ3BQ*eJcJ0o+t_1f-XQM*A7/l-oXF\9cA<G;J.mW5gZQ:pjE#qR,7W]:nn2cEbi4)23!^2_-(UI"pU4o6Hq^N?(X>iSIY
%Z,@+-p6<97%d73qV0`$CZs81t0BDtuJWB8CebZt3o?QQo--cE+=*k5pB<FIh0u"R6f7.Z3SfSlue-V+!#:lLGMfCM!NR_nc#kS?;
%\O8T.a(fXqaL[bL%/=H5hsJuT:58d>>tbhFK0f+<dUn!Uq+naa!^:qF@*sdUJ*V:i*e/7hh]2D9*6?97Dp[h[n](I%U'Z<!XZ'J)
%j_![l\us.t0s@/Tp_imGSUnX--h;$9[/Xq=jenYH!:s9Ep0ec%rYpH`ETii%_<K#6m6Rf/)\p,]^MS1@mBIf=R&Jj?<,Wifg?rma
%$PT%]1"G`OGN8sXc%D&dh.X5^0@QOkf1YT1[+7J-\A!kCD!!r!T@.f-_+f[s/+Y1BS:Zo9n">0aq+l>e:,WJ>R?)pu-RJCP[+S(k
%>qgNNebNE#s"0Q:P[ZYJdn.)T+8!lO]>r0KrkC'$b4uP0Q--s8XJ=0]B@HA@1qQ*tk^ToldS3#o(e<1TX38@UH[3$V4_KQ]f'[a/
%]M!L_caW232-^+4A_C"Dq+'gM[JamQqgZFBe\AS7qGS"!o^HhP*ar%.GS3`]5@2RNKc]AF;B5%VDWd6YLVP^$_bkuk^@Xm-hnVX0
%OS!*5;q=ftohQcXX$NT+F81\"hWgfop%\%!O%Z-+"SV:9:<!qrJ#YJrZ&HG7N1\/_IjB)_1V$jlMMqq*8U=ZJ-qk#bZZLT@k+YIY
%5KGf8)B7l>q9NuUa3ESbG:J\D)e:.eG](\O\3nRqd2ft0EVupNra\E(MWiUpV1VK+kk@69rdR*'ao9B=rq,*ZmO&s*5LnTfI[uaF
%]"c]=0D+b9/pV4lBO-:dZIJZRE`j^n9AUr!63B6bhbJV7@Dh#q#7Z"+*1RRR&TaF)oXI-\Nt64#k+4FlcB6F1qmARpNFU,FC44Ch
%(Z4]Ps"/`TK70s5.YH;,b]:%2FPMTMq\)IZru7,:Fpc@p?XM1L@NM0>+OB?1Y$X)YmXKKl)h+uTcNu(,[Z723C'5=/FAm`Ce%j"h
%hN9%s^gcsH/;+R[2g66-%:;!uSZJJY\1inlHJXBJ!FbBg-i[4cT)kJnTD".J;?WrM*jQqQTgi0Nii=2hR#8kp,.uXO+TN[MPurWE
%`#9^NHsO9RaJ!-42B:aDEOkKh?osVHWHX)0h<&YRCN2W]F48MNQ90X-qQp4s11V+]s"?f)Z"h)SE3o[<YA=oLp.LOfd\Sp42&XV8
%a1$i"V<:tM!dPFY0(_)H=S%$X)dO.hq6M'h^ZG>Lq(D];ni^pEs"2.gaD`pNlhWtZpg;D,r2r#CVe.K^2YG<"Q/5u.70liOHC5'X
%1jJC&?_-fW&&_&6K`%N7eF-*ql$q"^ps[^.e@c[-EjG*\7iMDG34J>VhE:7e530E1h9P7f2tLW7N#+YWkPU$b02t;;="Ja3A-YNV
%W3??G/77idjRUGH:Jfq_G2&chS!UCd5QAA4hW8O*I^hf`Gl8`&>k&@)r5VQJ)O;.F*Hstis6";KUC:?9Sq#<EQ8HEME7mYbC@utL
%>'f$h#QmIaYl#^n&)XM[g_$!iBm2:W`I@nX[u&S\CSC"4T\]$iQ<IC<ecGX`;QDV`CCMB8IVWQ_6/ifajAWK6'uk0@P]+ko-<tn3
%W(%bS#cNPYQqjg_j5pqmIPZA':FV-bb:o_-&Xl<Bq+X@hA,64AePc<?ptD'dcap[=<KX<0`i;X(e^[c7LlC8-H:9n10g/MErC_XP
%4cS]%fH3jjJ@cf?UkeI7h"Qa2VDhOe!^/&tgIa#;8XE>+#V8C]n]E>F!P@2#]j]-K/TqH)NE*2Oo3Kf7U7p1]UW?:)cSX#RVpBu4
%H9Q<%&O1DpZP<2Ie>eDsI7ceZ7,oOfYk,d?'l!(LA"iZf"*C$l+/KUmWmIZ`C!u$JX#eN%"?!=:XM>KC@b4a,l05fZiVt.n,/f5]
%,be-J*`]ZC8HMOpjJeB<):/nV%Fu+:/7N<U$JLO5-tm,[e^Jo,3YGP4'76Ooi9!NZ@?T4s';tM*FFL9gU,^")V`783FbrmUEN*@0
%b=92O</Nh18Ing2O[M]'P-O8_e?glcJ0&QtEKsB-\]_j)oTEq&$<Ebh1p%9l_sBWp\@uWs0lDcg[K@:5bbJ-rFTrG/QDd<BaCsGp
%R-V\bc]3BPkV#:#l&97+n=o&Z!*S'0pHnX\%EikP-14@D@?j1?qF^5X*A![!,r@P3q+WRo,YZCF$P<Is3B;^#/[Wb*?##3tJXkOP
%KNLMC;+P.5ObGR6@-=\fR&Lqc-=t27M:ILQUnroj&8^Gf7OGp9@N\A]VBZdM-V6)SVa<g'"E[>$L_Q3S`B3ro7"I=Z'1=;o"n^Pc
%Hi<jNF</gs@m<,>p99/^l]!*RC.Xs'>TmP*o7Z*u4\lV^TO8@/PbVTc/P?.63,VBWMBu<OLIGhW'rK$W`q)TON!gSXo?4R#::6se
%!"&]4fGU>6ifsn!><"::]H#ER.-0(+HD)qMN86a"@?7cVYlBP<7$It?j9@+JP'pVjmB]Z_(OYU`@hk?%k/7YAB["PV;[SFP;1aj:
%i"MYV4CkDO=U+C?4YG23YJMlV-@egI@a?Hj%Ul&)YI&%A<$@.-7>ac=8h;uR9MVc/j'JT;X*s;J`h8Wk\6>co;PN?-3$X29&Ebc&
%-?Q;UY[Kgc/;E$L`_He3U*W9$b-jX3rknk^aMBb^9bhRm@#N5/5X)LsaM!f@ISb2o"/pgW"*oF>%Q?DiokW7"KDo=GrPE.le/bLY
%R/.1Gd-Zm)l0\=AE5KQD7d!T?<W$hl<:(_'2/K's5n]:rr<?n+,KfprU%AR`i6.9KqjEsS6=V<j,UAMV`)iW3Lo/TGNG+Lq.Uj/Y
%\-D.F;_J>X?'*&uACe)LMR`iH0#`:&35Tm0Bg!jH1W?3'c?=N3TX[O2jb0I&ktU1Dh_:#q)h;*C&<4'"#oem3:hr'X'4\Y0Ue<%"
%c;]?H;tN(lcY*Nc@#GJuUF@op"Vp>_(+XuLBMK-SN8tDfZ*c,F/LWEm>\XH4XTADKPY+/MiL)<-M=!>N*%MZOT%0A"fk;G697-Wc
%q>o^^P@]3"lT+?rXNRlQ`fi=UC!XV4)4"TPNd>OlLi>rce%R9Tq,K6GW&)$D<Ys%tVpd^Vd=%GNV-W3;Eeb@AlXNQXq*&-6aa_V9
%H^F'a6g8FHPOEI\=Q-!mbc*=rR:2(0,_<cj8d4`A3#dJBUVJgG-@bNJ(l:U(e`A=_PK#/2pft]:cOsGtE.*PXZN'Mc*L[Z\AWP-T
%\^AQ_6IAod4Cprr8WpoCBmRqJCA\=gY9ddJ)rB^F--0:G/[Rd702[]N9DutgC94]>k5QrFD>Y3H==.fKs2QD!;2h;3s$L>)e,Ol;
%j$3=Q,tUXJM;[9MH_jTX[(s<\Ma(#WR^Fc8*nG$J;c%,.GdJAjBAiWK/=$"E!]_VN&i;Zhek^,[#N)Ll*D)QNc/]82(.0klBU`0$
%5qD+.-fP(fYs^<L!%>#/hol*n@SQ8'q!!\"%h*<&h`>4=jr'0Y&8ZoRr#d8%RJ54HG[`=(C0&pb#OK<!s5JN\lUQ\%N*?bkB(Yjm
%a)k($WaKtmS?]!fm9j\3[;\lpf?;_qI`\,b11:9B<4'nQ;"NkQPM`=:34>ZoO2(;"?jXePQ(JEQ-,*`:ka,Zo\5$L<&'Ll`'ur+m
%7&`)^ZNS"o6r_U?Z51;Zis[s!VN.qhm^5U6N4ai4Dl9&C_Eu3,gT!)HGD;kZ=>3B5*5<<]ccJ7us."@3HWDcDA6b1.nt!09MA8jj
%X8`]"hs?u0MHneMGL*eEaRH!"Zh@0ZU=T;Yk"_q@T>cLrk?Yl7Bb?R]:GmdSqu>pr!8HnY@Z)%8KjUlg#5kM^3%+bGrIK_e*Fsld
%Z,LAZ8q%a&F-(c\qQ[o>A$>fh(Xd>+R=Sd:)te[Gr3Y9!eXIe0f5A\4gmb\"*iXS95A4EnkN1./^JDI)BX$,/N<YsPo22Ib[D_.t
%#Bo^&7`i&R*I#("K=69%b+H0?5N=u'X=2f>NSa0RYKan&3Hp^VDu4;`GL&.d57B2YLkd4hKNcL,]_fHsWa<HlSd.pEId<eX0Gg1*
%e%:*e"n$S\#;BR@cQ[pPG2&c>[$iujRW&0]M;lR<,%`'25#cX.N8Rs21!`Vpf*UEjKu1N1k8+NYp<Q%o\B`\$E7@,N'8XE\Psk'M
%Rs:lh3Y_@.IS0P`p]`);B:I6I(+Tn+s7Ib4n%XAu+(BfSs-^Qe$&*SOVV9#D52V\+8VHf3^h<GXo=oBQ^Wj0hhu4ne;DH1OV7^nQ
%s6:S#?LHoJF"RD+bJP^5n0,lr<d3>BQWl(LSo=Jg=J*o)]5V?YI;kcRd6iCEk^[#%f,?#$qU=(2,V40:kCZgIMQ*7u%\j)Ih4J-t
%VsR@Q!3E;p0U_Qg-ZesrKhUX'\QiqLr8$E,60J0QoXm?RGL'PA>3MpU:l&#*aaio'IR^m$UGbU)Fp;fr99AcCEXsInV6f;%1`CO4
%cb'!S[6=Mo8TQT>ml(IVV,k@s$E?g/E#!77Si%#g`eQUOOp"5+n>nhmLGc[acUQJAr4uO6lsRPV*6_rTiN)OR<&l&n9@'*F;1%4O
%[@t[Za4:)S4GIUqhQP2_DV!$FXn7>5/W%o)[Zan71:aosbdY9mha)Sj:UHI;qb%s^mcLGWS[Kt$i7F6")9%%H[ti"4mBh^16CC!P
%8[%#4l(=#/7t^g:R9,&=U&1bNUGHS'aT.YO-<mRq25;XTB2.<leo*7!c2j$dJ*'5o&Z$l#M=#\#;*YAkaPbZnBs7L(;/-!%1MZ?%
%\t)]C,9[Qq:3,'3ZZgNJ4DL4+qI]h_!J/d=]7#4`j(1t*'`Ybr5J-]O'QVM!3SZ%<kk=b?h<413oBn<eL,aqh-Nd174?IK@H:lps
%d;"7YU=*H](dJSe:9RqA!AZbfAr&#q*=tprrn>@aM^=`cZe(Z>g;C;cLNKM+GY.3W^GYssgOh9j:LEfaX4oY0QY*ksIfn(=!H.f_
%3XNm`Bb,r2D7[-5%p=:s/R&2K.$M1tg<uQ,)D?oV*0m:h9KoF<Cn,^]SlT/a(GHHrldT4CP*(mak"/pWBN4?,]:7%WFMHXM27k9l
%LX]_C#ngFZ-FO-il\2eC^[IlnNC/K9/`ee@a6#7AiL\X?^a\S2];;F3p.^i<F?amNZ!/?,kb;[9)-Q)+j!Ner>rGo:`Fp^,iKh4M
%pWF[7;!s>Q1Z""DC3Da)AXbp3&0DCuPI!nC*1h8tp48!>RW</T!H@R:f^@3],kK:.9>f_bPP$O!'4)0#'!q,;qYLeML](,2:5\=j
%p3l4LATgSIT<WL;e)Rp2LRlgLnNiXK6b]]`^4'DHlc\Z?l=#uQPa?@=R+:$@9,;BpU1ha9?Z*U:n"_de#>QG'CWM*2jfbn%0"up&
%?]joIpe"4fFp9-;)c(+Lr+`duXQ@`;IUXD*n689u\,U'1nRlncm<eX-ltfM\;"P0^_F=cX2"($)Wllm1%*%&a!rtnDb3=U3$bl7"
%]mU0e4=KUs<iQZqmgO).B3>);=0V$=HZ+m>jPj3o8PDJa[3D+-;E7XFemqS45rnZ>r:DuY%a+ad;0hlR>pFirOXnd@hM_e"LYaY#
%q!5$G;ld6BlaIb]_Mqa4iCoJ&UJ[qY=nbjOoB>hB4:KiUAi/43HfD>#X[2u'`k2h/U[g^[\3!V.%F=ddg=3LGL?3<uige.g_t&6]
%)0ON#LZMk>Li,i2DUn%H7W_*^X&2rkY%`nC7EelOiGfMFCu.RNg'g^%E$7:j>P$,=I9)rDNi+a$j)rB.Tgf!_e\A3)E#&YV`PM@t
%Z@2)W96_A6#!g4SY;K6<:oe33(S(LCbq9aPXjaos=a3g#/XKeOpH_#qrH;"`^TdV#l-B01V-i<fX+Ci,#5uG7i%-m:'JNJ>S_bne
%7\R<K)4`\5B:88'V[>\^="N*ZJWSh:9nT^XccO3`j[jrPHF8%O%%u]*&6pV;7Gd.UAn7>FHFlER_^rFEZT0;>CH+u,P,N-E"+^\5
%8VL^oO\0L9B=*Ap)I[=d5<)\1R)[q6(=YKN:h'iSqIJ"#mso,"=h?uflKG(M)T*Bgc,"?78i+lP5<K(:HT7J/or((e[CEa:TP,HQ
%esrMu5!j=!qpX]cA2lL=3Eg&OT;-CTk&W@4b^?GM.P14>fEV)<SG?<XbaS3@E7jX(jET*aV^P)jQ]MKOWV1"!"d)EH-MRfZP)8Pr
%BhaZN&n7fF=GDe^h=Be>3UUsV(+HQf<7T1G`q^UliJbTE`cE-!Fo'idiL.+?EueM`-!`\clB\95SV)*8l#D1pABdQc&gI[!nj2hA
%d$,,tUTX>>8A'^4VtZ+o?+ZU^T$d8u!;0j22ubGSAd_gZb-Ep@3F*8JX3`j1M0QQn$8"&oT']U!lT@hdp9(oRJZ!/U8pr2(FLek;
%hJT>bE6oYLNd>tJ5L%%NZ'p)bOuK^CC7."aAi=H8fdrO0bc1@J/dge*/E!(K:"U-.2i#EE-VIt:c^MQ*.t!Bchs$\RLEd?ek?2?h
%I2#stqRPb+f&1N:FUU8@HRC+5ONq@tZ7/Mu.bNKN^%$qPH8Pp*e&l(jYQ!IUHC9BT?i&6.$@$Fbc-^_+\+X4TaOdfeZ;UdadTdug
%r+D)f]mf8aVVfC`G>;aseEP5D'c?,.`R>D3QDGiWo&0W9H0;Cf1OA<#h-oXI@B\3E7qK3Zmrj<74jU>LoBqTC2j^_6^9"$U<?m2T
%1$5S+/f8T"n)l_V\a73OLEBIndVh4n\WAd/#0l%?RD%TTS%Q7p(Q9=tbp_j#b3@&ts48]>_rB;>*ICO?Dl/RY/bFAJViF"p=RlVM
%L&"MCbr6'%j20KJV@P>tot4X-9KA^?22[G46cX7>T';142R0lbfcnnijB2P&g-0r&fZu3l5q`(U0A&]$mrIkVP]G<Dk-dTh/U@Zq
%j^I;e?GHRr2YHL`>a!ai9):+uNJ5&U:d:f=TNqUl]B$'>'!-FJGFJPSh!UG^c!Ra%B!6lg^.$rT[A.[m22CrspC_P\&Mb<JV&)Ma
%)#bQHGD2',l^sNh5eNA4qqA!6?kf+8GC"proK#/7Y*;<Kh%C,93p=EN9;=[oe7t=2FH4m&Fdr<bDjXVR4?EYmcWiXrD]Rkk+84u1
%'5!g*aDO*_$LfB8rPNG<SRLcqGCl*laqni;68\>i)Ka7WESGm,]`H>1mq#eW')DbOd5hWW9^5cT$3fc;/0L9qo1atVlm5o"ZnQ8U
%];'!,!3b2&1TB0`04uO+!bdXrlb.[NIl=;t]T1t91=T'cLR0ITWV5)C\o-e7ZU@@e1`Ub`00AQNbqh*0`TF,4GC4kNheRDH1W*Mt
%X,pUCis[,9"U=oeKuBS+43n&u76s8tHuI@lIG>g4]ZQk?buuku^(X9=B5[h>FCd/T/M2)CI*R"jXGJqqeLttBh'ooq1H"Ugq*&Q,
%IW+iuR;IuKJ6Eh[c,JbbU1,dBD`5X;7/GG#n9'JX7U[1)cs@kIq,5NkVdS(Y(Y+seS:];uej"DVn.#82[@l,!*VS=OYO0B'8NX_f
%Q*IEOKhP?a7i2R$PI;<g-VS@LpIe<X:\fY@V/"%4^m3a0_hX)OK+iVtKd3eA&"_X&GA$$flHSGQlapBd`m_olg0it5ptem:b#[QF
%h1_?+::!'qAmT;VS#c;7?>SDH*'^sBrVks>[D@.32V.!MjLU0-X&1^TJ#OOGNNTB8Ik9J`>If)=>T5ki9/+TDo(J?"Dm_I&*c4*q
%?<`9@]=#rLrDpU:^3MOif(Qp!(sphQfC.D%)l*7r&(UIBin_akIsVGl)]dhHDm#ZjlLD8`eM#aJY@*ao@C3F,[C9p04gZl7]mF,>
%X-I$u4DMUd]anm/-]JXPpP.eY48$5;cPm62#DXuAiN)JdFC5"9_^esYY'"+/400KaC<-%M-t)--NI"66IpH9(E:Xfg"HsnX4s#.=
%_bW5*efPqq]M`$/^0I`*/mdr8,[ND?c=*+4bJKh$H:pJ,W#`pNQ<,QfeVuZ@-[.f4=f^A+dAXJ!Dr6&TFnL!ieS:]6:RsT5LYKj3
%["t$:G0menq-N7Eej6]jrP?at_4C>`Q0mBH?Z?+Ues<e*'b"T<?[c+XoNF1Ln#S]Z?F$Kt=$+tc%1cHMd!@,.SD4dOb>s%,p_#8n
%Dmo$`'cl)qe<ZQ-al;jU_W'Bp[;0t]Gn"]#YHQItY$?C_IQ,eZn[&5aS[j((f(pKWXLpZ?G>IX6rBU><mp1\ph)DgHijQKUYKX<o
%U?[4#jH`qj"T%[s3t`X<5-?Or=)Kjtgj(us@1<.o,P=At@$kX-Q\R<oEp%m]`Vm17CAeaRYMELabe;+Wnf^j!lfcXmqs/H;rP?m]
%lfcmab4<B8-Qd%]_i1;(VcE,>JQC='0SL%j'Z@lRF)9Be$)Xn*l^nI=@$<^/c!0e9<S=F&\Pk^tHLu?nft;U4CA)!s>M6*-\mO,P
%DN-,-f344cHVu!n<:#B!=5fp,\*L4^5<'0U@cAt9lc53j\"m4LD#-kQe#sk]Xre3IU#5"7485p2^Z&P9Sme#Z:ZB[CCA`CYYr3F=
%^PM>AIeA57.FF];JK;COpJ/,gIN6C?ETqbuHW9Ot@TP8-nt">&Kgra+WmR-H#QJU.*U`.*g$c*rmu;dqltqa--a>\?RlT!qh1%St
%K!7D&Bj]&SauHEHT;V(r_Mtm+[:Ah+mJ;:=EkC0L%.6UPS^lgU'?3R.a7`!ae!;,F>?UmZ5aHgtY!;hnRna=[XsUbf:ENT.I]P_N
%e./sN83GTjB[dMehiK+SZ4@o)Y$$1<F`'\'X)G&.HWO:h-3;$"4PETs)^j7l0\3QF'K.F%]_AEj3T'@M/bnSuB]JHGrA;3o*'Y=Y
%an!>Xs01&lFps5Q`HOE7f%#PFft*L(pMQK&:HuUJ7/$E$lIO]A5O-XCOD,($H@>\a`otmfBk@&1<dgq\s0Boj*8]I-Q+b6:UU?G8
%&"AROjOn;ck2,,[1=ld!KD)>-H)'ooes0b>H1X+#D`,-IP+!nFh`TPifT0*gQ0A4Xc.];g0>4tuft%"<*D[9d1^la73o=>Mqfq5j
%e^!L'hVO7(3Gg%9rU]]O]q'@UDbfc&^O3`Z(!Q%aotuZ%k7g5W/!>EuY^Tj7)Vk<Sq>&hWk#M5>XWQs?9RZ6XleRQd)d@=3Ge^-F
%YC05Z8*>k(leN_'qS?6Ho(3C<d"C+\EAdJ?c[R*/@j*_=eedcr`qAWW)[er>h7:!O=MJ=;IlKuMQIj^GT@u@*K1sjppn',:[<<X#
%CB[fBld->0ihk\X=tP+n5OHffiUbF!&cSaen=Sn=:Ydt7.1am008r?%EZNO]ouTD'l"=A)f)9]8:,V=U%9!]d]cX,ZlXARQ/I\sA
%"\Y,=7U72(32BuL[0ME3f<E(@_H+!,.\ZB95if6Q&f@H@68+VZC@\toCObO)N3Spm_do7A&b&d.YknH$7?$`IZ<sY@_2Y]k\7*7/
%NicoRD4tnDVab[UgoiiaFRlr32RX"Zb33DgEd=#[n\mJk(,1nUp$P7n/[B#kOX'(HQ26R:VpNK:F;eYbID7`kosa)W-GrAaEbcP@
%[4oesBKF<jlLD42^`,t:N>r7D^N6/s:8/o5hfm!)KTF"<k<@Vm?[`57&ntG<,Z"lD57KjEL5""HT<Nb7i-9LlMK#s$nEJY7FT$Jr
%p\ak@7K(U=1OloBhO^mBU,`M1dFQ`cs14&qf"]d4o&$UZC:.!EaK$\]M`Wu_I>ATMO%32k'+DBTcZ5>ohU_Ln]FN/pH\(<eZ`0k7
%;0a[,okdIg"o!h[&NL-\/`$XorcY-BV!.*tbF8kfD!D8]m152fIOiHnZ-.'p)\p&poV0(1d(<J,oObR6phTK7)*H[/?!CI=^XTa\
%>h'"U&0+NR]>fe6E#nP[WU:kYgUGeD$Z"!i+EtV.g&"t+H$JY'I30HZ.35XR9\)$/_fJ2+9+QBqX))p=cH=K$4F#QWlHS+[q'0K(
%=e3jd`SPdS-@&c6XhR$/IO%.]4K,StJ`c[KkESO84"YXp-5c3&:happeeO\Clcn;+.l;KH)X@Hp`Ee\M8G$ggp@rAAcsk5d?oF!+
%*n1o5j*KH<e],c.qf8oRb-N+mH+bltb/,k+`J=/^qVed>mS[]\?.CY?/mQM*hTbaCkAhtXI6gZ_;9"O[-SAY$oH<Rl/UqXh*'PiR
%U6WF$o%(40/)Co_UT/dMGj>B/aYWUt?[;;/oeg-P4%)I%\=22:bk=&;1BHC+;5q#,T0IN]67@8i\sW"RHI@7A,@U3=i(i>(Vu(2A
%])Cc%b#HcJ3I9;e[F8D.2U8#tpU9/B_H=R@]92n-cAc"J"';4@lN^#IA$gC,gm"FtDsuUkUO*6Dh$?EHfHMIsMneuPg@D!t^OXXO
%HmOjS?E1mKaOA<"`k`Ia[+0_4HZ:?C7_*k_l.tXA\SQm#G2n\a&87XtBlS?jQ52X$ECY:7HEd=8L?ZCQ7>GUETo1[r^U[ZrH</k'
%`oklCgjLmcbkn(B6M0*S9"Oq61&PJ+40SBC>J#*k*GoZmZ4%!lhc\gNGALu,N2KAfrFZX8C5k`-PW9eHO`+$uerJWp\Td69`huUd
%cHD9K-]d_$]5rJb0Or(K\-X7X-Z\lPp'2E]"A*.;IHB.GC:@I`[Eb%]2aP5[T@K]Pa-H>Kak%K=,O(O\g1Yjr>eesj4F7A)IcD=C
%6'4!h)bsGKhPu0o[%As6If@'54f^nkE0>)g_DhFfVXubo)fK1#`h4&"iT.B#kTA*f`qc#^(E\D=d/^FKHdj))EbD`U1='r5eP>N,
%>n&dM4T7Irmq=(Yj#d"mI(8S<-Be,<Sq8@M]!D&&6*'DIo&b3DffqPJMp7T4OVmf=SUXR&/76e`dabJ90REM3@jNP)om9ofrA';[
%qrUHQA*r+*>^[^;@XqQu^;!h(X$,:@Q_,?NY2+GFd`GHj7XZ80]s7D227h*%f'i;ST3'I;md7)+(H+YtJ)P*[O+Jg!(I*Q3g4'-o
%[q)A^?.3O1W+8tXY!76^?`nf@WQ&=UR&BV4XZOi/[O7Sni5WN94$%71K%[U%9<u0Wp3(k6.69eZ@t3`[kMDDtjj*`%hMn^-o>Y`[
%D=>KPh8Z@n2kDrlm8QOljPHLmrM/[+Y_VHr(bsj"rml5"CS0EK$(Y3^XIm_Z_V/BP4g-u[>sGDChJ8aCNI"AG=.V6d^"F9S;'c^h
%+1CX>5'h6G5<)C+AjaHC(D`+\)O28FJ=Td$_V]5P0-.MdIeJ2sF+8m,gpdFPH15h@CK2p<A5ZL\(U'(Jpu4V%,QVS)s5%2GdA%(R
%@?ZK/ldE)/B[Y_MhY;0o9Y'b4lhu.q_$s\"o^L"@\o[gC@r8``rP_9ESZnNXV-<&KCW>o)]lf]1p$D*+J[cqbV;ntMLG,[;c"D=.
%d<1.iZgklg>,pf2%hFT\X5!TK;f/[eCrdEXB?RK]k6tn1Om,2\CUf"2#H#.RIH1:(8oN`YZa$eZ(:(*5SbC@V?MRt\4apc&!^#!U
%=.\l_IEe8CDJi*Tf5BKKf_<Rs[<o*kG3g`Ug6K?DItI0c55AC4[g_!;Q/:ZjYDnf:CR??7ql<2sI^-RF4mCSm"]BX8E&s8OX1uFq
%g.,qUIgr0*eS!M2B!HQ(0:5nCWj;Bi_9(ERrNdl:(JBfif(X+J$_+d3]l7bCb-;R)'4Q%SC84i*E!61lI_p>5IHRl*lsk9aXhVBT
%$-]`'4O+uaXu.1IjEl/RIuhLKXQq6ameb&X`e/qnZr]??URh80kHipn0;Huk^@PF,0dr"D_t?+#c!fILLOU)c5#jhM]t?6AAJ7ED
%=FKi;4Pe\:q]WF\'ZoWdldTJ/%\`Z7'#0^fdCW0PnA]'!d=^O^FI]\mrj[#3KkQRr:np/VnT4RsUK1*-UCHr#%)0kl^%qK[6@N!?
%CZkAcX7+qrDmI_nDjaf[Q0A4uknjdZ[pR3WII$E]f-"0S(P/sND'776S90h/[qpAu?9^H'R;\&"l?rQ@^9t!%qT#N2+6nW.]lM[W
%StnIk#8HgI]e+GW#*)(u/\QW9]mWX+:]%9#oSNRS"l%IP%S#[Y?H&efO,?X,KrlTpkr@=$fYQ+%MAk<R=.].-f@Ta-5HR[$#$StR
%ku5q\dBiMsX0lK.fqRH]\*!)LgJ'A?DSD^>0[)20a#@rNCA"\ZLXAQ.kdT_N0CIm"Mg2q0*uo/W(*7=g3S/!Mb<"o!_ouS?&@[/D
%Y'!be,]mFW5P/-lEY9;J#.%dK=F^)WXeMY,\)(Hep^7FuSS)l5J?`(%S6(>WjV08#=4`t?i=7a&<d+5`%f&diY-tCA[H:p5HM+DN
%J+'A^r;6jnbGfOGr9dEnDt!P'geO(,j?L<PJtD5oF*&g]?Ili,2a35(*bGUUiBT0I2`(q>lhf#tq;rQVrR^=f"gYUa!iV![JJ<E[
%deMIEP-47,<\Cffbl+jM'V2J8LKA+,)S;J?TANG[#X#UOZeZ\nUVOZ3DZd)bE]19PJSauNkpuEF$+^]WoWd90AILQ4<`Cc\-gU$[
%9)n\Nm5t&tDpoiX:mck!<PGlPnEe_qlEd%h-VL#2pJs'$SXMB!FdEN(Ei-H\?QZCOP)\E+:X^+!$X8NBCZ<=t0K[4q%h1u[]=:;A
%elan@`pL4@E1]!H@=S1%o&4k@i""1fE:2Vd0BKnRCuJE)bZBqpJig[#BWN5VFb/!7%NKB1e!Cq<h-3!H).\nsr+s4Q+)p$pY9`K-
%b2^Y4h)-l:Nc+Ru_r-C*c1TZ`0:s`9@elAef"s!p[Po]Uh-R]3T,\i<QS1P89^IDc-Bc>$:*+:kD?<+R=DUs.?Pu[L5k0M5h<HGV
%<nse?2uVktI3,BB0V@rLcX4Se]su8V.!MBj9o*0IJZeZm#7%@oDQ61kmE46DT3kX2MdgVbc)7no77lWq=HHlU\$F(qi>UR5%<;eo
%DFW/0-bX:TbbP$cleSs81i_]\h>=k!Y]BL9IE1.CH@'qNp$C7E+f%\(2O>?To*QOSIX),%n'/gtFo20]b`1>eEG)]Mo]Cr%7:SXP
%7^mjj=ckg2Y<@W4*aAdlXQRfn@[Fl'Y<LGXD121O&i,Z0Y1(\:)S4-0jk(Du4kQB?0K=;X5i8>O-+Wnl[=4odS!db\BSL*L&(^23
%H$09pdE4`\kn:^:KDMcJT$<BU^Q@M\ZbN$E](bu[HA<lK="_=<fH?gXna)V8eslBFjlWWCQho/,Qg9Y(j>kQ.LK#u4d&K3V[+Q]@
%'DU^D"Cl!hW?7Y6]r^iVLF0J7C:nW<]_!+Om<Z'^X_5X7pPmc8?l8P"^GJ.1YIqb<e&Jc1\!-a_iGFt#R1&rT8`1JRIZGF,2m,*T
%4@QDVBc\>(1")X/<tdX#ag;!7Qmsb2[.nf]j[&RPEGP&_,<+l6!AN@[aJ80_1(_OdRu*p/9GDU:[9'Q'"r,k9458*<?Ngq>-@*@?
%lgUjX?IuW#m`OX-kiK_M`Y%uS[5TKp+2.Mic[jDd^497c]c5F6OZX^kXZrhg?X*PT,*(7ZkDbu(7dnglqM1gV;4-06l=HfX^,Z?]
%HXVJ,"*0ELc_]6?9ACJD%c#Sfol`\S'Mf_*/2s"V*bW#]N>ihkB6Ph,Y8ka^6hOR4YJ%Oa[BJqul799s!j)%=@H7'`].o,tfBB?=
%XkZ)'XcI?^>XaqX+WeZ%f8]XjmBt+.4uf)\$QhQ>;uc=c5JqoU@^]R5W`J\e*Lli`P7u2]M8GtScZlFph-TO'hrKd)giLVJO*k3Q
%B0u)chEQ'WXjGTSIUFr2#+/+Xpn3hH#=C@8\+fpuNs09('":Kf4\?]q$qA\Q1r"9;0AS-ulVGlr0bSndk4#9QfgJ'`ZTIf<o]q#*
%o,m/ps7>R+AW[6e&*QE<jbNJ]:pG@_2Xt^Q-N4IL,eWX<%Bi[-BfX%#2&Cs(pm>Jp!js[*<K?Q[<J"D%oMe3_?_NAu-jKT;$&n79
%<>n''iMT7-'cMW=?`l5>G"Gh+r1u:+I8\W/\u.2kI/T-j:!4_TALTA/e>M5J1c[,9N6f(5pX8W!!;%A%EX]HC!'ZnX!*qKSU(NOo
%DA&<+R7dH0[60?ahs48g:u3n%MKlG<XRY,P</,#S2hd>"S@/@lO$d.Q1lZccHp9HmN(a[F`sG*HP6.:D(,hNV'_j4_9K3W%&W0ZY
%Yc/9pm79<Tg/On26((Pfdl1`V_^9PLE[<Ri$&<$.38Q7fEKMq<&W(P0\@[Q@OUr'hfchciZ;(+G4r)Du#TsCT*M=oWb0&_F9jE_K
%:#QfM8/#Hk.FY?B!"gqQC`jf&b1ON5[),DT^9=mpZ2Z'UI/uXm/'*S?ZiduLKHOjYEbl$%!/tlDO>:2o@Kllg-2;=\2M0K`o-XT3
%nSM]o&=kQZB8/(snIYITA!53g6odgV-lE9uLl@+&JtuhG!hYdCDKj*^`lOZtVB%Qe)"![qRGa<;oSb3gR)Mt/#a)K*8]8O+GDV+M
%@?GXLF2V;`e:9R2/-`onKW&CA?0Ida*Bqu%&!3b"E";qXam>,IUM6/>.C6Q:-Sg)4#"0SW#4'dSPEKW@Tbh$.)G&A_")n9]VtPdo
%"6-V[1Vfqe1jQo*KnRNOQd?,F(0Bmk,KWtLN^C`C0Wgt:iOPL70F^:l7"`1QfZC0R@=5\LThg6c%8RDL"-:]=S+^6+dM(r8[Wn>L
%)dm.:0UW':jP@.>i/Ns]HubW4?9UQia<W0Z;6YHCa9,ofSA8SpMUNR*!^p5G5"!X%(ttH5'*ML1SdCQ%qB]_UL.XQ]'A::/P"[KQ
%C9qJ%4Qk_9PA[LB_S^-.MU"1_1"R@lr6Fg\NJB=--gD[&2;D9KGk`t4]4W*jfZ6uI@ODZP1PR[*[6X11k'(ou;!<VM=DCLtG(Vtt
%:M0L5!5nE8\JHZl#[Pk>'@M/(KMP5:g,+]f`RTVSS5b`:qNR7];=UA+"b([l5i=H?(-?T%%HsV.R8F+YoZ-#JIu$?8>(l*A3(ZiN
%R#p/%iL#jBJNfq>-M591;K7SkW-u)lkS@PDBaBQC1P::_#k?n:nb@Z,35(4!`[_%\@\l;_6#0CXh@l06/\SYD@t>.IibQdf]hJh*
%V"oFKIcMBg&mr9[O#8.N+e)*MOgMu(!]lXPpa.Q_G8eE5?p]YKHDq(8F=_,^6Ia6O!-([>O;'RfV!P0WPHl_Aa/%4\,b#Km:'qa^
%,79/sjY<`B-M.j"V_O1=9u*!Y5?MkqlHjst('A;I=dU(gJ7fGo.S3m$F<Oe@H-'db=nL.<>iQ@8,TtBA>Y\%OdRf;=@X(R)D_oag
%S'XgWV#kKFJgRInk,8j&[ep8T'M8-%FuE*4nR5NBFX^#+5Fd`:#f_u_/`N!Pa!hmINfIR]\tFHcRRsf(79Qq@)oJbAG:Wa:mKQ"K
%;F%1E$/-7\#guD]Ya70L18Ac!=UDJ)gW9,fSQ,c5nU)=]J=e[J=LaBZF=]Po/\amCE5IEAbAth^ABWD@Lj%jD@Mp>p\?o_/UPN;J
%e<<uFQ6iW[.bZJIBCID+_m#!T3e"d[aPMb[^hAVo\XkR<=[f*-i*HHJkR%kqOqr:$@<I1.egsKWm>4*)-t1c"![&'oZBbcpMU6gC
%d']s*a0[UcG>WQ[CA2]]JB`\?WIR,<chlE.*qU#K,QX\kJW-<)dD-0]=@+.:SYha(fuVO62o0g."FTPY2!?3j4kmrk]XUBqFGAY\
%2MmA,rEtoQ8!(-:-]g.Bs,240L8<9I;MB?\%L?5[<=;&3l`$7W:,Md7m$,=6^NmH^5kI?^mh9V]3#F+GmMu=a]/S*ZHLjH`n%o:.
%-(SMS_.CWsHHS;ZoTg9:_tb8nR,Aq:A2j]_Ic[/;-IK(=>^a)=f]M0?JIDNN$AHD,lV.pSOV]g;;JJOc9p'W5%*C?@\bQNL]h'GE
%H(MR_;74V?#SG?/K!>tuV-)21,go,!<5Qd>$3#\6.JtZ;mWU>WVF^t?meJg_BP6@$da1rS)oM^NVSlWq`_@5"BN2dIS]F3T!_=6"
%=Fd>DloDM=J.^bqF'5rqQ7??\#l=^/Kd<HF1[5Ym#V66Z,XTMV<i;)=Vm?Oql*N;$`q1`C5@,CiHhRV6dL"&[A`+C-9JX]m0-U%3
%+>"CH!f3a+Dh/(,6TO5\2g.*C7W(dpk'/':%%=.nBMqr,$FEC8a)8K+0`Vs^O"rlk,Eh=IGpZ'^nF&MgV.=n?&Aq>cJ(R]d^WZ"-
%-ic2S:Em:k*TR91AjW/L9:9$qi5H[E@JK(qrK@u<V[F]dfjcd(PUa@DVparhLRm;Lj7_]HIo)(GVko)OV:Vn1DZ""MJ!,%O)9ANc
%JE3.B6o\Lb<>9Tm+>1/20GgTSQsp2liQnBq;B12i_SAZZR"A3#iD-[5$ihdt>pr3u8oQ$:AL_Xc6:U2-^UrCJIQqEPJ!3akP[)L'
%E$hNLbQV[).;tJBk=;14kP-oHqie['m`LAuj-9`=j;3Ot%L&b=]JQI%OfVKDbK3u`6VO(i@649aR#[2-%UdkZq/2hb),`U;h.UR5
%qV<:n'6:m>MSL%+EuQ5Gi]AOf,Cb1&Ic-S'\5I!Z]3%ee@QG@n@(0(=CIs9h?sT)>a&Ff+Um?Q*IJgmVb.B4?O3Va*Pa3:q:7]EA
%-]2@K#(m<EGK-VD0&D]rjh_c734G-(+TlmVM>YX9pAop?>#H<H-)AI&Z%&l\ONl4a%ntAiPQY]+>I&sW`7`B:]HEdrd$#TP_4q\?
%''-Tf_JMHA1,]1?_a[T6HIdj>U-o9A.W>XV;s.HhLusbkfP8<]4,oKB&3+$OBH3Zf)^I9DrLGnWNuUG.D;;U?Whd[QXGes,/1_"M
%2_PL@T&J$^')e.*%IZmj:rZ*_:a_RB2/eI>:\[!g)=Fg:\CVTM?pAm]-]Rbi++1r@86^`(7]F35Pos-_]SImG@fml4,*#@D4H<;D
%Ou8S>^`JUQ67?`BifU"X6!@eA.*sV-+GP_hes0^lb^>?oHI3/`L=*1(6u.e,,ga;q4A%hk7)gfK8nDs0oT5&m)&kt1!0Kk6</=$#
%6>&t*Z,E='PTlhg-QEOG"JS_U(7R<K0a;DL`AsS[C:1C3'3GHg#X5".]dVG'+\=(?;\2Y'E<LuW<#YKSg"J"?5g[nX@k52X7<8]r
%j:!*&NS#+)%MK\55T2R0/Za.`-"m_rBd;Y8Zs>#/V3VL<PLT;@(#r"#/K,j%GaPQu08\2`G_1!TdBSQadKO/MMBBi'C;PaCV19)m
%p1"jc@ig*9%i+sb"AEf(#Y?lHO.HE9]>e5\_>jpKnpo:ZeB5%j$.@\F`!Zrob0*.UUaFlJLMm?#-\R,j-n$NTQ9'iZI#P1j"d,H,
%!<U,I9SBn_AtUHC)[*8tC!%)`!3bf1"tV3I('[f&#:a3M_W+gt'[DZ*grNe;Zkk-`/T!@ZXdHs<Q;?@6Q,[q(&qa(o8?;q-%Bs<)
%\hIoO!Y!%jjMH*i7fQmO<a$:pf$Z$\lZf(63J,XB_dQ!@s)I<9F$'ciaRBu)Nb_;4,TB5fc/kn5i13?L/Wq_#,>g5)3/5<o8W8Ve
%*Wj7e_C<Jp;,^sIeF<]g=fM+$7;A?%-Yfu-c>isW$3<VY'LDUc-,Ks-bD_HB!)FL56A>NI%mI'ce1.#G5SdddCf+)Bm"/FaFA*)#
%7E:jN1-cK#<AEhM@Y)9e2$kDpRfqs!Ou6!=.EkTgg;;;M7P]4B;Xn'qj>p`b!lAj7+Wd[fKV0hjr$#qeJoXt>iMdGJE"WR4',dL=
%L8bW]QTaR3JCB,a"e\cEXVt"OA$\-,:A.5;f\p6r>M:@0N,]pdg:Cn7D.s\Ba!p<gX[DO\&u7rnLIBe)fITb1Cf;[<;>CJ?=9h,0
%c\dW3nP$FP*)QEnE0FC$&/LfdL;[cfcqH0[l-]W`Rpp30,2ts4Da)q]7jF_,UG43B%fp?@Fg/!"-Z'1hf=42De11=AK`TT-2^E("
%fLoh7Z!Nq8dQ:#q9[EdEJIp/fY_P]0BHnWs.A$=O"B"0_;.ZlQ3DeR9!f3+Z.mUDFhumMoBG.+,#6V4ZYk6S6@1N"((+5J/UHWIL
%6htXH/qgQ!a;2Qi&ZM;"Q%h(%+?AKq"G'<l=Z7Vl#fPnZ5fcK'mSfLMiFUAj+ip'JaK4+bY[`u8b=.]^CsfP574F'[kELt`8Fto5
%5Xgc&Z]Yi]Hm4N4Ylg,1G?HR92rG?De?tP6@f.qnYlYc>FC7ZOnoHeik!T8g0/>UlQmQfU3b1"pOW2AE-4:4IjZtaoT(tVbN)<36
%,(350NhkQr_HIfhG]YTq5/>Ac!p5<>1;l9&P5*'s%$<Na=H`T$b!VR>5;8cT:8A,h/-de!Q15E)3&(#\G8DDd63LbPP_X9c+mq-7
%KG$;WjJ,QVQM66b`(<#>9lZU(ik-I%,=.3AUC)`c&j-1*9ZR['F'VKaVWP3<S>nrIN#"Bc?RWoQU(6G)KO%>,#t'kei2e)Pcs_:E
%`LKoE^_Bh%-;p#(Xr5V*SH1't_>MD,!j/eaaO@rr59LNX8g:*2QS]KG1f5dh%jJh''Kgf3_"?$Q98U.j#q49Mp0mLV+ZNEQb=![;
%+GqKhSB4*QEJ0h"bt8@\gnBSTDSV(R9E[FkmQ8BXZ:18f>Ur0fd2LTH%bI$B#Da$FDDW5aFHR1NVq<DT4iCG]&$:6MSd+3g><*?:
%70r$h!5p;O`#t15NJsU]=\;4YD"Kfe#Qsn%V))&Z!gHlSK**%<."sa0-HV(`[6&_9/@.WFGaS_o&,rsm(nJOPQo(_oGS4h[TlC/I
%FV6XWcnJ\AlJFW=LsokT>JUf31^utkf=QTn`ktsl\S7`@`$V#bq&4o[,[a?H$\\qu,'[F2S<sVH(Vs(;/Fi4'c$0n%/(bs9"&^N,
%@oS%;4q<X$\g9@')XX=K0"Jl<fF??a7_*pn\!tWfYkq>%o0A.G4R-PkNen`)FVSWX[Q6m=U.-6EWP\hk3A:VRGj9O`#)%M*%oE[b
%E=MC$&4,5_2/Wpkgjs_`,;\>,NB^B$JK.R"4Z&K_\dsqdIPe]7rK0`b*5n!LJ`4X/1(L*?!(j%P6dVq<#eBRFKY8*e;6H>WWL>df
%"sD"s@ll#GrQ&2=_/;RAB!`aF)?q>Ug!V..3T@CEp`FQN*::;M,9W?a,RGKF&4@+EOTE]<`,1F<YYo8RdCpkZ4Vc+J0LbA)!F+M\
%G:<%0U*ERZ/hDI-kuQYjL!DQ[+#9^62Ag^F]K8T?ONR_jiI5M">So4829K*#aY4AIZ],2TRh?TITF#-,OUk+CDH`R>40RS[GS0i5
%#)_,41ZG:!=25'XQoP9?NL3L(KS9LNdH6oEiOg3[K/SL%D2`V7hEae:=s+=&oZ'[LSek3d3]RkC=7c622PkRoQ>MFL3/6$0($bp6
%=Q9\obRTnjAjXLJ6=i;gYo"[Z2C&hSART6uiUD[t'#EU2je`P4.#M<'%U:fB'X*nAZuS!V_/eQ;_Se/dp=O6I>WIZe@k&4=4r?0n
%S4KG9B]gNj:,lgrnj%<MQ$(neb^?iB/IMC+Hm";qI%jpAKUai_JeZ-j+b=/aJPbJLF=/NI!'VOISl:4Y17H&Z;Rj[o5hX`+-m9LN
%R$o$Ua%&2=_RMmHJfcI6_n&*e%pnFb*JJ("JDb*VBEk1c3-UO=Lu`Llq1-I6$gGpB(o4Z]YpFR[1#RbcOf4cY'T@sH?FEG6EUg[F
%Vi2>6*e@!Fftmm>%>Ito]lG;CaMo*P5#IS6!CH;V>;-q;lqC-kO^,+A8\%ZD\o=MuH2jfXUbcLh_Pqb='7]MQ602"N7!j^kRfsrn
%ouG;GU]8^9P:5f.5M6&?J8rUfE?)N\./AP2"-]:+$!XVN>[SEkUN-t]DCABk',!@R;;t@/'tBK=dO.5(&P+@f(oE3ed/Y<@;m_*i
%\MOgPU\V:O"^f&)-_6"C.npF+Le8FmBK8F?k!O/V\9,?V./2Od*,*Aj3Y#5jh]FP;6U$'Z_^6?Nh0)&@3_6X#"M+Ddn8VPkPX(&4
%/l&O63s3P*d"k(W+mE*lJHt6>Af2sX`PeA]N?gkn`)Os:1ou;Z-3+/R/J]U&<6FKWo!P98&c3FDZ5UdC>mMZMR)2b?Q9F\,0rX%S
%*7Tcj8^(EqMVkq'`3dgHX^rB@b'_tI'9Y=d9mauIJZ^hL!/rR(nkLFEpc)\0]#Fst&YD.pJ/G]#iCHB+@>^0%];=-p+1_0N9Z$3s
%)FF=g2hnRjbjUPT(]jlSA>I&[a:!&Sb`t^YT^*`1F/Y(`Nrlo6.d!n=C`k;3oS"Y2;Rd5pC-NtqM"$;DM(%1>&EFV0SO?#r.>qH"
%RKP::1l9_Nk:c#PT`>>*8'"0#=8>6<8pJ>]Z>jqA0SND>4G.nb07i=Lf?APA6(NhP[CC5-RgLWb+TkC[1TX5@2Pl_A9%*65nql*#
%ceXrSaKcdeIR3u9QOO!BpcL+(e?W*a8:]7tBNJkaq#;@IYfNi']R7B\ee?#/&A2R-,;[3Sh8WsFRduTJKDf&\m?CT'JGP5N5gFu:
%c]I6gdI$]Yra$,J8XT$R,#^7%mTNfu/LRlL#]]Fa[P,j>+g=2R^Vf_pla'V+cB(0C,q]VpV`Q4i_-<-DcV-n>a]+-6ct]C/klMB1
%T3/lU`5s0B,mqVa]q(2mn9.g,$G]?8pY`.t::n5fD2L3s[IEMZT[;X=_gkG!\5R'sVm0Zr@GI)$)0Y%oZ.Z$Q+_qBYWL*cb.f`%*
%b/5.7q2uA!:B!sap-elA)?Nk5!-;1Xd"b"-cZt*5A,Z1SlL1?9hAk:e@#SNXTl"Ji+r'=<VE>9tK8bZBV805G=0Z!GR^,UW'lXF:
%'P94Uq1qtFZ'LSd<(T#+"3=^kCCWiRWE2HZ]0]J)r07M=__dYT=D(?m8MObPO)I`iX/9mM^;dbsGBceo='/RFULN+2qIK*bbR547
%&5iV5Xdu`\O9;:_ai^NTB95@5I%'T$:fiFfKd:b"fXo(63P-Lc/0Ksf40u_:1?2J<"M^$X8aCEJq6AsO=,I[uh?0Bi\n,e)=afmo
%bHN12L(d>0aA+KDfZEIMkZ%KUhh[?gN"U/ll0jD'jBR,qTdX>Tn1&Ibf7roIF@=DAC%sXKXcF]U35Df8N^_s6i!Bp..u_@84qWE4
%PZ8&^DW\kJ=LG!*,3DTa].6laWb:):j(?Y<b1"D'?M'&:Q0_q]N[(G@S>s-j)eYt>P"VUk:'of05muUNjW.M,M=jdE,WgSs87<n&
%oo6m']]G++bAj=tK<E+("9qCUkN[,Y+6]#\Mt.h`_Tbj'*Qn8(&H52e#OZ2?1IMW-3)(_>'nYHl$hlhPNr`37X)dikB8Jq1b2Y9e
%Gh^<OB42d#Z=/McK5\S1B4BgZ")T4%SUiT^g)1?Tf?YQC\0mOJ"O)on5k+&]7qq_3L@tI_Ud'o2BRZE=nh:%6chI<D55rn.rA#SR
%E#md9e"UM&bm*KCO5Q6DC6g1X4(L.*\XW/bG]Cl^*>/SO>_g:A)I@[PeAf1p?%&eA3Bk`*d&WIICuoc!D\eN.NJJKX=&dZ/Rp`$[
%1l'lC"N)ct(g";SKkeb"IA%o>1b1Q+SpIdhICGQFqdP2m4p`m&b_q*r3Iu0&^Rj##IH0Ek^HDFt[)<>pEn*0'2U\Z)p0p\/hRHq$
%c22_Qb&?MBK5!\2pC2B/V9I:QIi;YIEZTT1)i5h":+<h+=SYD'L,`]*C+mH,(HMe`D23HgmlLQ#=4s=\Zu:goaLH+UNq:m7oMg%0
%IH.1J[L!Gj)W"^eU"gV*dRY^sXp@O/kKr7L":&\mb"Z<.lPQ>a:roQaoS-F*KPD#49J<Ges5)B$9-@GTku^uu/0?'#QqQUWb'RLu
%s('+T$],Nb7D62'4A.oio0is"<e@e#"P3)gR^<"?7U1qp$^:291t?R8%Qfd1o2;C".;+nK+R87EabUj@VTi7GQ8]jePt-E$?j8YF
%eL66]>MC?6cP5D#gQC<S[;000F)ooUCfinP51>jBgs\.q7DRAa^$b&b],jd2qU<4m(25__frX&!N')B+e=?_\%s;j*J%=Q8js^5a
%?LE\heMTPnOWE>;9E4@,5%(\2N0&a-*]1.B>,,@"+nMG.%pj%BEZ.q3J?a![]=Z8>)5f+HQ=h%d"Mp`UPF^UlI`V!gi"Xr!)+Jm;
%-uP+5]Ib9<Xk71Z-n7-l5(^MYLD*.8[++G8]?B7?^on#A\4\1_J&c_9JG.iAV1T0HMKC9S8(*0KAS1=AQL[p$QI[3MYr^jX_tX!d
%-h&.N#]VI"#KJ8tmVsO:Z&@A3J^TWCr9P$fZ:CdFa[aVhdA%U0;^$0g8#H_P"90%Venn4i,t->Q($/8n`Y-Q#XjS\/!LV8GaS,>*
%QiMjCX.3;78f1-.0[3$pL5O[]<23#k$BejJ!iL.kQ&[GKH_t'LVusRFk0ecr.ZA[rB$ir0N&U#+4`BN2&4PTVd(G'I&*Pf!m+3l\
%R>$B/2UElD/gR-e$ddCV?TM%ka7cOSe2ga,A,u>YiNUa:W^S(Jm4X'l=H^L58r46NW44Ft'o_YgS]!'3DHA,GBIOe))jR6SjLLY8
%jTPLsceQX0kt4U7h91;7I:J$-%;mZE?hfX.G[7I=X5G'P0BT?&n6Lc\.qK,<b+TLu"d.UG8s-+m&E/Gc[=ZUiMQgE]o1/`QnDA&_
%#iA^??N(#^r2$kg4+gI`B/*!en"j6T(R30Xg]3H<1__?N_n=sMCcm0G;/!uFofJF\SPhjg&?4Fe&Ni+2Ae1"dr?IajDQMMKa/@Xh
%P;WU\R#1h$Zf'pK:n)BG]=<`C6Nnh3bP2;`.Budc%D-\c.u4$^.!%+(3;*]C2opC476R^9n+FY-99<mtNci7F]%@YM%A8't5$'[0
%S*B0*b)*u=0*H9>Qd.d*fnBN>[t2NQ;G9RS6'i:269)F-nH`n#EQFR+A(D8f*'ijMLe:;`.`^,J05HWX.J&AH`lX%s3;KML?68N=
%f8glGL,27#p7]-lJ`QXCAl2N:cV9hEElNZ/(/4S@aYB/"[]Q<*-iXM`mU="@"bfJL0Q.,m;+citHY*='"Ul<8N+"&tIMf,j7m/HQ
%Rc-0d;8P)n1a>/NB^4#1$+6=0O(Il\^lm`.YGhX]Ue](o,1$C\rT.?QA*'Q@$[&13ld92%('?N6keCMU`C'\olnRG<ajXV;[,9\U
%"SR9XS)(:a"CgoK9#kAWAs1gc14XNoMNUVfP^lG`i)\N]TXLT9+cJ9Gq-0LVQ%>%]TsF8?7/K`_eC1H/0,0P2G*uGnQP:8TMAE<P
%6j(F/U.n&[&N98U?IP'1SP95P=%&TgnEQ/&Gd03BGOHWg4d>oj7cJp]\VOR8Y,083;kG"0'3g2T>n8%$i$&J_IBKY`Tqu':#Z;_X
%0L@W@^[AZg$SRYG<B,3o)l&rQ#d4#ai%9Xk9F`?[WqTM<X26YiF#09.EjCqo&BI*`%Bjlcc\ii`g"#nZWJno/GoA\.S:-l*Fdm;N
%C1&FdY'+'\Kdj=T3BUnZLKaZG';F$9OrCJHWr`h]as9iT@*oP^5f,H3ft#Rsm:R'3U0M#_:Dnk^E3tD';3J#:Pu+(6?<eTlH>n9h
%qo\a$kXeI0/)-KB=,/st_Q4=_-l0e">-%0sN.X^iV.O,83X#o%clj956L%uO8rhdd#jPM-eeORcZ7`NI67#l'XlaI*!)aQ#P$=h$
%rWmX5Ofp&JhkD.E\msuAM:`B5-'`]1eW9rsgG0C,'ks:Y82VCNC+:^O@8[u:ST'>4cr3U=FI[-M_I_[78;fGeQV*#d9t0-+WjBma
%q*6HmUd>U\:JgrT=8Cj;Irf4IX4*)shQa.LTN7>0"O7s9QNk]bF,Co9SR=OqSlDS@P9lS9ZgNa#fS31]dl&-9_^4U?3,M4GfkES.
%"eW=_!KB'd5>s9[YJNsA3pd(E840Y]]t^t=]h:7U;WNcAaM(Q\W3-^)1G)n@K14<.9+$n&g`.SGn>Ik.M*=n@S<c>S,):<q.^C=<
%)69&PP`<Q*3IO5kP2!X7?29ZN&]c!4ItXaZ9:/hnCW?j1a=qh_44Q:F,<+DQ@f[O`NZ>[d-#K06SYbM.d`+kIenXl:fuZbC=JG,X
%2=XO06B>8^)W!ER&#2,qc?tprq4[e"8h-mPTnLrlR#?oU2goOad1fKRT:lr"K7p2&It8N#lK&TE&K5;.>B$R+5m+Q"pIBc(QX%/V
%%:E@I.7<9q,"$rM#]kd>RdT+YJ0_Zdde]qnfQ.9nRiN8l9]E5eL?muafj;q[GT!b,=@:c]LLIq(ieYfQ99OZcUYk?,r:u,Y[GR1E
%HW@$CjY?kbU"lTFgnVaZTai]Tfj0;*#F_?ce<O)Z,"28Lon0=i!<ONiq!Y3eIpBo''<)4gG`m%lW8e[O;'N9kU)%:l3U0VAM19$G
%i_XsU'FcHpYSm*FW652*MXFgCW[Jh>PQoJj1Am#/Q!_*bl#46">k]Z,B.>fL1Xk6A"4UEg5Q!D0\K'=4*LdtN_FadYS\Y/.Yq]l*
%(5s-R&'5(X7irh#:QRRrmJ)EH:f5sr+[V-($en5Xn@K8$Uu'$FakZ#n.VXJJJDaW=RR+bd'G-cN.HLdH\s,Wf8gsNT]%IYKU/;B>
%)qcbV(fj[Co52<,4'?iR_d/"%$pR?.1!o#^nu^<a#GBsc21EG&s8;3Z`KP@GAT?ot]o&_3Fa9U'[KS]hSC@SD\mZi(:.8gUbN"nB
%?H6\\BEq@%mX7t>*aiWX:'!HAirhWjj%jDTIs2u1;+Z`&m,X=PVOWl9,GH!;5fbM[Jk;kS$7IE:<Yrl564L;pYQnuGV)[rNGqJ8H
%d*mq'"nE(n.i:_mO"Rne^YYBFh0[i4QUC85qrcRU1nfkc?ZEklO;WpD)UjtqlR:)h"Jaj#:g!eQmM`S[qdf@#+3uEsetc#jIKhYD
%PUYe]7Y%t1Y*"T/GD4Lt?(o'qh;:pbr-<p"\'X_1MnSk15JF0=qTGbLD!RF7s2c6dm+"PThd3DZD\UTJDEn'\(!AKd:sCTi6??.m
%e)rU!-R:!Ya5Zb?dC"QO8C@S_9dq2*4@s_'(FL:9ae[bl6jeV79Ms:anP5WfRf[_b-WK:eo'0"/?5P=ki\Er",R!Ba;NU)r2q1e%
%,fILM8,UqJp+s+url<C[R'l,O':'sYo8q[.%*Xfqie1o1e16fDYf@(a[sIS0<7La/:gIA0=,5njQs?`;ZUqaAE(/X>GPoEH?VU;3
%.t8dZ5lrBiWk8CB)iQ<jks-$h)AG_DFo6kHN-@=,,Pp[sF<K!Fd!0(]P$aRJn$_E55=.M\S!4U>#i;%6I/,5ioZd-@,?_]Q9MYj7
%[n;:blW"Sp)QFg0F@:3F))ABIp\:\%,!IY8,QKec>_ZJf$M4"R<*lFF]*j/4oK+u:fu(dB_sS<-+p-[F.'cG>:UC/GQ"+Vn"P3>Y
%L`TV_=)d[D2q,$AeN\cB6Zrf@H7`tk-Dspg`tR58PE_c[Re]0!:@;Q2BG!7XUp7*sV[ebffHMm5)&DOSjA[FB3V%r/AiC5+-IB41
%e9pqYUITE=cWhe^&#Tu(@-Dt<!,tmT6\ET,g%Im%$s0,h6q7[L'6)tcJNH7X[+o"SBUghdLL9`Tb-4YXNIGd3._b!ac,4*BTl=Y*
%YlG1D%^9]AYu3RF@SZ9PUEWnN`k/PpeJD71WM#\bXJo?`]k25ieg)G'.7V^5(%dS5nm\$RTPQn<[QB2mC]k5u4&)u,KM(`K'K'`b
%643O0C<^=NM^0HiH>;m<7J[K5#El?V&YH_9:+\E<6cGri;rPKbg5/nIAF%Op=qIopTB8GAD.l_&ckl1K!0q5]!NUF>esF;Q]j<=,
%W4lX&MLrLr#A)EAFKUNsUsa'=r7E6p#gpMaje`)!%f,<Z"BBUHLeNqq9q?NVn^DJqO':,\8gqClkp,u8oJR$!:W,/iiX]U`"]4<P
%5d;<Jgs-ZE642,97A?(/C`G>6FD,?g,j1@=B/q>tpW1Pn"EBISm;2r0>Wub<#+giHH+leM7F9hnXW(==[SCV\#/B0Q'M)oqEF7;q
%>OrTf7SmdeKUJ5sk_L98<lWD&b8>oA-#\A#`pjD$lm#15@#+<<h4tN"<SNUXT.S:$93\&7i6'K`#l07)g?dG4dQ31+CiNS,\_Qec
%DYB7q"FtBc^d$=h>DO@YnHaHh'uUePn_cG!J-,N+"<uR#">W^2bo'8p^9LhHdGG^;$ca'^UcX(,15l<[#@o!qgdA@(g&KfSf&=L1
%Vjq)oLnSgKMJ1Vg:m4?`jZ.bsDHU!n+NQd&;`*!<i"]_$PSlA!QgURcK@7$N!/1-D9'R_:Kri0WCTsP*RfZN>/_MmC3_JLIM/G(M
%b[.V?Ss>9\k)6i"2Bj]B*\F$'iATlN0Kp,$C9"k/Qid[1Zp':O$ZR.haI-IO/g@HuY(C4#/g[Q4*Soi3HF\P<JWqQc3%_;+nddL'
%KPCtdG,R[dp-/+[OeNDH=jBm=D2HOjiRWdU_s9r_r;s?AQVI7WLRpc;D+;Vm&mmIaWMW_Hq9?p`1;h%Rg3pdf$M[eF0X[AD"s"0^
%5%bR`LJ0&Z;.p->LdAE>cIHMR"+ls>B$%K)#^4TC=Lu+!j/EO)D2s+mit,ILgb.;+Ti^m"<Lnk"*<,4mB*[[3\k_JJ:_qg\UFstm
%Rt)*<:sP#&W\?st/XZ5$$"$,c0k>,#1F?7V_T5Ei9FB:]5ng'?cjCtC'8FkI/I9?ure.E4$F#\)&274\@-]:o6R^:a3j`"``[t?P
%<B`XWT?8*P(Z9I6?%/'-oFXj(7lah%?t`E)K;5hf0i@ibn7Dn7kMA6Y&6+f^A7J4aqs[f)q2U'f2Xc@+/dsO$TaDpda[l_CPq(aS
%=^<(KA-[-!`9Y'G&AWHU*0)%saG?8=PZL@A0Y=+61.h/fbtR]6c4^Z%d,<*h;rsn[3eP"6JXh"c,+VCec/lLM<B%SY#"4ofB')2;
%.QK6*E>XLdFQVPO_gTPBUs@203OJd'O+4+/!=o;L)Di'Tpq+FY%qr\gjW$S71Xp6ql4YHLMGu8TUiof@&R"=+_<_RUo\L%:85NdZ
%M=8iAeo:C=1'(Kmif7EF61ehgGo$B0e9DWc*,u-$FmIVC8n1_F_Aop4/Trq8gk+45&16@!#_o#c]@/iV$\i'SAA`7Z?%P6T(GHh_
%^?\.'&VuAR%N/BeO;(m"gD3!C-ti7'5u%#)!&NbW0b2!X&Hn6[g)W0Ckj=/J]ID=%/7XX?Th.?)JWCA)&-,HI_Ic6g/^-=KYi$I^
%gFrdAm6W987LjlQ#7)3>JR\cuTG-b@paoH)GI!s>M47!**_@t<O!c3`Qt\\4#[V4t"3P&;lKQ>oRLN7-)&reg14o@XWF8Hi&S3eB
%an(F(_],Z6Ps<S9f].l.8D148_d7aYF8,2P?9QAC0i\t.)4W$[Z%h[N]R7*V"&I:2^"!`NkM4F;NY4i`.gRcEbCQes8+3^^)DIhg
%K-\kJD\`+8i'b!sg)=5'&W[@C#eOiIGc]\W`:u1KW\aAh@np9_c37`==qW/#&&EZjm4<F$"<>Td]=aQ$W3ltAZYJE8LWW*C\=-EK
%*5pLe(i`Ce;1W)RiA?iIYWZ;`JdOq)!"&VCmcEKL9,3f/h8;O`(o>>Oj+,SckHf!$'s7o'2p=QJ9_9reHP$'5c7$9((5)TuJoIqo
%93k2])s91'HO(Ife\ZJ\-NdsL<pU8c'do5_4L6OB'&<kkL(8ofm$tR!-@>*mWH]Mh)=RfQR\6I<JK2[[W$?mflFKK3#>_(Mpi%Is
%Whm'Q9EnUh'D#-o=YLl:_hR3U/Y*KP(TL\9n,\Sm3KCW7Eb6u&qUNuCedp(6jJA#bejL<[F\ugMEaKQR.ct*Gj$eI3d]jTOr'F=h
%ebQPs^RBkWorq$`C1lCWrd6Ik(Q7t?Y._&g<s/8@Zi>b=nT0KR-^*[NIr>tupum3U8(J[Hj$9k>>k?p+*gHVF5:Qo<+lYq1o8%HZ
%Y+2d#9+YE(VHhp1lsN0**BA*na"E,#'fYnWVNB3#<@BNfoVlQVLJL-GLN(RYnp?[Q!RT(9hg@Nla+Co5kF=*EPJt,OS2eiU!7q@o
%5eeFYgdSVlKVXgX/Q/8)L%pXeOq)9Xo1s&_VlD3AWHmj.(h>kL@SN,ncKlR`TFg&aOh:s6c4lX]CS=6F<"'\@O@Q,.#1M<`feXTU
%jE-h[#V=>Q'eL;m'1`E3brVA_KO2s.h1RAEa?QRtQ.*[GXodG+6F1(ir(MT_%Gsuh?`C-A*KBR3/X)^'2n5K[qi5+9Wr+#l2MfWH
%EhHNaArkTIOt^<cQb0HEQJr^(&(A/+_lEqQTLT-N_sHf8[351-jD0mQL.L;f-0Z7,+A'st#3Cg-&9r_aB;_QrFCYt(ihh_Q'\[GS
%6KQ*M_3Xce$$\VCf:?Zh/Bi%O>jDYJs7Z21g&+5m=8a+QE'J`B)9E=c8%EV]VPKt>"?M@Do?uB&e!j^`EF?2F7jgA,b63N+`IoQg
%q84/?=hK+"2biQ`/VcW%EsJ$S%7^mAkunSV8h8U1R*S*IB=Q2parD4ogb)CtXXd!`L@d],>uaDR0^XZkH`uY"+:ip8PE$^kkmr":
%nII+!<n<>$/5tD09^j"Br"N)&OOR`KI0%"69t`"dCQ!S=RkC3;G`0-:WW<-AK*d&.qLL[7mLT5?ADZE(*=!DNE$edj7na#grGW<-
%+bO>(>HU60&;AXJp]d\<A#]uJVq.,i5WmM(<uO]t9"T^cD&7KTM`(?^^,"JLeYJ8Nd9)$^ajfOFNGYHMm?aq!-1L4.k8jdb\13h&
%r,/_;EcbXL):27-i%H)]PL\GGNobnoa5K*QK9@]2nDX2;3>@Qi!jg(-^1fFD_"`P**B?9KqOk(8fgcLcR#]r@qC@=NOT9ea,\#="
%<K+k:a^?*baeAo9FFFV>SN@a"i'Lmi4d_"Z*uV]m'`^IMN'!6\9EHeLEqfaW-^_?S]1j*9+\*B&Es[scp`bhN^V$uOn(mfjl%eH9
%\GE9WWt0k*3uamOp`aQ^?1)lF-5R"pr'8nWQpbfkZUqYcX8q6oo2IN(6q*1,9oG#a,Y29P0F&/?IrN'r1\d+/a'b54o'<M+g4^!R
%LNJ.Rri+3NLE+49Z+o7/N@mjs_PkT;kE]+57fLD)!4*lW8a^4c!g(%F\&r'Js+=U.!3N4&O]/]"Z-g[S'&l0b!<ri*RMe*mNY(O>
%%,br;6\G`>6+Lc6iRn21+leC>;UoG&9'Ab'9sXHXno"J@ebo0eXP?@K\X2pRS3;M=A`bH"irc<c#rI`o*E]c+/JXOH`=W)GW#2)D
%VON7N9tJI7Sjj-O`fEil$/&A$=%\gDX<-FSlEnNkelh^I.5aY<]j+I&P\)u,J,G*eQiEIM9mB"#lc*`Y*1[TM50/09jYE(dSD,lg
%2A=7sg,n7lEVPsB/3jg*&-<k,#,cVqdee(I:=bq5VX-8lCr?=c`3:XZEAEN_PYE9(j`6.6q?fZ:P4X+fO0[Ljo`6q,>TGm4#DuiO
%+@6"_i.t,e-/MW2=VXc$BePViYN3GaNc/G_*.Rq#Dge.jHn20-3Y]]M;4CH;p+C-3;(1_BLA+YDoEPcEE([dlF"1gU4M`Y'ic*#>
%YBKPVB4]Z9&-K>tkV[72[Mm(SRU_4O'CP3?aS^B/!<b\T>ZH`;dP])j.#ku@j!Z3H5\rBoFisAgD$!e$<56nG_k$u%3aO(Z3#!Pj
%Tl4k[E7)]pXTRD$8\iBDBP>qHi.u(!526,Z7)71)ds_-l.oGr;KTP3^>&;Q9m"_6HeNCpYkDR@27>(^%RuqrMJ1uNYM?R'RK!N(0
%2V=>("U?*5-St/7',E8sXrpGi+NY94(cTk"8]&FdYui<BKk'J0F'SIWGdGBfpoOleSa)XT!*'SPpo]%Eh%3Y)kR;\PDFnb_5L6\J
%aO6an<:R+&.)V`rTSLAZ6%LKnC>T41)3\/RY96]T&1)pb(p2Cl9)]O&Qum(k0"4dO`4OHq%a0dNi`lK]3-m`V;ZHNo3H]d0BGinD
%?_eW$(Z]PR2a^V^nKp(:N=G1U95ohb,5NlkLpAa)+]ZCi>sYu!m;BX:!"4?n`#t+Li&LKH31GMe3Wfl\7'(.ZM*O7"+%glHPZ8oM
%;*11=hqH<J$X],!)%,jMHI!-/LB]b>"BL=pP9FjSl=GMZOYIec0]&I/88Lhc-G0C])kE.kd70-G&#V/o]iC#n>Z4UC!)R7SHViOA
%)Y1Ll)MUG#)/I>m.[==`HB9s?*a2=oBK:l.g4VM=M`Rjec3c<.h;_'T)>"U-$%ui3T$@tkP1=FHWr(;0FlHOII^9^`Y>._gb@/+O
%&#G2I)"H5R,ZW.'a[["Y3o5m`3FYi/JG!*VLbfYZ5^D^tkp&WN[<#+/PgUk=Uk!iL3<0<b'a5qF00-'frN:U=["UVT])n.cF9W<u
%&>P#obJjjYQP!_I&o@VZSO88q1MQ?!0oHD1QE](aT>N0VHK0qj0Kl0pLU4GR*cqub@5BV.Re:K8m\IXgZIZh_F^d+3e\Ih79Nk%_
%lCg9cM!Ao4f8HXKGV/CrKE*)9;HFGECJn`JRPP26#JIl%Q^UnJ;jI1[TGu=EXiT[^,fSum5tj^JaJ+`iVpH,boYXaYMci&rVO,1p
%i$)g6nFhSB3@9OZlH%J?!`t\`Pm&^6Y#Ss5<mM\U!VO9k<@[FCj.Ih07&9oM!:R[tZN6m.6j9g_G_8`G.-QUu]EKO2]uR0cZ\>@E
%<Zna_o285<NWs3!(_&H$m!e.*8WVem(EH`"AgLV!5f\`.LSb8a.es<[N&VE&B>b!i3Gl`t@7=U>%XLieJaUnsN#>d<6Mb]`PCHh7
%1-c1!:MNP2+[i:H:U%u47XFP7.gaG0!UJd+?rD^,5K(Lk6->XTnoXq_Q5NgP,OBC[/u"XKh,t'S\C%@@Ue7`jV:6c!)kF=cIP5!8
%O`^^R#qje0DK'`9Rs_qFQ6BocfFdX$&b[X=0M0XoqUnf/9rJ1O#]!'KZ=OMXM-iVZ*KYoZ:6-)3-k#ISn8O^!Kfo4U^87unR7sVA
%Y;!8rgt(V,gcC-W^QI2X_KS<Z,o':;b0VACP4G%<e5:eJ8@m:$>m91ai?N(D4@$mOE[[/d+_"3p*=[FUXD?ghA_F2##dH$fdl89j
%Fg^%k^<2Ymi=\OjBuGDJXjh'W)S!i++U-nuPVtWds-A$rdt8WSTWnbhEFpH<L7Z9(#E4^*LntcDI%:"Ci(4734Adt1;0F7a#[sEO
%_23$!P`QF$(J:HFNfd.IUS=7[!SfM(QoK`a1YOl!GcFpudibBiBF&M74+4Q"h]!5lFbiVdWT;3WcS*T\7Lt.8=&e3S8-P1Pn9oGT
%7H!ZJQg1Fg1AL4TKfStsfh>14fJ@Hnnq/iW]P^XibKD!nS]-YcOdu>eL*\F"ig*!SOdW?t3_&_9.52pjOpN-=9Z*4[<T;BI.(5sG
%,!%KUf?KMbC1r(0di4Q*gE-3dg[-tYdV,/76f5f(OHas5+aTQRDk:-.Li:[rC=.9gRMhMENHWfOEYFq?)%&:5rLOY"AW4J3Cl7CR
%\,m:`+dAW'C%e&N;%1!Z4HpOf<En.9XWl!A_ZN17;o@1"8?"sipu*-#=Qsp+Is8J^Ahe9R@;5@0P:0mjR+QlS?loQ]7$WQLKEc7)
%4h083euX>c.VBKuG4^J-G"sA+7O,)d!Ifa_gZbXpO1M^1^ldr".qLGs?InB$pqq[6Unh\*RrAcNdV\Bq\.TnK=iN`0dTU%Nnl[EZ
%^fFJT7MbhB@>YEJ70n+_XY*4_-Vqd7&!X[VWAk)%&*YS<"T4>M-n<ZH(dO.)S8I))!O\'ZNt*YM((%&jH<K;G]8>Z;G+u#Y_LXZ\
%`$ELn&j,7;JZe8b$to[CEL=39+>5&%Z%g;WkhugM*\_Y[T0ct&%3"H\Y/g0Smndsr%Ufcj"6b[m<tkZH/q4X5D;_G2&BSERDaK;@
%+iUCm!)e#g##<W^GZd]61'PP7aEO@=LF5XQm'*JnO9j!/8-CUI0MG]K1eVJ6"KV'Pq&B,l_rJ3T#]+45Ms/JC1Y@N=4>@FY.dLXE
%Q%2isGN)I7QN<(rp(4#^=E'5I8gD0B*(uL#19l?H'5f?r4T]n^ddXRSk[67qgoNCo@n%u_qUD2_FpOdiYJY)<+[J"oF[bHV4J'H/
%(Tu&FJ0%H=;0hZ0ofI4be1]&to<9[?$i)j!pH^VhF5']oCqV:tI*r"d*ZM^ddAF`(djqM*:A8#rQK\Q>#%s/&`g2LCXL)Z<lkWp9
%T-Ipf/G]oECO#On(7,bW%2c5V:f't&S>C;Pr1Jk!$3X;EA--8!/4'T$+MT3/Y'"4gfU8*U?+=*4;'qBmq85\(T'9RGW\0c&0t*Wc
%#ftdbA^V:e+jWYroCV8_GrTX]j^6X%Jr9ocoVeK&jUdA_r,B%cFB3n#B[0/5>ciY?(_rqnO\IrrZh3%;:?/3!ffu_GR!MiY\[[GF
%`mD>G(,q7@kb9[j*s2&[bWK^XcLQVoXFm2!2>ZUMI&h%9NX6h`>*;eBrI7@--QY&89_N&LNq>TWq<4@%2'jpa&@No+lKMb!HrCeG
%RHqn\jIpWM*RcE2eePc?R5W?.*^[lQR@%;/"67ZUJbl4CFM1"CChKR[\q"`6pkRd2kaG8>3LVc*>Nh^p9`j[%dR"HLORnq&pN"o(
%G2SDY35Q.?:R\dh7WmDle*,gAj9h&iaC*(0J]5ET:nT?O?;QQ!@VAkH/tO"s7^I/*_4`q5@%*";8'bscJ\Nos&!)R9XhP6'k4&JS
%e2U_^P]iKo.\-3f1J8"m/;cVEHfA7R*Sj-u?Z<JVGg//uKX>]/Z<17/d%6]DZ"oTg4YlNPeoK2H6\Gk$3p0VXjs33:][bAM#`96U
%S%Me-LNGVo^piRuF:e[nm)13V(!/%jJ9Rb:Z*ebarT5q`i+0E)>e!bfo-8Ut<L`=jg<f&^_p&5qPuQa1?dmi[hn6jgBn@S-L-S*\
%q<.8_no`%5E+Ab)f_:dE`T#ZJp,dOY+AG.j@QPBuh<'Fk`^"HX2"[RNPOlh("h0qP>%Y\@K_eZA;O]]N3O`l&FWri%Mn7g7n4K>c
%>*rR@fU`K#WEKT@[EK@7]64h;,+\.(+1iKd>?Wsb,8&)pFXMT]4ns(Ofe8B*U"e;<D&!s.4h+'t&ba6gI7\4o,HB>X7)&d!i\<W&
%=LMX13t=%?]B3?]DWKHcSsTm'6ON0BqUNJ@J`3;#@jl="msOim?T9U0o/7`N*Kef>9ECl;]'r^n!@\+mK59j`(Htj0nG[0ggFd:3
%]nuL$$rq!76qCcrJ'?k-Yoqb]UI.Mgl;HlgOQV,O>s5fm+0*'&s.q/,c33-6AL3\3a?+54E3`D"7>(k4DC\q"nGe?u\tWe?*'AuH
%E6:%b\s'LI.XhPr$&fn"Pg5eiX<$%(OnE!/goa9B#ksRcpYC)]Shq%'142t\+D-.D=uiW6=ht07^SHegM%mZ.OWLihKC:d[hCXB$
%^)TO9"d.6i=Yl@]%O-[<aScf>%Yp-+6:aDr#lAP&9WZIGn*EFdUXN;6p9LqV>Q<7L\/_7+A+oIE"p0NkWq(Z[SrP94S;6hrmM%:4
%E@5VV''V@8c9<4l-H2O'`ImF>1[K4k@\EYB\.eW.-12bjEMkiIHARZ\-I=R/:08%HSW!$^&_KS.WMuDH4,J#lRc9>EMPpMESp;aT
%X=CGn$<`%R,=9_E'md"g4]QA7'Ic@ErK_giL7X0(AQWZrI]7)D)k7>pd.?rFHB.\5H7HuNL+G[;RmYN-*I>/scuWA"@CF"1d.?]-
%01t,SWdI+A$iEi`jp-Aal0d%m=SP**a,MQa_A@Z7$?%]q;aES:ST$DCQE1pPJV1uEZFQF>>!RHu3E(TZ:_TM#Dhr:"3sl(+<k(*1
%daE;)RH-._9fdI<+M.[3`R[\CEB/F/$nSj6H:qQcjKH;C2]sKg9`L)aAoS6:YQed"r"'B+X+Ffs_qDr8#4P'3QC:aDYbiiJ,$0"&
%^o:$&Se.22'ICdrBRN!E(EQ8<0$n4I!kuD!gP`Q@/iWLIb$NZuq>KNBI=7+DHskV2e1$U1b;;h4WCd[%(&AotN;U=\J!K]tkMP:,
%HRiuS[WD@-o@MHr(P#j4V:KeL@eL&DSEUYo.*](f*d`(H*B2:^=2^i4QYm"rs68Y@]!$&JSc&n&[_hW:H!VjMh3ZZ>\#;ne_Db^H
%KO4EKH[bt_4Z5O"#/:CSq*tt]e+>TX>o8lTQqCdK7A8Z[R$K/Y5beS&c*=TU51j(!V98=SJY%BiSL5PZ:JpDWUR?25Uf0&O/jR./
%H3r:%K_,O_]-4'b\IVIP_YN8R2j"jfk?"-;P=[[]p/(HpG5$P_Qg%%9]9Z)g\-1;I,T"Z#6i\W;k36nG`!HMQTd_p323iI>DE"U/
%^iu>p>u]VudYo?@*XMn5eU6.a5=lXpFJ\^WhuN(W=NmmUl!sib2u"$6%=E"aVhWt8pq'Ui23?Gr^W]/)$8g]Q[Ys>ha>3"_O.]_7
%64X_2]ioLfRf'N3oo2%&h*P&PZpb6&6sK'$q?2YrDka=Bef+"hksGX@bg`?]C;.2'/.P=h>4bC4$'LK\dQP8CCq?^b]Rq-n!"(Zm
%2U(hfU2]54%@`L"\&4]i*q@1\"P':P]7XFI#@ONcI<W^@o:enqS36ntX2[^a.I\H^P#=fcDHdW*H8SmX/]h:o7+W[X<s/K[@2/]@
%ACaZK;^^sbQ>k5u!F?*+lKk14L>ZhK<q6Hpp!i.sa5@Z,+A1Rr'6bpa_d8D2CgmPB+$p$*_,m(2(2)g-TjXoSbqf9l;-T,V>Ceu7
%hJK2688K2&L3X&M+ZlBl&P`Ad5^mk+X.oOn@9ZW-QEUWDONduIU_Y[;B.'#rVHGT+/,6erM*q$CfLEDY5:F]@lPL>l45.hXo/YhZ
%^b!o'-seC/+ZpfSQZkZc0mZAPUH4AT7l6]SdAub@boh<Gh%W:ibsT(Gg'?Yo6;.\7-=^TpR,5-3+h0[qlNDIV[&PCc]0,<O>%G-o
%g[p^ME2\bf=jTU4-[#gIN$W/KDN/Q1&I<7]k)S]VMn!Bm&V.r<\.f*uNlbV.:3[]*JQ!#C=F6n=dFV'l.D`0llZ$.%*Sihe>KI!o
%<`Q]$/q.jWCY/N*[M\158WfJpod4O!hDC_\%srZATuPQUaE(LCmp56lNiF007JSfUIe9+@0m\uAl[pD+X9+Y)ZF1=/?k7n\kUp5)
%JmPX8(F:fDOl^4p`5EiiXDjj.*2AcVnbu#O>k&"rEDP!M`^&dgR!t9@PYbA[1X]-hKN0jQD%8j%hpdrGa:]6+rG3%ZCRPNs+3jF@
%qLaKfPD,X\j0-2F_WeVArqD+tW%XGdP!%`15+(9t>ihgf#2Wp60iP).]#,a**umiQQ%>@F,1K/Pb@)$";DMsX*<ZAMg^'_mEAg?8
%J_JH839*eE,#Lu_+cu<#X%a0]%e\k,d).SjJA[5k<Xf[+cq9,uE<rD?3kdRspJqAU9(B]X]EnUe=I<\GX!mjlO+%RZ"E::A*A!j&
%4\r(konN"\DfS??nQ(%kTC:!hIbhu0IK''oGd9'I0BDU(2h@q2ftS0[B2MMe2T4^jId=`FonikgB>rlG\:%1%qFE2J.UFj\N&4c?
%hhQrY*>7r>oVGl9NCH<q;ori23bkZ;qS)jrUc^IeP'F+LJDMWOVCnYDX/5KUpSHF'VtiBtCJ8*QlDh#cOM+<<<kR.''t0o8aO,!5
%"hge*Lf;LknGiEZ)t7blrrS.TG`35cb9)rh5.Fi(2JO7*;HIf_Hb*u51!9U#%=3@p!6`lOMoOtV,5HH0.@9Ef.j15"PjB$Ha9h-t
%@gRao/P^cG4/s\'W@?sh,Nueu\7uR^(LaUbjmf%R"2oU^Ju7eKNirO2HE]Mq,5\mb!hoto0apqBK'[lr^P/36kX:VM3&P^Q`iD(O
%7]aGH%H8l&'oXu@I&J4"m%gR^(Q#C6e-M_2.I^T>8V7P#;pDH:('L".5=.D&]8SBEW[:H>=k8LG%uOp"PH"?B<1ak)#\H3LAQ!J\
%<S0(*=\VX[!%W$b7:ErpddKc.5HF`aVP+5,C).N`SNTrBn3XR4JGOh]inul'e#ItWN=ekSHB'<kg?;r]D9c`t9_WAHaq/ba^TWQ'
%#YepPOg2(s7J93J:@1@X<bf_YRkX9'RSrX:+m,Vb?'Np,(P-GU[:ip.b-u-JTBRTWrs0Jp*-EhL"+;R5N#PS,&K<4I4M%P!05&kq
%^Xl"K)#@<!Vo5oA'cm?5`j*nSG!f:31D7XBhaG,94chh0Rj$8>nC3g`%fodZC,(-"kB[EI>B?=p-=)3%;,?8IF':E>F?P^Vclgk%
%=NJg>fTu`YLgn_VKF]>Pf-aMP5Sfh2^dBLahV4hR<Xae]c2h4ZeOPqJ+VM-^aNKN(@)S7e=fTN!ETD6>cLe(<r:JKDLq<7PRWekN
%n_-<,Bok:$29-&hPFi`+H<p8hP(6Vr:32R$J>aG-1&9U;m(h#>G`gaQ?o@H!4eg?A%+h_rRQLr>*CP4@LJaoR&`aZfO])lQr9$n1
%<;`V0B,D,%cd^0_>t#'"i=L3%!1Xi6jBoE"pc?4gRf;A=0<7sMISS-MQFO*U[iYrFTkS,*?JWo\Yf/IWo:I\D]UBmh,OnY4S)JB_
%Pr%jV]`8C\+D@*rU64AY>\p$u4Z*EAQ!MbI<b(!2b/,BtKm1JZB+fIj>X(*-[QSTKJ6;$PY,3O4hf=bYWfnK!<q'*a6p(H51F=i_
%q\7$IH4F7M<WkkcU-[`$hbfSE5"BuZFU53.cOju`Eh9/&4aH$]9i#ua]\0Yc@0;W%69rKNOoWR6R#aJ;VgB"cA9:h$pRE_0E(W(P
%"&.%2LUZIu,#G2\^*$8eLa6I])u\8(K4akQjWB1t:(CpFUD%RM`.FS*Y2N,&'>i4%h%^f`G<B[?'54R_IrNQooBmH1L!aGslpdLc
%#8iEXDoEijY"#^#o>*pQ2kVMViGotjr+iGbTQ#.tn>8(N[L&*Ij8_P(')Mc6!CC7LKhX^>SXEUa0'5Dh00*N^\0ks97XofgH3g+]
%2J<mIAr?p!^&V^aj`BbuCuaU`>@b-3S)*QZ`0_LkRUSM6!LeIZ]qZlVPE(Y,,A56/ZRM7]4:9B7iJ8M)iP@[Be<Q#ICMn`8@VKO*
%cl^0S#oWFF>%mJmf7>sb*"2n=k!#\6UL0Cn3"o,`;\=taZlUHP6bnI%Th<iHBIErM8j!2(H/OU%-oC(QiFq8\\1M+f"N[:X/`B]i
%MZ)#(`g#U<IZ7T1)adn?;l4h0+BjOlhpLJR$b^@FCIh,;d9);H8ED0S/Y_)93GQa0Sur!!:#>kkec_!>)fV9H($TuYJAt8r(PtG\
%P<F2AoV-u.mQ/KeYr?gC8/3LHm6NH53HIqL+lEq$pc\"plf\sjgjI+lYsl38NsI93pHu>rNKnBj7g(26Yt#mGPr(c<N@dN"rEgZ5
%>9-D)'WJ7/ki@@XS'D,VDQI].NX&63O+LohE7?(@K8-J/Cc'b$.%9BD&BNJrls\kS7*$j$c[(`_^",6-r#8>lr-QN;`mB\4el0]_
%`P"tF4nNrZ^K2PEW;&);)p@"7hI&:u0=,nA>?RK.\i8h+@./W;$Q,l*]n@A62tBIjVNM'r#rU$aWM^8pS<PQ:EkSKVLqf8S:bd?>
%4*W%N!+W+0[DtG)!s=V'9mu&%Cth:BJ!2lZZ"2H+BQ-c1iXm)C#-_DYVX\QO"@1&eer5lSd16cRdH!A=*MRD]4\cH#cp8,TeZfG5
%'<>:.3oE.NpHkObP-B3.!!`SsY@3nsn*#$L0t2RUL0:";Buj0;RnYQ$NlU##U0Y4p[iPm\aQ0Jq6UMLTK<d'<>D,On`"#qCHK60:
%8IFZU68OXhhHeWd!sZN2*5$n!WgY;l&T1ON(1]/KCLa.b"HGh1Vf$eO$B$d8%YT;"(,f,G7rfpkZ)=o5!Q"-F$GdTtbDMj#Bc'i/
%LZ]?o,_A;L%r8PdW9Cm)RCni&A7O1A=T:6q5&9#ZY1d[5Q_E##JXm`8rGYfQr1n$)=Mn:,fjsoAE\hf&EI18H/<4Uh]:US(S_r2=
%;'9u^">n$c&mC=Mdf:?tA"6.t;hZfaeTiDBZ>dE2c$V^lQOjs0OK3d9AIQ#a`?bK&X'V57%Q<!,0T/.pj`)OTWq(s(?):\Y5j_OI
%f9rRF+q6!n<pWp?1X=.RnK:9mNufgiZW+Qs=a1UO<R(m$NBp+[E%3K5)qam]q42`>2-?l@Am[4WS15[c@.#%[Hq^NXE8i3gk7"T'
%!LOTO6q/:b>LY+I?@7K=k)/^t)cfgZ3FIFf;+TQ72JZJloQ>/H&)8<\H**[_$i>l5MT=(po,B6Pe^R95UU>8)oGT)VW:Q.g;ph:0
%N?St5=\NA?n27,ecD3B`ZZKBT3r%._<D#UuGt]Z3j!0c-@8k]TF3m($%rhFc7i]gaAo6(qfTZb0Y51gl_XWTF@qHeMY'Bfg#/Nrh
%o<lP^cI=An@U&)B>pQ#.V2ti]3hppp;JLTt=Zi(V_IN)h`P`f98j4KC^.ZqX-lA(8<H<[HB3(G$H0F'5#R>j[.iB9DA_bWLb*C?(
%``!W"%<3EY2fl1$/%b;oX><ND6f%eaZSTSed(Vn-"rpjMEJ'auf)VBCd'kc%nJ3piOCtM3QJ-GLJY]i@_1Q6-jRuYcrk7BLG9OYB
%O^d;2S-/t9l.C%U<&J'OamJ)9AGul>"u*6gkX=G"6h=;k\M:/pPbfPNY:(Anf>%_HZgY-sqdL)Ne_:#uLIoeKP:lfDbMe0++/-uR
%PZ</.OL/b]H!OVJZ6B<H4mWRinq'`Wpu/)C4Z&I]Us0<p+o)W(WOg%3:]QKSr+-;S@=`u[$N;U3mj9&[J1'>9`S?Y4EO]%-+SQN#
%G/nD:P]e+[74G>TU^:<emuk8LhG%Wf3*V1\C^sPTW/j[cN<d00F&2EinFVfai\r=lEX8/7HA+HbkN_96]:d)tW2W5,\#?#%Us1iS
%JftrBb=!,k`7*<I%G?1"lElPSYh^*SNOOjl$[PhBrDBLE(nX&p,GVX\\&_?j$+E;]?0`;!?WpiN>b62tbg>kE&W;IG)h5cdVh\q7
%SE:VSBBXt*?GNjrG8L@=aIOcB5K+qMk6LtR$Xf;a6tPp(5:pt.rmt5gjaZgg/hd"2VTJtQfJan`a6*p*C)^LQC[C&aH^f64cD;P%
%Gdoll/*h&>cS&P'/DRX=]bKJ"T6qV&0JiMSrSjGUZ![FXG4:E>[;VX\f4E'A0@riNp9G"IkG"_0\lE%haiV<QC_NaT^qHJGDP==i
%>Yf)JGQNEll=H_4/UebYLqU<181Se)ojt:Zs%#"QFk@'rG?'K#PY^S.cd?2FX,!/Zp]^YZm+lnlRIfYBD$BHePdklDYW5VY'V5[H
%n$XE9PI4Q)n10b(14@LtL'$hj3rhitf1VhpXA,A,?1H*,Q,XoZQcn^,^>eHb\@pZV=BUB!HjoX*-.^5>3,\MNoKCA]o`e's>K*<W
%KjEIAe*f/b-B_Y<^^=>te1UtNE!Y3[5NV8FA2?5E0rKb,^JF'kf%6YPmNOILl`0,N"A@fVk>A@s%#0ucX$YQT=.pXoZ1]Qm:dp%&
%JgOel8r%O]/LtWEi3#&H[H,thcr\j6LPHI&@![2@bDJq6\>7h?a!YH>^t8l^)IGuaXg^DTRI%-]nJLIcX?'RMnko`L!>6]A;(s/O
%2cmp),`updUsm*;0BBIifG5H?_dD8oJ\b`I9j7qdOQ\tE:8rCqGpG>b;Nu>4FYK1NM9h04XMn8'pLo9V;IU>@m^O!B<r?pkqs!E>
%pUPOR(#HXKNmgj.YWfpO".Ke,<X5V/(WN(T&$Dj?YL<l\c&?P\G?R@RHgOp)PQ^&qB90L@#J"X>g9&ClI>[EWf6Jqj2#J1V/DN_5
%&m[E>9cN5/C[oq\pY^t#HJR"nX]Op6AW'T+fji;V6AWPp=RdhTEnh,RK![]qm&\B[qB49#<5E_MFRWYM5V+GN'[duZNuu$.&h8':
%^O1"mH3#+f%FSCh4/Ys(r:P,JL^<n*_d&i1`S+Q5dG!SOLV/,%T$$2L9"JiklSc0nrL`r7VOIfmG0#*KH&7a=j:^K\`H`L[aY/Zg
%*8[khRX==Gp0VNiM^ku`Gu?_)0VQPR,Z[TrOfqDa6bM("iuYg2!W9qYL6>fHTsA:?arIqM8+c[E8Q_^15'?k#@4pj_HK'-IkgqTL
%&;LqriK]oVeV6QEi;B7R[rhhT\ZNoL"MdcF-S4SqUgA1$3)<j%/r-_A'kt#j5%ffXYDek@3Fma:b:W>p&<;G:>o+l3q:C>-Q@E62
%([pJ^!rZ;p?M;!sOgGDdgm>,/)*(\=S$-TJgZ7o,ihcVeg_FR*\@mhmY#'3^Q:eQL7s"mA*Q`kCYYlO:J5`gTW8)a`0*JA";/<=D
%9n#WK/tlbu_Un_k51i4I`ZSE?m(a?_R/a<"H:8t$hE^m=c4Q])e^haD!^usG[s`Pe:u!i@>=3ath.&c_MM-oq\52>hJGqI8l)S*=
%4Us+Tc1U1E$X%>1Y(E.>7qh"d!BoH_#pbP]W6Z0uK'H[C^!>0J,l.DV(\QdI^3K+5%<?g+RGObrKpmNk[\gFA5<KP0YDe:D0_t!=
%K-B0.G/F^trj\Y<l\nN5<.1=gi7E/jDY^Io-WJU&AW9?/W5E`>2bK*1c_m_o<*f7cc+Ef;*e44+@<d38dM\l"Y[&t[a'hd88H<t8
%PTKsl:jsB*(]fU9o/'q@]!3A2A"4@?d#3_E8"nIl>HTbs&F8*R47;18d^Pi;U:5'47/Q:E"u#\ca#E>c%5-Xd1*_h8BDZn/FNbk"
%O]l6UpSR?<E;Heabfj(M?0d:bWJ/q;?^ETKP4*C_DeQ/E#$D!rE2A9LeSG)J"7qHMbg0fc>.E8AY[*&/'dhi?;C,)425M/&16HCR
%d`j`YH:OM^G*%Na0A9))a:#&I%k1N(*>jMKVcekg59OJ+1T0LKReHA=BPZt`0>b(.'%rj"<'cq3Ti_mRJ8nWlP7aNF2u,/hgM&pO
%KG9hM;'n&)f@i6+.drM5I6]sS?Jmjs?mQ\92!kMR\I0f2<Wpg0qEkfi&G$0),J#"M\(A?2@qdQZ8"C__U1&>;lt+(/Oi^-#i2h*C
%4?uZTCKk]4fF4O94l.qIh(5@2_[I&ikN>r1jYjt@/;Q8)7sR*;7Ng^#&W/PXcTaMb$@aMjdYZDZ9JKAqqG;#ANRG\!n'1Z+T(EAe
%e';Pb@.OBVK?(Y!Zl092&>YMGJ]t,9m]K6-]0Ol0^$S-s0M8-6Y[>!"4b`2&UhGEhKP+0)K1&SF"E4@["3[FM2<J+@((DD*bQE_.
%7AC,uQ75]6)+8b?c]M,5CS[[SL3P='<H6Q@U@*@9@RUU(DhdINMV9Q=BWYuGBd%N))H%,,86YX!CGap'gFOcd;@K;fU+iG.PSX3%
%0j,9s*s&)s/S](?[?H,'8cc,j./E[1dKYQ>?slc$BPZ4=#Wtg1?aqPm,XQL?U-b>Lg,XK\NiHH^1H76D[s-46U&+jKMeF?hXJ"R-
%PU]X1*Xi%foX9q`&s*ZB%gbu,h1d\oGZH,]QXL`!^f!(L:#kEAi<^[A9<486)@#(FIK[JL"jQf^(^*n$RHVZa?oB%8>fqrZq#\tO
%XY;46\3$")B/g6n97<$)mSYN9%M1?8D<Ma8>B3\_TLh8P$"];)-8egZaiTK^DK@,78_(+)#3H.kor.QOWgF(m7Oc\6@#S`*(aPns
%6`EiU1Pj]]E*&1EaqH60A#N42XG!Lh$FB!1E&u7>HYY_sY6DJM94NV^6Xh'iZ6it+&<WSR,3^-_2Mm!^OK^Ih`RJhNp`IkP_J.@o
%H_X+H\^-n9fc.9`[6_$i)YABJIt74U1[9C)HU(Gi]7CVN-7e1L)nNK`]EBedKm!bV9_JpI9hD7@dfT)JbtGYX6*$sl;;WRfJC<KF
%@GB9k]ss</1IG\#r-j6j>gWRF%u&6O'QRol_6b$'?rA^me5)gN/u@D!nhHln.&p-6RPV)L$JI^:1Z3&4Y>o('2s-6sh9Hu018.Z9
%BMKmYAQ.\bBO,L#d"A*tUn0b$1$@t%6)7>4h._@`LR`P-[j,Qg)B,\M43V;q],Y9]\k#"Fb+G7n&Y5nN!$VL@lqEaE#.9:JZ9V[j
%8jI\^>#lU",6+[9IpYC<AoE+R+dhiq,oDC1?oWqsqC[a48Y+&>?uXUPN\#>[YB7*41DDt=#XSZpba]S,'^.@gmcU"8JT.6$,LAnN
%0!.:sF&OM4[A?ISoYbjH$5B,7;DJ).\$NBiAD;CAA-8U#C>hg9#868HL^%kgKVneP#gqGAPkZG0b))jU!mJaP@'>ToRFZnE9q8-B
%mM+$6"*]33Lb[$rT]M88CaVtiW_HL5OD5gbJ\`\L(?uYEhQnZU/I.;hT]$;inX%EL7E>^2?`qmqh+0FR=35RcC1183Cf!A+Qp)_,
%MZjQ51bRh!=ZMAaPaCML;p)@\]Mo@Gk]>+^!td?"'Tjc0GFSd=AgIX#!3LCL5LX0:n2L`cI#.2Cb,FRjr#gNeNWcdo`Dp$6dtF<[
%RbW&;'NOa+<Ied58Pqgq)+=Z]Z?"M"+bise3d;&K"<k'fSP;057IY>A\c6"O`%8S&0S216L,ie.LB4bi4Foi*nnYguRLllh/3<BW
%^_nO95ddLGftN.6Foa!?LMlL8<feYS5"bKSgc**kJq.86=cAT2qW,1K34S.K=2;6q'oRbroM?8d3$%/u:O@<2[[7:#H^IKb+-F2X
%hQ[feB<?&d;r+D79Tdn@b``O#0o*&AJ?kh\"^X3e$W86%$n"dgOTa%id'b(c+Q#51MPZ2!NB^&Q-:DZkeZmjmFk)jl$0fgJl^ngR
%7S.2_MDQN+ZmOCskThi8X@%cs"hZhMYkgp.2YL<A:!BKm26.5p)/=MNkh/Ni4(fdKM!eGV\d+il=Q9j_^C.i_r*FJ(mQ@3Rm\Bu?
%"i.`^d*0K^4GL&Q]N`-m<0b;VW2)12Sr_7fN7_q:;J3amqMAr\_\c&b,UVnq*1E8T/8V[C[\)*h<1"`q_.lK\[10AD&75Vs4kLjC
%W6c?>QkhWtIUa\E;jh'Xe92+sbN2FS;(rR'^N`djCZ)+mZfV6Tq&p%&:cOM0IU.'Y*)][CV(E4=]9KXJmHu4A)3-+IU6*"56WCNU
%>D[''=$)CTX)?g4,TKc;_NsZT7WB8dK&.B%-t'qtg(Nf*;rkm>FV0kO4EEce!QGTpj@m"U_;pH"EF=`61Q3#=]]Bm%_72+\(N5_?
%>JSfMKRZ]SEtpMkanW'>;GU2OD'=1j7#s6/\CU8qd':'E!*7cWE;He+*JT05H/-XQYj.1reN)$FhE*+Pd#B6u2R%^1>X$uPi$O-8
%__5M(,_Mp7mQ4WsJ[G%7=isCnKEYnd=!/pPP=nS);$)KB"i+ClNi66ee9C7pCKF72$Y:Q8Ubqp'oJ3rH&<1Q(f'#TFN\sOqOHh+(
%l57/!qK?>k=/B&QgI+Q>0pZlBZ=Gg"i=Hss.,pa>M!1^42";o2![2S@TdhF'>sgT\AK-c@"`ZZA\ZVD+RM#o)S%t)"Y_3]L^duh$
%o2;>G7-`H6XG3tNk$SkE%K6QeE=i[p06ZU@^NeI7L6MP70E(3(Dq)bnDU8j,['psI0#;I9W<HT^>]]!o>*ZAZ[WQ-a;$5;&GmVP`
%)B8)r2ZMU?r9COqJpDD&2sjK1<X.jEW`pWd;j#Y_7dN7%9B.WMD$"Td<l`0Tc[.TM1cl;h=e_A7K36C+MsbTiP`GnJ`1YZMb.NHr
%-B>3bYgGJVX<;_T09#)*AVG_a>*1NCIlH@A9D,5ZQ4bKI!'FML3(XF5>EoLkm)t65L52]-`#1IG,:`aTX^15Ifm^OP:aa<h0gTCC
%/rh#prT`9OOI#3mdbSq?IKUm?\VOMD#f9Y/6E'5@gAIg(dtVgTCL.J0>[%b/3\1IrrQ([f8U2h=.e$u\Y'>sMAd?V"`-0fiefFE7
%RNi="?FJrM)Rm5?dY4\ROK-ac^h2)i&kLG*5TnN5AXuh_Q<e<9#8moKM4k5</OZP=PKU:$3NMdk(H;Cl\Ri^S<F`#(s7!H?kd.h8
%:4a54g=1#+fo1sr9FS"&aP"dTq-no7:dF7.]\h;QJ.MI95,uCC_fZ(l:Iu/\d_R2l]6e:;5<8-#5lB1`irr_g1eCCs(C]VSH4\;d
%2$48`4t,Qi5nI0lYSLp:RhEL$:4e:_Bt)R=,N2a=T(j/uDs1;to>BL0pk-L(6I^%!(4Y`bRH1'OfI^d\3%K5C7iZV/e,RR!JNjP!
%fNg2.V>qXu)!n)&h2*C1#F&Q3+[oC`9qjRH/-m[:@[sua8$%5/)2>]8G\Q\+Vij9i(mGWB.L/^6VDHqV'CC+i(:t6/RPZT1V:a7q
%"Hc8%#=5"4<lr#YHSR_OVFQ/oNG2G193#3,%9O5ZJfIcY2m$V`TQ'M\`@DH)'mm,4K[-G_kqS'q7-aE>W21,87+PKJ:/&AMSN4nr
%6#<=77reP0&a+W18Z/^ABo06@k_L3.X3\bq%>d\;[ikKqW:&kQiFdT8@IZ$jq8F;1='*\/E,&B;,ZW=(E55(#3UM@%o15nn76#[+
%17p%VE3.<[rMW*b0^"*K<3=m!oK+T]2@[;G"ARTk\?Sp(*$od:jt@?,X'`9QHf(glo5eRRD"/IM.FkbmFXPZ$+5(r$XG/On4:Zi'
%>MLue9%@dk-bD<cDMk$&B'TqCEN'r]pi%9<m<XplG`.3-MCa+q?')9jWi/HTIK]f"S)M;63DMbB1mh8c-o9$ci!o-2-2.#Ng?:8(
%ZCK^D/&ObBY^/%="6UEV&BUj36t>)JiSp'f4p*J"i[1nX@/GMrH?"6F3^rBA,mJ\fFs9dZ\?9"jOj$YHJWoN%Z8_L/6KFY<>H*,O
%+<.J=Y9i:3NG]'[Z;1q*\bR2DL:JqkQa0``@\n0[Ssb$l[57f.Wrt5W>Kt\ZMaQ>_\/)*;,i`Ei8k/&XP?F"9+W7ilC!s=$b<jR2
%q4#?Q_<QH+G#F@c1^FStb=V05"$)t.3$dW]?7%QHoMKO>[F=h=ga>R$91>S+GoG&Kd=,jo+>gV4\^1u.#usB@;6J2D4Vm2Z/[3XG
%,LHD$53MN0r*[?/4Lj4/s/sL2/o-q(K8X#h_1cFMA5>-0I*jn'BD%/P0b@'mX!U3h-=='`E65)eADdp_ZR9T,8$:aDC9(">>Jdhn
%\jY$!p.p20_KG9(39bPC8]coe%K0`rpKg(p:s(]%=Aj9DmG_@.?d<YfBV&$2ei(cD?Z'lCIQ/ceiH]3'+h61PgMX)0Hha*.:;+"3
%fY'I;mc:plHN1_i0dh*9k#dTR^IR-4AWm?CHN??(L:f0FkRAXY.`hB'h^qiMQD[8t.u+a.ZjiBq.<q0L<dE0qL0kTdrn7EdRB%0-
%?:^j3!%f/Tb;[mMPq0t)Z-0'sMV(CM5a7&_\?\chhN\rLYN@;V';D=1`Al]8YOcYQ=YA0/7K9?;4K$hIanl)_r^Z;nNl@c,7is\b
%$YN^[QpNa(!3[EU[Kd3bk7a'bWTj2`GNl`82C*f$Am[0r*_mF;rfPo%e6?>E:B*@6f8boE[EdSpc1-)J3'e/^E_'2[.,p68Aiqbh
%M@Xo+!L=*N_aj4/(.Pb*Hl4a\ktHEa(+SVBG.__Hld#KWc&3rs\ILi-YSShe@f;p*PcoL]WUI*GTAKR*4n<nT?$G+_]m8GP2](Fc
%geG-\6g>jj>1/VYWf0cLb1Aqc8dV<m$!2E"[sYoj?G<B+([Ctb#(-Aar+,Xo@(Bju,soKb8b*cR001H*O9ehfjX+HcD-&P>2B#J^
%'Fr#r\(MZCKMtKq_t[`0$^?YTF+eXUMGXc6*_j;3bYUZ9DUN'U.S,F"bELBtX#9*in7D(:%>q[#QPQQ>OgZ:R'M^c/5u[iia&ri9
%WZ'rNp#5;u+;D,Ud2!tu!DsRON[@s]V39-.o*E#X;Yh4SK_,t@<f9%"N>AHF%cm6dX?8jU8Aqk<nV!iuZ&P^IQ)!9SnKT$Kc=.>u
%A&sH/rLg123]ZJ6P'/l\P%a8=]1M;KBs+I17>/Q70+8DNkXn=K("3L&-!.Xq:-;.%(`BA\PmTs]QHGWW,\<&iAL?oni%6X,'A`(m
%*`,<h7(1nU'g+[i,OR4_X.>us[3V#smtU\<D?c$E\hqGbA\/OJl-ZSWosuh?:9TO>*n$jK?3pU32?u4NSH:O7K%.]j/E&TcPak0s
%C+GrD#nl1We=t=sOF@iQ6gF"K+T9K_:W)AE'S@KU?U:H[holj=8b?)tq&0i5a_YYC[fge>,b5@Q)4;0l'S-H4c=KZTZ_ujuN$@TG
%an(Za.@A926K6-/?UE:0"]JqE[ZJL0."l,SX1Rr3,i]NFTsEQSjYB8=.&p/3N8i`+f;k/KFc[e0-Ck^(W%aB>A7WJB?;"$=9_#c"
%`3SM2SGJAclC+fAH^U"md"<LQ/$^_ei;E.3_dU98"K\>rT=nBFNo7Q)VAeaqdZS@WbQ`q((/5nL"PTjj(+61YB2RosDBkK$])M]E
%ROC/<51KN*LHT-96J3&Y9\TpiV%_'/*T#!U0E9iGIjJc)hJT,&6`QL!!`:;?F_F6-74]52m:Ih^PHB;4LOH;&?r.GN=nrGJKkkKM
%&&:W\s)c@%?W<VmRY<#dU7_>)bRO6CR1!s8=i]J+8Zdbh8Sf1`PWF-#<a&">4TYcI/8R6;Ut6oVR$2_6qRRQ',m.!BI0@"pZI8,=
%A?4bW1dn=59%T(=&SP8m[kGWC!)ZD9YYYh>MmZ5GehfEk?T3_Pa:rj!asJCV/)s3*Yli](f$6n1d;Z+VKe@*8CeM<V/!P0<rP5-0
%aD[7lFD@D=YgC5%?*(bM4,JcThRKM2=.FX$gJp[L@]"$$5OQm)7U0J:`@5!`8KpoVM4>p0k>^DK<%1IL/1%;E"?BhM:)))j5YeP4
%AY3Cge,$UCQr8#moZ3j&:M69p&5i&SF_qar-CaUk>$$ERgk*6mKaWl9[55m@UGu*/#QYuD*G+S]e=a&@ZGc5H7U4Y90<EbPT!`H&
%7m7'<[LdR2bsO>CU-e*^QE&DJBJ-Ua&*W/S)!!bdU$CEq]$NhU83'ndE$A>+=B!,g\_`.0B!rAKWt?l[7[]X>>-ijRY%uhoJ5af^
%qZdY/NjA6\7^M*QToXf?&4+e(H+R%d!oog,f0\@a`@P-X.$6!?`c'UOD%Blk2Us7'!5,YD3O[QUd/79c)Q3W[?"q\s=N<U"B/X#t
%qoRFR4*4ueO[i=C)5/+50[qRm"(;J5<3<f@`R/t'_;C3,SOk;,,ofI+3hu`=PXZ8q_X=ORHNnc7$BEW9oNB[,!:EHrMe%HJSS+"J
%;He\3bc+"dU0UMk4a!)niTXC<N^.q<2dqB>2:83F[7*(=D0AHaYiU1K9451WWQWW'Lu%o?q,Wfs@*f>%E&'m8&j7\%LDCJN+'EL.
%^fZGP3L+9S6X;\meC;j`l0rnde#.>t*psk4&JBA1Sc^aFh0dgHRDZKaVIPY3/\"<XNUS:a6D\7J(s:%/Q]5XpAk_/m-bJ#%4]ELj
%Oj-gY80B5g-jG<[jBcl,)`l4@F+)!*1X^d@0X'uDHU"!=N2Yi#"cO?c,_(hd?jWcN7C%,->OEn)>!T1pWN-<A%5We2%.k(@ZXcle
%P%+))WJBVm&D9F8R`MTka(&:e9&F*@5oK"\P;M"RG_%gfe4Ro[jjZ="BaL!c#SYf'dF$J/T?a\gmuDf68E7b,)pD)4pP;3kaD.-s
%h;/o@3Sb,9f8-8?6nDj!V2rH<\aDiR:EWN8kDTs>A\:@ke<$L26=::VbsDc')Zb7V(*-VrmsmS_/$t*4Vop?RY\E[YZXmUXq[?H.
%Z^r%MB-ao0'DGOO_Il2;".RF!!/F4@G0e;OV[g/Aid1%@H@Cg8&POG\cK2n2Is_\69p27*Fl^UNAU_k7@%`PnYI[Nf_P-uHFl3r=
%OmNT:"!d#eCr>.M+['O?WRt"84]29OYY-Z-B)L%<5.OX+o/Yd-$Ws'?>/G6?R:TIM)<`Ic<M4blW4/uRm"&E,"T-dUNr%>#1cNT\
%m5Y-*[>)T.-FLa2<f\'7[<,u\Fm$QSe.^f&k`,tZE-YeF*Ctkr1n#4LiA=$-&YVOEE><gPO$/TBg`:pHAsZES#I/(UH<NR5+jlbd
%_HM)t`+M2/KYl^LXj^f<E(`?]Jt.HA)uD3d.8YVLpsqI*4&?JGc:-1^UL6dErO_r_NA?1@Js[D+lEWO]Dr\KW?E4Ue3M0CFZKddC
%F-laN%e;k#ou1kSBCUMSf6b92]7^8a/+Hmq?H(LPKBK?sI9V'e-8;rrI1qG0me>6pGJcA3@N9.qk`f3W.@r0QH5)(nSFR]31oe$'
%6m-5f(1[g(q.a@G1I&gaN:p%bOL-(@8>r""D78c%]^FP;h>Nt\c;FL9)E?NQ"<SId8GZ4b8S(E#E=9&3!/`nkT,;RJ.:]ZT5A"F,
%UL2*f&1^)ChmmbfH5[AJ&^uoS;?om?0bneYIno]"^#g,8iG$3J-Mk$SXCf37^ZuY`\Wa5>re3X_<hm,?bHDi)?X=<RJ&7cW</F$N
%b;62W21"'Cbgdq8JK(-EL-pcc*dB(B_F)6nPs_WB>cZ>t`2I]hjs%;a1$Agh,VJc+&RU<PUGfn%/5;=Po/r;Dj,>1"%Q<f*5D8=s
%p/=(:md4Wp5kTKD*<'>2l7Wk23Db7tPr`cp];`0rd@4">kie6Tj+)3gO1r+*GO<)Irkd3^GccCt9)>:&T=+XbL!;OUe?eDNR^Zo[
%Ga%C5@5"%.AJZb=)m%Dn,W+DXC<I#I>HMX#XME`3%.7\hIt%9rIu*qE2NB,29P+7;Rmc'se5jB1Y>r9LL*c_%TCM,(;e*g-J"W5U
%#SL"HiOc_B)T8RjG(V]68`B":?jP;u6@T'I6,7Zs0>$!qi3^&K,k6=B5Lus<<f(EpfCV%!BC418QoThV/VMBA5YPTp;^o3JLp,P(
%C`qe`=U[Io:7QZpUa9]`-aFM8P>&l6G&&!DI[$+YAX5F,n5c:]i@-Ne6BR/,6(!:*D3@jF%.aFf/=.^fMcGWl=B\#7"+^&9e$pMo
%0$UFc/,A<Igob%HNTA@%4p<SCpd.S^"KNlL:bfT&WIeQI"o((Lr0*U_3?nmPm@,V;C*#s+k[12Af8-_!c-"sHI:I,8&6)G$*eKW_
%bP4B2cLID`&Th]^4*g8R+_qK_LT<_h*^K%FlJ_B#Ut93:NY"Y;W#=u`&"Z]O3W$3[6ZmU7f`Z+)[!1M]!'6]p]0&1kpNf[^M\pl4
%4oqN)0.G+_%?*AXDKL]U\_=&qF)n6i0X1ml,au5iRMri;SRG'F*8^sWmAfD>_"apM5ld[S2[bqLkZlWTm8JKjcc>[&&[X'98>ng3
%(`(!B.,o%q$Rb([Fh3`7o+4#TIK4t93^p&kH,+5*>+m*_&FS_DCFm#//%;`'^uft`0=+:9+dU!5nS@d$34Wb'SkLe2"8glD<&ooW
%P?l;qF'$G"?la%gJBZA>eUo;.Qj'g/;qI,('9NNX\NKr>ql5@g[-3d>C(AHP#Cm9m!">7K\P.I'bbLIg?/NQu7)7R8A%eFY7,*Ys
%X'I[jRpZ`,Ohi>j5k3u@DL`ITHO(Wil6g=d*_DOGn>$LVSmE)b@pA;nnpi1P&bFD.'CmFl]ptXYL!9RCs#4RiVs>3kFI-f+if)QI
%Y-^c_FnmpFW</6G\s1r03":aDKA"j@q*W:t!jSHY5,oCC&=DO<!;3?d4Pd;=8ZR"P'YrDA1mT_!RV'/7QA90FdV;I:Tk<&ci]#39
%XLgPnl'`\#l]Kkr&=e8!HZB`Rc:i%Vjr;#&4Sc6OlZmTF:f9^ejnX=)=F]c2:IC`GMo`ogVFMt7PUb^b[)?t5IRIUOQCn1C-F,bA
%5q0SrL_@NX;7;gtJ<hF0^UV4=A3q%FV%7"!TOQ_aOZb0t(W,R_7H9#_2rp>V,%m?cNn[8</0rWN9a6N[4OW?CC(hU"52DK@FV:ZX
%JT;?A)VW./L2@piFcYD*L*@(h6r6O\W7+e9CC_('C(6uC<OjaG!"pn2GZq.?fT(DR;T[EF0ha6"h_Y"BNG9]idF3h!,V3kZ7PlF'
%I9KmIh%IWXOSe1G9c'FGMNaJ<RQta%h-b9@\h$hiUEc*+R0L+3o>h9Z"qn?bP)*t#>fAVUUXd$?olYu<PjF;NAlJud&(XjXOLqN_
%Pa&\^2<f%)5l7AKK8A;_gB6E1jL`0?g5HCX7*.L7Oj.^O4'+g46G[EUiRIWJ$*2M6k0K*B2apUT$l4bPZKu)1f>*[qVOs#\]L(lo
%:.=$^*'?,ub9tbIh1=JrhB";m%,A2VfO_8C:*t4@KUu!'`/i!:TL;s"H%uBoY`*6`X<io*[WC@Xp@cjFcT1ULH\A&o765fF-k/QF
%6W_,&Z64]Tl5K\]-^YBqAQ.A0m"ZC0g[Z1+dPhYC8@lk-'E5Dn^u%?2AQ6p;Hm=uG/b6tp+dbN%!*o^W1"Na6G*/O)Xk@_.2HBfp
%d@B>'CbH!EJtb`%kNsDr(_u"\WoYe;OU?iBfkk[5qaWO,du7baNHh!ma9h/q;6>ErJZXjGI3D.tVqD#<a9D/F(i\Pu`K)5CGdII/
%b]B:fs6'aoX(H3]eP\2?7htVLWOeHs(e4?f;%?XL5o>*7I"e%JK&nJO4U#1M6o#eug[Q`BahurLSDh`t,^2&Y@<Oo*nr6V<n"OZ<
%@RDi[^)pnK,aH<mJposP9WIk>dHj*-f=*3$cs=DGoRi6q8):NjXO'XpEGoO%pI#5i0OUfR@gIBUL7$nB3O=Cno]kcIKdVXY<U@*u
%ZO>UoH8oX(nR%1->UUlM*(">#GAgkuG&Y(_"tLO-38P[8s"q.$I!0EFGo^%&/Dfr%d[ZCrNL.Fd+Rm+:Nr*1QrqAnUYE\V84MDd3
%3&B*.][4R"^puSQ:IA1[#h+p2,!T.A0r3<J(rOBYFF^u!:)gJI35?[%^o>,&!2T08Gpe@("4RAnNNh*pLA0FQA`*`@?Bsj!rEt2K
%ho#+m4hoEicX1!BDWA#kY.NojB"RKQbI2iUgp,nS*.rH<Pcol(HCcb0mQ?E"cDM=-:T+!,8Um]N/pcQX>@+A'X/<ICZY-+YPHlI[
%-+8MoK$X_5>hgFWi'-F/b^_J^O+#i&i/7m/n%b$.FK0I@kGWlh_njSf6'hZdEW[.N0hBX-VWoF/*t^0.bLIgWM8VZL(;.cr_13C(
%FTT,-J?rkI"[$@sMnq\R^>sXA-TRncecYJK9uKt+<c;qO_0IG%]FC!li\%%-QUIi+&dl'LDc&*B.iF>gAjkYEkFbkO&/cX9AFj"[
%G6K6CAMFh_-V%SgAI`r7L0:J*CP.XS2WfT'JeQYu>'bqk88e4bfEV,8,?hmfJ4t8q[*.i@(#[DKYPTEWacCDK.S&;A/'g_EJTjf?
%GA38$&g69QM=pWK2(tgK&jHN-&QBt=3Yf+ie?+fO3fd9)c36]XK`f4[#M,5\!ML_U%>':kTPX2a@`,YhH+M'UP6T-[#VaA26E9u]
%Ce`OeOOsZ(NXY1a'%R%'n+uJ)2OVDMNC/#]4;h=\2\+I,B8/j()"*.fMp8Bt\1o]]pDOi#@:/7>%Q>VASd8@7:T`TWS.1O_\h*.@
%DR^L*aHm)f#0B0AA>8<Rj,:/XG\[b>([RWs$60*8qX%tY*NmeD49AdomD>6#,hpZ1+Gl"44];G#<?s2)nYBS*=!2[2H&Ae\rMgE8
%WXU]35fNiYr#79o=WD$b+JC)k%r7t/<FnY2)\?Hi!t<m7jM\lnKA38tI:GR_M;@4BPHs;0j)(IMqi]CD,&!kFjji7<kBZWF&9&95
%J[CZZP9o^iaj6i.L&Kl*&m%$*GpOM?B4)<[HE!5#$uBt#GOmsWiA#qC%32>mFID8(U]k6[kC8R;D;VBbIrVCkNUnh7\1+*Y+j)N=
%Q4cTi#iLr@6sCt)g#'Ri2TCQ[WQ$KN%!AQGY?KNL<i2j/2\nA@MN]R4>^&Ke`\KabNoI0HDY/;9JCadXrrJfR*T:Ra57#riKmA&F
%pLn>A2)]&2+La>[E<q.-;DGJk^j:K7K(C<Li0AqQQYNdq*+246GDiJ6Vm`BWLF:pjQ)R[l"smZu_aJ2-`9#burn-rB=k*6h*!cHE
%p>S*rq=sXh48V0aQTZM>*)GkrWc(fi"7#Ype:YVK_]]<q3LaLt4j1<7<R)7\q=mAN"fMOD#!p]N_+^"oI]TILcDdc#J7Zs29G*2!
%*]\%,Z#N#XS7H"P:'^,)_c"/0km&k5/O6gB<$@XH^ohpDglcK^"CN7b(g[nm/B>U9FK6&cN8bo,jMU-VLY3P'UieW*^V:CZ6?]a(
%R7[GX^HN)7JbqhNWrN&Dc8Y1jlU-.!E%Sdpro8c:Y3.Hcs*GX<ncqIhrpp"tO$J"c3s$1*\2,4ID:ER^h#59lOdu:oBh"`s7u:n.
%TFIVTfRU@rarGjRU3!3U3RRn\BBgk(63&FAJ0g/!L8ACe>)QXiHQjZh=#s_Lb0-IE$E+KjeO>q+m?(#OW?IcR_jL_p^F684[qf"E
%G%OVt.^!%Dd38ZeN<'?<JLEe[1:`+;#m9Qj:'7RaGB5I<?Yk`STBE*%E2n\lB%1Eh'i#?g62-!8[&?FLjXSB@!C9%uBL#^.QN@'K
%C`k7.751brNCQ7F,;0EbIPf`!i.]^0k%_g7XEE0,B4kV?I][Jn;TC'3*EBkq"rg*F/SCN/ba8Y91i37F0q?!Xh=@:@'9kd:'P9cG
%Z[&8V\::jJONCcQAQi0W;)Op0dFUkMLenP6bBrYQ?,0/TA]tSa5h;*ekO.co@P*=$2:r2DgY>5q+_pKr>#oOdf84p[A[[7iclEF5
%Agsonq6=Ma^q5G('W?+bI<ae)a(l'KUlHh$kedmiIM,88`/W/41odS2b678F&kQq/Qo/o-iX(W2_ei#5JlFK.A!irVk-o]aVOrpG
%j5,G-5t@R"7Nk&#cQ5;K@eBAnhb^*8OP1rH"9g?rGB+Vd"8\2`%fBgg$mY[K=5gMJ%clZk-6Jm>dl!oB"WWuDPPH8:rX94M8D*!6
%b'^Chk),/_Bf>2O@R59Uo->TFF^^HY4Nfq$o-r$'F+NgGkE)#q(+`>`K$eJDPAl3F+KA@'4!G8H59ue>GIC-IhE*)Ii-`$l.&f(c
%2L#P/Z^Lc8^UjIYL<a],n.A,e3*UYIke^s++V1ZNW`!Hr:0N`6\B[lpXWq!\As"*D8.K&R8217R#-JErR*,b(!acPCM`kPcZ,sk,
%<ei8J._/$F@4Ickf,n:9EgCZ8G*^=R4U4R&$:1K4=TNKj8;rBKk\M_9p)"?nWu_**$ke)&]k]eD4%VPn1UrUu#_ohE`/;>i$(2Y^
%5$Rjp&])N!];D6!DiX@Qn</cHieT7=8%9kC(<dU/#JoFT$Bl1"PXOe>BgiRgepd<0W!kJ[p7?MJ@&di"W03YIG[ZN)Bp6)]O@WNC
%SB7sL:/NCF-0+W:lh[icrr_lAS'NF`-6qdr=o[V_:<^G3&3K)XlO[QlkG?WF77X2/E8jp'pI[Z6!Lc-.k_58(jAtD'Ds@^BT8Lc<
%9+rne35s^;@gTTa<Y_Tm/`qEjF^QC,/>d@flk!j+#)&bnh'gB@/asqg7"Fr\?PQCIjS`e@;5?jbn$4#HGKQL^dXs<+44:%R,L-];
%ojSsQKrJ@q)DmS[=LkRJ@':W+mK!b(V5W7;;,f6b/>=4P5n2]1)#?nfHKuj,Tou:@<:^"bGW+"R:e1ut-[ma/kml6`MY2>PA1aP^
%8)t%<4U1AH)M%<RP3tSe9u[e5oL9u1Q\Q<FWqbBQ`'J>T+6,b66Lc14L<EUm6JDhhK+1i&#MqQu874b1Y7@.Dg,Wq94M@ht+l#s*
%Ai_;1gco7`2@[Q[`al)H,Gl@P,"Dd;h+:pf_T5oNCq.BkG'LGrPeu+\N`@?`":NF#L#J;lIO66Lfeq7#f3rQ$lp.k40]qPHEQS_%
%0-de<M\>lKf)M0JN/AoSObb3(Y*T?&,4cog,&)D;d`='akmK:5n.@,S)HLiK16+IBaueN;__k+I4A8t@Nu':K#=NfK%2l0VSf]`G
%oPT%"fg+C@ki1"+!N(@,=[9E]E5GpD6N`K`D:sgb`ZZTqN.^E"bu&(#!AGi'0].csATEI>d;h4dZ\[GN4"5`^V%a5RMKJEVJ.s8,
%GT\=]VGY'hW"B"B-F9rc>glLE:TeD3;H36SZ1Ptj9r%Ng/LO1RdrD_OU58U6cC!NZqRYo;P1YCahjfiH+$R""@$!)45Cs_tQlUsF
%To6boY/0H6Tk["@7s\S_]Jhr_$%h.cVb"_0qKfGB6UIS+1c7cD@3:\H!>8f&D^og;"hL>%8#N-YIP-raHS^""&p<H[iXB_r/=>jn
%Aj"6>UI&[6p+*-a6[j?C]L!s#IfR%&UJ3ZP6,Bkh:sB@E/:%$SW+O<B7BAWL(ch&hBtJjh$3hG2i`iEJhEubIPXtEWak$>Per\hu
%^1segq-/DqRCIsAD)7?!frtu8;3V_im<D^,=["2k"CdeAEICt3)ahj-$8%#<@,.!_'!N%%N2_K!:T>TN:']67Od;%8]:.IUC57Y_
%(3EA4C^_ET):gfn8nX.l23J)P*ar5+qTXr4osD[J4[.grTpSTp6)HWNFDio,8@tOofFR/9$'X6-kr<1n`^:&(H+mPdVIW7Bp'"!]
%r.XPG;G'4sPEikNQ("bll%tq+>IA>gXbdF:guf+'e,02WY7%h1Fd*;+fadb+RiMsk;+A]1o:=D*,a(EO,TuLr9l5:F*-2[imOaqm
%KEP.#M[PN)@A5ai$;*3"8<TC!+QFtgOTi_Udr/to3#+>F&4Xsu:?-/tdR^P'3>07K&sS;6Q'3?;7DMO:YcmECP_aOV;G^Gg6u"Hq
%`/H9?#tPmVo>7/HJP^coB7_1<=5O*i"UJ9qLCQ7<[iT.T@VEQ=5!B1-6_^B,l)se9Z/#f^V=DmRF16/X/<?%RVntH2X.7uZgo,0Q
%34(DaGB"dRj*QInbCVW!f%+pu'6&+8/u3tlS2q0(IShd%pgm0bQ5J4G:m,(iCj^U'lnW66'4e5MPn7?"fF`faF$cE!^ahl#qO,Ur
%E&*.hhG80eZq)9sdf13i9DEPZG)!=r;DHl.=NaZa&0c,:%"ujnOeo5$N`S,M]$lG&PC1ehBbCK)-$q,X+NOaD''i2<Ah+t/%7L=n
%`L%PO=N(55*S$Fb'54ec7-a);J;420COaM%EO&Ki2e?Q+MDA#B;amEDS]"]RR9G+0Di.`*AaPAEZ:rJB1p]'&7ZDg=8=Iq.7CsDA
%/309I-Xn*lni/3`FTNS>&#n+HgX(XB]POY,*!I<K+.>BjR0>-R0ORY9634[ML.Zt6M0=[g?;9O2Ag*:=j*+E\!/&W?1M[`A+TB_o
%CSkr<mqA,]9%6,J_p<9c;ob6OH'&)_AgVgq3W-<R!Ym#hGedon))L/:JedC'aUgi5)b+>V/?Y*sk85`sBX\ZiOaH:ae!NG:Mk']V
%,jsu_L.%&hc,Mbo3ClFLrh#auK&lQ`d5/aT!],$[`rW7\*+WA<l@\[4P[$s]fJd),\i_AaVFGN3/ARMj<hL<!NdmEl<lf[LFjV_=
%_%G?OZ'[jRkYX+s-'Z/CRY9J#r!E9-\;ck&,,Zqb1WP1ZO!J2o#RPW[fR:VegXnp_FH<,3aG^O5W433kqbBA"C[;X/+eb/GVYi\X
%F7_1B&Zd.K0V(=!'P6TB9I=O.O=38Ii[=KXBT\J!&&'7IOd9ecae7M.s-+.>!,*]^8ugi$T3Tn7omd#>_cka^n>0?rN2#@65)-&@
%r>lG2XZpU?6euNHe^<_b0g->l2.ghf:00keMWWZD"Aps$FMBN!4p]5+S0gRGDA*p'bs(;,WP:m"Hu;BY^<0=B;@SMM$.Z>G<TE:@
%19&OkkjHI8'C7DS9UZ;p]=I90<R7>.T9Mm+.4*FiSS*_dI0LbPlqEsSVp@klK=_U2K1@i7cjhXkBg<jG[?@E8q?OuL#pHXGaUMl5
%g37;]e1jX=c5P:@F?62[(WU$!6(N^$7Qf]p,Q3<4-ml*+(1<*1U=6Q&_Llh4,pqHR0<Vf,?'.Oq"$";F(OLs1X1</6D<]0qmaa6m
%S)']oA%M'C$=<]I9ld;*K,H'gDO"2&N:3ZY7;F=c;O>Z,c%.;>irrjG[.-LP`CAj/TGtkGg`5sFTqHpI7U:g0X.7WJ1nk9o!eEkB
%qfRu25k]o">'Y9aXG]gsF7;2R"IqoP4Dg9(@qrNQToIss&g-pP'%:`2Q*e0$R@((]?%XS$>/eG='Dm[R.]5b,%Bj7FYL,8gkqmR9
%(N)[q9U-0KO%O7hcAI#=!fhIjPKoU&KT*r`^n0c/ZmPm`%40;'SrK?>Z776adiB/$i8[;]_lXNZP4,-$h+n-k@,se=.XZO=hn6Q2
%G=aUA3ULU`5U!]9KkAPHZtOJPYHc+d-r/n4OX(<!#!s)NVjSbPJB!b&iHdCuKp&\CF<GbUM'P8\<K6j1.5Nu8SM3l6(gh8+$8l,"
%_5b?:8d8Ze.d)[H;qs][`\+B^YO<#X;8qGY(9l]"\b-LHV@e6KA.W,MOh`@Rdo(?ECQpZIO"aN=RQEatlR[NX'rL=i"=5H2:m/+1
%hBL52jEqW"#E^lO<.F%EiH2Cs%iAiFB.BHV(R^k+jil!MqB?iR2Vj_G4LJ\qkn\2^3:$VL<h'>=\2pQlnMA?sh8usL#h9tO@dH3>
%hC.@j(Cf"`Z6Y-]XYIX*Kq_3;I!\fn/:$*Jhg5Y.m0-64s660Ule;t3/UH0^]k<0h`fUkSE1/`&_rY%4A$\&8+$+T*U^;aEUiC@[
%41RV>*Inp&:Q7iH2^ciPg4ODXLS56bMf;psnua%58Q7a9)6*jP1hH)I9hD3e+\kmGZiSdLjuOrrcEtPb:Yh8RcK'%Ul3u&Z"JfnH
%0$J7IfH]t?Xo(N7!1Pe.Zm;KE5:"bMiPsps7N2C#h=S3E5tk+if^$c4Yqi0h7MT9fb4ILC$mVOFjHIt65+^c!)9[?2%eCGF:PC/S
%Q_E40"OFs^l+5.G_PIMT?Va2bqM;noW1Z:'5Cn+Ye`21%bqS"DQtR8oQ`5<cCQRub,to^:q<+uV/:oF`P>!Vtod'HHjh$XRkrqU2
%]!3HuPh,JkDjP7(Ic_']WiF@mNE)MW!hD>c"<02.p4qCal,s9,+G6`k;g-&>P3FfN3$R%L$W=<ZWcsl!Z-)m>[Z?*%>o2Z_F^75%
%W;[/p!^jb[S""SAq)X8.OAJ$DW]*nqKS4D#nBfD%?sLBD;64#6Q#.@q6QkU2'R^l&RU;"ni6CM;5V`5Po%pK;eh,&THPc=(W0[]s
%aCa6]O)dbq6\>8E4e!WpC)NNn;=0P:^NYX[>`fm9k>^j&H+K+0:p=`+p`ea&Qau6ibV:d^]I@"?@?G4AR"?D&STjj3g!qAka]Y"O
%5qT0.:3YTg`4!,*ip-u$n!(*aJ@>]F?anYg8)nbN'"dgLb<,d<N)!"!lD&?T;>h$u<@#t..V5&#[`F*oPVVXd0kFN4A_K>E9P^Ft
%B;A46NKgF()4:$]AkdToR7]naGjBN'h^E+u")V*$4_IqBB3LQd,hWT(VI]EoiV>0=HIpN+6dCpq[;7+HJs<7/KG&urW\0?*j@l$I
%;og8tb*hD5RJ%5;Z9h4<h,;%1BN!:.WY4.LeQ,(AjuHH575L;)4`/rNC'/95+X3dX-&hUlQc_\nIeC'YgF38j7*AN/@UtO%rY7+&
%Q@%=^O<]pWW^7!G2[E3s]o,qp:V0PJ<-H<c+AiGr-d$s6_$`e[KiLF0A_"&<$rOZ44kXmDbHiZn?*`q!Zh3ND9=n+^AX>QkF-!'<
%@@:\&QW[S=TUtTuat1eibd;jKZ`rJOnh3afO_3YeFd="I'bVR9Y-ZX*?"`F#?>$f:SRml&3_OXeKdg-T=gmWI->q=[O6ScadDHTT
%7>/)N/0s`)<%09]/;sm<BBe5pQ82]XiLW:/QcD-[HE=HSW3aP`Ho2h/^DUecS!baUVS<>kJeW$h`bE>T[OI"mPA;_56-GgEDtk#S
%9>lXt?][/JU5XZUc-7HMg<,-sTm)g*_*T"LHgg2PIX@IQMFmdpM3h)SO?.S@gY%?OaWj;j>Y_qf$71C1N%8P#U&%\D9JWuO6ukiS
%"o(T\,<$k9#]ceY!X>n)ZJ+;ZajdL.bZ't^:9IJNKCWL)cEFa4UMG^L=].Jb`c:-kpAh:"A73r<!*uE,6#id$p^,SbAS?HNs+cC3
%?;/hO*\tfKbhM^fj\GJE]+2n@98PdAREAK$c!k8=Q#7`.,k=MQ1Ed?@,,nt6K91T;;<+U"J"u(#\JbJ13OD0:k&qYe`."#N.PBI`
%Up`WC2V#2`FUJb*1@k+1[J2XLH)5#L8iUHdR&!om=5llWPo#-S,52.+GZO5TKchVSY&s&AA\fPOFOGn/4m[$:Vj&bD0@NQK*W#H]
%[Od5DKD$;gek_dgeG;tQrl*Q8I>Fat;ps??S(VuTQ^X$bL,6_bFiYl\lbu?geueeHT9g8TF@dNml2q"TW3h[sC>Um`X^roLLikBi
%oeN_tTb]GX?a*GHdU0AWPVM/&:%1;5ZAillXVnN%c1tXsTF,a'6X*+(N%g,^Wsgae10I)X7*Dr\/=r:[[A6I_Qk*ss_Ci:'6V'E8
%1cKpP2SXO2C!Y\p2K.WbUb2V)REjLpEStB?oS5*\RW_f<@BuT=qYM&R"Q3!`PpLoK\,p-f*0O\4b;kedo/JSRDIM*3k-0Pq*#m38
%9K$\C%4*5PH<+#U(_6cN4fTZg&-NFncut)@;qZG"V&&"u!IGY`%r8(,2#i49BuIoC;/@l?ofuMM%mdJ.oo43Y:4[E>TF)=I;PB5'
%BP^P`WeBPoH(#p$7XAsNR=sE\LY/$@B<sa4O@QUr?5Y0TfrA4SD*)hQ^^+/]NLGT@naDX3ZFN\_IfpKJ-Lk$5[PHb.gcH0aH8e/0
%=u%Ll8s#EC$mf[WTM]>C:8ir;k1uBR_j0kADnWmBC?Q/tDHp((B7b2X>+.;4:]MBh7ZG2L]Uf:Ddo>,_R:.$i8(EaLPPZRQ0?%BF
%>#ct7#?+W]^[1c@85Ui=&?(6^3cjIH0N5DlWA8nL0hR`kKDl"2b7%R4:DU!i094u"?7A*JPJ3GZkeX7t7QPpe@HlE2TFaLq+$+Y4
%)l%.$3M$X6jea3<TInt1>(LPR#,?$]&YrfqTi&L&%$*D*P:^/_k#lOjBP[.+0kreGTM]i:hDK>?H.Q6A&AO;&GgbE@-:TZ9TGq+&
%<aj,9&4@piAe3^53[`RqdP4,r48DJ0IOM9%W6SD/SDXB=[4ri[2S"nE3DkA_.Vo#AH;Qju\bJ?9@4\GP<aJ1n\_5&+5E\V\m]f&"
%kj!V?6(aV^A]?ih:]R=2RB14MA_Mh-kpV\]PXMC%^LBa(!k#O5ch48<(TkM1`gNH./l`u-Vc\IX<(lkd/"j$&JmT4l7J2(u6sLd)
%<>4pda`A_D/e7fb`X\J#qia#c``G,cEgH:07&\NEL@k5Kd9"gN*_-)XZQ[_,_]hbJ7D&l;D\;?8?##.D1G2J_,Ur'9F(!PJN0j/Y
%&]?EEL`T3DCD;3Qibp,m!$=ROD2KK]P4*[PIb`fO(3hE!fW@0lGYj)EN05BG.(=7Q";b\^b54>i_UQnd']F(fBjO:pB'HHp`-M?6
%4\g/2;Fi[5166s&h5^s+c.-Z(]G(cn/^Ydc9;@4o"L'aD`1d4Tptb569/m*YVHR1PU-K)aX'.?*X,?<Q-)E/(d!^[Lf6*lS\'*L'
%PEeMgFH>^FU253MVrcI/QWlX47s9reCt93U6l`eYQKeGp]eJ2\5[)OGr>oEN#oCtS&uoW3#n=5(NWe^>MMf4<BW=[*P6/rs:#V73
%>5bISOu.nd(35o$%.V+M>-^]Rd`Kim$FD+,+b-Ypk_l.2J;$SJ+XbFh6a>=K*UMSK)QbdDQCt(`eMOWJ,uOIi*(4]MN[dQL)*>qj
%'+V_1gZ&iDicO``7)KjA,I(I8jWLkuN"VTWj-$fM>Zd2K.&XeI`Pt@]oIP[8p&J]$VBQKNb=0l%UfULJG"9/OgjMM5QloQ@S]+$<
%3b<57J1'$oB3!j!1/ZHOCW%s[mC:SMRh&-V=[@YDAaoZ-r[dnojRih*l!J6Qn#5:,8Sd4,pD`aRie)]+e+r=0rQhY4&\)'l0W$8&
%fU)o,DLF!<,sdhBT+C((R?K:GX+qm5%E1DJchLZ!O1CZ%ZO_=0DpgO>HMn*Cjn_QP,J/#T[hC99<:9(W$ZW08(Ees*Lo2\lBYA[O
%TP]#;A)hh:OQ;:n;fKht8Z/ZWcHALYoNBE[<uF^5R:5q^P4YG-Nh@cV%6Iu>T;an_[%*s,3=1?6Bj-_Oj@qo-2p6A/]][8Hja]ln
%<-bHfoAR!h;D5[:RR!5A#[p.RK,'pc1sW)s-6MZm@l2%1+7YWJ+K5sdQjI!2(eWKu-(=Q'iM7=,QPEfKh6AMo&m7/;'o.RX!4=jD
%.?T!T#iA6=Mk,<YQ]Xsa)KI<UGO0/oOSDG"H"siD?(fPlAfl>,ZU]1-5V],^EMggA5=;uM+Y/&J270\>R>)VOE950iF%EH8Nj_nL
%Wu$EB\>;k)8n.05LB+&\T_a;H&TF,cFr8;HI^iQ=,e-QRSBTX,g]BS.OaV!W0@kqDEuYSu$4C\E:*Y3cAi#Z#i_bWAJ,\@7$$&%a
%g$MHOYqSePB/_/1`7H4;JOs/PPR/hXf*](cQIK3b.:>n:TlmU`;H(I(.Icj-2F(_DY_k[]IE5A?s/DkL8A2l^'lTC)$53[t]Y=%[
%rqG?s@lf;VD$W.d:]ion61PjB2UEmVj)>GWF$N_4?D6%ALc1>DQQ-esqAo\uN/FkRartg0HZ(5(+nnA/IlfmN:QKWSWC+r]\p0](
%%HPltG.R#.l\5a"'%QRhR2q,qj1=juhqIFe]@"MFX/?8,)F+-5.p(b>_Ms_6e*G+'=f'G_]+n*'+@3u.<2[g;Pgo2nEXI)I6\AR-
%%HFBZs7i6mQ_ZOdDPtBiJ9sD)oFoVZ=OEI@_q/:O5$)`Ys&J2E_JGBAa(Y5$Wk"D@_N/14X*KJm&e+jI4PTM7nseT.0p82na)W[o
%Q0c^+L(TIrFThFEQ$PPBO1)R+Ln:*MWt6ClG>@GW9T'?H?,7F6j)_S]D'':lr'Q:\[hVLS-+X[mBW#j)H"R-C5!jXlmX5Z9KQCmm
%bD6.#RAjYa*XoIGWX(b/hCXnegB&h^'[+aJ;1&j*74&(R<Ck;aNenTjH7<[ea0WJ5!jf"b-pV"a/3%OWq+c`_a`S1>41[4\*bq><
%C\KN3W.@=2"C%Pi.p\YY:SZ:;ohRr_Z#J8q<,HH6P+0.PgLs4(aj)SYn#fFpb1f7+N`(0dIEIG7cnUCE5^-q7k?/!#8k4uQ(sbfD
%"h=nnTkJh=c\sAu\7;?%aEL=/qt4Pu'T,FMIQoIImT/j9eS`Q-nHYaHlD1#+Os`$q??UHLns*-+@krG7h6Z37llI.PYtTb07RjAJ
%,a]!<M4Ml6Q0,at[["t/j"anq.]KR3C\&/.V:.d,=C*L6MUhMTg.JRd=dA1o1[+q?9BV5F=aZh0Y3Sa"Q='L_T>%QmT1N#"^grhD
%k6%L&$l+'!)%?Nf/]_cWX!WOMORM9h<(6%mRfnadiMKTUht;2p&4h81gV7bO\bSMm:bsO+3&T/!iqUMYZuD6t557U/;lFp@+<D)A
%q&X+@^B#e_N-J.k98Xqg)gVIg!W[Y$iSTHfQ\,u?!u[ekIaG<l@NIg4ONE]]-nUL1R:Gl:clN?/jRpYU?5ZSa*Ue2A_)\8$7].ut
%AC'!\^K@In"/\T,,sF$TWrXrk97M2c4du=^Y`pSkpq`GZLt>j&9?'D;>2];A]1-'s=]m`uXMn?]Emkq]4>g(JNGgom#&2&uQ_(I0
%e<dfG#jd]NZ[D_P-JKCVp5@n_*h;Qk@XVN80f8b*miorJ<<9Oj1J=_Q^)Uft)gB`Z#4]-IfM(-[:V6%?Da&)K^.F5^+BnF0_&eMi
%Qc&9<Z(A6<>_!l&b-1ilW3Q\B(Xu#n@<0_aLt'D%(%jUPXT#hlo]%iTZ'eqtb*T='ih`8Z-P$,WF7?>NI'O^;f&bQnKlQs(ZM8kp
%;M05o`Q)c8gs*![rP`<f.R<9@fPD6:@ee]4p/u#!\gLC_H^Q]bHuo)']WR$pO0;@U99\k^E4iV5--?_Abm^a@fIO;[j(m1(QNKR&
%OY,8_IGKGDpTL>u0:Y+BP$sNLkD?I_6<X`ZLcdANBT@gP3oM(C(8^ZL+Ja/gY'?(O_=:pm$Ed.knYA>=J\`6D5FIi<\L"r<Zo.V@
%"N7kIc8!IkF-O4KB\B212W0Z_aEsJ[epWcZDb,2_#qCI^gI%dD)T<24f;O1.p>,s%K(jr;=Dpri56T&?/Asa).(8F"G/DTe)eI'b
%^9DKB;iLgG<0l6sr^OV-1,WaBM@^%VOl+jGA6VBc-1,1LV^smk/+'[Vk:mZX5Kd3j:l,_BXWBs?`'^a/p+O5/e@Bhepd],Cf4?m(
%m.4P.pGTY:VTM5?>16lQ>`g[7XKp.%YQn6/=4_GM?>PB-rLqZIUdIItKa;31":X6R(;L>8Xk5IJ.k`2=$"<\!qu"8V:SOLmjbmV_
%$hFNl/Dmhf`NF3jEVn\@DMZ#.g<^ShY_Q#3*\SG;h'E,W*B`t2:OCVRpgINN#<s5Z(WYUU"Njh1Y9539l7d1!@EM1P8g'W</NuKo
%:P3iq-T3DuiNK&bjM[X^aIhu1Mt1?M?ENbH]6M4WfTGp3UW;:T>G]@Lqm;9Jm^iFsD]IIj_j;0P/=iR)gD&g#cE<G\?_#Qfj!j)H
%k1P0&oUcQ1$VM,@l)W@>IC]AINg>nS3!GK`bZR4]?]GC_"24F_3]6(FBiXtgbp5o+>\f>9[m(/G/apCMebe%84Nq<&M8'r2?BAWX
%,7871MRBG[+h(>'m#mE6h!K=Dfa&+cG2ZHY."*A\&X^7pbAdblZ?l$nYp7#t[r(]r"ML8DVtp$94KK",dF+oa*>f.S)s(Ij@hJ/7
%[Vri70L1X.3NA9<W)g"cYquFc/R&#3<YZ%j6/cYW;a^Q.jlIDn7pP\Q!<=pT*9&n3G5-;%V:uOH#?h>"Q6(MD3pY7s)Ge+K^St"7
%CN+uGAm%]rDMh0bQH*Xt*'O1YQWG6j]-=1DL[0Xup?]QIX*a@/r/Iu:R8=as_hr[m24Zt9a51U/bi(5AENl,Xe&/FsVAm_'JK,n'
%H/QpUmk<ffr5>4Z!V>U*<"dbV!A@\mpHd#AhD6bqA/i"K4R]Yi:X'fQ[W6ZNQN@)Tc7q)WaUY#8n?V'!D6_!ZVNtTAD"=WXO;uZi
%XHA)7l+4U1k'I;b]'1rL&/a3Mq9'$753VB[pV?CGT>&^EACap\e_<8R5$sZ%Wo3>l6^/Gum"rc5P)c6'dSE`]dsAqAGDp%t]!rf_
%W:(E]KX*AB+^(4?YR/Xqj+W>8[RF9N4T"/05uLqFG&+L7^2EK,deV-?UgJ6(A[O?O#IJ_i4)-XS_s>#*@aD^>=\i8K)tRLM^?\5+
%)aY*'UPmKAkpjZEm(7P$K\(=.5n:\';*fgJBNRrdX*_btQ#RFe,ou#99l$qqmfKk[5MV("ki^=mA>dR'SGT39q6&,C^&)8o^HMuX
%ccjk[H?fYFNbc@T-g.mHW0oaSL=&#?:PKIVEA6bBA&pano?ag@I:[h6f]ZsXIT:86SuqkXoXOS.TJJ$ZmIM2I=pA:D-Sl6mDq[)(
%LAHItBk$StU/.^0a"=J,QR%(haU;Q+>Fs+_4Y=7RduQ=%I^B%0^OHq4r@MonhdTZf]cEm?!AL8(!'7C$X60$)kPTCpAt8F$_@%[q
%Ha/9,:^"tk_2(mL]`'*N_*006C4HOs##]@?A.,T]hdD*7K_teENhb'IW3^)RpNB;Ze-spuURPE;pjssQOkiW"%-Ei&"+tI<=c>F\
%S<s;OdK75KG1iab$a/5TrQG"Y5B7g[#E&Q2*q[_R=@b]5?^;j"5W<dl[OFM(^E<r8=Un')X/ZAZVO@1=)6R\aS6SMRNPX*Yc`.K\
%S4ol.,,f!u,X_?=$(Gb:.1WX*YaiFUGl3b7fI3!8ip:,/Z["P_s/^c*(BqV_Wc55+"_]B7).ia\_AN<)[r?s3Yq&6rB$_2Z^a<Pl
%l-X0k%^R0P6#1afJ=6p7l6LmIa2A1OR>-Km9N.n^V(Ljm"GV`BdT/lU/O)\"`bf7DBTDPC1mjdQb1RcR\=G$h_Pil5jg_`*Y._uc
%TmXi(8o6Ka(=`B?RH,b;6UVC4jq5CFO34Eai_tUUK@EMWSdU:m0VC=t1&)ZTR:`fq;%E8`Pt?n&je"DR)70"8$XLSGFXCLciigal
%S'f1)Td*mr;IT2e\*+!*H=6i*_grj]6B'Eg%?3&BSpfYW\gV0nnhZ^8@pRFu%$_m+S%e=^.>14]*qi#bUkFo(/JhKC)jQ;[b[LP<
%"Q9Pgg!9kb1u/Q?d9-7>6;@`.*;`ml6S8Q;f$*m-;*gN+\4jFgDQ%APlXb05cCc0TD16U%$`iKFBoUZNd&O<kpi/ki%QG:F_2E))
%C)t2<!7r(,*0F/BMC4<4:*B)k4Esc%<@Oh*<Q%h#n$k!MgW[MaW&sAi;*'l4%BY!-kDIEYU@Z1I6N8frKH,S?er7AuZn0@!QMrtr
%`X1O-VROGFNic+_2Iqdn6@kM)<OWf$Me\)QaGeB_8s0:4(qR;#8*8&l+"VCth1k\g=pfj]QCA,m5_drDA(=\[Spn%W(&ZS[[-l"]
%m2jP-?3<GQmP4:4nR^+KbtD*YFYKl`QK)-<_;Z'8&[NBLjqIY_:*&$%oOpD#?^QBko8_o+lC91Gbq\IR[IJ+!+r^$7B%5@@$Zs3:
%RCu\*2fq"$jFM&\I-=&=qW(5T&#3[%@W=\o!Fat$n%WG%ZoaK*$Safa`aa@Gr>`P18DB5#,*OWHQP'<.;<JF&Uo\Z-)>Te9SK5uq
%g+D=T.DRo4,uMTXX>ep#2mp#,CU&URXlY]PcHh$!U/`()cUbts/2JS<273eN2Zpi,^DCTe.&nMH),,8t#bk,=N<cmSSgZSN'Sp0?
%4RD;FJ_jiM^aH_[`LTiU4>%JU;cV)u`M=$t-dU.>.2fbCT0F_J*e#+p?;)TCV[PpuS/07BfNb0$$(60n8n#m#kp!)m]VQsY-=9@o
%[SScD3m.[./M_AK5,`SmBhYd25AS?R;T"1u9b(PVHL?=2/F7W5dOs?X(Yq]tK$[K43Z9D7.+^(f:227W8-kGX=^H*4.<HAb\/t?%
%;'*t,s1a%%Fbfp#L`bQNZ.k+lR&SC@osZV\ZfP<66iMYLNj80UVJq/sdKSTA?8jAoECURTGJiVUa>+[90\&(tB2^T3K#hO4FWK4N
%\P#+JUPg&4B]MY@Quks0i='eV_EmHF59@D9*7o99h`nWIX26%>k>Y>0rjlWLd)*MpD/dPP?*uUu2PAD!#*)&]$`/RArB0DX?qt]8
%?q:ED9L$>6^$rM7pWaBM:ose4pFsi6o$Q-nILIl!)TeRn07-696Pq#ghDIW0s&%tF73t8:#`04Lrtm%Q2d*X1j1[Xe(<aFoX;-<g
%MH[<d8+2CP:WsH*]dW`s/79u7/8<,JR.K<;mspWP3SS,)WXg>WEq8Ds$S+09>ZKEpkj@m1Vu@*WD6r'iifHm*mb%g2ai-PN3V[Z`
%$99R[\R!dBX/VueiQ.4:'(U2XKQT@fN#\;4/%N.bjKK%T0`eK^RJPb2Cs=-YOaUZVajsqGPVGf9ZS[=J)KH:g`gUPI]>qum*gsX)
%n"2,XVR$^,VZ.c>%t$TT=>&P=DU0AM.(D+(\7K]8(TVU;b=7)+@A(aO0NT%3$Wu6D!cU[i?kTp>4.DVejclidLLStK8o/2fZtT5E
%!]m"f,WZocW2mmt`c!4L%UdDh:a@).Wf6_me!pY*eD;KZ9("N*EJq8GS5uTQnci-MN:G]7oWYJb.(ZkfNY68YC9(oq:jFS$7/HqW
%LVk:CN_K0OE_,,(6Fep,Z`PkW>O6f_Kq!&@es>(Z[*1A_ch#;t5tfTO2r3(tTVWHlCt?5Nb=s^EIN+e?,GDsPBbRFLa"Kd5;,!p8
%&HURS;eS1F>f[!.jC>Wn>@kfW#,"s;(qJ\b<<+Bq*'GF'mdJ+\Et@1_f)s4B]$/BQ_<S?>5PS/Ur*pYAPJ^7NKO:sf"#+EuEL1fF
%qHieBFfJT_7P'7CD!*.F$jcBiL*_XrqJ%S:N;!AdSU4%)S:i%t))q$N(^dl/C\dP;A`ci"@Ims,LMKU/Gk%OZi(0]c.i1]%Fr0u/
%?>Kq?DKt[$YnZ)O>6Xn\<h2YU9*X$M1&uk*^,%(1A-=bTRa5Z(9KV>eZfY%(4!VlY6o(s]'+B#$jUjPMnFW,1jgcCh-Du8:(fkD5
%?mD49/NNIf#lqGb]u7K:otS&5?rbRFf'DInC<7uDa6r7L.>j8M/1jQONci([<7o7?&)P@KJAY<Ic![N!.:(<-.Xd0V?LXNlGhDg*
%klRmJ#]((VDe3;feAA03Ju^*rZ\i?*>C)I^BbYnuV>K<sEh..ta2&,=+Dqt&O782UD,r#XJ>pV*Hg",ari54tO%p_>)&,1MC:"NX
%F0qD"'&,/<HdZmX`D4r`imZX-Y"dM<7hC[GAZSGKQe\*_UGsALa.X[VG"-lFKQguh]W:!-PDQ("frjXulCMr`Sefp)(<RRrdDo(X
%a#WjjO>]Qc<;,?KU_6I`Lt?eH4Gqs'?NG!B"&9$j2kp;&G!M(8\:\4)nkD7r/k8<+S0@5_WCS.QaLK0nFnD=9F["esPtW#.G-KTa
%i2lM]\V/-FDAY^gm?Hq%Ra&kDDH"1T`)(deJ3d7+(hHs`1=->OMK,XRQbb5^"WD8'bHjp.aoiYfX>Q5J#bl2TLI@Cs0pm'4<i$Rj
%/ccR*R)kD[C(/ME`_^Xb@]*lm6f+)7jZZ+UkhmSd6C_rg$HVMWaFSluZ"s#h5Y6jqRk[+5D_F#5c-+BZ_rnlg'lu&gP$^YTD<FjT
%:<NHRB_#o:DF60[_XiK\@G6>SZGc+h$ga_]U82`70S%XLkbpn'!:cS3'CpAR!h+c9Jj.UO@@tKD8\e.2pU$2Q.rndm#"lLgY?D#X
%=tLc@;1t/N1,2_PlB1(&2aW4L\f\UQ)V>CUNRgJuL(=b/'#.1\9RO0%"bA2nFZqW3bmpHnE"<jOmA(3&g`\AH:csp'E`MfCpd-lS
%rC)5B'+H\d?%lLHIPtCtZ&o$BTZj<[3O<KOT[)rZ9qT&nK0sI3V22=16U'U&,3gRbeD-W\:>c1&'XUfjB>:A:PIQPOVHEZTmh7-s
%1!1hN%`s>PG#"::T=-@^9CIr7"c@G8lG[V<!&W.ae>rj*'3l2A[(8n,aa:(3n]d^F,RqQE/DnTBMV8hC$-]58(!;OqO>0Rd#11Ak
%!k`+>B?c.I;oi)1ihV`hE[nNe`5'@R059FGHa-k`O76ejndHqO<^m"h@SA/8W.)rZ-hk9.OH2pZ`/=Xkh\8`2ViPE`XU7H!2kJA3
%,t:`.*2fn"j3V'Rs#bsTR3%UklVk?ZX3cf>KkEkD46.!t,R':&J5A6M.PNl\"94V8+9sW$*&?;-M\_2X/p2S?E7nA5Pe0m.)OA^h
%PaF(8=9oENm+7#q^taCI`]&&kYB$Rq]0?\0Gr</b.1WClOkDj6>_XC#]C%t]]Pc3MI9kK-n.JE=kQo'<qsZM:)Ah9W'j&RX(bMK,
%+@sV7[td'Tc;1&CZ6qO,K,l5=(qKm.*i_$Xf_8-b,I0XTMm$>Hr-%?dnh5ft"V-#&qb4c5)A8!EW5<>c3[42rF]9T$1;tPfd5LXu
%7Sk]&d\;7Kb\9](kLAZ/<6L,#qa1'Ir/4(l24l&LO9shZ+W,bI:&pd8JYTdNK?5dU<N&+[kT"@)S9$E>Z2D!$XL$ObHZ8dhBSp>^
%U#.uIg%f^-Lm<$]XKTJE.BKX8D2l&A[PA5<APVED7\t=+/eo[a,7L&VULnCK4s@j[g0+aQk6!S1C-Z`GO!RAtYemou.i`.o]6XSR
%H?t(pe6[@4DC]4XbJLu,%,&3b'BIUI:X0@=/NPpsf:$m'1qF_d=u96sJIbW?ih7>7#@R5;MF0\/lXeHK)E_T'D?^4Y)'0';PE\*W
%65clK^G+K4jBGU8b&ir32mot2>s^>`O`JIBkp!KE,97]a5Ns#><!%M(,F]LMX"ZlNh;tM)$=(-8-`UoSc1"t^-cq]o)u)]V0;j$'
%WPgeHQ=j`:&;"rD$/$I3$XR1'P"F_B\nJ_/[m;s1m`6,_/94G*g>UWq&of"6Eh8Ebk7@"=TLL7<e&h>a@#*XpCi7)K+O2FUa>eD=
%TI_dI=TEZYR&eER#5(btkWdnM#;=Ue!k9gDcu$e-Jbh#qa#PhUW1ouq^lure>?_bcoqbG:d^=`ci+ZUp.M/t/Kk,.Aq'2kOCMI$3
%cpGn$4)Pb@0:Y'i.-dK[C1EjY9S=C9cV>R/Bi4H'L>>k%83fLf3duG#`C(1EWOR(opPb3Vj(XZ/^W)FoHo#C4#<:^m#,'&:'.4Ke
%gIYRuf[h>Qmu:RI=J+9jH;',$9T@:S[Wa4[74H[#=<GBkR@$2X4o-kn";_Ft1\guPO^Vm^c4*(%=`#uB#(^9EK4-to.:i_.HXJXC
%bnSNj-C9o*=JEE]Cj]Oo2]XV9ZH-<1O_Mj5\.YD2YQ/Up;AU4qXdkB/Uk.!k5q0k6h/gY8UT<OrSpK!_q69[$DUI'_H%\aTj9)k=
%HGjpA5X!SHV6):FG!>-/55=8WqUbIW!E!C;C_QKjLWYWVai/G!9QNMdX?m[?p/!k'jj7kj_op<P*]R)BFd=GeA.sf.a@J@b;6=2\
%;02Ys3?-op),%LUOKkBU[b^?]$%98VpNG^*Ihmrnb9G9l#9"TPaXDo;\=>Rt>Z/_Xq2]0DL':@?2$m!Tg8(REc@ZXq!3fR!mc*A.
%c"S'>,On?XI[Aum)"R%uan%5j4F.W9$j5AB%8uj$@D')7WtABVq=]btWde;,Vr7DjSDW."pNZ+5=GL6=,>47l=A(Von+%B).()--
%^;nnC0G);q*jt1EG5]]rn7#=EGXF[`^/o[Rj^r\oK[HNb;7cBe2)1LO_h\:49X]&n.F6\A0?*4UKjk><VN7Jh18'Mf$:A0%.0`8g
%j0GR<-%j+CUhbut@RMf;/%V5e7q0\P9gpBhMDpZJ<I]"JbU%b[o8^Iu8&!WeO8Jg@cGB*tGreo#VpB#HiM=3"3VhW%5G.e=f&;<#
%H"Ceu=f(TATKdu!Y3EF]]_F\1Fo%]gNhP$;(Y+=*grHHE`@DoS&kKo8X#e$NZF!7B/>S@P+\OZ@^+q5Vl<2Ag@j[CI7\:Q&();rV
%SPoYTEZt[FM8.3[gN6S&%^*]^&Xl<%@1*W_%A2XK3aK*D0X3?'c3c>;aAGhtdk`c<DjL]%s/BNnbAMj2]diQX@2/U!6Rt>*Gm#Il
%j=D&KZu"?\9G![a%&B$.1X7G_F.>I1SJ2_S??EGD':>3`RWU:?ClZuk$?uCTq#:D6(*&j`Do3\K;1Y>e`d$!)E5#_CVI8h'.2qBU
%,C"FU+GY69lu@'L'=5mWd%+%%0e6&f;KY^rOkE@8!uBpjR@Pg<);XGq$bC/7g/;irS/=")VCP[aMVDNSf)9Ct3.`]e=ImkbK$973
%0Ib!-Ag>AUW6m>O.!R"c9T#gF5ngW*#/N\cN73u\%QTst<",U?,%H5XjGXh/$e)&p68IB`lZMV=if.ElVC%QRTtGb'a-.c=%u*%&
%%^:0:k;=EIjb?IDD<*?j3Wtb.4P*9Uae?_@!M2c#Tk26km.O27rf0Zn8Q!;4%L*o\h=Mge_PG2`Vn6gsdt<gEbp)ejZO$bK*#NiI
%O--LX)mSal(o"II+FqMc01H,6LEQD#?59oFSGb#/^4h70@Pg""R@dBUPRnYe'B`tE9f<gs1>#n7THaJk82%:Y"$Hfl?kToLddLLH
%InQIJoEWs],?0qP6k?+FWTB.2gcVmXXqk#/7?F`$j8H+*R%T3odb^p,@+Po0/Xf;&?c<XVPr#"PSsU+W$@3'&Fp&h$Zc%:<F4?s+
%LP#[#-&*g.XNNecG9>^Ug<qH`%3nH$/c7L"i0K""LY^'iE[fD$?Hf=n'<!F`RWF]GL9fVPZI+=oOe7Y"'^&(Pp6)3]i#>8HFN%0L
%VJb!5WOYEH9pJ6f-FOu?:VFb90Da@qbV'<1M)Wl\<,!^E0o,+;%KY>_D#BDJ;If\<JW16;1EW*Q#bO,@'K!'(+dQ3\]+P7X+uX'%
%cI,GIAcrP(h8A!*g0]i/E%CGMAP`N>FUfM:g>&3i&',-;q^@\=-),9ZjUBT&Ppf#*KQ8r]<crM#1?).K&J[Ck@!\^;Y2SfP\Bo!;
%gL;jL)0GVm^u+Xs$:TdJmEkP#"]X\gHbHn`#gp2`T+9.*LIs#h,tW8XM6Pn0]P'M2$#qEI9d/2lO-lVccQR5PQ]H^mlo7`9?kpNZ
%qjH8gHo?>37W/OmCcH7.RJ0hkk$\nL@\(!q"!]_-rJGVO)uD?VeQWK&kn/C3OMrE7Y9,V,$oJlZG?g47oBOr@=C'q#Kgu"D;_&d-
%GU%52+80BV!qFShDid&Ibncu*!J]VL0fC8s<?9PAaOiW?4=0!-3?M?'rma'riKB%cEDq`hfV1'bB>>?D_/ZWIhgodYNcf=aG4$H2
%Q3bER%QL9OMP98WcAc(r9lpcqe!r:aY#u&VNo'/T7;<)"8$s^`@&u(YhfVH)7Uu^X$qc1sXIk*X2B6oFJU=*F<Gg?AY0S=HjTM1A
%m&snS'j(HKSOLDWgqD?P;jt'!7)N?C.>QbF8mVri*kfl-i>M!j9EA"QJUu^Tq^TpE-K@m>TkQ5tmD=itpKZ@gU&A;m5\=T(os]Sr
%5+MAKVALZ"PL5LH#q3`1Q]m1_fIc<ijcm2c0`SaihP*peT1_U097if=%M3"U0TK6HVtqT08&YcTZ7m<sPZgK-+aYReZ/.a(I-tE)
%a*NuO7s@+FE"*VeK`W#'m>M0pJ/LV$gg*">(5r1Y.GuE;)o'^ah@W<aFuaZUQMcr_$=\#U39T"18QVgqX@i[L^@ZB5p.<+Yoid'b
%NuBVPf='1nOlD2/&)KNlp>H+`_(s<(PoOOYD_ujcD$KR-=1kP&kAE7=$Ad3RZP"_q4R9p,NR4W^A7&SBh\!mB@u%?BjZSid0>eVL
%6'_Q/Jbk&oOo#]"6A5G$RS9pc0/i:.*Y*?c;9K;k]]Runl3SlUZ..@%2O<1q'M,#L@fX!0Fe>_kM(O;JreXBKb!?B3J>fhgS(:EJ
%B@ZeGjlf*kWT``tj_H^djA"E#N8og]kb?RcAPeP:,5FN2.feo^J(`EirRQ8lT7/L$p90$a\G9Is-e5cBJOq^+=W;d<6\LC@B.qi@
%G%^[B"iC7-(."_@K?<I<m0GD.B#Jf>pC??[[l&iW'?CBEltUb:$tNOD!*i:n^)KrpiTt1R:m@osQOs<rW$erOl"-:M5STA>C0J3b
%"ps8?^71%aDuHa&N]c7e-i_/D7HX'`b%]$*VAJQ](:f?@48J#/EEug;D;ApHcg(X;$.H4oO2Xond%CFDFMkte(_\@/KN3Wu$X0Ee
%dd_'BhpG9Ep7Pq!6S`pN#$VbX=1Bi@YhOGYhW[Y)b)Jut3/$M[mC@jL%8l=J,S^k5X!)RlQ+70T6M-S/=ShC`71:BdoH#=nGN&Z_
%o9,@SAc`r$fQYXtoW.fR^Ldq))V"79m2qdqLW+OD^ZT2%>q_$.K!WYM%=0q<dNq&[nOmLM`Mnt:TMj+GMjJi25][,%61aa6Vc0#"
%*^9jUs/oG'bWQSBbsm5[Q6k;n8?`/;c"%`ck/g`hAT_/b'))8V'YiRL5R*D]i:Ms1bDjl'h:rDjE9*-Z\;3h6!6;R&VYROm0nKei
%fWWkTH/h*Wn)lLrFB#tq=8eXsK8<mp_FjN*;0upc#^9V"19q[:buPBQmVb.s5+=hRWLhVWPThOm5t#Yi+/TmE6H+]02Qf<&`YS>Y
%a<@5&@gN^#aoda(:HRMbPlB;%o":`h2I>ai03e'3MC>*@o$_4NKd6,8Rm#SP:KPKreb$V+kO/,o.ldi@K.XBs9\Gm9=EpO:\<rdO
%QB*ta!aeQIJ,J,O#CMH8NCZR'n.HP6l93(VZ:Cf\ZTLRDU1fbG)lh)u*$O]E)CpP0gURQ\CZ;e2/#?Q:0jTmsI*kr97g"PaDl<)K
%0Ac>*&)WG0:X.cpS,R%KLQb_M=&p*VH\'0>2[E2#TuW*@8T3&.$b+;nr^ZGDaaneaI\(JLkM,7k'"bgIC.o??GdTbCs,UK<>mKJE
%<`0Q8BId*gP-uE!A9QqiAoNA3,8.jl=,Hup=sY)Xd9E9pY7pjngPY%+L$CY\Mm4!FP3^Du0ia[Y74f.ZAFWQ6e[9P`Q,CX1Y=Na_
%-b>YL5:%!ThoIC7Kut&cA_g@Z=d!4q'^LRVW^(>M][\2?SG8mFAcR9+VaH\=T2(]8*u6/)N3F-n5&>MSXIFlE`]P9s?5_SR(;u?N
%#[?F_DSfNVI=IIm+;W+h"FYeMM>>-cdrkAia?]6Lal$U!(32\mGGP$Ygl/ku`Lk*!7AXJk$jrl:CQ<'T]_6O'39$h,g-dI\.RdB`
%8jf$/SAepD:84t>Pm^&P$eCF\=WF-b,5_\/1%E'q^7.Ps<cDH^`C&^I#<06q[Z<=q!_%LoG!4c';H-2)&p"Q@2c8=%M7LNViX/72
%K.Mu*<DC?L9jTA-n7+%b+ltTgmb?NJ9WBk0;BcJ%2J+/#=7?Hm<:$#\lgC`_g!j/c@,\JSU[h86qQuJ@R=T`S=miY7h+9@,!?N'a
%jhMr%[<o?nbB:EHP$Y9#2Sk,#!@Y/si@YF:Qj"L3i[,ZmFlfLb42Z8OIachKFq.tl8%]j6=f1T=^&g2>@R/UX6i_BD0^RITI'6c!
%!\@(fF4.9<TFUtj!G)`P"E[7"SX_uD6CiNAOFsHfW34V.plf.u=%O!2oQE4;D?qSe.$PVTp?K:G2/8INUd>20r;n=emnsT;"Z_Q)
%k1YBgU`^]p\D&ed:7+1Y\gb*`[l95`/>H.P"?'?pp.7_MX[qg24h3FA0Z,24c7q+<]r(-1D%0h`RW\?t<t)?m_Qn(F&Op)C:6,eQ
%Xk=Gt&$\nK?XKqHJ1N<ERT@fR$jd8!K&Rcf-F$'t'UB#+d,<,q,)[SQQTPj,RS]BgKm=oP_QG@tbO!ZoAp&_[;?TDI@P@l$7r0IS
%#_I"14"3Ro4T57t4UWsUP-]bV7h+&joBO.;O9.<oeeG10$O(-D[D"Nd343=d%)uRd5h-.21[p=T?J@L+8rR-M(U\IUC6SRJgo#,V
%;!)/$4%U.%QIEf7M4d`"MBo='@`CSq*Ua5$AAlcU,C$ZT5tgng^i:Sqr)--aciEdYD0`8EmI2Q$b7Fo:l8B9"jb5_n+@/rLPY5)/
%n:Z[$/r#I[NPmKnP4H7k25@#ooa<gn[3]IT\n2/ki4+b#_?Blo]9+2";$F%[T3BNdi$SN9M\245Q>%W>gih-H*e`Rklj/"RX<gFm
%fsC/:3c5)kiQ9?:C.QD>/&/hMf8C`I-3[?#?+ag3hW'S*c7,W1fZOC]4V0S9n'Z-_&N:B%2H$20<od%L[%7sJ@`;<J/q'D'Yu0I7
%)0h?F"*McH%e4EFObXrFL.69qe4rU8V44'[\;n[2X83Mjr0KuH0N)"(_h]bW#TDM_Sr*FF4(=p1+:9_H?-f%j\Gr%`?@dhTe?%CJ
%fIlKr<(CL"r8DHu>RZ5>:P1!O<S<HY,=[bAf_1cn_;82_@CIs]LopY369ZiWe9mc+K&J]AWgk6+^+mJ;IhECm%%R3tXbT]7&W7mW
%9dlC(1D15$q"]@%@g,f*&cDc4[#35:N[`Jr\h0V)QVbO'03M-\s3BB5dir0rrLJ:)Qi@E6'h$@1E8g-K:Arc0!599V$<\Q5JQ_,I
%AGiScpD/!=M63VR&32U'2ng*mL2Q+kfSr[++ISe/Pik&0`4FC:e.\,#O^(pE6@tBeNX.S"b>#g.Jp:[QC/eKMC=nRm-["Z5YtOBX
%rP$gDr(7:a%K*D#M>[$(]Y@REW739`mPiK4+k4=Xee%QneMI`c9Zh;3<F_(X/Z)^A93bU&+YC+.cl5L>RHUkd)aq=>qAshN'nP-"
%WXqJ+KOo-[gk$/I?XuUd`C2ZpE4n8-!uib\./IC!F0l7o"R-i8n3Nj;]]ftlf[]UfYgjle_V13aSlqP&3-7IpA$j_8:'r4$G^t*t
%I?W/#5d1S5.h[NP4%%i<)eO:O;%]P$\%YNfa?>7pR`\i-(V9#hE#F\/CB:F@-6>Q[]aK??-k$BQ8E5HQ1RV(OkrS3C$8`!>/Yo(-
%[tPsW%OD6*oBLkpecF(\,*,7tC%`gFXQ)5CS/CT:Q<!5pD@LPK[I)Hd>)qJ_7CH8G11I+H\@@QtU2X8kWX]2o9eI#k*gsjH9fqAE
%o]juROP9'WKW`M12QDSJ5Sd!%]XllEd'dCbN/1OR^N:Ao"hba>R@r]cX:HAJlN1*<4ns7YIanGVeE0_/q%m^(U_5:7e(C;V^\KRE
%)/"a>&FC.S1-55";NsUTp(gochOfbihk8$%b_[n"#=bt-E[(]-Dr@u1i>24'7$j%r%=j;Spl,*8OlQ'%r8&lM?.\l+Rl#cFe2;bB
%=K[f3_8D<g(Q?jE4IC;M/uqAiO%"n"+gG_c<g?Th^eIUGM'"4/!R:q4fs$N2Ct>a7f!%\$VgsmVfM7/?i\4LDDf4`l,\oL\AF/X-
%iV`FpJhUJ&3'l'1ZjemLeHGT'=Ba\mks:@U<X*l`oJl[[Xf:huR1*&f/sk$A9Kre@ku?Jn;.QS-^'GDc/KYm<fP\+!nGrPVlath`
%Y<scD(LG<s@/*<jIV)94+5Z>_+9#GW\tD'>&hB<<I,*6@Llp"&i)cK0+5WGN;MV6dBh>P'CeaJSF^#k-LRWe@;#[X]_+09D9'X?e
%gl+_UmJ[V:PpL&12]Qd9<cM0UBZR2<1jfRQCt[DN()kje?H#H>FE_2!?5_pMrImbbn]JGU1d[84rNf#`\3moG^@!<@,X6.VkAC$0
%o0.*_k@="'>2fg93EIAIrUoqK*RX&6I#dsa1]OVjiM4HgjAip95%")`:O_X\Dter]r9Q@,]%7b/f?0+=H$D3)O[bNp=L,jdCD$/U
%$j-6LfkAsKY/cI1OurKbH4s>NUt'#K_;_o&?U<0l-9D!f8_hNj+p\U"Op<WX=`+sHl@E6-9T?.[pN$oS.a-^f2#o$16J)H?VdSg9
%ihU<am7N9*_(DPk7!'-B!5UNKc;7I?es5ktoZ(i2[#OAH)V/Ugb)*fF/)"luHg?@"=;i>reX.fYCniSKN[!I267piJ;-5l#mU1lr
%l(USERG5;nD>2a5qj-"],hX'D]U3Msg(VP^P^'Db'*UYNJj!U>7co'b0gVp,gJsN3gEc:VjqiU:'h:$G2Am8XT]YEPpOC6k-@8P-
%7&]_p.cKH,@&N)_K<CL;Dn#bpO=/#gVIPA\P\bbQn9b=b-u-gke<$1-`/*5#<1:pD+`:pt`@t/inju/<_*,aZAC>k*`s;@n@3]-Z
%).8O8*^$8U@j!f9Sq0dsln5Gk^98N5>.+=%=[Xn.F:#@d/%2[C"DP32mWE\p(DA/c/lQjN5R`b,3csc:;Emq?pTF:l^u3a3L3nWV
%%X#:(k]U4M^0RLJ[gkdPC8&R/2g#fua9I4*TUO,rX<XB_+Mk!PB\>*n_B0mL9G\Ak7p,icj0e[jBB\TY4Wh_rVj>sO.0YOb'a*HQ
%=B>9+_/8JJ$-jS.SBTe!g7Y1;)cB>E8uUJ]M+(`l1bTKS+r(=q2'ohiUMh4&^kSKEV8*"PBBcG3:;7,p5I8$?Tn!F)$M`Hp+_8>?
%D/p]7mG][-H>kb!c@^t5^c[U`1,]@FQgj"PF_E,4`jJ*3=_ZEO\E:^(>?eEUnLi"'j'DZ":It;.JOY.cI]Z&o8!W4OlH"BeK.,>Y
%ZSXI2%35Hh>*RFelq+G?m2poR-T]?sLBKc4BT0R22Lng?9u@Z`[M(Cd<3qkW0f%6u[hN7kKI+<JdUbZ,o$]A)2+H*MZfGQb_4lJm
%7.ist^fN&;?sr,PQl5VRK$tTo=0g8=-5$j$&8Igj6*?7\@]h`N#O/:ZOfMU4$aB_$;@=a7-\!YX%#O_463WPs[%f6267ITo:,J$<
%(OsRAA"_<&J^>8@REChW&"bXlc<D#r/*2b<WtM^)`=c>NY10e+;-FIr#EbEMdj_qL='0o>nn0Q?DrC'n2j%THFF.LcUf#((aNm\T
%Z'E369X+j9Cr=F!QA<=$e-ggeCX1D7a@d"Y$bf.;q66C;X#a7V'='G=M*Q$d2EJoq@H677Xtb)9LZm::i-4e?o/!^$mT@AaCm<0&
%TZLd8$^=1$7C6'b4sGe*Vu`'5Mj?\pT]*tD%QGu)G^4k:JqJAc<H0$V-k`5P$?dk'*;i\GGrB)g2=%_i/FMIEIMb!qG1\Y4?NDXn
%O31B\XYn&S<`bC@OLB"o5Dh%lUmP<$Jsh7$B8N,RWdLFXc%.ZY>-PT\N@^XkKZc?B&af2/?,(L)J[&i)>*X(Q.L-Hj&rb2YWV&4n
%U4J*f$nH,D_KhMl@]4P_,peF>&+#ZdI*P8`Yn<(k202q:(7%lUoO'Q'"rEoANI)CW+d)hg$A#iCjSk_[l$#43s&SXmM%JM\CJ#TP
%SeYPc2ek7rBoT<lQ'@Vp"lP-4Q<ueHQ1t`ki$+4&!N`<>h[pAb?<[d1=B,WG$c*mb14_9I,QjSqdVM]&4DNG7K$Jec##/o@$;N@?
%^9nIVK66%/=R)L?ICgupcg7C?+/1C7cQGs3%!+ccg!'W;can'am)H8?16!oC(SFi2.;S"E0iRi.S3+,"&$)^-9q0W:&FV($$%?2N
%rKGV42Op.OW'C])F.7)W36..SQp*.?4HQ.4A_+m^Z`_]\VNHfF&Qd7s3p/!".@]0SW3-`^euK"rZ4)BmI7It,"bn4jfU/C%m+Vi4
%E$u)G1[QXpU?YT;S[d`S5l,&Qr2JV8'MoiC!=>LUI;GE&U6#`2=oeA[89lWTA^'=HnV2O2h-"g+PPYVr_K,Nq\,/h$DqImH*6DjB
%nM;mnk;\7r7^mLaMA&Q'NW=CC#F@hdhRY!Xkf&b;(-e>u+_8l2)WVQ;>r?U*M@:@p4g7PA39V\!_h^*,=_OU%$rW%_(W!oD2(6.\
%UiDc(a+_0?X+pIi:t;5Zd^R.Ki`E(5YlkWS8C>Yn21`S3<]5kUJ;Yh=l0448=VDu`/i4[Ufknqoo0s%cih.[+\OI6;Te&8VXF-/=
%A!soSR&fQ4GYgK9M2mLV1Sm2Vcp^J-/XqbIJTZtt`M5JoN#"ts$&-2%(8#(*"Cbo0GGCN>%YMWu+FQYroro6(=u#U<UK4h*+93_n
%:<a'92,G/GcGC1]=e&s^L?/.>'JCoZWZE/M66oZ_4"Tcd)uV7IGYUEp>q:T<0rs<d"fjp3WC)(MYehS^N"/<Lfd9Y=@>c[u6X`@o
%<K&IRQ#NF[3f9=u?A%'r30L28@poLDC]OXt<7*SI*Kf,(=+`U;/Ff*"mRS3oJ:js^Nf]Mda^LK]Nf^OY,G`@HmX`/ON"e(<ib.cU
%_j@0"A4:Io`om3Uj":)?`O?Jb1er$$k4?0s9A2:&;iU1p%"[DY+Me1^GIWWjknN-e>;r;sV]%ABR^*QnMMs;.CCUBZ_GkSr;3@Lt
%`)-ak+i<aU)AR]9$bHtBp$ShC4EXR1YTV0R%\IM4"mg3d(E'^)/P!R]BAj6W<J[?F+$/KM>ln)Rc-t[])/S+M,k2!WbHC-L$MrEe
%)K1YIY,[IQZ+!.0'_pcih_MY[5Eff<#pf+PZFeI.+r(/mANToVDh%\7AVY1K/"'rXKHKPlL!0m2YIJV5Z8%dlF^s@f[k0i-,35*#
%,;I8c1U(7mQ"=:a*2$SO-5c=0<lkElMb9iL,dJD@fqZb51k2g;q5[")E=F!IWLJU53sBt8%pbVT:(V4Ob!THWGu(j`Y_JFn&#43+
%Kbg!S]M4[['+^D+%Di/H^VA.sXpWG+@7Gn+mRfY3+UG;hc%=<XC6D[<Kcc2.6I_F9JA"StcMi[!`"8_EFg*W1UuO2@3io/[`hH6l
%cS6H<rC8Lf/,J^TI]+g:\dAY=h(Q//W30t)2ekT:IuGb2"mP9o'>Ykok6_N+m$@!GM43j<2m[Nq6KA*,[:0:C",=Xo?*u,T&Q%n`
%=Wm*8F_O`<_5/U"icpKi5V4r3i9;[^"`<!!9kB&LX/ijN7DI>Di8"`GM:+VTVMYXEm6Hlt@CW;)[49a\7^Y!.,#@>t.:4!uH$$d9
%K>uS7Cp!s^\fk*#PULR],a+'WjHIK9VjiXK;S-AHR[3psl?L[^EAj%GN9KG26[>obQn^bN,fD&@\!pL9O"m<#o>Qac)=#Ph2/iRN
%$)Cqpjj#K>U^L\_Stmo2Z.2!Kh22&AJW@YuaEKW@MPPgO8k?i4<tF!EXiSmFHc<s0AEH6J([ZXHQ0/nJO&bbPid+GJ:tu9V]0FGu
%#@$8LV$`*`U@NZucA\6u$Nnn(];dt@9r)M?K1QCgl'd<:V>dR%qTr&sl5X"^hMTci9MuR+_5,enD"cc=H8SL?7E%\,/!<Q`2PRDs
%m9#1M3O4P5mT_BrL1Kc#;)X^Yo0gBP@KREZTbhD-5rpi_\nF*co:p*F((9gg+MC?pJCS0W=<[a^fB63jiZj9>;D<2FRXT!d1Cqdf
%2^?Ef\&[i3Z&"7b'M*@4otDnB:b[E'9G"E?WjJ-lQQ?_CfReh?ff=c-Jo3O\(aj6!c,k_44=\RrA>iG?B/<(Zl]oU6L6o<Lg!UCa
%C:R$iX%XfQ*X]O%@@!X#1p]Qa0`pC>ln)(7:BLW2TLR@n8+jP:gNPuEWT)0j5h(<"rsuRon8Q5q!b9%*2PWa;Um/>o/g+&Hp8D(k
%K:ST_FC;D1rYEpY7.qt>]S%m3E9]>"d6r'q;$%(8ibIT]V7jpI_h&:@olHe!eWn4;D_`:6&hD)>+'270j7I2O;\=WrRO*`N',d"e
%:K5f.HWY#'],I\Cr!/IKW;d341Mbpif<QethNB.s-=J9N:qW)K-lN5;s-C)B7qfF-<?n)>!;UW90"#+:+;eE!Np%!+"W;bc<b")q
%cJ+To44[RG5-FlD`ti&dU0%MN\#SaKW'@T"&J8]QIYnRYQG8gF<KoEZL^G;^@-bN;EeJ^FN9"jDIAZFA`(:O%gI(+lbc>Q_##]%l
%o;T%UJIY:5]U4_ES$EO"UZB+IOEueQ<P!<PFW6)M;[p.%<rTKBR+36_RdpjU2(dH,Vn.!F'0:sgK-1e"R(=Z"mFW7)L*,Qfa>c/U
%QQm6s;+-Pc*aBW_:jft]6tn&2,bUre%QbT'Mcr&.3DTh>H2!p;!J(&Y)'_-Ba<#N:h:2hO<9d=:'@_sAI9"$EYmuFuOrKqXKT=7I
%[%nEtV7@QA1)::41R?i>f.:\3a.;q;48IdK.%TMXrL<iXD3[a^H$#3G<U!#&9Onu"kj\8PMV+cs868pW"@2Gp'>:LR4Hkt+am<Xo
%&A0_P,'ddfmpK[#^>#=\9lbM9-n/f+/8$Tdb8mbc>o[Poqp8V^BX,YhPq)TI]XY5O7ls7=k"h4sEYp;U-s0kD9-,JBc`Loq]lpG@
%JLghQS?pHSnGBF!gGULnRn0GVI9TDRgaVL(hq?<6;C`QT6hDLYQ):o).oH$D__?bea^07m"/XDB5=iPFPrUlr5TJ&e!S0Hj2ngc!
%MDj*?!\!%)V]59C]]#KPdT\\4aq#W*J%C6h`;bm$UM':/PUB[ta#5@PE)ZNGWht/BBY?/hKBhA5-c_EQ:S6LH9]t]t?YYR.Q&_s\
%@gE\3Pbn!^L,1Y'&NXYTL;\W=f\h$k'8ck<^QlEr10F2M3nWWT[))h>[CVN&NMRYOk*I4=dNIJ^8:ijOSX2QVh`<HE5D-6k<*J<V
%WmVl-kSae_AOK;[F+fWdnjq>09m&UG*V?>q/pl[9).5^2PkLU"G[:m?hQqe+ZNnD!<XcJOVYOPN%(PYQ;ru2b#q<=Ene$LRJ.\$l
%+^K`(YP5`:aaP"3%R6kZa(,R)B:43?1R,(3jOHub^gmp:EB>L18VJ*H-d8$D<[,b_SaPo#ANHu;InC&(ft32[$4cV#.4e1.PLQ<h
%<6(`AL=g#VG:hT5re%?qG"EG=B?fk?;eo,q76V"qVb<hZWfp2iAZ)6AkOd<b`-cWS)WgeLZ=)L+Q7T;gEjeY_e][/elDumSLZHk_
%i6j=\<?hMj,!I<Gln'uO:^1Z(#-(\dKBdUaWg&]u,$=q&:h_uneQhhm1!bY+]rQ)<,bV"J:mIHS,(Pji:piM7T^k2nDIS]qJ8-G4
%V2r1>goZ,H.B#n8TOt!mL/Uq8g1C\ll`2;Vd`l-KE=.Tf$`'Es+KdO[RC=TtMJNdn:OULjRj"GieHI+KE4HHi_ccA>\raDfD1kl?
%(WEnae[$[.PXfb4M/hT%<1lb<ZC!0q_P=>aXQkL)f!L2,qP&q5qZiK2YEA5-_R'kbJ[-_/poDlo,,,;u,4d*/?)5//561X+Ur,"1
%.uQCoH86t/$"[2IZdlBB84TDd;Y,uo?BKG<c9%)8\.kc+h4oGF]^pNl4$,7CK[N;7B>Mp!!VM19BitLu;Yqb%nSCsl:!QDToPD=7
%CtpO.(g231Yu9LPk2F+d<+HtNR\tg]EDH_=%R]OC(,"a=R'>.;?\``S4)hf,.B7)/XIBmS/J?X,mD\g'[(dUDH.rJZNq</t;9ko-
%b.#Gh'.&=M'TP$"SrqNr=:J]g(m0bPqt+958%hAQ*!"rOrZOp,6K:o)j7+dOD_1^^ce\OYMpiJg[oT3E:j7EJrtLVi;j"B!\!l)n
%hRT;hgYS2"0N1](C1;7t'I2A/8uj1:'oj95YkdL"\Q/bKN%'.;'[4LFQphf]!'=UCdqtAcZ_>>;XrpUp2UnFI;0ka,aj^$OkEl$d
%S%VK4mXMe5>=9P9DQ+Sj>/`8_doe"m3FSn.Mk>N/Ylo)!jV8(3$$pU^d;A-818WjG;)GE>@Z'cW:uchd0<b)%,tB%hpj!UG(<\6'
%F]g<V4*\G46Xr\]VqI0G[Q%<bVl.i;G5+14^WM!%j,<aRU4@iK'82D?Cu(ZsE,WNi"nR\K)*%O$jf++@Ro-7*An*8eDSg0f$j)ek
%#4/!BAf]rP-,$ruQ9<IPf8]=5Goim,;ttKAh_cfW1>&@=*cFn.c=.4!do:_`M>E?0L&WLL3[mb$<17;/?RnD:@Z4l/8t2N12a=8N
%b43<h2#[_`1`RI7N_qr_ET<"i.97%&=rQu^X@3oFB=!1Mk`o<KRo\YqY$sGs5tL&_/.lW1e't'bh4=3TrSnYs(41]K4>uk)4O55$
%2j7.@m,2Bt`WP#;G^t:kD,SGe0r)pDY8MZ1P%rm<pBW8Z8@KT8V][EV13-US6`lb4"mK?S@o_UK3pS<K(uXC:8Ua-&d^-Fa.2bk&
%PEG]5(JB78pO4j9'tlG_`)hf?$6u<pU1X&VbGL"o.k<e0=VYBAn,j0<lNftL,#g/IXOrD\f."feisafhNk=L@_Y[s\M%QY:J=5Z7
%ih=YdL>H0H%G8E]G/.QBGG3+1fpgOUDsfVok]h)H_gi?&TSiZM$ATJ+:b(=!kq1@@M/6ua)$ii[e"rG,Y0#F08Dd+(4"tSfWN#;Q
%QkiE1rge11\#pLt]Jq*K2%i,I"[/I$5NdLokWSKT2&fK/N>q:Q2HreRF%Y/AeK3_V5S-Qo,$Xm8ghuM.^!g*kE`q6)lt&PNMPO)o
%5/W&UI\aNmeqpBn;:gn644JTfqUa_Tb&Xh4J,m1uA;^LY6r7%jfTZUWX=2>6Hh^^u3";Q6YDoPXQ*``;HI;Cka4`5J">a&5).Vo1
%YQ^eW5l.DSr8&`p`Y0MDJ>>P7n\Z<7&Ng8[-T#g3QO"1dQ!$@g@2G5#E;5H0bU96,3i@k^3H?g+f:.uC\h7aT`HNlh@kfot!mrno
%Go?b.qBd`7\GKF3!rXed,tJI*+Fi^3Y:[Yin=XOJ(m.q^j*Q:EX\Rh:>#]l6&.U<S.A]XlB"N"JnoO0\B&?%O>DR)+,OTZK-iM%r
%T<iYtn*J\G&l*%W;*3cE?%!U.&u^>iGICmQ,Pa#.m[QS[n>[S19FTL2],l+N'GT-r"XSCDq3cU5d"P-r=6jCXcaFB2pfpC8pG=bb
%48$?'Dqm#E3s;7+:0rT1T[UND54qG,RArAWo3-eI)b+i];UWfF'MOHJ$it#]X18G^KaTn6o#N)t*AX1dMKH@CDf"rC?<!,#EK9D/
%;7]dPL,@1Mbj/S5oIZCs="N\@5SO>)DKFDq/L?0YP#2"e.C!Ho'e9S-,U#3G=iCsm_'i*corEG<i6S:o0:AWU)lhs[PmmXgg0S&7
%A#LK"n#sT;j*jkB9N[6!m`UMHLOgmG4<baW`$L7Y9UW?J#;%\u\7jdBX&\Alo/@4Fch7nX1p?"/jkc+"lt._Y)5)gP8UqqBOS<7s
%ZCi\#Gt%E^5_AW(9b:_+,,1]]-,rp>(P_5(_&PgmW+s2n"rmqK3,RL<bunTVT4KUgDV94k.":%)YBKp*!Js_g:'n0Mn#l%WRoQLY
%2>7`EXb]E(S\<Z'(](WDIPkg=i@XnmnlHGka`VB![A"3!$T;"Y5B1skGs<FVXsVih^+c]BJdK3Af=g/mHJDEEg[<V[>QFjo\emHk
%4,S'SW"aof#ek'0_.dq,q_Dc-\7U\;XR-UCRZN9FbR;@ZP,@7."C\:?&UFhLm<5V(X_TGUZ3@!iHPtKq=1QWe*=;E2D.+TUDn\WW
%qGaAtW_7T@-@m(nW+:Js]qIl0*oR61*73,!)`RrmciujO!qHV`7<dFIqb$"`BO04MO_?"'C@8FFNtT-#lY=i;0,;><+'WKAV^+'U
%.T3NbL5o`lP]B=;,oh7./kU8jYE5;BW!QH)e;6dd.n3i8r1\!j74K[I.Ck2NFBPIpc>jdOHiJZgRf,L%X=c@Y9:_d,pnl+1ri7+3
%O.Ns*8CuAK,2<-]<UWEcG@^60U,,jJW$nV!Fg*rr7aS-&>hZFcF"29?>g'8a!&*Pd!c1Hm+D!g6V%N,`V%oW&RnDt=auYGLibr8h
%s#+*B2rYnSB(h9*;LU1/)Tc5XS(:lnU]k1=QK3#<[Z9'okhQ^;Cq-OnYlej'm/c(Er+eI=pE82NC'6@\31*dC:InG.2Rc.6&U&=2
%%16=rk:ue>H5KUm&Y#5K./3r[$^cMB7I@Ice+)B,84-u\ZTukc8s6iiW$%=0">pc'S'YllJF"N^>KHPHK\b"f:fPWns01dZN^6EH
%N])k?-kkQ4d@N%ih*)J9"H8"4$D^GR!i[jc78+@$dbqKk.U:><G6T:e7$he@N2V;h39auHNU!$CX<AM*f\?T"3@kO'`T2oHV_KZ*
%^PAY:FYA6R[63YtL1o*.0tR)FIE'?!reh>kMEsYU</W"H52t3M]B'HhMjtub\a#ntMN$?QFfMX:pglu9;1o.g6#A5rf`_-2:M!O7
%GL8A?NS$e1h=X>7!"-#>,bgVg/YtrXJR7.^=!ZopKKcdcfepdnM=W"V8p40Fjg?#tUrhF-n=5>L=VBQ)$N)E/"83KEFkB7g!iAjQ
%N9!0k.;lqZSo\ME8U$."AO7`A#O:P)@onKdRTQuu`![:rV&08$9Pm>nD=l:rY/(g)6R3<262Wcas%GY+1`93TR3mVOK"/Ws(e^dD
%FG'6ObVNfY\!gJMWQpi[TMQf_lqk;?P2(90$MpR#k_PD!8%l1!I0ue^MV$YM?r'<EqA9@@S&^jX=SR6t@N=frA3/V/j_`A&bfm@S
%LQNqW_8D\iPl@rZ9QVrD0gnlTEp35^$+OMA"o14,h&3nlbNe_AON@?UJgX!dkVAuH>MeHNP(DaF(K$._^urdE0;`O':G"DG`Fomr
%OV`;h1*QEu<@j3*kN.JR3/45q#raVn*f]8Gl)-;`_A8L8k7'b(%<Xf-]B1\g3QhlV^-B5GB`?qSp87g,FtBsE3+tRCBQ**VMkP/o
%d(6>]Mm$4@[lTjLT[Pub`'k?LaA/0bmkBPJ7ol7&,LJIR.$;G-R^t5V!_8+BA(SLmh;#)CI1m5Td/['kA"'"I@O'4%5uQtNd0Fk/
%o<u#rgLV?sp,\:260k(nl8`ZC//q>.;Z\2>_+GQ?A."R_*c:0ue$P3YUc;`PAT#5)ri)EEQqpV5h6CucC,+A.I+cg4muTul;)d,?
%^Pn'nD'eW^m,Y[Y-t0FmJ'In%,cg]X==.<Bo[^2<PfUa!F!Q<U/(hVFUG(%^Tn%o\64PRi]/,SMrI3M-Y'/%[Eq>N)pDG*!/"Ii[
%e"\_b(@/N+H&2ntIkd@[H`8r^N4o]+PQAUEq]ap<bgh!TFNUnaJ/0XP:lG[e]u78A(K<p'=9;,.bK>?X=Ak5U!dW27735u>=\?bS
%]s=LgWUkHD8^=M?CU@A9Vm.)GG0_4>):hjAie:8eH>L1G2[DS</["6IW>f0CdB)mn8^O%ffsg)r@A*HTWr[S@h01gnV@PVK,?$,@
%Je:/Pfl/Oi+k0?&nc?]Pr?72[V@e(RG`WXp^be\)nY"[*2WA&dmX6A*2!L[=F[SO[ej9cj#BmGSLDP/lW30>alj,.1C!hu0MA.:j
%d%'B`"Q"paLt9InG4D18c=hT[V5q1T/=KQ`)hHnN77YGa"b21%auIICpu^FVE<p0)5=n:h\!F0).L#bNdb'4S[V2g[C@0%@=)VXX
%eUc%pa?u>D?@TYWrJ:tTc-.*KXGE?TfAct6YoAYZHg3u"HBUdM:u^TR)aC[OrT`%4eK>qS*%e>XN4WVUpG22?[M;fek3bfM5)BUj
%mmJc,iR?R./f!6nf\fM$fF?,P&5eB9n%HleWp3oMJq:X0]n:F[Em8K8*d6O62T:f)Sg+CH#O@V1NiCC+gd"V7ph.X'-2!(6EFt=f
%&q;T',*Io`SZ[S/NOVnU=#!ZKVTg$"T#l=JX]SK$OG]qV?]TqCC!eETf/q5PZY[-3I+B)la^N[O#pFQ[q*R5GEd+ug<Mit?o'&(K
%^6/&2>DZ68]"q"UHuXhIp^U*,g\$/[fQQ'nRno1cAd@:R0KM51b&!(/SReIgl^uu;XX"?3X>!drl[ljAC8X8gg`^4O:Ye\\q(iYQ
%8'm*EH)T`HQUP`iR_kB6X7$P6k`lJs^3E>BH:Go6@mk^F`HmH*L>>>qT`gi\&P^8t9ORCh9R3sj_rg'/[b]j+hY]uW']"Q?2JkZ_
%(k)FVDu]dnr3-)!r-/25+5VMIs8Co;Df<+9^]32@s,V[)5Q:HTs6K^a_]SpH?iB"Ls8Ke4iHN':VglQBs5C`JrmU?8nW/1pkPs^0
%s7$W7qre"OTDr8Wi1]bXhuEYiqqqC>^\_+45F+P'Sc~>
%AI9_PrivateDataEnd
