%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Boy_Dash.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: WINDOWS
%%CreationDate: 12/15/2014
%%BoundingBox: 0 0 394 150
%%HiResBoundingBox: 0 0 393.5953 149.1373
%%CropBox: 0 0 393.5953 149.1373
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.1 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 52 8%%BeginData: 9422 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD1CFFA17DA17DFFA8FD22FFA127524B7D7DA8A8FD22FFA84BA1A8
%FD2AFF20FD044B76767DA8FD1FFFA84B4B764B764B7676A8A8FD1FFFA84B
%4B764B767DA8A8FD25FF7D44764B6F4B76527676A8A8FD19FF7D7D527627
%4B4B6F4B6F6F76527DA1FD1BFF7DA87DA1274B4B764B7652767DA8FD1FFF
%764B274B27FD084B764B7D7DFD17FF7D2020FD044B6FFD074B7652A8FD18
%FFA820204B20FD084B7652767DFD1DFF4B44766F766F764B764B764B6F4B
%FD0476FD17FF52FD07764B764B6F4B6F4B7652A1FD18FF526FFD04766F76
%4B764B6F4B76767D7DFD1CFFA84B4B766F766F7676764B764B6F4B4B4B76
%52FD16FFA120764B764B7676766F766F764B6F4B76527DFD17FFA8276F4B
%7676766F766F764B6F4B4B4B7652A8FD19FFA8A14B4B4B764B764BFD0776
%4B764BA152FD12FFA852524B4B4B764B6F4BFD07766F764B7676A8FD13FF
%CA7D764B4B4B6F4B764B766F7676766F764B6F4B7652FD17FFA84B4B20FD
%084B6F4B766F7676766F7676767DFD11FF204B4B6F4B4B4B6FFD054B6F4B
%766F766F766F7652FD13FF204B444B4B6FFD074B766F766F766F764B7652
%FD16FF4B4B4B764B4B4B764B764B764B6F4B766FFD06767DFD11FF764B76
%4B4B4B764B764B764B6F4B764B766FFD04767DA1FD12FF764B764B764B6F
%4B764B764B764B764BFD06767DA8FD15FFA8204B4B4B274B4B4B274B4B6F
%4B4B4B6F4B6F4B764B7676FD11FFA827204B27FD054B20FD044B6F4B4B4B
%764B4B52A8FD12FFA14B4B4B27FD044B6F4B4B4B6F4B4B4B6F4B764B7676
%7DFD16FF7D274B274B4B4B204B4B6F4B764B6F4B764B6F4B6F6F7DA8FD11
%FF4B4B274B4B4B27FD044B764B6F4B764B6F4B764B767DFD13FF52FD074B
%274B4B6F4B764B6F4B6F4B6F4B7D7DFD15FFA8524B274B204B204B4B6FFD
%044B204B4B6FFD044B527DFD0FFFA1274B204B204B274B206F4B4B4B6F20
%4B4B6FFD054B76A8FD10FFA8524B204B274B204B204B4B6FFD074B6F4B4B
%4B76FD14FFA820FD074B27FD064B6F4B764B6F4B4B27767DFD0FFF764B4B
%4B274B4B4B27FD054B274B4B764B764B4B4B7652FD11FF7D20FD094B764B
%6F4B4B4B764B764B6F207676FD15FF4B204B274B204B27204BA0A0A026FD
%064B76A0764BA1FD10FF274B274B204B4B27207675A075274B4B454B204B
%7CC94B76A8FD11FF274B204B204B274B20FD054B206FFD054B754B76FD15
%FFA1274BC9A74B214B51CEC9A075A09AA076A0A0C9C9CF7C4BA8FD10FFA8
%20A0C9A0204B27C9C9A176764B764B7575A0C9CEC94B7DFD12FFA120517C
%76274B2076FD04A0FD064B75C9C95252FD16FF52A076A076214BC9C9C976
%A04BFD06C9CECE5252FD12FF7CA0757C4B27C9C9C9A0A77576C8FD04C9CE
%C9A127FD0DFFAFFD06FF76A0A7A04B2051A6CE7C764B7676A075A0A0C9C9
%CA21A1FD16FFA8A0C975A0A0CFC9CEC9CFC97651CFC9CEC9CFC97C52FD13
%FF7CC9A076A0CEC9CEC9CFC9A74CA1C9CEC9CFC9A04BFD0CFFA8767D7DA8
%7DA17DA87DC975A0767CC9CFC9C9C9A14BCEC9CEC9CEC9CE7C7DFD17FFA9
%76C8C2A0CEFD05C97C772751C9C9C9764B4BA8FD0AFFA8A8A8FFA17D5276
%A1A176C9A0FD07C9525220A0C9C9A04B4B76FD0BFFA851C9C8A64BFD0420
%4BA0C975FD07C97C774BA7C9C9C9A04B52A8FD12FFA87D524B52FFA876A7
%CEC9C9C9CEC9CF75F84BC9C9CFA052277DA8FD09FF7D7C7CA14B27204B20
%4B527D7CC9C9CEC9CEC9CEC927F8A1C9CEC97C4C51A1FD0BFF7DA7C9CECE
%76204B4B4B2076C9C9C9CEC9C9C9CEC94B204BA0CEC9A027527DFD0EFFAF
%A1767D5227204B202027A8A85126FD05C97C7675FD05C94B5252FD09FFA8
%76A6C9C976204B202720275276F876FD04C9A04B7CFD04C9CE762726CFFD
%0BFF7DA0CEC9CE514B4B4B204B205175A0FD04C9A6A74B4BA6CEC9CE7652
%27A1FD0EFF7D75C9C97C204B274B274B2776272E51CEC9CEC95127C9C9CE
%C9CEC9764BA8FD0AFF76CFC9CEA04B4B76274B4B27272E27A0C9CEC9A120
%7CA7CEC9CEC9C9517DFD0CFF7D76A0CEA0A1FFA84B274B4B202727C9C9CE
%C9C927A1C9CFC9CEC9A12052A8FD0EFF76C9C9CEA627277627272027052F
%052E51C9C9C94B21277676A0C9CEC97CA8FD09FFA87CC9CEC9A0A1FF7627
%202727352E2E277CC9CF7C2020525276A0CEC9A17DFD0DFF7D5276767D76
%20272020202F2F274BC9C9CE7C27277CA0C9A7C9C9A176FD0FFF7DC9CEC9
%C976FF7D4B20272736352F27284BA7C9A0684B272775CEC9A17DFD0BFF52
%7676C97CAF4B272027203535362E282776A6CE6F9320274BC9C9A776FD0F
%FFA84B757620272027203535602E2827C9CEA7444B275227A7C9CF76CAFD
%0FFF76A0A0C976A87D202027F82E3536352EF84B7576A07568204BCEC97C
%7DFD0DFF7D7C4B764B202027F8200C36353505274B75757C6E4B20C9C97D
%52FD0FFFA8767575A04BF82020202E36353505274B7CA7766844F875C9CE
%767DFD11FF7676767C7627204B204B202E3560352E279A4B27767651A77C
%7D7DFD0FFF7D5175C94B2727A152282E35352F2E4B7527527D517C7C7D7D
%FD10FFA89AC94B767652A8FF7D272E60352E2775765175764B75A0C97CA2
%FD13FFA97D26A0752720A1767D59FD042E35262752FFA8A8A1A8FD10FFA8
%75A07675A04BFFA87DA859052E27362E2727FFFFFFA8CBFD12FFA876C275
%4B75A1FFFFA1532E282E2E35274B0552A1A17D7D7DFD16FF75A04BA0757D
%A8A1FFFF84352E36353527FD17FF75C9764B75A1A87DFFFFAF602E353560
%2EA1FD18FF7D76754B51FFFFA17DFF842E273535350552FD1BFF7D76C875
%26A05252A8FFFFFF845A0D350C7DFD17FF7D4BC24B757C5259FD04FF8435
%35132EA8FD19FF7D767DFFFFA852FFFFFF84360D35352E7DFD1CFF52A0A0
%7575273584FD05FF84352EA8FD18FFA87576A87D2E3C84FD05FF603552FD
%1FFF2E5AFD04FFAF8435352EFD1EFF5275514C2E360D60A8FD04FFA852FD
%1AFFA8A8FF283535355AFD05FF52A8FD1EFF5235355AA8FD04FFAF2F7DFD
%1FFFA87D2E3C3536355A84FFFFFFA1A8FD1CFF2E353536353535AFFFFFCA
%7DFD1EFF7D2F355A353684FD04FFA1A8FD20FF272E2E3535352F3535A8A8
%7DFD1AFFCAFF762E3536FD04352F5A847DA1FD18FFA876524B524B272EFD
%053559AFFFA852FD1EFF7D764B4B274B272E2E6035353559A1FD18FFA852
%595252272E2E3535603536353552FD18FF7D274B204B204B2776522F355A
%3536358452FD1CFFA87D2720204B4B4B204B20272735353505CAFD16FF7D
%520C350D3535352F5952520C36353506A8FD16FFA852204B274B274B7DCA
%A8FF7D2E2F3535360C7DFD1BFFA87D5276764B27FD074B21352E2027FD15
%FF522E356035363560355A3584A87D2E3C35277DFD16FF52204B4B4B274B
%27527DFFFFFFA8523536352EA8FD1AFFA87DA8FFA84B20272027204B204B
%274B2027202027FD13FF522E353635352E2E2E2F358484AFFF7D052E7D7D
%7DFD14FFA1204B204B20272027272752FFFFFFA82E35354B7DFD19FFCA7D
%FFFF7D4B4B522027202720FD054B204B20277DFD11FF7D59AFFF352E27FD
%062EAFFFFFFF7D52FFA87DA1FD13FFFD044B204B2027204B202752FF84AF
%A12E27847D7DFD18FF7DA1FF7D767DA820527D762020204B274B27272027
%204BFD10FFA876FFFF59272E350C2E272E27202EFFFFFFA87DA8AF7D76FD
%12FFA84B274B2027202720272076272052FF3584277D2F5927CAFD17FF7D
%FFA17DAFAF277DAFA852CA7D52204B4B4B2027272720CAFD0FFFA8A1FFA9
%52A85A052E7D5905527D76A8FFA8FF527D7DA827A8FD11FFA8204B272720
%272027207DFFFF52277D843535525A0C2E7DFD16FF77A8A85284AF5252A8
%AF52A8FFFF7D20204B2727202720207DFD0FFF76FFFFA87DA9275276AF27
%7DCAFFA876FF527D4B52527D2752FD0DFFCAFFFFFF7D2720272020202720
%4BFD04FFA82E3535352E2E2F0C2ECAFD15FF7DA85976AF7D287DAF7D7DFF
%FFFF7D204B4B4B274B274B20A8FD0FFFA8FFFF7DA8527D7DA852A8FD04FF
%4BA876524B52524B2752FD0CFFCAFD04FFA8204B2727204B202776FD05FF
%523535602E2E2E3528FD12FFA8CFFFFF52602E7D597D057D597DA8FFFFFF
%524B204B4B27202720207DFD07FFCAFFA8A8A7FFFFFF7DFFFF7D7D7DAF7D
%7D7DFD05FF522776204B2752202720FD11FFA827202720272027207DFD04
%FFCA523535352E2E2F0C2EA1FD0DFFCFA8FFA8CAA8FFFF5235592E59522E
%2E5976FFFFFFA84B4B4B274B2027204B27FD07FFA8CAFFFFA7A8FFFFFF7D
%A8FF7D527DFF7D52A8FD05FF4B4B274B4B27204B204BFD08FFA8FD09FF4B
%4B2027204B202752FD05FF2E3635362E2E2F3505A8FD0DFFA1A7A8FFA1A8
%FFFF5235FD042E052E2E52A8FFFF4B4B4B274B20272027F852FD08FFA8FF
%FFFFA8FFFFFF7DA1FF7D207DA87D27FD05FF7D27274B204B2027202052FD
%07FFA8CAFFFFA8CAA8FD04FF7D204B20272027F827A8FFFFFF7D2E353535
%2E05350C2EA8FD0DFFCFA8FFFFFFCAFFFF7D2E60282F282F272E28FFFF7D
%A1A1204B4B4B204B2027A8FD0DFFA8FFFFFF4BFF762720A85227A1FFFFFF
%A8FD054B2727204B20A8FD0BFFCFA7CFFD05FF4B4B4B2027274B2076FFFF
%A82E355A353628352F3527FD14FFA8FFA12E35352728052F2705277DA8A8
%27764B272052202052FD0DFFA8A8A8FFFF7D4B7D2020277620277DFF7D27
%204B274B20272027204BFD0CFFA8CAA8FD05FF7D20274B20202027F8767D
%520D5A35362F2E2E350C52FD13FFA8CFA7FF523535352E27272E27A1FFFF
%7DFF7D4B27A852204BFD0EFFCAA8FD04FF52204B4B4B204B2020204B4B4B
%274B4B4B204B20207DFD15FF52274B5252524B52527D59A95A3535522E35
%2E2EA8FD12FFA8A7A8CAA7CF27353536355984FFFFFFA8FFA84B27A87D27
%27FD0FFFA8FD06FF52204B274B204B274B204B274B2027202720207DFD17
%FF52204BA1A8FFFFFFAFFF845A352E27592F0552FD14FFA8A8A7CAFFFF2E
%2F3536358484FFFFFFCA7D76FFA85276FD18FF7D204B27FD074B274B2027
%204B7DFD19FF7D527DFD05FFAFAFA85352847E2E52FD16FFCACAA8FFFFFF
%76522E2E59A8A87D4B52527D527DA8FD1AFFA8524B2027FD0620F8272776
%A8FD1BFFA87D52FD05A87652527D76767DFD1EFFCAA87DA17DA87D7D7DA8
%7DFD1FFFA8A87DA1FD077DFD21FF7DA17DA87D7D7DA87DA8FD92FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2014-12-15T11:34:54+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2014-12-15T11:34:54+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2014-12-15T11:34:54+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>100</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAZAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq0zKqlm&#xA;IVVFSTsABirz7Ufz5/Ky1keAaw10ykoz2dvcTx/NZo4zE3zVjkTMN0cEzyD5xg89+b4L65MHmXV7&#xA;yGKZo4Z7i8voxNGjfu5fSaRePNaFlp1qMpMzbsYaeJjuKLK9F/PPzvYlRPqMlwo2C3EUNxEFH+QB&#xA;b3DH53OEZSwnoR0eneV/z5sNQKRalZ1YgVn0/nM48S9mwE4+UHr07nLBMFxMmmlF6dpmqabqllFf&#xA;abdRXllMKxXEDrIjU2NGUkbHrk3GIROKuxV2KuxV2KvKfNn/ADkN5e0LWb3RoNKvr++0+UwXDUjg&#xA;h9QUqFaRvUPXr6dD1BIyBmA5OPSymLD568x6pZ6p5s1TWbTTja22oT/XFgu1huCk8vxTUqGB/eVZ&#xA;TQEVp23qlLfZ2GHDUakE50T8x/M2ksv1a9uIVB3FvMyKAOy28nrWa/P6vXEZCiekgXqXlP8A5yAu&#xA;ZHjt9WiivQdi6cbO5G3ZZHNtN7n1ISf2YzlgyBw8mjkOT13QfMuia9bvPpdyJvSbhcQsGjmhcivC&#xA;aGQLJG1N6Oo236ZY4hBCZ4odirsVdirsVSLzr5w07yhoEuuajBcXFnA8Uci2qq7gzOI0NHaNac2A&#xA;698BNMoRMjQeG/mr+dvlzzV5XbTtL0/V7bUre4hu7K4dbVIucRowYpcu+8bMBRftUyszBczHpZxN&#xA;kbMU0P8ANrzvpaoserXrRqN0kmFwWPgxvUu6D2Tj88gMhcmWjgeWz0HQP+citQ5LHqlva3QP2mAk&#xA;sZB7L8V5FI3u5hXJjIHGnopDk9U8tfmH5Z8wSpbW07W2oSKXjsboKkjqv2mhZWeKdV7tC7qO5ywF&#xA;xJQI5slwsHYq7FXYq7FXYqwvzx+bnkzyfN9S1CaS71QqG/RlmglmCt0LlikcYPbm4r2rkTIBtx4Z&#xA;T5B8tavqmkzeYLu60PSF03Rrg+pFYTyCZopCfi9MKoWOM9QnJuJrQ8aAUSIPJ22CM4ipKa6lAdpb&#xA;WMjxUAfrGQb1dP0NcbU9Jj4kr/zbilt9FX7UMxHda7/iMVZz+X3m7zFouptKkguLuZgXhL8UvugM&#xA;c5YU9cgUin6g0V+SH4LYTcHU6YEWH0jpGq2Wr6XaapYv6lnexJPA5FDxcVHIHcMOhB6HL3VkUi8U&#xA;OxV2KsE/NH817PyHHYxvps2o3upCU2kaukMP7goH9SU82X+9FOMbZGUqbsOEzNB84+dvPepeavMK&#xA;a2bGz0qcJ6NwLcSSPPGv2BM7sqFk/ZcRg02OwAFMpW7PBgOPqlset3A+2iuv3ZW5Kst7pc+00QRj&#xA;3I/iN8Urm0mzmHKCQgexDDFU/wDKmr61ouoQSxXwgkhAS2vSrO0SVr6UijeW2Y/biJ2+0nF98nGd&#xA;ONn04kNub6d8qeYY9f0SHUBCba45PDeWhYOYbiFjHLHyGzAMvwt+0tG6HMkOmkKKb4odirsVdirw&#xA;Dzb/AM5GaFrOlXWlWflia+sL2J4LoanMlsOLChokH1h6/wCyQg79crOQObj0cjvbxux1O+ghEUnC&#xA;QKSFNPi4fshiKciPGgr4ZQXaRBA3Ra6nZy7XFuB/lAA/0OBkqCw025FbeTi3gDX8DviqpaR6rp7U&#xA;t3Wa3Lq727FgpdPsuKFWR1/ZkRg6/ssDhBprnjEhu99/Kf8AMi91Ew6JrbtLNLyXTb6QhpHaNS5t&#xA;rllCqZRGrOklB6iq1RyRq5EJW6nUYDAvU8m4zsVdirsVdir5q/5yYXynJrNtqWm6rCfMUNLPVNNi&#xA;JdzGKtG7lAVR4+VGD7lSP5d6sgDm6WUh7nibXMrMC55U6L2+7K6c7iKrbm8ufi9Qxw7gMAKnt8II&#xA;p9JwFlGyjHkjgi5SvRVABdj1PT7zgbCaVba7k4B4WeMHsQyH6VNMUg2iG1u8hUO0/ChAV6AEMTQU&#xA;IHWuKkvqv8oNYh1HyxcpEAFtL+elOgW9C6lGvzjivlRvdTmVE2HQ5Y8MqZxha3Yq7FXiP/OS3mTy&#xA;cdEHly/+sN5ijCahpvoRAqlS8Y9R3aJeEgV0PEsQaNxNBkJkOTpoyuxyfNXquSOZLBegJyl2Nqsc&#xA;95NJ6cTBaCrGg4qO236sDIElHoDHH+8k5UqWdqD9QAwNvJu2ulkHqQOeNaBxUV9we498VBtXl1e4&#xA;t4WkluCkaCrM2/8Abikmn0j+QWuJe6bqFoAeYjsr5mY1YepE1gVb3L6W0nyceFTkQOzptVGpPVsm&#xA;4zsVdiqH1HULTTtPudQvZPRs7OJ7i5lIJ4RRKXdqKCTRQTsMVAfFn5kah5ZuPO2o6h5TuZJ9Jv2+&#xA;tEvE8ISeUkzKqygPx5/EKqKV4023olVu1wGQjRY5HdslSau57kmgHyyNN4nStb3dzO/wRr6amjyE&#xA;kD3C9anAQzjIlFtIkY5OwQAj4iabnYb4GZKLi1K8jFBISPBt/wBeBWR+TfNQs9UaW5I/0UQ6giJs&#xA;1LC5iupiOu7WsM0Y8eVO+WYzu42qjcX1/mQ6Z2KuxV2KuxV88fnn+UF3d+b7PXtKZUtdduIbTUeX&#xA;+6LhgEWbjUckdF3A/aH+VtRnPDEyc3TZf4Xm/mnyJplrarN5dk1C7nhkjju7O8tykzLPyWKeBVVT&#xA;6bPGU4kcwSK9cw8Wck+qnNIpmf5d/kZDDY3Gp+aLdnu7lP8AR9LVwvBftVkYHjzYjYfsjruaDH1G&#xA;rs1H5rCNboXzB5E0f9M6Taanp6eW5b5ng0qeO4huY5J2UH0piyLIJNqLT4a/DyqRVhmkASDxM7jY&#xA;vYpva/kEtaXWrSla9YljRqeG6uMidaegZ2O8plrn5Y+SPLvknXbtrT63eJYT+ld3FZZRNwIh9ENU&#xA;Ixl4AcB1xw5Z5MgF7NOUgC3o35PeWL7QPJkK6jGYdR1Bxd3UBFGjpDHbwow7OILePmOzVGbuIoOp&#xA;zT4pEs3yTW7FXYq8j/5yH/LyHX/L8ev2rpDq2k8Y6vss1vLIF9NmAJBR25Ken2h3qK8nK3I0+Qg1&#xA;3vGvM/5baTYWk1rpR1SfXbNS7CeKIwXqxOsdx9VSLlKrRlw6h+qVpy+0Ndj1JJ3qvudkYkJz+Xn5&#xA;FTXiNqfmpZbWKVALbTUkkilNd/UmMTIy7dErX+anTK9RrK2h80xG9lC+evy3s9K01PrWnWWk2E9y&#xA;kY1I3s2ozKqnkPUiuEgIUhauYnYqtagqDjhzmR2Jke6qWRHUfpR9v+QvmKUrz1e1iiIqHWBnJ+X7&#xA;2mJ1w7m2/P7GX6L+VXkbytBJqmtv+knijcyXF9xZEQITIIoQFSvAHty98qGeeSQiNh5NWQ0LZD/z&#xA;j15P1PQ/J63+rQNa3+pRwrHayCksdrDzeJZf8syXErf6pWoDVzeRFOqzT4i9TyTS7FUv/wAR+Xv0&#xA;gdN/Slp+kVNGsvXi9cH3j5c/wwWmijbiCC4gkt50WWCZWjljcVVkYUZSD1BBwofI2tfk2dK806xp&#xA;97qqWWiacY2t7/0nu55Rc8mgiEEXF2kCIefyqBQ7YWfLwGgLJdrhnxi2I3Pk/WP8R/oHTVGq3Eqp&#xA;LZTWorHPbyqHjnBbZEKsORY0U1Fe+IzDh4js2PSG/JA6VpVp9YfUtUvXVUmttNNoqowWrMGuFg+H&#xA;alWkqfDMH84STVAedtooDr9jFY/y41jVtXvZdDsmEVi6wNaX8siXML8A5aWMo4Vm5mhXYrQgnrlw&#xA;1IiBxde5QLNj7Snun/kl50upVF1La2MJ6yBnmcf7ArEP+GOQlrY9AyJPkmOvflZp2ma95a0LQ2mn&#xA;1rW4r62vrhjyYwlEja5elFjWBZ2ZQAAdxu1Mv0c5ZLJ73Ez5OG/c+ns2LqnYq7FWJ3f5kaSlzPb6&#xA;fYX+rm1laC4lsoV9JZYyVdBLO8COUYcW4FqHbqDlGTUwgaJboYJSFh5X5x/5yhvbPUbvTdB0ARy2&#xA;krQSXGqPQiSNirj6vAelRsfV+jJDKCLDbHSk80n07/nIeLzJYzaJ5zji0oyOkll5g05HaK1uoXWS&#xA;F5reR5XKLIo5cXNRsQASQJVIUeqThMDxR6JzpX5keVrTzeml3i276nJxtJtY06VrnTgZaSRqkxVQ&#xA;A7cagk8SQKnc5q82hnGJI3iHKGrjIgHaT1DNc3vEvM1vrP5keZ72y8talFbaIgg03zDHccBcp9Ru&#xA;3nMlsBzbi0lBzBXkydaDNniyeDDcfVu48o8cvc9dsdMms9J+oLqFzcThGVdQuTHJccmrRzRFjJWu&#xA;w4U9s1xlZum+nkv5W2t55y8+wX+svLqcltLb3hmvLcQGzk0+Njc21tGGYRot3Pbry/3ZwfwJzoMO&#xA;KMa4XXZshrd9M5kuI7FWD6t5g8zX3mDU9N0e6t9OstJaK3uLh4DcTyXMsCXJC1dEjRI54+qsWJ7U&#xA;3wdVrPDNAOXg04mLLyT84PzS/NHyzq1ppsOtwwWtxbmZLq3s4onc+oyNGzTtciqDiaoF64dPqTkF&#xA;8m38tEHd51YfnN54rd2+oanJrul3kbQ6lp94wMckUoIYRyqOULgGqsn2TQkHpl/EeqThieTOdK/O&#xA;ry3Be6XJdwrqTsP3mpJ6iXVtGaxu11b+kY/VCir+jIVYfEAtQua/J2edzA7dzP8AN1UZPbYJ4Z4Y&#xA;54HWWGVQ8UiEMrKwqrKRsQRmrIpyXj/n+51Pzp5om8t+WNVXSNR06G50zVBfCP0bq2v0iadbUp6z&#xA;NIqIA4KqaHqN82GmkcUeIixJoyATNdz0ryp5ZtvLejw6XBdXN2kSqqyXcrSkBFChUDGiIANlXMLJ&#xA;k4jbdGNB5HbaTrHmj8010TV4r2/gV5bK4l1OCD6vFFBfC5WWzCqoBlsIOLS0rzkA8M3OlhDhBj8X&#xA;CzTIu31Jmc4DsVSzzTfT6f5Y1e/tzxntLK4nibweKJnXse48MBTEbsC0Xy95afyvY272Nvc2LW0b&#xA;sbiJJBJyQM0khcHkz1LMzdSd85qeSXETe7ugBT5x8w/l35qpe+ZI9Ell0CWWa6stSHplGtWdnikW&#xA;r81VoyCtQM30Iy4Rfc4wyQunfl3+YjeXbz09RMlxouoiOOVPUDPblC3pSRGRggUeoQ61A3rXbfH1&#xA;ODxBtzDdCfAbD3/8tfMHk3V9JlXy05ZLNzFOsoUTAOzSrWhb4Ku3Deg3HbNXnxzifUzjMS3DINd1&#xA;7StB0yXU9Vn+rWMJUSzcHkCl2CrURq7bsQOmVwgZGhzSTTyn8uPKv5mTeYG1nVXt9Chjto7Wae0S&#xA;OR9W/etMbmYMz/vG5n94yhgDx49cz9TnxmIiBy+xpxwIJLNPzR8y6l5e0KO8tNQttLineS3mv7qC&#xA;W49EtBJJG6JEd25x8BVWFWBI2ocfSYozlRZ5ZGIsIj/nH2wuLnRLjzPeGd7vUY7a29S6mlncvbx8&#xA;rp19Vm9INdySIY1oBwG2bzFARFB1meVl6zlrS7FXYq8a0fzZ5f8ALkUmga3diwvrO/u7Qeukiq6i&#xA;V5opi5XiqSQMH5MePXfbNFqtPPjJA2dthyAxDzTzzqX5V2x1nzFe2X6a8w6relNI0oXE0EMcMEEU&#xA;f1m8SBo3UPIrSBCQZFK0ABZs2Wmhw4wDzaJykZbcniyTrLfRwzyrb2s8vOYotFiVmq3BQDsK7DL4&#xA;AE7sc05RgeEWaek6j5e0+bSEl0dI+UMPGEJRo54upjen2uW9G61+nNtLEDH0/wBrxmLVzGSsl7n4&#xA;xPePxyZP+WX5v6tZ6dcWutA3+n6bFHKGZ1W9jtZAPTcGQolyg6faD9PtFuI5fWaQCfp24nuNJlMo&#xA;WTfDz+DBb3T5rHWHvvKN7JqENxcvNaLbsRMyPIQw9L93dwSoRwZ1oGpswOwuhKX0zDkkYJY+KJIm&#xA;PkR+g/YXuXkDVb/TdIKeYdSfVPMl43OPQbV/rtzboPhSIKrSuCaVkkkcID1YAVzFnpzkn6RwxafF&#xA;ERubemeTvL97ZG81bVVRdY1Qp6kKHmttbQ8vQtQ/7ZTm7uw2Ls1Phpm1w4hCNB12XJxG2S5a1uxV&#xA;5x5x0bzZpGpa35k0eXT5NNuYre5vIb12haJ7ZfSmkViUiIMCqfjkShWlab5hanSDIbcvBqOEU8u1&#xA;b81tTGn675l0bSoby7hSKwt7l2Se3soATJLL6bcZZZXZ15fu1jACkM6glq9Pw4vTfqLfkxyyer+E&#xA;PD70+cfNN3f60y3+s3UQ9XU79UkuBFHQkeqVBVEAHwrsAOlBmZzYWIigzvTtO0S+0BLPT2MYio6u&#xA;RxnjnpUSOpoeR79iPbNxCETCg8TnzZYZjKe9/Iju/HL3ph+WX5geZ9AupdLuTE+n+nLPDp1y5jQG&#xA;3Yi5+q3B5BOPEt6bLx67r9pud7Q0oviqr7nsuzs/HExErrv51z/H9qR+cI7DV9VvfNHl6aVY7+YS&#xA;vb3ZWAxXXBGe3lS5It5dyHT0nZl5Cq9CY4xkhUZD8fjvdhGennjN3x9CPuI/SPk9R/KjULmw0+W5&#xA;13Wn1LVblVS00CyuX1OeOIE0doIXuAjyNttxjVQN1+LKc2A5JVGNDvqmgZBHmXrvlDQdTF9P5g1q&#xA;IW+oTx/VrGwDiT6pacg7K7KShmmdVaUrVRxRQTx5NsMGAY40HBzZeMsry9pdirTKrKVYBlYUIO4I&#xA;OKvmz8wrOwtNX1y58uaVb6LoVrILbXWtnaF7kQD99IltEYoKJyI4SchJ8VV3FcDPljx8Nero7PT4&#xA;ZGHETs888/aX+YHmfzVDaRS3vme3lhSfRxboGgW3oqFkigVbeFVagZgAOhJ3yzBlOQb8wuTHHGfJ&#xA;LNO8kah5b8zjTfOmmy2F1IvPToZwrW8jdW4yKXjkO42ViK1rvTNhpYx4vU6XtbLl8K8Z269/4704&#xA;v9U1jyl5iXXNCJjmmjZ5lpyib0yvqJOu1Y5AV3/ZYcqjc5LX6WMxuHC7H1soir5GveD+kfaNu5nv&#xA;nbzfp/nPyImnyyDR9WufQvrGOWVUt7sROrFbe6bjHy+L4Vk4NzpUDrnN4sZxzsb19j1/pNcXI/jZ&#xA;hvk7WPzUs9Ti8taKbovJQQs8BjijVjvJMk8c0SJH1PpBefWrFsyp+FIcUhuubCMcqxy4o+773u2o&#xA;3DX0K+WrBYdY111SOflGj29swpW6vF+KOMIw5rEfic7KOrLj6bSyMuIig0Zs4Ap6HoWjWmi6PZ6V&#xA;Z1+r2cSxIzmruR9p3P7Tu1WY9ya5u3WE2jsUOxV2KsM/N2e8g8mSywM8UCXFudQuoq+rBaeqPWlR&#xA;l+JOI+1Iu6LVgRSoqzGQieHm3acRMxxcngWt6fpVjInl6/iE3lO9RbiyvJplVre4LSNK0U7AB+Kk&#xA;PSR+TAtx5brmphKR9Q+t3cogek/Sy78k4vJWqJpVgtlHY2Vpb211FbSLU6lqqxVmup3fkzCB2YW8&#xA;ZNOrgfY470YZcPF0eanrIHKcd+r8bJ/58/IXTrmWfUvLSNayTktd6dBM9ujk9Wj4Mq1PgfoPbL8W&#xA;UcpODqdLPnjo10IB+V/dyeVah5G/SGqab5fFo9pq000djZ7NHJCleTsV25LDHG0tDt8OXagQ4Qe7&#xA;k4PZ8s3imJJo7yB/HV9R2HlTy3Y6NbaNb6dB+jLMEW9tIglVSxLM37zkSzMSzMdydzvmA9ANkdZ6&#xA;fYWUZisraK1iJqUhRY1r40UDFbV8VdirsVY7+YPl678weUb7S7Mp9acwTwRy7RyPazx3Cwyf5Epi&#xA;4N7HITjxRIbMU+GQLwLW4tVn85aethBcQ6yVa01TQUhjku+CfvazRkhJbdkqvqeoFXkCrbkHVQ08&#xA;t4EO5nqIbTB2ZL5M1jRJTo/krUVjs9A0mp1FYuAtrvUxJz+ryOmzQWz/AAs1eMki7/AvxbrHgkYW&#xA;87qNdjjl4TzP2Mz/ADE/JnQ/M0rapYotnrNDzljZ4RMDuQ0kRV1J8eh7jvluPLX1ftcbUaUneBo9&#xA;x3B+B6+bxTzL5IutOtotFu9JYXBkSHTLeTlR7mV/Ti4Sg78pH3YN41zKmYGHeA6nBHOM4u4ylz93&#xA;XyfS/lDynpfljy3aaJZxp6cMSrdS8QGuJuAWSaX+Z5OO5Py6ZrnpPcnEMEEKcIY1iSteKAKK/IYq&#xA;vxV2KuxV2KvMPzE/LG/1K4vLnQ447iLWlMWradNL6CCQoES7ilCuUYBQJFCmuzD4geWLn03GRIbS&#xA;DmafVcAMTvFQ8q+U7T8rdGu/MfmS+hnmhthbRQWMTIvOWX1JEiV3YvLczcdgFUeA3OW4sPCdtyWr&#xA;PqOMb7AIzT/JejefvL02r+Y3S91HVloBGeSafGu62kIIH2K1lYisj/FsAgXJFwO7gyMM8AYn3Hze&#xA;W6/+V+seVb8z3klxfWaqYrW5dvUhVHIqK8QwY8R/eEnwJzOwyjLe3Q6zHkxijEAXzA5/q92y/wDJ&#xA;/wDLDSNY86TXFyJZ9F0SOOcWUjAwLdyTetBGg48gicHkePlQkrUU2OHnxxhI8PXm7jQajJlxiU/4&#xA;do8/j5fgvdn/AC58hszkaDZIshJljjhWONyepdECo1fcZRQc/jPenWnaZpum2iWenWkNlaR/3dvb&#xA;xrFGvyRAqjCxJROKuxV2KuxVLdf8x+XtBsjd65f29hamoDXDqvMgVKop3dqfsqCcUgE8nzH+Z3nH&#xA;8priWKHyjaTSRXEjPfSRRzQ20SkUcWttN6KJJPXi8irsvLju5OQgMYlZbcsM5xmMefS0lsfOWgOy&#xA;Is5s3UgR+qrRKKdKP9ge3xZtYanGdreVzdlamG5jfu3/AGvYfKv5xX9lHHba1Gb+2AAW6Qj1wvvW&#xA;iyfeD7nIZNKDvFs0/ako7TF/ezHyrfQebvMk3mqFG/RGmRPpujeovEyTOVa9noeylUgU9isnZswZ&#xA;CjTvoTEoiQ6s2wMnYq7FXYq7FUk8xedvKflwL+m9Ugs5XHKO3ZuU7rWlY4E5Sv8A7FTiFJoWXmP5&#xA;k/nVpFx5fls/KjXrX968dtcXyWV3DJDaOGMskRkiRuY+yOhXkWFSBWyOI3uDTj5NVARPDKPF03Dy&#xA;zTtR0hhHZWkixNGoWO0dWikCqKbRyBXoPlmzjOPIPMZsOTeUhd9eY+Y2eheU/wA0Nc0JEtZx+kNO&#xA;XZYZGo6Dwjk329jUeFMqyacS35FyNN2jPHsfVFnega5b+fPMkGoW8MseieW6twmAHqarMhUfZLAi&#xA;2t3J/wBaUHqua+cOE09HgzDJASAq2f5FsdirsVdirsVYv54/Mvyh5Lt0fXLzjczKWtrCEercygV3&#xA;WMdF2pyYhffATTOEDLk8ovP+csrVZ2Fj5Xllt6/DJc3iQSEe6RxXCj/g8h4jeNIe9iuu/mfqX5h6&#xA;xFM+nS29npkZe10u3f60VkaoluXVQkkjBdhxjIRakn4jmTpssAbLre09HmlCoVXXz/HvTHyn5z1L&#xA;RZlvdJuFktpaGSKvOGUDxA7jxG4zYShHIHmsWbJp5dx6gvV7X85fKMuk3E+qq9nJDEzy2rIZlkoK&#xA;8Iyo+It0AYCp2zCyaeUd+jvdN2hjy1E7SPRPfIHl59F8vj6zbxW2p6lLJqGpwwgKiT3Br6S8duME&#xA;YWFT3Cg5jkk83PEQNgKDJMUuxV2KuxV2Ksf8x6/eQXdvoWiok2v36NJEZAWhtYFPF7q4CkEqpPFE&#xA;BBkb4agcmUMgOrwz839E8uQ3z2f1nVPNfnB0Ea2tsFJEpAdnu5QknBEDBlghVVQUqo5FzGQcjFOu&#xA;4B4FI+qJJOgtTKbYt9Y9Ksipw+3ykTkg49z2yvhcrxV1tdx3AYUo6/bSob8RUHBTYDaZWXmPUdFt&#xA;Jorc87aRSsSMdoJG2Dp/k77r0/HMnDqZQFOp13ZWPNIT5G9/MM9/IP8AODUPK2uWvl7VbhpvLGoy&#xA;iJRK1fqc8zUWVGbpGzn94taCvPrXlUJOTkxCtn1/ljiOxV2KuxVg3nzzH5mluv8ADHk2IvrLokmo&#xA;agArJYwyE8Pt/B6snBuIb7IHIjdQ0oAE78mGWUoxuIs9P2+TwLzALDy3rFzZXE36Q1lm5XkkLPcz&#xA;ySdGM00nEkhqgs7UrsDmwhKERsP1vOZ8WbJI8chQ6/w+4fsCW/4kuOVTps3DtxeIv/wPID/hsn4p&#xA;7mr8rH+eL9x/V+h6L+Wdn5S803J065eN7lfiutE1O0V+a03aF2KyQyAfErKPcFgDmNmmJD8bOy0W&#xA;E45AXR+YPuKl+Y35dat5RkS40cPqOiXkiW1r671ktLmZuEUc8jH4oHZgqyH4gdjUkEwx6kgUd27U&#xA;dlwnIGHp7/d5eflyZn5HnuPIEFnomoz/AF3Qb2ZUTUyipLb31y3xevwADwzzNRHPxIxCmqkFceV8&#xA;y7KFVQ2p6rgS7FXYq7FUj87+abbyr5T1PzBcL6i2EJeOKtPUlYhIY69ucrKtffASyjGzT4c8weYd&#xA;S1XUrnWdYuGu9TvX5TSHqT2RB+yiDZV6AZSd3aRAgEl/StykylSquGBVQvMg9dySBjTEzL3n8qP+&#xA;cjJ9Nu4dF8z3DXmkUVEv1t44ZLViRQOiOecQqasKt7ZYJOLkxXuAz78z/KWg39w+reXnjtvMckP1&#xA;z6stFt9Xg48iY2WsZnoPgcbno3w0K5OKUo7jk6jV48eX0S2l0P45+55d5Z1L6/rdlqOnrHcx6Sy6&#xA;hHY3IeP67cQsGFpGx4hZUWritaPwqCK5dqMnEKjycPs/TDFK8m0uQ/X+PN9R+X9e0zX9Fs9Z0yX1&#xA;rG+jEsL9CK7MrD9l0YFWXsQRmG7lMMVdirsVdiqyKaGUExSLIFNGKkGh8DTG1p4//jn0LHUNS01x&#xA;L5k82X01tp9wwBW1tLe5aws34tWqoitc8e7F/HJcBq2Hjx4xDyJ+TFfOuqW8WnaZ5M8tSFX1pFNx&#xA;f8mMrQ3EpjDvJs7GeUu8rk1KK/7TAhMVhkBIJ6sl0byxpV9Bp3kny7W00Q2v1nV72D4JTZlvTVFc&#xA;DaS8kDfF/IrkUNMBFbMoS4vUxX/nIj8s/IPlnQtM1fQdLi03U7m/S1k9BnCPB9WmZh6XL0xR40JY&#xA;LXx65VMbOZppkyp4PcqGt5QehRq/dlbmnklR3i37rv8Adkml+h3lq7nvPLmlXdweVxcWdvLM3i7x&#xA;KzH7zlzrjzTHFC2WaKJOcrrGg6sxCj7ziSoDo5Y5UEkTh423V1IIPyIxtWD6XqZ0byP5k81SRmW9&#xA;luNU1CRaisn1eSSC0jr0FLe3ij3wMyLNPHfMvlp4NMudM0sry0i2k1LzZrXH1JZrkRGVYEr8TSMB&#xA;yCn4UQqaHZTcMhFnq4ctNGdA7R7vx+Cr2X5LQaxf2WgWDf6Tp8SS+afMM5efhNKoaOC3hZvT9RhV&#xA;uIACpxZqkgNHj79yz8EbcPpj5bE/Fm+sflr5W/LXQP8AF/l2C4fV9B4TXE01y7NdWhkC3UEiH9wv&#xA;OJmZeEa0cKcrPe5Md9iw/wDMv83Ibmz1zSIJzc6Xq1paahochryX1mjS6tZaH7JT1T1qjbA/ZpAy&#xA;crHg5fawzXfzTvLny3cadfzGYarptrc2khFeNyjC3vIWC/7rlMUp3+zXbtQmTVHDv7i+l/ys8xTe&#xA;Yvy80DWJ3MlzcWiLdSN1eaGsMrn/AFpIyckGmYo0yrCxdiqz1G9f0/TbiF5GXbjWtOPzwWl5Z/zk&#xA;z9Y/5VhJ6RPp/XrT6xT+TmaV/wCenHBPk26f6w+O9RdvXamxVVVPYueuVBzp81XQtHm1XXbHSLUh&#xA;Z76eCzgZuge4kEYY/SwwtZNC33Be/k3+XV75Vs/LFzpET6dp60tJB8FwjkDnKJk4vzkKgv2Y9Qct&#xA;pwuM3bx7Wba68r6hd+SoLya60vQbiKbRZ7lg9zDFPAkrIJFCbeqzU2/ZWmZ+kAovP9sTPGPn7j5f&#xA;Yw241C8tp7jRw9bNZE1GzB+1C83JZRGewZ05kfzGuT4AJlp8Uywxvpt8v2H7Hrv/ADjdrNwV17QJ&#xA;HLW8Dw6haAknibrmk6rXovOFXp/M5OYmeNSdxochljF9NnteUuW7FXYqk+mw620V1DfHgGQpFNyD&#xA;kueQLgDoOhAyuIl1bJGPRU0bT7uzaU3bo3wRwxMmwKR1pUUG/wAXvhhEjmicgeT5W1W21PS4ruyt&#xA;y5vdBvJ7bgteTJDK6HiGqf3kL818ajxzZQ9WMeTzub93qZWaEhz9/wC1jt3rlxcXlvd2zepPaQQP&#xA;Zsv7ccDsHRf8pVfp4nKzEWa67uTGchGIO1XE+V8vx5PX/wAjPzA8vWlzq41e/gtE/R9obS4lfiJI&#xA;bWW49RBXblGblBwHxHl0ynMBd9C5uiJMOE/VE/2JH+f82s65NYarfB7GyLGDy1obp/pk6OA099PH&#xA;9qINxREjb4/EKeQzGm7bTAB4beF2QW0Sl5rg8ERQSSDsaAZWHKmaCY+QvJ955w826d5ftUYrdSA3&#xA;kq/7qtUIM8hPQUTZa9WIHfJgNE5UH34iIiKiAKigKqjoANgMtdep3UH1i3eHmY+YpzXqMBFpBpCS&#xA;aQktjDbTTyM8Dc0uAaOG3335dmpkeDamXFvbWjtYwwiwtWdlhQSKzinJZGJ5KaCoJrjCuQWd8y8v&#xA;8wa5HpOged/I91F/pcMV3qWnISFNzpmoyvPO8H/FlqZJU6bcA24rhJZwjZBeaeVvzIt9U8oeb9I1&#xA;CJDrDre3rxRsVN1a3Bb1fTYgHlFDsO4UDbYgIlYWeEiQesf84+ecdF13yrNGt1EfMZurm61i2rSQ&#xA;tJKRFKFNCU9ERqCNhTj1GEG2OSFFjP8AzkX+aekNo03krR7hLu+unQavLEeSW8UTh/SLDb1ZGUAr&#xA;2WtaVGRnJt0+Ik2+cpZuEfKRjwjU0r2G5oPpOVOwKUKX4LyqWp067k1oPpOSaH3r+V3lyfy3+Xug&#xA;6NcKY7q2tEN1GafDPMTLMu38skjDLQ6+Zs2ynCxUoI5kaUyS+oruWjHEDgp/Z98ASUFYapcXN69u&#xA;9uyIsfMyFXXi3IDgeQAJ9xkYysspRoILz95Wj81+TtV0B2CPfQEW8jfZSeMiSB2p2WVFJyRCISo2&#xA;+Ddd029trieC5haC9tHa3vLZvtxyxMQQafysDlPJ2R9QsIOw1G5s7y21Ozbhc2siTRt14yRMHQ07&#xA;0YYWB3D7t8u/mr5O1nyTD5t+vxW9iVC3cbNykhuab2xRfjaXlsiqKvsVrUZaC4EokGnhWqatda5r&#xA;ep6/cwtbvqk/qxW7fajgjjWGBG3Yc/SjUvQ05E5tNPj4Y783le0dQMuTb6RsxTUpPV12fj9iCGKJ&#xA;jT/djFnIr7KyH6cSbkVhGsQ8yf0D9b1b/nG+wkk17zBqXFhDb29taK/7LSSPJK6/NFVD/ssw9QfU&#xA;7rs6NY77y96yhznYq7FXYqxnXIb/AOuTtNbvd2TqqwgAusQK0d+KkHmG6bfSMpmDfk3QIpgfnz8t&#xA;9a1SKLzRotvz1UxiLVNLakT3UcXwQzIWPEXCxgKQ7UdaCo4iuVpsxhzdfr9HHMNtpDkf0e546+i+&#xA;WLvVeN9ayW+owvW4tg0lldoxFDzjPFg1O7IczqhPcc3S8Wow+mV8PwI+Zt7n+Wn5e+Q9ChOuR6E9&#xA;ncACb9L6vLHNKGOxaMsx9L/W4qcwcoAPN3mlnIx5ED4foSn8wdR8v6nFep5L+r32t6grW+o+YqtN&#xA;FbW7Di8a38haKEMCVKxMzL/vvuKSL5OdGfDz+TCdH8gW66NLpHkYJrnmO+Bg1LzIEBt7aNhxkSO5&#xA;P7qIUJBVGeXvxbajVDZTkMjcuXc9h/Kf8pdG/L7SXjhb65rN4AdQ1JhQtTdYox+zGv3k7nsAQKYT&#xA;mZFnmFg7FXEAgg7g9RiqEstKtLNy0AYVHGjMWAApQDkT2AyIiAyMiWL/AJn/AJZ6b550hIXkNnq9&#xA;nybTNSQVaJmFGRwCOUb0HJa+43wkWyx5DEvkfzl5A80eU7oweYtOe2RX4waggL2shNaGK4AAqaV4&#xA;mj+IGUmJDnxyxmxyOytlZZE5cl+ywdtu3jgts4Auee2t1CllSnRB1+hRimwEMovNTu4rS1gkmlkY&#xA;CC0iUySyN2oiBmPsBhAapTfRH5If849X9rqFt5o85wCB7Zlm0zRmILiUGqTXNKheGzLHWtftUpxy&#xA;yMXEy5r2D6NybjuxV2KuxV2KvJPzl/I2Dze7a9oTR2nmVVCzpJ8MN4iCirIRXhIqiivTp8LbUKxl&#xA;G2/DmMfcwTyb+W35ezXsej+b7KG01sKUFrfrPpV4OJoTFNBI1lfr4Oo5HqTgAZzyHmHq9l+Sn5ba&#xA;JazNpWkfVpmUma4SQvcOvGjKJbhn9MOPtcCvh0yyB4Tbh5wckaJNeXXyeZearV768Fp5fFtfX6Ao&#xA;LKxkEljp8CV2urv7BlZiWKg8zv47ZkdSANt3T5OzJSIJ9I7h3fpJY3a+RdX1GWHSdBkj1jV2c/XJ&#xA;YSGtLXmSzy3tyoMauxNRGpLcRRQRTKxnA8y3y0MpkX6Y93cP1vo/yF5MsfJ/luDR7V/XlBaa9vCo&#xA;Vp7iSnqSsBWnQKoqeKgCu2Y5N7uyjEAUOQZDgS7FXYq7FXYq7FWP+b/+Vf8A1eL/ABj+ifq1T6P6&#xA;X+rcK9+P1jb7sUi+jFl/6Fy5f9Mjyqacv0b7V417dOmApHF0X2//AELt66fV/wDCPr8v3XD9G8uV&#xA;B9in8MVHE9Dh9H0Y/Q4+jxHpcKceNPh402pTphYr8VdirsVdirsVdiqyf0PQf6xx9DifU9SnDj35&#xA;V2pirzyf/oXb15PX/wAI+vX97z/RvKv+XXf78GzZ6/NRX/oWvbh/g7t9j9GfRWnbHZfX5sq8of8A&#xA;KvPRl/wd+iPR29b9D/VuPty+rbffiGMr6siwsXYq7FXYq7FXYq7FUBrn6B/Rsv6e+q/ozb1/r3p+&#xA;h7c/V+D78Ui+jCf+sd/SX/lEfRqOH/HN4cqmnHtWuDZl6vNaP+hdqD/lEePIcf8Ajm8eXI9O3Ll4&#xA;b47L6vNn2mfoz6hB+i/R/R/H/Rvq3D0eH+Rw+GnywsCicVdirsVdir//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:FF46D21B1384E411BCEDA968A3005EC0</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FF46D21B1384E411BCEDA968A3005EC0</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:FE46D21B1384E411BCEDA968A3005EC0</stRef:instanceID>
            <stRef:documentID>xmp.did:FE46D21B1384E411BCEDA968A3005EC0</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE46D21B1384E411BCEDA968A3005EC0</stEvt:instanceID>
                  <stEvt:when>2014-12-15T11:34:45+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF46D21B1384E411BCEDA968A3005EC0</stEvt:instanceID>
                  <stEvt:when>2014-12-15T11:34:54+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>200.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Web Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -149.137 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 149.137 li
393.595 149.137 li
393.595 0 li
cp
clp
[1 0 0 1 0 0 ]ct
55.8081 108.053 mo
62.9185 103.413 71.3882 103.223 76.9185 107.023 cv
76.8481 107.123 li
72.6089 106.873 67.9585 108.063 63.7788 110.783 cv
54.8687 116.592 51.4683 127.163 56.189 134.393 cv
57.1284 135.842 58.0786 136.922 59.4487 137.873 cv
54.7886 137.523 50.6587 135.403 48.2085 131.663 cv
43.4985 124.433 46.8989 113.853 55.8081 108.053 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.498634 .76672 .682032 .673518 cmyk
f
72.8784 134.252 mo
81.7886 128.443 85.189 117.873 80.4683 110.632 cv
79.5181 109.172 78.3081 107.962 76.9185 107.023 cv
71.3882 103.223 62.9185 103.413 55.8081 108.053 cv
46.8989 113.853 43.4985 124.433 48.2085 131.663 cv
50.6587 135.403 54.7886 137.523 59.4487 137.873 cv
59.4487 137.882 59.4585 137.882 59.4585 137.882 cv
63.7983 138.223 68.5884 137.053 72.8784 134.252 cv
cp
96.9585 110.103 mo
102.449 123.413 94.1587 139.453 78.439 145.922 cv
62.7183 152.403 45.5386 146.873 40.0483 133.563 cv
34.5581 120.252 42.8589 104.212 58.5786 97.7329 cv
74.2886 91.2524 91.478 96.7925 96.9585 110.103 cv
cp
f
78.5981 142.792 mo
82.0083 142.573 84.0483 142.113 87.8384 140.243 cv
85.1284 142.533 81.9683 144.473 78.439 145.922 cv
75.6382 147.083 72.7788 147.853 69.9585 148.273 cv
65.189 148.092 61.1987 147.002 58.7085 145.573 cv
62.478 145.763 66.4585 144.653 69.2085 142.653 cv
64.7886 143.323 59.1782 142.263 56.8989 140.433 cv
62.7183 140.533 66.1382 139.063 68.9985 136.303 cv
70.3188 135.752 71.6187 135.073 72.8784 134.252 cv
73.4888 133.853 74.0688 133.433 74.6284 132.993 cv
74.6284 132.983 74.6382 132.993 74.6382 132.993 cv
77.4087 132.053 79.2983 131.283 82.2085 128.743 cv
81.3784 132.573 78.7886 135.993 74.0386 138.573 cv
76.939 138.903 82.0386 137.403 85.5483 134.382 cv
84.7886 137.323 82.3784 140.743 78.5981 142.792 cv
cp
.181369 .0870985 .113436 0 cmyk
f
59.4487 137.873 mo
54.7886 137.523 50.6587 135.403 48.2085 131.663 cv
46.5288 129.092 45.8784 126.092 46.1489 123.033 cv
46.4487 124.563 46.9487 125.953 47.6685 126.882 cv
47.8989 123.922 49.3784 120.623 51.9985 117.882 cv
50.728 121.263 51.228 126.502 54.4087 130.153 cv
54.7388 131.643 55.3286 133.073 56.189 134.393 cv
57.1284 135.842 58.0786 136.922 59.4487 137.873 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
68.9985 136.303 mo
66.1382 139.063 62.7183 140.533 56.8989 140.433 cv
59.1782 142.263 64.7886 143.323 69.2085 142.653 cv
66.4585 144.653 62.478 145.763 58.7085 145.573 cv
61.1987 147.002 65.189 148.092 69.9585 148.273 cv
56.9585 150.183 44.5581 144.493 40.0483 133.563 cv
37.3188 126.953 37.9985 119.672 41.2983 113.223 cv
40.1782 116.672 40.1489 120.283 41.2886 124.373 cv
41.2886 122.103 43.228 117.773 46.0786 115.603 cv
45.6489 117.473 45.6187 120.453 46.1489 123.033 cv
45.8784 126.092 46.5288 129.092 48.2085 131.663 cv
50.6587 135.403 54.7886 137.523 59.4487 137.873 cv
59.4487 137.882 59.4585 137.882 59.4585 137.882 cv
62.5288 138.123 65.8188 137.613 68.9985 136.303 cv
cp
f
55.8081 108.053 mo
56.0581 107.893 56.3081 107.733 56.5581 107.583 cv
55.478 109.233 54.6685 110.993 54.5884 112.453 cv
56.6987 110.363 59.9888 108.853 63.7583 108.513 cv
61.2983 109.842 58.8989 112.712 57.9487 116.183 cv
54.7085 120.493 53.3784 125.613 54.4087 130.153 cv
51.228 126.502 50.728 121.263 51.9985 117.882 cv
49.3784 120.623 47.8989 123.922 47.6685 126.882 cv
46.9487 125.953 46.4487 124.563 46.1489 123.033 cv
46.6187 117.502 50.0688 111.783 55.8081 108.053 cv
cp
.181369 .0870985 .113436 0 cmyk
f
55.8081 108.053 mo
50.0688 111.783 46.6187 117.502 46.1489 123.033 cv
45.6187 120.453 45.6489 117.473 46.0786 115.603 cv
43.228 117.773 41.2886 122.103 41.2886 124.373 cv
40.1489 120.283 40.1782 116.672 41.2983 113.223 cv
41.2983 113.223 41.3081 113.223 41.2983 113.212 cv
44.6382 106.672 50.6685 100.993 58.5786 97.7329 cv
59.3286 97.4224 60.0786 97.1431 60.8286 96.8931 cv
56.6987 98.7329 53.6382 101.723 51.4282 106.363 cv
52.9282 104.653 57.228 102.663 60.7983 102.903 cv
59.4683 103.873 57.8188 105.653 56.5581 107.583 cv
56.3081 107.733 56.0581 107.893 55.8081 108.053 cv
cp
f
78.2476 145.465 mo
73.9468 147.238 69.4897 148.137 65.0015 148.137 cv
53.6489 148.137 44.2651 142.478 40.5112 133.37 cv
37.9155 127.072 38.3745 119.95 41.8042 113.316 cv
45.2495 106.655 51.272 101.286 58.7642 98.1978 cv
63.0649 96.4253 67.521 95.5259 72.0093 95.5259 cv
83.3608 95.5259 92.7446 101.184 96.5005 110.292 cv
101.871 123.325 93.6821 139.103 78.2476 145.465 cv
cp
97.4243 109.912 mo
93.5122 100.421 83.7739 94.5259 72.0093 94.5259 cv
67.3892 94.5259 62.8052 95.4507 58.3833 97.2739 cv
50.6724 100.451 44.4692 105.985 40.9165 112.857 cv
37.3491 119.756 36.8765 127.176 39.5874 133.75 cv
43.4976 143.241 53.2368 149.137 65.0015 149.137 cv
69.6216 149.137 74.2065 148.212 78.6284 146.389 cv
94.5737 139.818 103.005 123.454 97.4243 109.912 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
81.3091 122.826 mo
79.9097 127.176 76.8198 131.084 72.606 133.83 cv
69.0288 136.162 64.8774 137.447 60.9165 137.447 cv
60.4761 137.447 60.0513 137.409 59.6235 137.378 cv
58.4517 136.547 57.564 135.595 56.605 134.124 cv
54.4077 130.753 53.9614 126.521 55.3481 122.207 cv
56.7466 117.855 59.8374 113.948 64.0493 111.203 cv
67.9868 108.638 72.5259 107.365 76.8228 107.619 cv
76.8384 107.62 76.8521 107.613 76.8677 107.612 cv
78.1196 108.516 79.2065 109.61 80.0532 110.91 cv
82.2505 114.28 82.6958 118.512 81.3091 122.826 cv
cp
48.6313 131.389 mo
46.4351 128.019 45.9888 123.788 47.3755 119.474 cv
48.7749 115.123 51.8647 111.215 56.0776 108.47 cv
59.6567 106.137 63.8091 104.853 67.77 104.853 cv
70.5405 104.853 73.0757 105.47 75.2329 106.596 cv
71.229 106.7 67.1196 108.009 63.5044 110.365 cv
59.0991 113.235 55.8647 117.332 54.396 121.901 cv
52.9155 126.507 53.4028 131.042 55.7671 134.67 cv
56.4263 135.681 57.0796 136.469 57.7954 137.153 cv
53.8833 136.454 50.6284 134.453 48.6313 131.389 cv
cp
67.77 103.853 mo
63.5571 103.853 59.3247 105.16 55.5308 107.632 cv
51.1274 110.502 47.8931 114.599 46.4233 119.167 cv
44.9429 123.774 45.4292 128.308 47.7935 131.936 cv
50.2446 135.697 54.4292 137.978 59.4058 138.367 cv
59.4253 138.369 59.4429 138.384 59.4624 138.384 cv
59.48 138.384 59.4956 138.374 59.5122 138.373 cv
59.9771 138.406 60.439 138.447 60.9165 138.447 cv
65.1284 138.447 69.3599 137.139 73.1528 134.667 cv
77.5571 131.797 80.7925 127.701 82.2612 123.131 cv
83.7427 118.526 83.2554 113.991 80.8911 110.363 cv
78.1938 106.226 73.4116 103.853 67.77 103.853 cv
cp
f
78.4624 64.8442 mo
83.5757 66.2837 92.7544 70.312 92.5337 74.7964 cv
92.2896 79.7896 81.7358 78.0229 75.7964 76.6069 cv
75.7485 76.1587 75.7329 75.6558 75.7417 75.1177 cv
75.8052 72.8022 76.4302 69.7847 77.4663 67.0796 cv
77.7622 66.2954 78.0942 65.5474 78.4624 64.8442 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
67.8667 72.8032 mo
66.8315 73.9819 64.9829 75.3345 61.6313 77.3706 cv
61.5776 77.3579 61.5269 77.356 61.4731 77.3335 cv
60.0298 76.9556 57.5698 74.4058 56.481 72.5679 cv
56.3042 72.2612 56.1587 71.9702 56.061 71.7222 cv
58.7163 68.689 63.1294 65.3804 64.9907 64.5112 cv
67.5112 63.3296 74.0347 65.7896 77.3169 67.0308 cv
77.4663 67.0796 li
76.4302 69.7847 75.8052 72.8022 75.7417 75.1177 cv
75.5503 75.1167 li
73.2573 74.4028 69.814 73.439 67.8667 72.8032 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
61.7046 84.52 mo
60.8687 85.5474 59.8843 86.6675 58.4546 85.8325 cv
58.2983 85.7456 58.1519 85.6353 57.9897 85.5083 cv
56.2935 84.1274 53.4214 81.7915 54.4878 80.5581 cv
54.6782 80.3462 54.8999 80.2017 55.1489 80.1138 cv
55.1099 79.9878 li
55.3872 79.0151 53.8579 77.2046 52.0679 77.0708 cv
51.7603 76.5825 50.8179 75.9058 49.7153 75.9009 cv
49.7163 75.8403 li
51.6499 73.312 54.606 72.1958 56.4458 72.5942 cv
56.481 72.5679 li
57.5698 74.4058 60.0298 76.9556 61.4731 77.3335 cv
61.4849 77.4731 li
62.8345 80.3032 62.6265 83.3989 61.7046 84.52 cv
cp
.0797436 .400244 .584497 0 cmyk
f
57.9897 85.5083 mo
58.1519 85.6353 58.2983 85.7456 58.4546 85.8325 cv
58.4243 86.0396 li
57.0581 88.0366 55.7397 89.1372 54.4351 89.2134 cv
53.3237 89.2817 51.8003 88.3081 51.6304 86.8579 cv
50.0962 87.0093 44.4731 83.1489 46.3872 78.7622 cv
47.3384 76.5649 48.6118 75.896 49.7153 75.9009 cv
50.8179 75.9058 51.7603 76.5825 52.0679 77.0708 cv
53.8579 77.2046 55.3872 79.0151 55.1099 79.9878 cv
55.1489 80.1138 li
54.8999 80.2017 54.6782 80.3462 54.4878 80.5581 cv
53.4214 81.7915 56.2935 84.1274 57.9897 85.5083 cv
cp
f
92.0347 74.7729 mo
91.9624 76.2319 90.8286 77.1089 88.5649 77.4526 cv
84.9468 78.0015 79.4458 76.9448 76.2661 76.2026 cv
76.0601 73.3169 77.1001 68.7612 78.7231 65.4438 cv
84.4907 67.1401 92.2163 71.0532 92.0347 74.7729 cv
cp
72.1685 73.5835 mo
70.9263 73.2173 69.7017 72.855 68.7046 72.5454 cv
69.52 71.3823 69.6831 70.2749 69.8042 68.73 cv
69.8257 68.4556 69.6196 68.2144 69.3442 68.1929 cv
69.0718 68.1714 68.8286 68.3774 68.8071 68.6528 cv
68.688 70.1733 68.5981 71.1919 67.4956 72.4556 cv
67.4829 72.4683 67.4712 72.481 67.4595 72.4946 cv
66.4878 73.5913 64.7515 74.8755 61.5444 76.8354 cv
60.1421 76.4243 57.4614 73.5435 56.6401 71.8188 cv
59.3276 68.8403 63.5259 65.7437 65.2026 64.9585 cv
67.4536 63.9106 73.6304 66.1753 76.8296 67.3774 cv
75.9653 69.7544 75.4077 72.3315 75.2817 74.5122 cv
74.3413 74.2241 73.2573 73.9048 72.1685 73.5835 cv
cp
61.3188 84.2046 mo
60.7388 84.9126 60.1411 85.5601 59.5278 85.6177 cv
59.1538 85.6548 58.7534 85.4937 58.2515 85.0806 cv
57.063 84.1079 54.8501 82.2974 54.7583 81.2388 cv
54.7456 81.0952 54.7788 80.9878 54.8647 80.8882 cv
55.0767 80.6431 55.3647 80.5278 55.7349 80.5337 cv
56.6909 80.5513 57.9819 81.3735 58.9468 82.5767 cv
59.1187 82.7915 59.4341 82.8257 59.6489 82.6538 cv
59.8657 82.481 59.8999 82.1665 59.7271 81.9507 cv
58.5688 80.5063 57.0103 79.5581 55.7544 79.5337 cv
55.7065 79.5337 55.6646 79.5425 55.6196 79.5444 cv
55.5737 79.1704 55.4165 78.7681 55.1323 78.3628 cv
54.6265 77.644 53.606 76.7788 52.3374 76.5962 cv
51.9976 76.1909 51.3862 75.7583 50.6401 75.5425 cv
52.3755 73.6577 54.7075 72.813 56.2075 73.0679 cv
57.3306 74.8198 59.4741 77.0747 61.0337 77.7026 cv
62.3647 80.4907 62.0483 83.314 61.3188 84.2046 cv
cp
54.4087 88.7134 mo
53.5933 88.7642 52.2681 88.0288 52.1313 86.8052 cv
52.1011 86.5337 51.8579 86.3364 51.5854 86.3638 cv
50.9565 86.4253 48.8989 85.3716 47.5591 83.5327 cv
46.7866 82.4722 46.0337 80.8169 46.8423 78.9575 cv
47.5337 77.3726 48.4722 76.4946 49.5327 76.4077 cv
50.5493 76.3306 51.4224 76.9849 51.644 77.3354 cv
51.729 77.4702 51.8716 77.5562 52.0308 77.5679 cv
52.9917 77.6392 53.8706 78.3081 54.3149 78.939 cv
54.5962 79.3394 54.6616 79.6499 54.6343 79.8159 cv
54.4409 79.9263 54.2593 80.0591 54.1079 80.2339 cv
53.8462 80.5376 53.7261 80.9155 53.7622 81.3247 cv
53.8804 82.6909 55.6538 84.2476 57.6685 85.897 cv
57.7222 85.9409 57.7759 85.9712 57.8306 86.0112 cv
56.605 87.7358 55.4604 88.6646 54.4087 88.7134 cv
cp
78.5972 64.3657 mo
78.3696 64.3042 78.1274 64.4067 78.0181 64.6177 cv
77.7212 65.1929 77.4497 65.811 77.1919 66.4448 cv
73.6528 65.1147 67.4136 62.8208 64.7788 64.0532 cv
62.938 64.9146 58.478 68.2017 55.6802 71.395 cv
55.5581 71.5337 55.522 71.729 55.5884 71.9028 cv
55.604 71.9409 55.6265 71.9849 55.6421 72.0249 cv
53.7632 72.0347 51.2388 73.1177 49.4292 75.4146 cv
48.4058 75.4956 46.9868 76.1196 45.9263 78.5601 cv
44.9292 80.8511 45.8247 82.8501 46.7505 84.1216 cv
48.0229 85.8667 49.9888 87.1284 51.2173 87.3354 cv
51.6167 88.811 53.1743 89.7925 54.4692 89.7124 cv
54.562 89.7056 54.6548 89.6968 54.7476 89.6831 cv
56.0542 89.4849 57.355 88.4331 58.7134 86.4966 cv
59.019 86.6001 59.3247 86.6431 59.6274 86.6138 cv
59.6626 86.6099 59.6997 86.605 59.7339 86.6001 cv
60.7808 86.4409 61.5366 85.5181 62.0923 84.8384 cv
63.0991 83.6118 63.3433 80.5796 62.0981 77.6675 cv
65.1235 75.8159 66.9331 74.5181 68.02 73.3774 cv
69.0806 73.7134 70.4712 74.1255 71.8853 74.5425 cv
73.0698 74.8911 74.2554 75.2407 75.2476 75.5474 cv
75.2515 75.937 75.2642 76.3169 75.3032 76.6626 cv
75.3267 76.8726 75.479 77.0444 75.6841 77.0933 cv
79.5718 78.02 84.9888 79.0063 88.7153 78.4409 cv
92.1636 77.9185 92.9663 76.1841 93.0337 74.8208 cv
93.2856 69.644 82.6987 65.519 78.5972 64.3657 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
75.0581 102.643 mo
81.2085 106.403 li
79.2583 110.243 73.6089 115.723 64.9985 112.263 cv
65.0386 112.153 li
68.9185 111.823 72.8384 107.403 74.9985 102.743 cv
75.0581 102.643 li
cp
.498634 .76672 .682032 .673518 cmyk
f
61.9985 110.493 mo
66.0386 110.153 70.2085 103.823 71.7085 100.653 cv
71.7388 100.613 li
75.0581 102.643 li
74.9985 102.743 li
72.8384 107.403 68.9185 111.823 65.0386 112.153 cv
64.9985 112.263 li
64.1987 111.943 63.3784 111.553 62.5386 111.073 cv
62.3188 110.943 62.0981 110.813 61.8882 110.672 cv
61.9985 110.493 li
cp
f
58.8784 92.7427 mo
71.7388 100.613 li
71.7085 100.653 li
70.2085 103.823 66.0386 110.153 61.9985 110.493 cv
61.8882 110.672 li
56.6187 107.342 54.0786 101.223 58.8784 92.7427 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
70.3042 112.857 mo
69.1265 112.857 67.9146 112.673 66.6763 112.312 cv
70.1743 111.125 73.3755 107.213 75.2573 103.35 cv
80.5444 106.585 li
78.8667 109.568 75.2817 112.857 70.3042 112.857 cv
cp
59.0601 93.438 mo
71.0825 100.795 li
69.3208 104.342 65.4634 109.702 61.9595 109.991 cv
61.9077 109.995 61.8628 110.013 61.8169 110.032 cv
56.3159 106.36 55.3062 100.393 59.0601 93.438 cv
cp
64.9165 111.682 mo
64.3032 111.424 63.6851 111.124 63.062 110.783 cv
66.9897 109.632 70.564 104.032 71.939 101.319 cv
74.4019 102.827 li
72.3706 107.041 68.7329 111.337 64.9995 111.658 cv
64.9692 111.661 64.9448 111.674 64.9165 111.682 cv
cp
81.4692 105.979 mo
59.1362 92.312 li
59.02 92.2427 58.8804 92.2202 58.7505 92.2544 cv
58.6187 92.2886 58.5073 92.3745 58.4399 92.4927 cv
53.9243 100.471 55.3657 107.579 62.2964 111.506 cv
65.0483 113.067 67.7427 113.857 70.3042 113.857 cv
75.9614 113.857 79.9546 109.965 81.6538 106.633 cv
81.7729 106.4 81.6919 106.116 81.4692 105.979 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
98.02 76.355 mo
96.8208 76.5649 95.4165 76.4722 94.2212 76.356 cv
95.0815 75.2739 97.4878 72.4106 99.0991 70.314 cv
99.2817 70.4604 li
99.8823 70.8413 101.505 73.0103 100.518 74.853 cv
100.054 75.73 99.1265 76.1675 98.02 76.355 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
89.8892 68.1821 mo
89.7593 68.2544 li
87.106 63.8716 84.6499 60.6948 82.7935 59.4702 cv
82.6821 59.3901 82.5649 59.3306 82.4614 59.2632 cv
82.48 59.2378 li
85.561 59.0806 89.354 62.3267 92.4702 64.8286 cv
92.644 64.9722 li
91.8481 65.9595 91.0269 66.9604 89.8892 68.1821 cv
cp
.826932 .410346 .420874 .105837 cmyk
f
82.7935 59.4702 mo
84.6499 60.6948 87.106 63.8716 89.7593 68.2544 cv
91.2144 70.6421 92.7202 73.3843 94.2212 76.356 cv
89.2808 71.3735 86.0103 67.5435 81.9312 65.6782 cv
81.8198 65.9155 li
80.061 66.5376 77.8696 68.1333 75.4448 70.3892 cv
75.3433 70.2808 li
74.0796 68.5483 74.0864 65.3853 76.6978 63.4878 cv
75.9263 60.0649 78.9331 57.2349 82.4614 59.2632 cv
82.5649 59.3306 82.6821 59.3901 82.7935 59.4702 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
98.0259 76.3677 mo
96.8706 81.4126 87.6431 100.001 82.4321 108.231 cv
77.5103 108.593 60.8862 99.9829 56.0386 93.9995 cv
61.9741 85.5601 69.4341 75.9761 75.4448 70.3892 cv
77.8696 68.1333 80.061 66.5376 81.8198 65.9155 cv
81.9312 65.6782 li
86.0103 67.5435 89.2808 71.3735 94.2212 76.356 cv
95.4165 76.4722 96.8208 76.5649 98.02 76.355 cv
98.0259 76.3677 li
cp
.74789 .241123 .31931 .00552377 cmyk
f
93.6128 87.2183 mo
92.4565 89.688 91.1567 92.3315 89.8257 94.9438 cv
82.2563 93.5522 71.1147 86.0444 66.5601 80.0737 cv
68.4614 77.77 70.3521 75.5981 72.1587 73.6724 cv
76.4214 78.0054 86.7407 85.8804 93.6128 87.2183 cv
cp
0 0 0 0 cmyk
f
100.586 68.1763 mo
100.403 68.5679 99.8306 69.3579 99.0991 70.314 cv
97.4878 72.4106 95.0815 75.2739 94.2212 76.356 cv
92.7202 73.3843 91.2144 70.6421 89.7593 68.2544 cv
89.8892 68.1821 li
91.0269 66.9604 91.8481 65.9595 92.644 64.9722 cv
93.1636 64.3335 93.6782 63.7153 94.2485 63.0532 cv
96.6597 64.9175 98.2007 65.8247 100.586 68.1763 cv
cp
.0797436 .400244 .584497 0 cmyk
f
100.081 74.6187 mo
99.3784 75.939 97.2466 76.0708 95.2085 75.939 cv
95.4087 75.6938 95.6333 75.4194 95.8765 75.1226 cv
97.0952 73.6333 98.2622 72.2017 99.1851 71.02 cv
99.7437 71.564 100.818 73.2339 100.081 74.6187 cv
cp
82.1519 107.744 mo
77.2993 107.786 61.6626 99.7612 56.6704 93.9731 cv
61.0747 87.7319 74.8169 68.9106 81.9878 66.3843 cv
82.0327 66.3677 82.0698 66.3403 82.1069 66.312 cv
85.23 67.8618 87.9224 70.6167 91.4917 74.2847 cv
92.2446 75.0581 93.0327 75.8687 93.8696 76.7114 cv
93.8726 76.7153 93.8784 76.7163 93.8813 76.7202 cv
93.8931 76.7319 93.9097 76.7388 93.9233 76.7495 cv
93.9604 76.7778 93.9995 76.8032 94.0435 76.8198 cv
94.0503 76.8228 94.0571 76.8306 94.0659 76.8335 cv
94.1011 76.8452 94.1382 76.854 94.1763 76.8569 cv
95.2446 76.9614 96.3423 77.0229 97.3501 76.9419 cv
95.6372 82.7993 86.979 100.053 82.1519 107.744 cv
cp
75.0649 67.0112 mo
75.1841 66.1411 75.6157 64.8931 76.9946 63.895 cv
77.1567 63.7769 77.2329 63.5737 77.1899 63.3784 cv
76.8403 61.8521 77.3335 60.3667 78.4448 59.5962 cv
79.5708 58.8159 81.0571 58.9233 82.5229 59.8892 cv
84.8569 61.4263 88.4067 66.4663 92.2339 73.6128 cv
92.2241 73.604 92.2163 73.5962 92.2085 73.5864 cv
87.3452 68.5913 83.8345 64.979 78.519 64.1069 cv
78.2476 64.062 77.9897 64.2466 77.9448 64.519 cv
77.8999 64.7905 78.0786 65.0522 78.3569 65.0933 cv
79.2427 65.2388 80.0728 65.4692 80.8677 65.769 cv
79.2886 66.5142 77.4712 67.8833 75.5435 69.6343 cv
75.1255 68.8794 74.938 67.937 75.0649 67.0112 cv
cp
91.4956 64.686 mo
91.9419 65.0454 li
91.3286 65.7925 90.6714 66.5786 89.8687 67.4653 cv
87.7651 64.0552 85.8433 61.4976 84.2427 59.9985 cv
86.5894 60.7397 89.2593 62.8853 91.4956 64.686 cv
cp
93.0063 65.3237 mo
93.437 64.7954 93.8608 64.2759 94.3218 63.7378 cv
94.8452 64.1372 95.3286 64.4937 95.7915 64.8354 cv
97.1841 65.8638 98.397 66.7593 99.9653 68.27 cv
99.1929 69.4956 96.6675 72.5776 95.1021 74.4888 cv
94.8101 74.8462 94.5464 75.1675 94.3188 75.4478 cv
92.9761 72.8237 91.6636 70.4448 90.4116 68.3569 cv
91.4575 67.2153 92.2476 66.2524 93.0063 65.3237 cv
cp
99.7964 70.2271 mo
100.419 69.4038 100.866 68.7622 101.042 68.3979 cv
101.133 68.2046 101.093 67.9751 100.941 67.8247 cv
99.186 66.0991 97.8882 65.1411 96.3862 64.0308 cv
95.8179 63.6128 95.2231 63.1714 94.5591 62.6577 cv
94.3491 62.4976 94.0513 62.5249 93.8765 62.7251 cv
93.4126 63.2563 92.9927 63.7632 92.5767 64.272 cv
92.1226 63.9077 li
89.0474 61.4302 85.563 58.6274 82.521 58.7349 cv
80.8853 57.8687 79.1841 57.8677 77.8765 58.7749 cv
76.5063 59.7241 75.8491 61.4663 76.1509 63.2808 cv
73.7056 65.2446 73.5308 68.354 74.7817 70.3384 cv
67.4194 77.2993 58.7446 89.2847 55.6304 93.7114 cv
55.5015 93.895 55.5103 94.1411 55.6509 94.314 cv
59.5786 99.1577 70.6704 105.419 77.7104 107.783 cv
79.7095 108.455 81.3823 108.811 82.4712 108.732 cv
82.6284 108.719 82.7729 108.635 82.8569 108.5 cv
87.7993 100.698 96.9771 82.3599 98.4312 76.7847 cv
99.5405 76.5425 100.458 76.0386 100.963 75.0884 cv
102.002 73.1353 100.619 70.9771 99.7964 70.2271 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
43.3081 108.053 mo
50.4185 103.413 58.8882 103.223 64.4185 107.023 cv
64.3481 107.123 li
60.1089 106.873 55.4585 108.063 51.2788 110.783 cv
42.3687 116.592 38.9683 127.163 43.689 134.393 cv
44.6284 135.842 45.5786 136.922 46.9487 137.873 cv
42.2886 137.523 38.1587 135.403 35.7085 131.663 cv
30.9985 124.433 34.3989 113.853 43.3081 108.053 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
60.3784 134.252 mo
69.2886 128.443 72.689 117.873 67.9683 110.632 cv
67.0181 109.172 65.8081 107.962 64.4185 107.023 cv
58.8882 103.223 50.4185 103.413 43.3081 108.053 cv
34.3989 113.853 30.9985 124.433 35.7085 131.663 cv
38.1587 135.403 42.2886 137.523 46.9487 137.873 cv
46.9487 137.882 46.9585 137.882 46.9585 137.882 cv
51.2983 138.223 56.0884 137.053 60.3784 134.252 cv
cp
84.4585 110.103 mo
89.9487 123.413 81.6587 139.453 65.939 145.922 cv
50.2183 152.403 33.0386 146.873 27.5483 133.563 cv
22.0581 120.252 30.3589 104.212 46.0786 97.7329 cv
61.7886 91.2524 78.978 96.7925 84.4585 110.103 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
66.0981 142.792 mo
69.5083 142.573 71.5483 142.113 75.3384 140.243 cv
72.6284 142.533 69.4683 144.473 65.939 145.922 cv
63.1382 147.083 60.2788 147.853 57.4585 148.273 cv
52.689 148.092 48.6987 147.002 46.2085 145.573 cv
49.978 145.763 53.9585 144.653 56.7085 142.653 cv
52.2886 143.323 46.6782 142.263 44.3989 140.433 cv
50.2183 140.533 53.6382 139.063 56.4985 136.303 cv
57.8188 135.752 59.1187 135.073 60.3784 134.252 cv
60.9888 133.853 61.5688 133.433 62.1284 132.993 cv
62.1284 132.983 62.1382 132.993 62.1382 132.993 cv
64.9087 132.053 66.7983 131.283 69.7085 128.743 cv
68.8784 132.573 66.2886 135.993 61.5386 138.573 cv
64.439 138.903 69.5386 137.403 73.0483 134.382 cv
72.2886 137.323 69.8784 140.743 66.0981 142.792 cv
cp
0 0 0 0 cmyk
f
46.9487 137.873 mo
42.2886 137.523 38.1587 135.403 35.7085 131.663 cv
34.0288 129.092 33.3784 126.092 33.6489 123.033 cv
33.9487 124.563 34.4487 125.953 35.1685 126.882 cv
35.3989 123.922 36.8784 120.623 39.4985 117.882 cv
38.228 121.263 38.728 126.502 41.9087 130.153 cv
42.2388 131.643 42.8286 133.073 43.689 134.393 cv
44.6284 135.842 45.5786 136.922 46.9487 137.873 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
56.4985 136.303 mo
53.6382 139.063 50.2183 140.533 44.3989 140.433 cv
46.6782 142.263 52.2886 143.323 56.7085 142.653 cv
53.9585 144.653 49.978 145.763 46.2085 145.573 cv
48.6987 147.002 52.689 148.092 57.4585 148.273 cv
44.4585 150.183 32.0581 144.493 27.5483 133.563 cv
24.8188 126.953 25.4985 119.672 28.7983 113.223 cv
27.6782 116.672 27.6489 120.283 28.7886 124.373 cv
28.7886 122.103 30.728 117.773 33.5786 115.603 cv
33.1489 117.473 33.1187 120.453 33.6489 123.033 cv
33.3784 126.092 34.0288 129.092 35.7085 131.663 cv
38.1587 135.403 42.2886 137.523 46.9487 137.873 cv
46.9487 137.882 46.9585 137.882 46.9585 137.882 cv
50.0288 138.123 53.3188 137.613 56.4985 136.303 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
43.3081 108.053 mo
43.5581 107.893 43.8081 107.733 44.0581 107.583 cv
42.978 109.233 42.1685 110.993 42.0884 112.453 cv
44.1987 110.363 47.4888 108.853 51.2583 108.513 cv
48.7983 109.842 46.3989 112.712 45.4487 116.183 cv
42.2085 120.493 40.8784 125.613 41.9087 130.153 cv
38.728 126.502 38.228 121.263 39.4985 117.882 cv
36.8784 120.623 35.3989 123.922 35.1685 126.882 cv
34.4487 125.953 33.9487 124.563 33.6489 123.033 cv
34.1187 117.502 37.5688 111.783 43.3081 108.053 cv
cp
.181369 .0870985 .113436 0 cmyk
f
43.3081 108.053 mo
37.5688 111.783 34.1187 117.502 33.6489 123.033 cv
33.1187 120.453 33.1489 117.473 33.5786 115.603 cv
30.728 117.773 28.7886 122.103 28.7886 124.373 cv
27.6489 120.283 27.6782 116.672 28.7983 113.223 cv
28.7983 113.223 28.8081 113.223 28.7983 113.212 cv
32.1382 106.672 38.1685 100.993 46.0786 97.7329 cv
46.8286 97.4224 47.5786 97.1431 48.3286 96.8931 cv
44.1987 98.7329 41.1382 101.723 38.9282 106.363 cv
40.4282 104.653 44.728 102.663 48.2983 102.903 cv
46.9683 103.873 45.3188 105.653 44.0581 107.583 cv
43.8081 107.733 43.5581 107.893 43.3081 108.053 cv
cp
0 0 0 0 cmyk
f
65.7476 145.465 mo
61.4468 147.238 56.9897 148.137 52.5015 148.137 cv
41.1489 148.137 31.7651 142.478 28.0112 133.37 cv
25.4155 127.072 25.8745 119.95 29.3042 113.316 cv
32.7495 106.655 38.772 101.286 46.2642 98.1978 cv
50.5649 96.4253 55.021 95.5259 59.5093 95.5259 cv
70.8608 95.5259 80.2446 101.184 84.0005 110.292 cv
89.3706 123.325 81.1821 139.103 65.7476 145.465 cv
cp
84.9243 109.912 mo
81.0122 100.421 71.2739 94.5259 59.5093 94.5259 cv
54.8892 94.5259 50.3052 95.4507 45.8833 97.2739 cv
38.1724 100.451 31.9692 105.985 28.4165 112.857 cv
24.8491 119.756 24.3765 127.176 27.0874 133.75 cv
30.9976 143.241 40.7368 149.137 52.5015 149.137 cv
57.1216 149.137 61.7065 148.212 66.1284 146.389 cv
82.0737 139.818 90.5054 123.454 84.9243 109.912 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
68.8091 122.826 mo
67.4097 127.176 64.3198 131.084 60.106 133.83 cv
56.5288 136.162 52.3774 137.447 48.4165 137.447 cv
47.9761 137.447 47.5513 137.409 47.1235 137.378 cv
45.9517 136.547 45.064 135.595 44.105 134.124 cv
41.9077 130.753 41.4614 126.521 42.8481 122.207 cv
44.2466 117.855 47.3374 113.948 51.5493 111.203 cv
55.4868 108.638 60.0259 107.365 64.3228 107.619 cv
64.3384 107.62 64.3521 107.613 64.3677 107.612 cv
65.6196 108.516 66.7065 109.61 67.5532 110.91 cv
69.7505 114.28 70.1958 118.512 68.8091 122.826 cv
cp
36.1313 131.389 mo
33.9351 128.019 33.4888 123.788 34.8755 119.474 cv
36.2749 115.123 39.3647 111.215 43.5776 108.47 cv
47.1567 106.137 51.3091 104.853 55.27 104.853 cv
58.0405 104.853 60.5757 105.47 62.7329 106.596 cv
58.729 106.7 54.6196 108.009 51.0044 110.365 cv
46.5991 113.235 43.3647 117.332 41.896 121.901 cv
40.4155 126.507 40.9028 131.042 43.2671 134.67 cv
43.9263 135.681 44.5796 136.469 45.2954 137.153 cv
41.3833 136.454 38.1284 134.453 36.1313 131.389 cv
cp
55.27 103.853 mo
51.0571 103.853 46.8247 105.16 43.0308 107.632 cv
38.6274 110.502 35.3931 114.599 33.9233 119.167 cv
32.4429 123.774 32.9292 128.308 35.2935 131.936 cv
37.7446 135.697 41.9292 137.978 46.9058 138.367 cv
46.9253 138.369 46.9429 138.384 46.9624 138.384 cv
46.98 138.384 46.9956 138.374 47.0122 138.373 cv
47.4771 138.406 47.939 138.447 48.4165 138.447 cv
52.6284 138.447 56.8599 137.139 60.6528 134.667 cv
65.0571 131.797 68.2925 127.701 69.7612 123.131 cv
71.2427 118.526 70.7554 113.991 68.3911 110.363 cv
65.6938 106.226 60.9116 103.853 55.27 103.853 cv
cp
f
137.142 29.3862 mo
141.87 36.4448 137.651 45.2153 133.843 48.0981 cv
133.592 48.0229 li
134.198 45.9165 134.68 44.1021 135.022 42.853 cv
135.016 40.9839 134.183 38.5112 132.503 36.519 cv
132.436 36.436 li
125.704 41.5659 110.595 42.7095 104.9 40.4556 cv
105.526 39.1548 106.367 38.0747 107.333 37.1987 cv
105.159 38.0132 99.2798 38.7544 93.5874 38.3296 cv
93.5747 38.4585 li
90.9751 43.5854 86.7183 46.1353 83.2368 48.1411 cv
82.4312 43.0942 79.686 40.4067 76.2329 40.813 cv
73.7446 41.106 71.2544 43.1851 70.7173 46.3501 cv
70.5688 46.3335 li
68.3042 44.0259 65.9126 41.0649 64.2974 36.5151 cv
66.1196 35.5171 69.2896 34.8159 72.2339 34.6958 cv
70.0454 32.0249 67.0776 27.9478 65.7153 24.1538 cv
68.5054 21.9849 74.6147 19.7524 81.3638 18.9116 cv
78.7329 17.3101 75.5698 14.3364 73.9897 11.7827 cv
77.0679 10.1626 83.2437 8.71338 90.3042 9.9585 cv
89.0308 8.54541 87.2603 5.3999 86.3921 2.66748 cv
96.3608 1.29834 113.073 5.34131 122.686 10.5903 cv
133.154 16.3052 138.567 24.1851 137.142 29.3862 cv
cp
.373144 .782101 .665248 .350225 cmyk
f
133.592 48.0229 mo
131.701 54.605 128.629 64.0239 124.917 68.021 cv
120.133 73.1577 112.897 74.522 108.149 73.8579 cv
103.521 73.2144 88.812 69.27 81.3667 56.7876 cv
78.5083 58.1421 72.9243 56.0103 71.0952 50.4878 cv
70.6021 48.9692 70.5112 47.5825 70.7173 46.3501 cv
71.2544 43.1851 73.7446 41.106 76.2329 40.813 cv
79.686 40.4067 82.4312 43.0942 83.2368 48.1411 cv
86.7183 46.1353 90.9751 43.5854 93.5747 38.4585 cv
93.5874 38.3296 li
99.2798 38.7544 105.159 38.0132 107.333 37.1987 cv
106.367 38.0747 105.526 39.1548 104.9 40.4556 cv
110.595 42.7095 125.704 41.5659 132.436 36.436 cv
132.503 36.519 li
134.183 38.5112 135.016 40.9839 135.022 42.853 cv
134.68 44.1021 134.198 45.9165 133.592 48.0229 cv
cp
0 .167361 .439734 0 cmyk
f
110.105 53.7036 mo
109.314 56.2407 107.149 57.8218 105.271 57.2358 cv
103.393 56.6499 102.512 54.1177 103.303 51.5796 cv
104.096 49.0435 106.261 47.4614 108.139 48.0474 cv
109.218 50.5161 109.35 50.7046 110.396 51.8325 cv
110.397 52.4351 110.303 53.0688 110.105 53.7036 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
107.642 51.8667 mo
107.077 52.8579 106.021 53.3218 105.288 52.9019 cv
104.554 52.4829 104.418 51.3384 104.985 50.3462 cv
105.552 49.3569 106.606 48.8931 107.34 49.313 cv
108.074 49.731 108.209 50.8755 107.642 51.8667 cv
cp
0 0 0 0 cmyk
f
129.089 57.0288 mo
128.514 59.6245 126.789 61.4478 125.238 61.105 cv
123.686 60.7612 122.894 58.3765 123.468 55.7817 cv
123.57 55.3296 123.705 54.9009 123.869 54.5024 cv
125.672 53.1704 125.577 53.2358 127.32 51.7065 cv
128.872 52.0503 129.665 54.4331 129.089 57.0288 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
126.882 56.314 mo
126.675 57.2563 125.955 57.8979 125.277 57.7485 cv
124.598 57.5981 124.216 56.7104 124.425 55.7681 cv
124.634 54.8267 125.354 54.1851 126.034 54.3354 cv
126.711 54.4858 127.092 55.3726 126.882 56.314 cv
cp
0 0 0 0 cmyk
f
131.476 19.3091 mo
133.89 21.9692 134.956 24.3403 135.346 26.2173 cv
129.696 31.1909 109.288 22.5454 98.9282 19.3892 cv
89.9751 16.6626 83.687 16.4478 79.5913 17.6851 cv
78.7388 17.0376 77.8862 16.2983 77.0894 15.5171 cv
90.9468 9.82764 118.099 19.3882 125.403 20.1782 cv
128.702 20.5366 130.559 20.1333 131.476 19.3091 cv
cp
.341833 .684718 .553277 .151247 cmyk
f
137.142 29.3862 mo
137.57 27.8267 137.381 26.0161 136.622 24.106 cv
135.809 22.0337 134.319 19.8315 132.224 17.6636 cv
129.811 15.1665 126.604 12.7329 122.686 10.5903 cv
113.813 5.74561 98.8901 1.92627 88.8071 2.44385 cv
99.7876 3.34424 117.349 8.20752 126.504 14.9087 cv
128.601 16.437 130.22 17.9106 131.476 19.3091 cv
133.89 21.9692 134.956 24.3403 135.346 26.2173 cv
135.681 27.8286 135.531 29.0825 135.332 29.8696 cv
138.03 33.1069 139.38 39.3267 134.547 47.5015 cv
138.136 44.144 141.581 36.0073 137.142 29.3862 cv
cp
0 0 0 0 cmyk
f
132.584 36.6353 mo
124.758 46.6997 107.508 45.4751 100.634 43.5112 cv
101.098 42.3237 101.541 41.2544 102.495 40.1636 cv
100.17 41.0845 95.4712 41.5854 91.6401 41.4897 cv
92.356 40.5894 93.0015 39.5864 93.5747 38.4585 cv
93.5874 38.3296 li
99.2798 38.7544 105.159 38.0132 107.333 37.1987 cv
106.367 38.0747 105.526 39.1548 104.9 40.4556 cv
110.595 42.7095 125.704 41.5659 132.436 36.436 cv
132.503 36.519 li
132.539 36.5562 132.562 36.5903 132.584 36.6353 cv
cp
.0797436 .400244 .584497 0 cmyk
f
133.592 48.0229 mo
131.701 54.605 128.629 64.0239 124.917 68.021 cv
120.133 73.1577 112.897 74.522 108.149 73.8579 cv
107.575 73.7759 106.836 73.646 105.969 73.4429 cv
111.382 73.5542 117.561 72.3696 123.181 67.7349 cv
127.279 64.3657 130.234 55.2095 134.237 39.3638 cv
134.76 40.5933 135.022 41.8179 135.022 42.853 cv
134.68 44.1021 134.198 45.9165 133.592 48.0229 cv
cp
0 0 0 0 cmyk
f
75.4849 46.0151 mo
73.4966 47.0044 73.2983 50.2456 75.8911 52.3491 cv
77.8901 53.9712 80.1938 53.4771 80.1001 50.5532 cv
79.9839 46.894 77.6187 44.9536 75.4849 46.0151 cv
cp
.0797436 .400244 .584497 0 cmyk
f
116.025 61.3296 mo
116.992 60.48 118.414 60.7358 117.994 61.6772 cv
117.575 62.6187 115.423 61.8589 116.025 61.3296 cv
cp
f
135.523 42.8452 mo
135.512 40.7778 134.597 38.3921 133.129 36.519 cv
133.56 36.1685 133.961 35.8032 134.309 35.4185 cv
134.495 35.2144 134.479 34.8979 134.273 34.7124 cv
134.066 34.5259 133.751 34.5435 133.567 34.7485 cv
128.257 40.6196 112.23 42.3735 105.601 40.1792 cv
107.458 36.811 111 35.0649 113.556 34.5874 cv
113.829 34.5376 114.007 34.2769 113.957 34.0044 cv
113.906 33.7339 113.646 33.5532 113.373 33.605 cv
111.38 33.9771 109.013 34.9927 107.066 36.7651 cv
103.873 37.9087 94.147 38.7476 87.5874 36.8071 cv
89.6782 33.0259 95.4321 28.8354 99.4106 28.2944 cv
99.6851 28.2563 99.8765 28.0044 99.8394 27.7319 cv
99.8022 27.4595 99.5522 27.2681 99.2769 27.3032 cv
94.7651 27.9165 88.396 32.6685 86.4194 36.896 cv
86.3589 37.0249 86.356 37.1743 86.4126 37.3052 cv
86.4683 37.437 86.5796 37.5376 86.7144 37.5825 cv
87.7378 37.9194 88.8472 38.187 90.0073 38.3911 cv
90.9204 38.5522 91.8657 38.6714 92.8218 38.7593 cv
90.3706 43.2104 86.5913 45.6177 83.5991 47.355 cv
82.6274 42.5698 79.8237 39.8921 76.1743 40.3198 cv
74.2368 40.5474 72.4097 41.7339 71.2856 43.4927 cv
70.897 44.103 70.6167 44.7651 70.4214 45.4595 cv
68.5786 43.5142 66.4272 40.8149 64.9194 36.7593 cv
66.6948 35.9194 69.5669 35.3022 72.2554 35.1958 cv
72.4438 35.188 72.6138 35.0747 72.6909 34.9009 cv
72.7681 34.728 72.7417 34.5259 72.6216 34.3784 cv
70.8794 32.2583 67.7935 28.187 66.3149 24.3306 cv
68.9106 22.4683 74.4624 20.2798 81.4253 19.4126 cv
81.6362 19.3862 81.8071 19.23 81.8521 19.022 cv
81.897 18.813 81.8052 18.6011 81.6235 18.4897 cv
79.0942 16.9468 76.2739 14.2759 74.7153 11.9771 cv
77.8657 10.4966 83.605 9.28467 90.2173 10.4507 cv
90.4282 10.4878 90.6392 10.3872 90.7427 10.1997 cv
90.8462 10.0132 90.8198 9.78076 90.6763 9.62256 cv
89.605 8.43896 87.9839 5.68604 87.0552 3.08643 cv
97.4048 1.91162 113.568 6.18018 122.448 11.0298 cv
133.415 17.019 137.9 24.7319 136.66 29.2544 cv
136.623 29.395 136.646 29.5444 136.727 29.6646 cv
140.909 35.9087 137.712 43.6089 134.426 46.9067 cv
134.73 45.8208 135 44.8325 135.223 44.0132 cv
135.504 42.981 li
135.516 42.936 135.523 42.8901 135.523 42.8452 cv
cp
124.55 67.6753 mo
120.014 72.5474 113.077 74.0435 108.215 73.3647 cv
102.035 72.4995 88.5669 67.8735 81.8013 56.5278 cv
81.6694 56.3081 81.3911 56.2212 81.1577 56.3325 cv
80.0103 56.8755 78.3511 56.7827 76.7173 56.0815 cv
74.313 55.0513 72.438 52.9546 71.5757 50.3325 cv
70.8149 48.021 71.0112 45.7827 72.1294 44.0317 cv
73.0913 42.522 74.6479 41.5054 76.2915 41.313 cv
79.5308 40.938 82.0015 43.5796 82.7407 48.2222 cv
82.7651 48.3843 82.8696 48.5229 83.0181 48.5942 cv
83.1636 48.6655 83.3394 48.6587 83.4829 48.5757 cv
86.7417 46.6987 91.189 44.1284 93.9282 38.8491 cv
98.4126 39.146 102.986 38.7505 105.79 38.145 cv
105.286 38.7788 104.82 39.4614 104.447 40.2388 cv
104.386 40.3647 104.381 40.5083 104.432 40.6382 cv
104.482 40.7671 104.584 40.8696 104.713 40.9204 cv
105.479 41.2231 106.395 41.4653 107.426 41.647 cv
114.299 42.8589 126.242 41.3667 132.327 37.1157 cv
133.896 39.103 134.498 41.312 134.522 42.7837 cv
134.258 43.7505 li
133.8 45.4399 133.155 47.8071 132.361 50.4185 cv
132.181 49.7925 131.808 49.5034 131.494 49.3892 cv
130.097 48.895 127.829 50.5669 124.842 53.2417 cv
124.093 53.9126 123.66 53.9976 123.536 53.938 cv
123.412 53.8862 123.269 53.5815 123.245 53.0356 cv
123.23 52.7036 122.951 52.4478 122.618 52.4624 cv
122.288 52.4771 122.03 52.7573 122.045 53.0884 cv
122.102 54.3726 122.634 54.8608 123.071 55.0435 cv
123.167 55.0845 123.265 55.1138 123.368 55.1313 cv
124.013 55.2456 124.776 54.9116 125.642 54.1362 cv
129.506 50.6743 130.715 50.3823 131.085 50.5181 cv
131.188 50.5552 131.234 50.7603 131.252 50.8794 cv
131.301 51.2085 131.607 51.4341 131.933 51.3853 cv
131.987 51.3784 132.032 51.353 132.079 51.3325 cv
130.207 57.3589 127.582 64.4194 124.55 67.6753 cv
cp
137.682 29.2964 mo
139.061 23.5093 133.041 15.6763 122.926 10.1519 cv
113.733 5.13135 96.8286 .725098 86.3188 2.17236 cv
86.1724 2.19189 86.0425 2.2749 85.9634 2.3999 cv
85.8853 2.5249 85.8657 2.67822 85.9097 2.81885 cv
86.6558 5.15869 87.9868 7.65771 89.1265 9.26807 cv
82.4458 8.36768 76.7319 9.77393 73.7593 11.3354 cv
73.6353 11.3999 73.5454 11.5122 73.5083 11.645 cv
73.4722 11.7798 73.4927 11.9224 73.5659 12.0396 cv
74.9097 14.2231 77.4819 16.8296 79.9819 18.604 cv
74.0142 19.5171 68.2769 21.5308 65.4097 23.7593 cv
65.2378 23.8921 65.1724 24.1196 65.2456 24.3228 cv
66.5649 27.9976 69.3511 31.8813 71.2358 34.2554 cv
68.4751 34.4771 65.7378 35.1626 64.0601 36.0728 cv
63.8442 36.1909 63.7456 36.4468 63.8267 36.6792 cv
65.5327 41.5083 68.1147 44.5474 70.1821 46.6567 cv
70.0347 47.9253 70.1743 49.2749 70.6255 50.645 cv
71.5776 53.5405 73.6558 55.8569 76.3237 57.0005 cv
78.0327 57.7358 79.8042 57.8774 81.1646 57.4067 cv
89.1538 70.395 104.29 73.6958 107.496 74.2612 cv
107.811 74.3169 108.01 74.3462 108.078 74.356 cv
113.195 75.0698 120.5 73.4917 125.282 68.3579 cv
128.982 64.3833 132.045 55.1499 133.948 48.5835 cv
134.018 48.5688 134.083 48.5415 134.145 48.4966 cv
138.018 45.5659 142.456 36.686 137.682 29.2964 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
77.1519 45.2632 mo
77.1187 45.2554 77.0845 45.2495 77.0522 45.2437 cv
75.7271 45.0103 74.5063 45.6069 74.061 46.7183 cv
73.9575 46.9741 74.0815 47.2651 74.3384 47.3677 cv
74.5913 47.4761 74.8862 47.3481 74.9888 47.0903 cv
75.2622 46.4087 76.0757 46.0327 76.9487 46.2417 cv
78.2329 46.5083 79.7007 47.9595 79.6157 51.1763 cv
79.6089 51.4282 79.7876 51.6401 80.0278 51.6821 cv
80.0522 51.687 80.0767 51.689 80.1021 51.6899 cv
80.3784 51.6978 80.6069 51.479 80.6147 51.2036 cv
80.7173 47.3696 78.812 45.6069 77.1519 45.2632 cv
cp
f
107.64 49.1108 mo
109.408 52.2476 110.499 53.5161 111.616 53.7134 cv
111.646 53.7183 111.676 53.7231 111.706 53.7271 cv
112.664 53.8472 113.398 53.1704 114.128 52.4058 cv
114.358 52.1665 114.348 51.7866 114.109 51.5581 cv
113.869 51.3286 113.49 51.3384 113.261 51.5767 cv
112.663 52.2026 112.218 52.5815 111.855 52.5366 cv
110.857 52.3696 109.227 49.4839 108.684 48.522 cv
105.624 43.0913 100.983 42.8618 97.939 44.3179 cv
97.6392 44.4604 97.5142 44.8188 97.6567 45.1177 cv
97.8003 45.4165 98.1587 45.5425 98.4565 45.3999 cv
101.035 44.1704 104.986 44.4019 107.64 49.1108 cv
cp
f
92.8208 38.7622 mo
92.269 39.7622 91.6421 40.6665 90.9829 41.4741 cv
89.2397 41.3901 87.7251 41.1753 86.7739 40.814 cv
87.02 40.1558 87.6528 39.1108 88.5825 38.0962 cv
89.0493 38.2095 89.521 38.3022 90.0034 38.3872 cv
90.9194 38.5493 91.8618 38.6743 92.8208 38.7622 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
66.3149 24.3306 mo
69.6196 26.7817 73.5327 28.0298 76.3169 28.8159 cv
78.6987 26.8286 81.8198 24.9624 86.77 24.9419 cv
83.5288 26.7876 82.562 28.6479 81.3433 31.9868 cv
86.5386 27.0542 92.1919 26.8423 97.8872 27.5923 cv
93.5444 28.8472 88.1948 33.0933 86.4185 36.8931 cv
86.355 37.0229 86.3579 37.1763 86.4155 37.3091 cv
86.4644 37.439 86.5796 37.5396 86.7124 37.5845 cv
87.3081 37.7808 87.937 37.9526 88.5825 38.0962 cv
87.6528 39.1108 87.02 40.1558 86.7739 40.814 cv
87.7251 41.1753 89.2397 41.3901 90.9829 41.4741 cv
88.7046 44.2612 85.9097 46.0024 83.6001 47.3521 cv
82.6255 42.5698 79.8276 39.8931 76.1782 40.3159 cv
74.2378 40.5532 72.4058 41.7329 71.2817 43.4946 cv
70.8999 44.1069 70.6108 44.7671 70.4165 45.4644 cv
68.5776 43.5151 66.4243 40.8101 64.9155 36.7563 cv
66.6968 35.9233 69.5688 35.3022 72.2573 35.1978 cv
72.4429 35.1899 72.6138 35.0776 72.686 34.8979 cv
72.7671 34.729 72.7427 34.522 72.6255 34.3794 cv
70.8774 32.2534 67.7974 28.187 66.3149 24.3306 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
109.042 71.1128 mo
109.058 71.1978 li
107.984 71.3491 106.7 71.1489 105.118 70.4478 cv
101.465 68.8169 100.066 66.5347 99.8003 64.3052 cv
99.9556 64.2788 li
101.686 64.1118 107.777 65.8384 109.042 71.1128 cv
cp
0 .919585 .825986 0 cmyk
f
100.738 59.7241 mo
101.539 63.1284 108.696 66.729 114.041 66.6421 cv
114.168 66.7241 li
112.922 68.6704 111.573 70.8647 109.058 71.1978 cv
109.042 71.1128 li
107.777 65.8384 101.686 64.1118 99.9556 64.2788 cv
99.8003 64.3052 li
99.5952 62.6333 100.023 61.0015 100.621 59.6694 cv
100.738 59.7241 li
cp
.433509 .775906 .674159 .526574 cmyk
f
101.596 57.8745 mo
102.402 61.269 109.821 64.9028 115.757 64.5845 cv
115.197 65.1509 114.686 65.9175 114.168 66.7241 cv
114.041 66.6421 li
108.696 66.729 101.539 63.1284 100.738 59.7241 cv
100.621 59.6694 li
100.913 58.9673 101.271 58.3618 101.596 57.8745 cv
cp
0 0 0 0 cmyk
f
109.41 70.6079 mo
107.956 65.6636 102.415 63.8169 100.263 63.7671 cv
100.213 62.7339 100.392 61.7417 100.673 60.8804 cv
101.592 62.561 103.663 64.1187 106.117 65.2583 cv
108.42 66.3276 111.042 67.0259 113.321 67.1235 cv
112.293 68.6968 111.178 70.1812 109.41 70.6079 cv
cp
105.323 69.9868 mo
105.102 69.8862 li
102.575 68.7124 101.016 67.1147 100.467 65.1382 cv
100.434 65.0142 100.42 64.8901 100.394 64.7661 cv
102.335 64.854 107.062 66.4878 108.406 70.7378 cv
107.535 70.7437 106.522 70.52 105.323 69.9868 cv
cp
106.75 63.1763 mo
109.305 64.3628 112.13 65.0435 114.668 65.0981 cv
114.428 65.4224 114.195 65.7769 113.959 66.1382 cv
108.825 66.186 101.942 62.6655 101.221 59.6089 cv
101.217 59.5942 101.208 59.5835 101.203 59.5688 cv
101.304 59.3579 101.407 59.1597 101.503 58.9829 cv
102.334 60.4819 104.208 61.9956 106.75 63.1763 cv
cp
116.208 64.3755 mo
116.125 64.188 115.932 64.0728 115.726 64.0825 cv
113.082 64.2271 109.962 63.5659 107.171 62.269 cv
104.499 61.0278 102.612 59.3911 102.151 57.9478 cv
102.361 58.0151 102.571 58.1187 102.773 58.2671 cv
103 58.4351 103.309 58.3833 103.472 58.1597 cv
103.636 57.937 103.587 57.6235 103.366 57.4614 cv
102.066 56.5142 100.468 56.6987 99.3872 57.9282 cv
99.2056 58.1353 99.2261 58.4507 99.4331 58.6333 cv
99.4702 58.6655 99.5103 58.6919 99.5522 58.7114 cv
99.7485 58.8022 99.9878 58.7583 100.138 58.5874 cv
100.373 58.3208 100.635 58.1343 100.911 58.0142 cv
100.117 59.314 98.6421 62.2983 99.5044 65.4058 cv
100.134 67.6782 101.875 69.4907 104.681 70.7935 cv
104.917 70.8999 li
110.493 73.3813 112.719 69.9126 114.51 67.1245 cv
115.049 66.2856 115.559 65.4937 116.11 64.9331 cv
116.254 64.7847 116.294 64.564 116.208 64.3755 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
44.3159 72.1782 mo
43.1128 72.73 41.9546 73.1753 41.2261 72.7534 cv
40.1118 72.1196 39.1138 71.1714 39.5698 69.2954 cv
38.4595 67.8696 37.481 62.5356 39.4204 60.2817 cv
41.3608 58.0376 47.0054 57.5562 51.4663 58.3901 cv
51.6274 58.3794 li
51.854 60.7271 52.9604 64.0239 53.5259 64.8169 cv
53.3374 65.1362 li
53.0845 67.4966 52.3755 70.811 50.5132 72.0386 cv
48.6509 73.2642 45.769 74.8032 44.6616 72.5894 cv
44.3159 72.1782 li
cp
0 .167361 .439734 0 cmyk
f
62.356 62.7534 mo
60.7095 63.5503 58.1157 64.0854 53.5259 64.8169 cv
52.9604 64.0239 51.854 60.7271 51.6274 58.3794 cv
51.6001 58.1382 51.5835 57.9067 51.5854 57.6958 cv
55.1929 55.896 60.564 54.7896 62.6118 54.5356 cv
65.7593 54.1323 72.9663 60.0688 75.4341 62.1118 cv
75.5483 62.2183 li
73.5659 64.3296 71.8394 66.8862 70.9067 69.0063 cv
70.731 68.9263 li
68.8745 67.3989 63.9712 63.9663 62.3677 62.7622 cv
62.356 62.7534 li
cp
.433509 .775906 .674159 .526574 cmyk
f
68.4937 67.2065 mo
69.0767 64.5249 70.6069 61.5874 72.4458 59.6987 cv
73.6841 60.6606 74.7446 61.5405 75.4341 62.1118 cv
75.5483 62.2183 li
73.5659 64.3296 71.8394 66.8862 70.9067 69.0063 cv
70.731 68.9263 li
70.1948 68.4868 69.3989 67.8794 68.4937 67.2065 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
70.397 70.4009 mo
70.522 69.9673 70.689 69.4946 70.9067 69.0063 cv
71.8394 66.8862 73.5659 64.3296 75.5483 62.2183 cv
76.1235 61.6099 76.7173 61.0425 77.3159 60.5259 cv
81.5093 63.7974 88.4722 70.9927 86.5698 75.063 cv
84.4507 79.5903 75.354 73.9565 70.397 70.4009 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
39.7964 60.6118 mo
41.5776 58.5464 46.9419 58.1011 51.1851 58.856 cv
51.4692 60.9946 52.3374 63.7241 52.9517 64.8345 cv
52.895 64.9058 52.8521 64.9868 52.8413 65.0815 cv
52.6284 67.0249 52.0063 70.4565 50.2378 71.6196 cv
48.3257 72.8774 46.894 73.3921 46.0044 73.1519 cv
45.6138 73.0474 45.3208 72.7876 45.1089 72.3608 cv
45.1069 72.3599 45.105 72.3579 45.103 72.356 cv
45.1187 72.3491 45.1333 72.3403 45.1499 72.3335 cv
45.6509 72.0942 46.1509 71.853 46.6226 71.6694 cv
46.8813 71.5688 47.0073 71.2798 46.9067 71.022 cv
46.8081 70.7651 46.5161 70.6401 46.2603 70.7368 cv
45.7651 70.9312 45.2417 71.1802 44.7183 71.4321 cv
43.4927 72.0181 42.104 72.6792 41.4712 72.3188 cv
40.1665 71.5728 39.7417 70.7036 40.0522 69.4165 cv
40.0884 69.269 40.0532 69.1118 39.9604 68.9927 cv
38.9819 67.73 38.0474 62.6421 39.7964 60.6118 cv
cp
62.6763 55.0259 mo
64.6021 54.7827 68.689 57.2192 74.8335 62.2632 cv
73.1392 64.1343 71.6519 66.3042 70.7114 68.269 cv
69.3228 67.1616 66.8784 65.4067 64.8735 63.9673 cv
64.2603 63.5269 63.7124 63.1333 63.2632 62.8071 cv
64.2485 62.1812 64.9038 61.3823 65.4673 60.2632 cv
65.5913 60.0171 65.4917 59.7163 65.2456 59.5923 cv
64.9985 59.4722 64.6997 59.5679 64.5747 59.8149 cv
63.3071 62.3306 61.771 62.98 53.7778 64.2661 cv
53.2036 63.1714 52.2241 60.0659 52.1021 57.9995 cv
55.6099 56.3306 60.7036 55.2798 62.6763 55.0259 cv
cp
77.3325 61.1743 mo
82.0278 64.9302 87.6958 71.478 86.1187 74.8521 cv
85.6431 75.8657 84.7271 76.3208 83.3169 76.2417 cv
79.7261 76.0386 74.1665 72.4644 70.9839 70.2007 cv
71.8862 67.4517 74.5737 63.6304 77.3325 61.1743 cv
cp
39.0327 69.4048 mo
38.5718 71.813 40.3706 72.8413 40.9731 73.186 cv
41.8394 73.6802 43.0024 73.3091 44.2046 72.7729 cv
44.2085 72.7847 44.2075 72.7974 44.2124 72.8071 cv
44.5552 73.4966 45.0698 73.936 45.7427 74.1167 cv
46.9468 74.438 48.5952 73.8979 50.7866 72.4546 cv
52.7739 71.1499 53.5356 67.8452 53.8257 65.271 cv
57.9722 64.606 60.5464 64.0981 62.2798 63.3286 cv
62.7759 63.6919 63.479 64.1958 64.2915 64.7798 cv
66.2788 66.2075 68.9673 68.1382 70.2876 69.2124 cv
70.145 69.5728 70.0132 69.9282 69.9185 70.2622 cv
69.8618 70.4663 69.937 70.6821 70.1089 70.8052 cv
74.0327 73.6245 79.5015 77.0269 83.2583 77.2397 cv
85.5503 77.3696 86.5708 76.2417 87.0239 75.2759 cv
89.2192 70.5786 80.9829 62.7505 77.6255 60.1304 cv
77.5425 60.0659 77.4448 60.0308 77.3462 60.0249 cv
77.2212 60.0181 77.0942 60.0581 76.9927 60.144 cv
76.4956 60.5669 76.0063 61.0425 75.5239 61.5356 cv
71.5737 58.2876 66.2192 54.1938 63.1235 54.0181 cv
62.9233 54.0063 62.731 54.0103 62.5493 54.0347 cv
60.8931 54.2466 55.2837 55.2925 51.3667 57.2446 cv
51.1958 57.3306 51.0874 57.5073 51.0894 57.6997 cv
51.0903 57.7417 51.0952 57.7886 51.0962 57.8325 cv
50.2954 57.7017 49.4634 57.6011 48.6138 57.5513 cv
44.77 57.3345 40.7163 58.0132 39.0396 59.9595 cv
36.9321 62.4038 37.9233 67.6646 39.0327 69.4048 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
1.5415 130.872 mo
1.23096 131.823 2.38721 133.37 3.71631 131.385 cv
5.396 133.276 8.15283 129.389 5.36963 127.065 cv
3.67627 124.024 .618652 125.542 .13623 127.094 cv
-.346191 128.645 .532715 130.518 1.5415 130.872 cv
cp
.205509 .264347 .342565 0 cmyk
f
2.33545 126.866 mo
1.37451 127.167 1.33936 129.616 2.72803 129.254 cv
4.1167 128.895 4.98193 126.036 2.33545 126.866 cv
cp
0 0 0 0 cmyk
f
25.4995 139.581 mo
26.1245 135.956 23.2495 133.206 18.3745 137.331 cv
14.9995 136.206 12.8745 145.706 21.3745 145.081 cv
23.1245 147.331 26.7495 146.331 27.4995 144.331 cv
28.2495 142.331 27.8745 139.581 25.4995 139.581 cv
cp
.205509 .264347 .342565 0 cmyk
f
22.3745 137.581 mo
21.1636 136.883 17.7495 139.081 19.8745 140.331 cv
21.9995 141.581 25.6245 139.456 22.3745 137.581 cv
cp
0 0 0 0 cmyk
f
24.4995 141.081 mo
23.3813 140.905 21.4995 142.831 22.8745 143.206 cv
24.2495 143.581 26.8745 141.456 24.4995 141.081 cv
cp
f
18.8745 141.081 mo
17.9995 140.956 16.8745 142.581 18.2495 142.831 cv
19.6245 143.081 20.6245 141.331 18.8745 141.081 cv
cp
f
17.6128 127.227 mo
19.5757 125.756 18.2026 122.03 15.5542 121.93 cv
12.9048 121.833 11.4331 123.893 12.022 125.559 cv
10.2554 126.836 11.0405 129.975 14.2788 129.485 cv
14.9644 131.348 16.731 131.348 17.8101 130.565 cv
18.8882 129.78 18.9878 127.622 17.6128 127.227 cv
cp
.205509 .264347 .342565 0 cmyk
f
15.8481 123.5 mo
14.8188 123.122 12.7085 123.793 14.0815 125.756 cv
12.9048 125.954 13.4937 127.227 14.2788 127.325 cv
15.063 127.426 15.2593 126.737 15.2593 126.346 cv
16.731 126.249 17.7114 124.186 15.8481 123.5 cv
cp
0 0 0 0 cmyk
f
16.2397 127.719 mo
15.6655 127.561 15.1616 128.797 15.9458 128.995 cv
16.731 129.192 17.3188 128.014 16.2397 127.719 cv
cp
f
174.75 130.292 mo
174.829 130.893 174.959 131.473 175.129 132.033 cv
175.079 132.083 li
172.969 129.783 171.6 126.922 171.309 123.733 cv
170.5 115.002 178.03 107.153 188.129 106.203 cv
195.069 105.542 201.42 108.313 204.959 112.943 cv
204.87 113.013 li
201.329 111.773 197.18 111.342 192.86 111.983 cv
181.629 113.632 173.52 121.833 174.75 130.292 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
191.04 137.783 mo
201.139 136.833 208.67 128.983 207.86 120.252 cv
207.61 117.533 206.569 115.042 204.959 112.943 cv
201.42 108.313 195.069 105.542 188.129 106.203 cv
178.03 107.153 170.5 115.002 171.309 123.733 cv
171.6 126.922 172.969 129.783 175.079 132.083 cv
178.739 136.083 184.639 138.393 191.04 137.783 cv
cp
195.02 95.8228 mo
211.95 97.4224 224.579 110.523 223.239 125.063 cv
221.899 139.592 207.09 150.083 190.159 148.473 cv
173.239 146.863 160.61 133.773 161.95 119.233 cv
163.29 104.693 178.1 94.2124 195.02 95.8228 cv
cp
f
208.149 99.7329 mo
215.379 103.573 220.659 109.833 222.559 117.013 cv
220.489 113.683 218.09 111.473 216.62 110.363 cv
218.049 113.462 218.729 116.863 218.25 120.013 cv
216.399 115.663 212.809 112.382 210.459 111.333 cv
212.87 114.743 213.37 120.573 212.77 123.502 cv
211.209 119.493 209.18 117.073 206.649 115.763 cv
206.2 114.763 205.629 113.813 204.959 112.943 cv
204.059 111.763 202.979 110.703 201.75 109.813 cv
203.219 110.063 204.809 110.603 206.549 111.433 cv
205.28 108.643 201.09 104.573 196.53 104.153 cv
198.95 103.313 203.809 103.233 208.139 105.132 cv
206.329 102.513 203.51 100.502 200.34 99.2231 cv
202 99.0425 204.819 98.9927 208.149 99.7329 cv
cp
.181369 .0870985 .113436 0 cmyk
f
204.87 113.013 mo
201.35 111.783 197.229 111.342 192.93 111.973 cv
195.479 110.042 198.29 109.183 201.75 109.813 cv
202.979 110.703 204.059 111.763 204.959 112.943 cv
204.87 113.013 li
cp
f
196.53 104.153 mo
201.09 104.573 205.28 108.643 206.549 111.433 cv
204.809 110.603 203.219 110.063 201.75 109.813 cv
198.149 107.123 193.299 105.712 188.129 106.203 cv
181.799 106.792 176.479 110.103 173.59 114.632 cv
172.86 115.233 172.25 115.903 171.76 116.613 cv
171.69 112.273 173.979 108.453 176.17 106.273 cv
172.02 106.413 167.799 109.023 166.69 111.023 cv
167.069 108.813 167.649 106.823 168.489 105.083 cv
174.629 98.563 184.409 94.813 195.02 95.8228 cv
199.819 96.2729 204.27 97.6528 208.149 99.7329 cv
204.819 98.9927 202 99.0425 200.34 99.2231 cv
203.51 100.502 206.329 102.513 208.139 105.132 cv
203.809 103.233 198.95 103.313 196.53 104.153 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
201.75 109.813 mo
198.29 109.183 195.479 110.042 192.93 111.973 cv
192.909 111.973 192.879 111.983 192.86 111.983 cv
186.28 112.953 180.77 116.172 177.59 120.373 cv
177.78 116.583 179.129 113.172 180.86 111.382 cv
177.879 111.943 175.389 113.103 173.59 114.632 cv
176.479 110.103 181.799 106.792 188.129 106.203 cv
193.299 105.712 198.149 107.123 201.75 109.813 cv
cp
f
175.129 132.033 mo
175.079 132.083 li
172.969 129.783 171.6 126.922 171.309 123.733 cv
171.01 120.473 171.87 117.333 173.59 114.632 cv
175.389 113.103 177.879 111.943 180.86 111.382 cv
179.129 113.172 177.78 116.583 177.59 120.373 cv
175.329 123.333 174.239 126.792 174.75 130.292 cv
174.829 130.893 174.959 131.473 175.129 132.033 cv
cp
.181369 .0870985 .113436 0 cmyk
f
175.079 132.083 mo
175.479 132.523 175.909 132.943 176.37 133.333 cv
173.229 131.292 170.79 128.453 169.85 126.123 cv
169.159 129.882 169.78 133.473 171.27 136.063 cv
167.67 133.962 165.27 130.223 164.159 127.373 cv
163.85 128.243 163.68 129.203 163.6 130.183 cv
162.209 126.752 161.6 123.042 161.95 119.233 cv
162.45 113.813 164.819 108.953 168.489 105.083 cv
167.649 106.823 167.069 108.813 166.69 111.023 cv
167.799 109.023 172.02 106.413 176.17 106.273 cv
173.979 108.453 171.69 112.273 171.76 116.613 cv
172.25 115.903 172.86 115.233 173.59 114.632 cv
171.87 117.333 171.01 120.473 171.309 123.733 cv
171.6 126.922 172.969 129.783 175.079 132.083 cv
cp
f
222.739 125.012 mo
221.522 138.196 208.989 148.137 193.584 148.137 cv
192.467 148.137 191.333 148.083 190.209 147.976 cv
173.586 146.398 161.131 133.525 162.444 119.281 cv
163.661 106.099 176.194 96.1597 191.596 96.1597 cv
192.715 96.1597 193.852 96.2134 194.975 96.3208 cv
211.598 97.897 224.053 110.768 222.739 125.012 cv
cp
195.069 95.3247 mo
193.915 95.2153 192.747 95.1597 191.596 95.1597 cv
175.674 95.1597 162.713 105.49 161.448 119.189 cv
160.084 133.981 172.944 147.341 190.116 148.972 cv
191.268 149.082 192.436 149.137 193.584 149.137 cv
209.508 149.137 222.471 138.805 223.735 125.104 cv
225.1 110.312 212.241 96.9526 195.069 95.3247 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
190.993 137.29 mo
190.334 137.352 189.667 137.384 189.01 137.384 cv
183.584 137.384 178.776 135.276 175.616 131.923 cv
175.614 131.912 175.616 131.901 175.612 131.889 cv
175.448 131.347 175.323 130.788 175.243 130.226 cv
174.059 122.049 181.995 114.086 192.93 112.476 cv
197.034 111.871 201.106 112.219 204.706 113.486 cv
204.719 113.491 204.735 113.488 204.749 113.492 cv
206.2 115.476 207.131 117.787 207.362 120.301 cv
208.141 128.738 200.797 136.359 190.993 137.29 cv
cp
188.172 106.697 mo
188.831 106.634 189.497 106.602 190.153 106.602 cv
195.59 106.602 200.409 108.718 203.567 112.083 cv
200.194 111.147 196.499 110.939 192.784 111.486 cv
181.352 113.17 173.065 121.58 174.245 130.263 cv
172.891 128.332 172.026 126.101 171.803 123.684 cv
171.024 115.248 178.368 107.627 188.172 106.697 cv
cp
190.153 105.602 mo
189.465 105.602 188.768 105.635 188.079 105.701 cv
177.725 106.683 169.977 114.792 170.807 123.776 cv
171.575 132.104 179.401 138.384 189.01 138.384 cv
189.698 138.384 190.397 138.351 191.086 138.286 cv
201.44 137.303 209.188 129.194 208.358 120.209 cv
207.59 111.882 199.764 105.602 190.153 105.602 cv
cp
f
203.747 63.9351 mo
208.69 65.8813 217.417 70.812 216.748 75.2515 cv
216.003 80.1938 205.68 77.3765 199.913 75.3716 cv
199.911 74.9214 199.945 74.4185 200.008 73.8843 cv
200.304 71.5864 201.229 68.647 202.531 66.0591 cv
202.904 65.3091 203.31 64.5991 203.747 63.9351 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
192.405 70.7905 mo
191.256 71.8589 189.282 73.019 185.743 74.7085 cv
185.691 74.6899 185.64 74.6821 185.589 74.6548 cv
184.192 74.1343 182 71.3511 181.101 69.4126 cv
180.957 69.0894 180.84 68.7856 180.767 68.5288 cv
183.714 65.7769 188.437 62.9292 190.376 62.2505 cv
193.003 61.3286 199.247 64.4312 202.388 65.9966 cv
202.531 66.0591 li
201.229 68.647 200.304 71.5864 200.008 73.8843 cv
199.817 73.8638 li
197.607 72.9224 194.279 71.6187 192.405 70.7905 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
185.097 81.8296 mo
184.162 82.7661 183.071 83.7817 181.731 82.8081 cv
181.585 82.7056 181.45 82.5815 181.302 82.438 cv
179.752 80.895 177.13 78.2817 178.314 77.1616 cv
178.526 76.9702 178.76 76.8491 179.018 76.7866 cv
178.992 76.6567 li
179.365 75.7163 178.026 73.7612 176.258 73.4487 cv
176 72.9321 175.131 72.1636 174.035 72.0483 cv
174.042 71.9888 li
176.219 69.6665 179.272 68.854 181.063 69.4341 cv
181.101 69.4126 li
182 71.3511 184.192 74.1343 185.589 74.6548 cv
185.586 74.7954 li
186.646 77.7466 186.127 80.8052 185.097 81.8296 cv
cp
.0797436 .400244 .584497 0 cmyk
f
181.302 82.438 mo
181.45 82.5815 181.585 82.7056 181.731 82.8081 cv
181.681 83.0112 li
180.121 84.8599 178.699 85.8228 177.394 85.7681 cv
176.28 85.7241 174.863 84.6021 174.839 83.1421 cv
173.296 83.1392 168.091 78.7339 170.436 74.562 cv
171.603 72.4702 172.938 71.9331 174.035 72.0483 cv
175.131 72.1636 176 72.9321 176.258 73.4487 cv
178.026 73.7612 179.365 75.7163 178.992 76.6567 cv
179.018 76.7866 li
178.76 76.8491 178.526 76.9702 178.314 77.1616 cv
177.13 78.2817 179.752 80.895 181.302 82.438 cv
cp
f
216.253 75.1782 mo
216.035 76.6226 214.818 77.3813 212.533 77.4956 cv
208.876 77.6782 203.509 76.0737 200.421 75.0151 cv
200.506 72.1235 201.998 67.6968 203.947 64.5581 cv
209.514 66.8267 216.808 71.4956 216.253 75.1782 cv
cp
196.607 71.9985 mo
195.408 71.5093 194.226 71.0259 193.264 70.6177 cv
194.194 69.5425 194.467 68.4565 194.743 66.9331 cv
194.792 66.6616 194.611 66.3999 194.339 66.3521 cv
194.07 66.3032 193.807 66.4829 193.757 66.7544 cv
193.487 68.2554 193.294 69.2612 192.072 70.4077 cv
192.056 70.4185 192.044 70.4302 192.031 70.4419 cv
190.955 71.4351 189.097 72.5386 185.709 74.1665 cv
184.356 73.6177 181.978 70.481 181.334 68.6831 cv
184.307 65.9897 188.796 63.3306 190.543 62.7183 cv
192.887 61.9009 198.805 64.7749 201.868 66.2925 cv
200.769 68.5698 199.956 71.0786 199.611 73.2358 cv
198.704 72.854 197.658 72.4272 196.607 71.9985 cv
cp
184.745 81.4761 mo
184.096 82.1226 183.438 82.7065 182.821 82.7026 cv
182.446 82.7017 182.063 82.5005 181.605 82.0396 cv
180.52 80.9526 178.501 78.9282 178.516 77.8657 cv
178.518 77.7222 178.561 77.6187 178.657 77.5278 cv
178.892 77.3052 179.191 77.2192 179.558 77.2622 cv
180.508 77.3774 181.709 78.3228 182.549 79.6187 cv
182.699 79.8491 183.008 79.9146 183.24 79.7661 cv
183.473 79.6157 183.539 79.3062 183.388 79.0737 cv
182.38 77.521 180.925 76.4194 179.678 76.27 cv
179.63 76.2651 179.587 76.27 179.543 76.2671 cv
179.535 75.8901 179.418 75.4741 179.176 75.0425 cv
178.746 74.2759 177.817 73.312 176.575 73.0044 cv
176.276 72.5659 175.711 72.0747 174.99 71.7847 cv
176.907 70.0845 179.312 69.478 180.779 69.8813 cv
181.72 71.7378 183.626 74.1958 185.114 74.979 cv
186.16 77.8862 185.56 80.6636 184.745 81.4761 cv
cp
177.417 85.2681 mo
176.601 85.2358 175.356 84.3716 175.342 83.1401 cv
175.34 82.8677 175.118 82.646 174.843 82.646 cv
174.212 82.645 172.271 81.3892 171.123 79.4253 cv
170.46 78.2915 169.877 76.5698 170.869 74.8013 cv
171.715 73.2935 172.738 72.5132 173.802 72.5347 cv
174.821 72.5601 175.625 73.2983 175.809 73.6694 cv
175.881 73.812 176.013 73.9126 176.17 73.9399 cv
177.12 74.1069 177.927 74.8599 178.305 75.5327 cv
178.545 75.9604 178.579 76.2759 178.536 76.438 cv
178.333 76.5278 178.137 76.6421 177.97 76.8013 cv
177.678 77.0776 177.521 77.4409 177.516 77.8521 cv
177.497 79.2222 179.104 80.9497 180.943 82.7935 cv
180.993 82.8433 181.042 82.8774 181.093 82.9233 cv
179.701 84.5151 178.468 85.3257 177.417 85.2681 cv
cp
203.929 63.4731 mo
203.708 63.3882 203.458 63.4673 203.328 63.6655 cv
202.974 64.2075 202.642 64.7964 202.323 65.4009 cv
198.934 63.7222 192.958 60.813 190.212 61.7739 cv
188.293 62.4458 183.527 65.2681 180.422 68.1636 cv
180.287 68.2905 180.231 68.481 180.28 68.6606 cv
180.292 68.6997 180.309 68.7466 180.321 68.7876 cv
178.451 68.6089 175.831 69.4321 173.799 71.5366 cv
172.772 71.5142 171.297 71.9927 169.998 74.313 cv
168.775 76.4937 169.465 78.5718 170.259 79.9302 cv
171.349 81.7944 173.178 83.2466 174.379 83.5757 cv
174.629 85.0845 176.081 86.2163 177.377 86.2671 cv
177.47 86.27 177.563 86.271 177.657 86.2661 cv
178.976 86.1997 180.376 85.2837 181.922 83.4937 cv
182.216 83.6284 182.517 83.7017 182.821 83.7026 cv
182.856 83.7026 182.893 83.7017 182.928 83.6997 cv
183.985 83.6479 184.831 82.8042 185.451 82.1841 cv
186.576 81.0649 187.124 78.0728 186.177 75.0493 cv
189.375 73.5122 191.305 72.4028 192.5 71.3774 cv
193.522 71.8179 194.864 72.3667 196.229 72.9243 cv
197.374 73.3901 198.516 73.8569 199.474 74.2622 cv
199.439 74.6499 199.412 75.0288 199.417 75.3765 cv
199.418 75.5874 199.553 75.7739 199.752 75.8442 cv
203.528 77.1558 208.817 78.6821 212.582 78.4937 cv
216.065 78.3198 217.038 76.6753 217.243 75.3257 cv
218.013 70.2007 207.894 65.0327 203.929 63.4731 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
199.558 102.09 mo
205.708 105.85 li
203.758 109.69 198.109 115.17 189.499 111.71 cv
189.539 111.6 li
193.418 111.27 197.338 106.85 199.499 102.19 cv
199.558 102.09 li
cp
.498634 .76672 .682032 .673518 cmyk
f
186.499 109.94 mo
190.539 109.6 194.708 103.27 196.208 100.1 cv
196.239 100.06 li
199.558 102.09 li
199.499 102.19 li
197.338 106.85 193.418 111.27 189.539 111.6 cv
189.499 111.71 li
188.699 111.39 187.878 111 187.039 110.52 cv
186.819 110.39 186.598 110.26 186.388 110.12 cv
186.499 109.94 li
cp
f
183.378 92.1899 mo
196.239 100.06 li
196.208 100.1 li
194.708 103.27 190.539 109.6 186.499 109.94 cv
186.388 110.12 li
181.119 106.79 178.579 100.67 183.378 92.1899 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
194.804 112.304 mo
193.626 112.304 192.415 112.121 191.176 111.759 cv
194.674 110.573 197.875 106.661 199.757 102.797 cv
205.044 106.033 li
203.367 109.015 199.782 112.304 194.804 112.304 cv
cp
183.56 92.8853 mo
195.583 100.243 li
193.821 103.79 189.963 109.149 186.459 109.438 cv
186.408 109.442 186.363 109.46 186.317 109.479 cv
180.816 105.807 179.806 99.8403 183.56 92.8853 cv
cp
189.417 111.129 mo
188.803 110.872 188.185 110.571 187.562 110.23 cv
191.49 109.08 195.064 103.479 196.439 100.766 cv
198.902 102.274 li
196.871 106.488 193.233 110.785 189.5 111.105 cv
189.469 111.108 189.445 111.122 189.417 111.129 cv
cp
205.969 105.426 mo
183.636 91.7593 li
183.52 91.6899 183.38 91.6675 183.25 91.7017 cv
183.119 91.7358 183.007 91.8218 182.94 91.9399 cv
178.424 99.9185 179.866 107.026 186.796 110.954 cv
189.548 112.514 192.243 113.304 194.804 113.304 cv
200.461 113.304 204.455 109.413 206.154 106.081 cv
206.273 105.847 206.192 105.563 205.969 105.426 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
222.52 75.8022 mo
221.321 76.0122 219.917 75.9194 218.721 75.8032 cv
219.582 74.7212 221.988 71.8579 223.599 69.7612 cv
223.782 69.9077 li
224.382 70.2886 226.005 72.4575 225.018 74.3003 cv
224.554 75.1772 223.626 75.6147 222.52 75.8022 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
214.389 67.6294 mo
214.259 67.7017 li
211.606 63.3188 209.15 60.1421 207.293 58.9175 cv
207.182 58.8374 207.065 58.7778 206.961 58.7104 cv
206.98 58.6851 li
210.061 58.5278 213.854 61.7739 216.97 64.2759 cv
217.144 64.4194 li
216.348 65.4067 215.527 66.4077 214.389 67.6294 cv
cp
.826932 .410346 .420874 .105837 cmyk
f
207.293 58.9175 mo
209.15 60.1421 211.606 63.3188 214.259 67.7017 cv
215.714 70.0894 217.22 72.8315 218.721 75.8032 cv
213.781 70.8208 210.51 66.9907 206.431 65.1255 cv
206.32 65.3628 li
204.561 65.9849 202.37 67.5806 199.945 69.8364 cv
199.843 69.728 li
198.58 67.9956 198.586 64.8325 201.198 62.9351 cv
200.426 59.5122 203.433 56.6821 206.961 58.7104 cv
207.065 58.7778 207.182 58.8374 207.293 58.9175 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
222.526 75.8149 mo
221.371 80.8599 212.143 99.4487 206.932 107.678 cv
202.01 108.041 185.386 99.4302 180.539 93.4468 cv
186.474 85.0073 193.934 75.4233 199.945 69.8364 cv
202.37 67.5806 204.561 65.9849 206.32 65.3628 cv
206.431 65.1255 li
210.51 66.9907 213.781 70.8208 218.721 75.8032 cv
219.917 75.9194 221.321 76.0122 222.52 75.8022 cv
222.526 75.8149 li
cp
.74789 .241123 .31931 .00552377 cmyk
f
218.113 86.6655 mo
216.957 89.1353 215.657 91.7788 214.326 94.3911 cv
206.756 92.9995 195.615 85.4917 191.06 79.521 cv
192.961 77.2173 194.852 75.0454 196.659 73.1196 cv
200.921 77.4526 211.241 85.3276 218.113 86.6655 cv
cp
0 0 0 0 cmyk
f
225.086 67.6235 mo
224.903 68.0151 224.331 68.8052 223.599 69.7612 cv
221.988 71.8579 219.582 74.7212 218.721 75.8032 cv
217.22 72.8315 215.714 70.0894 214.259 67.7017 cv
214.389 67.6294 li
215.527 66.4077 216.348 65.4067 217.144 64.4194 cv
217.664 63.7808 218.178 63.1626 218.749 62.5005 cv
221.16 64.3647 222.701 65.272 225.086 67.6235 cv
cp
.0797436 .400244 .584497 0 cmyk
f
224.581 74.0659 mo
223.878 75.3862 221.747 75.5181 219.708 75.3862 cv
219.909 75.1411 220.133 74.8667 220.376 74.5698 cv
221.595 73.0806 222.762 71.6489 223.685 70.4673 cv
224.244 71.0112 225.318 72.6812 224.581 74.0659 cv
cp
206.652 107.191 mo
201.799 107.233 186.163 99.2085 181.17 93.4204 cv
185.575 87.1792 199.317 68.3579 206.488 65.8315 cv
206.533 65.8149 206.57 65.7876 206.607 65.7593 cv
209.73 67.3091 212.422 70.064 215.992 73.7319 cv
216.745 74.5054 217.533 75.3159 218.37 76.1587 cv
218.373 76.1626 218.378 76.1636 218.381 76.1675 cv
218.393 76.1792 218.41 76.186 218.423 76.1968 cv
218.46 76.2251 218.5 76.2505 218.543 76.2671 cv
218.55 76.27 218.557 76.2778 218.566 76.2808 cv
218.601 76.2925 218.638 76.3013 218.676 76.3042 cv
219.745 76.4087 220.842 76.4702 221.85 76.3892 cv
220.137 82.2466 211.479 99.5005 206.652 107.191 cv
cp
199.565 66.4585 mo
199.684 65.5884 200.116 64.3403 201.495 63.3423 cv
201.657 63.2241 201.733 63.021 201.69 62.8257 cv
201.34 61.2993 201.833 59.814 202.945 59.0435 cv
204.071 58.2632 205.557 58.3706 207.023 59.3364 cv
209.357 60.8735 212.907 65.9136 216.734 73.0601 cv
216.724 73.0513 216.716 73.0435 216.708 73.0337 cv
211.845 68.0386 208.334 64.4263 203.019 63.5542 cv
202.748 63.5093 202.49 63.6938 202.445 63.9663 cv
202.4 64.2378 202.579 64.4995 202.857 64.5405 cv
203.743 64.686 204.573 64.9165 205.368 65.2163 cv
203.789 65.9614 201.971 67.3306 200.043 69.0815 cv
199.625 68.3267 199.438 67.3843 199.565 66.4585 cv
cp
215.996 64.1333 mo
216.442 64.4927 li
215.829 65.2397 215.171 66.0259 214.369 66.9126 cv
212.265 63.5024 210.343 60.9448 208.743 59.4458 cv
211.089 60.187 213.759 62.3325 215.996 64.1333 cv
cp
217.506 64.771 mo
217.937 64.2427 218.361 63.7231 218.822 63.1851 cv
219.345 63.5845 219.829 63.9409 220.292 64.2827 cv
221.684 65.311 222.897 66.2065 224.465 67.7173 cv
223.693 68.9429 221.167 72.0249 219.602 73.936 cv
219.31 74.2935 219.046 74.6147 218.819 74.895 cv
217.476 72.271 216.164 69.8921 214.912 67.8042 cv
215.958 66.6626 216.748 65.6997 217.506 64.771 cv
cp
224.296 69.6743 mo
224.919 68.8511 225.366 68.2095 225.542 67.8452 cv
225.633 67.6519 225.593 67.4224 225.441 67.272 cv
223.686 65.5464 222.388 64.5884 220.886 63.478 cv
220.318 63.0601 219.723 62.6187 219.059 62.105 cv
218.849 61.9448 218.551 61.9722 218.376 62.1724 cv
217.913 62.7036 217.493 63.2104 217.077 63.7192 cv
216.623 63.355 li
213.547 60.8774 210.063 58.0747 207.021 58.1821 cv
205.385 57.3159 203.684 57.3149 202.376 58.2222 cv
201.006 59.1714 200.349 60.9136 200.651 62.728 cv
198.206 64.6919 198.031 67.8013 199.282 69.7856 cv
191.919 76.7466 183.245 88.7319 180.13 93.1587 cv
180.001 93.3423 180.01 93.5884 180.151 93.7612 cv
184.079 98.605 195.17 104.867 202.21 107.23 cv
204.209 107.902 205.882 108.258 206.971 108.179 cv
207.128 108.167 207.273 108.083 207.357 107.948 cv
212.299 100.145 221.477 81.8071 222.931 76.2319 cv
224.041 75.9897 224.958 75.4858 225.463 74.5356 cv
226.502 72.5825 225.119 70.4243 224.296 69.6743 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
258.092 47.4829 mo
256.201 54.0649 253.13 63.4741 249.421 67.4614 cv
244.636 72.5981 237.397 73.9722 232.652 73.3081 cv
228.023 72.6646 213.316 68.7104 205.871 56.228 cv
203.01 57.5923 197.415 55.4575 195.596 49.938 cv
194.943 47.9438 195.002 46.1675 195.496 44.6909 cv
196.36 42.1528 198.545 40.5269 200.735 40.2632 cv
204.188 39.8569 206.933 42.5444 207.739 47.5913 cv
210.892 45.771 214.695 43.4966 217.312 39.2563 cv
217.326 39.1167 li
223.623 39.7397 230.86 38.0815 233.82 36.4507 cv
233.862 36.4985 li
232.427 37.7788 231.083 39.5317 230.187 41.9028 cv
235.95 44.1772 250.038 42.5396 256.876 35.8345 cv
257.005 35.9692 li
258.685 37.9614 259.518 40.4341 259.526 42.2935 cv
259.181 43.5522 258.699 45.3667 258.092 47.4829 cv
cp
0 .167361 .439734 0 cmyk
f
199.986 45.4624 mo
197.998 46.4517 197.799 49.6929 200.392 51.7964 cv
202.391 53.4175 204.694 52.9233 204.601 49.9995 cv
204.485 46.3413 202.12 44.4009 199.986 45.4624 cv
cp
.0797436 .400244 .584497 0 cmyk
f
258.092 47.4829 mo
256.201 54.0649 253.13 63.4741 249.421 67.4614 cv
244.636 72.5981 237.397 73.9722 232.652 73.3081 cv
232.067 73.2251 231.319 73.0923 230.441 72.8872 cv
235.863 73.0005 242.053 71.8169 247.683 67.1841 cv
251.78 63.8149 254.735 54.6587 258.737 38.814 cv
259.263 40.0327 259.526 41.2573 259.526 42.2935 cv
259.181 43.5522 258.699 45.3667 258.092 47.4829 cv
cp
0 0 0 0 cmyk
f
257.137 36.144 mo
250.785 45.9614 234.321 46.9067 226.324 43.8921 cv
226.787 42.7046 227.229 41.6353 228.185 40.5347 cv
225.249 41.6919 219.652 42.563 215.118 42.1392 cv
215.907 41.2837 216.643 40.3364 217.312 39.2563 cv
217.326 39.1167 li
223.623 39.7397 230.86 38.0815 233.82 36.4507 cv
233.862 36.4985 li
232.427 37.7788 231.083 39.5317 230.187 41.9028 cv
235.95 44.1772 250.038 42.5396 256.876 35.8345 cv
257.005 35.9692 li
257.045 36.0269 257.097 36.0767 257.137 36.144 cv
cp
.0797436 .400244 .584497 0 cmyk
f
261.644 28.8364 mo
266.362 35.8833 262.154 44.6655 258.345 47.5483 cv
258.092 47.4829 li
258.699 45.3667 259.181 43.5522 259.526 42.2935 cv
259.518 40.4341 258.685 37.9614 257.005 35.9692 cv
256.876 35.8345 li
250.038 42.5396 235.95 44.1772 230.187 41.9028 cv
231.083 39.5317 232.427 37.7788 233.862 36.4985 cv
233.82 36.4507 li
230.86 38.0815 223.623 39.7397 217.326 39.1167 cv
217.312 39.2563 li
214.695 43.4966 210.892 45.771 207.739 47.5913 cv
206.933 42.5444 204.188 39.8569 200.735 40.2632 cv
198.545 40.5269 196.36 42.1528 195.496 44.6909 cv
195.313 44.6382 li
193.046 42.3403 190.475 38.9624 189.317 34.6968 cv
191.257 33.769 193.53 33.1548 196.978 33.0005 cv
194.79 30.3306 191.899 25.1294 190.922 21.271 cv
194.397 19.5991 199.24 18.0464 206.437 17.5386 cv
203.796 15.9253 200.687 12.7163 199.174 9.77979 cv
202.166 7.8999 208.69 6.88818 215.155 8.41357 cv
213.445 6.58936 212.019 3.15967 211.446 .651855 cv
221.033 -.450684 237.573 4.7915 247.189 10.0405 cv
257.655 15.7544 263.071 23.6255 261.644 28.8364 cv
cp
.373144 .782101 .665248 .350225 cmyk
f
255.978 18.7593 mo
258.383 21.4175 259.449 23.7778 259.839 25.6548 cv
254.219 30.6343 233.798 21.9966 223.43 18.8394 cv
214.832 16.2261 208.761 15.3589 204.669 16.272 cv
203.728 15.5171 202.779 14.6187 201.924 13.646 cv
215.775 8.17822 242.621 18.8413 249.905 19.6284 cv
253.204 19.9868 255.061 19.5835 255.978 18.7593 cv
cp
.341833 .684718 .553277 .151247 cmyk
f
261.644 28.8364 mo
262.074 27.2671 261.883 25.4663 261.125 23.5464 cv
260.303 21.4712 258.82 19.2808 256.724 17.1138 cv
254.312 14.6167 251.106 12.1831 247.189 10.0405 cv
237.573 4.7915 221.033 -.450684 211.446 .651855 cv
211.469 .746582 211.492 .852051 211.525 .949707 cv
222.141 1.44092 241.203 7.18799 251.006 14.3589 cv
253.093 15.8843 254.721 17.3599 255.978 18.7593 cv
258.383 21.4175 259.449 23.7778 259.839 25.6548 cv
260.173 27.2671 260.023 28.5298 259.822 29.3179 cv
262.533 32.5474 263.873 38.7739 259.049 46.9517 cv
262.636 43.5923 266.074 35.4468 261.644 28.8364 cv
cp
0 0 0 0 cmyk
f
260.024 42.2915 mo
260.012 40.1851 259.065 37.7476 257.546 35.8589 cv
257.929 35.4644 258.289 35.0542 258.618 34.6274 cv
258.786 34.4097 258.746 34.0962 258.528 33.9263 cv
258.307 33.7583 257.995 33.7993 257.826 34.0181 cv
252.212 41.2993 237.387 43.7856 230.842 41.6099 cv
232.524 37.5854 235.489 35.5796 237.722 34.6001 cv
237.975 34.4888 238.09 34.1938 237.979 33.9419 cv
237.869 33.688 237.574 33.5737 237.321 33.6851 cv
236.371 34.1011 235.06 34.8257 233.745 35.9575 cv
233.687 35.9663 233.628 35.9819 233.574 36.0122 cv
229.842 38.0728 220.175 39.8228 213.71 37.9263 cv
215.416 33.5571 220.286 29.3599 224.402 28.8003 cv
224.675 28.7632 224.868 28.5112 224.83 28.2378 cv
224.792 27.9644 224.542 27.7739 224.268 27.8091 cv
219.672 28.4351 214.214 33.2378 212.587 38.0894 cv
212.545 38.2163 212.555 38.354 212.615 38.4722 cv
212.674 38.5913 212.779 38.6812 212.906 38.7241 cv
213.752 39.0024 214.637 39.2183 215.549 39.3794 cv
215.872 39.436 216.2 39.479 216.527 39.522 cv
214.105 43.1421 210.758 45.2583 208.1 46.8022 cv
207.129 42.0171 204.325 39.3354 200.675 39.7671 cv
198.738 39.9946 196.91 41.1812 195.787 42.9399 cv
195.594 43.2427 195.433 43.5591 195.287 43.8833 cv
192.651 41.0952 190.84 38.103 189.916 34.9712 cv
191.914 34.0845 194.123 33.6274 197 33.5005 cv
197.191 33.4927 197.358 33.3774 197.436 33.2046 cv
197.512 33.0317 197.486 32.8296 197.365 32.6831 cv
195.322 30.1958 192.566 25.313 191.513 21.5444 cv
195.695 19.5962 200.591 18.4458 206.468 18.0317 cv
206.686 18.0171 206.869 17.8628 206.919 17.6509 cv
206.97 17.439 206.879 17.2192 206.694 17.106 cv
204.141 15.5503 201.328 12.606 199.839 9.96729 cv
202.815 8.35596 208.936 7.4585 215.036 8.89404 cv
215.263 8.96729 215.473 8.84814 215.583 8.65869 cv
215.694 8.46826 215.667 8.22705 215.515 8.06592 cv
214.012 6.46143 212.691 3.45361 212.066 1.08643 cv
221.513 .266113 237.386 5.25342 246.948 10.4761 cv
257.916 16.4663 262.4 24.1782 261.161 28.7017 cv
261.123 28.8423 261.147 28.9907 261.228 29.1118 cv
265.41 35.356 262.213 43.0562 258.926 46.354 cv
259.231 45.2681 259.501 44.2798 259.724 43.4595 cv
260.005 42.4272 li
260.017 42.3833 260.023 42.3374 260.024 42.2915 cv
cp
249.051 67.1226 mo
244.515 71.9946 237.578 73.4897 232.716 72.812 cv
226.537 71.9507 213.068 67.3198 206.302 55.9751 cv
206.169 55.7554 205.892 55.6685 205.658 55.7798 cv
204.511 56.3228 202.852 56.231 201.218 55.5288 cv
198.814 54.4976 196.938 52.4019 196.076 49.7798 cv
195.315 47.4683 195.512 45.23 196.629 43.478 cv
197.592 41.9692 199.149 40.9526 200.792 40.7593 cv
204.034 40.3843 206.502 43.0269 207.241 47.6685 cv
207.266 47.8306 207.371 47.9702 207.518 48.0415 cv
207.665 48.1128 207.84 48.106 207.984 48.0229 cv
210.909 46.3384 214.901 44.0288 217.656 39.644 cv
222.893 40.0981 228.538 39.0269 231.987 37.7866 cv
231.12 38.8589 230.319 40.1401 229.72 41.7261 cv
229.624 41.9819 229.75 42.2671 230.003 42.3687 cv
230.753 42.6646 231.618 42.897 232.57 43.0649 cv
239.384 44.2661 250.687 42.1431 256.813 36.5444 cv
258.394 38.5376 258.998 40.7544 259.023 42.231 cv
258.759 43.1978 li
258.3 44.8862 257.654 47.2534 256.862 49.8657 cv
256.682 49.2388 256.309 48.9497 255.995 48.8364 cv
254.605 48.3442 252.33 50.0132 249.343 52.689 cv
248.594 53.3589 248.165 53.4458 248.037 53.3843 cv
247.913 53.3335 247.77 53.0288 247.745 52.4829 cv
247.73 52.1509 247.453 51.8931 247.119 51.9087 cv
246.789 51.9243 246.531 52.2036 246.546 52.5347 cv
246.603 53.8188 247.134 54.3081 247.572 54.4907 cv
247.667 54.5317 247.765 54.561 247.869 54.5786 cv
248.513 54.6929 249.277 54.3589 250.143 53.5835 cv
254.007 50.1216 255.216 49.8247 255.586 49.9653 cv
255.689 50.0024 255.734 50.2075 255.752 50.3267 cv
255.802 50.6558 256.108 50.8804 256.434 50.8325 cv
256.488 50.8247 256.532 50.8003 256.58 50.7798 cv
254.708 56.8062 252.083 63.8667 249.051 67.1226 cv
cp
262.182 28.7437 mo
263.562 22.9565 257.542 15.1226 247.427 9.59912 cv
237.541 4.19873 220.95 -.947754 211.385 .148926 cv
211.244 .165527 211.116 .241699 211.034 .356934 cv
210.952 .473145 210.922 .618652 210.955 .757324 cv
211.424 2.8208 212.499 5.62646 213.893 7.63525 cv
213.834 7.62354 213.773 7.61279 213.712 7.60205 cv
207.544 6.51416 201.709 7.59326 198.904 9.35498 cv
198.683 9.49365 198.606 9.77783 198.726 10.0073 cv
200.006 12.4897 202.504 15.313 204.979 17.1499 cv
199.425 17.6675 194.745 18.8735 190.707 20.8208 cv
190.492 20.9243 190.38 21.1636 190.439 21.3931 cv
191.347 24.9966 193.901 29.7339 195.999 32.5571 cv
193.26 32.7583 191.103 33.2896 189.103 34.2446 cv
188.884 34.3491 188.772 34.5942 188.836 34.8267 cv
189.803 38.4087 191.848 41.812 194.912 44.9458 cv
194.475 46.5298 194.534 48.2944 195.126 50.0923 cv
196.079 52.9868 198.156 55.3042 200.824 56.4478 cv
202.533 57.1821 204.305 57.3247 205.665 56.854 cv
213.654 69.8423 228.791 73.1431 231.996 73.7075 cv
232.311 73.7632 232.511 73.7925 232.578 73.8022 cv
237.696 74.5171 245 72.939 249.783 67.8042 cv
253.483 63.8296 256.545 54.5962 258.449 48.0308 cv
258.518 48.0161 258.585 47.9888 258.646 47.9429 cv
262.519 45.0122 266.957 36.1323 262.182 28.7437 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
201.652 44.7104 mo
200.289 44.3853 199.018 45.0259 198.562 46.1655 cv
198.458 46.4204 198.583 46.7124 198.838 46.8149 cv
199.094 46.9214 199.387 46.7944 199.49 46.5376 cv
199.763 45.855 200.58 45.4937 201.449 45.689 cv
202.734 45.9546 204.202 47.4067 204.116 50.6235 cv
204.109 50.8755 204.289 51.0874 204.529 51.1294 cv
204.552 51.1333 204.577 51.1362 204.603 51.1362 cv
204.879 51.145 205.108 50.9263 205.116 50.6509 cv
205.217 46.8159 203.313 45.0532 201.652 44.7104 cv
cp
f
232.141 48.5581 mo
233.908 51.6948 235 52.9634 236.117 53.1597 cv
236.147 53.1655 236.176 53.1694 236.207 53.1743 cv
237.165 53.2944 237.898 52.6177 238.629 51.853 cv
238.859 51.6138 238.849 51.2329 238.61 51.0044 cv
238.371 50.7759 237.991 50.7856 237.762 51.0239 cv
237.164 51.6499 236.719 52.0288 236.356 51.9839 cv
235.375 51.8276 233.728 48.9312 233.185 47.9683 cv
230.125 42.5376 225.484 42.3081 222.44 43.7642 cv
222.14 43.9067 222.014 44.2651 222.157 44.5649 cv
222.3 44.8638 222.659 44.9888 222.958 44.8472 cv
225.534 43.6167 229.486 43.8481 232.141 48.5581 cv
cp
f
234.605 53.1509 mo
233.815 55.687 231.65 57.269 229.772 56.6831 cv
227.894 56.0972 227.012 53.5649 227.804 51.0269 cv
228.596 48.4907 230.761 46.9087 232.639 47.4946 cv
233.718 49.9624 233.851 50.1519 234.897 51.2788 cv
234.897 51.8823 234.804 52.5161 234.605 53.1509 cv
cp
f
232.143 51.314 mo
231.577 52.3052 230.522 52.7681 229.789 52.3491 cv
229.055 51.9302 228.918 50.7856 229.486 49.7935 cv
230.052 48.8032 231.107 48.3403 231.841 48.7603 cv
232.575 49.1782 232.71 50.3228 232.143 51.314 cv
cp
0 0 0 0 cmyk
f
253.589 56.4761 mo
253.015 59.0708 251.29 60.895 249.739 60.5522 cv
248.187 60.2075 247.394 57.8228 247.969 55.229 cv
248.071 54.7769 248.206 54.3481 248.369 53.9487 cv
250.172 52.6167 250.078 52.6831 251.821 51.1538 cv
253.373 51.4976 254.166 53.8804 253.589 56.4761 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
251.383 55.7612 mo
251.175 56.7026 250.456 57.3442 249.778 57.1948 cv
249.098 57.0444 248.717 56.1577 248.926 55.2153 cv
249.135 54.2739 249.855 53.6323 250.535 53.7827 cv
251.212 53.9331 251.593 54.8188 251.383 55.7612 cv
cp
0 0 0 0 cmyk
f
240.525 60.7769 mo
241.492 59.9272 242.915 60.1831 242.495 61.1235 cv
242.075 62.0649 239.924 61.3052 240.525 60.7769 cv
cp
.0797436 .400244 .584497 0 cmyk
f
216.523 39.5229 mo
215.888 40.4673 215.191 41.3188 214.459 42.0737 cv
213.753 41.98 213.075 41.8599 212.453 41.6997 cv
212.686 40.7261 213.173 39.8062 213.816 38.9849 cv
214.376 39.145 214.961 39.2788 215.552 39.3823 cv
215.868 39.438 216.196 39.4761 216.523 39.5229 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
195.784 42.9448 mo
195.588 43.2456 195.431 43.563 195.284 43.8813 cv
192.648 41.0913 190.839 38.1021 189.918 34.9751 cv
191.914 34.0884 194.127 33.6245 197.002 33.5024 cv
197.186 33.4946 197.36 33.3726 197.44 33.2046 cv
197.511 33.0337 197.487 32.8257 197.369 32.6841 cv
195.37 30.2603 192.698 25.5435 191.588 21.8149 cv
194.407 24.4341 198.019 26.4116 200.792 27.2046 cv
203.958 25.0923 206.322 24.4126 211.27 24.3921 cv
208.031 26.2378 207.063 28.0972 205.845 31.437 cv
212.291 27.019 218.803 26.8774 223.264 28.0093 cv
218.916 29.1216 214.108 33.5835 212.592 38.0894 cv
212.549 38.2134 212.555 38.3569 212.617 38.4692 cv
212.676 38.5913 212.783 38.6812 212.907 38.7241 cv
213.203 38.8267 213.503 38.9106 213.816 38.9849 cv
213.173 39.8062 212.686 40.7261 212.453 41.6997 cv
213.075 41.8599 213.753 41.98 214.459 42.0737 cv
212.397 44.2075 210.057 45.6646 208.101 46.8022 cv
207.126 42.02 204.32 39.3315 200.679 39.7661 cv
198.742 39.9937 196.907 41.1821 195.784 42.9448 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
233.542 70.5601 mo
233.558 70.645 li
232.484 70.7964 231.2 70.5962 229.618 69.895 cv
225.965 68.2642 224.566 65.9819 224.3 63.7524 cv
224.456 63.7261 li
226.186 63.5591 232.277 65.2856 233.542 70.5601 cv
cp
0 .919585 .825986 0 cmyk
f
225.238 59.1714 mo
226.039 62.5757 233.196 66.1763 238.541 66.0894 cv
238.668 66.1714 li
237.422 68.1177 236.073 70.312 233.558 70.645 cv
233.542 70.5601 li
232.277 65.2856 226.186 63.5591 224.456 63.7261 cv
224.3 63.7524 li
224.095 62.0806 224.523 60.4487 225.121 59.1167 cv
225.238 59.1714 li
cp
.433509 .775906 .674159 .526574 cmyk
f
226.096 57.3218 mo
226.902 60.7163 234.321 64.3501 240.257 64.0317 cv
239.697 64.5981 239.186 65.3647 238.668 66.1714 cv
238.541 66.0894 li
233.196 66.1763 226.039 62.5757 225.238 59.1714 cv
225.121 59.1167 li
225.413 58.4146 225.771 57.8091 226.096 57.3218 cv
cp
0 0 0 0 cmyk
f
233.91 70.0552 mo
232.456 65.1108 226.915 63.2642 224.763 63.2144 cv
224.713 62.1812 224.892 61.189 225.173 60.3276 cv
226.092 62.0083 228.163 63.5659 230.617 64.7056 cv
232.92 65.7749 235.542 66.4731 237.821 66.5708 cv
236.793 68.144 235.678 69.6284 233.91 70.0552 cv
cp
229.823 69.4341 mo
229.602 69.3335 li
227.075 68.1597 225.516 66.562 224.967 64.5854 cv
224.934 64.4614 224.92 64.3374 224.894 64.2134 cv
226.835 64.3013 231.562 65.9351 232.906 70.1851 cv
232.035 70.1909 231.022 69.9673 229.823 69.4341 cv
cp
231.25 62.6235 mo
233.805 63.8101 236.63 64.4907 239.168 64.5454 cv
238.928 64.8696 238.695 65.2241 238.459 65.5854 cv
233.325 65.6333 226.442 62.1128 225.721 59.0562 cv
225.717 59.0415 225.708 59.0308 225.703 59.0161 cv
225.804 58.8052 225.907 58.6069 226.003 58.4302 cv
226.834 59.9292 228.708 61.4429 231.25 62.6235 cv
cp
240.708 63.8228 mo
240.625 63.6353 240.432 63.52 240.226 63.5298 cv
237.582 63.6743 234.462 63.0132 231.671 61.7163 cv
228.999 60.4751 227.112 58.8384 226.651 57.395 cv
226.861 57.4624 227.071 57.5659 227.273 57.7144 cv
227.5 57.8823 227.809 57.8306 227.972 57.6069 cv
228.136 57.3843 228.087 57.0708 227.866 56.9087 cv
226.566 55.9614 224.968 56.146 223.887 57.3755 cv
223.706 57.5825 223.726 57.8979 223.933 58.0806 cv
223.97 58.1128 224.01 58.1392 224.052 58.1587 cv
224.249 58.2495 224.488 58.2056 224.638 58.0347 cv
224.873 57.7681 225.135 57.5815 225.411 57.4614 cv
224.617 58.7612 223.142 61.7456 224.004 64.853 cv
224.634 67.1255 226.375 68.938 229.181 70.2407 cv
229.417 70.3472 li
234.993 72.8286 237.219 69.3599 239.01 66.5718 cv
239.549 65.7329 240.059 64.9409 240.61 64.3804 cv
240.754 64.2319 240.794 64.0112 240.708 63.8228 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
169.037 67.8022 mo
167.784 68.23 166.586 68.5571 165.905 68.0649 cv
164.859 67.3218 163.961 66.2788 164.604 64.4565 cv
163.642 62.9272 163.205 57.522 165.361 55.4741 cv
167.516 53.436 173.181 53.5239 177.537 54.8022 cv
177.698 54.8081 li
177.687 57.1655 178.457 60.5571 178.939 61.4038 cv
178.719 61.7017 li
178.232 64.0249 177.193 67.2524 175.216 68.2856 cv
173.241 69.3188 170.218 70.5601 169.339 68.2466 cv
169.037 67.8022 li
cp
0 .167361 .439734 0 cmyk
f
187.932 60.2368 mo
186.214 60.8647 183.58 61.1372 178.939 61.4038 cv
178.457 60.5571 177.687 57.1655 177.698 54.8081 cv
177.694 54.5649 177.701 54.3325 177.724 54.1235 cv
181.494 52.6948 186.95 52.1343 189.012 52.0874 cv
192.185 52.0015 198.758 58.6323 201.009 60.9126 cv
201.112 61.0298 li
198.927 62.9312 196.952 65.3022 195.811 67.3179 cv
195.645 67.2212 li
193.952 65.5142 189.417 61.6069 187.943 60.2485 cv
187.932 60.2368 li
cp
.433509 .775906 .674159 .526574 cmyk
f
193.591 65.2847 mo
194.441 62.6753 196.257 59.9067 198.278 58.2124 cv
199.414 59.2935 200.38 60.2759 201.009 60.9126 cv
201.112 61.0298 li
198.927 62.9312 196.952 65.3022 195.811 67.3179 cv
195.645 67.2212 li
195.156 66.729 194.424 66.0444 193.591 65.2847 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
195.165 68.6548 mo
195.332 68.2349 195.545 67.7827 195.811 67.3179 cv
196.952 65.3022 198.927 62.9312 201.112 61.0298 cv
201.745 60.4829 202.392 59.978 203.041 59.5239 cv
206.883 63.2007 213.089 71.0601 210.788 74.9175 cv
208.223 79.2085 199.739 72.689 195.165 68.6548 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
165.702 55.8403 mo
167.682 53.9634 173.063 54.0591 177.209 55.2368 cv
177.277 57.394 177.867 60.1968 178.366 61.3628 cv
178.302 61.4282 178.251 61.5044 178.231 61.5991 cv
177.825 63.5093 176.862 66.8618 174.984 67.8413 cv
172.956 68.9009 171.479 69.269 170.619 68.9399 cv
170.241 68.7974 169.975 68.5093 169.807 68.064 cv
169.805 68.062 169.804 68.0601 169.802 68.0581 cv
169.818 68.0522 169.833 68.0464 169.85 68.0405 cv
170.373 67.853 170.894 67.6636 171.383 67.5278 cv
171.65 67.4536 171.804 67.1792 171.731 66.9116 cv
171.658 66.647 171.379 66.4927 171.116 66.564 cv
170.604 66.7075 170.058 66.9028 169.512 67.1001 cv
168.234 67.5601 166.786 68.0776 166.193 67.6558 cv
164.969 66.7827 164.634 65.8755 165.072 64.6255 cv
165.123 64.4829 165.104 64.3237 165.023 64.1958 cv
164.176 62.8403 163.757 57.6851 165.702 55.8403 cv
cp
189.027 52.5815 mo
190.967 52.5327 194.789 55.3687 200.396 61.0034 cv
198.522 62.6948 196.825 64.7036 195.691 66.564 cv
194.42 65.3237 192.165 63.3325 190.315 61.6978 cv
189.75 61.1978 189.244 60.7524 188.83 60.3823 cv
189.874 59.8579 190.605 59.1294 191.277 58.0728 cv
191.426 57.8413 191.357 57.5308 191.125 57.3823 cv
190.89 57.2388 190.584 57.3032 190.435 57.5366 cv
188.921 59.9126 187.327 60.4038 179.246 60.8813 cv
178.784 59.7329 178.122 56.5464 178.208 54.4771 cv
181.866 53.1694 187.039 52.6362 189.027 52.5815 cv
cp
202.992 60.1704 mo
207.286 64.3794 212.267 71.4644 210.359 74.6616 cv
209.784 75.6235 208.827 75.9839 207.431 75.7632 cv
203.879 75.2007 198.708 71.0854 195.768 68.5142 cv
196.942 65.8696 200 62.3374 202.992 60.1704 cv
cp
164.058 64.5132 mo
163.358 66.8618 165.044 68.0649 165.61 68.4692 cv
166.421 69.0474 167.617 68.7954 168.867 68.3833 cv
168.868 68.394 168.868 68.4077 168.87 68.4175 cv
169.141 69.1372 169.611 69.6265 170.261 69.8745 cv
171.428 70.3149 173.122 69.9429 175.447 68.728 cv
177.554 67.6294 178.645 64.4175 179.192 61.8862 cv
183.384 61.6401 185.996 61.3931 187.798 60.8022 cv
188.255 61.2144 188.904 61.7866 189.654 62.4478 cv
191.488 64.0679 193.969 66.2593 195.174 67.4604 cv
194.997 67.8052 194.83 68.146 194.703 68.4673 cv
194.625 68.6655 194.678 68.8872 194.836 69.0269 cv
198.458 72.2261 203.557 76.1616 207.274 76.7495 cv
209.541 77.1099 210.669 76.0903 211.217 75.1743 cv
213.874 70.7222 206.466 62.106 203.387 59.1616 cv
203.312 59.0894 203.218 59.0454 203.121 59.0298 cv
202.998 59.0103 202.867 59.0366 202.756 59.1118 cv
202.219 59.4819 201.686 59.9058 201.156 60.3481 cv
197.552 56.7202 192.636 52.1089 189.574 51.6235 cv
189.375 51.5923 189.183 51.5767 189 51.5825 cv
187.331 51.6265 181.645 52.103 177.552 53.6519 cv
177.374 53.7222 177.248 53.8862 177.231 54.0776 cv
177.227 54.1196 177.227 54.1665 177.223 54.2114 cv
176.44 53.9995 175.624 53.8159 174.783 53.6821 cv
170.979 53.0796 166.878 53.3472 165.014 55.1157 cv
162.671 57.3354 163.13 62.6694 164.058 64.5132 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
162.25 130.292 mo
162.329 130.893 162.459 131.473 162.629 132.033 cv
162.579 132.083 li
160.469 129.783 159.1 126.922 158.809 123.733 cv
158 115.002 165.53 107.153 175.629 106.203 cv
182.569 105.542 188.92 108.313 192.459 112.943 cv
192.37 113.013 li
188.829 111.773 184.68 111.342 180.36 111.983 cv
169.129 113.632 161.02 121.833 162.25 130.292 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
178.54 137.783 mo
188.639 136.833 196.17 128.983 195.36 120.252 cv
195.11 117.533 194.069 115.042 192.459 112.943 cv
188.92 108.313 182.569 105.542 175.629 106.203 cv
165.53 107.153 158 115.002 158.809 123.733 cv
159.1 126.922 160.469 129.783 162.579 132.083 cv
166.239 136.083 172.139 138.393 178.54 137.783 cv
cp
182.52 95.8228 mo
199.45 97.4224 212.079 110.523 210.739 125.063 cv
209.399 139.592 194.59 150.083 177.659 148.473 cv
160.739 146.863 148.11 133.773 149.45 119.233 cv
150.79 104.693 165.6 94.2124 182.52 95.8228 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
195.649 99.7329 mo
202.879 103.573 208.159 109.833 210.059 117.013 cv
207.989 113.683 205.59 111.473 204.12 110.363 cv
205.549 113.462 206.229 116.863 205.75 120.013 cv
203.899 115.663 200.309 112.382 197.959 111.333 cv
200.37 114.743 200.87 120.573 200.27 123.502 cv
198.709 119.493 196.68 117.073 194.149 115.763 cv
193.7 114.763 193.129 113.813 192.459 112.943 cv
191.559 111.763 190.479 110.703 189.25 109.813 cv
190.719 110.063 192.309 110.603 194.049 111.433 cv
192.78 108.643 188.59 104.573 184.03 104.153 cv
186.45 103.313 191.309 103.233 195.639 105.132 cv
193.829 102.513 191.01 100.502 187.84 99.2231 cv
189.5 99.0425 192.319 98.9927 195.649 99.7329 cv
cp
0 0 0 0 cmyk
f
192.37 113.013 mo
188.85 111.783 184.729 111.342 180.43 111.973 cv
182.979 110.042 185.79 109.183 189.25 109.813 cv
190.479 110.703 191.559 111.763 192.459 112.943 cv
192.37 113.013 li
cp
.181369 .0870985 .113436 0 cmyk
f
184.03 104.153 mo
188.59 104.573 192.78 108.643 194.049 111.433 cv
192.309 110.603 190.719 110.063 189.25 109.813 cv
185.649 107.123 180.799 105.712 175.629 106.203 cv
169.299 106.792 163.979 110.103 161.09 114.632 cv
160.36 115.233 159.75 115.903 159.26 116.613 cv
159.19 112.273 161.479 108.453 163.67 106.273 cv
159.52 106.413 155.299 109.023 154.19 111.023 cv
154.569 108.813 155.149 106.823 155.989 105.083 cv
162.129 98.563 171.909 94.813 182.52 95.8228 cv
187.319 96.2729 191.77 97.6528 195.649 99.7329 cv
192.319 98.9927 189.5 99.0425 187.84 99.2231 cv
191.01 100.502 193.829 102.513 195.639 105.132 cv
191.309 103.233 186.45 103.313 184.03 104.153 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
189.25 109.813 mo
185.79 109.183 182.979 110.042 180.43 111.973 cv
180.409 111.973 180.379 111.983 180.36 111.983 cv
173.78 112.953 168.27 116.172 165.09 120.373 cv
165.28 116.583 166.629 113.172 168.36 111.382 cv
165.379 111.943 162.889 113.103 161.09 114.632 cv
163.979 110.103 169.299 106.792 175.629 106.203 cv
180.799 105.712 185.649 107.123 189.25 109.813 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
162.629 132.033 mo
162.579 132.083 li
160.469 129.783 159.1 126.922 158.809 123.733 cv
158.51 120.473 159.37 117.333 161.09 114.632 cv
162.889 113.103 165.379 111.943 168.36 111.382 cv
166.629 113.172 165.28 116.583 165.09 120.373 cv
162.829 123.333 161.739 126.792 162.25 130.292 cv
162.329 130.893 162.459 131.473 162.629 132.033 cv
cp
.181369 .0870985 .113436 0 cmyk
f
162.579 132.083 mo
162.979 132.523 163.409 132.943 163.87 133.333 cv
160.729 131.292 158.29 128.453 157.35 126.123 cv
156.659 129.882 157.28 133.473 158.77 136.063 cv
155.17 133.962 152.77 130.223 151.659 127.373 cv
151.35 128.243 151.18 129.203 151.1 130.183 cv
149.709 126.752 149.1 123.042 149.45 119.233 cv
149.95 113.813 152.319 108.953 155.989 105.083 cv
155.149 106.823 154.569 108.813 154.19 111.023 cv
155.299 109.023 159.52 106.413 163.67 106.273 cv
161.479 108.453 159.19 112.273 159.26 116.613 cv
159.75 115.903 160.36 115.233 161.09 114.632 cv
159.37 117.333 158.51 120.473 158.809 123.733 cv
159.1 126.922 160.469 129.783 162.579 132.083 cv
cp
0 0 0 0 cmyk
f
210.239 125.012 mo
209.022 138.196 196.489 148.137 181.084 148.137 cv
179.967 148.137 178.833 148.083 177.709 147.976 cv
161.086 146.398 148.631 133.525 149.944 119.281 cv
151.161 106.099 163.694 96.1597 179.096 96.1597 cv
180.215 96.1597 181.352 96.2134 182.475 96.3208 cv
199.098 97.897 211.553 110.768 210.239 125.012 cv
cp
182.569 95.3247 mo
181.415 95.2153 180.247 95.1597 179.096 95.1597 cv
163.174 95.1597 150.213 105.49 148.948 119.189 cv
147.584 133.981 160.444 147.341 177.616 148.972 cv
178.768 149.082 179.936 149.137 181.084 149.137 cv
197.008 149.137 209.971 138.805 211.235 125.104 cv
212.6 110.312 199.741 96.9526 182.569 95.3247 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
178.493 137.29 mo
177.834 137.352 177.167 137.384 176.51 137.384 cv
171.084 137.384 166.276 135.276 163.116 131.923 cv
163.114 131.912 163.116 131.901 163.112 131.889 cv
162.948 131.347 162.823 130.788 162.743 130.226 cv
161.559 122.049 169.495 114.086 180.43 112.476 cv
184.534 111.871 188.606 112.219 192.206 113.486 cv
192.219 113.491 192.235 113.488 192.249 113.492 cv
193.7 115.476 194.631 117.787 194.862 120.301 cv
195.641 128.738 188.297 136.359 178.493 137.29 cv
cp
175.672 106.697 mo
176.331 106.634 176.997 106.602 177.653 106.602 cv
183.09 106.602 187.909 108.718 191.067 112.083 cv
187.694 111.147 183.999 110.939 180.284 111.486 cv
168.852 113.17 160.565 121.58 161.745 130.263 cv
160.391 128.332 159.526 126.101 159.303 123.684 cv
158.524 115.248 165.868 107.627 175.672 106.697 cv
cp
177.653 105.602 mo
176.965 105.602 176.268 105.635 175.579 105.701 cv
165.225 106.683 157.477 114.792 158.307 123.776 cv
159.075 132.104 166.901 138.384 176.51 138.384 cv
177.198 138.384 177.897 138.351 178.586 138.286 cv
188.94 137.303 196.688 129.194 195.858 120.209 cv
195.09 111.882 187.264 105.602 177.653 105.602 cv
cp
f
138.791 138.239 mo
137.761 139.293 134.029 138.102 135.483 134.59 cv
136.939 131.079 140.771 131.62 141.541 132.114 cv
142.31 132.608 142.961 133.596 141.886 135.061 cv
143.207 136.311 142.9 138.272 141.998 138.997 cv
141.097 139.721 139.733 139.764 138.791 138.239 cv
cp
.205509 .264347 .342565 0 cmyk
f
136.841 134.026 mo
136.186 134.809 135.597 136.754 137.02 136.909 cv
138.443 137.061 139.787 135.895 139.708 134.573 cv
139.63 133.25 138.332 132.241 136.841 134.026 cv
cp
0 0 0 0 cmyk
f
140.492 135.67 mo
140.333 136.336 140.019 136.678 139.692 137.071 cv
139.365 137.461 140.166 138.237 140.824 137.573 cv
141.303 137.086 141.08 135.938 140.492 135.67 cv
cp
f
134.646 122.114 mo
132.283 121.204 129.95 123.52 130.97 125.561 cv
131.992 127.6 132.818 127.461 133.976 126.928 cv
135.144 129.17 138.396 127.268 138.377 125.118 cv
138.359 122.967 136.943 120.596 134.646 122.114 cv
cp
.205509 .264347 .342565 0 cmyk
f
134.039 123.12 mo
133.232 123.286 131.522 124.334 132.613 124.983 cv
133.703 125.631 135.025 125.184 135.669 124.51 cv
136.313 123.836 135.025 122.918 134.039 123.12 cv
cp
0 0 0 0 cmyk
f
136.007 125.399 mo
135.357 125.622 135.175 126.52 135.91 126.397 cv
136.644 126.274 137.078 125.032 136.007 125.399 cv
cp
f
123.916 124.684 mo
123.009 123.452 120.68 124.288 120.605 125.938 cv
120.529 127.588 121.804 128.516 122.846 128.159 cv
123.632 129.266 125.592 128.795 125.304 126.774 cv
126.469 126.358 126.478 125.256 125.996 124.581 cv
125.512 123.903 124.168 123.831 123.916 124.684 cv
cp
.205509 .264347 .342565 0 cmyk
f
121.583 125.762 mo
121.341 126.403 121.75 127.721 122.98 126.877 cv
123.096 127.61 123.894 127.25 123.958 126.762 cv
124.025 126.274 123.597 126.149 123.353 126.147 cv
123.3 125.229 122.021 124.606 121.583 125.762 cv
cp
0 0 0 0 cmyk
f
124.214 125.542 mo
124.113 125.901 124.88 126.221 125.007 125.731 cv
125.133 125.245 124.403 124.872 124.214 125.542 cv
cp
f
326.417 105.401 mo
327.426 105.912 328.366 106.491 329.236 107.141 cv
323.586 105.521 317.376 105.912 310.846 110.662 cv
303.327 116.122 303.256 128.731 312.417 135.731 cv
312.896 136.091 313.656 136.671 314.866 137.421 cv
313.376 137.071 311.896 136.542 310.457 135.811 cv
301.316 131.202 297.476 120.651 301.886 112.251 cv
306.296 103.851 317.276 100.781 326.417 105.401 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
337.606 100.351 mo
350.997 110.662 354.577 128.221 345.606 139.551 cv
336.636 150.901 318.516 151.731 305.126 141.412 cv
291.736 131.101 288.156 113.551 297.126 102.211 cv
306.096 90.8716 324.216 90.0308 337.606 100.351 cv
cp
314.886 137.431 mo
322.896 139.332 331.276 136.031 334.986 128.961 cv
338.906 121.491 336.296 112.321 329.236 107.141 cv
328.366 106.491 327.426 105.912 326.417 105.401 cv
317.276 100.781 306.296 103.851 301.886 112.251 cv
297.476 120.651 301.316 131.202 310.457 135.811 cv
311.896 136.542 313.376 137.071 314.866 137.421 cv
314.876 137.431 314.876 137.431 314.886 137.431 cv
cp
f
341.736 104.082 mo
351.646 114.521 353.566 129.491 345.606 139.551 cv
343.077 142.761 339.806 145.131 336.116 146.631 cv
338.066 144.211 339.216 141.912 339.787 140.461 cv
337.207 142.651 333.096 144.751 329.066 144.671 cv
333.016 142.171 336.876 137.301 337.266 134.771 cv
334.787 138.591 329.316 140.372 326.306 140.162 cv
329.356 137.891 331.086 135.571 331.836 133.122 cv
333.086 131.941 334.156 130.551 334.986 128.961 cv
337.997 123.221 337.156 116.461 333.386 111.301 cv
335.917 112.071 337.886 113.431 339.926 115.361 cv
339.006 111.332 336.016 107.301 333.856 106.101 cv
338.266 106.702 341.596 108.452 344.406 111.872 cv
343.806 109.131 342.726 106.122 341.736 104.082 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
339.787 140.461 mo
339.216 141.912 338.066 144.211 336.116 146.631 cv
329.646 149.301 321.876 149.321 314.526 146.611 cv
316.126 146.561 317.426 146.401 318.346 146.231 cv
315.046 145.491 310.827 143.702 308.287 140.981 cv
312.707 142.491 318.836 142.872 320.986 141.991 cv
316.526 142.061 311.676 139.211 309.886 137.122 cv
312.986 137.971 315.506 138.191 317.616 137.872 cv
322.926 138.372 328.156 136.651 331.836 133.122 cv
331.086 135.571 329.356 137.891 326.306 140.162 cv
329.316 140.372 334.787 138.591 337.266 134.771 cv
336.876 137.301 333.016 142.171 329.066 144.671 cv
333.096 144.751 337.207 142.651 339.787 140.461 cv
cp
.181369 .0870985 .113436 0 cmyk
f
326.417 105.401 mo
327.426 105.912 328.366 106.491 329.236 107.141 cv
325.827 106.162 322.207 105.921 318.436 106.931 cv
320.606 105.561 322.566 104.851 324.606 104.601 cv
325.216 104.832 325.827 105.101 326.417 105.401 cv
cp
f
324.606 104.601 mo
326.146 104.412 327.716 104.481 329.446 104.721 cv
326.256 101.881 321.176 100.141 318.846 100.141 cv
323.016 98.4712 326.577 97.8911 330.896 99.0513 cv
328.497 96.8716 325.386 94.7808 323.316 93.771 cv
328.256 94.7612 333.186 96.9517 337.606 100.351 cv
339.106 101.511 340.486 102.761 341.736 104.082 cv
342.726 106.122 343.806 109.131 344.406 111.872 cv
341.596 108.452 338.266 106.702 333.856 106.101 cv
336.016 107.301 339.006 111.332 339.926 115.361 cv
337.886 113.431 335.917 112.071 333.386 111.301 cv
332.256 109.741 330.866 108.341 329.236 107.141 cv
328.366 106.491 327.426 105.912 326.417 105.401 cv
325.827 105.101 325.216 104.832 324.606 104.601 cv
cp
f
317.08 93.6265 mo
309.118 93.6265 301.988 96.8667 297.519 102.517 cv
293.733 107.303 292.087 113.5 292.884 119.967 cv
293.87 127.962 298.443 135.636 305.431 141.019 cv
311.389 145.61 318.571 148.137 325.653 148.137 cv
333.616 148.137 340.746 144.897 345.213 139.246 cv
349 134.46 350.645 128.263 349.848 121.796 cv
348.863 113.801 344.29 106.128 337.301 100.747 cv
331.343 96.1548 324.163 93.6265 317.08 93.6265 cv
cp
325.653 149.137 mo
318.351 149.137 310.954 146.536 304.822 141.812 cv
297.622 136.266 292.91 128.349 291.891 120.09 cv
291.061 113.356 292.782 106.894 296.734 101.896 cv
301.394 96.0054 308.81 92.6265 317.08 92.6265 cv
324.381 92.6265 331.78 95.229 337.912 99.9536 cv
345.11 105.499 349.823 113.416 350.841 121.674 cv
351.671 128.409 349.951 134.87 345.999 139.867 cv
341.339 145.758 333.923 149.137 325.653 149.137 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
317.476 103.752 mo
310.959 103.752 305.156 107.099 302.329 112.485 cv
300.374 116.21 300.025 120.535 301.346 124.66 cv
302.803 129.208 306.205 133.11 310.678 135.368 cv
313.391 136.738 316.405 137.462 319.392 137.462 cv
325.909 137.462 331.712 134.117 334.541 128.732 cv
336.495 125.008 336.844 120.686 335.524 116.563 cv
334.067 112.013 330.665 108.108 326.189 105.847 cv
323.476 104.477 320.463 103.752 317.476 103.752 cv
cp
319.392 138.462 mo
316.249 138.462 313.08 137.701 310.227 136.26 cv
305.516 133.883 301.932 129.766 300.394 124.965 cv
298.99 120.583 299.363 115.985 301.444 112.02 cv
304.444 106.304 310.587 102.752 317.476 102.752 cv
320.619 102.752 323.788 103.514 326.64 104.955 cv
331.353 107.335 334.938 111.455 336.476 116.257 cv
337.878 120.638 337.505 125.234 335.425 129.197 cv
332.424 134.912 326.281 138.462 319.392 138.462 cv
cp
f
315.138 138.095 mo
315.049 138.095 314.96 138.072 314.879 138.023 cv
313.489 137.18 312.629 136.524 312.117 136.132 cv
307.436 132.554 304.795 127.328 304.862 121.787 cv
304.919 117.042 306.994 112.838 310.552 110.252 cv
316.52 105.918 322.679 104.742 329.375 106.664 cv
329.64 106.74 329.793 107.016 329.717 107.282 cv
329.642 107.546 329.366 107.703 329.099 107.625 cv
322.716 105.796 316.842 106.919 311.14 111.061 cv
307.839 113.459 305.916 117.374 305.862 121.798 cv
305.799 127.021 308.297 131.954 312.715 135.331 cv
313.221 135.717 314.053 136.353 315.397 137.167 cv
315.633 137.311 315.708 137.618 315.566 137.854 cv
315.472 138.009 315.307 138.095 315.138 138.095 cv
cp
f
333.745 64.688 mo
338.267 67.4761 345.987 73.8706 344.543 78.1216 cv
342.938 82.856 333.275 78.2583 327.952 75.2671 cv
328.03 74.8237 328.152 74.3354 328.308 73.8208 cv
329.005 71.6118 330.434 68.8823 332.173 66.564 cv
332.672 65.8921 333.198 65.2642 333.745 64.688 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
321.371 69.4331 mo
320.051 70.2817 317.903 71.0757 314.122 72.1128 cv
314.074 72.0854 314.025 72.0688 313.98 72.0327 cv
312.697 71.2739 311.03 68.147 310.489 66.0806 cv
310.403 65.7368 310.342 65.4165 310.316 65.1509 cv
313.702 62.9634 318.853 60.9937 320.882 60.6685 cv
323.631 60.2251 329.228 64.3813 332.043 66.4771 cv
332.173 66.564 li
330.434 68.8823 329.005 71.6118 328.308 73.8208 cv
328.124 73.7661 li
326.115 72.4507 323.069 70.5776 321.371 69.4331 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
312.228 79.0083 mo
311.142 79.7642 309.889 80.5718 308.744 79.3765 cv
308.618 79.2495 308.506 79.104 308.385 78.937 cv
307.132 77.144 305.013 74.1079 306.376 73.2153 cv
306.619 73.064 306.871 72.9868 307.135 72.9702 cv
307.132 72.8384 li
307.667 71.978 306.693 69.8179 305.008 69.1978 cv
304.846 68.6431 304.126 67.7349 303.067 67.4272 cv
303.084 67.3696 li
305.638 65.4683 308.787 65.2075 310.447 66.0942 cv
310.489 66.0806 li
311.03 68.147 312.697 71.2739 313.98 72.0327 cv
313.952 72.1704 li
314.473 75.2622 313.423 78.1821 312.228 79.0083 cv
cp
.0797436 .400244 .584497 0 cmyk
f
308.385 78.937 mo
308.506 79.104 308.618 79.2495 308.744 79.3765 cv
308.657 79.5679 li
306.795 81.1118 305.225 81.8081 303.951 81.5239 cv
302.862 81.2837 301.665 79.9302 301.9 78.4888 cv
300.381 78.2134 296.037 72.9575 299.081 69.2661 cv
300.599 67.4126 302.007 67.1196 303.067 67.4272 cv
304.126 67.7349 304.846 68.6431 305.008 69.1978 cv
306.693 69.8179 307.667 71.978 307.132 72.8384 cv
307.135 72.9702 li
306.871 72.9868 306.619 73.064 306.376 73.2153 cv
305.013 74.1079 307.132 77.144 308.385 78.937 cv
cp
f
344.07 77.9624 mo
343.599 79.3452 342.267 79.8784 339.998 79.5864 cv
336.368 79.1206 331.368 76.5942 328.515 75.0073 cv
329.11 72.1763 331.359 68.0815 333.832 65.3354 cv
338.911 68.5522 345.266 74.436 344.07 77.9624 cv
cp
325.293 71.3628 mo
324.199 70.6704 323.121 69.9868 322.247 69.4146 cv
323.352 68.52 323.812 67.4995 324.352 66.0483 cv
324.45 65.7905 324.318 65.5005 324.058 65.4048 cv
323.801 65.3101 323.512 65.4409 323.415 65.6997 cv
322.883 67.1284 322.516 68.0845 321.11 68.9966 cv
321.094 69.0054 321.08 69.0142 321.065 69.0239 cv
319.829 69.811 317.807 70.5698 314.184 71.5737 cv
312.949 70.7935 311.163 67.2866 310.847 65.4038 cv
314.248 63.2769 319.136 61.4526 320.963 61.1587 cv
323.416 60.7671 328.733 64.6431 331.48 66.6772 cv
329.995 68.7251 328.751 71.0493 328.032 73.1118 cv
327.207 72.5767 326.252 71.9722 325.293 71.3628 cv
cp
311.945 78.5972 mo
311.191 79.1196 310.44 79.5786 309.833 79.4653 cv
309.465 79.3979 309.124 79.1323 308.753 78.5972 cv
307.878 77.3364 306.249 74.9868 306.451 73.9448 cv
306.478 73.8032 306.539 73.7085 306.649 73.6362 cv
306.92 73.4595 307.229 73.4272 307.583 73.5347 cv
308.498 73.8149 309.513 74.9585 310.111 76.3813 cv
310.217 76.6353 310.51 76.7544 310.764 76.6479 cv
311.02 76.5415 311.14 76.2485 311.034 75.9937 cv
310.315 74.2876 309.078 72.9468 307.876 72.5786 cv
307.83 72.5659 307.788 72.562 307.745 72.5522 cv
307.803 72.1792 307.761 71.7495 307.599 71.2817 cv
307.311 70.4507 306.567 69.3394 305.398 68.8159 cv
305.181 68.3325 304.712 67.7485 304.054 67.3354 cv
306.241 66.0015 308.715 65.8286 310.088 66.4858 cv
310.687 68.479 312.129 71.2349 313.456 72.2681 cv
313.97 75.314 312.89 77.9419 311.945 78.5972 cv
cp
304.063 81.0366 mo
303.264 80.8608 302.192 79.7905 302.396 78.5757 cv
302.442 78.3062 302.261 78.0503 301.992 78.0015 cv
301.372 77.8892 299.681 76.3091 298.898 74.1733 cv
298.447 72.9409 298.177 71.144 299.464 69.5776 cv
300.564 68.2427 301.708 67.6558 302.752 67.8647 cv
303.75 68.0698 304.411 68.939 304.528 69.3364 cv
304.573 69.4888 304.685 69.6108 304.835 69.6665 cv
305.741 69.9985 306.402 70.8813 306.656 71.6108 cv
306.816 72.0728 306.793 72.3911 306.722 72.5415 cv
306.506 72.5952 306.294 72.6733 306.101 72.8003 cv
305.765 73.02 305.546 73.3501 305.469 73.7534 cv
305.208 75.0991 306.485 77.0835 307.97 79.2222 cv
308.009 79.2808 308.052 79.3237 308.094 79.3765 cv
306.442 80.6987 305.086 81.2788 304.063 81.0366 cv
cp
334.006 64.2651 mo
333.804 64.1431 333.542 64.1763 333.38 64.3481 cv
332.937 64.8198 332.505 65.3403 332.084 65.8794 cv
329.045 63.6284 323.676 59.7104 320.805 60.1714 cv
318.798 60.4937 313.607 62.4292 310.04 64.731 cv
309.884 64.8325 309.796 65.0103 309.812 65.1948 cv
309.817 65.2358 309.826 65.2847 309.831 65.3276 cv
308.021 64.8218 305.296 65.1685 302.925 66.8813 cv
301.918 66.6782 300.383 66.8892 298.694 68.9438 cv
297.105 70.8735 297.417 73.0415 297.959 74.5171 cv
298.704 76.5454 300.247 78.2983 301.371 78.8335 cv
301.351 80.3638 302.579 81.7339 303.846 82.0122 cv
303.937 82.0317 304.029 82.0493 304.122 82.061 cv
305.432 82.229 306.972 81.5747 308.81 80.0864 cv
309.076 80.27 309.358 80.396 309.657 80.4497 cv
309.692 80.4565 309.729 80.4614 309.763 80.4653 cv
310.813 80.6011 311.793 79.9204 312.514 79.4194 cv
313.819 78.5161 314.887 75.6685 314.489 72.5259 cv
317.908 71.5767 320.003 70.8257 321.361 70.0269 cv
322.29 70.6421 323.512 71.4185 324.757 72.2085 cv
325.802 72.8696 326.844 73.5308 327.716 74.0981 cv
327.613 74.4741 327.52 74.8413 327.462 75.1851 cv
327.427 75.3931 327.527 75.6001 327.71 75.7046 cv
331.195 77.6626 336.131 80.0991 339.871 80.5786 cv
343.33 81.022 344.577 79.5757 345.017 78.2837 cv
346.68 73.3745 337.632 66.5005 334.006 64.2651 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
328.897 103.857 mo
335.047 107.617 li
333.097 111.457 327.448 116.937 318.837 113.477 cv
318.877 113.367 li
322.757 113.037 326.677 108.617 328.837 103.957 cv
328.897 103.857 li
cp
.498634 .76672 .682032 .673518 cmyk
f
315.837 111.707 mo
319.877 111.367 324.047 105.037 325.547 101.867 cv
325.578 101.827 li
328.897 103.857 li
328.837 103.957 li
326.677 108.617 322.757 113.037 318.877 113.367 cv
318.837 113.477 li
318.038 113.157 317.217 112.767 316.377 112.287 cv
316.158 112.157 315.937 112.027 315.727 111.886 cv
315.837 111.707 li
cp
f
312.717 93.9565 mo
325.578 101.827 li
325.547 101.867 li
324.047 105.037 319.877 111.367 315.837 111.707 cv
315.727 111.886 li
310.458 108.556 307.917 102.437 312.717 93.9565 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
324.143 114.071 mo
322.965 114.071 321.753 113.887 320.515 113.526 cv
324.013 112.339 327.214 108.427 329.096 104.564 cv
334.383 107.799 li
332.706 110.782 329.121 114.071 324.143 114.071 cv
cp
312.899 94.6519 mo
324.921 102.009 li
323.16 105.556 319.302 110.916 315.798 111.205 cv
315.747 111.208 315.702 111.227 315.656 111.246 cv
310.155 107.574 309.145 101.607 312.899 94.6519 cv
cp
318.755 112.896 mo
318.142 112.638 317.524 112.337 316.901 111.997 cv
320.829 110.846 324.403 105.246 325.778 102.533 cv
328.241 104.041 li
326.209 108.254 322.572 112.551 318.838 112.872 cv
318.808 112.875 318.784 112.888 318.755 112.896 cv
cp
335.308 107.193 mo
312.975 93.5259 li
312.859 93.4565 312.719 93.4341 312.589 93.4683 cv
312.458 93.5024 312.346 93.5884 312.279 93.7065 cv
307.763 101.685 309.205 108.792 316.135 112.72 cv
318.887 114.281 321.582 115.071 324.143 115.071 cv
329.8 115.071 333.793 111.179 335.493 107.847 cv
335.612 107.614 335.531 107.33 335.308 107.193 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
351.859 77.5688 mo
350.66 77.7788 349.255 77.686 348.06 77.5698 cv
348.92 76.4878 351.327 73.6245 352.938 71.5278 cv
353.121 71.6743 li
353.721 72.0552 355.344 74.2241 354.357 76.0669 cv
353.893 76.9438 352.965 77.3813 351.859 77.5688 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
343.728 69.396 mo
343.598 69.4683 li
340.945 65.0854 338.489 61.9087 336.632 60.6841 cv
336.521 60.604 336.404 60.5444 336.3 60.4771 cv
336.319 60.4517 li
339.4 60.2944 343.193 63.5405 346.309 66.0425 cv
346.483 66.186 li
345.687 67.1733 344.866 68.1743 343.728 69.396 cv
cp
.826932 .410346 .420874 .105837 cmyk
f
336.632 60.6841 mo
338.489 61.9087 340.945 65.0854 343.598 69.4683 cv
345.053 71.856 346.559 74.5981 348.06 77.5698 cv
343.12 72.5874 339.849 68.7573 335.77 66.8921 cv
335.659 67.1294 li
333.9 67.7515 331.708 69.3472 329.284 71.603 cv
329.182 71.4946 li
327.918 69.7622 327.925 66.5991 330.537 64.7017 cv
329.765 61.2788 332.772 58.4487 336.3 60.4771 cv
336.404 60.5444 336.521 60.604 336.632 60.6841 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
351.865 77.5815 mo
350.709 82.6265 341.482 101.215 336.271 109.445 cv
331.349 109.807 314.725 101.197 309.877 95.2134 cv
315.813 86.7739 323.273 77.1899 329.284 71.603 cv
331.708 69.3472 333.9 67.7515 335.659 67.1294 cv
335.77 66.8921 li
339.849 68.7573 343.12 72.5874 348.06 77.5698 cv
349.255 77.686 350.66 77.7788 351.859 77.5688 cv
351.865 77.5815 li
cp
.74789 .241123 .31931 .00552377 cmyk
f
347.452 88.4321 mo
346.295 90.9019 344.996 93.5454 343.665 96.1577 cv
336.095 94.7661 324.954 87.2583 320.399 81.2876 cv
322.3 78.9839 324.191 76.812 325.998 74.8862 cv
330.26 79.2192 340.58 87.0942 347.452 88.4321 cv
cp
0 0 0 0 cmyk
f
354.425 69.3901 mo
354.242 69.7817 353.669 70.5718 352.938 71.5278 cv
351.327 73.6245 348.92 76.4878 348.06 77.5698 cv
346.559 74.5981 345.053 71.856 343.598 69.4683 cv
343.728 69.396 li
344.866 68.1743 345.687 67.1733 346.483 66.186 cv
347.002 65.5474 347.517 64.9292 348.087 64.2671 cv
350.499 66.1313 352.04 67.0386 354.425 69.3901 cv
cp
.0797436 .400244 .584497 0 cmyk
f
353.919 75.8325 mo
353.217 77.1528 351.085 77.2847 349.047 77.1528 cv
349.248 76.9077 349.472 76.6333 349.715 76.3364 cv
350.934 74.8472 352.101 73.4155 353.024 72.2339 cv
353.583 72.7778 354.657 74.4478 353.919 75.8325 cv
cp
335.991 108.958 mo
331.138 109 315.501 100.975 310.509 95.187 cv
314.914 88.9458 328.656 70.1245 335.827 67.5981 cv
335.872 67.5815 335.909 67.5542 335.946 67.5259 cv
339.069 69.0757 341.761 71.8306 345.331 75.4985 cv
346.083 76.272 346.872 77.0825 347.708 77.9253 cv
347.711 77.9292 347.717 77.9302 347.72 77.9341 cv
347.732 77.9458 347.749 77.9526 347.762 77.9634 cv
347.799 77.9917 347.838 78.0171 347.882 78.0337 cv
347.889 78.0366 347.896 78.0444 347.905 78.0474 cv
347.94 78.0591 347.977 78.0679 348.015 78.0708 cv
349.083 78.1753 350.181 78.2368 351.189 78.1558 cv
349.476 84.0132 340.818 101.267 335.991 108.958 cv
cp
328.904 68.2251 mo
329.023 67.355 329.455 66.1069 330.833 65.1089 cv
330.996 64.9907 331.072 64.7876 331.029 64.5923 cv
330.679 63.0659 331.172 61.5806 332.284 60.8101 cv
333.41 60.0298 334.896 60.1372 336.362 61.103 cv
338.696 62.6401 342.246 67.6802 346.073 74.8267 cv
346.063 74.8179 346.055 74.8101 346.047 74.8003 cv
341.184 69.8052 337.673 66.1929 332.358 65.3208 cv
332.086 65.2759 331.829 65.4604 331.784 65.7329 cv
331.739 66.0044 331.917 66.2661 332.196 66.3071 cv
333.082 66.4526 333.912 66.6831 334.707 66.9829 cv
333.127 67.728 331.31 69.0972 329.382 70.8481 cv
328.964 70.0933 328.777 69.1509 328.904 68.2251 cv
cp
345.334 65.8999 mo
345.781 66.2593 li
345.167 67.0063 344.51 67.7925 343.708 68.6792 cv
341.604 65.269 339.682 62.7114 338.082 61.2124 cv
340.428 61.9536 343.098 64.0991 345.334 65.8999 cv
cp
346.845 66.5376 mo
347.276 66.0093 347.7 65.4897 348.161 64.9517 cv
348.684 65.3511 349.167 65.7075 349.63 66.0493 cv
351.023 67.0776 352.236 67.9731 353.804 69.4839 cv
353.032 70.7095 350.506 73.7915 348.941 75.7026 cv
348.649 76.0601 348.385 76.3813 348.158 76.6616 cv
346.815 74.0376 345.502 71.6587 344.25 69.5708 cv
345.296 68.4292 346.086 67.4663 346.845 66.5376 cv
cp
353.635 71.4409 mo
354.258 70.6177 354.705 69.9761 354.88 69.6118 cv
354.972 69.4185 354.932 69.189 354.78 69.0386 cv
353.025 67.313 351.727 66.355 350.225 65.2446 cv
349.657 64.8267 349.062 64.3853 348.398 63.8716 cv
348.188 63.7114 347.89 63.7388 347.715 63.939 cv
347.251 64.4702 346.832 64.9771 346.416 65.4858 cv
345.961 65.1216 li
342.886 62.644 339.402 59.8413 336.36 59.9487 cv
334.724 59.0825 333.023 59.0815 331.715 59.9888 cv
330.345 60.938 329.688 62.6802 329.99 64.4946 cv
327.544 66.4585 327.37 69.5679 328.621 71.5522 cv
321.258 78.5132 312.583 90.4985 309.469 94.9253 cv
309.34 95.1089 309.349 95.355 309.49 95.5278 cv
313.417 100.372 324.509 106.633 331.549 108.997 cv
333.548 109.668 335.221 110.025 336.31 109.946 cv
336.467 109.933 336.612 109.849 336.696 109.714 cv
341.638 101.912 350.816 83.5737 352.27 77.9985 cv
353.379 77.7563 354.296 77.2524 354.802 76.3022 cv
355.841 74.3491 354.458 72.1909 353.635 71.4409 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
387.426 49.2505 mo
385.536 55.8218 382.473 65.2437 378.754 69.229 cv
373.97 74.3657 366.741 75.7417 361.985 75.0757 cv
357.356 74.4321 342.659 70.48 335.213 57.9976 cv
332.343 59.3599 326.758 57.228 324.939 51.7075 cv
324.172 49.3794 324.369 47.3423 325.117 45.7476 cv
326.122 43.6206 328.097 42.2622 330.068 42.0317 cv
333.531 41.6265 336.266 44.312 337.072 49.3589 cv
340.238 47.5308 344.039 45.2661 346.657 41.0171 cv
346.651 40.9849 li
351.582 40.3218 357.821 40.9839 364.019 38.3716 cv
364.061 38.4194 li
362.417 39.9771 360.825 42.0933 359.872 44.6167 cv
363.675 43.4888 378.348 46.5435 386.284 37.6978 cv
386.338 37.7378 li
388.018 39.73 388.851 42.2017 388.859 44.061 cv
388.514 45.3208 388.033 47.1343 387.426 49.2505 cv
cp
0 .167361 .439734 0 cmyk
f
390.978 30.605 mo
395.705 37.6528 391.487 46.4341 387.678 49.3159 cv
387.426 49.2505 li
388.033 47.1343 388.514 45.3208 388.859 44.061 cv
388.851 42.2017 388.018 39.73 386.338 37.7378 cv
386.284 37.6978 li
378.348 46.5435 363.675 43.4888 359.872 44.6167 cv
360.825 42.0933 362.417 39.9771 364.061 38.4194 cv
364.019 38.3716 li
357.821 40.9839 351.582 40.3218 346.651 40.9849 cv
346.657 41.0171 li
344.039 45.2661 340.238 47.5308 337.072 49.3589 cv
336.266 44.312 333.531 41.6265 330.068 42.0317 cv
328.097 42.2622 326.122 43.6206 325.117 45.7476 cv
324.79 45.5894 li
322.588 43.6782 319.668 39.1011 319.053 34.9312 cv
321.278 34.8159 323.507 33.6851 326.714 33.2358 cv
323.752 30.3374 321.279 24.9556 320.305 21.0981 cv
323.838 21.2134 328.228 18.4341 335.902 18.1011 cv
332.381 15.9575 330.057 12.8364 328.92 8.74658 cv
332.397 9.18701 338.125 7.61768 344.591 9.13428 cv
342.567 7.42627 340.767 3.93115 340.969 .879395 cv
344.045 2.60986 364.632 4.88916 376.522 11.8091 cv
386.837 17.8003 392.404 25.3931 390.978 30.605 cv
cp
.373144 .782101 .665248 .350225 cmyk
f
385.335 20.5005 mo
387.735 23.1382 388.791 25.4966 389.181 27.3735 cv
383.568 32.0796 363.263 22.7319 352.904 19.5757 cv
344.281 16.938 338.031 15.8159 333.893 16.6499 cv
333.023 15.938 332.253 15.1226 331.586 14.2437 cv
345.14 8.26611 371.846 20.5903 379.248 21.3979 cv
382.575 21.7612 384.427 21.3364 385.335 20.5005 cv
cp
.341833 .684718 .553277 .151247 cmyk
f
390.978 30.605 mo
391.405 29.0444 391.208 27.2837 390.443 25.4028 cv
389.624 23.3687 388.125 21.2065 386.046 19.062 cv
383.635 16.5562 380.417 14.0698 376.522 11.8091 cv
364.632 4.88916 344.045 2.60986 340.969 .879395 cv
340.962 1.02979 340.958 1.17236 340.962 1.32471 cv
352.518 6.04248 367.175 6.64795 380.339 16.1274 cv
382.448 17.646 384.078 19.1118 385.335 20.5005 cv
387.735 23.1382 388.791 25.4966 389.181 27.3735 cv
389.522 29.0073 389.369 30.2808 389.167 31.0767 cv
391.875 34.3169 393.217 40.5337 388.382 48.7192 cv
391.969 45.3608 395.417 37.2153 390.978 30.605 cv
cp
0 0 0 0 cmyk
f
329.324 47.229 mo
327.336 48.2183 327.137 51.4595 329.73 53.563 cv
331.729 55.1851 334.034 54.6909 333.94 51.7671 cv
333.824 48.1079 331.458 46.1675 329.324 47.229 cv
cp
.0797436 .400244 .584497 0 cmyk
f
387.426 49.2505 mo
385.536 55.8218 382.473 65.2437 378.754 69.229 cv
373.97 74.3657 366.741 75.7417 361.985 75.0757 cv
361.401 74.9927 360.652 74.8608 359.784 74.6567 cv
365.206 74.77 371.396 73.5874 377.026 68.9546 cv
381.115 65.5728 384.08 56.4194 388.07 40.5815 cv
388.597 41.8013 388.859 43.0249 388.859 44.061 cv
388.514 45.3208 388.033 47.1343 387.426 49.2505 cv
cp
0 0 0 0 cmyk
f
359.872 44.6167 mo
363.675 43.4888 378.348 46.5435 386.284 37.6978 cv
386.338 37.7378 li
386.405 37.8198 386.472 37.9028 386.537 37.9956 cv
380.618 49.7358 363.771 46.3394 356.313 47.7563 cv
356.679 46.1353 357.441 44.2378 358.396 43.1372 cv
354.174 44.5054 348.23 43.2036 344.61 45.022 cv
344.992 44.0024 345.28 43.1802 345.724 42.3853 cv
346.043 41.9536 346.357 41.5015 346.657 41.0171 cv
346.649 40.9946 li
346.649 40.9946 346.649 40.9946 346.662 40.9868 cv
351.591 40.3228 357.821 40.9839 364.019 38.3716 cv
364.061 38.4194 li
362.417 39.9771 360.825 42.0933 359.872 44.6167 cv
cp
.0797436 .400244 .584497 0 cmyk
f
346.662 40.9868 mo
346.649 40.9946 346.649 40.9946 346.649 40.9946 cv
346.651 40.9849 li
346.662 40.9868 li
cp
f
389.362 44.0591 mo
389.351 41.978 388.425 39.5737 386.94 37.6958 cv
387.296 37.2778 387.644 36.8442 387.971 36.3755 cv
388.127 36.1489 388.073 35.8374 387.846 35.6792 cv
387.617 35.52 387.307 35.5776 387.149 35.8042 cv
381.634 43.7192 371.493 43.77 364.782 43.8022 cv
363.128 43.8101 361.732 43.8169 360.686 43.9497 cv
362.331 40.3306 365.428 37.4614 367.814 36.4146 cv
368.068 36.3042 368.182 36.0083 368.071 35.7563 cv
367.96 35.5024 367.666 35.3882 367.413 35.4995 cv
366.339 35.9692 365.112 36.7964 363.915 37.8892 cv
363.884 37.896 363.85 37.895 363.82 37.9077 cv
359.544 39.7183 355.176 39.9351 351.323 40.1255 cv
348.921 40.2437 346.638 40.356 344.623 40.8374 cv
346.049 36.4126 350.705 31.8501 354.494 31.3354 cv
354.768 31.2974 354.959 31.0454 354.922 30.772 cv
354.884 30.4985 354.635 30.3081 354.359 30.3433 cv
349.907 30.9487 344.59 36.3413 343.418 41.439 cv
343.38 41.6128 343.435 41.7954 343.567 41.9165 cv
343.638 41.9829 343.727 42.0269 343.82 42.0425 cv
343.897 42.0562 343.977 42.0513 344.054 42.0288 cv
344.55 41.8755 345.076 41.7554 345.618 41.6538 cv
343.217 45.0503 340.006 47.0767 337.438 48.5688 cv
336.466 43.7837 333.662 41.103 330.013 41.5337 cv
328.075 41.7612 326.248 42.9478 325.125 44.7075 cv
325.058 44.813 325.004 44.9253 324.943 45.0347 cv
322.848 43.1157 320.354 39.0581 319.639 35.3774 cv
320.65 35.2563 321.673 34.9634 322.746 34.6567 cv
323.922 34.3208 325.255 33.9399 326.785 33.7261 cv
326.974 33.6997 327.13 33.5679 327.191 33.3872 cv
327.25 33.2056 327.201 33.0063 327.064 32.8726 cv
324.364 30.2339 322.011 25.3325 320.957 21.5923 cv
322.402 21.5103 323.979 21.0464 325.769 20.519 cv
328.393 19.7456 331.66 18.7837 335.921 18.5962 cv
336.142 18.5864 336.33 18.4341 336.384 18.2222 cv
336.439 18.0083 336.348 17.7837 336.161 17.6694 cv
332.975 15.7271 330.774 12.9146 329.609 9.3042 cv
330.788 9.36768 332.148 9.271 333.68 9.16357 cv
336.712 8.94971 340.482 8.68701 344.473 9.62158 cv
344.688 9.67529 344.93 9.56689 345.036 9.35986 cv
345.139 9.15381 345.087 8.90283 344.911 8.75244 cv
343.217 7.32275 341.568 4.37549 341.458 1.64014 cv
342.858 2.15186 345.408 2.70068 348.715 3.4126 cv
356.547 5.09912 368.383 7.646 376.275 12.2378 cv
386.035 17.9146 391.884 25.4116 390.5 30.4692 cv
390.461 30.6089 390.486 30.7583 390.567 30.8784 cv
394.749 37.1235 391.55 44.8228 388.266 48.1206 cv
388.571 47.0347 388.84 46.0464 389.063 45.2271 cv
389.345 44.1948 li
389.357 44.1499 389.363 44.105 389.362 44.0591 cv
cp
378.389 68.8892 mo
373.852 73.7612 366.917 75.2573 362.054 74.5786 cv
355.874 73.7095 342.407 69.0864 335.639 57.7417 cv
335.507 57.521 335.229 57.4351 334.996 57.5464 cv
333.85 58.0903 332.191 57.9976 330.557 57.2954 cv
328.151 56.2642 326.278 54.1694 325.414 51.5464 cv
324.653 49.2349 324.85 46.9966 325.968 45.2456 cv
326.931 43.7368 328.487 42.7192 330.129 42.5269 cv
333.374 42.1489 335.842 44.7935 336.579 49.436 cv
336.605 49.5981 336.708 49.7378 336.858 49.8081 cv
337.004 49.8794 337.179 49.8726 337.323 49.7905 cv
340.237 48.1108 344.209 45.8081 346.963 41.4565 cv
348.351 41.2856 349.831 41.1997 351.372 41.1235 cv
354.76 40.9565 358.539 40.7642 362.356 39.5161 cv
361.171 40.9097 360.109 42.564 359.399 44.4419 cv
359.331 44.6196 359.371 44.8198 359.5 44.9595 cv
359.576 45.0405 359.673 45.0923 359.78 45.1108 cv
359.855 45.1245 359.933 45.1196 360.009 45.0981 cv
360.938 44.8218 362.722 44.813 364.787 44.8022 cv
370.692 44.7729 380.198 44.7046 386.247 38.436 cv
387.755 40.397 388.337 42.5522 388.361 43.9976 cv
388.097 44.9644 li
387.638 46.6538 386.993 49.021 386.2 51.6323 cv
386.021 51.0063 385.647 50.7173 385.333 50.603 cv
383.942 50.1108 381.667 51.7808 378.68 54.4556 cv
377.932 55.1265 377.501 55.2085 377.375 55.1519 cv
377.251 55.1001 377.107 54.7954 377.083 54.2495 cv
377.069 53.9175 376.79 53.6606 376.458 53.6763 cv
376.125 53.6909 375.871 53.9712 375.884 54.3022 cv
375.942 55.5864 376.473 56.0747 376.909 56.2573 cv
377.004 56.2983 377.105 56.3276 377.207 56.3462 cv
377.851 56.4595 378.615 56.1265 379.481 55.3501 cv
383.345 51.8892 384.56 51.5913 384.926 51.7319 cv
385.029 51.769 385.074 51.9741 385.09 52.0933 cv
385.139 52.4224 385.447 52.646 385.773 52.5991 cv
385.826 52.5923 385.872 52.5679 385.918 52.5474 cv
384.046 58.5728 381.419 65.6333 378.389 68.8892 cv
cp
391.521 30.5103 mo
392.835 24.9468 386.954 17.2925 376.778 11.3726 cv
368.748 6.70166 356.819 4.13428 348.925 2.43506 cv
345.148 1.62256 342.164 .97998 341.21 .444824 cv
341.062 .358887 340.878 .358887 340.727 .440918 cv
340.577 .523926 340.479 .677246 340.467 .848145 cv
340.29 3.55713 341.563 6.43018 343.115 8.33057 cv
339.583 7.74463 336.309 7.97607 333.609 8.1665 cv
331.792 8.29443 330.222 8.40479 328.981 8.24658 cv
328.816 8.2251 328.65 8.28857 328.541 8.41455 cv
328.431 8.54248 328.391 8.71436 328.436 8.87646 cv
329.466 12.5767 331.47 15.5356 334.402 17.6938 cv
330.734 18.0142 327.855 18.8628 325.487 19.5601 cv
323.419 20.1685 321.788 20.6489 320.324 20.6011 cv
320.167 20.5962 320.016 20.6646 319.918 20.7876 cv
319.821 20.9097 319.784 21.0708 319.823 21.2222 cv
320.715 24.7642 322.896 29.7534 325.701 32.8911 cv
324.499 33.1167 323.433 33.4204 322.47 33.6948 cv
321.205 34.0581 320.11 34.3706 319.029 34.4272 cv
318.887 34.4351 318.756 34.5005 318.667 34.6099 cv
318.579 34.7183 318.539 34.8599 318.559 34.9995 cv
319.182 39.1938 322.049 43.8667 324.462 45.9614 cv
324.472 45.9692 324.485 45.9692 324.494 45.9761 cv
323.804 47.7397 323.779 49.7769 324.463 51.8589 cv
325.417 54.7544 327.494 57.0708 330.163 58.2144 cv
331.871 58.9497 333.644 59.0913 335.003 58.6216 cv
342.994 71.6089 358.128 74.9097 361.335 75.4751 cv
361.651 75.5308 361.85 75.5601 361.917 75.5698 cv
367.036 76.2837 374.34 74.7056 379.121 69.5718 cv
382.822 65.5972 385.884 56.3638 387.787 49.7974 cv
387.856 49.7827 387.924 49.7563 387.984 49.7104 cv
391.856 46.7798 396.293 37.8999 391.521 30.5103 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
330.991 46.4771 mo
329.62 46.1606 328.357 46.7935 327.899 47.9321 cv
327.796 48.188 327.921 48.48 328.177 48.5825 cv
328.434 48.689 328.724 48.562 328.827 48.3042 cv
329.102 47.6216 329.92 47.2603 330.788 47.4556 cv
332.071 47.7222 333.541 49.1733 333.455 52.3901 cv
333.448 52.6421 333.627 52.854 333.867 52.896 cv
333.891 52.9009 333.917 52.9028 333.941 52.9038 cv
334.216 52.9116 334.447 52.6929 334.455 52.4175 cv
334.557 48.5835 332.653 46.8208 330.991 46.4771 cv
cp
f
361.478 50.3247 mo
363.247 53.4614 364.337 54.73 365.456 54.9272 cv
365.485 54.9321 365.515 54.937 365.545 54.9409 cv
366.501 55.061 367.238 54.3843 367.967 53.6196 cv
368.196 53.3804 368.188 53.0005 367.949 52.772 cv
367.708 52.5425 367.329 52.5522 367.1 52.7905 cv
366.501 53.4175 366.058 53.7964 365.694 53.7505 cv
365.685 53.7485 365.676 53.7476 365.667 53.7456 cv
364.686 53.5728 363.062 50.689 362.524 49.7358 cv
359.463 44.3052 354.823 44.0747 351.779 45.5317 cv
351.48 45.6743 351.353 46.0327 351.496 46.3315 cv
351.638 46.6313 351.997 46.7563 352.295 46.6147 cv
354.873 45.3843 358.824 45.6157 361.478 50.3247 cv
cp
f
363.945 54.9175 mo
363.152 57.4546 360.987 59.0356 359.11 58.4497 cv
357.232 57.8638 356.351 55.3315 357.143 52.7944 cv
357.934 50.2573 360.099 48.6753 361.977 49.2612 cv
363.057 51.73 363.188 51.9185 364.235 53.0464 cv
364.236 53.6489 364.142 54.2827 363.945 54.9175 cv
cp
f
361.482 53.0815 mo
360.915 54.0718 359.861 54.5356 359.127 54.1157 cv
358.394 53.6968 358.257 52.5522 358.825 51.561 cv
359.392 50.5708 360.446 50.1069 361.179 50.5269 cv
361.913 50.9448 362.049 52.0894 361.482 53.0815 cv
cp
0 0 0 0 cmyk
f
382.928 58.2427 mo
382.352 60.8374 380.628 62.6616 379.077 62.3188 cv
377.525 61.9751 376.733 59.5903 377.308 56.9966 cv
377.408 56.5435 377.543 56.1147 377.707 55.7163 cv
379.51 54.3843 379.417 54.4497 381.161 52.9204 cv
382.711 53.2642 383.503 55.647 382.928 58.2427 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
380.723 57.5278 mo
380.513 58.4702 379.795 59.1118 379.116 58.9624 cv
378.438 58.812 378.056 57.9243 378.264 56.9829 cv
378.474 56.0405 379.194 55.3989 379.872 55.5493 cv
380.55 55.6997 380.931 56.5864 380.723 57.5278 cv
cp
0 0 0 0 cmyk
f
325.128 44.7036 mo
325.059 44.813 325.008 44.9263 324.938 45.0356 cv
322.85 43.1138 320.356 39.0601 319.635 35.3784 cv
320.652 35.2534 321.677 34.9673 322.747 34.6577 cv
323.923 34.3169 325.258 33.9438 326.781 33.7241 cv
326.978 33.6987 327.132 33.5728 327.195 33.3911 cv
327.247 33.2075 327.201 33.0063 327.062 32.8706 cv
324.394 30.2671 322.083 25.4624 321.002 21.7485 cv
323.657 24.6646 327.589 27.4087 330.472 28.2222 cv
333.977 26.1392 336.634 25.9272 340.613 26.1616 cv
338.032 27.6157 336.406 29.8677 335.178 33.2046 cv
341.645 28.7798 349.002 29.2651 353.579 30.4888 cv
349.305 31.5728 344.515 36.6284 343.423 41.4409 cv
343.381 41.6167 343.431 41.7974 343.563 41.9136 cv
343.641 41.9878 343.726 42.0229 343.826 42.0405 cv
343.893 42.0532 343.976 42.0464 344.05 42.0288 cv
344.555 41.8755 345.074 41.7534 345.62 41.6558 cv
343.213 45.0493 340.003 47.0728 337.434 48.5688 cv
336.471 43.7798 333.663 41.1021 330.013 41.5337 cv
328.075 41.7612 326.25 42.9517 325.128 44.7036 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
369.865 62.5435 mo
370.83 61.6938 372.254 61.9497 371.834 62.8911 cv
371.415 63.8325 369.263 63.0728 369.865 62.5435 cv
cp
.0797436 .400244 .584497 0 cmyk
f
362.881 72.3267 mo
362.897 72.4116 li
361.823 72.563 360.539 72.3628 358.957 71.6616 cv
355.304 70.0308 353.905 67.7485 353.639 65.519 cv
353.794 65.4927 li
355.525 65.3257 361.616 67.0522 362.881 72.3267 cv
cp
0 .919585 .825986 0 cmyk
f
354.577 60.938 mo
355.377 64.3423 362.535 67.9429 367.879 67.856 cv
368.007 67.938 li
366.761 69.8843 365.412 72.0786 362.897 72.4116 cv
362.881 72.3267 li
361.616 67.0522 355.525 65.3257 353.794 65.4927 cv
353.639 65.519 li
353.434 63.8472 353.862 62.2153 354.459 60.8833 cv
354.577 60.938 li
cp
.433509 .775906 .674159 .526574 cmyk
f
355.435 59.0884 mo
356.241 62.4829 363.66 66.1167 369.596 65.7983 cv
369.036 66.3647 368.525 67.1313 368.007 67.938 cv
367.879 67.856 li
362.535 67.9429 355.377 64.3423 354.577 60.938 cv
354.459 60.8833 li
354.751 60.1812 355.11 59.5757 355.435 59.0884 cv
cp
0 0 0 0 cmyk
f
363.249 71.8218 mo
361.794 66.8774 356.253 65.0308 354.102 64.981 cv
354.052 63.9478 354.231 62.9556 354.512 62.0942 cv
355.431 63.7749 357.501 65.3325 359.956 66.4722 cv
362.259 67.5415 364.88 68.2397 367.16 68.3374 cv
366.132 69.9106 365.017 71.395 363.249 71.8218 cv
cp
359.162 71.2007 mo
358.941 71.1001 li
356.414 69.9263 354.855 68.3286 354.306 66.3521 cv
354.273 66.228 354.259 66.104 354.233 65.98 cv
356.174 66.0679 360.901 67.7017 362.245 71.9517 cv
361.374 71.9575 360.361 71.7339 359.162 71.2007 cv
cp
360.588 64.3901 mo
363.144 65.5767 365.969 66.2573 368.507 66.312 cv
368.267 66.6362 368.034 66.9907 367.798 67.3521 cv
362.664 67.3999 355.781 63.8794 355.06 60.8228 cv
355.056 60.8081 355.046 60.7974 355.042 60.7827 cv
355.143 60.5718 355.246 60.3735 355.342 60.1968 cv
356.173 61.6958 358.046 63.2095 360.588 64.3901 cv
cp
370.047 65.5894 mo
369.963 65.4019 369.771 65.2866 369.565 65.2964 cv
366.92 65.4409 363.801 64.7798 361.01 63.4829 cv
358.337 62.2417 356.451 60.605 355.99 59.1616 cv
356.2 59.229 356.41 59.3325 356.612 59.481 cv
356.838 59.6489 357.148 59.5972 357.311 59.3735 cv
357.475 59.1509 357.426 58.8374 357.205 58.6753 cv
355.905 57.728 354.307 57.9126 353.226 59.1421 cv
353.044 59.3491 353.065 59.6646 353.272 59.8472 cv
353.309 59.8794 353.349 59.9058 353.391 59.9253 cv
353.587 60.0161 353.827 59.9722 353.977 59.8013 cv
354.211 59.5347 354.474 59.3481 354.75 59.228 cv
353.956 60.5278 352.481 63.5122 353.343 66.6196 cv
353.973 68.8921 355.714 70.7046 358.52 72.0073 cv
358.755 72.1138 li
364.332 74.5952 366.558 71.1265 368.349 68.3384 cv
368.888 67.4995 369.398 66.7075 369.949 66.147 cv
370.093 65.9985 370.133 65.7778 370.047 65.5894 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
298.897 62.3657 mo
297.588 62.5649 296.353 62.6753 295.769 62.0698 cv
294.871 61.1548 294.171 59.9692 295.125 58.2896 cv
294.449 56.6138 294.972 51.2173 297.457 49.5815 cv
299.938 47.9556 305.499 49.0435 309.559 51.0698 cv
309.716 51.105 li
309.291 53.4233 309.449 56.897 309.775 57.8159 cv
309.505 58.0708 li
308.615 60.27 307.022 63.2632 304.894 63.9321 cv
302.768 64.6001 299.573 65.2886 299.117 62.855 cv
298.897 62.3657 li
cp
0 .167361 .439734 0 cmyk
f
318.832 58.2554 mo
317.031 58.5698 314.389 58.3726 309.775 57.8159 cv
309.449 56.897 309.291 53.4233 309.716 51.105 cv
309.756 50.8647 309.804 50.6372 309.863 50.4351 cv
313.827 49.6958 319.295 50.106 321.334 50.4243 cv
324.472 50.9009 329.771 58.5874 331.583 61.23 cv
331.665 61.3628 li
329.178 62.8481 326.815 64.8335 325.337 66.6167 cv
325.19 66.4907 li
323.824 64.5122 320.052 59.8667 318.84 58.2681 cv
318.832 58.2554 li
cp
.433509 .775906 .674159 .526574 cmyk
f
323.511 64.2231 mo
324.808 61.8052 327.085 59.4009 329.372 58.0894 cv
330.299 59.354 331.078 60.4917 331.583 61.23 cv
331.665 61.3628 li
329.178 62.8481 326.815 64.8335 325.337 66.6167 cv
325.19 66.4907 li
324.795 65.9214 324.197 65.1187 323.511 64.2231 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
324.464 67.8179 mo
324.703 67.4341 324.994 67.0269 325.337 66.6167 cv
326.815 64.8335 329.178 62.8481 331.665 61.3628 cv
332.384 60.937 333.111 60.5532 333.828 60.2212 cv
336.962 64.519 341.682 73.3511 338.736 76.7417 cv
335.455 80.5122 328.254 72.5972 324.464 67.8179 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
297.727 50.0024 mo
300.007 48.5044 305.288 49.5483 309.161 51.4409 cv
308.846 53.5757 308.932 56.439 309.217 57.6733 cv
309.143 57.728 309.08 57.7935 309.042 57.8833 cv
308.306 59.6919 306.766 62.8218 304.745 63.4536 cv
302.56 64.1392 301.042 64.2407 300.253 63.7642 cv
299.906 63.5571 299.697 63.2271 299.61 62.7583 cv
299.608 62.7563 299.607 62.7544 299.605 62.7524 cv
299.622 62.7495 299.639 62.7456 299.657 62.7437 cv
300.204 62.6509 300.75 62.5562 301.255 62.5093 cv
301.532 62.4829 301.731 62.2407 301.707 61.9644 cv
301.682 61.6909 301.435 61.4897 301.163 61.5132 cv
300.633 61.564 300.062 61.6597 299.489 61.7583 cv
298.15 61.9839 296.633 62.2388 296.124 61.7192 cv
295.074 60.6431 294.905 59.6919 295.555 58.5386 cv
295.631 58.4067 295.641 58.2466 295.584 58.106 cv
294.99 56.6226 295.488 51.4741 297.727 50.0024 cv
cp
321.261 50.9136 mo
323.179 51.2075 326.44 54.6733 330.964 61.2104 cv
328.821 62.5444 326.795 64.2231 325.351 65.853 cv
324.32 64.4077 322.452 62.0493 320.918 60.1138 cv
320.452 59.522 320.032 58.9937 319.69 58.5571 cv
320.809 58.2251 321.659 57.6362 322.506 56.7163 cv
322.695 56.5142 322.681 56.1968 322.478 56.0103 cv
322.273 55.8267 321.96 55.8364 321.772 56.0396 cv
319.863 58.1108 318.207 58.312 310.168 57.355 cv
309.917 56.144 309.828 52.8901 310.278 50.8696 cv
314.11 50.2271 319.294 50.6167 321.261 50.9136 cv
cp
333.667 60.8501 mo
337.15 65.7505 340.802 73.603 338.359 76.4126 cv
337.624 77.2593 336.618 77.4448 335.283 76.981 cv
331.886 75.8003 327.522 70.8364 325.083 67.7856 cv
326.706 65.3901 330.34 62.4536 333.667 60.8501 cv
cp
294.579 58.2476 mo
293.474 60.436 294.921 61.9194 295.406 62.4155 cv
296.103 63.1284 297.325 63.0923 298.627 62.9067 cv
298.627 62.9185 298.624 62.9312 298.625 62.9419 cv
298.764 63.6978 299.14 64.2622 299.736 64.6216 cv
300.807 65.2612 302.541 65.1929 305.043 64.4077 cv
307.312 63.6987 308.953 60.73 309.939 58.3354 cv
314.109 58.8335 316.722 59.0513 318.601 58.7876 cv
318.978 59.2749 319.515 59.9517 320.136 60.7358 cv
321.656 62.6538 323.71 65.2485 324.685 66.644 cv
324.45 66.9517 324.224 67.2573 324.042 67.5522 cv
323.931 67.7329 323.945 67.9604 324.076 68.1265 cv
327.075 71.9146 331.399 76.689 334.954 77.9243 cv
337.121 78.6792 338.414 77.8735 339.113 77.0698 cv
342.514 73.1567 336.745 63.3677 334.235 59.9253 cv
334.173 59.8413 334.088 59.7817 333.995 59.7485 cv
333.877 59.7085 333.744 59.7104 333.623 59.7661 cv
333.028 60.0356 332.428 60.3589 331.829 60.6997 cv
328.922 56.4917 324.897 51.0864 321.969 50.0669 cv
321.779 50.0005 321.592 49.9507 321.412 49.9253 cv
319.76 49.6743 314.081 49.1392 309.778 49.9409 cv
309.589 49.978 309.436 50.1167 309.387 50.3032 cv
309.375 50.3442 309.368 50.3901 309.356 50.4331 cv
308.622 50.0864 307.851 49.7612 307.046 49.481 cv
303.41 48.2163 299.326 47.7563 297.178 49.1675 cv
294.481 50.938 293.99 56.27 294.579 58.2476 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
313.917 105.401 mo
314.926 105.912 315.866 106.491 316.736 107.141 cv
311.086 105.521 304.876 105.912 298.346 110.662 cv
290.827 116.122 290.756 128.731 299.917 135.731 cv
300.396 136.091 301.156 136.671 302.366 137.421 cv
300.876 137.071 299.396 136.542 297.957 135.811 cv
288.816 131.202 284.976 120.651 289.386 112.251 cv
293.796 103.851 304.776 100.781 313.917 105.401 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
325.106 100.351 mo
338.497 110.662 342.077 128.221 333.106 139.551 cv
324.136 150.901 306.016 151.731 292.626 141.412 cv
279.236 131.101 275.656 113.551 284.626 102.211 cv
293.596 90.8716 311.716 90.0308 325.106 100.351 cv
cp
302.386 137.431 mo
310.396 139.332 318.776 136.031 322.486 128.961 cv
326.406 121.491 323.796 112.321 316.736 107.141 cv
315.866 106.491 314.926 105.912 313.917 105.401 cv
304.776 100.781 293.796 103.851 289.386 112.251 cv
284.976 120.651 288.816 131.202 297.957 135.811 cv
299.396 136.542 300.876 137.071 302.366 137.421 cv
302.376 137.431 302.376 137.431 302.386 137.431 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
329.236 104.082 mo
339.146 114.521 341.066 129.491 333.106 139.551 cv
330.577 142.761 327.306 145.131 323.616 146.631 cv
325.566 144.211 326.716 141.912 327.287 140.461 cv
324.707 142.651 320.596 144.751 316.566 144.671 cv
320.516 142.171 324.376 137.301 324.766 134.771 cv
322.287 138.591 316.816 140.372 313.806 140.162 cv
316.856 137.891 318.586 135.571 319.336 133.122 cv
320.586 131.941 321.656 130.551 322.486 128.961 cv
325.497 123.221 324.656 116.461 320.886 111.301 cv
323.417 112.071 325.386 113.431 327.426 115.361 cv
326.506 111.332 323.516 107.301 321.356 106.101 cv
325.766 106.702 329.096 108.452 331.906 111.872 cv
331.306 109.131 330.226 106.122 329.236 104.082 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
327.287 140.461 mo
326.716 141.912 325.566 144.211 323.616 146.631 cv
317.146 149.301 309.376 149.321 302.026 146.611 cv
303.626 146.561 304.926 146.401 305.846 146.231 cv
302.546 145.491 298.327 143.702 295.787 140.981 cv
300.207 142.491 306.336 142.872 308.486 141.991 cv
304.026 142.061 299.176 139.211 297.386 137.122 cv
300.486 137.971 303.006 138.191 305.116 137.872 cv
310.426 138.372 315.656 136.651 319.336 133.122 cv
318.586 135.571 316.856 137.891 313.806 140.162 cv
316.816 140.372 322.287 138.591 324.766 134.771 cv
324.376 137.301 320.516 142.171 316.566 144.671 cv
320.596 144.751 324.707 142.651 327.287 140.461 cv
cp
0 0 0 0 cmyk
f
313.917 105.401 mo
314.926 105.912 315.866 106.491 316.736 107.141 cv
313.327 106.162 309.707 105.921 305.936 106.931 cv
308.106 105.561 310.066 104.851 312.106 104.601 cv
312.716 104.832 313.327 105.101 313.917 105.401 cv
cp
.181369 .0870985 .113436 0 cmyk
f
312.106 104.601 mo
313.646 104.412 315.216 104.481 316.946 104.721 cv
313.756 101.881 308.676 100.141 306.346 100.141 cv
310.516 98.4712 314.077 97.8911 318.396 99.0513 cv
315.997 96.8716 312.886 94.7808 310.816 93.771 cv
315.756 94.7612 320.686 96.9517 325.106 100.351 cv
326.606 101.511 327.986 102.761 329.236 104.082 cv
330.226 106.122 331.306 109.131 331.906 111.872 cv
329.096 108.452 325.766 106.702 321.356 106.101 cv
323.516 107.301 326.506 111.332 327.426 115.361 cv
325.386 113.431 323.417 112.071 320.886 111.301 cv
319.756 109.741 318.366 108.341 316.736 107.141 cv
315.866 106.491 314.926 105.912 313.917 105.401 cv
313.327 105.101 312.716 104.832 312.106 104.601 cv
cp
0 0 0 0 cmyk
f
304.58 93.6265 mo
296.618 93.6265 289.488 96.8667 285.019 102.517 cv
281.233 107.303 279.587 113.5 280.384 119.967 cv
281.37 127.962 285.943 135.636 292.931 141.019 cv
298.889 145.61 306.071 148.137 313.153 148.137 cv
321.116 148.137 328.246 144.897 332.713 139.246 cv
336.5 134.46 338.145 128.263 337.348 121.796 cv
336.363 113.801 331.79 106.128 324.801 100.747 cv
318.843 96.1548 311.663 93.6265 304.58 93.6265 cv
cp
313.153 149.137 mo
305.851 149.137 298.454 146.536 292.322 141.812 cv
285.122 136.266 280.41 128.349 279.391 120.09 cv
278.561 113.356 280.282 106.894 284.234 101.896 cv
288.894 96.0054 296.31 92.6265 304.58 92.6265 cv
311.881 92.6265 319.28 95.229 325.412 99.9536 cv
332.61 105.499 337.323 113.416 338.341 121.674 cv
339.171 128.409 337.451 134.87 333.499 139.867 cv
328.839 145.758 321.423 149.137 313.153 149.137 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
304.976 103.752 mo
298.459 103.752 292.656 107.099 289.829 112.485 cv
287.874 116.21 287.525 120.535 288.846 124.66 cv
290.303 129.208 293.705 133.11 298.178 135.368 cv
300.891 136.738 303.905 137.462 306.892 137.462 cv
313.409 137.462 319.212 134.117 322.041 128.732 cv
323.995 125.008 324.344 120.686 323.024 116.563 cv
321.567 112.013 318.165 108.108 313.689 105.847 cv
310.976 104.477 307.963 103.752 304.976 103.752 cv
cp
306.892 138.462 mo
303.749 138.462 300.58 137.701 297.727 136.26 cv
293.016 133.883 289.432 129.766 287.894 124.965 cv
286.49 120.583 286.863 115.985 288.944 112.02 cv
291.944 106.304 298.087 102.752 304.976 102.752 cv
308.119 102.752 311.288 103.514 314.14 104.955 cv
318.853 107.335 322.438 111.455 323.976 116.257 cv
325.378 120.638 325.005 125.234 322.925 129.197 cv
319.924 134.912 313.781 138.462 306.892 138.462 cv
cp
f
302.638 138.095 mo
302.549 138.095 302.46 138.072 302.379 138.023 cv
300.989 137.18 300.129 136.524 299.617 136.132 cv
294.936 132.554 292.295 127.328 292.362 121.787 cv
292.419 117.042 294.494 112.838 298.052 110.252 cv
304.02 105.918 310.179 104.742 316.875 106.664 cv
317.14 106.74 317.293 107.016 317.217 107.282 cv
317.142 107.546 316.866 107.703 316.599 107.625 cv
310.216 105.796 304.342 106.919 298.64 111.061 cv
295.339 113.459 293.416 117.374 293.362 121.798 cv
293.299 127.021 295.797 131.954 300.215 135.331 cv
300.721 135.717 301.553 136.353 302.897 137.167 cv
303.133 137.311 303.208 137.618 303.066 137.854 cv
302.972 138.009 302.807 138.095 302.638 138.095 cv
cp
f
250.388 128.283 mo
250.016 128.904 248.152 129.533 248.046 127.607 cv
246.798 127.867 247.214 125.525 248.568 125.525 cv
249.92 125.525 250.388 126.306 250.544 126.826 cv
251.222 126.513 251.742 127.501 251.534 127.867 cv
251.326 128.23 250.805 128.542 250.388 128.283 cv
cp
.205509 .264347 .342565 0 cmyk
f
248.724 125.941 mo
248.149 125.917 247.787 127.347 248.88 127.242 cv
249.972 127.138 249.972 125.994 248.724 125.941 cv
cp
0 0 0 0 cmyk
f
249.609 127.501 mo
249.302 127.441 249.036 127.761 249.348 127.919 cv
249.66 128.076 250.128 127.607 249.609 127.501 cv
cp
f
263.074 129.253 mo
261.725 127.65 258.759 128.789 258.852 131.554 cv
258.945 134.32 261.588 134.25 262.681 133.619 cv
264.255 135.058 266.257 133.451 265.636 132.039 cv
266.667 131.041 265.261 127.994 263.074 129.253 cv
cp
.205509 .264347 .342565 0 cmyk
f
260.812 129.703 mo
259.695 130.458 259.736 132.289 261.312 131.894 cv
262.888 131.498 262.957 130.791 262.484 130.238 cv
262.01 129.687 261.435 129.281 260.812 129.703 cv
cp
0 0 0 0 cmyk
f
263.827 130.326 mo
262.929 130.693 262.984 132.429 264.027 131.873 cv
265.07 131.314 264.89 129.89 263.827 130.326 cv
cp
f
263.466 118.707 mo
262.54 118.941 261.976 119.994 262.748 120.599 cv
263.519 121.207 264.315 120.853 264.511 120.144 cv
265.037 120.474 265.398 119.898 265.416 119.591 cv
266.328 119.781 266.664 118.265 265.691 117.63 cv
264.717 116.994 262.996 117.195 263.466 118.707 cv
cp
.205509 .264347 .342565 0 cmyk
f
265.007 118.023 mo
264.738 117.642 263.492 117.865 264.139 118.468 cv
264.785 119.072 265.727 119.039 265.007 118.023 cv
cp
0 0 0 0 cmyk
f
264.631 119.021 mo
264.373 118.835 263.701 119.019 264.074 119.3 cv
264.445 119.58 265.042 119.314 264.631 119.021 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.1
%%For: (WINDOWS) ()
%%Title: (Boy_Dash.eps)
%%CreationDate: 12/15/2014 11:35 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bli=SQ6?%;,3hD^M^.S6?+`]Z$,Gtr#S88"hjO$J0&LPBFA,Z<,aM)?PuONAY-7`S^U*&(J.f4lU^TQtR7nk]:S'[qT)@T+
%`VJ';n]BH;Mt;FI4\NuO.oYT:4>jHHC&[\B(LR*pacG3&SP!sePdT(9k%0]Qom(,t$L_,h+'j<MSmD>7EIP:nr4+sT4hpdiorS+?
%F#No=o*]rPRJicFl08"^Zc21kkZ>9lq-3B4I<)o)T3m!$>gD[uTu-.Jh>I#nE#1?]n"or#B1Jk$a4h]orpB755/R&dl'q5qI<`*3
%]S$d4;[rH!rV$9hn$"`Xc_0#]!lI^o[]F>2d@2CU;g;4g`oaT\s7=:u0.3AF0/f.Ek@ahh.r;-ZS)k^)fm_ZE([r\p#[C`RQa>fI
%rT<D;P.NdH[G^H6=#4[Ps-nH:#tmJ2?$;O\c-R'5plh[^JR5MgrqL7,GPF@mA[@o!o>;)3Hq)6nCbj0Apc=ZZ9^`!ang/Dk!W:F?
%j/:ANjd,'l/`m4!5"X[>pd$FJe5=1dVCq#=S\<22Ec,`Wc>65Z7R#!)*_!O;38+<)p$CSES)`mi?p\pSq<$bQ@E.m_RAEJ!`BR\"
%DD2!<G&dnnZW'usCj^SY]KPAUQJ:#h)k?g;6MOVtr3X$0AU=`NI=?KrPO\=IE_lN!lJq3Tn(WcHg0jmQqbPtQT?dJ-3r1<Z@J!!F
%J4us]i+dDC9K"](%VAS-`;B(BD7@Fiq>nt8qhpYF:<pS.V$$eCV$lD>^L!EMHOMOU=iGl(+S.)XXn>bA$KJk5gn&63:&;<sf!bc<
%p?`fE`_R\Z5/',5S06V8C0!UsfW,26r7Q+3\bUPPkHGm(D>VZ4iqH)L>m\0L%0+1<_Q0j0Dqf#@QJqip_f)ji^WeP5G.jd-q)3#n
%R^Mq4>-)<f<jQt_ejesDldRfCWSp:Tf/6U0CTN9Zn1RgX>HHDaG\c'n2f4Iqenb2,]sa5E?a$`OHHeBgVn("+,CUthMmr!G=U)@q
%5HKV"_S91^a/,Qmmr2+u([L"Pn1Tc,_8/(j\F;/#_Em-fCl3e_:#ho909%"0?nmZLT?8kL*agiF)ZI]:lSY!m/5bRJdL8bQ(&m<!
%H1X3!mQUB*T22$0WR<9o_J2&"r/4;>7.SFp4./'UK@Oq"3n"KU^)=tIJ+40^ORW>N9'<Gbs'di*,Q?fHA9;8<EY%Z-M@7pZ`?_!8
%mNTOiX"j)X2EZ:,!-OmF`_Ya*FkX?_^9A(W:iR0S8@S33q.grprl&W2lSq@g$f?nmYmq6TDHAC@Q,MV@B/$253\/W,hGNGRAJck<
%Om(RUoXTG[H[[^PO#jHXUZ:D&@l8Zu2pVs&p\^3"o0R$4k.,+)E>*,60e3(NchG6B\pF<9;dfED^mM9?^geSEm]f>b^7T7r[@[op
%PCf!9pE7lOC7"V8gb@W#9L:E10;R%;.o#gis.<YDcCb&bI_kD?_+">f^WM^(qu?So.fN[Qmcg"LRYJTJs7s')n7Vcn?Z>m_a[Q1n
%^K)lam/QZ-EA+$W3/@9qkEeF!-iT0:9_1.qek6*AD+qLY?[,YSQYD='BaHX4jV#;,>\THV)Ufh,Jq@UJ:6Y>`!4O@.>YD/1em&[-
%oXD3_KRO08]<AU7@_FC\H&e_ENSbFaE+=mbQ:ic%9=g[pfsP*a<TlVG>@=k9_G=n1q`mldhSJS]N"sbR\mJ#dBHJ^gfL21l^];KB
%8]crg"#P0<"]g0Y&oE/k!>PTjn73@Ap'cF6,d>;l\cfb0B,)l(+'-b9dsrpL6%+h!*U(!O5*MSlHDp.Nna^hu4.:AlDJ=ihE/MLB
%],;09^i2s2r(pC2>6%W4ou:Yos7.:<k8Qe%+H.dJ`&"NSc#I:u*T@(KAQIGA0ODrQ\W]'`m?R.QFrfo.4Q4_eo]tu^"s[)+LsXj4
%s+e<&DW:T()=+e:FA)&%Qf/qJ+GuEG*T?G,)D;`\1MA&t&Uu;j5BMOi.46Z*%+r'rYi;BKn]S@KUumI%imIdH]3fV#Bt0(W*jchX
%#+&[ZI$^qEHm'n)oL5A`<t52q6h'dq!tU]0)0@M<X+pY20(?Xb/_G;I9!nFR$f!ODRFHKc6bGtS1U"NE&Qso^id8[IQ\Pb>M,tJ@
%@O>'#$buEi8/"MZ(p^Fa')0%LkaC(?DFEV-DTR0Qq+H<)BCo<KUW7iRI*q<nfF%SY8>L$.OEF-UW;/N>*WpfQ-R%$6*YgXbd/XH/
%RKP8dH3?:?X\"mnnAl=HGeA871g!#66@)i)GDJ."4uf2Q\M\uH,-1lc+n-tKcI;EmFb>q[AIHtii)>6RWuLCAG.+O3>*gi5dEN/q
%%=Qb\UF<A[n5r2Fb5rW6dM;FpWTta&$<+C?A@RQMSKr+dT!GZ;L6-*>ML["<0SHZ[e<?>e9U"rQV^JS,"saU/FrrfhIDR$`-'[&j
%_?XLtUpN">*=>Uk+HhCKJQ3Wj?ssu.Y0,<-Bn?Z/Jd?L6BYl=*""9J=f0!O?%qoIIcRk>[JildKO,Uf=.PMBM@tN#h8E,*B$OQAT
%c(H2pc\8Q+^4Bnt!2Y\'0+:3.>tpE!X#@pE,>qpiaqDW9UX2F\_jO7<)B=V_,XS15J<2]Lce(6_D*1t#J>Pn_28D-Y>/]',eM&l+
%A\Bn0ph"n3Pdm]MLhMLg`"F,@K;&s;W)aHq1R4WP\k/P:-'Q<$-)q`b_<B%*V^$1*E7H+n!#I,=4<RF(d.AY9EKuJnN3p_p&qkgO
%VH-CR29sANAPAgX.mu,o*R5jPP</nKM=<)*&d4U19<]kL0h1K)Q5'WIYWP?pH^XF\m(21f`#pU8`H5?qWGR>co4S9e$KJZ*/]rYl
%'Uu<9;&W[?g^*Fokc3UH!!$`$QE?o=-.>q?g5:^mrkbma@X5p)Cot`0!$Ej(72i%Acic0,%hmrR,_KbN9S6(WZqPFUW@tW7@.bBQ
%LSPf@:A"/s#9_2Xg1=Na+n9*G)B8ehKRaG18EhO9>Vsbt.Z'Kom3;2)dV0oTU=jHU\fl?j4-MrT3&4gA#X%GS:7iX;%r-rR@eB^+
%Vme$qXj].kCgP`Cfp:j+UVOb*QJ;uhHV(Ms![Y2"'5/_pGi^f>XVgI[XhGkbUqS#cdhp]LP41C\i3G&($6atV@b5aWhf7P(i_i!/
%Rill^'k-o]S+,eJob&QE6tMa\P+Z=DH%`P?+j<J6/<U-B2X;hu@36&ZCO#mmBhM>Fc\b7o$rLOAU_r@`8^cVc=cj8.7>=gNG(hdZ
%\X0$bO;ro6QT,m[Z:a7g(#@a+QiW:/XMmN1/eiBkC'h527:Qu2#JuD)DF?kn[K0*BkFK8k`!&cC=!AObTQpAoOXoc\di.;L8F<DJ
%b,ai_`<=Rs8BOV-qHO.C2U5!c^^T"XDpOMT5]t90#>f[m?o:f&G^aDt\\][e,T[5$@ZV0R#<Gp6oLqRl(^OpC:":j9`OCBH"j;#l
%Xrq7<77O5]U*g#DP61DI6rO[o&\[Ep`;=Q@fH%W8b&NY.;982t!A9`Li<-;koT6IT(n_YD9tF7$'UKq79ni3CX&h:jU>X]PY.ih_
%D+1!cJDnX?BQGi"G>"miH6jPm1aT4*Z%)kt]g[9a@:7$)A\^nc.tk;=b@6)`3)u&;<,.4g(-#H";<>kh'F(Yq'9!<%8?8iB3f"5)
%&@`_c$Il6;/i@`4Xg4d+iD[l#=@\979pR[\b*PcYk]W(,TTP*t6qnEG_+G[*Ed'=$2&q?5>s$*m])_[NLr("[@fMesnH0^+[V]!-
%+r6HHnQ)_ZA'FW>P[nT"-=/se6m\!2gtlFC7(\;mi6>@5q]Q:pK@-uD6>LV\`!T"72`ase':,Sa7H/B*,&jN0@mk#=QDIjLW$74`
%)QTB[k[])-!tUXC"tKeYV.q`YQ(E5_`GklD?)4a,G7q"[Jlj^-d<MWLN_$IA@C`]fhZlp*d#+UdXVdX[*/s1kQ/bt(+IS_+%AH#m
%X[uP_T[f;L1Eg:]_suB0d[dBATe9-X$&Mi$>pd]4W7-aS*t]&(+**ea6WLX4W>`'_(h)2VZmphP&OfH.m1JQ\></`C!LsJI9H^lQ
%4KY=fU#EIh6G6u_JCrpEVn*g+jqu4'&WDRUBTXuDIKW4P10VT5@$TOAM>q';*!ckIfFm1%4bKVoA="TH:JaTupWW:M,#^-d3'lMp
%aaQfNl_6i_7VYFmIRR7<$3N&?;WGFH;_PQSZ*W/BJ$GaSFbE"P9bYs@K!]"B71)r@J!bS9C4IE^$\6?Y134'CCVkA,U#DD-k/8KU
%6m5`(.MiHVc4lN,kQu+%X+Yc"IPA<cV:4At*ID6U5=LqqB0aPAPsqoVj5Glf]WK$OY%DAi#>81N2@=Tn.dIJPk"0Al1)Z;<?*jI$
%336"q7g]RCZ.fEAK$DODb$EX&p42MZla9+6E#J3\&ku^h!2T\sUIa/8RLO/+Jhde3::J_em?`H]X9$M'KI5!dO=V/,SWUT6+IOK;
%WOPe#^N*iX%Km!%!8]"(NT?L*J]E7S&8PG;<4S)NB6C<*`>_ti,D='`Eq]Jh4Fe"*Ug;rTXVq/mL-(>O!Uj)\O4+gM-Ul9NU%[A_
%q'_6a-E'\=,8\`u'F[hqBMs`7L?M2RRfD&VK%c2fb[NV"2iEW+PtWM.h6\H1>I"E`*@ilhQ68a=>j3a%%L'gnH@W(e\_W=D&XsaZ
%6eHu<fNs:hO2qThaq-*4@DXlkAH1.9!1Bu"Jin'uR]J!///CIW3ac7t@X46ES5FRQ)eKX)1Nm/hAl)TAb"$ifA20Cic4^pF#qB(S
%0?SJ*VbsFbf[ob=*!qNk.%9*O&[0CRl,X*39MVXA'Z?eTHO?8>9'5":98+d<S>AA\@B,p([`9fYfL/En]kL.%Tb'7eMNUFbJNSaB
%PGNALbpttleO+n'^+!'^AB$#U"=%F>NaNAsH==5=@mJ*ho_HeF+'R`j<#Ad:9YcmS&UU[[VZdG>KJk$1YbkCJLge.g&47>EFu$3-
%.4(`G4l&t7Z;Ute=7:W4c:k4#<Pk>%H,c:Q&dB)tQF1B\\PbU\Au7J%Pq08#m%n/OMi>cC><j[o8RH#b<SS1d6Sj]Q)]CuaSX2_H
%Qr1;OdQMS]+r$1!@E1Kk,G1oum?jEMfcTEr`AS]=10t+&-Ss@_4tl33i.8A;#)61OlDd7;O<Bi-VESF2mSBBGa1k`I*Fkb+]PYtZ
%@R(jO3H5V[%i=E,kJ,*IrW@TCAp\grkp6RY;8M#UcJaMA1CUX:q;OL8Y'Tu_knSUAf8K7$:ObHQJ,]#XQd,'r]C"s_Mp2j`S:1G*
%^U?Y!?d6<L!rq]5e]Hor^,c#]eI>6T:H'*E)1N%'dms35*rh;3J%9uWIdtfE^nn*<Ir%p,56VM.P0M\Mlp!BET>i_e_s-<"F"sFC
%>hcGXrW1nm!*HsX?T+q;mD\6a!'%QHl?"(e9nhN+;30F9I[D]^[qEaR?0hEnds3Pce)["U5JB3D4o,$'2&MXhpEP$/\\1!"rf"I7
%EV9.Fm&0IH;\'/:+CFq9^:<6Np?!O$o$@KsbPc:jh41(.r,T(<o\nkEW;V;9h1Kn+3spn+#jOcQN5'BDleerhcTsh25<1f[>DVQi
%aIRhYKTYH(2]jrMYS_/YK:9O1i[k`+O9iUIFZk".ok\U`<r)(#k4f&r^t1h=2oe1XcY'<=?a^rJ%M'F,SL(UY[Q&a3i]gea8ER?m
%B*(PcUYJ0(ZDp0B@ko^D)MABDB<j9EW6D'7Y[!J03P<IH?bBZL4E+drk@WH'9O"!#@l%t;VG5=2V-,i0P*nlSC_+F=h`akXMpDp^
%Zf484<]jL!*jf/,X2WLs]-?SO,lV\.IQ%'8j1]1+Ie(\8(7$4TnPCs[Wg=cfbG<@fPX1D\(lnskntO>7$*2:=SBq]*aMQ;n*#&u;
%K)T5<^S9T"6C0t\>hDKQW#*]f\QH72CYB1;\8BoNR,'CK-$hqFkqZK*bCYDTC=t/31<(:df;f&)M,h8><d"Xp=I#q%e\D?J_$*ga
%%WMqu@KMmi/!VW;$ifA]/siW#^[V9b$Wic%[5,9jq@,)o*M7r[$2eNT,kY])I=aXlcPG$NL9;HkN)rT;Kr^jsLQUPL,.)nO=b4^b
%f8=#i!B:@AQS/=_28H%4pfP$5J6!.6b5cSIdJsC`eCO-*GSA'T/l5Y?#=&'T=pm#;!:i.c5C<4#9joAB$gK0Gcr##rgosnr4>efs
%eY7`?_X&!kLY3l*$`<fNnuO0W)7oHiau,h=fB%@"qO^V(3OP1%Vh.*8q%!U%hmpM4X2Xhoni)c1^lt7qr.SJX10PK\0OT85&8N36
%<198)8Z@@"U<2XYUL/XKi$PF)obr:GoqH?_\#/&gL.,;_F^Ctg#/A:'(U^4UR)C<K[\.Rji4#^Y\1HiM7?plGQWL%P;q(jKhNZAP
%M&sRI/BY%NT_*b\Lm)IUgXtZM$X9CT&$F]b2R/p\(,3!I9hbWt_ADtK's'r`,[]M`!uRIH<BXH4'J>p<-3khY6N]GY*WWgtR]OY(
%dL,Rsc*GQ(BSTdoU9nV:P>eAZMDek3k,9-_X9)otkELlEGQ8P5b_kF.#VL7*iNN;CQCrm"i@=rmX:[l%3X?fE+.42FA`^eS,G`c1
%&?OHZ"G/UheJ-JkmT^SS^b#`2)2tN#T^K\FC$>]o@2Cn\Ort%J[0EeP-EsioNeg(3b>P"$'0Jti\hlYd>(d'aLnNIUlO"CF,&niH
%7EFVu0a-HmerHRl[R$k+HpNi_fObi]SIe(j_ICE:;WFtjFhhNQlJVn7M\\K/Wh_p7-:!4tRWQ&IXcg*PQ7ne/U(eKo#bhi&U's^1
%$DI_R;#sr%%B]L/f,(Qd"g&dQX!IpC^_Hp(T%6=7"2WYs<&L`W`-tXfA.D8PGJa"VbY\O"6l6F*Joai-C^=@b*!"Okr+ghs"h81F
%q#oWi"FOg+>Cq#JY\jJk)o5jr?%B+%#d4BJJ@&ui!CR3%S2_@p%a#&iKJXj2^`"7G=6_Dj(X.GeY'[pV`B2npZO5a`=1[GGoh,&s
%[$VDhL9K-fCH6XIGes1/hR2!U2*7s%]V%^nWS2?W4"`U:6&W^B/)P>X4"e>b=fZ6QIg3',=To'Sr)OqH?kl&8QiRsI/mFtf82P+7
%Uj3!n%SI`0*eg-f.cMt2'nJ34j.e)s75`Jh"g"1O-1<Jm1^TibEX#W``$[+;ZO/Ysnr<lo&m0WSq:761GW[g?<V%1i269[`F:tQa
%%9+!TB+'(nBIO3d#W`(RRbXi0D_8&5Uq\cB(KgPd;<Cl`V?npl+9n&RK1:t6>,(0pcjZ`=$_m8dT_TF#SIc$#J[4@T;(_6b+caq]
%a2Ph4&?fES.+cOsiC\YRji!^PpQWIKJ:/$u?3$$iP#/S6KJLL/1Z2mLn[9&\!k2rqk(,>ig^aNAPS=BX%0Dfj#TT-Vl(TA)UB-h:
%!p*ZF.lXLkT>o,%cXcETETLddF0erqbUmqfB[1kB?k1t>nSBf59VjjE1.+/g4?I=;1V'!?>%cpX$^hUek/+]T=QgaG$tKkEQ%M39
%SRKeTLH[bD2\+DS#A8d3koebBfGXurL2*h%"o2\_Z6%,VRHPB^BGM!6?(bISetcZKU1%0P0l#,l>2X`XdPQpJ)Sd:DBcAqo)m.RJ
%9W2q2MU\A;TVeuk=Ud5.Q@_7K>K\=e5N)ZN,`\XE/XrtZiiX\riaqp03@q)Ob@2pD@jJ1V9XZ.(>`r@#^nsX\X.4"GdM^-/JA!DI
%h2$`m+rM/-Zj"RUGZ.%o/?Y*ZP0f;`Y03)$BFEhf:_?`q8naV`BF2eh/!=aHZtJX)$Db!BAM]Ee]kl7b-Wr3W;$XC0_Qk';D+g$p
%9p/Wc=C$`9?q<ahPAJh83[<@V0-n5cBqnhQ71'R+.u"%U0l"'28T6Ms>YK9kkL2L=f?!F3NlU*X\&>$W_N>`:QKLpI&H$H8Q6Rir
%nJgR9r\&>Y*4kP58JZ<-eF="Jf?5Isj!k!-A'$$/i%ObRAg3q@J#.;sN?Y:jQNWq8i3p9+9nXCuL+;&6-3Db(6P]&V'4GHW6P]&V
%'7h306PZf&M,(BE3[Af=kZ"LgVkg)oNm2lo5qQ5SXeZa.,#Y`Ic&Sk.qJ,7ub-drOXU8hkq!lcW+f*BDb3:D>K([H)*@l^nOXCIi
%YF048neg%i9VrE-G2TdJ99uI6$`H-9An3..aBFajKaBD1_O%*(UpMb.S-lO`_8p,2""^h#7NT"bX@3D,iZ\tJ@a?4g,rQh*,$&=X
%X]48e9Aju[\c-pNU19bZ?J,chhRtuD0Xd/3^?c:FYRbEP]]Q5s^$;:!>4eGU)m2VWFnrMpM?.J>V&+P/W_5'sAcPOCVA`,e6HZ"/
%,F#.,N\h.9"(WjX+an&_Q=mfBXWb;M7WLa+b-`?(e0Hb"K[-f<]-9lb94:;#gsen=/<^btVhij>Ec4\G2O8e.,3O3]7jXjr!]`=&
%jQ)\dFoOWP-]>K:Un`WTWT1F$^n6m!.gPNaG1A%pd_OS8a9^-:b6oj]W5d"!1$d"4EKCt(]#OS0li&BCO;%dp91;`Q,;KamH7$I#
%XN2`BQBTh[,=(KBk20VWAm;K^G$s@sXY!,MCgFGX=%u+Q?&<+GLrBoN;SY>V8'-e&(+GIo:mO9QOZZ>\FfN[Mj\:mr=k3`3Yn^D_
%Q_YMBR9^[dQ7soT\"SIHng2ugC9^2B@ZBre5IF$^c6eg1<[jCH[7fJkfUc*#D,P-CZQpQ',jdV(5i=@FKXZ3@Jbfk8Qt4dnK<PtA
%_U@s/k%YA$',np].d'r2mt)9<WE_6#Sq^5?X7J=/"]S8Wn^;\)>0!lenO)fb]Y,#O"CHlS:#mcGOG>"p084BMUp]eqXIR5VMW]Ru
%NHd-l_HafGM?/[EicQZf]:f.[bXk.@lZ8aHV_c`^-9#t;62hU=ZKq>DFds,K*lisMj-&a(GE;cJ/m&8'icPmPp%$-UWPs@u5m$=D
%9EY-8lD3<(,Z^4])j*j].ZoT6RQC8N&1`=c#scW9]MnWH,o2,$X9PYf,RYta<mH/uE0B31O:Pc*_YO]f6RNP)2ip1T[4o^Vo5(FN
%F6PfGC\Bb$r0#.EWNohKa`W%-:1q3Fk84/]*#[&!Ri?sjpMd-FZOq,Q'ea/kPR$F^;4&ZN(^(rR4s6\(&hWU%#P:4>.V9_h*%'%o
%OclFbN4i4^@o;R087pBJO9Xl9O&>41qTO+UeG@g,R?JW2QHFr0$oiA[@`9b3Z#p[rPE!Y$C[rOC@Z)eV$J?%X7!T5%:I\TF2*JB1
%,*,oZS;,T-PgGMM=n2r$i[&EoCIg3`,5supaOnO8MpE!B2>FdoD^9ZViAVEg-$q7;nRU51fka7>64'\-s6#:<TdX(&mLbVd18c4?
%5:Wh#gegB9ADJ`X70DVsmLJdNX1$*OWWm/u1t9oN-fNnTQ&>NjAZ.Ag+eW)I'&0Dmlj/<t&JehG@-b>V`iW@_fdbhk6W6&J^0l>A
%;2eE_Ym.UhLKN[-9'kH:)jilLE0bFh#9%&1U*#3IgQ90*G;epD@2iN'Z$@:$?18Wu3l!l/&m1,KOcH+6<_3B>([D?"d1FfKS!.B[
%q>jeC#UAS3Xh]`-JhItjSS.VMfB=!*]IMe,U7RbmpN-ZF=g:=o@^0,sCK/n,`>5ErHPBVXaNLWm.)mC<6Wq5Ge1+=jA:;mh-:sTa
%W)!^t.:U8RBb&4iQLr*!;&cAhV9JN<jq]C=$*s,Rk0F#B.>3!u@<PPA&!eUGdK>Gea=+%iH!s'&&@l-d`89"UXPs>g]$#lZolYCc
%+'d0ef8od[/jJ-ahi<,2csknY\'$F,n$jQk,IHZ!mIF9N]pa<XqEg$*%:?^U5.c=s0@2)XY?h.b^dfAH!gcZ'CRkF@Orl1j?\9NR
%lWQCZl<f@\$TWLU;N?Wkr!K-!U$GW2::H.0$EW3KNX+'.j$$Gk;niD"HE-A;^8DlV.ZkgXIt9F@TYPRFLM22Y5D/6PX9ko1JTX9/
%#$E&/31G[#V5tE;?Ds;9l\;D[Z@8_jU?[OQ*Q!+HE,(8<cklu<(0+^@NA5#%]kEDKU^aD_/!A-m&o/9*A]@;R/P0P3l$@MC>R8<,
%JIKcm@N6E*;.:LgG"7Gji5qWdi9hA3a9NI4"R^.>!#]e'-?+0eJA_N^C]`3m"<n<<&HX_-b##dJ5WNgOQ5&DDe+-9_,Yf/*985c<
%cg"P!]JgQ(Z`X93@EN<knD\#NnM5kK>EuiSP:*JP_-M`tGOZ;IkM_lJ*]30G@UHW!YKAGB?1^.6:V?0q(\kD88QHJN&qb$l"KQ7Z
%ERMtf.)_cO%_;cDd@_9<@mCY,UkUFJN"@.)>`TSaK\^2P(q(&V!)t+@?prp!c=Wd&.$StOOE:;tE*a-WO-tFTP[*Mo.lFU2"YFt0
%r^_5gEei[ceNr,1igesF&X-H6f.%'B?#o/23&=Yc'fAkt#GL];/ckcPMMY[LrI(G(>*o";H$H"$-,8bO>rr'oELhYBWQ"@RJ*f#`
%$lO'e;[p9!]#L(5h9K!9*Xo]WYY/NAJZGDEi_k@^g"F[]Iq?b@P_l)Z<lB9,s"gFq>TdfSD?3**S&2buG=<e0s"5VM'n0k^0?M>/
%^T?/[DbVLh+[r/Hi<9'oSIiTO*%D=qN"hPAW!*@M9!EjR#>7s3308;L@W4ccUEVRoE+--e=BiYR+HS6*7!)#M"')@Y_@J4qN7<R7
%EhMfOJe8rr#tPG%(M^SASY`^i/HmK`&eMXOp!1CH's[a#bCa1qAZKVqNC0ufc4F0B&L:tmBK93T@gK*k)4@t$\[F+-ZQQ-&<-h+Z
%R17Dg:/mV`PVk;.+:&p<BhK"*ZUI0Ef+>W4?%?NQCbd0TZpZR0:*P*c@sRCW1c\AG)'VmAEhP')3u#9hW1F>[#i%$G6tEJHr$(l/
%&6ROF16$(ZV?ZT+/mr-:aR25AAJehN!23R[."Oe+#7/lN5m`)1%hbo(K+_Qd5"MW<%nZj"I?78W+/f?YCh0JF&6(ZcTO"UY%BEfd
%!k)%T,.rc9,._T4On_;V^Q_Qjpo:*iM69;1CAgRrVe'tP3`fjSn*'61nE:%MXFFg/Pt+p'\SQAQrZ^=2l<JIRM$H'IUg1I`;8lT[
%Y-9K`Qu)/_e@K&@PoD=1.V$V+fPKOCW.!X_=Uh!/Er$2Jiu1=TZJgmG4,7EO0d(3r/Xm>4W)ek66j#9Q<eG2@Y\7>+!E'*VaO`C-
%A'638U_,63ee"3/i)U;JQ8fe<h.km8K&kme"FI:B(fO@D9#1iPnOO/-eNhp4)($.P*-^YkP8qF>E0S.C2,k?uGJA5#%5g`W5Q\OB
%Rup1R0d\8ga%Q2M(-(3,NCu?,8q@kZ+*8P.V2#8LlV0f2H4ua#L<Ma=BJdB@9N6@]]I_iM1>PEcM^-l1lW6$*`Mu*opH-q(6"OD'
%rN;m@C48Mn+'oj?D@9GhS#;#%&M*-o65&.,,ncC%:k`NgDC#X;79cO-;;G<0[gX/-e>-<;<j\P,2(M<t"tiISC`pm/U6Vo/'b9oT
%m5GnS)b<7cg7[r\29?dgF0m^+%F):Q+&sG50Ga2j0Rtr(F)r+MLSTO0-?uFs,p)AjO@jDT=ZC#'eUK/h\D$7$\!QW^X1@2hon!tF
%*ERCD<=W<A-aX<U<^rGI-pD%o-k]i/UCS2#MI[@@kQAhaU4<G@oGS<9+VX:7+J%<VS`$C^cC`4,B]<\]l&4:^!U==FgI9MG5AAf-
%1.rq%XH:N/mS4+H,NIF+&Lp/C7j0Ue<R9^?h!+>V;om,u@L?g;jA_1)`K>>s<.F)\[C`-8hrt8n@C>C'V_2HcYO6;*51=N\/_J/Z
%mT%E#MNhDa3!U=<[,Z#$RNrqK,@5H0F2md9Gg%u;Q36t?j<n;kQTQ(SDTJHh^2_.5p5(`n$Psd3`4OPRp@_se<OM$>(1bV&::2Kr
%]0IWn,;O^^`!.>H;6YeRT&5+eb[1n='ogmuO$/G)8B>0o2qpOY0Gaqin#S2somPEPm93%Kr^'^/`>PBNP%"iZ0Zo!+PEgA\;5df!
%1nb__OmNonn#f4G?]Y;=j#&5g,@j_91-J=bKBl^\!%i4&btZeaCs"IhBQ4ih]9Zk0@6:"f>4eG504t[*;eY912[\d@G7(J-m7+nl
%kIZCJmWP@U9QuK@gtC7<fPi7P5p`4X0"jOu\\YS<gn8]HJ=>C=PJEGO6N2)E<nC46?)=huhV2aqGc?[GGWSqQZc)GLDoHJ0mA268
%OR9?=1j#6WY1#[R.c,-^MgHbn3MR^*P_.S[[?BI89L>k]=@e$hl&&'+TVS<F$;2j$Z2RpjaOJlcMCu?_-ILX1C[6,o!KEAPem,:a
%GLB\eCK6@Z6>KCr%E'q/X]\O!J=urO+'O;K&C0%!688nnX9q*MlT"pHDAi\k=:p<a.81s60rGdqN1!hcbUh3Ar:Z-<<fCF-7H?u'
%?fJDB(:tM/@UDX_T<d3a6:r]6GeL:,][qL06GH.Z;5krX2Y<eI(Z=$?T_NIrY9g@s-[6k@_<]0nSh+<u*3<78QsrPAGGHlD"Y)-0
%Y]B!,$SXOQ.cQ[!%FGh.d?,^$<cbPQ<>&2alXha-A3#>J=^!>c:0&u00r:.$7iG3kd"2?6$Wo\-UmMeG>7):KLf,lSFJpMNX]Wjl
%M]/s)&?W,Adjq0l$c7)t@:Y>k8jFRDNJ8iX:=uc/NU"bsmuI/9<5N_/(W:cr7Go\2"!>rh"!cndp-,UkB1eAk"MQAqU/^$9DK<jU
%es7qM9bicDq94*,9.RAq)(Hp&CFJQ?@Dgk)/6G2'<8fB)<FB*qD3@b()K52FLk7QkNs(8GPWD`*&k^2='Ui('RS.`a'+B!AC#XP+
%ap\t%G^V1&Z"q4fN2S:_WNhP'LkZZhijY_p)T%j#)?HJLqk[+X0A\?1J^7N:<]Na5q@/bMfCm'E#-spP<sOUf(q=EffQPOuYlC[l
%Op;D]TcQ=0YRGFGI+VgEo(tR`YRL'm#7ZtBO2/hERD>cM88qRRFhJ,nFN#;XaBLq\./%;l^5hV3p6<L!oi_F/eB?;5^r65?2S-K6
%S\X[r/N+Wa:tKJ^7T\qrMS2m*L7h!(XbqO0f-cf>h6)>/N'+W%-];[r9oLkpq&#gJK`bKp/!RT+^eVPhE3p2GaaUma"q'dU("/2[
%_+5`BKcDU2l(^<06;-mpKJ>iZ93P_/;CN)'P^pUjjm0;^/#9sIQY<CBYs]L:Vu_Vj+X.(-\hHKG5m>U\Dj@J]b(UfjSguuTk'AQR
%b2M9q=j%,T`&FZ_UDT`XT_#mDr33TamF]im$bDh.P`,9`kq4[GI\uD&lL-!F6As&['">n4%JH^sIHkON><Vu3hs,^IY@a.*-mK#k
%XJmDdN1g](W`:6.g4djr8(mTH(RchKWeajAG"G:$jR=8udL3q01`p'JESq*CJci-fP^8scBNl)GCagKCl1WOEg@']rcarVMb%55H
%h+fOVb8%YLiRc/2pf)\u-[bgKSCh[Eijl^_I`"rfFB8K,PEo@52tYl?mrsFKl>B,JLX`gSNdc1^S2i;4_pW?O)?ST<\-i*jNr=!a
%]5*e;&@K)ZA-qk(/0,*>AA[F&=p]1`E,f,mChY;Q?-%[VO4qH^;Cc!15gH0+;bdcpDDPh5*0aB[M_$/9pX8G(7;F(N+V*Y#$\]dJ
%.$?RNS;DAAZWp'58(SnO)$AK<?FbsKKrO-3jK*Bh6#f?Hs2(:H5,0*0oik%U&jcVU84'j!)[b/jnOjo`bp'&GjAt7gjSXC6+QcQW
%]hjA#&1FrdL7,e;]Wh9j_MU1S84/<0CgLRHeK%;:$Sp-a,;mhm'9-ut#eP/'XeT--Gq[3hHFK1cep/K7Da0H\\^](CAF^(N1dsD8
%BU<n4a/ctUWH(9+U4u.r46f'AK0P+.5DB8*Je/KN[.b^s`ka\D_H2K/5^!?`^`3aeK=KTjK0]^Z6/mD+Qidd()%6k/9PZ7/ABHiS
%qqO6;!L9TGAU>^A`:Q2$>?D,=$V\g)d.&fOdKM4aJ'8-r()16#1qT$CUIq^g%B#.!-<6BFakjV%N.*t>^kb,WN`N3#bNJjmQ.6,3
%`W7/j%X4VENGK4UJfPj^BC9@HeT&Yq4fng=G##lf?0/Fm+WpJj-96+%<DsXkSU)3!PjW+R)0kO9MbZ3WTPsl?"oqM5=2a5AUGY@4
%h%?j$.p>ll2Bo+qT2]&_/84pJ`h2'$om/D.9:%2BGNA)8^^:Bhcp.gFFU3U?>QPo^o&,*@1hD\?f7hVZ@B(q%r_U2e>agtZ%Dj5E
%&0c+/NXLSlGq4Kb>IlmadqqO1&6L@u#`Z?^c%JcF=cD5l>K!THR*A6*Me=Tb<YS>oTr;NX$pa<jaedpK@Y>7X=@XM?2-Hc$96<d4
%*#f)@"Lt@YVIAgi7`DI/O*A8"+iHI'FmMERPQ7!'HG,P"!,<T-*L<g@K<N9r`rQb.7]I5%h<IX[IJtK;o=cR-Y!Ej(^!!3ua*^Dl
%-$:_jmPQ-h2a?aL"#?N\QV6cW'Y)hP%(mK(rp($84Uot(q44!>FS,Hi1SI/g3mkarEK]fb"$ACba:G)7JM\a9%fcn,!(k`KQc7L1
%!W^.fdod^QDY69r\[*Cq[u5Q'b%);C]:[[6(s[d`B_7cL!G)7FOL`9OG/#NL`n1V!E7&Srp`2ps`'2.65T)j+=L8@&^_XSZ.gp0%
%hDuEUbn:h-iH$fW*;^oC;`6AT(s-q^[G'ki6HbtQqRl1KahQlB2eqJEc.TT8ZLErUaB>@P>q2V.4BZ2tb'.$^o[ieQ;Sb#nk\XYG
%fqm8_K52dAZ<"<lLcqa\CK*U[1(O&@iO4u+W1eT!M!6qE;bFC<d&i!3'p=U]0dOuMJq5$JAX_XQ(J>)o:F2I1B(r";DA<kn<D,4X
%c*1-VC_dE#PNXf+Gh1Z/d.gd:H'Etk*9FegF+%hqSY<]P2*%_@NK,<oF%]8>NC[&8:=gFr1NB**jP[_k]fWUk5]_es0#XWM>^adD
%bbcN#GpT_9.jkU*aW&ZcCR1[<)+.F-?%afAA!`EY`oROnX]b3.=`X>IG"$ufk6YSE-7,po$F5=e)>flXg'*<FOs<B5LQ\b$*'7kF
%gFrtfJUftL+iJ6H<6(!Ai=MU90p'5F%XEc[l2W%cK7e1QjVcnG42Un)9BUupAr=mUNoKXhW'dj2bheFMfc*u;3N;F<d^mE:*b92.
%qKJIATlaI_i3(l"//i[Joc-Gagrh^:AF&>Dlq0W?UHu@dhf5H0,BBan\W-lb7m#Kr],XAZ/u6RFUoqO!Kpo;:4E8r.i)m4O2E0+9
%B%km2g6u_S1MpilcH9U6'3!,tC_!7'%?<o)fQR)W[emI8,dXM@!sQskXIDM>HFb*c:lAu!j[i?NZ\5NmXmh9[GZ43JE-uFY2as<-
%kK2Q=G()2GYZM"hK=m<C8j.O(:/#ME%!@g;(NU&$W[i_bhkQ=GN5(s^AWkqrr,V[%iC49#Ut(+WL,A]k4fk>d%H)NI*bpng6\K@f
%U_+sSk9$psb)"7!Uk!!Ci0QH"#Ie+'+Kbm3Gct-b;@-1b'`4ERK#Yh_./Err:[*hWaqX>O>"IhU.7<%KVj2VE,Ft/dj6m?dC#u$B
%-^u%d8KSXfUreDW@6W"pWdN/78sA&JU&qTOD?g'V&oF,5.ZiX7J@cb!+fZeV<RF0B0%/H2"O]er=qB!44YRn$,=i19`H5hUrm7ok
%PfXsP3muYJ?r[PNJ]*:[<[N)OZIs*hTiOEA#LW93(BCphb7eK;3'$kYp*4t?SDqYriQ%@;L@mf7Y?^f4K97#6:40B(:,oXapSYOB
%Ae:(^[b4J$?rj!ZgOc:'k1g;YWmDUGV3icl`7^o3bt/!80b/!.cQn^F-2n/T:=-Rq<r^D>S+J,7"U?_P/9JOi2V^b@Dkc@'p7-OB
%@^N(*nWB@fcD)*MP.H)f2BBdY,X(Fhk<#D$:`;CH6lr-m&3LaMk0cE6,p,7jV&VJ9V0ekn5LMt2Fn#^K"NS-aeFMEI.ms+jc0hWF
%kj`7*T;FG@L(_I[1&77jechhYHn\$A;)f8dO?!3-<&TcfD^>g'71,T3a*]"a5NkX*:NT+X6@qtRF6:=q)##gXK[%Lt9o%Pd_V(+;
%\Y:c+^K2q.@3lmm;S%CA`iY:JWjQBc91[IT>gdFfJ8r8eU^h0`O`6Z<:em/@^+A*DZBQbDgtB!!k[*)3Q+<GgQ=>Fbfs@u'acBN/
%95?*c\._#/(/4e9H`iH1<sIoN_h?*W7Y%"\+M72FZt$pZ&nk#::lOI4o2e,#'tZ-l_AV4t[AMbY/a\CpC&aBn*Da>c.<.G=Y2?SD
%>[/ph3%%eZbnW=O6<BLpFp7aZS@]0mKQh_'d9aq[F%.a-q]pr?8P2TX8p7?Tm*n2KfcqB1Q1]uF#Bi[Zek)7rnBea#O'Fb-\ibj'
%Q[C&B`nX(PqlH$PQ]d>r51Z6`R[MoB_"OtMR5ieNqOHTl2$R@HcnuTPE=qHCMbDZ[3`#'<,Ls\Ik`tVNgs3fC\CejA3#>;JNR$K$
%*F3QXm!)++S%"<:hYHI2dtmmdgg/k>j^!gEpZV#j`uU\G]jP>nm\UIEqo:*SGY-k-!H'ru1_r#[m*$o9TnB&T*f)G'L,_5IV1bas
%M_VAXZ./u&-=VoCYr9C&^r6k7qfpm)icOXH9UYoP)E(lUY&ott3QObE/?_qG[@n(YD*?G#JLRot!V96f3Sa^n#1.@BV3r-Z9p.m_
%qX*^`V*t:VZa7osmIBNZ.@M+gX9VAVTpa'Ts%8cX3q8\*oHnGPF/"`A(STh`-WQJ53W+<aIZ#>1A0@,2'1h*!140k<`hiU\Zp!Jn
%F`]#qhI[mkC@<:So%G5:i@re^&64r":<SCID/o2N)F^:'dkZkFe%Og(,L;05KeCP.qJ6ld7*O(Hku+4bj+lFnFf*(<ULM>FGE\=F
%ksn/cr0$oojY(Dk1#,Z!R\^D!emReti7d?Cj2<&[I'!G%)7^unqchK7A3L^>+t7aKjPt#%Kh.GjNuT3,/j;3t%_0!a88[kA"u<gY
%U^],l`W'dsFFZS44?g844I-FLlfd)$b1sIHOB^suG996@PPOu/3=O1bWJB8&MF&,M@""4Lm8bU>#t):j#L/Bbh!ONL4+#a#B$2<;
%U;*HncRK=soV<*SEa:4n5FQ76QH2K.;>aL_80j3A)NH00`"G)Yeibs-i%1rPYJP622kOn59N<m1Df%1TRSUQU3I:*GN+U2eQ+G0-
%?1iP*IC9C<3B8\!_o1^BLg!]=OfpCZc4-!`.G4,kTlCU&=#H(KZr#:`Nau`?0]@Ad+tbR5PpI<a9PG/h"-hHB(Q32SIg6o8CM_F<
%'.?_FaSbr9NJU::ppFP&<mAO6jd24]:*ub+(0]]a"#A$tR^ooCZ9r(%OX9NA$WFP`jOp.<)?r<NUQn'1fXg#5>4taLWJVnuL'!r.
%+j[iDpp!t:d4QEfWE^?rFVHj4WH4"S9\*aI=\2GrSk6p6;]Nr]B9974oEpi:,>>5TB9'B/>0P+TdI8#Li<_cSq-]]o&T=9_fKehg
%>>Pa@iXg"%mVek\2cBCY;S.b8#>8^K8^5A]o0CF!_Pde+X<\7rJh'g4X[I,D6H$#q8aX*8_/aS)V.FbSEG/Y3APM_f;<]afOl0T)
%i*$>OEWFpLTN<%:&ig(njH')\h&Za5b2B;q\6iZU_j1>3$eW9<C^tqG.IbaN$qgqNXB[*3=S1!X8\*S>g<,-qab<N[TQqK>V3;B%
%g7[1s/fO&]i%Np;Xc2i.058lNk*acDpUHL<dPe4\[ZWP5mlmYns.&2bUa+kYs6Pnhc^(pM/"p4S9sf&/cL6Q*X(8:<k;uB!&8$D#
%cN+K=h(=8;cX5(8&R6JCf"i*88p=Efd4PTPjhV\7M(lb8R!^(hSi&MCO=7M^kd:i%2RjMT9D$!i7a8PVgE5:L#V5l!g%L31.0?K]
%F12&+>t:&"B6:T\!F#j7g/KA$.:CLNG-I6`71XWA!Yik_J`E'*W^Xm1"-?#e,>3RhbAFeEj&g=ddTtGJER/"ad+dH[cNQlOk)JFa
%A$]A,/@_#h!uZL<P9Fjkj1WF+X<*[cTY0;8F[&?FY-EV1m$QHdM/^(#?pPNY=nHhY",=P(p\=>rGl1AZNo)q]]W9[HMsEnPgU6E"
%gj#.DM<7,_qEuPT))8tKHCN6F<2>`_-JX3]#e$C;/dlQ@He:2$,21tSkBD5=&WmDj/A.)nbd&382[`dgD71P+)\>F^k?K8b+&Ua3
%-\p-\Q$j[<gQYeFd^jKQduG!S9i352Q/B,-i363oD4!/^M@ue#'Rgls&EChu%`\ir/W=0m3uJI.ddF8oR([#4lm66t*>V!tGiQXM
%_V>G@(3T3qX;iR@5mJ[@!aGEO[#f?:=&'=oj&F]'T!r[n&d>`u*5QK121[`T7p'@lE3)+1ecZg;(MO6H[>_:niIjGO<@LC.1Erh"
%38s*kL_6*UiAuO":un:_#@3;PMAptpUFUB['8!F.M0So3jlhU966a'M$DU`;6<!NNMY"E[lT<Y`mQkabZA0GnEM[dm&&jSnL(jZ[
%G[(P/L5qZu]SUX+;65'&F,1p4`M"MOL4`AJMFV:U0#\d^MB-NOp1\u(E_$Y3=p,eK3H2!]OH?lV>3L7rCHBA%D&1q`Md&fC/+s<J
%;:)kI-Pj1u#E)A/%aHSJ4->hnTdlno<;g)nfeOqAdnkXI?@%1MTbSf95uJK">OENGhL7\cr8*\Knof@f,it[?)-;"lc89ugpk0:o
%:/!W%iP`,`EK/[H>4ETjHbJ902'hCt81<o_U3VGe)OP]?KC<Y0GAFiS`b("rh7(/ph?nV76Xbc@d$$77m$#:M.I<884t5i^_EKF8
%PJTL4m#rPU.;';h9K4cc`)A,OGk=9\'qOV?WkU)i!3[H[TU-2O/_tsd+Eb6%F?W9(l?''P8er8A$e-1fSTKF)fK_B(@,arpFM!YL
%1DDb^3tsn!L/@HI3XXfjh7fX'nRMo(A:K[FEN^cO.SOEE8X,I[Nt=B^gn;#EPXq<!UQ634.mfc90'1KDUo?e%5.=>3T5#!f(P:;e
%96tnWUt5_^X.R!rUg2ZB_-CM]:&ES6a`&kTa($Fl=tlisM9#M:_Hi4OAp+'-Va@P<faSS!]mS5$"`YHh+c6hdlOO-biunf^bkcGg
%Y6J]m,TQ,IKnq@'EPQ"64.nm=6R+ZIr&O/T4/B\5bM[?644d3"[J97%:rDgLO4T(*%T!jN)Q*NCn6dP>R9`K7GO.,]BL'@iGdjAU
%_pAnGpls.%gKCI@_%[AQfoS'*GW/BN.G)I3*.:Q_/U"YC=KL/C#`VS6dPQ%h<pZOh+`20)d0(g4\&4%f8f1/>bjrTsE@3c;$&Q;A
%3pMAH%j#n'!Cp$K<i1Rr0Bo,1N`)u.W&]J?Y$fQ?_>)Lg#.Wg5"=R3&-(+:D-`oe9(.*-Ub"QgN^m!7gH%Jl3Q0+,;+BZ@*Z&?ao
%ODGp2<ChF<qL_VmcJd`CYDGJIMh.FnT=^o`fr@L`[R#]:gc:77.#&IUiZ:su6SYZ--ghSc3dfT"mO6ZE"G6,>pD_C#Gkp@QKACH.
%K7H]3kG-g:5/\K6MM+a]c02N?9.0&VFEVOp-f;'SS="8)_MJRH7c?b*61l"Bggk;cqQ<S$\Tp]X[nZ"1<preP&6-3Jo/aEdNuoL]
%gfD<&CFJX>R*/'-bM,%4FtTe+mg,D%@>3saFt]q_&#PDJYj&`i(NMLE?X?+?f_""FR2ieC"H+j(.1j"YF'3InjQbqoRMDIFc>I2S
%MC._f'+5f%i]_O]d1C:k`*M@C-i,97^Yu"L.,lcl)<Rp^B!)Ef!eaeDF]6"MIh3tn:rc6sVM#+aEn<-T@6t)gL4DZ3IPhEuGQs_1
%6mq40-ilX\#nSrh5soApTCdmQ-D=_@M<*/]al/FT[dEPm\r*bY'I,bhNmF?HF6?GFl<G4fq_/NB/;SM@<o$n4JInGFV@`4K8h#CK
%(\PZaGq`1USE-CiW4Ge.=,pEOgj9ug=*3`jm_@%)@m]rc171HmaF_%pJL;/&mo?(?cNFQk[5>\J&=/0c=*5\6""WeV57Xg9ZsEMO
%2U=GMn]M^Z@6Y7(a)kA[^$Wk69n3__*+;'T])0oe8Qu=3&:EaFQXrY79gf:83[lFAmtZ1)?.+S'K4Mm<'CIh_3Slej4Q016J0`Q=
%51*.j&KPHs*bWqp5_7Um\d-qoF/2On:n-BF)e]+Ys1PmaKm)bFBH-,k@:OWt>d_3A(=k7NCbMtfOP:"DbU#\IS0h`";9"Vq)9X^6
%L?'@QbSZZtj4\SmcseA6`n5q^4&T\SdD\bFm\C;TT(pe_bs5GARoYcu+\?'1)1IcL1W`^0.9T-B.B:7TlqprGHaFu;@V1S<A/D5e
%$Y(Ho0X/U7;UUD$EmRk+Nr3()DW/=X@lbUsQr:.u-p'K/-$LLiTfhG"1lVt(UU-bNK)!o[[WOQC0+?SCKD$3TNp"m#`o25PaBfRj
%k<nuqJ@*fTEW'uZm>b#M?@X99C`j:KiPQ@=B0]WT(m%c'R7"i![&uKg(Q@KGW2BrU_,atU?C7hG9@mLaej)>85FUegJ1I8!!V)q.
%6(T,!6*O@-oE51d`o,<#oY[i+J1D)Ydh0/F\0f9$Vai=Z@b?sh94B@G/"SW*U-u2)?4o;"O\TWucPt%"]HMkET/Y9@GshDcGsa1I
%c3^%LL?Fj['M>s4dt[Y!ThmmBjd]?BSmq-MnD:(O`*s$LeE[7$&SJOoKbBLG8"A8\GA?FL+*N#l0_K5$2tC4BG`7/cUX#_#NmZ,1
%".[%<NY4hV!,(bR@tYGS4F8Fsj.PWa9@t(Z@E'ZeH&tmpKrTg6a]Y]uaX3P@*oHb2#9?;0+RM`mIg`n'1Ekh%>1Ad_+,ppkV3&i.
%Q=aY:8h$`=Y5,I*_!o.R)"A0>h3XZCF7UG/GH0E)F(*e50^W,4FtQHM(T*`2e'<Y]kJFTI@>[UIU=:Q\QuHNOM*F&O^hpq8H8^?/
%gpeRijP!jh&"oB[d*6o_!68mWi%4q=2ZSdD+`DsH\hR0/A,u2Q(<(>W-45T=ON'bdm<snt2[^iKaBXrT[cB@N=d$GXVuMJRTCCd]
%\d4j1pM]E_Z=`6O9-kZ:A!oV=Q8_g^_1t$>W9adRKXH$1JV&:V]>>(?Yu39n6O0c)HLrDl9DTfff*!7k#@Q>L.o@Eu*/YR;,N@jT
%HriRBACf1j6k)c<#V"rI'@TrR&Q/Ut)c]AVqdb"S)Q@KD=(60\BDLmRXeuh,dlf+VA@qNm;)'[i8rO`AdC"/]\/;)i'Hon;,1+F+
%YaFq$QomJ^L=Ac[ih^BM16K'FZsmnVDSU]9G?dfY1Z]jYCiFW.6h\E`<)AFA,&h8O'I\4%PSVlpPE5:^R%L`A2f[VVk'hB?-a-_N
%GO\B&fHVK7'LjTeF;4_nGm]VFiV3>mS)B['?5/no`^]-YAfFp4O1>SS`J<C$Xt2aH`uf[R8(kC^E3.@jhRP/Nibu^ZEX2_'lM0/6
%8WqqK8NP4CeeFd`UtKKg]TA0dd\rhUSLC/958*>s`:kf3dVJ%lZ"bu8.h/8dHH-@iN"*lcrI]h#7gk`#%i/@DfIi%A%qE6JLC7g,
%Q]LP!*\A)FFjVi&*H>@HFs">`Y&Nj7O6G$jMU=PgI5mK&<!nZAoe@[M`d@ARE>sl2g(E^0GUO3Kr,o8Nm6I2n%7_U.M^&a$\i.8Q
%M!tINg3G*pcKHnLG45`]\3h<n0#9E</LFUl?IfhOTp4BI<Q\qt5uEo2,,fD1.WD_;PfJ-Yo/+$h0dn+[?28_+(2u;M0T[TX@f`K;
%!N0E.pZYeqI6%)j?>'(f4h4WMpZ79UO=T%fI<FP,'3C^6ikuQZY.1B7EF3t<rp]+JE5cjZ/!a+)n.ZKtK`k0p_,Eno'G<N^"A^2W
%;b6DMb<\.BInhsXiP^B_H\W8aU6+<l`,4$,KfRjnR%oJh:,Te'OQ/q:lk*ZSqV)PHlNd((4%V?\%I3PA[(9l9N[]<S(n88.LTtQs
%9Lf?s_q7;l0Fhd^#-e?jCl]1:,tXMUg>.\<N=&VT.?(iH9&1Vd[2L,5m8,`4adX!V5tW/-mZW=cN!RQD0NJsTZ4J9q?6``!,GSfh
%ULrtob+tuW`g@Q6>n,2^HStCOe>jXd?M,nK=$K&g?]ho[8A"-6YMgJ+6Wmm?6pTum@`)%j;sZ(Mh*0(VHBc_a:qV>8"Mr<%Qu#;(
%M]aQ/E+i+IB\0@&](?o;7XnM[krgg'K(sJ@n9$;p]8;L>#apa_%'o/XM7;g`ZQ$48eO0>8%cN>&h[g[lPJ\Q\\/<Fif-cl4U,ea_
%:._E*\/[g%'2+EE/,$nl<J><$,&gShZr@rT='H*G)krO?D;c!KOoM\sgg2+'j>YFN&J.9$[qoca/"-<)X=.mT=lDKkVBR6(M_[UL
%LD3(<eGg,,5eR+AYYp@41+uo@M!IG1R0XR;,t0n07CfXa#Z>PI>T#p6R1T5.*2.?4,PKYS<X1s*)dCAb0rX+u^.o.&-pmA"P3^Z&
%CQu'[M+P*77TsecX<ie5+n';<\[6GKqH>Y4<Ksd^NFOPcN&e("?6CGRD`K%<F7**dnMB%STk6T2PW;\:65#T\j<A*OTK:.pW1\uo
%N$jRn(:A%SS5^OI+ZYKj)2(e]PVJL,-^]Ol6'D&AGL&;K#tWNu7eR'Gq?hETcHRL2(ncci08+-aSGj'#4:6bQG_cWI[#EJT8LJ_O
%ql8E(%W6&Bkb;DAOfSdM8N19*>Qm;:^m&4SQgOPR>1q<2P$M??f[VkGQ_YF/Bad.g6'au8WZ([YLGC`e=&SsZ0Un2KZ9q\["`3tK
%)>kR,E13u`B5HucDI'*@]14F/=]?_s?]U9B6(t<@I:<SN6(9NaH]UD!CSNQ9\j\)0.,lN;ncdOf/RaX68gVrpU!N^U/^I[4<T[Ir
%oq-;G(VJX,StgnF5*IdG%t2`U:IXGNq?/D@4"EDFoUF9Wk5U_5&MDm7[iP.:(?l-Cq*/DeAi,JJ,JC4!m"RoSTTe0S1cCRhDqJ=[
%@[/cValcgh\0\m3BAn6K[9Su%V9cjQnjTcULZ=hN->&9VnhEmJ:?J*[$rV>$^:L3N<m`@KV'?RE1@jY15rieD[Z^nC%_?>XI_8Q;
%C8i/ae;[jnp9t1P9PNZFSLY#MShM3t2X^!`l0a2gk;nXt`,p1B5`=#"R4_.C7bcd2/%kR<Q;Lk\irG(4YhHl95G2kgLcKi8M[!qg
%_DEO^LB;m1^?C@K4:Bd5m[&e0`eR3_,"Y5SL21Y$IJ\[(/@0&$Q\[S((DL8Y<et^!Xq*2ZcL]15coPX2&M&PN2<\/O?FOhL[9a54
%>2]RGQPtJ:QDFtO,_h`jX>hrVA(Y<&g]Q(_UT=O76>T8n,EmXZqX]7IXG.2nl>0rN0W[*.(i!k9mMoF2KKAdZ3$Pr]f%/^J"lTId
%4rbF%$0J=uc#oonHIrQFR9OhO<sWQfiiN[ofP-Ik!Q!.Bc,Tko#6jQU('#I^G=.#[jr?XmSBNU2;1f(qdB'`EG8ltP$?EKKS@;pa
%O_S3f2@g3XpMYsWG,q\m./.Y7#I@fjBb%EaR>_bO^-K9cR*nn'@*B&'%@-%fJ@,r3lMcdb!<L!%.NDDc<L/dN-WOad2.+n$Z']^$
%Q3jon%2:6RX@u!Rk1q!8?3"Y[_juRKkemS]W"OoVf2[ur%F#S&>n;!!``43@[)1%<>_Eda!0'.!;%?4TIWp87_o9aNjiQ1/Y?lq&
%]'u2U0>@<Ohdu`A&"CbcmD[c1ZS.XmRuc`Fa0YL)h=`YYoAY@iSJT*.B#`$qr9::4k#l/n=]s&Y5[!IK(&)%[EL?_&4+I6:nG^1q
%oX@seqf_\*s#6>d^Vo]8J&Le;c$g)DV!6QJ/F,DO0%@L?&%"l=B1#C@]N#W?4*AQ\ra&J8Psq7;PKR(TT'3Bdd$)V@;\J=$(F?0P
%!l"kH%Ksf)cPsMY0BP.3ckgkcr/*S+e^1;Lbi$Ya,Q-eoWC<'?'P?UBJd(IXIm):.'tt3namqHRShbauRa0(bL*&Q1.b(B\mB;<!
%oM;g4*5u.6#!K)ek=G^$M?'hs7"qkbJ^:66(V4JWT;M+7Sjo8$LO-%UqQpO@h)>5\]'uDkR2XY+DJr!$PKcgjNI^g$Tp^t5'b*L$
%'pZnIDT8LY6O;Ku)e4]+k,&=a*OQIo.Yd0SYD:iucPa-QjmeksN70h#;&?f\qPWRUNn.B:c-&3e1[el^/%t<AX4q7dC!g,5Vqm<\
%qQsp=Fkc7I/XeVHg2?\!Tft&sU2HHKN79a0N/U"F(`ASF7c'(umtDuf)7!Vb5u<\@49.]Od,(W&[/%q(:%4bc0uC.CUq060a7ja>
%NSWFJRocXcgisaLHbGH;6Wu:&T/0TI:P6Z.Nq'K(2s2%((!"eoh-;\1RQ@gOZU@:rnP3#rB1)ho3^dU+nK(k3&MDRXW`N6?\.C7O
%n[,p_k$9scGhP<D;l&#bMXe'#O:mS<-$41Je*c%t`-=:6CF8Rm#4(p5n9BsM-o'=c?J.F[Y.:#Hh99`22AGcUBnJ8Jf!()o_L7,H
%KMLS'?an:lE8/2MlduDW%cDf/QBYEa8'KIQZIquOrY^38q-s#[Pt"S,7:gjl=3\)2mhQ^@T0Kio>YH.Qc_13:QcTXHl(.eNgWLC7
%pa/rkLXf!t.USINiODKp_Q-aL=kU=hY]8(V:/Ol])J6OMD]C1b)pbH1e=#dQ[ZDc-nC%t>2U,piF^8!i_>.^/;Kk,g-&TPtC^r_H
%,FSL$H`cUsG@]I68GPu7;=(4fAp$C/(Hgo\^_1iFU7m<kDWj'Xfl&NNQ-_'W/p6$rPHp@Ff6PJ*n`?sdjjb>-c@X6WG'9/JG2@A1
%WXO\nC!D\KDUJ#m;n+5L;YRc0X#t(Y?.Xma5TLhG(Cj=&]/m8+%`<7<cG1'lB4$*FqtWJELDTGni2WY,$!X*`@7(3mCcR7io:T>b
%\XqtuSK`H]Gue"W$mC<peI8ps][skmAafs5`1ST+1F^:K(]bMZAR5-BAMEJ"H+3J&o/P)dY:F&94-=@b&9\)VX?e&QD1VIY_`A1k
%pW)po^2mQ^(Wd=hGNZPl3Qa&qF_@jCrW0<)Q/-?02OgUY<V4I]mGG9o,1q@o`j73L\hL=GCn;K-G%%eb1V5^:T,Z&25^sgXk!?<S
%Op@WeOaQ?M#<Olo\tbJf3W6I7phrJWF"]/n,q:X3%a%'OW%pZGaoH'GD;APp]lkH+:'S;Wm9[.0FtWM$h=ea6[fcQ[00rqd6*/?t
%9#NF=h,rHdf_q^ji1\uPa.3X]j%^),^;JM_mn&ZEkqA@_`liS44R\/PB%D>J-g2EqkQ+D_7'BVE$fs8E"Io_\N=OOsZ`?3Qp(HVS
%4tm4P:/XQ>/@2lN221k5=]#+/;[tUGf[S:`f?UPiTUdkLRg1)B*dk\G5f2hJm>V=m@J,j@U$Ej#"^U0*.a*^Bn4:T^>Ea7\q`tJ3
%L5"-4UHX?g'"":0=Tr$Z#;&&YN/0P8<XpLq2;<`c[.+&,E5(\>27LSNcs1Eso3:1d^LpVnN:VoKft>Uo]T;H/WPmHWQWB'qY+8k[
%IgEL[hSn+gQ92HAXhVq<#`NB"/F?qo2U=1Cp6LFC3a+qc0Z<Yr64PSQZS;MS+$/'B3ZM01-c@msK>SpBHZaOK+'.K=d(2mld-.F,
%9':o\RG9:U(WD40+;b=Ta(D09IJ]028Q/T&nF2K2cYR1"]ZLVUB-90,+XXhK6?j=_+p+!_Vhf%aB3\c4gdl"G'dQfBo?8Ib#^nC0
%-&&;-*3#$(e4D"K)%;H3l\^B@B\$oq?#'tNeDWD9s!CIN4@tE8.VfPmUaFf/#7?E"?bH>1F)e`Q3P%=55MKH@55Q8A^3jJl4$eq3
%?d8T@k47Nmm$HClMa_]/FS51Eo?.SDrbD-[=S3X2UOt;l>j*GiN9c7G5e%Z6h"001"Mh'3Pm7t,nkc#BWN;Rk6]d&Wd)[hnQ=[l6
%"(t:eZ-7Y^:rRYqS_-UCMla.#@[TnT@9usM`)`_#>>r%gc"h#oqg_TQ\4V/LL_R\T-FIqTc.p773oDPBAqNp)S;GLd/**Au6`)cd
%Qoue,Xi%+iZolN1[lc/ibY@((XYj?c<Fm%CD,uSC$Y74NXV1NZRT'<WPZh2OGrW4BORTP*NLO+:K3TL;C<9!IIAjL%L/Vk<l#>T8
%aej246RsWV2e"a/b2g.sf%BRY@WHO=@a0Q`R+tYCEJhBPF`Ij=,dO;2S!M:TJZrbFjDns3eLKQf5TCTk^_Y_Tk/+NX=Z'H;1ptg>
%/1]72p#.m2.U*HY%;%J_@0($2ZWcX]Wm"mP%"QBd<?3tpj[Yrn%"OHHf-54SX"L4`->AAh':C:$CZ0U?1fn?n9$$0!/eBC$l&l2b
%"I3D02G7e^8K!sLU^p9n$L9fN4Gp/#niRL0aKRBJFFA\V3nHP0Bg=Ruahg-$8u/bUN=6&k11CIu%mRVo#^J%E&psUJ9Whc>0sBl\
%KThm?H!/[8EingpP0%fd=\?+F`-DXn-eF1FT,O8(=Yln@?SXZ(:^W1h[lCdpQ=irfYKL)geK3YuRSnH.Q<?2TR;h7=8[JZg""a0l
%F]05HiDHI1<OngAT)Ts4>H2D[GjuV__:HIOM-B2oVG`d_M(?N3>:LndfhZHkM-?*U\Y%YDFh>j8%"Rk]@@ih%jHd39ntL5@>fgLX
%RMA#CCUpITN2U\L[mnoMeEMNB<<`r[G5)f)iGn!\T3GA:4Rfk%$`pF'L!5i0FV8_H.Y((20ZhPjJ5Oh_%Ofu+."rBdF2/oVbV;2<
%Uh)"\CbLu@"3k;R3Ygdk<JkgdUnrmlH#DESLZ'P5@!Z,bFr3o4-#4+6XL:C:(&+E)X`'m;C_W!qbuDN6<?m1.9W^5-J]#B$/j,k!
%6q/fIiVVi&CMSJZB%IG=2q;s,S8N@IE6]*V$EHj2jKeF#$Vmj^_eDt_jW[cGfG8bp-8u`e?u8nsPFH=KZIX<&l<4O#+)l7[(s%5h
%Vr?]Kg>Q;$31O5(kYW-?Vt]-=.$L,N8#ifVO$1#j%?k@TgRucfhVNj>[S")AqZL)-MHY6T;6a2b)9+GR4`]\Q9EAoA(/qJ@PGegg
%=5!]e<@KJX;5t%QK8-crAJ,K,Pr5;b\3</dR;3m,H=2#0[DR,b94c6o`C$\I/aU:3_'^$@+_.u67,a7TpGsh]?"/"O_I(%QpV3k,
%:8+YR0E0tf@u(*To=(p<4$VTMqfj[DI.bbNbC=t'4bGCp5mK&<hHaFHQ4k)MJE11gX`O-njRi4VbMu?1J,.jPV>h2.>lO_:94*.9
%HkCl\XR_Fsl'9cokDh$*cD2BRB^X-Z%cR-o6hpWEL1$0!KD=ipq!u=YJOmKQ*mBE,aY+_g7uTnf51OV@^V+JZ5CM1s2)c'2jESUn
%YgQGZk5=%bD3$:ck>u<:d)X-$Y,*.tkrmFs^Rq'%INC5RW:mub)p5nB`653>G?:]sZ_Qp4d,DTS"H.'naTckY:bK2KY>3->8?MYd
%_`9f.F*VeO[#5V&6i'LLIQBLFNksPMp/;DQ]m3Ri=!,1A]%m3ne=a\$:WB(o't\`nml$fIl\k01]7Q;,L0o/iO!HWq7UWA<_9GAg
%qpS8-,O#!soC+#(o]H):ib85@Mp8.1-V#Buh:WW7GIHrcn)S<:Ef7u#52AJI695t'q5<W!k48FZ`)qE;-XJInq8Z:oT2.)[/XJum
%"UQ\<GMk-tmJGQqP:F$X6^Ui`I2gDhWH.g1b5F>"\b?mZ&:REi4$WO'.<C,oR?Y6P*8Cf\F+DEg#Xd7?b>#S'UruKDgn`-L%9$T0
%cTms=2i)n6kORf3c]&je+mF'+m6A%WDa%utc[U:T#MgQg43[OmaaFAPs4uqi/rG+6Wm1lei:H(#Er1n2M-:djjFl'U=:4ihk3DR$
%PKhcipT3bkgcT%pNlSBZj!WouA&^3WiuUE.b8n(YpRZ]%^OQ9/H[3kN\0h`4b-h43NU7iiq'jH;(sR8HIX6J5oktpqlR`]Wrr$qt
%D,BLl9BTX!q#"iQo_m;mr&R7&59g*co@:hWc-c70d:OAq7Fe#(UDP^<R*;V[bscu.pA&`M2J0Do[li@=P48WZrU\M6g%JGKoX>g=
%_XXWsOqAhjG=r)[RWIu,MHB&P@JokU@Jok`b8<I6T:B3$*bUB*QcJF3)d02E7;b(UTk?2Lh0[Q-Q55LopB`rH;.oH?lluZN_%qLU
%ANU6r""WcDYk`&mAdm@AO'rIEqXk//eehZG29okDk,J0to5TrNK#@%?:HUeNr*aZP;is+/VRX/r\btr:HT;;^rm]0^&=)2.=F+mQ
%8=jig^YN5oZ:.;*UpMqLJiqBTGgp%n;*GM&4T".-9kU4f9(q%ZB$:tMZYMCE&EM<3T:[_g[bLg'iM`7>D*3T%)eM9C+#G&/HSl!O
%>4H<Lc0#_)2.d9o^'I5fiF#X.j-.s:Qk5!><%G^H^\IH[r:KoR&H]llWZf]HN'.F*2.e)T^([^5[/Fne?@,>X?9O3KdcWm%SjVYF
%0nYjf@&K"SO1\0[I]\YB)#&N^O-+`!77):N#ms.T,p-NHJe@3*,q+")k-HR--X9;SUYqb&r;FsZF7qh5jP:*Kg4.[6@Lrd^3e&..
%h/#;lcH`krDmlRuUN--Ys-BQ$?SfRhH2I.)Dg>f0ZTS']l#_!RrO>#&r-%\r+Bd"1%5^#\eTMLmNh0"<b\"Pt-@1%1JEcG<d7u4[
%1M,?k<r3jl%uqOGTp]q)g^O,JF[T]Rl.[W)gABDT664n^eM1ME#:%'Eg"uT2Ub(3.eb4H&0[fi^e'i:K4/Yk5a!:*HnpHBiFT-Al
%fUVrLq0eSD'/.#Ac,Ibha#0K*>"/q`GYFtTY4Z>2lA/l]_]uM-(u`!]*YZHc(Zum\/9n2g<9#r$3SSF@CfNIKS0!**4so8OW;9JG
%3]fPF6'+$M/DSc5+U?u!_TGY3XG\[0hBPL5I!fs[nrHZ.E`J`H<$Pq.E+o+;mq<7kO"[[9Umf9bm,[1TD#9R>lG58IbkA'*,#S&#
%5s'B&OXO]DEG4Km.2$3am'EIQakj5ok7EJ*Ae52WN-X!:-t<ml*FL;<FR\7\Z_%i(jak@Er->ftrl:`Q4bm.(0nVG&juLDT9X-!m
%_K)5l/;j6:`1i27msEAqT0k0PQpD^\1$?nn;+;_[hQMt&&;r;U&-jGrm7AkO+a@]20rAR4K"D3:GfmQZm,WGe_XOFj34t1hLGKO'
%g5Dlq_6_9kf_k.(P4Eh0I:.-J+nDfk`j.tRo^gk$@o$6>-G"@J\n3>$2?F!p?(:'37+Vp#Y,s=LA.mK@EG_>ig(ofmU1t?A],an@
%KXFBRS#G%/eXd.K$U$gp+4s_GLr=-5#l[d5^hF\BIMnF"1)^1FBc0XgW4S";3;Mb2oS:o?mr+i9-GUgn'dFn8GntlL'pKQbIB$.=
%B+'\!d`(q?q9FEZLR,U7)(%O%@oA%TR8<h/.@HTBdUZqspm]LcpD\>fs1a+<B$Vm.qrI*gqu5YmpG',(MYa^9>V8P*@8Q]tLA(EV
%VL?"#=B!Y7.I#%9N9V`ml;*f;A`#nNkB0V[]5\'rn%5STDAWTl`]ok5p6u8F>W)Dmpi#O_gAa=tk8upZIg4Tuql:=lg)g_dfSN0)
%mLsAY\djl1N3J<?]#u0/:'XgG19G];(j:T67:XF4HOOC4f<7t@\AmITY&Qp@0S_uB%tm$)(A&,p2a1,c^S`gT?CY8Lppe!W,JsAX
%RH,MP,&W7Edn[YlVr(hUJ"K);aN=H$NH"Ig%ROdus%`RNao<m@&j=$Eo$'_J3Ve&phWHs@oJ-/h-_KiLT_(oAhgI4q9g7GT1>V$_
%SUA/th<0-4o)AU<Qr?EHIf5<Kaha'hd8p'%,I?c-[@_25^McnDc[WQPBW!5mI(4h:YDt<Gl\Nr2DqO)a'3oD#cTY]RcGndOmuAdE
%CIdljX,H]pQ]K,.\GAb1Zu>;=ZB4IaKkrdhG2Fi]bQtrYj^PhbqZb!<m5HD*a!\WlJ+J_bo@**g2](6/DpC!oB01N>PNcm=SP>uf
%a`J;+i!>HbZCa:jY[jaGhN6!3T7";_gi[XE1bDo&WUS2n(s_gh5)lr!"Eg?h9X?i)FlP>3X='!%=gJ%u>#tDaUAZl&)1DLk4Tb>"
%n[r>r6/$_32MjX`D1A;$LCjV%KY<)MV16Zpc^aWNp!6DVY23oDrg([q1)XC>"b.o;96VLSCj6OJ$QEEj$:FNRam_&'?7*S5A9aLN
%09bAV+:Kp$f@VAZ.<],T+Lrfi=<2Z3$I;"BOD\WUfm?*7F5'Rh4:Pe!ZAF"*"OA7E`0`:GHa8J_A(^Nd'4VYem!H$pkB?F8ppf,X
%kDQ5cQTo:]G+,6<OXX$s-77mMoL*u^RH'NgBg8!FGQPPPI.<L@nA4V6.0J%kO?"AV^\noR4(VcfZ7e?URPoYBqrYfYq#%U6EV.P@
%UhI+Ai6Se]s'TAh&IHg]mHdWYGX`YeH+](#6nqmFHo`5d1PQL>X\u"o?M8_A^!>NMs1H%`eSqcV*_DO`6Hbs@c$rN!r%mU<GF@:M
%W=8.JbWMU=jDZGWda/Ii6[NC%05eeV0f$c_MB(X\0h1AO6CGaPabW7\G&f\p-rB1lfjM*?KDD_l(Qdc/51OVb*TK/UOIkeUP9&\f
%m21#PA*gT'>Wi0N`gAJSG)X,bF=0/iTlA`-Nj5cuI'R6UG)QO.A"\R"\JZ.K1?iGt5sK^GYrTDNS:5[21+#2Sn%0/cY5'F_da8.e
%o/t8?SqD`-bTIBb=["osF*VeO[**2$l-*8uVj#S,\Kmp':GoX:R>9(j5(4$LiZFpb'iod`5pc+7l%\&35&]$hg])K*4ZaRWLN_r)
%.+s)NM2%2hM";oFcc7`Bo;<PH1JF/->d>Z8Td0"Zc9I=l.9,]67Pa'7RdpYWH%R/P<+@215@N9=a"mSjFER-Al4dWSQq"nh$JrL4
%WR!0\acmk-&Qe>*16dfUbLuK+Y;&DspL(2c3<abh)U'?.H[-D*G1Z0]6S`:L%YYK[]"CTc4#D-_%VRV-+,1Y[7'P&>>-X:)0k4"j
%gc\3HUs2Wfgn`1hg>&LK:"nBRCNC^'P"D-i%bf\o$kJj"\\lhX7O5f05^dOgW$ZY);WfBL/fr?7c;!TZfL,qi5bT,ULj`@hMW^e`
%N>g"aWHA/[IX_4<`F]NiSb0JUT[,d1P9i]dbhdR!I:daN7OU5p?AU*qk*-tZ3TZNN#%VsNOKmDJlhr8gX*cDcfC)Hn8&'L/j.c-@
%S"l1jhnL4D>5N^CqrnqJ[FBOQ>TA%anD:@JOlJF.A[FqF431DY(9n@%leFDUc/)Yb5?!0Pp6i#]5Dl42#3dKk8FILGHR;)PpbO`#
%SHb#oah]P+dH@"43SKFT25Al$26,OtN7o(s.VI&A\k\=m#M6XtO(V0`[66bOI(@pU`*d+>khbi/UDjf.p%dn4rT7cT(+J;/,C._O
%E<DDa!6jT?:Hi*Enj'aS:GpD(R%?Z_-p&X5d.S/;NO06%Fe;c`>+Q9SGWj=]pb.]]&Y`"'L&Oiqg_4FF[lN^G@-"!D/i!8)4EY!W
%+[t$fLdM&ESnrd!G`29=p!6FsBA6W"d,-Sb7Je;D9et*A'A_H+2mS/K=t$uD\ab#!)a1Yijl\)Y9ucULU]_nZ`im"%io+ueV5M23
%0k8k$4sh18[bkR36b%Sn6Fo$@/,46gSS/GoWHlVWM/OF'"knI?G^=E+_rbL-VKI\gEH?,?q;L@We9MoFF509[]^O'a$rPl*ju?r]
%qp$2%i6o=qa70:Wn+krp2;j<M::tRbH/g&OOJfu#pJpF&*$TkloC8cm3(T!QL,jXQf;[agVFrp;pA_5c&j=Fud\].5qbG6tDP4NP
%Gmt78L7;<if?cT\Eq<u/m?g>>'b>l@mlf.r/):+!R]*+dhV1PiYJ.\fXmJ'8G[AhG1Yk/OjiH*C7J,k*,ft9g6DE63//aL]AU9Nu
%Hp8pFf]RC,$b>D&U=oW-9@36iKDOhXATF@dm.QP_g^`$2Sg9!,)6o1j?l"e@F%5mL:f!&C_,et0n$a,!PD^fqJ*bnu?Z+_[RGEM"
%:8Y?0-@Qm&^Q16:7^\kUR]N^<Nda)]1@grsCgPDMflKZi^J8J9e7`Hc5;?A)BlF?W34L:0Vi/gQkP&I];V4@,^R\?1pHmT9pOXB<
%iIaYnG_5*hqNsqudXMULCJIYQ%Hjl%E!ijtS.Nk6lG5%_62I>ORn;J>cAp^h85rVtdG+-8c[LCF.#lJ%.:6n@3B7J^H26I3:YH;,
%q<%F4n'4_Vl*^?blh9nMQcZ=Sq')7*r7fC2="dqYO"241&kfro5P)0O;@r9Y[]F>2d@2CU6$JmOM6XV0d/:Pm)`5"ckMPgYs+5Ip
%"_GHno%CLYs89XRlkl>eo8bP3]IN5.SS*f$AlW<H\Ol/SUDB=Sc*8*-:mWsh9]i<+/JJungmGIc_Q'%P[`jB@Q<MA9H(AMTjk!aT
%k%0k?E?eULYL:S3O+Y;)8Q+G'DE+]Z=dii?<QpBTQI9`C!D&*J?eueH'Yd/J/EuK;bk&+ii9R\==/@JO!^V)hY=iZ991:V>P,uU=
%ROdESCA=B99&UAC'ZO3b=f69tctlN,I1R7,Ea&No8ujZ<jnZP_9C7Hr%`V)*UV:FcpWX3oW9f9Z1`I-$+5.`SA%9BW(6GGmdiM&4
%E^+^Tm8QLq6OC!49$IX;J21,*`,uZOHE@C*&O_%m%+1_1(qMm_J<B;'$rB0IY];eOC/>`JZk##!cn_.nGuF;8)O1,m6_UbCL/D[I
%R8f.'=XNaW'V3CT*b[DZMu`.d@t4dFId$cN!K_]d@YhU8KQYb;<mtq&g)X"2!3NPPOnKC:(]/bbfLhRO+G.HUmA"<*jp%c*Vf"9:
%B[V/ipXg5$Yk5n`d/HlCG[.^e8GXK_FgHWgZd/0s@;%A8s2X"3LTJa^Fos89MaCQ;R0+b]OWFN,[WS"[BZ`YC&5_^ULNcj6k=M(=
%@?->7:*EI+1oh?II(9DQ?Z6CeflCsD__#7<;X+@'NC)T/!in"4G.Fd=2QK_e't.IK!maESW`WACMe**_fR5CJH[Z)4<Aek/f\5Ya
%#[gUFcgr_i-!/P:k\%BAZDoC,EkfJK.d(jIR*,h0#meV<Oa%=1:oin)$O851%oC3o=Uu'o&kS8<g.Gt*Gt..mSsV8:!VAsbeZKWE
%("t[@<8JR$ApZngnp+6eGmp,mO2/dXl_pXBR"j3YOe4)[E\O$r'Gr`'qI49_lU5^@(n`9!FTU"(1u+)5Q7?iUkTf"IQbtJ!f9WpQ
%ZVI3bkGG83(0ZucOoi2#0uZ6YBh.uJ+s8]HQ@MP?83pZE:LVr%iYG?S9:SBNmF<LFdA/0+A_Q;eQP:tr.*nQ5L*_]i.!&O7$EL^/
%D9tQ&"d0&*YL^[aK?..t/iM:_8hG_\5hmE6EZ<,7!7`pLAVOVO1S'44BjMC91LQE:+.=QK*>K<1"M&Jg/HfLi'_^nJ9BUHBPULdd
%'HS\1jLNOpb-9anPSS)^Cetsl+=I`2l<=^Pe/SFMUVcNl`EQ.Z04X,=MmnBg8YC3:5CfcE]f>m$FH=b7(Zai[8bJo5hASK!Wu9-+
%Pl^(Lm6H32UdY.Ba6i#R6_ptre6)\3oRp.JJqimKMj*3$^&;4T9`'mjA;V1i_*apd`VK=D>j2[Ac%!Df3>RnTMmoX7]m]^NSpgFb
%m-"BSPqc.0#.:J3e'm^Gm+#pW3VrEXc,F[(_7EOpC8\XRP.nY0--.-m"B<0D/?;@D%,k@o\HCE:oq-Adi$X^&b15`Tbmf>C)8i'[
%IOg"cb+E4TQM_#jMek:fMa+gBT5cMj#G6Ac?!B(=,3?:N1g[\9nIECQfAZn\a"RIAL:ZsGm$EXTn];QDgO=i`"8W(A6ClWMD490X
%5g4]oTF7[5\BBao^X<Y"+L-!dm=Hn&pa?haZ!`FtjY\k"%F6iWl#P0tU&RPb@qgMo;+jAm$O2LRYQLIp$lEq\&bHMGd%#ZR)^\AY
%f`<aeJ<r(]W.D1T`7>uSFTah'KeU@8#d%<2EEi@o+\NOn9,73K[3]<jAB?$++b=Frq&#GZ=Z>;8dQRq=r#(2"q?in[4ud66-P$[c
%A@NgBOk=^:7U?;t8Sl1XHppro[0cij\6p4AJ3I\F\-_E&NiS./q)Y=3[(;<*^9C3r&nb?=UZJ,o^3uto#dOY*:pl1e);nb^#N[M)
%B6@'*"1L2O\KQ!2JC.CY+]oFP-@LJHMRjS.S)-KH;a6[a1a!NHOT"<uEHUjsDMp`+Frthf[Hd-;Z#Ph_$JsJ\*a8c"QC%WuOtXSe
%'o9jX>g#",q98""2?+#`i=#LQPouDtG]mt;^/X;39QF0ckkam@Ih,LQo/T>u`UH#5f@@AP(.Yi`c=6]mE4P*H<11^&5al-lJm8Ct
%W1[8t3X]triXe^bXH'6X>DP#5Y&"jf\JnoE#(2jOj=RMV!IZ`,;kUfQ_&Wmk&GSd&I[,Q*=FnnR1LX*L"si_kG40qs-Y\^$Qr]Lj
%F"m#(c:D8m+IAKiDGCFTY&^i.'j5K3K']WN?As:d64Xh;8bCtoh-:E48RK15$<4l)fYAcF=>WN<=!)oS^[trcE-liuln@7e?iIPu
%3kmY/R1Yj!(Z]pp<87?<Y;2M1]g':,W;FqDkQ.[Hq#&tAD=b75/TgdtSl,:65<P6kn>St:&6I:ai_"Ec18#Vd1aFb8[\3OC:IG,D
%7hi[4\t>e\frbW8JL"@qE:V?BkmuO,pY2H9QKS6aF*;rBNJG/Fke3ZA(,15\K'FpujE(T^"[=>^Crt?-&X)\Tr3s"(.fKOG@e1>_
%WiX@$3l?/UOlW0P+fb`#%GL&!_&No0VI]4!5HpqkCQgQ(.+4oYAE6<OIX2kl'ToL6Oe%/1mM(b`RfqgM!<qQ^=ol/@"lt\7:BGQ6
%6mE)[J%^)cE_9pn&0"V7c:a@d3sB/>,fm:u0$[nA2._,H=$X2:Eb5%V!>u**)]K+)A"V3bOKWp>3]V#=<FZ/B9?+]q3<tD@WSPpC
%5@I:^<6`mf%SLUmBBqTBh0U&tCgL04^&#sB`Tj`a0]C-4,pbo2.NHJZ*/Z0Vc`.>.pa_QFK$-F$+M.gr78_!$BE_coi@D@^Jf^"O
%LXAYEZY30c`K!T64*2PVI9K<h)ZodE:Krd+)M,)pe)54)$IR9qnfU9kDF!ZA+?bAuP8l_dN]&\dIRjI`Z]Ls6k80>5Gqq'L_Xf$8
%:Bot'_#-\?R*3-T?nS+=Bj$/pjtcBCR%kVh@:3+B%;+4"J4X9]I`8bPHpBY#XgK:@VF>1#V+G*"00VjB]`U4V5fOIDqOsn_Xq+it
%IP<D)Wd%\\o1ms,JT*_SR3sMkQ]>EkhtM`W-dd1E1/EMm,UcGhk/kdDfN)SoqK)coIsUKH<A'HFrs>8q<aM"+gLq^8;qu5Qbu5_k
%iJmbk4.)CBl#[f4@ZW6@,S?E6+=^E!B<1\jP6DH>_:E0d;b(2\coYnpL%;n!GMS)t$FDV,1]i9+"Pu4&G&b.71'B&9I#K'D?t/a^
%W:rQ+SrCke'VD"]EVW*c7sgDk-i&%NT-sG[P+O,tq%&d`X&+6tX&+8B:L7MuIu<@N,3S0K:k#SDo!<ha*TZD>Z_d6YO:Y$B4Hu:e
%gPU8f9ssjV(_q<Mi].tV[)K/=p,J5@819Z5q-5-Yrr-Vp+=@J9Oru+YnrJnU1OC6a$:Wb18V2<m#uXYH..Z;odKt87mo-'T0RU>>
%$ZNS(_I:;4*N9_[iaWnWe48@iL.or$M^(f13DYhY/VK@?Uk!++"Hmk.KfdW_&MAm4/V&dQ8fsWn@ni+/1W\X;1<BdhXaluF;9K8H
%-/3!F7dop+`@W.Ti.Q$&BoWc]1K]G;38ObU2-^7XaY#Z3e9`?:?XB=r@9Nu]-.j$6mikh78S3MT)j7*97B.V']]W78k`\Sq<3&uc
%S$+C'_O=Dd6q*JB0?n*;@j[oHh"1"kEQAL<=_d8SM[9'Wb0KUkbiGq4.Vl$CRuRh%.nWY!\f*CpisD<4TA)ODXs)U9MqPnqNHM<\
%"+k-g$OP$S\B(?sd%bl(9s%*kU1'9IHik?Fc/\"Q]Y0!Xil8TmEohGkN>&tl_\[NB3.Pl&V:hq"jFo0Ag@%mNKrIU;0XU?P'nlbn
%/^tW[1+i'c1J66LLrOs$"gkFA2#+#:;,icLaC.Pp_/^8G)461?.R_*G"L4U2E!'4T&_nd5EibF%(?1)9is&_T#cZ:Yb2b1lr7%h[
%DE9=jSHoRNGD#%\>9e$2G[2Lu3L)/Pi82WN('Lk!Mm*^pcj+@W/1QU)Rg%iH<+'-U66;l/dok)(SGn$3hR'DE*,?C?5L4KFIrIFf
%=YQ\KUoFD$?8.%oKESTa`Y`YK2R-!&oR(n4qg0)M<Fm-0/D\c<pInB3[]K/cloI1:5`=9*7#:iQ5cNO]^+d<?^+c$oXujIe=Fe<m
%>=gHP6dG;#Lc;^FrBlrS!3;<Zq>S8U/SD_j,5dH:Z;9-hK,X!91Q`:F,*;pp*^A?SK^qO1fOJrPLgY.BYn26&QsU%GfVZ$+i/V+N
%bdKFD2EQrW%O9$@Q4bd.+ZLs/XWiesS5g[D8!:AChgkcTn;r_QlbGV<A>(6tP)-%C[*hoDD?Im;UdhsXD.d5:Uhidq+s6l<U=a&L
%e2m;P$./0Y/9S*8$Sg4t;M9VCT8]*KZF78c<esd#WO8EiFJ6^mMfZdk6Jb*a$$DcV`QBlJ'Lta/f6g^<5$&T`RIuqOd$3)4k._(P
%/3IKB!0Go?:W1b'E`*<<_&4Bk2N7OMGc6k5PVHmCr+UVW,%r2(iMd'a<EeS.).KiQ,GphB@]V9D6Wmh!@S%n\.GlKV\k`EGl@@'6
%TWM"ORX3Hb!UEQ4FIOf)-BKkh;pG0_05;+$[A)HtIb-RcV-$ru,$3&<D$!=F`U8Ug@;^[j&7K-004a:1ZB.gJ.*4a\_'uHVMj6"'
%BL$=aD6>S-79O&dC=[$8;,\T6])XUQ8reMm^b/OATa3du!V<Zi_IU-^H3rFMp?>V99eZ5`bSff^.)>bh$7!1`5$8qrLiM7*\X>3d
%@Ci+\iWao;0D&hX!Q6C73,n2QLTGsNOAUV';j!KFFsb"u,!<e!.aaK]*-Be7d0C&T6[EPm<K)>6cUU79>3O<(Od'JqgIQUX+-i[i
%^6)f6W*mBMN>u$Oh"GJoJeI%(+>u8/&YSSd+2^%.??B=>`c&?k&tBW!de%2FSJTN:Wo.ugGcF>M8(iO9-N<mcp`<T*^2s8Cn"K_f
%d<"iMcVKCX"SpM0$'YhM*P>sT"=5T8Z"B?4"SuM/R+N)\1J^><Pd#P[GNLbJ5@3ie-`M8]AkjX2GcNF<X5nkRonT[XKjL1mMS`>6
%SOMmJ#ika@OteB/@,WOrm3Uiop7;DK4L=#Q(1di3!`'^<k+'H,eq,cN\1+1FAJ=!JA+"[i\G3AlYQj)WA"NU:*PM;TUIU\.6DRPN
%$!*e:%6QV,P>jPb:pA+C(d$q!mTBm;.sNtD7uH4mYZf^B;ODtKTIc.h$*RZg,#gD+/EOL4+!mG*'ut$[0N9/'l8`56-;Z+2o?;>7
%M_"oujJ>]X(ZV%k=kfIIK<8-)@[kV<+U.MgHE9qRNXifJ=\`fPQh$\-^I\njAt4OLTG=0&Dpup#"3Rt-#2aR;0PjgnaA4\F)6IN[
%$56[_>b_52i3UR_nsi,.Z`&O4&r'I_S-R6@d&)*W;QRmQ\XJ":@A_jE$fDNm+YF*"GP8@%R_SM#pmTd0@([L*iudqB%T5:"NZt9G
%f#-;b6*E)lYqO/H)_`cV)(SgfZ=dJ\BqS;5$gr,d;\k6'HqIqFCrTm]qLf30/uRcrTgF&G!0'JuisrA(Qj^L`[s^!pd<p=F`i!l;
%KRd==bfq0anfb#[Ba</bnA[h!Q7<fRMbb$hCQ#lH-6Y=ZMhFWAo5s.rcr=+M>SCb\Qc7K"Y>)-i!#;`'Ql[$c__o7tHPI?@J3rKu
%R4I>>0Vplq,uLUW;W_!dB#[oWNq5LJ!ag[YIU,FS>k%R#E<<FsN3-?gP8I4K`g_Y=!??BD6FR?ECL=eH.81cJ',VTY'-nO>Eo7<>
%qZ%r93Cj@O5Pm&`UK"1\h>2nTNKS[mYgp"Q<*Qo\1MHVO[i`t8&uB*'!M?2q(?V^]Z;e=[.H:R4`l-4q-C'4[VE(BJX9:PVK]'X8
%/9GQD''U@5_L%l<lt!ISFQ+:1?sRN&+'-F(]E%)l:<$*O!"ptLNkG"^W[W^UJ^,4XfQYK;p[Ktl-pI`&b9E]XPDJ]f';0$%A4t?'
%84RVa=)ROH?\4*_#tScV4JiB`R&uKkCo\nfWceEO>q/*hq#(27Tqq=4!;oo`5fp6n*YJHmAH-=7oLBg7S*fW3o]5E!=iDI/LU8N]
%lPY89hEe+1OH9S$&6!&Y1J#-r[lSod&q4YBg)#-_,s@)7b@,moLEs\ZdVLVG![@^[:9(A1bSYG$k0&R$&9%0b,ElNhPO.Z[*\"u#
%Xn[1/0UjJW#U]7@@YC#V?c-W"4TrP7#?)3J:4?N`/=ZYR\@2<f3#Z:u&f6<nT,aKCbE6=V)AJ6hNtqgtQ=ci.3oFMk9-5V(Ms?nr
%8MQd-/9V%f0d:3I`oG'QlsD.B!0VY*-qmRJ%=JbMfPSQT\`*L+pkB4IT)>*DTEQkQ9kZ[@%U:Qd>BIT;!26[fP]>\+5ImjL[u<lq
%\+8uZ`F-k,(TY@>j&81Se>+^+0NH!)*g]Ld!^_m9U5?R:p4Wu%+>I!(jXOJt1PWM!&Pj!Tj"t3_MTuD>J=;]IXdg238,RarFZMIT
%QpE)Y(Kt7<0oH8a?7/$)*]^-lN'[plV@!rRCC.#!mL;$`=n$+`1]dAWq9eDC+J'J_Jr&)R!AY7Gr:lY=X";qVb2DfForc[7!)#(&
%*NKV&=i@P/r;%Z(7<J+:.h9pW@YoC:("3aGmnf/cG90@rHMKm4Y)&jWLo_R=*?.53Obn,];gK[[/1]-c+9lm%fo&%anIt&%&k7X%
%?m[#'3tO\X!*D#bH?r]6[80s&V:/6maU:DHUUAR'A!-U(IGFFY_"qO%I9*:r7BuNH>/c>JjA'HmN6_.%,$d)f49AS4#Kk4fQ\(5_
%NsA@E$]`5d!>4.r8cM0sN2M'?/PM[Gh+M4q$Nno7bE;RSQPBE*7aPGrgJgL4cgbQ4NfT%:>@*4^AB_#QbM'NE6o<g*'l$E$l>qht
%Q_4[4RjK3C^hShuY(#pXE1osiF0n=Z2IhFimq_-<b=N^4_@L9:HXU;=pKln`IgOmPhr@?(OY/c/YWcY6OX8uYAZjhQfsK!@$EG&p
%Z8-em.?tcC\74C2g=*LrP40bGWc!2kkV`\[fbuSG=n!r>KjM*k_?=o@fjqEqF/t`46-CA9s.h$>5UlV85:j4q5Fq:9r(2tB.cCKu
%l*W2_DK0?U<07I<n#/cLHiu-V;bntW^rq;lk!H/?d>_1spQPaF[_SX8^rkQOUj!]Q$_jQ/2coEl5o/`]-#o@m>t7gdW0KT%6Nn["
%8MW$9,UBf+YJk5MMCj#>e-DJ.ChG&Nb*CV(C.Y+!1=;/4eP.A;"!d,%5\&d$;ERfL(HZgj&:6"B_ibF%[qhmZl/VY3D`d)(afQm_
%Eio=u:<[Y7,Sick=LG*#ii*"sSNq1LSuiYQrB#(eVh=pUNW_eMEon3tpa2khKWL^B,ZTRhTcBo?G'?#!56dT:7@6fUn@gK1FET&n
%K>]i*nm,d[IQV8kAEBHc.H`2g4lW5lpmuT3UYL'2SBWQc0=S6ga3!GOk)63:l;e[AL`0(KNj^2;pFYA.5'58R&h%rP6t%uu0W:(=
%8=!qI)#P=AenNgAjOhd'<Q3=bknJ3l%>d+.ok3*GaFeTg]nle]B4$nm#MtF";_OjY<e10ZNQa#JMC;hjB]]rMOpZlX0,EQ2S7kJS
%SFknk"s^S3I&E>XhZeIMhZ>\_oP/2C#LJ"lE9;KSARhKIjgcgp54a[]XEi+D5[cW95/L\j$JPY]9l[=P/MM-RHn,ob'CK&DUAs5;
%!I$OM717-M;><8,q.QfWW#TYRC\at=qLTn-?g`r//XR<hS_Z_6&(PVH-GbL-lO+S*=tiXd/ki"H:`+^do0@H[V#"h+b4g`X<3cd/
%qX/a[ckV<MjQ]UtX2cLC@oc\O5*Y6n)S-ANaqe8F+5h1/iO-%o_:\l_7H>*'3:e/[8LUJMrlC>p4lW_B;?2CI?H`,F2T9t[9?m-s
%'oq[60@.s%FR'_'QWkskr_b-:PS7Bc(YJsm:pkAW,@"Y/9>4b`L+`n;;m5TbEd,77`gSfS,O:!0Ll$SG1:b7E&V8p,@V*2KM?\-q
%gK^GA6d$Ra\T2dp==m1"DNR9mk<KGsn:e]iF;)r"cBad^FqP:+b!r(;E,n3gl^.p,oQ/8XCW:D^j$"d"IGu"KhWH&g>X]eS2HLr0
%"LiHT$1qc7)\0QOMgTE]a'l,%31q^^V-$g(&s;W>=6:jVo";f*kAoC3?89IJH/$1EHs,sW]%Q62k*D;*3XLG2Ys2XS#n6Cei,AA/
%:H,@6[`'iXksSQ6:DEWG:<1O`L`!<NP4WWS?EJ0dd0ZE"qP\Tf$o"Lk[pin_L?&`gFdjo2Gs>T;g].Ac'npPQ-("1b?8`$q(q.CX
%3*/,L[&i"R3;e_P_';/uV0Q;CQS;c2f_?s3Mr_\%?5P(*:+1K=Ak$`gb8C&+G$>r3O"SjoC3,*FrG/2LX)#j3+'n4j.s)F1Sl]8=
%#AlSF$78uIWh_TT?PneFgh_%sZc-OINW\3Plipe;&Xl^c7K:>$<^nh`ClFG:2:Y.d]>da\j"f^`ch#*fhmHf:s'$0T(JR1cd9L?/
%Ac]%gm#FX4/nV8l7Lt\'lS^9S.:h0PMXt.rf;f&IM%-uM'O5)96MgN?.d%Tf\fHRC:D#C5Pu`5tj1b<Q9&U"RPAEqPTaa)B6$`"o
%DcWBI0\R]k#.\L^(r)5QJ;VksHC>R0"qlPNdGpM>J!u=?Rh`L`\/p#X72@;>Pk*YYiJP7)''9`4_]bei/!?t"<`\F,*!ec!Z@FuE
%N0c*nV$Je7g1A\SX:E:Hl0_(,#q%7D_\@<NTOFHM?U_e5'u%M:5ngM\F+o1G:hW:kZ9\gn9X3?Rd*KPe]e;kb_XISPkS;YH=GB@#
%SjFiAq1oTRDn^6o=g$@J./Xdr!JD(\r4C8YGi;d(Bt.Ct&(I\YnMa)(7fHLfMk'E:g]sIo`6+p\!L/D1l4lf/5)(_f#`mhaIcKc!
%1=[)*;cFAGq?s/;<PufZ'M9/`lgt;bAm':I_(k,@j*CHYb#.@;3<mP!7,1_6-"Eag'S#mk;)]U\".^sZl(?ZuA"iYJlC_ore1_Og
%%S+V`g?B.b$[!Zl$eHTm^1E!AEAaq&.Hbcl_e>q_igF!2h?bRT4EVlP(PfPZR'.t?US;9tMZPdBK9K2*0p`fF'a.YVrs&otrJUb(
%.6b0W)k;S#ktb[t,I.dK"$N`>:YfD\\Y(cE][:sog`>pZmslL'M.rIL<G]me@kfTTZE6Tpj#nR<EN!eRQ"<0'h]I6m&a&nW@pDcY
%!XhUsIA*#ZbSW15,t/Y!^15I=X7OZ*!Xgk+F.hhPR57@j,$qm:V<T/KT(5VQpn(6X1(tZ]nIqY`cpaN?@oR1/DF'F7'k/\g=L`]N
%']HdI0-me[LPI%)iu+MFf[9kt;Y0^+c1anuijh0lg1T]G8>&d^?PWs.YL4E;f^`k+"[>OObJD+mH&_UI4PpfYFJ1Y9hrL#iecp9M
%DZ_O875l,(quf$#/LQAgnCC)B;&i(AZ=;#*dd8S6Vk1FqCC7m$:*mR?@jklS$8FfHjqT1Zfe]V\[?O`?aZ1\1(rnPoH[-7$pFn%)
%EJj1X72MYSq@#V/[S<K^"Q08&!kCUt,eQ0L'9'IY`:'BPE-25f``V(s3i,"TOk[`T.@6RHJ;&X$:PF"g'+8;Z\CkBt0Qk99![PAP
%J\T7V4ZrtuN0-Vg`.X:fNMhb2C^)Qij0mnZTT5Go(A>V`M=]Z$Qs?ll/MhU2RFiOU:gE^aDcborAh/?nl2LGDm,+46feEZQL,:kT
%np"^->eXTY>2tcnR$_#NMFfh848nl+NjQdqOdML>C!_W+"0^[>VRYtj[6[qf+^Gq;PIT6fN.M[a=XqsI>9[&e]>J:KW=K]>G^/f$
%pt.KWa0"dd'`9M6WX[a>[28/3J>5)!\K0Q;9q7.P.GHOM&cE%gY652-3e96iKU#jMjS1CPjP^.fYqSdT$nCM-c@LsTN-!JeN%FSS
%.<.6SJp3f_adr2-DAD4%o--WIOO,:O_uMQs\NkqdUClPk(>oSsN9$a$O@@%)K!]PpI3fK*U(!Cj_qSk2J1rsu!;JOfgdf[ZVtd+n
%-sf^red=':TV4C&>$<?X?djbo.T)KKh21d,:`:L!;tMBW.;buA9M\0J1;2rRojM7!:2:[kBB!0X(bWo_P<#Pb&bm>"N/gud_WFO7
%X<N$)p1NlmDr/[P07+VHmOTZ<+\+ES/`B]$`NeMkZ'rP\QBGd^U!mAT?QH,lnsp$gHp/faeWF?P=RJOLFi7T3.^V)CKm[M\66/0V
%%ffd8MC,-L-,C100X6H,2@NEJmaO#.TFgE!TX#ud`.c2$]bkrC6h-%MKaUl6[H!\i=NdR]*2;XOO\V'!cKd9A?m3S(@j%d`T2\Fl
%Lg=7^X@!V*]Mr>bkCiG54M4c0oBjnXhrL<9(#Nrd-&N+^(pi*N])T?>5\J_R"iS*Q"F76bAke2.Kd;t#@;/"W%Hb;XFJU2tlkn>r
%$d;oU634rL'X/I&.h`1/mrfiZQu!b+j\*-:J]mO1;PAV87J&Vj^06T%RVuTBo#O=;YR.8$3;Y.Al$a>Y.P0[CWm3\=fIGqA-r\@9
%3M,p'@dOIkN6P.Cq=C(7oC'hk=DI^YfS\-h\Ng0qNkJ&LG_[EoGg8q0b5*WU6qitAPAS&#Lg(_Zd1LBXUG"GaO6Ao%/:;>SToJZ`
%jMIHRV3.()\hG(cnMeLq;mi@d71/;)R)fAam\^UF%hqf%.cELnXI@2j(mFBbhBEt]3?AJAl-`*^r\B>F`>E)5,8\e7?$or*YkEb?
%k4h7t'bWTM<ZU>,dX3>HPM#Yli$@9nHNpi)m<rYXqsX]FP"$7m^dkNSM3"QtYY2c?V)4Qb$,O:\E.[1[b!GK58l9_jOY&q='"`cZ
%(3jrE:.7iW7T1Si$f2'JCqIL00i8[-YEALPaZIo(TR4I^c3N:[J3J4Zi4Vim:o>Un:)*&)SoL//+`dm&K_u*pE*>nV+\"ZR*RNH:
%l()J,I/7Q1$f@e9bN@eO+RE"Qc$tV:oPGQC2eGF6#l3uj+jqVlfF6SqVX$dOZ7OFT:(mHnC!mt:l(SIT!/]d3Cj$I?<g;&Qb?\'I
%WlU='9*##DYTcXL%8t0h?O_*Ca.Pu=M0gHM6d)9(Ep+@^)0),*O'Q5=9I"#a$4ildJY%!;i;lP$:'SSL9p[dO$<8!uM[>5]ARIMe
%XDjkArou+_E1+?4JV>uh5_qH#-M`s\8c>FY-;j2Zm7@+Qn_u2!J3F[dK(XI*PO,)%G/u-&'lB=.9)`=W_B*4Gq=%75fqZWj"<7JX
%''!RI$ik9%,Tpfck.BsmoB&&K%Bo]&nX_3a>KK!ueiXOdP_jD(0S84E1].A#W$.ORO5*?<S]j#R5K'M%`>`(C=$g:iDeh<i-=9Tt
%_HUmK9q=Y0,0B:eE0gHJ3"dMlPYq?7'VfU%e\<V)Rc78'%>J8R0/hf4M,V`/8?e;"UAT\9)0!qR5f-YCW(q<+#g#i(Rb'<(/)?+4
%1@h.ek*rU9L6fQeQL*ZE_3`%*a@4D4+f`og2P%H&BCJkE`-Ea@h(]`W'uK"<jS')(Ve"VK?KEq[n6HKH&n/AHfHn<eg#9&jq'If]
%MjO^7$WCY7BuD@r,+TYR^N#Up8AD5$,A7ERU!XLnP;V5:G&DT'lqM<6&*QT!N7TFC6tf2cVs3;CJJp*W,gr>WNqkjAm&/c_%.Yg?
%pC#F\JiX9OB*ijo6n]#+R,CBfW"=Pdj5NGB>%6YRn6S4mJ/sM-]/-B;PHEd_Sf=FfMAc1#jD4lHS>)\JYS_<CbVq5\(l^J!AI3dQ
%#pAQ@Q8)Ror!irR2H8k21"hGKX.2p2,1O3eF"!k%U]'56)LU.Cr`tpjm[D;*&:SIUI#aaW=c?uo%]VKe,9G\fr\gZ4/fm1M4[dYm
%_A'$ONppVfXLG:P%iieA?_4J8-Jp1AdDVtg3X,7@>^GKLk,RMYR.WDKl5=ucEZBkXBeT;Q+=7ua=F,\Kll_EBqo3+3;U\Rh`FS^f
%07bbH@Sd25:WYaFV_K]AU2s8Z;Uj*03hT>J7bns,JW>:k8e.F196U>pK3,g5nAP4dr(Au"RU;##25c.jVjHO/q6$c&cZaTRmqbGG
%SZP-C;CL\k9fQcmKI:Cr?U@d'JmO.Q4b/Aa?]QB@(rUfZWNs'$kO+;!N6Bbj=T@ndZSFarE1Z.6l(#jCr,I<ER5+eM)!hnpgK`jq
%EjK("@DGER_(D_>O1/IYX96(@BQXM2i0El^XjSu\kDPFQ_N.-Waep$sn]bZ?a:*YL(-$H,0AlKb5QcI-`ctE9_Qt`#CuQ"#Pe'i*
%kUt$E]<odY_1_MZl9PSUUn'O[Yq$k?r%Wge'nUTCDM!Q41aNgP?YWT2_4SX:daTY+d0UhKJXW>jhu&jHFR9-;D#6<d(rmrP,b4@Q
%';mK3_?o,i;QO1NGa[2gMjh2+K$FtC8d_2"s*Ym80P0@]F&RR$RDW$Y95oKn30ZXP9K5P:iq)c@;m'E1PjP)d(EQ&d/4ld,K6E.P
%`HX'dN]B#gDgHtW\(r%2Ni2'HrPK<C@Fjk"Es5_11@Y\UVJ>:1cA5Y!?Vg2/RiN57*c)m+M@n)D&)b!=#h?nU5fM6/('Tdif+TT0
%K"iuNq*5i7$&7N@Q+o^PO5*V<Ql7J[hXS/-;bV<Tq?<aiZqE%Q2NkP>-o?MXe3$M=mW=J0[`ZC7P9eL'AjZWBRsRnX!Z<Q`(X16D
%#\=<`"B:_ubb\oe>l`pQ>Rs%mqu-AhoC.Mh""j?EE<ET6$hiBUnftbAI8&I@qW3KUSpQj5p\`3qm68jDgA^[s5CrnP^mt6JM>Ml`
%PBZm"VqbU.pC<ti;"DMu(a!5(%TAmr^X2-#OJZA=O,o1Rqg#I.#=/7Q?/?V2qi`f50KI?'^Dq9WK<RO3hQTi@om<OR7_p;F'CqD4
%ZEYo^E6q6;\G'Vu+q',;S1f^+A^&KWJlU-*1ROS/b7Kbo\Ue6_GU4cG55SO=<<G8n8u/c<VdfE>UI8I'SB4T"*(jt"&FN`)F^Y?]
%3W>\/(85b[2'9S/GAdk3nWn(0q.qT/qsjD]>RVn^D+?)I0e:!9N@@;%";9Rs1Aj6Eju-.%L=0_M_M$>q,jj#kR;-pR.?3+?VV&Qn
%5etq:\t7]6i]Z2cG<?bZ7]0Qqd<,-9(GcE=>.Z<(?jZ\I!:(.0al-7k.\5Wp`LB+Zpj4.!oUN%ZPg</o$%t9<;sYTa+qMH=?4BPp
%S\YpPc;K6(6Kao[**j9R5o8$EE9/>%i'UUo^"E+a<i'%fm>68bAaWYY`/3U@i_cmP63[7f>Zt?Z`\hp*D,SJpK)cF8q/AOV$]U)*
%rS]<$kTMYJOq,45m-Ydb2`N'qe&khm)"bW5`\V"h-jS;^6oYg"2aW10C#X)3KQl4UgkJKY13YTN`GEZ9Y%_=j-h3sT!T%Y=o@=%*
%%$Zk<c[T`iRkfVj.>LJu'RJXnO:WHO+=Jq3f\]i`*An'<5N%WQbj8OT=m,!;9$Q[=H&RJ7mV-Mr2n/_tTF3frQ_mS@g%N!!79'u^
%7k1<Y_WtZf9<Y8#8.+U=J3JJoH'H:3]uc^(3:r+La"G#5Hm8??KQ?O/k9jS<j7_93X&I#0<&ZLJYa'gt]E6>pb1l20aRHj#0;l?6
%beG\^NGS)p/??aN]WKIu'_jeRBC%A0c:L/AA)l$(`L+rn]$#^4`l81l>8bR<NP<a%Km_*uR@,n[);n5X\;.,,p)H)=-`qQ<CSX<=
%0"h4Gcuf>9`X-^1"W!q59'o,4MVuIhk<:_8rF`<@IfJnPJ*6nh`u14$5@5.IgGgAu?K`8X01a&6:'>]D8_k(.Nmcfjpb"*STf_jT
%!\c#7X\:)BC$?YJF9:t,pq2P42la*[gQP2jK]5*3iG!Csj7KJ\h@OYZcQX`iP9bL_R[6e>,MSg4'8j3;^a,tD!j#lqC^Xc"peFtc
%VVg!1T:T)),@^drImZ(Pa22Sg(OaaG>c;imETBl3-tqPgmr0NcVa+([<S2TAVfEU_T:19qOai4L&o-t<*,$:A&h[%jEp%a0UtEZ'
%eA!:q*dIFX,9GG?*5ifZjRU/)*/l<U[-:MY!&E8iUt%jsQZ;:C0a>jGM83%"g=Z+r4f@WfX,^8$'9c15&%LXE8IO!=ip_tC@J1J]
%:/8N9b!K\hlc-cTIG([oTL2k2_[K[']qYs&@\VUsV@#qaYo)2inbj8_Yf,0UH9mf/8NYHLb%\\&@c.8S8tgMI=@ig?050WgV'H*q
%n=Ybtrr):+[Q<l]GXuNHFb8+uJE;h,VQ3![VL_.3<r_fnJ)378%?HukmF#_K?n>75j[TtKA!@A5q+n%aHd.IhgO4jC'Hp,WT'tYt
%8phVVSijO(KRC0%P,D*?:#@[(^#DH2m^X=:I>.hPg?'T,aMYSmMr\m(p$0<(J[lRT61`QEh_$+iR"u:qo@,OcrJ;4_X'+moK,BP%
%5$Fn(7)k;PciS_tb#D*J@Z<Qp4I2Mk#T4L/7'5npC&H*<=X.?;$#!(DLNhokRh18i0s/c5*ggMlqG>+c]X41-W>*Tk^&<9eoR7*>
%JOoR<au5"sU^HA)Yuenaj_:\RE&rOpltsT`b:50S8t6piHhH:P^^`m*e(`._q%[kPHr.thrtaNj]9K.%G3_+L8WM9l@VhbqJeV4o
%8=AK.]B/r$(?8Q;?8<2JjgUi88/cZ?N4iRVf0Il)(l/[2e9Jd^jTiWNfa_j%4$*OkECE&!3oqmL*\WR73L<6k,X[=g`mcbs<\d#d
%LO(G*H;UX#].Of/H+<jXS@/)?I-30,+31$;K1TefN8PNKaF/IkDoBhMGk3l?G`ml$p<,1V#blc_74#t+i9X4>o5mS2^grm/TW/jP
%LbaO_r[G0n<-<`;#sl$V70JtX\dUIrMOB"2#Qc-"Y4dXKo)0f*0EZI\U?=]>1jqlRd50T3.FL#!'asYMe/tg]i+7HRT2Hkj7[4qg
%jt)\(GZXS_nggK35=X6:Kkt*]gl`^r*$asrLT&K]"PSJ&jPppX7u<sRE<%kY/8,)KkGT%BG"eR=>]4n=_HD!g![Y%n'RJ$'6TB%^
%+oS>Bq6Me.KBN8f`s'>tV+/^N)j_D,hi@I$ickVbA0/X-PjS##393*;Uf@^cd@M'H3_Cam3_D/%fff'FdBff%$<;K*KgM;!Gec2r
%\[kASn85TXN5=eYdt9(mGbes9_$[NF@^n&;%S,^up!&$7p_Hd`n[Pcu@XVs34Mt&D)-;j5FnFsCND=J*(l;P6UuICL9J>8SSE]/'
%*]hbCno:H<<bL:n]6A%![uc>#pM]+L>K)['r\T#FpZfLdehAm:in54L\18Bk"h7k`^VDS.>\\P4,Jqh;3Q53oh_(hOM/nP:2/[[g
%9H591BI%)Jc5=%'jr.shoU7WMh1HO(cE_/qWdi=R^JnW1hN!0?k&7*$`q]M]PC@F_d-6Nt2N*KrS.sZS0>IGFaVk&Cn8CDEF85WS
%rsO>[<*d(a:oY#NLW?73c!L"?4X`H6*4,s[0)Mol^Xek0D?gI3m'tMb<VKmd9-m_%)jO&lIqupaaf7UFfLNYA4L;kgWn^+>gDjMQ
%5Z*0sk^>&6jZ]QKYSX^7XR"F]ilNNtTMKp=f>iTZX3FtS4n*S"(#1ot;efA<KDn)@8WBI9LG38lD(6YpED+%[4ao:]>lZFoS33J.
%4$@m!rs(_Ss3`iMW'#F'h`6;t2gKe-s-OE)&O3`!_o>a;Mc]D/?[D.45@e_f4H^,6*LC6=?`/Cna;N'=A3ltCK'B-Lk2HmiglB;-
%_EZodo:J`$e!L54O4aV2FK+>d's=lqbg-5U!in`!.Y<uW-SN=CZDe5"_RV:(<CuNP8srW'BTYt?[7^WG!giHt)iF80"gjMDo=+RN
%^\hU+;6U#G*dpC],o:L2oE;%Lid[p/g<=L&:hQcic3tY_/qB@YeW-,i?AY_%1#'cBXq#VRD%8Y0>T;NM,(NRn561<WF[Hi^/NiBC
%cRB:(5:F#@"X7Z;!<H3SIY%r;I4Xc.7U;V^bj1LV265.,Wncd=lR\C$9aNWt(ofS5;)_ES]K9l::;1_e];%[lUcl>PUbCQ%"'><H
%<@i,Y[lpR+n,n!cI];0f/1m2r`='5jAq4B=?+#.Mi4LkWBM#NLj(^5uj371O1ZfLkpA/^phU@)ZRQ?#ik<L?cF>6I$YHceu"+pNf
%,+#6`moW;%'j2>/QN:sSs4)"Xj(.pTl=(+$(^ukJQT"_ncG07i&^\r&"cH!sqceOMoCsC2rf7,1KE></lj]Ds+l7I9'K"dHdX&6B
%>]+`1VTYE5(\>e;!2#BllP($K3KY+FVu>N,00ei_68>qfZk'bko\WIo.Yk2'&<)(>h]B/Y]hu$DrO1PH[E""=@%_]?;n[T9BY30/
%Etb'p1=biPGN8sXc%D&dh.X5^0%3Uql_SfS>3hf'>i3L)S,!9K;gJp/\EP,FAKE+d;aAdt*V<,hs)(Vda^tQ#o+B?!-&6r*3dYS9
%$OSPU3r`^5s's6%8[b/Jkp0W=&,Kq8h;dW`s.:)`ja7=)Eb42hf$W^UZY=B(Rb]+uoZul^FAot$`kcfIl8%sh4ho_>So]a4f'[a/
%]M!L_ce%HS2-^+4H.c-Sq+'gM[Ja=AqgZFANW3\PoVVcUl/CU*4[Q?lnKaKB5@.%#Kc]@[Oq)e)[r]]l6_KjbiM]"E?[AKRD]kc=
%M>K&p.E>;;q+i2\X$NRUF81\"hWgfqp%\%!O)psS)"o&r:<!AbIk!OJZ&J_I(dF)Fs%MGIAotd9'cAACPOuGt;#%$oSu(Io2A]pK
%qa&)-f%;t^pV2224`1a*^/KP=g;"@6`,f]P_&RcMM<t")OQ1g'i@frXV20"p:cR+gK7;^1lMoIAT59Sdc^t-.XS^+si(l3h^L(U7
%N:-/Aa9t.YX%D.d%U'[bW%;G+=LfsrK.1^OX\_<DnCu'G!c/_?o,p=0RY)8'>/]'*?[CKLr7a:mH#q<#*G<IVWr:KiYf+AEGpc:7
%nbjg7s7gMZYRe<2A^EJm=`/DCNk=fL?eE9lTAWt\6Vo,nqLXS@e+dI+4K3hBI+`bUs5c7Wpq9Qh-E)%>3gT?1&X[gl9a/+%"!(Hh
%7h5=rM:F\l&-CqKgi3HsI+]K]Z@k-p_DM8a]FC&+`7jNQr`3s0!M0gop53.=#H65qZ6DIU7Ti"9X!!d@#a9I$GdW`@!(&(a0a58;
%0g8q=\oJCH6dCKu3(AV]EnOZIG"D"!mgRORc/8>4EBtXde%l`a3roifff-VR=N/Sc6_7)t)Xq,#X[(Ad)b$J!;P[L-&4aqkK/)YY
%.mmKdNWh(t-i+@i^U`0hrrq!;U+"3WAWZnP^JEnYnup0mo:#XXGkdoqDT63mIgQ_d)]G7(j_+/:N2b@)^A4GM>HG(8@4:GEN(M"X
%!gAoElC<?R5UVC$nqT>)Il."ts#ChP096?:pKlXtn[b@ZC&G_SgqJF3k';1C+`GWnG#$ApR5K>b^ZbJHo-XaV:^g'(Z1.aU*FNTV
%_?q]sI(a`cM^uP)5^fQ`D3%/'?H1:ir:=6>Qd6-;i>+`;otM)Z`?0R)a%gCgPSRRGG=HHLo/EIBL91['5O0+aRU@JPm%OU4HG36.
%4`;Eq!?rbUs,iG!moF`!#h@h>],83?>Cb.=F;fHW<8ACugV$E>(78-jqA(heBc>P@)Us4SB(^`8)U.8@[O)a/DgmqScRC2GI;(*"
%*&Idp6n1kX=9!:3#UmG*Rc%+:,3:WiWC;?7dRnu;d9'*b0NTk%mtB#8.JU!6HX.Ac.W)8eZrC>]E<aJi>15"UWR19:/bC^pmIjN.
%:Y6aa=Fdq%Bp(i.I-u@$"Oe<j14c$^a_`=N9Vb=\J-;0#N-Jp!d==s[Lu'iJaVMLAZAhl27Isg5nY2`/Fed#Sp<PRP%8NN#1%]kO
%Zm1%b&n`Z_H)XdYjnk9o&rGmA-eN]RKo0@-'7HSLUB/#%nOKR3Z7>Jaj#$"?YLPVWq?/OTgoS:(9XO+:OnA9OWpkLk?3Jp-R7&_Y
%JtpK^5"T-r$p9f<2Zrn"[)"kV"@Z"D7o%gD*X-Bh^3Z7:0ocC6gVb.I0t@%A8f6Z"c,aT^'V4(FYt.BpiY3bSZ7bZ]-VbBbIG)[h
%JP*0p.I!O@W8u>r1,N:'1$qUXTLZ%=W\Q%IF'7-4X^mm(JsE5r:$\A$0K\2/XtQ66`pGJ5G//]cGa-XDB+P)W$%&J)9[#T#3DV3[
%lpsX#rZ[#&SC*9!>)[_FJCZX;]b#Wo__Rd0M0i,]XAXjZ?O8ohK5#D%K]\"<^WC,BLhV-T_.-k"-YJO67;ObLQWg+`5\Kg"+_D9O
%&/#pO?m3iOfX^<=1D]$+Us-n3Z*>K4`R<s00Xe:<8-HG#FJQm0km3!l8WjMWWDF0_JQUAH,/n8Gn]lRtOWtA2"JL]D!W4k1?9^XV
%?#*WBp<t7(%m)0oh^DrJ/?)R!.jTpsRS_e=V[4ORA1Sp^Eqi;<AVm)d7r9\bZ,B?4Yiq%>_Xs5IGaaGME++B<IbE<;1lc8s!!3-%
%Fp;?4Gi]"a(=)M$cNdtC'_:<s4jt0-,<+O\fH[L.oRF^e&LE#g\\ZLCUgKHsqeQu9"^a@F=N.,73VJ%X)Da'i8oE$)9(3E$b]W7(
%6O$/SARI1>__R5B,2?(2!n``.HU>hb#W$%<V)9#W&Y`rCUrYs#`0:p+jRelqmU`D$ls#N,#,Mb(eM9^_&j@[2)*+Vr44clfd&gcq
%L'80p(j`e54/#P]/K->mgPQj0-RQ>j$FVs4Wd$#p>,2?&n<jE1n"mtlK<Xq[5S\qmn,jAJ\B.=F?csc;oVVlc$_*8TG9G$cobVkG
%gE4Pmg\%&oKSc^'S-(3On]/aJ[Wh)iY`a_I8OT0C)k846..`p^g`IYi01uB7B7*a:(c1\,,)Lt5^&n+#30bh)7%<7&TpYr?)PEj!
%]GMo:5nY]1=jKPeV@J!c'`1IDK^UnLHB8ADJkLBWmGq#.E08qu0h[e[S&Q&S@2]_7!48+9)K@neBK.P.WT=[cN9q[\/u\h2<<]g)
%;01rm_$j;Z)B1phVSGS77'*.cbQsek3CQauO>@_hCRKHO&8$Zre-_pS"8#A3Q%$`i'4&NrgN?1D<lCq"WB&_>d6)*/pA1WY",mU7
%c284'F'=d/b;$KGP;_'-cbXE8Q<n`pH>Q91E(U)Yg(`]IWYoX&);T86$YQosl(+(&^.e:LY4?_G6ZV&V0dQRB+0XqiS+Al5Ed`?a
%SP:s:%`=,,/oo1+(m?ZfX>,Gh0\Ajo+IWLE6a1qPpdWZl#LA5=3@&'>:(o=\Alck5)?sl@a>sOSLCc$6f.2!B;T-Y'if'Ft=BQ7b
%0r?g(=cchHA2%G\T(93+s5<a]6u8g>gDm6sIS6\0/<K!ePiKe^Ikm`<CFm6rhh'@t^W=AL?3Bb*'Dk6WP/d;.Oc>q0pQHQri;8hY
%+iu!]^DZ]:UPNT7GS=\=+?!\p\tF@O-\4rWS?_"/e[RR@duSaQ`:k"f3!#<VZa!s;`5Y%::+aX[dO]4S?U1t8R\<"&bgM8K3HI.d
%s*A441hcs2Y2O;2!$sZQEs_2T7JI+F2SO)M0dcLN`]jT3+<ilQ;-W072,KmsMNfh'C]=FIE885'hdH;CU7uY.iGXI3hfMQTR&:9p
%\'-:J0u"`&e`0akUVb2clNP&a:'6rh!_"<ejts%4A(Sh?N2IN$V7DZ%o=\N=`Dr1q$IC*5?\%($TGY161p2W0;dPCBR7P1oS&&5/
%h8b1Jd^$(m_H>h43L6NPZO5j&8C@p[K^WiWReagPa6VKc1i.AjUOl]($U>]H(\>i2S\JND?IYP]9/Ghaj-b:-mYPCB;s`fLK@)XT
%V^N`*2V[%Dc8.4<C"'0^duPobItP:q.-5)]U"Xc.?s-Y9@EVTo9'ZA)p'LuXmDECm(MAH*<DWesfc1tG$6/qp07,b$'$XpGd0PF'
%G_+)(j>58G-#O`Mj_$]<Q@m<g#Wph?pKQgYmG=eu*7;BA9>83T8NZ=%g*ciOp'!Z6QPTRCg?h1[`TChjkj4q&6LM$'7\;oMS"DN0
%Y$UG(dlePTrVKRn]\WUHIn!R=["TI4iMYS%KAgk=-oGB+[jLO7X,K7O0;s\^,<gfbak+3&hZTrc^Xo%^9&4s^UjXp5R!dGrIu+?s
%GBsKJ@56(P!G?T1UF3F;3>S'er\K\ra+5FH"(aYmF>/^4>a-th:B/?HiS0d;^#.sb$X!/,Jag1pf(j:75Q(to^HWE$mgYb2W/<>E
%k\tuErA3XA-M1B/c[Q`[%hJ^9(VoLS!@JsuK%^0m]pG&1*djd;`S3T6QN'C@p*/Xf^2-BUcaBS+rut*6.H^Ykje^/sBBOe3E\Cdg
%X8/)aT$V1Si#AS\/ap4:0",$!5%!udYs9CZG2^U;qd;CUU36HWciKVZXu/s4qTJ(9`$fj,kCZgIMIE0-%>=lEgg=M3VsR@Q!&UgM
%0U_Qg-Zesr\P))%\QiuhrpFe'TQ>QcHJT_:]B:dR/Tas;-q#NZ@mG#p5GPaT;&_Z>4+fHJ,KO#9\OR:]dTQ/M.LeJ;kM?&og)g5q
%V)]C[pR?ef;QJ\tajd1!\-f\Vc^G(Dj$TA83eChon>nhm05G_mSrB`upk,nJfp2BgEA3SB#-Z1e;WW;U00O4`8*tlRdKYU`pop2o
%Lkeg/g&%m3gs)je3*,R'lRdtAI^YHFe2"SEY0>M2[,4/r!`$+hIeubYf^@n#%@srL.H&gC>o1J/+1I$G@I:FY3CK8u^e(`e3pE8t
%8k4O5q3dS&;5*lbkG'i3EQJ3I![_-QbZ1DHKkF,Q[FXe#M9Z-pikOX\p(<!*c3`lcAPiF4OiZIiG%n/YY>K$4TJL?NGIj>BGTT5,
%IO?R]]@f8,D]Z;Z48lJc_>qAd\(s55l1$OL%Z8$hp!58iOke4WT>PN_NGa6\fmV^@47<ZcD9t9K3$*T4in8Sjf2LDcCfV2t&X<h.
%_Z4fBG'`Q(#_:l*0`u6cl@<h_n[CDg=Y.C2R_@:ZQQE#H5GSZ5_b4a:q5ro]efL?TC\k=PX`!<\?CC2hrrkr;"L.DjiZnMJV`blg
%[HY[`5%=$g[qP_IUQ"B]W(VJ8W4X6p3@[NZSpXF]fJr>C4g)GN/mommldT4CP*1sbk".Y3W)W,l]:7%WFMHXM27prbLK%]n$5.*k
%-FO-il\2qGhtPLi`hC:g9DRfEZ$B&3\*)iW:s/X[DX$DeI?Psbh+o%XlkU-V\u==hL6fBd\B=SKQd+)g03ZM?\>:kWrA(ScjL\p>
%N7XetRU&]bg#c(0`(*2aeEi>.LF8Y!IA!:(UmtV,!)u&t[eo\(aaA1%gi.N&A:;`#KU2e9`(9g.rr0gl@DA&EPG3;qI@n)VRGQ?W
%B-^dJo_;_U@:qEVIF.--OKNAZY+HNoqJuOjHC1NBjZ+;\AoY<PP$)"saP-4UQ`G'"q^B_GJJ6,b'!`W\\J6I8`>9)a'a^Lh<al-9
%1B9.4Grfs,=3L8K/U&9/'Dn.#h]g.Or\q`RS':u@n"KWbZU(#8cne3".in,a\<dkC>ZS[T0O?^,!D'RGV\do8f[:0#p*$O.TX=`G
%WBL<m1Uo<5@'O:HT\3-7hAW$-`O-&:Qj+h97692"I&&a(ae$(rEpiJll#Ra_Pl$*.o'D4F9)^ptQ^i?6)C9//]j4h3[oq1X>%c[B
%mk_2%/%']@R372UUJ<bsm\_8ldHO5J(p882W3hW^`+>3;KDsP_Gou`Ljb%GjGG\CZT'qHBWG-tobMA].3L-=njo#Z%lDuuVbJ!T]
%h3+@8X4?Zuk^7VUV63'ddi;)fR'DOdj!G&a]S\bX)QKCf13S\ek,\IHX?<0s:TK/kl\sLaNW*(]Ip%ci/-o(3KCen`qcLa/BH!*>
%!69Ag23U$sX_+aQN;jdG/nN,+dl\FLGZ!<LQX7)o5sBo"G#3M"Yl!_McMLhBhrFsAJe$'1rPMC'/3/+m:fH)=hCLu_VRPG#SMnl-
%RBXE'1-iWV9\G)ZOPqKcK<hl1J]BSB8Ul82[<^F6T]RC?>Y$J9f&bCrUm`$E]7:L2/A'053B4IJ3/bfiX(p,DJ-Rl-Km=T18o>kd
%e:k"C@9Nt%3+bID7bh)^`'%j3@fgcKA5UbCJ80I7]g;)?kbYp1h&#t5_/L/\1Y1GJ49V7&31@VUW'B7K\@D+&W$#>GS\=4C6ZZ]7
%e)oS!3&^@gC1f>pUN1hGF&Xg:I&c*S/G+>B#4n7Aq,rs+P4`X1f^I(\G`lX9a@M&PTEp@Qp1R,&O[tt]p]hJ&M=g@Q<KH9O@OSOL
%LQ*Y*o'$nBmrOm2.?aX/dEBtXfc7ogN5:@kZQH/hqYNtKRFUYF%U:A->q@PLQDKq=K6Db/EIT'TbsfJ^4U>o161RLlPS&\GY.#g8
%]n\>?pP[R-]ppdJ;>9DWj^YbYs")H-1L$s']JcfNSJ-OQcoD8iGW@tq2)C,]D-(`E4A!l-Y./q3VJ"ORI7h1p\[=8#DlQEKclR@j
%H?iOU9u@7NRXKCC2mZ;[R9*R(<br7K/XbnJWV?Z6\T?cSiLPHifH\j(]>jFi94RY@R_<)ZI#eTkl()pO,@E@kR:l5A'O@O2\a%)`
%i,J1.$oecE-RB1]c9p^!.8?'Wf\907nVP_?2$X$.b$akfrnsSuR=OfZrTQ]RXLA)iBY4(eHSDA\CKbr8W;q9Z0&]U?g#IObh`?MV
%[kZa1"5+`<HF%l#qRL;0FG,;r.7oGFGQ<*I3UFu^?M_)lXIVTB[CYNL%!VR(:9_=m)&@YW]ohXCo$pX])Cf#M&m,fWc>%R>M"A!G
%l\so1L,0<(VV7m(G+NauEbl/Q^Xk5h`LSo4Fsep[3Aeu7l65`_b'sB".=T0DlhQQ(VlMc*a.DF>]s+J'O:.A%JPT_Rdo>oJ6g(Ce
%2Q3V6A[%c8ou**fbgsj!Adkg)i]P[+rG?@p44?WqX3%[bhR%_-L9[@XAqF:?E\HWF$h&+S30\HOS*&9gB.\E7p>o^p^g98,)QS1*
%B.csGng+1*S&W>%0o2H"F3lOjVHn5rB*m-PUAN174Dsmc_rbmiB<t[V<SsNoIdP3]9?eXZk[%]#2aV%B\b'?%*Q-bX[juRuHiLa#
%#4/GpeCR0h"Jam3\C2ZrU=\XL]2B-sG=sW/kb&1(09,h\;6+!fcoG.5e896<h_D:.H$0CnT;d3_hE&X_5O?ol-d4X3Okk84'OXY$
%qM3aW3lBBkmf]t?PqSHk"DI#02<^Q9@^c*dHNTXBhTEF6-M.["U3.0'R>bd`.V,c1Y^fu_br7'YZ^5W&d))mGm#IOJ"2&M1c_PSs
%^RU7]"lLG9f6_eXrbPCCHQ@ahAY>U>%keUG;t[UmA_kj:ZWKd$,TKq000AQNc8.31`TF,4GC4kNheRDH1Yl?N<J[fGE<_Q-!hK=]
%6=A.$SS*oU+t'(f^,P8G5&Lj*?KKM[AhBDuh[-4ZZaYI/\h]XeQ57&\53G$peAN>rl5)J\mM*p9R1a`<Hlo1k^GgJ!`&>YX5cfph
%k$iFC<jA!L2k-QWTmjE-I%=]DO]r#;Zr[N+^=9I3$(,k$7CD7qLS/dAp(*H<ZsfH+(?G=f_7n\%Xo0(^Ba72:1)BPfO9nPI#X.-p
%Oqtt*J;LE-Id&<]PX!5rWcl#U>hQ5BI$hip0S0f`C#jF8i9?5FG?/%PhHXs4^:U4Z4C,%k%5ptBmiD)(Cc/BN?+=&'1s<dPk/HJo
%\U&2]`Q%ksqSBl4pGX1t%F/1dYq@+Gf7hdWUM*d0;Eq`3?!CP4=MDJWEqaC[2LHd:@$n@`m4/9GCMQm4g3g?B[\DNg[Ee(9<kVbP
%Gr.8,p;%[bd+0/fn(G/hU\^;f<W.+2DWS7?4TqF;Npka^=3hh.II1&-9D@R!(oDa!D=(-dm@$`[mE9/2hH0Dcjd-dER]gr(_qN7)
%j29Ta@JTOjrU0@M`koa3+Uga-C4$6==$QWPb#Z,ih:MB2X2h!hZ$e,0&G^^Kh@eRMf2`sJI)R,BUkc@=7j%Wtl,M?O_h3_GWf+uc
%CR*_pX$*&mlfQ#D%$Q-C\C4W"`Qo<7a849U9'*XqEMrZomcQZI[@8ff[J'F`q_,F]*\Y!+bnL$)\[-apIEY':BW5\NSSOkdFZs[`
%<4ga(gftiSH%0/RhS&Fo(N=/,H0\SK0P:.BLUBaXFn>7NlJptPHhr3!A*q_6:fR_%LZ6V$4V>8Ae[L8d!HRmGgV-S5_7`T\W<o%F
%*j71IhJH?+G3>+An7MRo>4(:keQ;'\dhoE>efVU^=7=mIs5TZ8QO!!Iao/7^W8IKcl`d2^k4Vg1Q?VJVH.G>Zh63F*15cW.?QO#R
%iks<eoqgfnNQ.5FD[/7\_&kj=02r+0M=uFIW9MKrqi)?bC$!nA,HbCc]De4FPAfML^u3hlSbr05n&kKZUK,pnX4<KsK.g"adVadW
%6[qn4Yoa0b<O]gZ5%IS'$`hUY<a/L*I&1$H7,S9?jFK4-c'MIBYQ!WYrG_#KfC`bIk-_5BJ+7>dZi93<Aad,dWpEu+4g+-CKd]d&
%+5U7V7L*k`?[mND*h^Hm>JSgN-Wt@Z[li=8S+`^d5MTO/+HSq)c!,D[?X8-"]7`>b0^G@LSX3@THE4;/(`^<;pE%(q5eE9!SUl>4
%]RBNL[@_mfLLtPjH-gn7n`F:^0[0*YeanJa]dp,1<dYGWCd]<3ke>a=Y:]4&I]_sRNQroF3OYD;d/2XK4h-)THcX[MQ91@O:n9gH
%gPpn+B=DWrk5!d)rFk;9]fd4fNS6Ipb@)_+OT:F/NQS.N5rc?Zppkr$ql!bLpr,-3(Z8RnG/'V4W]^5^IGCbADC(Ei["$H$*Lshe
%:-)r.2QC&hqC:gdN4)gF<]BcUY)Z3XL4OWWT@PqrY.%i@B.M&><-3BR<I]&'j7QUFl0`6Fm+;1m]sFf4N59'#iNRf6lO5k0=Qe\U
%*I6u9_p*"'bO'X8:4]:7ha/T8HtRTfm?SjekWSDl"i"C$^:c8tFDtF:rOc-;lKDU,\V%ehS#3Lc\::mZEpmGCZ(=()%E$tJHq3>q
%^jV$PW-R65I(FI^fJS^R8*d9h[mODAjmJTC)\r8?b-2N75IXe/p&1_2f.&k++2$V_,+F<qLf<Ie/9W,=gqDEe?.muEEAo8)7'qHX
%I^?NT0'pjISb8>Q2naaPIA;6n;=0kr#eqPj\-hQBorZ'tc]cWBIP@tJO)4c6Dd_j7[pJN@>i42^;<.VD_I*0_b`9sfQ.EQ7T_*l?
%;!$p\^nD"D?Z@st.aNU@P/]h'DQPSK4k0/iiu8AW@GSK'1g%M%T78gk!LMEhi(n21rudF].fPXN?YfD@CopOb^`51b7U.gXXOTX1
%qQrVL6M"$W&cU8upua[:WV\/'j^B(nKs@RWXs4j^51rFarN*tQh+rgh<23dT0\*DUqdE[?^5RE>Kjf/%5cJeOW%.uk#;keQp7Tc[
%%4eMhfkT).,ue1YJ:(At!e^,:kbXGH9n'Q`mI0tB0t%a5Qu"Q:!k`9Am!\q7&L+ljlt\I0\1olJ2b_lNZ.7('/_$(N22\0k^@Eu,
%dGo9&fIj6U_j:\Rj^Bcp(W3mhJ4OS.],/;k8=m4Y%\Y7Nl5T8kd)Xd\)Io^o^Gm_9\*!B2K1KKmCDhN-0['-&3ls)>Z.Wlb%E?X^
%%L'B"\\UEVdLaps]4#kLUTjX+7_?CrG9A-(FsW1N[4qI+n7ag4KVnd&oofX$_fHTHU[<h4f*8#9cRZWjf7,BpO$9N<_ZfZ*FSup(
%6-tY#QB(jo9sh>-[>(4OG.gnVSUs=;4TS^@M0%7'8AY.I<&HU#J\1S+VlB$"S_qQ4^jNg3W"(_TnT6Q:Y=5S-bmD'k*g&9'!s,OC
%]-,/OXq[09?!Vf&Erh\'rLge$Ti$m.b->CAo%WP$-!jf%;;YXB?*-58ZeI#.g3dfCcSg"!<Yk)+orU;Wj+:,6"t8bBA'-BjNd98V
%pQ+V,g[!UJ[H9<-4(,8YIBDiu]_0"Q%u0A6%bO5tD&S/f\Y6tW%suX'XEBQKb0TK<GhN#[e_Htr,AJiFSPIYQhKD14H!2/h^HK)U
%,X8IpW3^)elLrB`Pt(^620Trc..716BlQo"'q=[Xc/-Gj<-V1WlN3$a?'EE%oP[.kphCb`@a+542N8Xse.iDPHJ:@.`le/TEmSIA
%ZOO-aXY9%`_D(]&L\@M>iNqM2;J5/ueI`<E>fg@1c*f(a1+6LX5tfp?`f'.1c<X;S+RYaOIr6eW4t9X.Q+aZtf!UPh?5(P8Wd_="
%lN(M;1\J._H1^Cp2'AYUKL>(8RbU*N[Q/@a!Sa8EWODu#5Bf1U+FUZ/R*e3GdXG.?B(PfU:?1rDqe<aTrT7Y5<7-XbHIo[7dp4:U
%cFa2P[cHGb=ML97OkCYuN*:6(=/'p)#>+5kZusgPPb4:\n)1Cs]n=dO"KYO<&JLX&?[Hs5q9b[=_<*bl&l8Q]eY*6/Bk;MKi!WrH
%l9MMc\<8V@gqC/gDKXoC[_VsUEQC?IS0ps5gg-kT7E]Z*:gT/'/:XO*H7s']@9S$A]F<tAY#h3d<B$uT]GcX=08>%&5Ep_U^AD#(
%QQIf6+83A;HN1=ZHahbWf&j0Z!:]QMjo'PHQA.kYg6C!7p<Y)9G]\_/islt&p>fuUq#-J)GOBBsqGc[kr2=r4ps-9/pNI*';S7dS
%n?I9`=0H.!^bESr,4"VHc^n+JmAd+-Y.V@Q%(?#6*aLk1XLCs=hOkl\^C8O[j5]+pbspgJ6f@\Xce&_bUoE-g]__;%'s+50FQr>e
%pD*$t'tf0_GZ,3gl5)=S[lMQT'/M<HWH\^qVqjiBE#pd[cbu7H3)&fGLlL,`mWb'[S)'EVMHd*(C<,dX5k4",kK/0C3uJpn\c:g0
%D8/#l]`7X==M`CM[BC*ED82DrcR[-:fhkmg^:]BFY_VB=S,-Rh9$AD`h&6]sL[R-%K"tR)\(07e1HW9gSjY9`hOVpApKA=Q`,bJJ
%c,sA[l#+34r*XO3hNO-u-GhP)@jgW&c0):XFFL]J\,Z69OtLlqB3dO,+e&06:O@HL9R48F)$JRj$g>5L1O8Dg<r7Cn]BXJ9dA-\]
%mINnLK8sB3efV?g4G0q&iUd42rnZ;UEFTU1[Y8(Ph;tuPlha?&&ZQiJ95codSfB>+f(\oVHnD?WL-9=!2m2O+5$bkl]^]^61.!A_
%rq,Fs>sEm'9RfKlkpH&3*`ouIfcB/#RF]:HafI%p%2RFab-Tjq_s66pp=\)spI'&`8`SBkSIm8MiZS0'I:r6#PCr_JBmM]W)HOAP
%J=+odgis"`]V5eKh)o")DL_TNqe5/AKg"5$!p"XrEU@OA/-BN_=4\7lPg0!_69R^;W-\L#@HGn3$Ys19LZ[pNZCIlAh7_\?F94k@
%o5<mmHL&D,\Gk^NQ/-QFqNo4UE,5?/pY7fA1Pnc4cEGiYUW7`I0T#)Jh/NR;7iY1BCG-3*<,nDRnnOrc$MS/mK>"ZlM)RX]/?5mk
%pQJ@[\c/iW?W<UK^Ug"8OPNC'$h^X\%Yc!ko#C?^pR`qKN>KjZb(a$>\oN,N4,81EK=1@HIAI>4>^p"(^:3enYElf2/V.6?ICitG
%0A"eC^&$HfYEWd'p+$"I`09`5f4o]VTFP8lD;P9G=D>-s3L%(hC6\$#l[.0G^:l7nb(GJuZ,BoG'dh<l=u6+mkT-`g]A>K)]t8VW
%c!",4]pB7)elM424fQ(rHF0ulIl"gCb"Ig([tZ:N.tKK"1cMTrC6]<"n7V8)qU=^kO6'mo_n0^_`P"tgT&o!Po!iY@iBSRDbIdUt
%*+ibFIKJHAJ"1@<E9Kf=[GuM=;d]BKG.[T^FP=i\rb>Gc^j&%J^N8-Lju%AXZZu2CqJkoa[F$Cl(o"h2UX/,fcIU_\\MYU)<nCQR
%-3JI2`GZFeXmD))Fm=`@2S2OC=FN]Z3QpfN43(9]"u-Q5g-]74[r4*<eatcbE)/aXWsmRKTAM6]GI=i%?9c$trXIL,$a')f\[>=l
%mVeYVOhc#7Kl#;K*kuq/N-01R;#B&Q!j+^ZpW.d+W`SNZP=(`5`X&rsf:VA5X%KOEI(K?OI^mu[BDpg]aoaCa5q^sIEp%(C87^N(
%gGdL6kHsfeh`=E&`1OJG>C+U]$!lGhf_"u:OXRuKFp+FtKAM;&>Wo'bdHu8AH1,a$IK/fclI978Q<m+SJo$:8Xg_W=-0)oZ%I_"g
%DkGp)JpMM0oe_5.IVh3]JX]K:Dd>A^/fH'cHiEZs54624l]q7]iHA_id70Q\X_*Zr_u;@6/-6*+qmYrrBD"PW#:B76YJi">U%3%s
%.u&uTLC[64>,lc3m?NaI,.#sJp@\e@9@_(.0pl!:6">.^buktQ;"JO8GQ7#kc]mL*]:)r>c;tU]^,>ZR4cM6ZIfe)>U)Z5/HW8\Q
%]Da:hdj.*PLDO=E1;/*r"sr3Ng6_3HVpX&49S"Z587qFIL&l+=ru%8DScRPpX\NOPHb1X*.X_c9d/0$Ha8V9EI=JMBYuY9#T,f'?
%KV^iE3`FGYh7WU^IKE."_2XlUp5g=!3Ym#\TOjFqTfi`nUSgmpWRlsQNM)r*p%C!__""h,J>k\7:HqqWa%pX2\NbJ2#+gRn'ND:,
%Xjr,<\)()VmArHRl<M$3P*t`;V=COsA3cD9h)5*+BYBRF$qGQ2^=ZQ?>'sHd02@;U+]a&*:hn\%/aB`=ZPc\Z\"/9NXLSZ7gQ.X2
%ceAPGO<0d1s)rf>f-6<1>E(@E7CilhoPUG/G-og(9\VXJYVAp\AdENtnSi'$EF,rW#nhX$Fl0ipYh(Cd/%^#W5cm#Wh(&nd-YbTl
%>N`bMW[*Ma?gCo(\'3L]XDE!*mA`?13&!!mI!D(3#IR8oMdIJhgtpfhK`84.W'%gMTYQ*;$+me!;_TfZXMf&Rc#7><WS9,!o4QBV
%_kt,WbPWc4U'F\S?Lj,Zom6oKXZ`he7dBB`h)Cs5<kF9!Dr]*?Zd2'8k*]?0?U;+UbB!"hhMr%#$?'fOeLr;`CH0P5qUXug[=U>W
%kH3S;]Y:Ujp\]H[h#D\IH+in;enW$t8Q@[8)YN\/*c$4M"q'hD`Hl\(rl`NEg:;39[IWtPL\4)G61.4OIjJE`4?p#4L//>_JJ-OT
%C.kg)TVY^3lArA;HmK8jECSPok@4rqB(U+[N4pA":K//N4=bsN;72SBICNHF;ROcnYU2'A1@#22GFgq/!N'Pl+LlM"?EZZm=")AV
%-oSgQk?G:-T"_f1pl9ZU-`^<$JUZ5o+7o$hfCd^ap:KGKX8\I^de]<rNV2?mccNdud0J$u4FOTi,SLjTk(NqLAL4;tS?KW-oIG\D
%[g&kFF4Iqq&n:6SZ?NE``]EjZf+27+[-57]52EET6V#VF1rm)cr:T#cR)GD6r8pl7)5r"F)`K^Y2aBMpW`j*X*k'JFSebB@3jQl6
%rpH.%06FSrG&?>,ot59[n8KU2l-KGBhCA#imYrtEaPr\GU[O-VFRHP<YFYq0grgYkce`"4$E>Fu]4pU#W3KZiD:RF,bLt7cLY[q7
%Yet3oOEEa5p#2Jm52Z/;;R,q59VOuHHuudqW4IFprSr_o?5oCnDUoc?:Ts(+N]oj>FuQCeQ!4%H'^Y1?"^VZ-3O1f7?LKIcDoatY
%=238>%CK"pEHnhFB\n!(`C`"*Ci#a"WEd,W/F*hs@p-S?mU"DWZEkHVWSJ>_V/Hh_[r:*Q^ij([[C3MapRnuZ]('_S7K*NTeG\!Y
%qWR=Sb4@e6SL4de5$q7gn,>!!^0*2EY"i+Mq9k9tI.GC9C:QUgOS<BM<S;7CGO9>>``hdZjfo%SY2^0=GU`*JgbUI&oo'uZbeO0h
%dh4k,,jDS\(e_@4J,.+deLl\_V<o<-%TWe/BuucM4KOn;Q+6N8W6Gm15!a>dkuK^i:\`u\4X'e#T>1<ah#F!RVCq0k1%]4S2230N
%15Y)dFcBBU^LZD3f+[R\5S7>Mr.\:P'3S(a.4knG+$f=npstVU:aVC3[';6[$-^Eq/rB(o<Y9%Q8VqJ>O'1!5P*%5l0i`nT1kDMH
%'@X=)nX3*$[.r-J)OK\[?QN4e8L^K;8hH@IAYT:u/XRLLJaZ,]$8'Cs-;$24GEF/8`"F/Fd\T?sASP*o8HC"h2/K57;AfXl#+rba
%L.PVcM2AJ?k(&Mr-Dhd'e@C](Wu?tbUg-W['s>\_g]>;u8UQ!>`apH0o!+n?,B6,00/le&L2#R-QkfZ9nZ!7)5HJiEeBmROQ[deF
%4Vq!$J7s>P.D^ED1A+SqDBjfK0F=>2`[;Us.#Q3Q-4&7[Q\H&BbD@K0_#el8'&ZATZYgS</]/248hoZcmK,3Jn8SCG+9kXpR1pu9
%l[\4fpnTOXdP*5K`"^Z9gPJIc'n]6uDCG_T(*^pG:)ie-QDQ3tTccsM657@ahFm,8Tb&N!:L[=)pr8R1dVl^?HRC$'0`qtXVm,8>
%.8r.Qn7WCt(5L8bIM3>c,nlXS/LN9%Ot*?qkN&L96&_f<1P'/%W&Pf-$\e@<(R?b2IE<G&kqlk,:i8G#M^atuRf4T)*J2$#jW?/<
%i-=bU@JuCsqU5UA0?]P/7&eTRFXl3BF4f^t4`6=@qZfR@R$JM*Q!V4G/@!K=@gb`oM+*8DS.G>D4h[E]-_1qNUg"HQ4Msn&&a^q'
%4<Yml(+teI#"l9)Sg/pX,[h,N*nUZ?!)GHg`VA;/9T0H9cuBm1G`Q\d,S0;q/Ls7`EZ/YL8C@n"9Soa'f`:4VpB)lkZq7Bt'<B9+
%d_oJ@JG)ek7=LULpb8B"Y(.jU3"s:a)tBY;`!m\0,!#ck?uC4E,Oc@1m[>&TQ*;A\_#Z>39E>";)'G8>4<t+&PQZpMn.:'#o%XHW
%#s'c5j>@&=0ujMO_1VjaLG-L'GSVAq9UH.qU*.gVQ*`eAaqU0uM5DPCn6JS:@-e.0)3V5R)&1KBYfQC<`>7s\m:EP%,D3fVT!#9l
%"tOG90@DQ9,0:sWd7dS;,.']>:YlFLhiEoX,IhV"`\g!k&);u]TID[X"t9;l,6l+h"JllZ"/2mkb^nCM@\eiD>U5IqiG"mAcjjMh
%2\jsbRc"nVW"J:3]VO!Rb&=(4BcS<E/A3MCo5Y@fqj.Z-j12_p0diC?l&UX'Kb##)"tiaQ;M#!ej@TF&@bQ#8H^?K!U!S_GP[tl@
%C+b'l#te)D_8hYB6nmZ>L9\d;OMO?%ep-t@Lt&B`f[Q\%Q<?Ql>S54p6^.Y`MrFg%?4j;sJ57kVUH+!ejs@mUOd1Kfd>A+#AK(?S
%8e5b1">QVh3'jj6A3HL[a*GTK)k"ug-CE3ahjVjH-CE^:UR]J&PG!lm/o-]r?Md#(N[-Vj8(*u'_+kX.OD&#1!$6]K#-?<o#3?O)
%(_D"7O9('$X4`$)0f'ASkk$9&(u,ng$4X%1Y^V@%J9(o2KF?hrec6YjK3/E6m/!((!)'->n482%:,(/\C7P"s':K?fKU[^YCgs2R
%6SK,SV-"LF'=-`hLK''YAeGXu'<a_>,Fti.[3W-s$B20^202d]aItGjUf:!3[KDsKaT3f0WgU0*75Yu9@4[1K&hi,hJC?(@P]Bq0
%9\HW_XRO&G7i`W_[:9Rk.&j.%ZdRcV+lFXYJn%3]]8.jlY:'[]L]KZ(K2",48R=BA@nnf18`i+"7o-G]8ToT7<:I7;_b?WLTFBSK
%j#bSc1^+sJRni5I!`Bu8a@WD&9&((B@$4;ZB.&mJB9G&FARL?bEE?2BKt-afjqY6NjZ5c+^tU2!N_^LSbQ=<1K0i-2bPH?K8OUu<
%AK[<FVRlnL8EFM<noKnI.1Ub2b0PqN#TMc%a'?m4*:8;,/Mf7(Ok2!5lX,ZVZ*k2*+L*V6kh(uS>Z]D<IgVAV@j=namMd^]pubjh
%jJ606/;B-P->DKSPXBIb-(80=:81/JHdD+_m`=uspOR-8M#pRIa,d=Qm-6k3*XP:IR:u46TM%fu49Z#N,dF<E$]sS_'"$.S(oLEq
%$:."SYfGB4&.#L56oLSCa]KfbH8n3U7#HbqC4Ndt3l*l`6@e8KP$0ZBZm)nar5Y+7]b.4lTmi5&/bDXa/--6B`_LA)^l<u-./%CP
%Ukk]oXi]uU0a>5"jtA=7aXjAir12Un5cLj#&>>6;c3bXe>WUmX4Y;M0%O)!!Xb;TE3!J<9,d=1_!o*Q^Bk,3%mn(]#1(e=TK4p(K
%1K)'I+u(%7Q:b,*qQsEO5isfj*@?RqIC$>_UBLB%JW>^G-#!FR77CU&0QU$T2Q0\k1ar^]$#C=D#je?pL*J80!)*[.T6&u0pqSl3
%+If6%rig97WhZDF^`juT#_Fd70@G-E,bS?Jd)j?SFi[M"3a[JX(<D5o,Zflu#:qCf1!*nBTaXa$$Z1HL($uU7!MgTOLe'(!@*jaQ
%(*9aJ.=7/%@feO)A.qW'UpGC#I;>37HG:\F<VD$<%ni'Z1FfYi1HB*99isU+>Zk7(pa&ah&;BKqYmQ`4gC^DU3T*DIjFf@hAl'*j
%U*J#!@K,<r9dAUR7@PW\,='6;!_j7d+0-(1&2^p#nH@MrclPPD+uqX>X-@^[5SgFtdN#IoX\n*(Oiirr\7+CUm&M#"7+W/M':(="
%U(XAO=VQ(_%-/2HKK.WF.`/_$<oH\Tm'0FEm7)dp1LT$!AMo@,N)<<08?W40jFE+W5OTcrbS[@8@OQ8%#&Fq8CG8.FTMD;^(*5>!
%E@$$"H.2s:1<PI<,c8$&,0d*N/P#W!E3B$c8Q)!`/CHXE9k%CgH!"TLWUkp:G2XY!BZ1W4QB!MT2-3263$R*]-d!%4663a.I3j_D
%(]d4Y[n&O-ZAo+R\fgO2&=oK:bD[4F&<mVjG_%nq.P(u&n`cr[qHtB`9n_d>ET&*=Nbkq4FPIK",3V!<3DFb0b^'\j1\<>sNL@;4
%jWHtn/+BdOZ(%Pb>t;j?\L>UK?5mR!+pEK?3Ij(tD%<AEFaQ&VP0*j'-FcF%5V\o;2T1/VO&:d1"H[f7FO[1]>>SE)<s'rZCS:qG
%&XFPWMP),h/3C*P8e2W+b'TRZ?QJ$GkL<#*(Vq0>':<@TEWg%^=`buBl.AO1^B/8o,AIB6*<g++]gNR[oFjo7WB4[#drLBUAKX@9
%etc+Mc2(C[M1kgsZF<H93`6?+.tYtf^-i'<fRF$d!Bkt,W0+Wbkp>.Ra^XCb.oH@]4U->Y:_FY#&3qsIF;gtNW(^FpNAh00'/L,#
%&8sN]EY1+h!eK@"7837XBu$t'N@/J?G.(ce8<KX7X:iN>_E!4RMEKKdKP$BKhS2d];KG:1[ZV.@$Z$f?Zsg^[*"X-m9k"mXCFPoX
%BZ+N<DLe<djL8104=^2/=>6I";mK14e1p:A(/9#nI0p2lFM)l!>(bF*03"(3.("]7efT'UP,"YF%HsB!5^^^jfF\'RSQD-l"G;(%
%FpjPGKLuZ@"1VWmOMnm72CZHWKg71(5pF^`Ruubf.f;Q=^5.XaLa%$C$U;[BBVE!a78+F0k$#^G'B=sJ*]?`efJdBL)0qoaI#1jT
%"Y^B[)ZjcL737&&Vks+TklfZNXYW^S0pN?N>/9ohC*qlV2U1mM=o_sNTI7dj$pN3VV:@UkIGQV>!oQl%J*aBZ<gP"&o=DX$1K>jp
%;M7,n(!,nnoe6M)5Tub>/2'=-YI*o/(`#SCM!Q-TP]dun"lN@3LS@0I&[H\WS:1KBNob*[$)s???jUW]CE0Pt.$/G;=tpH-R$>6p
%T[T*3Qn2"jPR0$aZ7W$bft`WE!W(dkU5MF$cUa4:NZUM^jL)jT\6$h@,0nP<KZT-OC3NR,3[Mp,7T"8bi_%>IX,P)Y,/S.P`u2pu
%$.QQe5n2fi'jB7]D*I_<?'XBe^;!VkLITCE]$0sKraafBCl7p"1(P![&W.L28BI]q162DP.@?>Cp(:Pe$!T6E`!fMh3@.(4+V2H;
%%LR`N9Jmtq4[c8[W$/I6eG0hgmtefsL^bC32S/2]5+n7'br&H*XUlP-=>L1'PG6lnl@`]l#1YMQH:UXD0:ncYaL_[/H]3d9a_qb[
%UtJ3ShP&'8E,MODo<R!L.YW#!Uo/*/+djL3L`E4]U"Y'P&<TOp/>'4M/j\f"H!b&j&1<8A+r:LOKFTMg<%V".29=aQ02^:\)jq27
%0EU=iVVZ-JF%[0Yd'uVE6h(!rG#T<RO?tFU4V8G9F.5o?`i+*E^o-`(-qpIA27]Ehal?+&6\%U4&Md4[h4@1_Ls:n;;X7t)q'>*m
%;W.b-9qpQF9Qe&SJHQ%eK)rtu0EICKQ40asRYTCGJ0aFL>tXb#Yo]t]3BEfEXG3+$K8=J4GdA'OFJ>.GXCS2b!AT]P>Y+]OqL.."
%JG'8g4rPge4rW!TcpV;2#uM/^<E+=m-c@tI82(4tfZkMXa@WJ(L>7tL0SN7KaN;h3OmnaX`p%PrKVoIZ,X7[W):M^2cbmM9#sXP:
%fD54dp\?1_60Z<.2\Ke,8oGRJcn-_r:ah967>b>*=:=>J9(;`]$Zm$#hGoZYPgq@9Wb"=F[SAjc"]1%L;jP_EUPo_PYiL'p%YFk9
%W/OSd>YH^7XshIB0I9;<L_C8M[P+V#f!790'<P4;[VlhBmq<,5i^N'NEf(/D8)STZ3mAobA.J-t(V2a=]-FO)+h//Q#$=-L%gt5K
%bQom"$In"<2*q/81=W&G'1h<N^n+,_Yf8bmd.;i>i+%6!B0q:R/JC6G@Z(Rc;H3J>CV^cC&>,7Dp"h@R>KjAS:JTU!(0S'T/R!:R
%VjE(MXY?IL>Eh^6*5+8#k5f':RiCONjts>3!L%IHcV!bG!1Tb>Kf.&,3ND62N?ibSL#sUD[RuN&QOak#K_R$9;sR&G#;0Go,F3!Z
%=b(7_FM0,T47GR(<j,>ImSA/*E3'fXQTrn5dOg:?B<Fd)B';4pnEC826!!(e3'\P!:st2?&m=8,@`(1QHp$=JB1"mT&iZO/PQ:qm
%CF=^5JkQYf#p!q0/&?1e%]e8%K/P)lMeK]?jRtj=7.Eq;N"aj>Lt/#JO'*Wh)S1h]>"=\8Vr?"RPEtl=W?^+`FC_%-Me.!fPi=t[
%OY@sb81a[WW`ZCROn0NemGYG[)_2D3Edg1L/Q/Z243)@%1e=N+e#'>X6;Bd7lk$'cWK_6l?t-:[+6ZY&,(tl-O1)u*D";nG\;IA`
%,+CWU7PV\1(Op.%6;$t5+XT9%7hLL49-N:;2&5SK1P<e*6Z$Za'R@eFX5+oD_iB],>L:Hs>'ud7;DPodM=CS6SI:04U-][W,R==J
%)ADp5ZdWoe'&)MI4r9'/do);&Ce@4j:A#3@3%imk'M,Lq.o/`%1L;:.7:h6s",p@c$NWmoWZ3<Vaclp^`07_C\Zu[BrrOc:9q9KG
%L\he9dit,qP#=AL@S5$N2T$C57seu*$7'Z(LA&&SP)QFg=`ts$9d5?kF@p'5GW^$A,V;YDMh,NlD6:Trd!9KhoI](rUn15_0dkC$
%0Oau3C!;H?`2Q*C?k=dO<d`UeQlH8gC7;_j`bb@Y6^c#0O,76scO3->P*r7[m1Dc:H9$e<VTrH\,JV,/:&GhK362fd?A`mbF>=4C
%NRa8uXr>up:a/?p<OC9NRAR64&k:mf!6R:_liCmQ>EI3A(`W25\onB/^DIn147R%+Tgk`Z&U>8L\\)<U`W_MOML*1("Ce*%Osl)A
%3&Gr=<T:N'@XWcao7RH5g.%i-ZC#(uQWB@u.H9OE.>\SZ_I-VJR+\9Y!HlKP/Ka1Lm3F@P0V8*=fVu&\Y<iIW6VBgpW/*4S#\W'D
%FL*95@&mt:.IH%`pqu)4h-G8fJ[ZAbTb4hf?(_[F=N$XCa^.#dJpkW7M:]Hi<YT\'\e-)kM</fj"9U`nUWa9'(i$$,12K\,`0ZkD
%M01k:A&JH6-8dt1P7FJO:W(t]DhQ\Y)Bcou/!4ri!U*M,Q^t#i-+L9H/8mPX9<E7%'`'WU>g:qIn-Q3*'^H/0pje.j/[?3&8(QVb
%;.Lf*7H-j.47<:K<j<pO&.7)2m0f$ZXE5a6=Kt9J:h$7WT\LtW#2dk^#iIJ1/"f>0GXR_X<8p^#OS#)X/m7fh^ZUdh?t7+oJKJTL
%kss\LM#sDRC?%%\,%d`OmF5+^^'("=BP0f_e@?TlS"V/P,I6P^!fFWrQ4GC.01`e6&6;Ea90s<P.a^KEKfAkbdErd*G\l.aBUZsl
%6rc'C3'8rg3;R?P"FhnTUHaGL(1,?QC]'EWi)hYQ%k)26>Y*Q.7u&L,m+`iLU59MdK,N7`%#7KNiB\qqbcVk+,dMJkYu?BQTZB+5
%150$S$IU%1"J[_'oqGsJMMs96DFI`*l7<2XJn(/r`\ufX_;FM8Lei,/8nM)I+\J^EdS:fWUAL2#Y#EN-WKF):-:]qZ.7*J4::#$f
%LBY1><"LkO:0l3\5o!r?g3pok:t,@Baa94W8!5DpoF'M?jLTo3d!8_O=A/Z%!k#X*Dt<oMAN7]GkRle<bfZr''G;.SEClV`E:aQZ
%7$']c)r6GHlu43O46eD%f&Wgs/95U&_I-f>&fs)/(IPjH?Bo4`KW$G$D0O.X>j@2-f,*Dc\N0b>F"'32cs+H>=IiH,kOth\fjpAW
%\.n%DZn[pprFi"2mAHsBLR^B)XE5GJPKilSMngsID>E&qT'et?q=Y(QF7crj<rD/NL\pBGqpsm$Xhcj3-Xq=ho7;\7ftD6HqU7g1
%(;*hZ)\:!DVB!%-Da']9Ul0s%MB;POqN9)e4e`O&dB*O=i@]`jWueWJZVh@Q@UIW35W8ZNEXTB8b?\,eLT^W5dn>.3%UCK1WVcX+
%\VSP/TS?CsXddfKKa,$uq26=%J*Mie[&d;d'[;^k.;qQ2e1elNaW6)#mdI)QQ1uFX,LNGJ<+eN@jJ^n7%3utOG'glKqoS.[rt((\
%JDjPHNE#h5h_q?up*Eo"oYW2`_56&Zq^WYgdT&:+nWTSoo9AMRI<h;@Dg[ujcdpPRra>&TRfY'WKA4u2#C?2(K"DI_o&E15]iE5L
%(XUh0gcb'qCFZMe"QqL+I-]nM>lHG@]\VSFKM?Q052hH/S$gJ)@)'D;`(mC/(*7%!rrWWt4eVT'PP+m<aZ_B$%mjK,=7<N5kD*+n
%ioN%IaD!2V="T)hk6%G?":@=WnE!_+XJ:8'NVgiIm<V*UB%?;,7&[%<<BBsgl*'Kj,h0/1Z4',=PG_.bi_OMZakub2A$BUc)/P)g
%#g9Ws]!hBOY*clJUs]SmX]>#qH/+&qB4eE;?itPmQbM_bok6>;A^e+BL5_+n(n%Na+!X79(tTCqo]0$EWCT_SC0hKs!][S43HX#X
%/+'R/"H+fWV`;-oa59Sbjc27:c!l&Q,*59(]Q7VglB#M]On1@-ME;K]cOoA"@eJhE\VL:Ub#[,Ud6;+j*s-XO\3JnDmF*anQMB)d
%B5<8_CJ$"J(EU(9\=pp'%HS^H\RmsR0dsHNQ1SI\99ab<hO(r>^URkZ>>E9\<56nfWQ70S.^4N-bN'EM)AgG8I/D&MZPu=o'D_@[
%[?B@^fTsYKi++-t;6EA80j'oA!"NDj>\Gb?i42_mdh.O"L&(./#!Y>c?Kttb)28%6(F\q_RLMct']0@QqSU?YN(^3Ijb;USCjG\f
%A3cuM8hDMHdW;.pa*)C^2(lbKfaYqjDOO1Pla(k/QsdN&PkV(;]u9TigT,ga>l"G6WC1?e%Qr_r,4U6'>P8A+k%'7%A)GL@+OJQ%
%,q"+_EFK6W?e_Pm,4u3u=(H<?FZSs0\4:#$L-IZ7",BEneZ>(1g>WnNTA)QgrC%k+mE='K5'X*@IiG`9n![+T?r&IScK3\.E,(M6
%I.QcUk]qUXK3e4RIiT>G$`c47b'#S(NR3`UbKS0/[UIb3lR)=1mc?%adZ*k.4rG"f*D5%o@;mr8LeA`^"f<d,gi;HnLe>7l.I5eX
%1(_;^"g8RBRgguMgNaHTNm?#^s8;TZ$65.7faP3q6TU0j&YB\n)Il>=%^mGmC:'uR@<b\%`kU0DZ\<np_!E8N]A5T,/b2q?(XZP(
%VWW.!`?Kn_[K:EqD'[^5(L_rd-g)!JcMuDjrAH(nA]DJ"'>:KjS$dTKiiD4;(1RSrC'ph_];i(lo?U0C*WgmKd=If/i=X;*h+U#m
%FQR><9?;qh0=m_Yb/Nb)/FsAi5U4FWEm[2j3:*NSa9\9Eea<PB3ri,<%EBM!QToS/$@odiDJ\G6>Cb,PhirET.R7(1)sDAtiPUs3
%=K"&UF9BNkF5[#24n%gjrVq155.[Y("%j?4Q8;gmH@$.gTA+PSgcr8p&\0<q)'CX@FPT5m!M^r70@mV0IMcl;/r!M<DL6+2-#tfV
%Nq@8]_>=\_qmlj!2j?_DN=q/^gdRkH2Ku&J<6.]=<eWTSff4JqO7Y*J!sA\?liH,\??aP;2na)i0AP%EUl@A$iU]85kq2RSS%ZB'
%:A;Zfm/m4\kRRED:sC2Y_Z+?'PH[\2XJ@07'of1CHVMa<=JDP(LE*k,*!o9,Moa,HDa]+*5cbjLdj6dslXk4"ff9U3a=ghdP160L
%'XJS'Pc4/'DC?42G5tIk&Ju2M=lNr04^n"a>D>.5TMFCWj_%BHY6:K^,JiOLTPh:85E-MV^E`>PFX"OWW:ga(;*(?=S<VlK66Vtk
%Y,`Kr?X0orrnI<#j`L1.\Xm,GZ-,4q`n11TjaM@QT"Tf8NeQs'87(X+G_#:"J5O22i8YI\&'O*CX]4D#$"-q[#&@Cs9;rs#Fe\nQ
%Ha3&>&U63M3MmP"98Ki/$_cZVAcX-V!,fV&iR6Vt\#Buq<17I<eT*C=%,J*(+_]kIm;K-`$2SPSO5f7R>-k9$iauj^(NRFf`$SOq
%$a;M\;ITB$<s*&X#@PJ,F;S!#9.?m5@"cf04)5.VRn'970t%/@`p-+SB2`:P7M]p*jQ9i.+jD#-'n-Agog%(A`r]Td,D^'d)T&d4
%[WcT/_;hqu3_6Qg4OdR2[J9Tm!b)0K1&#;[`HG<5^rh#L#\JcF,-3CU\l!%Z5Z5LT+!*ksH/s?BDXsp@C*R+hR=#!<$W]ZHLZSE@
%HGBtmdD]9ClbU^jOVq:"4@Io1+qiso];EPaUg.r^b*j(&I2OU>I,a6,N@bAbrslF^B*5b#,*rP"'^Q&K#a`0I__qQ,i05S0iQu[(
%jc2#&`Uj1>Q[(T*&<qku>>Mk7<NY"KX2#mr0t43(CtCuokN["[NHH(D>.7%b<FW&oU(69cWj#i3"b=7nQ2!dh1S9%4^r*dTs/C`)
%BB+\UDg+C^q+4k#2+tZ85/JK*EFX"p8c#%7CMjgm9?VQ>n09W,M+h",$GE)!_M;E3p8d6?A4I)&7@R/)GqfMmS4oG@[VRT!Jp;[*
%mGss6N\1[S)O4/Lc%$W[cj\BY/kH,o'u[6fG:=%4][fD:kA(WQg*e7gDHr#$!E$BT4q\6;9rM"I:=J>$erkKd(f/fU#dXWW/Fsos
%b;9MJT2Hponkk0<Wi,^=A32gbRu8k4YTp53GN"/43i_)(B@:X.3)nZFbY@)/bpGtjf,**]:TO!<N!c.Bj_h:h_=U5`'^(&Zk2^n0
%S6D30PA)C#Npg#VQt^Mc,&FVP\J`-*7E5[Z-)$l`<TIbi@AA5u\<U[;#n(iP/2B+J#=::QCPYFCr%)87c4Bs.F$RpifG6Z8E)/m[
%D=q6"l3!'P<-pgb/?Tj$bko=TD&.=57^./T&,qt8T9j1kGk.i8"n1_l[$!%9f??snF&"Z+L>DaF-o!CY#"A#jTgWl0i0M2D&5C#?
%=67j"![CkeLc*5:5Y9E=P&SW1d[lq3/p.b7Rh@$[IBiYb-%,d5&EGt'V&(52"8Sn_7pdU7\B9(C8qOkl4*0>G2PWkNW5];c;'QAs
%LWGA]h)>MM-YWcT1bDr,<.@a..%2i5TEh523DME%9lmP2:q,/S]P,DcL_O)l=H-DFh9V*f_Cr2.!X@h/qPO,q"<K:/V0_X8TL$3L
%j:46oM<S\BflK"Wi.HS=IbLG:2@aFk1D2<MPVU"]PFJ^D?IA&L1:"PL65QlDAiL8GWD_h6Y@:0XY@iG;eD=:0J[38PKf9?j#n\s?
%mD'n^C'SGL2?LZ%T/A^eM4t-%W7L2N"2#_FRALt$\]l^9h7%qboQm[sbk-U.1RAf;kiAsQNZG::3=QT-pIMH$3_!2Z[i.t9>^HqI
%(g8e7TG4&*9b9eDedq5$]+.3&$c*B0?LcDT%L7R#oU8^O:)#*e'g=L,[I?]XJQ$&-RmVaU+oI`Q1QjT].Ifn3TE^,kaV##<+:9?8
%503g=nFE?mM+F9EcA=]:N$/UX2J"SN;iCXWFc22&e\lR$E09Wpftf#r4@575`;Ig0rUAWnMT@R,O)=pSniVkcJ6NM&1ENKPHiS%+
%Z:94c@0beq,(h49#>-OqkRV=L:'&L%7SLeR@@OnS*2QW"3FF"t_7/.=VkE=8ioEM1];)`Z<W`s4)MXC`fmrqRbZ2<ik@\YU^B@76
%)Tspt>^mocmK(6caJa1Xbldi(I%(fF3\Ym+jQf3F5EW.Ec0.R05.90bmc<\D"Mo)>YCkC#`'ZQr3o/^;"nhXH&*]XimstHOS=@he
%OWYBek)oj#d"ueKYCfQr*8;\GI/ETX_u2F>f7SJLpAm<C\t/*?!V(E.D^Q+UM8#O;YZH]q0I&`e[uV5KpgA%/mGRlT1R#7aYZ7p:
%K5LCO^&?5%pqYb#%Z^47]KI.Vo0D/]Ia.2L]`#:dg53I*gAUHpm0HjdWS8"&Ss\9Aau3T3EVk2m`?T<uq$76do5[aSVs2H$3,b-B
%>O(%iHa?"6S+uAWIicNK0b6%n#I;g(cmo<;3sm`=[-d%%rsQ>g2gNF>0;<;JeM@b<T#fQ8&:WbNh^eEp6,ej.ie`P@+%_Z(@c%DJ
%@h>o[4_-)u51-SjBD4g3:.4\(D=BZrE3K_&W9Te%Gh0Aa+,Gg;N$B'Z`q`a.I8ED9'/B'jmj[iUcPiA/VHBG1%XoO0^717;YPDSF
%4?/mIkS)aNEpl\f6,S0?p]qf3o<sk?S=Wm9&OJ[FYQIXGia@6WCdq^%(tat!GTpN#;9Lcq3jAW3qXo7:&qbTQq#+jrFZ,,kEj*C%
%4B&FnUV8FcUKDPG?Jgfe+?6S!1[k29,[<N%]7)Y!hnO0I@V\))5EA;ai#%k0C0U1L4nJ0[e37sHP(DqadW^r.cb]NPP0G@t@$#2r
%8;+7sT;[K7&+8Ca,9Ha77<d0hbfqs23eU;#C"GT8mel8:,6CVqfDVPl8,R0-hHPo%9f\W4\(9e[`(kLD]eqnkc')RaDgr9V,\YqZ
%\33.4rmj(2WTZ-THS<DL12T)joNk[]H]+9uEb(+k'.ETBc/F4dq-hWlbl,h?*L+etG09uo1JZsd!Am9;8YY)a\F[6nTA>!T-Sl;$
%51?rm^u^umrS:cOHaN2/_Q.c+AS)QsVRpJ4IsC*;,BM3icP0SEB\Q%aruAE5@u"jn5heKkI0eugS1UO/K!l]if.1_8]Pg3e[Y%$?
%RC4+uX!cWpETiGdD>T\2<;rEOpD377-r7;DXi3FBk-OT,CZE`B_>1\;afSI4H.B`Rr5-/HZLZjE-ZAY%%QT$lRihRMiB*[Zo/SuV
%pTmkE@l`BaR'ReogT%_0XiI=5f^iI<aLrZj=:i$\9KX!!TArN!-2X+O*Q.s(7..N)hG-K,pYulSmUO3l"Hbe:&18[r0n\:FLtm!N
%4;59OK:qL\aF1K&5D.&UG-'CROo%p*_Md)l@p%T(_-b#%jo<UomXT#BM;1t=Gp[P:&)T1(43Hk:*d>!"5P)B\+Qf;@gu0$=GhfPM
%T6]5h4rPinj*ob=rP[_+J)H1(rAN#oH/(KCU9?]IbRH])\;r)-85ckQ]U861isp1q_;e:b[O3!f>pJue?u\]ai.],jX]-r)mcP=p
%5./D3'8\f$;9p6MlY(U4p$pH*VDro-L\pJHf+Wpdn%u4iEO^XjqO,77(XXVd3SaLVBI*uqpV,0Pno\o]j$J(SE/,N\ic#-Da>8T5
%(_N?"h![>mJ\rM,Kbk*jFAS,B'^hVq3E*Eih#9Y!%PGIc$MX,ng_2Ka0jGj[H"CreY'qF%1oF+XmP>$EaTI1mkeX)0%.:cb*uWkS
%;3H34E!K&.1P>Qq_.j\nmdSV!%.9ko%OW+KiE89!\AQ%P(u2#l(%)LuF<dCpghE-_);HtAbht[ScJY80*?up9GBdCh%.9&pSf$8G
%@3cm2gugi6'L_Clha[lpeG)fBmca"`ic!^$Dn4?+,?8_mDr8RFhoXX#m./BVNj!c*DT?XAAo:*ok*`aX]\+@m"m>0)\/i3CM7@sR
%14)=BN\'7J\/eN@9\_g$:e(Y.40Hb.iq=82".9$)m*EMhrp]],ic]"*4VP:0GMQ?i[^.sn6JDtQfe[J,QogmRgMmWt[-`[4T4lu!
%b<OIa%n"O3B\VL<4O^`+>ND3\*HpG-[XI9\SI=.pBTt[-[_lH4dC)E0kF&b!pZ+,Iqe=0[*S?n^_V,J.hD8mC2H9\$g!3LE.qe`?
%<5X<oSWkErSF$gln'9UHoD->X%M/,uZQ7f^`7^/topN-,=5=O&4"f5#BDX[b)M>AEXFRnfBD^=)Du@E(%[ZjVZ^jd`:Rph1juRLj
%04PC(K!V!nYtpnWR,eol4#'E)N9qGgpQYMe=o\NfOfs0T6oRE`^2#\Q_:B*^N"]>Um*mgm4'Ke!W7k$Ok,ART]1hV3bu\9j=D1td
%-Xu.TG?dKri+=`a/)htSc8=e1m[)bts$2on1_Q,0]Xm*G3loDS(bs6mM8'WF'Ho[q&L/.s#5<1p'NN8hUd8%R!'K;.^njGr&9p!B
%!.gBT%frWHF>0+9a1O>_Epu!)E-[P!`9.E<+/7f2OhIkieT3@piF+'@&\e%lM`p5[eJX1Wi=95+]WAZ]##1cTCJ_hk_DcNEd0JHT
%UC#%.bUNEmOg6,T5P>CKM&8f,AFTni3l7/Cc`s#SVI<GfXq]@b@Y=mD(Vrn'm,1Ngkf)1;oYk=SfO)g&&S<[.DuiOp6So)s*Hq/9
%Sj[$lOmM;s#b-L!1U4>VB.jhN0TF!#Qt1Ls[m<'-\:;UF"nRZWHX+>Hi!cZ+O]i#H":,Euo(bSP.Aq>?EDWCn7#X(=)O>C_?ct=F
%7<VN_N/)F!#o9dTM?0gRPl-USD"Q.Vki?@6_7mL;:Jib+A]iP!jN.t0@WSP><=hS1c0VE_\ZkIV&J2"WJB?aq\#P8D+rm%(ct3h*
%@:03q_'4DW:jb)>)+R%WiItf"#1#\GB3Gq*orFP]%<7BiNGJWHW#Tu!YltfM_9KS7AMWc,j9bm>gu#gWgRF+bYT,^rL_jI=OCJmj
%%A.)?ESK=d-oM1PGL^+;eQ^455\Ge*bXIm_m"-&&EVU8YaXu#SXj:?E0nYKo<qcLI%Q**TaAJY!c:pRA#40n*^kO!dA,?UN<d:LO
%_.GQdPmh[<@Y5+(\B=<pD+:/:dT4>7-,GlZK>Us1p$(W<@=K%V=HhJGnA.,=]\Jp&^.mhRK1PYC['T69]ouFX>ua*7^bTA$EYsu7
%;ue(tMo$',TSAO0S<T:DW=gGC:<&f!W86[8@sgK)5;<FV]CBW>hAW&nR<g`$-Z^(^nB!AqoDQXWSkSKt6[Z>oB:JnOoUg#Wo.>!o
%CjZ=J?VA*:TC/lRjnABT4PuCdg[oXc?U&iHIg%I05+A"QrTX@X6rL0_]=)*C*JVC^mtd,DT^![lE,@eh,W]bq(\A$a6G5jYF/BI=
%gW:4oD/hD:X9(G?57uQUe6ADiIcb4pO$-d@=0mbp/YU`P/8]-4#>Hp4Blo6D'nu/D\3UZNYS@Sc%n9WA*0L@AK\Z]9$Fk2:ppj56
%"jZZq21N&[l7H8/m2(`VCZ@%QEh*_5Id_1aM6%A$NbltQc&@fc#WIg@5Xg6RK5fIA8cU:E.lHU-!2/INWt`l<eK^sTr3,hZ#*2GV
%4,9h2SA=DB!#h&t^WBmiOmQTbP4biTX+1XR?^1EhDp$62rn2tu%%,:HDjUL[_Z3AdqD,@DQ$HSW2<:tBJLi"Y]!?o?%ld@hIT:fE
%?+D"M85Hr;d,b;V]:PDh_-P&7)?U$^h<m%]Nr*=,Pub26%]`mFM3(q.H@WD,@P(Gt+)[S9`VQCgE$f85qlk)DBCltX3sZ(j4lXkI
%hG=X%F%B>e.D+hOA@__&21N&XjgH''r/JUEl8-'1@"dH#Iqs!U[ih[]Z<+A&OfUOaFeL<P>F!/4aYG'61E[8r9Z@p?4WNOskB(:Y
%6t/0VcU/4\B&pPF9%&WC8nRjE4h.Z2ar2j<fHhEg!3B&hjGQQX-)DL*n+bR=ALOX,![0k[Ogl9+"MDELli^^YDR]#/cNqZc<6+J-
%TVYbR_eVu'O`,N2,i1k(JB=QnJ[?o,NGMfa#+.O&4c<qFU*D#4[Q[)`9+t(de]bGD<'!ZnXW7QTe"=J8mL^;[%1D$u%jAN9&6^4A
%+P#-WM@=dqqqrQ)5;.G/P)(s`mH0f$ijb/:O.4B4@)G=MPWePaWm#ma55Ni%-?@X6&sFjR]'/tm(5Q83c&K]?ao$Bsn9U2Q,V_W&
%L^!p-)A:$Ufmp3`4UV**X&*ZTrOj]J^pFOd*>X_c1R:3:&<];Q]2o>t:ipCYI"s3[i;u*$EK7$JJW#mjo%Q.ip@iB#5r_>b+I)6&
%m;@8]7LL$#E6Gm-M$!V$/]BVeI(9uZ_.J93!O7)Ie^gjO7P>gpTNd`U$.b,Z(qbfRG[;3TqTk]8cR%J!MZ@cBN2X?+Ac[Gi5=f'?
%<9^I4+N&TE?\"Q<B+0=B7[Cj;ba^Ku_5@)4jpll;S:aKp1Mg@>^*/t26MQ%Ef_R,do).)nCAd)oU`,%t2WL"F(@,np'&mPrXq&7t
%;<3T[]bh$PDj%@BkA[=O,<CU&lcE;LqSX5F_4V=0*/Kd6oV*Ct_D\d[A3/*Pm(L;S:aU"89mI-^.50ucC;]![H)F(VJ/U%V!*U3=
%h[)Dl&@sXg&$(HtniUBWdhR13m=2g[rqE=,/da_J$%T'ho6Z0kC1?Ms#ml`/%Wb2hG(23u$b#>?6q[sSh6H5UpQb]dGZ(h?d/#YQ
%ksJg3k*MK0BQ%jpZ$=Kg^e>JIqiNIj`[s@EA%l=f%.Sg7#%@Eg,oHc,Q_MPHM7IQda[\[sLfiI^flDYC+CrI'*%W5e0mND'9(-RN
%@TdN9SJE%Ik)g&aTVk><=e"Xb^`Z:!"(82,:`m6(-#Qd)Z)d&cr9QbEYf/^OJjS0]bQ9I3Cqtbm#P9k26s;=IMsQs!4ES>e;%l<P
%2U3A5-K#fXRj&7CSaqK4lLjm8q`^X+I\B6>kuEi3L-FfTPoJ(AW1IY1XO4RN8t[qIAhBLZdnX_djPn&D?DJfA3]7$A6)"Ca#El-.
%90o:L,D<#8I:9?=<<P'4bo!-IKb;^ui-n,Fi%!ZRG]-2noO*?Z7&VH:Z+ml<R=)a*QFSJMruq^Rh=ip/[t+RU29nKFMF:67pYlm$
%p1oYbn1&l$7O'246@,)Z&Tul=c=CrP%%8;!M$X/,d`>2W9>CY"k#'Zljq<S,76N+G35Gk4\^E"G%:+`g33PC?HLJEK$RGrV-"1!.
%`Q?T.OfI8)^>^a>@TEX\&D"+tU\6UA`J(pT?Oc'%r`#O*j]R*I7S>;.)n;c$;HVU)&fQ>mbmN'f2)>9Ii%'>CK:3aK1$F9XN9cC:
%fkaBggdc#GqA81[/T_bX)GhedZWj7Jr&^B2Y3Z_SeFFI-A-!\gT8"0*VFhg_DA_U&WWsU\]C4^U6&?.H7P(j=UDA\]gm_NNAJQ6m
%ofUA>9M6`S*6$"?;2jRZc]MZ;Gu-0c%^g"o$!-R5CPPf0L1K)i.]HAe10Y;l,l!2=6;<9DV0.Bk91p`;QK^L?lQ@h'WD5o`8%:-.
%]3GXi!nBk')H%m79`&2YHmiC@(^21H?-Ll?-><M0NEmVNc^\i>9gsYX"MbUV+9n;]e:l=<>EiSC$<5)9/CVHI4j5N9*ZR-]b[kim
%]?3+O;qQk5hs'dGE<+B+7f^tGH(u2;:FZ9bFV)U>-$ucXKc/_s,^akpR\+acs$L4Q's``C[_LoZl=c?3)JdNrBTk+5oXoI98a'6-
%:$iMTQn"t)=JUdqNMni-Ff):"(R:l#_>mLP<,"%f/h+#(J<6h9e76A1fHG/m]dG5&Zp]*^WR7f9ZBXL_;JpS_YHg<UJ:]Sj5q'IV
%UatD\OGo)F"nitNMLQ-":TD$$]@Ye:Cfj(()Km<1nmV*5RoU<;iH`T%:.DGY^m!ReKgem-iDP%O/1MTh1)N!C#kCuk[T#:2h%sc[
%-bFd/$;B+>1u=?'@"bUhs",$4O%nAW`s"II\jd%h&mVQ`?ds4F-#3[(Zhrq,b_bAua>]$"Up)?WDD`PJiq4.gn1j=JJ?kZm%M>>M
%M'T6,7?^`]'5Fg^KYa>?,8+e1T/BYaZ:SHO,d1ZS2K!g46S;):!mH-2T#VG?]b"\jp@<hc4a-"&0LF6=W\7feQ<(F%Pg%:SURYej
%(g-q"&a)sPNoA9._7#5&SjEZicDQFRL(jZ%`NiW[&?O736SghPGmr.Gh98fUMhGo\2F[`\#,IW3+@=DbZQ.t`LkHWCqL`N2)Fgk/
%E*eI0^!g"^YQpOsF=\V0k$nrgJI9hGWW6<I%.C(DAI4iIBo'Mk^gHY'Uj2d$Y(5e2N,_Q<94&dRCW)$m8-Qu9'GZgJZ:F+AOu<?;
%(K,ES3'1hb[-A5R"gItm`%+"WE'[:\1#`AiROU/2GJc3&eY5ATl5agITJ/o,[4bPEP`/'m'1c>f`#H.50@VG<JX<*<S19bDK_GuA
%O?oCl9O_$[L33TGHP@dId"Nhi0V10SRDT5K2M*t"1.fD#<)%rJUnbhc,<N3`\CAT2R2i4M^I:FYr#i_:eL&N\@Q<8=U3VF8!DGF6
%Z$AuMGI4O62jq$UY?b"7EMp94]#DE^i'25B[!tWE`_%F]g`L=E8t\ufVd3$X\8G.%KF,Lr<*ad2*rN%o.3G'i0Mf4D.o"ZXS0gbY
%Ho-WFs$cgk')`(H8&qnaI86ts*&a]&otsWR;oHe'%&nAgN&>bq.+0=`Z,)V,^b4DQSm5Pq%rae@QI1=B`h2sW!7mjp,U$XYoC@!1
%ALj:29ZHY=A"fU^gEeiY9%$8/8^fJap9N43_,bkeBJ:\'.n6h^&G\BMjX%$["OEgUh*-C"R^sG$<(UfKe4O8UeFneJ-As4^7n=R&
%;?G9i2nUOpo32Vt;0APbiFB.bA'VrpfIC^1,b$\IF2OOF(hDq6aonLWC.Z:c(u\KFX;B$1W"^If`r&!6N-54f*D[fi>e9LJRQVR.
%=1;oUEhSkNl^KIX=E3/j8_i`/gfi"XNk)b#\co=+5&Mo7OJJ&aEu?;6`Qdfe/47!.(_[;E0P;%dX/XFme6q>[.`EMm8IUdUR4P)M
%,E-u79BOYq!0!Pnnmu3FR#V8W+)eYQPn5s?@e"c_iS#_pZ*i2(@.1b;p"/k&cWqU4k>[NJ5$Y%fC@F@_=ZE$R'[n%9rSUUsFGPGU
%Q2l',mP@DR8I7:p)rjmuffkW<b>MNWfm?V3iANsQ!%E7e/9+8?QsWf'<Bh)bC91a*<-%<9jq_H`2!MG4)!OU09+PZ-=e26+,<c0s
%$*gN@-K.&jQ!-4HYME(?G'jeO"e-MEQMe%2#YZE-b[g=Lr&!D2MU@KeD%%_3Z?NS<8U:C;T$mPB;F4nFRn3dr_Z3Tj?M'TtJC>D5
%NMIj#o7lNPM6/YVGI&r7ppRo"FeaS094Ko5$?d9=G+&[\e[Itcq`]<^p1A/oens_?nq"]anQWFQ8?cADIaD\u3nq8L4JI1XJ0pEk
%#(-F+Or%j-nJF1MF,FUk.?CWNMi(T9\Mc/X781[0?W/D7OV]!bjs1DGA>T,\Dp*>L-jmLiXU=$c:SH^pI";"2Cn^oo^R'SlR+g-4
%qQKtFR"en:299j&g"MQRU6W>MhokCnXc1J09A!6%<AOg%(rTGKCDmbWrnV>E-TPB;&7[kUs"6kuA.M0j4sk8c92BPXYljP.n.>CY
%AG&=S.X:/b0_JCF$#/Mlpk$Tg41M*ljpG(/9d)T$o8u4E`L<A3mMpeJeL^rCXu!<_@Y!k;L@-(>;di-E5X0kV'7Wdb`=^>da:X*p
%$O02uN>aG*BT2-f1;+u'.%8r9Pg.N+p\<eHn1I#9*b<tBDc.tt2a,'DBas[4^W7EjMOI[b@F>=7I(PIlG'&DWF$pOkC@LSEXi>r.
%@\r;Gm'Zidm.!nojjaV4XG_cJ'XH8P@W<kq2E.S'oeDb60l@+)b7WNE(_M!FM%7`i;GQp^?nQ??-B$JX^JEOnE5^+"ZEV/Vit!Xg
%Q)s6'EXQPW.T7SWm"("sk*RNSj]9L'8mEY]o"pk=$'-b!V.oL85H'qaJW&Y#J<$]$+A%@rb$1'L!M'W2J:Xqj.=&9Y0oQ=;\a#I!
%JdfFdP=lbLHJJhrXMditYkrL!OG6)5-@%#I5-8$*R30[0#$hs!:3+FMZVHb`mnVrAi1M:jNHt2BNu2X'a40+!k8^a[#@b?UKUDnV
%IUC$[4nE+.+4/-,g^=RgEOq;[#$D;(]fJltJT@1JYUejaag\Om.>r_m`Os6sdGmdL#K=F'&Z6rW0#NKJr=\0T\ml3NSmg4nR0\c[
%7Rgl!Q#"onEC:;=c[_Yj58\a@"WFch5f]S*.XuFW_'g!JP.lMTO$dnn&"42Io,'2o&6*m8\?ECBMrK!Dhi'6#8b@sV2(BuDLF1"g
%[^u!V<I(Z@p?5Ns^0jJ[aDBP6bCbb?3f$*"Z9l0tq:5TX$cPe11gDlS=q^jIfP.(pmggK(R6p)H"=;Af6-S5gq(pL5S4*aDU2SML
%&I6P4@]Q-p[+dcNomYp!qb;WQ3lifkj;pGPeJUZiE@C%D]UgB%Nn#$46?Z=-)a?22n--Ru0&s0L34saP20;8mbeh=pnL%ShnCB"d
%`>7q$$"PN5)[BjS/I?Dj70EZOjP`QGTPR)Ad#b;\L'*hlkI7H)MD<"fKV6Q4l]ce,GjsGrW$bYJP`G#f71oc;BU0W@G=$D^MnI2%
%<paeepPZ0r&VK%p1_PQn=PGUd>W;A.@jL9(F)nI(GKUS4j,*fHI6YQ=X@0:\'?F05q%q#,!Y-@q8HndhGk%grocbQI/pJJkE9RcX
%bCL<+aA&@S'qfr-XtV>JdNUYg'YKb!E4/7r$\LLq?*+W<mB=<j.\:daC9R:ZSh8L_Cl3I\f%A@Q1rIp[hS.KH,-EF0JGX4OT==dp
%B`-oo]puG#;1*_"]:na^`P[$G*ZiM_asVLlnpT4Z'O4F2E:8g=HUP\;Bslk=;&%e1$6BP+lZ<]n'a1kSa<4S556eqlZMC#r5A_tW
%_:q7pCCYs8P0Y8\+$oBs'O2gh/mD1lFb2.4HPG6Z$APADE9lau'[0Z?M%Sk/-oaX0>ip)A%.rBdFDdoL/rkOqUYr4%R.439Y\_?2
%1C>bRQ##qP0FA!oJPgBiIiJXlRh/XCeeGlWnH)UR2u#g,h8thkqDSf^Ve2T1E!gpQOeT>*`u#8"JRLR:)M';Y$rL:tSS=cVSUZr6
%T?%O.q1c$RKcP^c$8[<7G2QbqADAfd993^W81fli0in?fN8YKKd$M;tAP([E>0]h*60(N67^'#fB1q"E/HGh:9dIJLb[&F>HUq.b
%ld]P5.<h31Ml&*2n@_`q"W:d$QS=R*SYf%Qo!@]lq%($CQ>*9igV==?bA)B&Fift]^:`22584jFbjfs!:<Rd"7eUh-NTLtc(9fT7
%m8#$@JQ@se-l&55GJjX7;IW!Uce>"j>lN`o^6,p1P'E;`fT]DhLtnr/%S.Qr8hamuK-4PhmbLoc/R[YLmD-,"UC#=,Quf@a$t2,0
%rghWg$iI[&5*%@dj1Kq<1ZiD!Sm.g;Yl]GK[3c%mm^r[QKe*'^)kT8p^L/h[LKVIn7I#LWpgqPl]sN2k<PXAUk(5=>",E'Chgh2o
%H6>!C`5]:k8-feO8F]MBr()JZ9bA;/XfKEeJ0JC"NjH-mC9e#[P.iWX#C"8KRASr;D6B<h#3XL.=UthgC".&-*B;E\(DgbcAb<KP
%eF]2/hnoFk:GmZQkdN4jRF^Fund9B.)U/9GVH^.:ToN@]&L.G=W[H>>ZE+Q>\>1#a""XLV&\?*^mMsb$VKqtu(58M*Z)[d*Mc3>G
%8OMT8=Y)ZH/>t90+&mpu\Q>=UEi@]BY%Hn`a,l[dKR,>&9Kg!>a=4[b]hDP*96n]`13IiO4-A<O4M=GGCTWWJ%@07%.m5=UdM\Qa
%GH`6M%o.,oFO-ZM)2_)1:,%JqMct("E#,hq_0>68W$/[KDi*3P3Ii3oEX:Mn5urA;7AN=&Ikul^!)>iJZ76YlR7`17gSU#?Ur,f%
%'YM=Db#Y4)gQGi%ETC2O1_m@n-n$@%8>5-e.fV'cn>k.H+E-b/8/k*j:.sT@Bfo&*:OWqRK9%.G\=j:<:-[RNl9iirbCu+f'I/>T
%-B"S&<'6XmeJ&;GmKaEs@>r0XEX:.=fY5O,\nF2qqV=?)C*?5%D&bf'`dp&G\X[c$&<h@dkJWgp%Z0(Sm5$FW(2KtN7g<$hF#sW.
%N?l]Y$@meKl5._:FIpt-/f[H^aD/,P@dn:F(2m8]]J+tQ=fF_.0\'/[o7Xp$!-JT$-3Lo:iKd!<_FPCp]daL/8brg,B9%8:g(%#5
%6G88eK5JjtXKnQfSB$_LA=]\.%h;=++BcWJUGR1@iQkio8fZ/cWN`0>,F6G&\&oZn*NESV^EZ!OJmYOaqs[hB-H</,b"?E0B+G:8
%io2&%)9>I\E(Q4JX]4++b1Yd'jY^*+iD>oE\1iM;jncaqYqrj1U;5GqL1XPiCfa`UD+[Fe%oC"!K8T2m.>+4so?;T*k$L!>I[SjT
%0,"</X?!+J<m0V[0@KKal@_J"Q_!`h:E\nR6j)nAW>:$m=U7S#nO50i6=*,jT,=#i'SmMTaji7_X^0!ug1Bf3!0RFj/mVLgg)%ND
%B+.4FQ'"mS%)7P!g;("XIgTKdi8E'^^%>C;W3rKoR,u6,Ba,uF*VsHTJPQIY2^ROZ=cOO%<Hf.$p4Yg=@c;rjh_ZcJ_*HCD<2[i,
%=EU#E;afC^%Kn+,M/NnI20s+)#iDe:WOj7FFJS)pG"R.)(O4n]^&C!A63lYq/,e''`[fb4QhSKY"e;An$pPQ;-T+!M""rhara_=e
%Qf>ASV\SkS;bsdKCkEdk+FB88D"/ea=,7=iPFfT(V,f4;)mCB.p1`LjVI<Ocgf1Ef\oSh3,\/,T\R:rUY%qX(5qa)\L-k6bMPj@6
%=D2p#>f(j6$mk'EJ`T3gmEB>R7o'2^<SX`LOfcdgLFRN9LBVD)&_U"^^Ob4TQpu<,=<R`+nWkIhEh4*7Zb,Ms.lY*A.FM9#4B*%<
%LQ"6_X`fqBf9#I7UH=?B+7:OH-O\Z9]$fM)Rh3,gO/^go^OF^Fpk$M(6YVEE#Ll6q,l)k[JNpkdIW^Kr-$'"oGPoe@97KaHAd;TT
%qM5-gqA,u<0nUGZ,M4F24((1H/roNY]e&8jZ-RcK)o]25geP3"a4?EV$oZXGBuJs[Y:*-t1Ps"Z6L78P,@g(W70FB;VJh9-nJR5I
%&Q@!DAM8?:k*`p$/T[AIJ)BrkT2#620%km&#:]"k/:'pnU[(,?@W_gZ+T\LZ-Gfop1t9Z_D.eAG#K;%&JRO)!lB8J\._,TZ_J0eY
%k$<AUb0X(<mu6`B"5"/%?ic8i4%,g_YjA>/NtSJ.9>Dr8(#9Hafpf.1enNi.]_^QCKR,,k2Jcl:HGXF1J[o'JA$quN3F]/pXAkqg
%7!2RWiOI2ejMO_b'KI+d4,/ph<3f9KD%ei2`0#%BlUFbk60JXue0&k'3O_F(@^SNW:EUJ`X='D:Gj4$r$4j-b:@>p+O<9dUs$??\
%?$?jOVLk:GQ])b?5=@C=S=P$=(TWRV5cja!Ra2ed7m#3t@CQab"tZg#,t&<!eh+uf;!o-^"um_Of`P[K'PPGEFob0D]7?kc*l"'#
%'5FJ2<:.dYr`=^ePd'D<W)$86?']qI)n[q=9eFRj!SLTAjrj8Zkh-E)o`YW)9MSNtJ,j>6n46)(]1C.EE`PJ0dM.L5l?F\sbZ2[3
%@eS3i"(3!$E-L>FUao2<[Cr;R8cT8UCj9LW"MQ[j[fAc_g4a,VD*@;76"nSNGrG]D2:C#;V+<mpFLud60=si50^4MK@gD1Z/P??M
%d).[NHIAN=lBP\TBWWunpCgh(OV]=.NWW2^h&'+O/S,5++4$T6>o$)rJ.o(O=U<MTWprgY'_7gJd1P.r*-R'K%%#Jd"7..=%t)7K
%K)f[9ehcj&coOoJM[7hE;Pes!@gYtab!"o$M+7PA:)<N/[uU$$.<o@R&7GNBFaJZ?R9H]/kGZre"@6Rb5@L"Z5%gXs17FK6%M28a
%\6TE`'WA>&KF1n'*5&<`MGbrq8b!i#X.$%rFg)a_-_4f^Qp@pG6,Y&Na%S$WNkLD&eggIYo,E.%)DOZIoPGmC^<$NHe"_ZJDN>)D
%SkGm']4J*-0T>_,`OcGo^@f4(5Y$"595fDMGIu!m?"cg#^iK-oLZfOQg7(e/bjdB;WCk.Gplig2)+B,UH!ZI]S,plr,6'K\Aeq8u
%L)udT*3+JY+:PZK@H1+pC5->pl^f5%m!J:6TNu+Z*D.BLK1UT]efO_k;YaUXQpB`%=D2?I2)-X<F,)3qA<0o;H65TX00Gd6=WdkK
%PO\4HcH\'qGf[EWV:qkj-uM?jmAZC:*93`qM.JOFogn+uVQ#\c_f1s6[_s9NBn(9G6$G9@W7+drdq9;N"dKaClbQ(gSf?bcPt<"i
%J#k+rN2$8G?6PQQ\g3H/RT]1tO@>gU")Rd6`H./J;ng2G@a"b_s+EC32F25WEMF?J:i"a%'S?;H`C-B;mC@g4PsY&B7"V>Y+duk)
%^e:*dLqtZ"c;_S^#B:'K)O*7OC5/I!f[9aQA0R7mP!D^:kYjl$BhZVoZ-mY8Gp%AT-Er.81ptU[5m&uef3eU'!>lq(]q8,HX$P`[
%FHFPXLTHS@$P:?Z[:'+[aqe_5q)jnLUN8?#lR:uGPZ!K9'7;8k#7c"2XFgDgcb^S%>"_M=J\>PCfKVa(<V]C)MM=1uG<D?l)`X3:
%V"b?:'51:Z56/Qc`.M8sIqX!ZO+MX2E=7r$ZLC5aj"U+d:BO;c#lOLAAQPLeRcCig2I+O[?"Cf\9W,T9O1IVl"S'Dg5LH]K'U.d;
%m7sSEZ\S7(rA;U5GMTG!14CNUHqd_<V-BA.S$-*h1O?B>I<8&#,-8t1Q>u)R6Hhp7"<D1(S4P1?FY11ElnjGo5n/Rfj$QWOqJC=m
%W)+_G+8YJ*aNW"Z7Y?d+R+-R[eIsCrQq@@N9=C/5/n1iD!0%P_,e4/<Z7Ys+i_fc8L8621gF)_&8:ftYZ'?'YnGIlfGklutWo$S%
%5ED0lb#K^o/J@;6;,Bl#jGpk>@uN+[,uZKA@NYuYnp,./U5gE4A@d-\;.\lR-<i5&p[^';iPtiH=$0p4s/CuI6!oMjOo8*Aj;pPt
%2CO3(O>Ht8ZeH8T)/_U7DNk7#fGkf#]*NmU3@k*^bn>/Jn<e9Iq3sR(7Xb6poXFKAWTNI"*6mXFEW[PiPi_OiNHtGiIkfgDr/R,9
%BU_=Vom!I'NOI%>_R=KX+<\kj+0BjC2NAmHa0Pf]l/*N%PKXrk7S_"q05?[NOR:A;rPUX-8SfCaAE+W-Ti/Ne$NTR]nDTYDo%RW>
%QCjroIl?pEk?l`&[/TQ0nKd13Ma->6C%j9NqMFpU1aD-n*&B93Fn6FfR_&)D?:,"j"$=4SEBNO10CbC;&JAd8aT.R8)(/$N11K^/
%o:VCY;\qE"a4s3*A#*:pO?$;2"caMgT1m_^AekErTm&&E]'a/fQ>if@eXP8!!Mii87[dFuSM2roaM,RZ62Tqe.qjUs;)57!425MF
%2hecQbO;nF(<D8YhWSB4ccf228NC=pQ<j]8Gc6<`SI](0GN`X;r9i\d[-6F0k5"R-M'RD^I/k:^X9oqCnh:qMnr["A)j27MOGk\h
%)l@Eg\BNnj4cL/L<Z\+hX1O$ORljj'YIXIVk?%:qW5dq_rd(g\)!o>48n>`,3P]l(0ZaVL*K)g9/DKj^6(GIg;6qS#<AZl;hYA`#
%7Qp_E93?mjVWF;;T%g_DX_3Ui*Ts)gj`9Pp)3T.q9_qKPjq*6dW!/@#RuOZ8#=_X*e8behCp71ZjTS<Hd1-K$[a^=f'ZLUi1h+)t
%IOuusUkoRK$Xq.?Su(R:ENVPbGD<IZHcc\76S.%lM#tfj;NFnk*UI>]fMW0idHDi`)5"?n1T1M?bIKVG;ISYu)1W(JQR%uU??($c
%'m?27&XOJ%bR3Bc])d5a+?IN@..DZWpVh09==oUNG)@#hqK.9odNY@!*79%_'@<OdGq[X2AhIrVY/h7j!.gNqbI>iR$[@U,gmSHc
%?S;=XC[,g@-@iT^BS/'r-Ue[1-a2RpR\f)UWl[YT7-U@m*32\D<-0?>%K>L4FaR:o\HRo:rNW31GqqWVh5&,\4f-[%j-"U2_si[m
%+l%cS'JC<rdl2'*'S)[cK=4[kDmmhh^\bUGhX%uNg[r.NhsC33S;u2go]Ds_3KjAABa^"P9C&,(bt6SjT)8+1?QZZcs([+%J%3;f
%%jtN]?d=p:['Z^T>ct%*d#EP_"H%(I8o*akb*IZ>ROe\J>h-=Q94\[7`\MuqE,r%&DDiE'S"[`aK+S*5B!kaP&XY`J/tJgW<YJ)H
%etq_gS3-btMOB2i@`Y"?c,Zm3.H@REmJaHB<I$J=KA.%T62HfW!GXaHe!MI?@Q5g_^U&pS@Tk:4SnSHb!ai][BAn!$W^'SRSA``M
%$+KL:8!lVf'@l8Yp3=*@S89>T"\f&Ip,6#fH*E:g-W^$mX.2&d_k4la9A(*6%D7*lLOa$dQgmT%S&S=Z5FQgk;cc1-O8C)*>20pM
%7o:j7'R3a!&lfJe.J]tId]`SLZ4C6p!]:N.k8!_co$=V^RcZ$:Te]c%eS^5!nRY)CU0^lfAno*P/d.-FBrHldO2&7n`>e0\10]Nd
%=.I$NEr^=6SF8XG<_?<PO?CJ3=03ql='nN#j6>j0nMn?2aLTncguAI78?$o1hlkf#!hVEf?bXA8&;/",jpjkKX9nC_qkT6e:+`=A
%#U?spo-2&HMaa/5j1Ns7U"<$/B']A*O.H%)H,I@gTlM\/^1?a>,]bZF-%_KJ:Tb`MRd(Ec\T)[3*uBir!^FY9bW.2<<qbM7+9nJI
%$7bd.:rt:^!.-C99%!jOc10ZEZmjN6)=W#_TrTjOGSJ7fi9@Nj$(4K!qJ6pW:hCZD?DG*P(dKGJ6Iuc5gQ"?U3.at'5GjKJ7V:@t
%G^4Ql?K;jU83qNb$NcP#>M\5EN8rJR3@uoeEVfS[=Rjc4/gA/WIj!X>gc+En]chW11#A:_pZCXLVV]t2[mogNFV\;llF44el.!JQ
%%I]9I1;hEm8k3*0FZA)nHuFBjfAd]C21QL)UA.d4@Tb@7(201)/.!Fo0"Wh@g;*?E^__,u=8qQ6pg)aerp7N)->rFEJ$F-tk8t_J
%\**7.>(71[SBq3s/+LoTr9*N/<Tg%Eqd0pL/orCMV<D"B*R`LOVWT_JT@Z"0n7J*FYNMC/J$V;pn"UNYY,ura*"c.7XREdrmrnj(
%s*Qp,?5.<3E.]o:9Jt*tT.prN-n_U5kD7bd=$NMRaHDHJ]$>K.rQ_L_3NLFW7h\!/R"R")GuaTp3<W>s/>oTpU6B'2'6\RKPZt$)
%5bVD3fXlutG<UJL*:odoDnkph3H;AO/#Y.Q6^jR:@fLT(-[ZP/0Y+bs-438HfVcfV&HVMfc<Z6Djm'"YD[piK]1V\em_3sn0tk-3
%IWj&.0#Z5Hq>PhkEtQ0tY((Vu^Ms6KDSj`tM:2e1aZ9B'(jq0Vgg:P$bJ-a'lOFdIjS1ZRUCZ#_87Wn,apU20>E5Hb%B$]j(Sh3k
%K`?k$?QIh?crKdkb`qj!Ci;%`j.7Eb@O=!rR;&1DmWN$57uBr9Us%d*Oh;<,,6GlPB4;6<Stc"l.aM%k`s@(.'2'MWLU'b19@YCq
%IY\?0&]4PV\j;Y'Oja<o&Xb<S=-O"I%^NlLE!nt#!UN[>H`;BaT1r(uGuCh@ZN#]CC$S<p`JcabRdp+Y'#as1^@(\e:X?5_9K)4@
%rc;Dc=^dbZFI__15Qs\E3upg#6`/mG+N@S]W`=5-m=?c96a8ba$)U"p2u'EBq>eruD3/j:N]m!D/b4<o@/l<*oDXLk&\>g[1e_E9
%W..D-GNhV[6'/#o*+36]OLGqf!38AR`:Ke]o2!Dh;1atM&#@oEJ;1&L_[I^/.,:XVrLUgp@),54T$m,"9.'9CTg$`HUdTc3(-i4>
%!b$JIO+=VNo3$fb%(BFZdMl+_%=U2Vb[rG]Y'O>Z\W;4W#^HnG`g@&m/Mfr+g1j.SZ0Ah6s)<hQdaa0t5@:cjYbis>3U8\c*#7pP
%3;REr=E^=HdgSJ/I!D>!ZB96[H<`29X!TFAkJB;Q=GoPMhjfaG`f>nRMEaL5V?;>uhEQ`RA9oJ%7KdHP<4=QMi0lDr+nSM,(4"$i
%&]MZC>Z77U>jOAc^T4q:1?E_AULu57h)71ScpoV,c*p\$XBH`Q\Ek<4qa:'[>]H"mk3W=&*o<t0d`n/,,\PX<`F`;@q)<Ar(#Y)p
%8r.8DcEM4-$$AFAPTVMN4ulk*oXY^Z_bN<fdd`+6()-R?Tdsr'h?U@;h0e"$Es38A%!-3fIu$Q)%^C5;6dEHa+k>,Z@]3b4Wg[N9
%a:(H&::@bN[P'C&c,r5(C*Qt.n0A&ppD?q+@<&g)RamJ0r;eii%=s]$,f<`<Z+AR5R@]DO6JW&=&kcn2%d@li:`:8;g3OP)H-Utm
%!"ofpK4o%[@Q!X4(a;,@l4cUaBZ9;oC;bm9a,>\0E]ofh2nS&uEIW!priGhgc=csnUEo*mB@R!3U*m85DLUn_ja(h9Ga-dDk#N9K
%2Kj.J6nJUGi(/faHk7!=[X]YdI`=uaGnVp^&1VKI'1^/lYmibU8@LPleH@Qm%PY>h1a/N[L*9Ird!+2ebFoRF[UkE+[;cb@(fS44
%-Xjc';aEK?+hc!<O,=16kNDEVOJLXUEBD.Sct</ZV.@(f"9O\!UY6&,$2>-dWI6cn^hTlhVrXThBWEM2)4P*pEqW.laZkt+doJ74
%"pgh!$8-OOcK`Gd/E2qY!m!`\0jLE6@nPMFa,&$-'bLFim'Im6D8>3K_`b&bOoC$i'c391n`^9e#4+1=%hM8gFj^n$AH5JE()?qj
%8=O[g)A\ZWe`qaG&^O%!T]nJ81uZs`oB($uqK7jipYjloMS*KKF:fMf6RHdWC0/e^#lk3=`-C"bC4CI]rmQIjfG5+ZOefRq/@dEe
%kt"`0(g+B9?DSsj:@&$L3q-3LJ.mmA4WC/L_-tE)I52lt4U7uT8G,n*4n/G!iBnhXX<F*,OgD9Q8AEm_/tuY2qd*6q<<G9$Z"hf@
%XIpNSkY+3h8.CJ/)U4`s%4cXcD]^/h5;^OF:RX<K74LH%XoBeA$)l;\$(.60U`u(AAs6tf<7=n"+8aE0"cF4.aN&9M_:05C>7oI.
%Ij2CK88!hcUP^8-O7Q2F;rAdgd63M4GWN>3ZIA&%>CcI&U,ZBZY5t:V5EmN2ZSWW4cq/p7VNA<<FQh$im/"i;s(3L(C\5l3Ha>B_
%DdY:MOU?J^k,*fh^W7c0E.0gGBZVi!N&$jfpafsF9m4"+FF&*8,Vt[LlbL!O?Y;G1duha5)U9<8HgK.sm$BQkE#us56?kQum'bW:
%,0:M#!jsMmb8_NUQehD*9mDY^o^cBPn)q17rcC-V*2(bPoD*_sPWoSdGWi_.:A?nDnA]"O0eDcEd-!=L0BC7+r1?6M#M5KJC[B\?
%G4F<nW-Gu%%\k/1F_CYQdKn%.D!3=kEHM&(:f=UD(H;$:FZqi>i#Q*7l"G9R9s#/>"t=[=h1X<a:o&P2P,CRZkGppbOTC#r##YV`
%frDS>aa/dGhLhhlqu3To?aotR.^a7AW#r#pEu#+[2c8kX#IirQcjP^CAn'^@d8XR?/O<CaRLbO:!5OO$*\a*SV$1PeH2<]1e`_Vo
%.XMg#DOk[nmih;G+GZ9ie)=5nHjQpDH%:<(`Fhf5DYls-;'<:R?tEjt\r;=JjtAFfKOIB1*`",?-!74L\'+ja_Ki2_^D)Hee`pgZ
%((G(<h$M@]2-DmQb_EL0jSn0fA?f9(&ic1E<C<M.f4Q?!*Ih-6(r(&A$f+MaAV.E*Q_[/Vn]75`Mlt@*DA2<#k/'>.V\2FD7ajlH
%6)pW/%;[=Im\AEaCdGdb'I.`?6]j"F'(F9s8BN[J4:s3J+^[Id,GnEFY.C0`o7h\tYgFaUG>M4uSWF3dA[@#).i3/%DG<ZMes2KC
%'PAIjap'#b41'0.n4P'bcDKhC@_%1C]Vc_--t\=kP+?O$b>+aq-:_35F_.lZ48]4TIGj=5CBA-GhJe8h$et),7k!r<SZ^rX)%dUf
%mMZ'-0s=NT*`mM.?"A-90J*MCHbM>4Y%>L>W2?_f]Tal#mO#)s[ZL4tp`"Eg[lHa5Xm?mK42<i".sEp";amo%+i[aiiq'!Y)IhPk
%C#I9Hr+n,eh%KYVeNeW6do,Th766"_"d\aa/rn7"MH6+.j@49`E$boO,k":<bRT-?8.;H%T];+d#RRTsW?E3Smtf3ca,gs;1A2W?
%rXhb;;_B*4jCnlKQUBLr`8+EYC&3?`$Dj\Vl,kH_6`,*=Xf!,^LD*:]jb4ar#1B-`=+-j`LqlF-[ienom.%GEH9fSucFdKV/nZN'
%eio#f,FU5FVQS,($k=>hR':*bf-^$,WQ_T2PeNu4O2Mm<(Y7Q5W!OhP-QAP7.,M"7.128:HG3@pa:4;egSg?K2g5PrN[';E;1_B*
%I3r(,.0_JM17ps8*)9l%l<q#JJRjnje$bTS(QSt5)R:*9[XSc:=.Y63&agpf3OEf,o+iUdVsWiG7Mab#5AWV"=ZFopK*A^^.\;ML
%GYd7Pp_!3[9C'7.8US]+ZBjO&k>V!*+=IHq(3Vk>PDJ3uJP+eQ\7MIbXWWGYjSdAm:Nr+\[l!Bnbq1?c/NjN-Eq*kuaYa^n%-B;7
%>oEKH8Z@3#=SfafmMOI3cla>k7?Lo)j\k$PlXn1lYcN(@*lorX'rJl^UQL^oM_a9fU-^r:nd0p^CFko9)<e642?5K-P4J6)p;<2-
%FFoeNf/6-iA&o*2Z&;m@?p.!:aM(<WUMY8I;B?668n[*[#\W\r8j/Cl^T-91em<T5W9&iE]cSK189THZ_kJ]$"/ghm-H@3KW94qG
%[<HG.&Xi2>j:.Y$mnd?TS9K/(DSuLfVMj4:H\^EjpG?%`K4[$n.7V$E`6IF9Uo+VoB_I9+_+*F1W"9,n"3>i0Ir7SkiEV!+fDK'Q
%%UjNY3P)(U\Kh+XWG[/(9*Gk@WGE)(B+a_QC@-f((BXlTW%l!#Au&X6qM$k8(k"TCT="]r7NN1[93+MB^lf$4OJkTgd\N2)Kn.Xl
%s$CUsQ0_[c(BqXR,a`!M2Vfjg"H5;RSIb.$%W9b%ddb21"Af@\.WPl#n?S=`hl([UoI?meMm>;l`nN7"(_E6&Lc=+ZN'Z_R1."?F
%:2%B$hYa,/CS#-a.ap&,6&G\]Mj\X>H9E+u*`2:79/>G"'YT?&LNqA./1\PjD46jZ/[ckU1hG90[EB^;F&[1MZ+?obRuakTOGFg7
%Vr@r&G?UKOJfZ0<(>)+'X"t,)!G`#TgF9T(-mP$qI8:"!#SN7+Vn<-[^#'47&^Sl5.Yjr*QmnN2mp=HhIug5fVB@%?,O@+lbdsc&
%p>=/"oWooq]]7[OMj\PKF194C0q9f]hWua$5H88`f3@#R`+6E#.)f]d8\0SHFW4FBRY>pJRV[1sGRgSI8>gK-K9-t!(Y,;FY*6\]
%V!(Q;&u<k&Qk_pF"[nt;oO-k6r9,]GZ5.qeF0`a_M\6Bl%@K:-d5,"/"8ftR-*a@J;j@rSS"hW+5Qa=tL0JbeY&N=aHPA%"_r"Qo
%gf.tMi@S,)TMB_3J!uFsDiE];jkYRh0T=p"O_F<q%3p\dDu+l#7(jjRi;3!%^8Gr&.,H^:i2mhJna(1Cs37=M&9W;so:)AM-mnA-
%3e&PrAhU&cR0tGHEB=aN673>/Fm\$L=cP!eJ=A\c>6D_Fe6&[iZ'/*\AT2oV\'^-)]@=jmWq?)>1\^k>WBVu`%ps9/lhP/Cc`c7C
%H[4Eh0%>\kKK/X&++l/D3blR)T)A/[Gg&&E]CL+Hi*cV#9knVHenRd86s>F9]0@Bc^j/>U4,$mt+XHO?HOF&9U!\2]hO\MADPr**
%@Dj5g*AMVT/UlY":3UKZ;59=="/6hdTj[-G:1<%\@Y4cGSb^*'G9*0pr%,!`B6cat0UsZ:-/V4q\k![8h>[n.-D_``.smYs+r2's
%'$VUdcjY&*A7"qAXS!0j<ntRd1@LQ"T\>Mj_bGA;(^Ekh#OIQ/1!s%VmnC/@(^5aH9!U",_Qogb5\Z_WY[Ro+SgQj5E:B+DbKL$j
%IH:C,p`u]91#nA`)5oP]Lu?Xg!2hS#OEm>c,/@9,;7^,KWub>O7qlZ,h+j/QnJ./Pi_te`Ktf456p*O!HXB#JZ,$U^'95FBK`u@G
%Z=)i`f4e/E`G&S&n/?0?_ku]BL7"ORTp<`n#YP0?+A":VI'=UGZ!"$T-GJ-]Hhd7T[c?Goqpq5b*f<6M)ha=XW,U-)>n-sXGV]gY
%%#D(6.grs=`^O_/;O_a14H7=E\JKMuo$-\K9Qo,g&5=N\qolb3j2B+\cZa\p-XbOfNelSJAte,8$'7QC+[_`go.8re@]+</EmpNt
%[P=*h=m4h9jl'`*o%ZkdD=O#*-^;PN0WcKRI#A'9/a-#pe-;eOBAk(,KStqc!.[Z"L$d##Yh^kN,$kL-nO9'++UicorEtUtB?SKo
%XoHa$rBeD6h.-D+PfkOde)P7)Te(nO8W/r7mAR-J\M/1j>PER;ZnOu#_?k-hcbR$,imp$B.ea]6>F*hb<u`C#AC2XVD%d'"A]6.X
%3,V`\kqn([4:*4/7i5]CK_4^GVR#BB_):mu`$Y(!VR>D,L;ci$9-Ktdng:@?8u+(pX5#G(3[6V!8LFUKK2f@5PnVF>/qR[=`om0n
%_ijdZ[=l:(H[MCVDadC(CNE[odk\80;?Ds2$tM`u76."iaNIB)AC>m%6l4!^=KFkVCC/i)dDrAcfl0_>\s5id`+:?[G/TrS2!8JC
%i)KNAm603/=V$V:-5r^GUp2NRF:e5?IjbkpmP"2aBJ;,,p^S`0c0S=7T-s'p*jt]Voa@YK:s::GEK7W]:\O4%Mn^<bdn0B!^A:"7
%!LbVc99Qei_d^fu5gGeZ&kI_!hk!6ME(5)).7:mbg]8(l:q'klK_#o0Y#&@nciDR.g*7dEF+bd+OHcqAbm=Ujf?YDpWo&3W0BYK@
%g3VV:c^WF=k@H<=p\Xhtn`EG*hg;OC`T?J"r0aeQYO.I%]Oa]'bGfa%d%"F<%S<-^GUjW.iA&5F"IoJ^ZgEU*@4;Hl*1Wpjii2RI
%aOU`kOIM$E++dN"2ck14.ECi@\^$M@(1-o%S5*^7Z^P*Pd`T;fW>Z\I',<djmT"1W6i,q>5C3Ta,nBm4f(./J8,dcf/3G#J*%c=/
%Xhg5rD_3=M:6Zk]pE$k8n*@"@r8OHA]stNVk^<?!YGg'Bm./H0q4[-AonG\X!AD0=T41PO;R=<bmDG)"33#Q>K?"KPDH6im179VF
%:gDD'>m4+MX\e@Ec18Vf,I[Ua^cUmAVA+!kRi\3VZ:s6-kilJCZE-<qTjJ6R@\1!;a&Sb$@YZSaK]G\pL^DIJQRrdaF3UkF-OuPT
%Z?p(qQ-M\t)dWfo^SpXQ5\^5:2O/)$Yrcq9TUDlnG#qPM%CIHIY:7>0n2PTNOa%lK`!178QVtTm$4thIO'+krMSL+A=iA\>]5Ur0
%\rlL3qR^n:82XDL84ZJ(+*-t-(n/'F!:\*5"UCs9S>7K^)$S2e4'7Tcr(f$Oi9&uk8[Z_+0"eL_oTar\X),>S17G0"fp]]Zk`R41
%J=*sJ^mGU4)p@G_M611(eZ0mA"^<;t+CpCblX8F9`*iqhSYBO'h?]!S6pI_oN;?Vt7fbcRW/lb,N(+YIlN>3FpB3\'kJ^8b7tC0#
%i4KpQX>m@S\(:]h.]h8<?Rm-G-BYHOQJKnlI4Jg92oAhiad"Dd5)H.F.(+]6Y1-n:3KYF/?fEV>F:9s`X(7*aR/,DU/0P0_"s1;]
%L+3<OdjmRQ'U@.8[Yol'Ur2EuZ&"1q4*jlPEEDb]0dX3q$?ZX#LNJ<Kq(hf_pC<CG]\^aoI+Z&3]686aCY;S^p/t>gNiQAHOqMs!
%gkaKt(Fi]DAQ>;LTZe,c10C8@0-WtL+IPK^:RcQRTPQ5D9K>l\qnB)uhBZ7*/GBJ"+oEf@ge.C`L/9!(I-dZo+P1UW[fm,1G_Bd-
%eMb8Qc^E<Q7Aq"3<Hf[@diR>!%Uc:JK_bc;L<L$d$DD"eW8spC-j=p$@21)gC`B0U_<Q;a&']Ds:Ej9@Zk/j(Z`mge!M:YZ>usn8
%PT7-qlg.njaflV].&.pToBgLJDM\pH=\uMaNY9aSCB_o0Pd-ke6o)rK^]b!4P:OlM:tY"FQ=*f]=,<(Ij;NDor6HDgf%q81!gc^b
%Ahf<O.AKsrRfRsLZ`M7G-L:!G<nc=ZXMELsB*_UoRWY1R6Hm2Q9.+7Hf);0OC(^tqUZhS,kL)c88Vk'ESuQ>'D*6@g7Bq**c7u-J
%;:s3Ql`BZ/C[*ae.`!<mLhis[+J]"j,[X6tW]D]FkImWl'bHORB+>JCNKH')@OkF,DYI'?\c\6[EB:&;_gZui;f>Ycn:GJV>9Z(I
%(p)bLXX1X'G0,;7)[)Jn:r'B,VE[TOW@V3#T;`$M/[%DL3:>oMdo;At#&i!CVhos`^sCLWR9Lr8l;-;/QdWhpgcdlk&U_?rXDMEk
%Fs2%0(mE4^3?JQU!V/R5!.iKbP!fEKBpX;$8<BfkqhcZPZRPj)8#M`e#084X4HjGqAq:/7dBcX\V>Cm1&@[-]9o*W91j2m_b$9XP
%.^O?/bU)JmG2>J@[*E`k&&'+#PB8HKO;MhLf%`X*UBdU:VUHZo@0qHh>j#2WBf\epW6qA.S(nLp2VgN$K];0G-P.n/1WIS4Nh]k3
%jj8gW*CG&qJ$u7o/XhP#d]_4-p)\s'N_c,;J>3<1B;M$\9<06@QlcY8Ej)*sJ,X9*eceGQ6O+6kq7^HpA.R5NB8m]b\qhTu!%-,E
%`K5sGVBt`>)d'YPH]t.WdGn@=D/G]8$@cQWeM[r6Z(4fq&efI4B1KnWH1ud_Os$Ol1@i"IO/nAnCDaNZkQ7h.'7plgXUr-j%TI"Z
%0S-<o\3*T9J\HtI1^B1jCP!6q^b_s$*:?^Fis#n/N5oQD`j)l<W5).^[$m#$:[Jqb6%t$/-%i^@2E\b7B2-TGE(GKUMk]D=!nD+J
%TQH:[MGZlP1'3'RCl)<:Oj.oFG_+G;n6AC&5F=r[Fq]]42]R^A"Z#934-tQH^-aBph7.Ra].[)V>FE&]Xo@\r3eJ6GR9,]OUMgA@
%;@rUJdl9lN=_NLo(^kIW//$i'S"/66.aWdWKC()W^+5L%SMhgr;U\,S7X8?@8S91>"mI3DCmO8d(gW7KTn+KU(l,U>XufMDN94.]
%VSk:*L_1:)`(C.MXN6Q7%]2\4i?f1MnMRD!$Bls\mXQ"2mn=-Fk6`r,ksfNU,%4D?PD`Feck2:I&hMJjiCXqiJMOqKKB*EV+:r\n
%2V\>SLQTClM-_t5@K%B[Jo3i$5?mZl`XoqJhc<Hc2`<1^F1S]5dfBCKIMblE8;E:0=Wr/'r>FXu<nE0J`LamYFYBV_rS8H$[N&1!
%IJBjt*$\-$+JWKOIVU9S?_'s2T,lWiTRGPrrtS31-u3X;$?CH^!`c0j.d8j$#3]R@Ah&1-X`"/"PT5QiaHd#Y8V"l36TF[ZlNTh'
%2rWtZEqmY=jhd(8@]_VJM)?m%d(V^*B.*1sQ/^\>b:YgnGoF+E-_`7EGi3b=Om4_XLWEBX>SQqD'AJT6(Rdf+9,j%+/lOO=<03(<
%7B4#SEL1%AJhC^<EtTG)!CAlL4Q']lh8n"!(jA1rkVPe<jo<3hF#,(^I@s(6ML0.PC-WTKJP=2Q^T&9/D863<Y7gHECGRhf;;On(
%dDK5aV$DK1'V7i[B@,6a:%:[*Aa+8riB/BK.bmY6Bj`7of\VCA-6:307?c5j*@b#b`c[[;i;`0PTrJ!\A%[Z'g?^l91KSJ=fCf/"
%TD$mFjtDs!`r;=UpZfEI"@SufEqB80`YpT67HCRBW<bmil9po%gX>J4rs'R072E9a,Zh7[E)P'MTX@RQ;$uk&6rh)s6GXA6?Wg%s
%0u;Ra1't\2?S0=?\GX8J]j11W=5[Y:>]^]Cn"UscqCgUjF[Nn![;Rttkl@7!8K=>"'?.k13dBi*Grii_Yb+\f&(NXH]Yl0Fo"CN<
%E^ik(l8u3CNUM5fO'g`,Mu7KOF)Whp^jdhJ4KQUrW_2'rUPbG,/b_q^@((ET6(B%qU-9-^Z,mFFcmD0I?\6&lX8@5)6Y*MrpDtnQ
%+^G3d=-SKnai%]p;VEu^#k$%;_YfTe%94YH0I#8pZ<qa<4%>%kEP*LJF#-NIlVuYF:fCfGB,R^'IoYg?)(\]7.)o^kOhQS`T((.c
%<)@!3b74OD1`lh\>F<A3j!Dn.<1gc3&.a>OKuflLX8pZ.G&`4>K'$a5+Sd0=,4frrA>O68Gl#-FZL:3=C3i(V+a\a^%SA;;4OQL-
%(m`L:@%pR#S#\"_[n-_Ym2^37YfCdX1a"o5$C"K$s+:_eok%o<H*D5?.e6_M,KO.s6`EtrQiLEjbHb^JG'jfuW0L(O"n=`r8&5BP
%Vu+F9c5'0>X9SI=R>R00'YH`r"(D=iClW0UJTYeNN/Ukd1st<$=G)X(.0W=0!suOP-@FLeM=MWZaiL1hVN9h7bOq63RM-G=1OW)C
%*UC6i18guEYk9^m>kF-?L4iC``ES;CCi6^B:[2RorEVPTk5I^(R[Wi$mp^$6!5Z65bRAdb6AB!?2/Lq+?jS]8_YMqoB.3J+%!ce5
%ishEpa1@t3F4K9n5\&e^[Ge?J#S]Co<3(7jNm>]4HmIU@g_rfD`QdH`@<V?&_Yc#U#',r8`@_+EQB;1^VMpd/>TXZmXA5)>fi<5$
%^ot88J9ZseLmGs[a9[H\*Vuuo<i<pOrj*upCVaW4LII_.+@.=SSif6YH7Cat0p*9S^(Se@MU`'RBf"4sd"k5$P`",8%e8n%fFVd3
%$jP[V0SEq9J`/j,0(E:beUGKB>lP__nlHmk_d$LI!\SgT@VW<tJk"qSm2o\PWe2A%R@liF/Og`^q%UDceQ75?<[&>f<<r-bb>'<D
%DmF7`+^G)+a?DX1n'*n]M8"%:Y)"j0e+>qG$+%<d+!5%H!e\qcW8XY=D@9gH#Fk*H.E;\DSV=ci!OB1]n>`mLEUT!3M;Xm=D?Tiu
%34<)EUjDr?<:)Y3RMh%ejYhK'[\QH^8<mDr;Xdb9aPRS$/RTsZW$[l]=:jCcq@GPh8G26l&f[h7&N-EMYKDmY5Y[qn=J#`I):n%)
%c,iQ_T`t/p<]1Lu:n;SPL^8f])JVa96251!pCa2VD-U5;0u(<2m%C7,:4qe+/Ju':$@lqc!`r;q!&2VBFmi%hKlEnFf7s!6+.>VL
%VdXNU`.J+78IQ2rW,HFhLoDs$Mf-bU?kF8H2]Z)ZJ!\S\=8[UM_D(dGo,bb<WlgQmV/XI/f1lX>`\<K/ggj(]ZB@&e,qChKRT2hC
%E$dKa5Spdt]tYKZKY.`L$1*'c(6R-K^X=]C@Q"GI<FCk[R.jS`\:JuPhO\;<@'VZ9U+uf)n%HE2:Cl(a&R%,#NKW\Qi_a0E1Kd`!
%l-mU@bZeCG#uWVjo9QlD0bWC&9Qkj0m67`j"RiQO8d>eLkJ82g.esC]*>WGpI.:30//se$+:6$+WW6jE"Vh@0$:SB5f+GhXj(41C
%"+UJaq8<Oi&0kkoPd2E@A]."C\eZ$E[fc.0&!gt:037_o4rkbG',U3Tb+:Nd>M7\,K!l282u61=AtAk6mgohDd]4"(AEDnXZQ]4Q
%$`n91C^^aQUnq6dV/Ou3$Q\VGos7Qh0.\Ai>EQf(s1-s$52$DqRjNpC#a_cS>,c)sVb$i(gIDlgXD%jE)P^@X(FFt"R_ilU?JsTY
%^W3"YBFQJRUPulpq@WZ>)+\R+;+9LGHcd[*]^Zh\@2X\q->3N>&_Z*1nE>',%PSclk@(bWJdPUK)q-5qG$6M850fFsKfZX?\.8lm
%A9Esu,=33dQ=\#$:[.4TOEV0sAcd?61'fBr+)Q10DtX!MaiZ;1(51T]gY1C=L]S)pDOME>q/$t[#m^c>gJJ''Aq8;ueaM,!&<+d/
%Qn,_NW/+DOPf&(hcR;rP$M:]]@7Lqi6jKAi5jgq>"EO561[K'-_!(.YBpru$8ZJbUR+Li#8uR/0i>!S<6J4hUN2bH`[V,pPO$cZm
%/j_[s,a`kS;#s;jZSbnM+WD.?%;rB%YVYK'ZO2C<_U'ALFN]I*62mCiBEJa%4"_*QOQdGk-S.4J#[(:[&k;C7Qqg!dUmN>>SPlI`
%jcgL4OZsO`5NFR%J;\r`=mp2mbKLJ6,\.,1'.@E-\r\S6_bdu"A981hh%iu+3@e]HeHrAuIetm3l>;2Z])8%*7%XLg7KBiOE[O`l
%AEa+jNY2+,[umVWE3T2b;Qd##ooW4qP@toP7j;4n16%sCq\(lA6+S@eIj1HR<<R\ZK_`(P5ef7Y$'?T7BDc/Hj&0QN=QRC*$W8fX
%h=<I+'`pfYaG_P)d8puZO;JO)+@_eYmd0LR=KZ,0EWUgJ<5A&]:\BprV.>20:kSuH<jnYS=79f9H!d]3j2RjYjffCJ!$dAia=?%9
%"NePBO_,CSjKujGL*$OH47@l[E-l<.h-;:TE42c@g7/(p*J@M];;nclO6<P&p#cULLH34`7#XO^Dcn7kpB@&9YYUO-7^1!fq<<)#
%CoL-kFcQBH'9El[]N/Fa!*85R-^"s?OD6QWSWqAn14_XdinbXjU;][b7d\WjVB\F6"lB[WRo9K4B'?hOih@[ndQ2bQ]/4%<m3X0@
%'LUFna]2['jo?VoK\i;A1Tq9#Z"60-p+U!E&\q77fomdu/1W[OJ6EC<Ge<f61gMHp6t'.XI(*1Ce.92V+GffI_ZZU!aX+us+^l63
%o8O-4LeRfiOIO"J;0F20<(A\L8K)nA=X+W9jKl1[fraI[<S^A./g_-o>@iU,:qf0hp4d#N/>AAN'JOnr,\;6\_KGs=nBO@O-'BL=
%f>9]5kmC<oJ?tUs$f?pe,Wcl5d2G%p8^[^T%tYoihRR1Aq'CREaa+!f%L7m+#V(PnN!u9KC`Y6?M--k(C/4T!I%r\70h>*<(J4-.
%_ppoE,S>Q6;d%$nSHM1aQWd"pRe$q.B^A=VVTr_V9dW/"64Y_a7hMSddMX9S$V"C^#chP]`CR+$X+dJrYa!uA>Y=UJCA8\:a42EX
%QiY(?l(h<`5cDN".Z-8Y<]*0rNl1#ZWhj+fM1^-]q'jFZ@6tE^W0n,?b8KOK$9O]3'qOO:r)GOA.nZ.1*aF&9]<W#[l529QAO'=T
%IZMO%"dEL5"WS2d!VQWSX>)nh$V_?!!',@j8FTKg5M0`W(+VH.C=O`t=D$^!A:73hk5YQ?':e4PG,*Fk[m\FncP.lm4Hd(42\R#,
%(dY>fKP^.fKui94`GVSC(W<*d)FA@\K[bnrJ:lZ/+VJ7:n(IV)#p,`H2Ojmubn0sr`bhYN-WUKJ"9t.d.S:<bV\55J#VMK@mD8>&
%%;5'j>0/\/89>i#,3CmS`IR6t;kDWC1H(#r1312hYDFJVFja\pMdL>ect?VMs/Rd\7NreG=+fh4(""i.K?J`kmB(-!'6<bU*?A'P
%J-1.ch2EIKIPb@b\gW]$Y.!;lbn8%C_HUU`i]W#A(NJOr3@kej&QCiPEf2&"GT;S@i&-fjk_AUI6HTNXrP1o>5<d/HWfO2kfMK+]
%m_rdk%,@XuV`9FB[ulY[SK'P@qZr<4&@JSME`E^+2A7LG=BM@F)'n]8`4;fnFG4q*W3cbXZVX!+L!NIh>I]qQ:^[;MJ"+V5e;<Pb
%c8`(\Nk/;)A>l$FP\X+%IIMGjA:rhF+(W.KeCC>55\!-#A@1rkZbik2L4f:&%n4Tl)-R81)6e)kO\p0s6)J89Y[?`)$#)Zu`ZO.\
%aflIf,j%6"+q!>r<diP9""]fk0u=WA@;*E@+dKeGXBsAA-BAUV4CUA=c@Q-()aY7;0Hk,fPUT&Jc/CMN>n)1F=Uu9q3kRj-5qu:J
%dBd7W$@eoui,J;0bR,Zp_8X;H6-D,35@kos78eA!Z7Fb+['IT=:J*LN'f'VP'@b9dUWt^nFB_&$Il]jak3EX&;NiuMS/8&ElB![F
%A8:1NL'%N9;lR=(%?K`0E`f.=InWmW%X1OrndnTqH)KF>oPWTE5a@dOGKh1J$5*-LY5O-nK'm+,XSQ@A/Kh(7_$)qIMBDI=ffjs8
%(O7WXS[[oRE6L]:'n\X&**gA=L`6^HW)mA[aB":&&-6Z>K\sp"1V;X?RJ:8^GJX`ME0d(#"t?@*5rRS>KJD2"9+F.@D24Nl^;?L`
%R]7m,jq$nA:l]P3E'8dp>[uW_1b0W6#Qle5#_eZ0V8lrfI>a6M?:VpG'U\rAQP:/ZWr(6],Xr%oAF@[S[QlF,1nTSqUu$d=_rOM7
%i(DoB0o[3H-F5u#7`5O&$dg3)ei3V^m<E-!.E.pk-ZG0-^kc)P?s+>po[';JhtSo8QD/`FqKO**7u!k.:4)B7>PXh-AcCHar]_JT
%1l`g6[,d-ps*ocSOo-T+AX)F?OY[_X%F"aT3j\D5%I50M5riJk9m*3U2*uQZD+%'8gjX-Xl90G9W^T@E0AO"Z/F!5[gnnJ+'gAt!
%4W[j>:giDTjB[M!=B+W`[2'u%d4A`$3%4a_&I`a%2R*O-R[?<DfU?]Oh_-BtS.Hk"]L7"mC$[Jc!A`2([.l2QD4(sW7:RLLlVT4'
%3M%Pc)rH_deLpUP/]"]WOcTnf"_;Oo=]Eh;0NZK$4!l32GBU%1nk[D*Bi=!K'N1"R%E?Oa;0=JKe(aiSFS:Y_rkArSrp>TT@@+(K
%L&(iXH::M19Z$j?_IOp=BIQ4_k4$RI*+o]ab$:(7Rhh8VcB$GjA0,l"P"GfTSA8fZ>?Z(P-Np`7Zo@I\Pbq][l=LBI=t(=*Mh!og
%o?J&TJ37`>i['a^<O7j8)3NK\2.pK1q<!R9iTn_cg!\\=gY7/N)^f&tSVd"hb?7U7RF9qgIgL$_9(Q&Q-Qah<Yeo*'a-go:L<<b;
%3l)4WZ/oLB^@=.&\Zm"#R94hJn'B35o."g;6C?no"\'Iu&sFO^*V9Qg,>?El#.LL:lmu7?V6++]nC(=Y)r`dp&]QX3Mht*-Ru`)7
%U&9Jn9(J.pb)[>Z3u[1lqBY<2Cm?VE%)Z9L"W-/\f_N8\G5f%uhP))75A/t(D'tA!^4V@Xa`E3k/dZT1`/<&\:_np#G*j90&im,]
%e57_?6-pkX`uR!ZWhl?i2[k=K6jta8p5:KFiIc`O+i?-!,0!_EEIe!Ka/.'ZjNp;B;G:(KX9[%DSAp&g%H.q&[I,"Q)AJH:F"L9N
%hP\KkE2EO-3Q%7[bJWSO3UT;MUH4sS6t@hm4m(5iE]u&nCI2Naq6[l,:M\Vi[HZ0i[6V'p2jI2qA]dq@9dCD*@]RSK/`t]S><TT\
%j-Ric3EoN/ALJrgDWofD1MZM)UZN)eb25q;TT!&Qr_/`%B%4h>7a9AfaJd@6T,1(5&:/n\=sN86&o-/l@><;0>Sc$,)&0JC0Iqe%
%iFZebeTqklpd(UL5kc5UG(LQ&FblP/^1dct*p\t+M(Y\E,Y;D-8S5+>]i-S+6]kngb=<Wuch9pS5n?.+<ULWmfLX7C8(g71"j-IP
%aoMRAQmm0uL@WA[D@0-tA"'-^d"AAA</?o5+6>AD^8EdOD)d_cN\f"#o-okuoZ_G(h4J1(h,ZuV=hmP(6NMF&<\f/"[Z\B_(+5Sl
%[QAEPe(KVlZ#oFC,/0$Xq$8QLo&_Em,/aI;nGA`,DoO"%)U8c()H`F6lBHjlfbsSXOFc<,)>Fd]p_FbB()cm;POVeNp+(C<%s.aM
%j098Ik7.D@6rN*o=!rIUs5XNSJ:lQBL^G.G%eEaV?Q)X^%,nZUh@M08rdp2S`@<@0P!Ne'W2CoDVb0=mMADDg4%a[,a'pFpc/`Ei
%7$Q5V=b=.2J*>'d-s'A9:pXCM'<<+olPofUb-p$T06gj=IpI3+TcFhfhg..oF9(]8>lrPN%,S).C8[gg]^0'OL2#iCB2.cL!"t,9
%V$LUl$kKW,j:s%[no^3Nn$[k8rah,IXMa@EGn$A^ecb.E2<cfXn,b[<Hq)qV]jsrDi]K7?c;)j^BCrOF\?Km\p1ek:69(J4MVbFT
%!"]c9VFSNV&;aA/):NG2+>DLRo#$E_:_Q`.p[C#&mWU^%pp?DpiTFePTp9rW*TnGbRP@UuoA'>l?l(,aZ%f(oYK<H'gcMFeq!>in
%"d:tHB?5)QC'j!=jorIV-q-uQSZV*(`41*7@II/+CniM;;V40=F_]57#tu,?WDjA,XDk8N/L++\&3!?b,p>O;0-]Ospo(-3M64(>
%UA^gW^P<&^mq9()Zt.-ZIm&#o=&I_u<Mr3c7=[ERq8T5'4t!uhdYK%Ej#7Ek'qeR?H#j;;ai;E)`.ZPppa4FeY'`a/!FWb0A4?M\
%r(^:7QU1$"oo[U)&cVnsR"W?<@u.TK$.Y),+%[8ID"pB("_2$5%j38_;\?iFk!qGI8.,Ms2shCL-ES4mDO=,FVh.idaUj>W#oKm3
%`;pXh,Ru.t3Pj_1"eWHlYS%]E'f\$S?[8+@GSPAt0mXoSL=UtnnJ!&+#sL]_:_sH_?lrK_1F%_c[ZrnMEL.r[k4_\\!UHS!<3^6i
%WKORp'P^1o!M;Y+*CT%S1;Ct2b*`I3U.QWYoX!<-P;l(cFE!b0X&%O?)\EsG&ZVGN&ehAFH78eE)=ac:aF>VCb;`8h\Yc>qp,\[?
%PLON\PGS#a$teR[5l8<$e*t="iGkqt-&elDf)WBCZ4b#qVr%r8_\O=f7]^E!Q!u>i&ijFq(,sIr3lh=*/s/Q.<Y@oU#HWNpBuF'W
%D[Ki(b-\>ph@A7qjmIQ=R:N."6[H"ACIl"6U)jU=glMl[GtL<5DT%?2;hQs4rRRW#/"s:6ADe.)J]#$c-rr[u=Uj@G5UPj[>'NZ=
%'!SH807%:b^'aHKZ!96tfJ,24'W\$>,C4=PBj_`8Q<?JRh=(9Dh7s%$U/R8g!Q>\PJpa*Fq6N#kWj5P(!Fgh&`t?3OaL()OW/>jZ
%,=56&SSZ[Ei&b.r;Lh>BoO^]MVOf[.$>P-t7'6"mr`_,u2854)bVY$\Dm:0\Ef5P<We7(Sg$[uUiumX4mWo!3;.ALM)7ZW89J0$,
%Nl:!kZ-r)ae+.3R5!/#4XDC+DX5:mVJ!n"[@dHFNmh,t")*:JhQrQ9k)$Kl3P-72K@ROMW#Yg1s&fI#FMrNL*AIc"R$D/MnM%T#4
%o*Ao1Nf6=JQZqH$OV91T.iGX'0\FR2YlsVtO3&&nWWSrJajOqBd\C\TZ#X:;pQ:P.brIP<+U.O+K>OE:T4b1NYu?K:,>3?F1^X&`
%KT6%3Q['=KE>LK)nC+hWX@.?(S=&E^+GPKBZEWJIW1/!IE)b:e/Pao>Int`<=>?lQ<\Z76hCR\/#?@$&QLfT7[%'5>>>U%+/lgtI
%E%:tDe+2;4k5`s)ZfupEQ1N/30(?.2H+B9W9-V1T6K5UA=9TSqek6""l:>'s>sVA/F(6gp9k7bT,>./h-sr6/(8PD1W.asti`0uR
%Z8+i]qC+>bK<r+iE:(7cV(>#,hL1q+@S`KjG7i(1ThMp6$-U"f*FRB'1^IaA_OALmV3![TJW5N;jc7;([irt72Xel5$@[/RI7!cg
%)&16k``/I_9QpjWs%9ke)F8d-4p;tR.m3U[&&BWF--=G+7e.0t\]`+]J(ON3GHuh4I$:WY]-SDa"dVq[F7I;[e$#q*Y6=Znac$.W
%UZsf2W2PD8L>aW/Vb9dEX=:g]fQ(;WYD77;rMQ]=>1<)K^[;SM)0JLn^6]!"rk#T[3Qaokb1%"og6ZebJ0_0X]d+QBbW\;mck!#S
%#Vbh]Ma<c5"]lFK#l1;HP,P*J!$o"Be]ouBn(U.#;).n`Uk[gNYUL9hN&D2o(P1eZj*(2Mf"8DhKFnC$>6Q951Gp!pX*V_BhT2OI
%o*&aiN+JP$.IJ/%@.td_iQi`fP;P,'R)Re[/d"CZ2\,uiCn:AK$4$DJ7!ITEJ:?QLOLH.R(m$4&R<FS;#U;G[\5R5bDm\=A$pT]V
%Q6D]MMd2R-/FuFO^J`<^K+4?`F-9a#iE[`;5$N3G9F+V?-5Y+qLQ?YkX4ZXOaC>"+(.SMu->cCo<rJ`=<=/d-$KlSp@5=e@F\*,U
%(:t9g7#PB0A=rPY;'=VJ*&&7AFTsRT=;k&8c".F"M<mVS2o&>kL-lEGo^kSs^@qZK,FZ3EgY^4MktW!h+Gge6ZAH1b@DUDWS;,&I
%SjY;,;a>p-RT3HjE>b4-#s6M>-q(5>j:DYrC:e._+*UL.A$_<!`aeKsP<"S`L_,>DMRN1maYi9+7m_Pk`j@'O">`,JBn5G9`7eEP
%<"ade%iBa$g;kd7;c0#bGGs9JrY!$"N"B:!XXM.=kpPU"_?cOVKPrfUga0A*!Vm]0):6M\]>h;:XprF)$jOcl#qqEH3#HAtm**]e
%BDf%eep\VJ,+/FL8F]A4^Q`;VT.#l0E"GZn#_S!C`.Z5eFuoc@JB#NKYhR,c%dFn`f'2.D]4o`9&i*T@Q%1c-1u+,%g<>,J,(_pg
%(VK9+W6X++W8hhljb@1,`6M*r/"&o%KBF"52a/"7%P1Log:i2\GKSTa285]rT9K>/ZA64pkW3kd"-1nAaV!T9-*ndb#dpJ6gW*2L
%rAXpLBhQR7'K?Z8Y0B>HJFW$?*b'9d@j%:+:F#?)&udb@G.*7%(-Z=&lb#;)bS)27B$(_X2V`s9qFFBMpt:Mb[V%N@@#rS"^YhLj
%DN0Y9>uj]+=ct:J4_dbmogB!Z(YLr;CKH1!TLWI7PaS-eJ<2gTR*$@l_SsS"OW&rTg5L\"j$3&$#Z<g=S++N8HNL>_$t;Vp9=SpX
%bCfGa)KC(RZ9W`B//0=?6Kil2la7ehOK-DT\$X-q,c%2\kK3?Pr+Ff3,j\D,WTY/o_>/:\TZ(.?g&6.8)8eR'e_d];]V&deQi$5_
%PaYp?OZ2]?B!s#3AqUms+5G5D3PD&r]`F5GOi%g"&E`6)%p]Y1\X>EWJ<&KFgg'Ki-:(U\g,4AM-iVY%$*1Dbd'Jmg)k?X0)oktm
%C5eP%J:&h'NoZd84uH(e*/d>u$mWK_\fq4"K/<\h[Y,nW#."u4ltjRUp$I,e6==AfeokkIi&JGW><]uL;D;=.f*V=*(6e,[jRa(e
%#@._mIIu`:T94(ZcN"s".G;%R1ptaN<*lTi0$<fJWiZ`tp`N;!]Nemc2&>1<Ko*J$aoY)'c4VK+7s#2]YaA;nhoYu"/o@qiE[:Y$
%P_XK3+f4F3pVll"rpgPp*sMl5L%Db'Y`1qk:1,dQc]70V_EX6hSH3(uT4E>0S3>W_j8=4,C*]0d*FhM9=(.*dTLsfR(P"6'6bWq8
%M>'r</X*3Rf4e<I2#V)^T*mZL#Meke3Dthf-XO4<%kj4\/G$*j8HY9^GS?:*!sOanC4&ipPdk<;RrTbe\?r(0TTC7"NP/E47V]_*
%m#)O3.srf;;WLQB:Z5q^q>^;*Pf`C*h2!<S6GWGdA,j5i<G&Y#N]:e7@/B`N-n,rl8cWYh`C:0-5#eq_J&IY[bg)BsW!B(qd_[CY
%(4T_6Ra*^aWmA).]tk3#,WN:c8HoqMYu#<JJEV]03sup67P#Q\9YAGGoH?:P4[D8)^dDgN[Y+^"UO](^;9GjX6h*^THQTGG9LTRD
%)5EL>We*\;:e2rG]Sm,nP%u\.!guE2/uB2h(g89&@ArK^FB:_.Q"o?=LDUc_/;RQ)s7MG6AAHZf`f9=i!(i&0*H.^H$<q^fG#i6&
%RE&`b-3JNt>i`(U4B#T)^!m[u\K,U/IUnPo1hX5H7@.Z;p:4p>p`%VpKc;J9,DKoh9H%`;om&Y?Uq1&COE$*B;p;b8/UU3NDL-JE
%?<;oOW>F?*U[]jh;ek2n@l9A0OgQTVmjqq&Y&,K*9!!$u.]-IAb1"h7.6`.%lobV_mp=mg\AJJrhO/<Un(Wj$k!ZjD2t,)Eq&$h+
%X/A>PFA^TZ!KVcY>C8$Dc#'C?20,:"Xb!O2IlRW*)4c=KqjGC?HG\r%iQZ'iFt16Ac9)"363SQm[B%.8`iW,J0$0ci2g%%#gc,Sr
%;W:n(`2FnY7o5giPHEf^*U[&>!g=VWO@$AYC7M[O";9WWjC5TAs&hu^g]irG7SuA-%]G[g6S+G6(Pa1G"tK3uIV@6i5+YO,@DhF(
%d=a_q^)f?I\uAQs/11%g@3\>JmUIDT5!7VV*-;gD>!GZ[c1GC#a%spej-?;eQDfC+pGkmsBe%(q3YG.oG#?'Gs&\qI4d%@!P2:Y<
%q@@f!)Zn\H<OIV9EYobt";2gnC][iRKj]%EJB=BK24FaK4^C76@icNUEGoE"h!(7r!B7F'h9GS3oK;2j\9P#NbSmqIe$M,taskUk
%lrFhA*F[J:*SCm^\[L&*8sb?8Q2IltVg*>g(05J!Z+9JO45ukIWVm\b'3h9gG:'9S9AMq9J0V<I0rp<;(JZJU_,d92M$J6/"bj$h
%ND/T7Tt.#(nEp;O&lR65"tAeJ*cWZIdl)@f`MU0.Q,0&WVk3W4a2<<D>AI5'&qZOQl-92#3]3s#fBLqjXR),C?0b42>mV`LP92IR
%_qoXj5C]q>n;j2<"+&`IR@]2YoXO!Hgmdd+n?\,RI!VsW+(8[.)O/n;&tY$mDPFgtZUGq?E@8-&/#>bPnVR''m0gV[*N2&BnH%#(
%</,6]9L;k(B9=/,ET.m(7m[U4n/LMd"Y#A/4;AD<?f^5E*+%-L%Z<R+gd'?lLWjNBpPLm%]B0nf&+S=r?.$PGfI?ss'MRr@;)a$N
%nS0ST>;aDpE[.,OnLX3#BSjk<Gjo-4O6"gQ9sfUK`[EKX/('O#KDb)S5I1aD%EP<@Gr/%;c.8Y8HY*AP),!`WlpDF67u6Y5>TpS$
%)&ora[q#-_k?YPW3H^g\=+/.2G5F5ep'7YgBNq&I+cUfYC)#jgDF-A`:Z?pAk<\AY+&8RD=m&+g0%prhqP;oL?/#$Zm-bC5<bK4>
%f=6k$XNtd&I^`4,^mOO#\?NA:K1L6O?TXrWNq24]s!S_21a,X'bu9PmF'$\O5kWn#'<(?$<[n^P?FPWEZQ.jc[sX5En77qN=O/?&
%s($I=h+.<I+5M(r+##G&<X/J99_pP:Jq&11G!B,ke?ZFB[_mZpL2uRfUS_WPmrY%c)bYQmB0tD^I[B9M&^'oIR#5*Nho2(HO,aQL
%Du5'C]7G<:<ju4M\!>'h$,sNA$R"Ef2#+U%BDiu*$i6qsAGLq.?P2u.qdG5[NX\1)R2sC`@`UVdrUbJX0>C^!fD*nM\^FEB)>cCZ
%2Oa"'ZJ0BT&\7s*:X:]!-b%oq47W..q;dii]Sf"aZla5\B0O+$cGG38n\k0HIT2r0kpIkY'16UYQlcX"Ija?Bha,!;T&GcIg'hA,
%R8H3"-nR3c4bhLnHcRJJC=#n#%DCJ%(`77PC3uF2:H&fcqDnjnq;WHJF%tmKQ`<$Tl^2"P%K(f[f-l;$QUNZ8\Z?Ya;q7S%N*6$q
%$+Tm@jDBf5'460#Y_6uBs0ksl:^U(V"R(TWI<=bq[dAFID.caOUKT<::!MLSTLnPn-hT>TQ[84"=e!rf#iD/k1SDLV)`V-P1uiL9
%`co`nl8j.^eGo:*`';^mV>Oe`+S;*oq+\>&POe$SNG@t4SM?I5=;rMt]k"*KD&Z3SW-(4&La&B#U/l44YV"S"S5&lN0U]D"W.JUc
%kd%tJ)aYXVe>8,PM\`2K9V9_'6IJo8i'+/r8\O;sXs;sPk]6IoWMP(8W4SM%;,u&aOnYZVDs:gIj?)a=X/t1qZ&>ECF@?LkiV\Oi
%XKAFrAVd"*M]m-$#rZB#YI-hkJA`I6F3>u<<^R&I!8.53&%AcR0dM#`P($a"r=-&;.F-JqAST'(%)Kj#jgIUo*"N<jHFk1eAQIQN
%0QT0\>=6!kB&XkDq!H@n?OHT@'=J&F^5S^l1hpU6AIXZWU%dI"m^bZ#\Xoi#:^H09"N)dh`(Xhnle0IWlg_<(`Nq%,Q/IE=95[<\
%?aXe]fMJ;]Xh*)<!/E_OiJW@Q0IdCuF5t=Bkeq9&q\<R]biN0$ClhOA`VgBg+'0H[(>N5YB]bU"/N4rn,MIYPq)(R+Q=L05T4>&)
%4+[Z#em;IsCjpSDBb^P#%Di&&U%^XR?TV+Rc'Y:F,pPQuR=-eRResnO=rg_O!/j\qoVd6,h&j3^]`]b,d+7N7ajm*A`THB@egF0K
%/ajUh`?0H;H["6-*7L>X2"aj^OL114V7d<pO#mAZ/'/sC5K\DVUnmX<T\%m8%PVqBfdi".m5*30W$1%M$nY4u\YmqEkqg(%A47(3
%Kb%9OXS&#G-GY0Hri(V<WUl;VaAug4ou%P!W2s)6iGhqH<ucH3hY,/Fq:Ee5\UC5'A:7eiqO"`Nh/9*R-rHSYD7]RmB<rfSfLmRu
%F!]Ir64\'bm(S^:^Xn**n\t+:hpYuQ[p+&[1&0:kFlS:$!2tIGG#?uO[;fTlCrO806QEMQ[Niib$fT?VE()DD@+#dHV;J-Da=SdY
%JSn<trLN1AGu4/ho21=$H*tI%T)gc`#gk8RF[fnFcS"[r_8NXTZmTJ1-hI!$CW1=-o39uKHJSf'N_'@nai*QCc(el4BSaLG'2WaT
%*ktjeKiN1FZ/<1+oaWAY0ZqW0U8Oo+0aNCT0LMpV:f/-RQRuXCplb;m#3p!35QsAtk$NfVr9,\G,FMk4O1PQ.W);&8]_6*QBP?cQ
%*YBJ*cOW'pG9?@U9)4$49g>"/BlZH962d1*XAu.4]$JI!]0bDbnuL57-]^capQI!(e:$ou(\(R2JJRc0%(&d)k#IWl5Y<nkjG[,#
%na[Tu"g,.Yq/q[k'D(M8)V:o)+-?sR=%E&;A@K<tmT"8#jW_4_n?1jhEQ)_N0&H2N]!1pnY],OTQYV3mpo1KimTciUp\_VAIQY:/
%Dlh%IiKsKj(f8kMX)h!jEPLko-!cC=TO\EZr&YZ+Bs2hS1hiU!m9UU'6JDl!4*,kV_)4)5h@'T*_dHmJ.Yt0!f6^&5m2,Z(>T[7j
%"P$uK^OP>%364<B8Jok;<F.4@s342TTI$cfi\5NX?%L]RhJbNB[/Of2N(inN%a)4b<#@pr4de?6\L0W=WNYtdVbudtd&/`,T%ul>
%-[**@7o+?"Qcmq@gO@!==psDk^W-IkEn2J:kF>#HlKLqMYp19fgR4hDXVl_3j2Jb@eJe`+m/VQk\_HUmBTCL7k3Kmgc=b1_jcSGq
%$XH,@b6&r6mtBT>6ET2PBj40dku""OJf]uRM7l"%?_5KlYF]></;[Zr-VcH^c#'e$IlO8WV<M64$L[Skl`='TLda;[AFRp443_L%
%2c73L:q%#ijlu0CCGiEdQ/YKSLRm;bgHDaZZ7hkHW8iW-ZnM5TU94?n=f$?m5ulT*IE)-1n,<$a^Ns.6FE0CiZlo6cN)%-r$DS)$
%[a:uJ*LP%Ljs3=BS3>?QQ;O%8oms61!Bii)pZ,sOosOeX"&bp:,SBfsN8r8fK2"g,!P3-^Bljg"?)'f<@k2r6@TObMTfU1c5Ug*+
%Y2:%DG,ah_&rI#ULK%\orJ83`V&UEeTa]A#0uai2H_Z^[5EllM)L*.#36#+I]Ot[G]1PfP"b=>bp>'6'k-0oE(E*RgO#Umi?h;r5
%@(Ca_OnuZO*M@%gCV,#r1*f#h!)ME2K&+kSUH:r\Tg7!kJ!>b"7)#&?*WBYC]Ypk>WW_R$Uel+#aV)9nW(1l@]Tg0:0.#NURhqgU
%+>f+2*+G`E5U?rG\=Y!7'o8FQA>6qll9l\T=*q\'<j+3&ZA/m^cT^)4:\N8D[sIcE:F>?%Cd+E_pIk+*%A,3FP:c=@hJ(iGpW<GK
%kkcZP\L69P)naT6."Gq2V0J+r>L(<W,s&pAH[FM:DbqMj`3_P>TZ(qM*!p0#mZ=0NF4>Q-UCq0VclqKZ[Uf+QS1Eb[>"LN&cIHiH
%ZLcau\-jl-3Z"%o0S=M.%+/p*XY';:[]b/ik]-S3TZ<Z0;N1RC5AemA;e[fs;Q(B@X#REdnX=i#ShHtjMS/.^pqH^"Np#*.RniFQ
%Ja/+#0?sL12Q%5nr>U*P"ngP"aI_bTGSB(T(U'6mWU_?*%b,qf,2t"hR$@Qo05RCIX%R't7q"g8oA.^qGqa^*8/?b5/"^Y0Z\58Y
%5ETG,%H7ucZ"=%qGHl2]lqph-Y0h?Pm4,)#dY65oZB1=/RHfY-LT8<H]PX]d09aDas1hfUF\p]S;^q-QIrrs7f+4r;>.Z0?`<UOB
%);J_67!Oq\S?X+mMqj4Ao8ASb`m<OuJQMK\]T6ikPIO@n.$q<lg%`6mH`1dsq%/mO2'g^"?NT:g1Ju1jHOkQ-I`#oErX!K0a$]@F
%8<kR7oUA>m[e#\Ws7CDp\5!boe"rGPgJgNrAj8]aIJ1bCYG2N!7XNp\gi>o.c6/li45;H6jItT.juVC_P:qF,Sr`LEHrY"q+XFD(
%k-G,j?`2>E($2k_1o-J,!prAD;pF$.lG*G<I#X<F]DX7efVCg#.rE40<UG6!W;QP!S^l:qm&eE4:nMG+;Z5,HX;rNU`:L9q3ks:+
%Z=fALE%IWPh^>?"6Z_bBDEP0Vc`PP-C\;)`4u@]VD<*KGqTS%"j6u#ipY&dq_uiBK*^>b#DW2LO;3KF9*H=m[\Uq+.g#XLd.AVn#
%0u^0'cqgi>IQ&X\T+21a4GlrjH^=*Uqpn.tI-ERc:Z#ooHQlKp@YT,W9uOK"TQ0$,^A+I[,l2EI8B8Y#E:QDa0Fj:BC^jq`HgsO"
%1jf>C&aOA<RQ-F]M70]E.cM;7dE3d#FV>&$C*.r)XX^DpmD<_@-e9A[nLp0^#LJ"[Ica@=J+\cgm-d6/g$;[F`%rY:`0`cops6-u
%-[3XqMrshhoQY@=\_WiaK2:pY-b&BilW<mtc`dtG$]!po0>G0Q:QBM15EkhonDq)A4'+WNG<3e5$?u=dUm'Xu!.ojIpIHX&J*W+u
%G&S?iZeWJ1,SjAfh.6DfcADU!9QualM5h_h;_l2,?*O`U:1qpTF/^GMBfh_7D'C_%%(ZbjX=mE*+\9,DO"qm5]J9K.;@-2W"fTo#
%9l"qd@=^s:F>Kf^;a[asEW#R#5MTioT6mk]3^^CO!Y_lNn4$Ar[F:6^Bt)D0`A>Y0#SoC-ocWRF$fneD`"7nJB9Fa#((O/0i.nbF
%hi;1\iaU6P^A<q\h,)B)MQs`mQN;j-Y^*i6k0(H7nEh2h^TEfJUu2/83eVC+is2'Q+!06,f"gLOY,TB7%<`RDUGXiq23iJ"$u#ts
%#If2:eOL]59Pc\58&*Y>(P!V8O@/[a%rA["$`9%?9E<aJ@V\NHL%fmT!FB@Q:(%bk'sk!T*!AN*>0DHcp*`558pd?k.C0>RV,];F
%$lSTLHd+Jl=DF%b?j%PdT2b32I?2J[\6!iT*VQe/O?be[ZFJIKW1pafKB_k6ZKfWfQ$]g(0>@ih\.$BTi?O,$ZopEqs1[1(%8rrj
%a1>Ljf5>ic!'G:iM<*[50!#C!jP]Ak"sS=Ji&b?lh(1pcfgr_(kZg8MmQa.?-\#DQ#D7lc$I=CH$GY8sd7.cET$63a>geVpYI%>i
%]Z)UW"60<(.d"MlVqYH^,.`)ZX:bV6TTuU]F8[>^0nNS5>J[6t_[,1^98f>4CG&eHJ]P&Ip76D\O^00X)ebDTW8_VI::b(4J;A?I
%MfHsdI(*)40BbLPO]dLY`AaF-oOl`'3N]*WRUM;Q?W_]+L__ceO@?Uj+rEZV<KT(&GVY*K#$!_l?;fZoN?d:Wljs8SV[)GdBp[E!
%1h![;:c,g3eU/^m#eENQG&);T_:sgf^L-BA#!-u,'`e(VJ.!VLA;L[M1Fu@fCg`?(!&0nk7IY\M/OdISPq*8IF2uh3o.bH:hS^7e
%N6Jf5DC^?@IdZajElVuhX]UBjZt["ENOR+(YcPTR6pB.OFL1TWYiM)t#NnUl%h:GQAqE>(2J79F";MBlmARE%.[VG<W$8%T@rE]K
%e<&dSWDf=!"r^s9Eqm&Q%2fspn_*3)g1Da8Z>emDE\6*)r8p`YI2`/3[QO*o=;Em=5Y#1)A6^,YMsL4smk"-b+0*\!'I:k.I#eB(
%m)`GE%GG,,0e9_fJ9,GG%/6-Ye^En]]QfACLgPrkh;*1Q+d_snRXKG;ZXQ)&l05Y*/"AN@Emo\ZQX/fjJDb(D*<-ps3B)k?+53_'
%.i#c/m)PSEhHR$0:4!a;B-^5)]\XD\'WDtfW(A>I8?GT@qAD)n8WZ<OVsT0G6M*ruC^Wr3[[^jLlO"ukZ5:V?BIML`A>>L9M3t&9
%1Ij5>So7$rK.SQ(Y_J*\I^?Aq56+c4nI/[tX/3oKOGEQIi=e!49<k^mp=-fV-I[W7?ng]M,"_;ngcraBLsWI[QgTqn=nUQrb@,9_
%r;cVTgQ9&ufuYiD:_:7d"d$OTNL4>s;FkIE`dXMi<QQ-I4N9PuW[_MsIAt4OnP9V4!mNG0E*G8t$237qUM8)j@;+<FduOja>\n-1
%WVQ!1k>sqZ?hi.<`I<>Fr28i(69h-CNWd5]ABsR/B\R7dFDQRLl(pg3lP/hnB-mJP;:8"[%J"WGeVD<RGIL%p`7'O9'^*0=N['E>
%Pj$a)k'5HT%RV<d&Rr`02^bO1+$>,e5UkgMq6LgJ,9X@F.7SUtf;P8fD]/hV_k^jSR.eU?+e,BT37#Q#eXHW>gn2S!MkWlu19,9>
%]S<IG94MV0Q>g0"jng(j<J(hZlu=O>gT[0XrYY!&LZ>i3h-@m+W_&9!<22'>[CSK'pLeEb^KQn(Hbe+/;iWdN?P8uCEM2PI37jfo
%i4/F0GHdJW;UnQu4;tUGT17cucqlLXd(\nX/l(hhAJf%Ui]F+Y3$gJmATpuebG,raF/8pt\`bh'aqn,_6NVJ!btTF\BDetbUV@g@
%5X?F2pV1sm1&1$"Hub7)!c!/:1e!fHZ$;.tQ7Oo2Lh6+q!K<5=BD<6!ij+BMbnLs#^gRIGZt)(e)PT4mm]sS'+aQPE`-O(c;s'Ph
%\^$DPm%^M;"n=RTPPO$SrT_p\J#XScr_ip(?JPF5Tqu*Z8@(o@JW6=CF2m7KS1%Z,fiGip)>`;Ds'uLcoB;COp1-[BY]][tUT6.?
%?bNl,GV5\rf%RX%C=t2kTQO#@8Bd9<Cb%3FpU'9VLFRmJ["&WSZ9&9HX-IHV:>YNn=Ym(D1M,;bR;k45;.SKpX@eBZWBNn\Xj*Z5
%=T*c$?V"u*ojJ@Xp3sbR+#if?4o]a`*fnYE;g'1p2oi2cqV@inG-IU/s$nm8`0NMA3hNo.Ij>R'3Gl7?Z]lT[/uM:jM$f3Ug$amP
%Q?M\.n&t9m)Gu6No"lrC.</?8mtYcT6Jo)SFfI1mem5B&aVA\t\<u]hr']TSB#l[r##*Tm$P^]`aD%m&g#f<UX7PHiebZLgTn"-N
%e)Rn0*=*iKJYRHjE3puaW[Bq9+a5H"T`fRMTLBA!J:E!M8$[6!nEm0+b9^u`O_HUXP#9r%7ZoMaYqa7Dl)S?!F_WYI:i;$:(@0AC
%ge%HFL;SD4%=#AQ\F(Aj+4Y3qi0=:*T)p>gdM#leLS11s*>dP`H+qBTMm9=:[N.K3IPL6@$54,pOXK-.CBurh(Dd8g@>M9aq<<>c
%YV3Vl/\P^&NltbbZ'\U9%YH-JJ?-:s8V\9Dbk7!-IhV$hKJ""j\:,Rc(.Wt7W6UIk9n@m;__VL32r]DO`LGG?`=dD!'g+<PQcA0X
%=#NC6B,EeF@6uZQUr:O)d96u*KduGAq[MV$;%-CDT/-eb22(B>Yb(ND@aN)ckk[+N_\.p>TlsXXCMmi=n2'>I,TU6><oD?@"'1a$
%nHb;'dU&M5+#C3';GWZmU5q*uF;0.GpB,hu$?ioIXc0fi<96UijjNm4dZ$5c>\U+pc=u/!HSo#^I:!V*L7k!+WAttEV/]g:f3G:<
%U/VI'\N5RSrt+*RaTTC>a@BZVL?;`h2uI?qjM55jP,*s?lA)rJ3%Np#gu,,j6[Da/P&1*A9id+RfkHC?OY7B&cb$Y@NH]HlFGZkI
%+"]fA&bD%#p^-[2.*SB`o3eI\f@Mc-;^_"3I>O9+2`n5-XHl2-auVT64e$r/%ZQ4kOAmg]nW,4/C!/6%S[OI^aU&i,QbT&3ka"t7
%Q#Ss7fR"$tH?T6a4Xmr0h)CS,"^73H@I]eI+PVP`R-`*]Y(BbN%l@*`7r\""kT@0nfk,0Jfr(Ps*iM.O*^M%;eT9fk"uS])#b+^^
%RmgM?<GJBb[H_8e<m[X1.1t0N(ldP<3edm@e9J,3A;SR#--J3GKu*h63[?T8@t[b7&b"?[Z$JHChbCgupUBs)!,@,+2`TWKYGes^
%p:E2l`D&]#<=1mXHD=nE#53IMR7+AW+"dXmG6//Lh6%\(qe[Znji$n"T,UfE3-4N[Ju=f4RZZE4IerCH=NUK_XdXj-cp]YL>d/t(
%?\qg)\ZG*3+H1*NM@37'@]Do`-l5*@o^85sG2sn!C)\@rRpPVG)?Ri?p@=8X?smAQM=<[Z\ju0)c>F`H0=rkIpRUO+lZ@Od1[Pq;
%Xo"AOFpW!LhR-=3-omm^h1aaBNC6@P*7mZ$;j17)pL!=[c\^WZaHe^D(DQ(GrEp<pYGCh0L/VrVPCN&aZK;KSY!n,6P[?K^^YnO1
%iO$CuV@0%!)i/l>0&tBFC%,n73AA:bP31^(^LN>d+YT.uGZoukX(A"\nZkunH).PgZ9e=;^M7241L4a=7^b]S9@=]tjIO?iT$a5&
%^P@M42%i?[_`G&]O;cY?gF=%]#uC:OY"A;mMftb)U)d>'pVOl\/:6*1FQs5LVpugi-]%A0)a'&d8A#]ek@'$q:5u;ui[=HLW%8KP
%HZI1fJg'hpHl'"?.5OLOok`L[kiQnMlAq,FZ0WZ.`6B_B;_"B<=d-k0gq_mOfh-h6MBo=%:Zd,lcD!E@a\P+jK#lUN#9<m>n+Lo4
%U%.7`ZhuFK'$9K]p>h_%Rqk%6g%s]-C.,U'n*Aj;AStOK@Q=F.4NHfG=9"`B^bj<kl!)<)A>o3\=;*sHXrMP3q,5@a8,pjr<72hh
%lOj[TAWtS"Vais%O>/q/4em8W?+L*@=Lr$^'>-<4DUY^Ri(%Q?R;7IuSphA(<:04*p[HodO`:N>Ck[\iHIaA!cQ3UBh_$&@Q;uSH
%4brrkW'aK`dbS25bJ`aKdbagjU,a,Cem;hX]5KWIbERgZjUt./cPG6Yd?[X5g;"fLYXIQA(se6+2$E@sb(12HErpd]XAN7GJte?j
%F<@KbGhY^.b$GVr!$,@.i?@1YIXch;r]ck5gO.ufh/Y'T86fBA1[WRI,"c$ioGg;,_&XB%8ml:Qd;W4i@%GorD-Lo`F+L4#/r4#J
%&G"Ln7hQj#8"q+7AsDqDeJOXbfqO$KrncAqlArm7gtPV2nT3m_]g20:oh4^Ak<q8_Bm;Q6/;B^<Hg+o;&1%#daJiZYKk$fWCCZ_k
%hS11K<Q*:`faDo5HG4A.><R+W4=rf^Esk\b5<ZI@)faKib<8&"l'YNSXp:&g;IFdU%XET\%tM(Z>KZ4)YBSH')A&m_HEm/"h,`DZ
%`Kl:/q>a;42C56pDtW2I+"+%bme[=hlI!%XiVrpR8[Dj/DmWqU8!-9&-7]HcgotWR+b+Z7Jd+IVeuW@#6GdkGVoQE[/PbZ)<N@h-
%J>[=R\8NHbrPLC=oaUYE4eJhPj"'30^3eP:WPn0&n?ABM6pd&23&P1+-dVb^_k?/PDcLaUQ69.+h+Ur.Eb3[fNgeToR3g(2*d,Kh
%//!!&LC$dGedKH!rb<,gjfFkf&JrejOD6BB9e'&)N1gBtp'R):b/#Oh=1g@D:I]F8D\TYX3c[-e3Nh_S1M]lR+d>t's#e3!B;@\T
%)stm@&3o>UI%_?#^X,<ZI;g@V9R*CC?pKM'[N_SkhZHiI)'XA*3:/A;\nb@NE[.-uTXFqWmf<TDAR*i=^PsZ1BdgWD3olXBF^-sd
%gYYp<]+YGmLH02gJV=uG>h)8#FG,]q]#YXsB?`3M9aIt:Z8ogPmFFYKg0S\PJn!-k"nX!A[[--Hhq"EIp\lhNr(DlSLsWm_ZJKog
%k-RD[o=iob_o6aG&;OJ+HEA<$Yg?i1Q9E5sWC3J>KbNSe-.Z?p=Giet)N9nur=L3uKJD<(Dls&l>u9_h620T:5C&HZX,ABqEI-A>
%B7*f-BD$Go$MN!^k?K^t&=5qaN+F_jCUH[De#m,::qGfuDJ]i3mR$EAY8l_3YCY+SP:Bu.aB%$H@-nr^gn3um*F@WT,bK'Cr&iP&
%JpOk#Ml,=+Dns]4#t2?ro&nXMj@bXQ+R,Tlde-J$/*cSti3P8hlKL7Op/%2oC5Fhq91#2\(%o[o"aT??q!,]K'<Y9p&7)Rtl)-PH
%eLM`A+Go6\>D-o._auU"</:7rA:o2I232\U>JB@c[kM:jjm\PgpCjIrG(MOU>+oMJlehX73=](<ro_P1qo\_PKbfm;'Btf[,=2Au
%&Wp2nd$\!AA;m1X7$g>*6qYb3Im=iI&>X:+J/`Zo0!&46_Ca3KR@W'=&CV`6]N5rG1k-EC..u+6_+*6fl:XIrl=hi'V_Y0OTlU1S
%+=Ie.bQY"$EsRY2?Q2[GVG;DL2nB[YMC72g--1kMal<g.<qZ@1(\+CHNUNc.ON.$qo<<fW$iT?^0s7n5_DQPAC7_>#ru[cU-0e*8
%0PqMH2T'/u>mrE_M6B2f^>s1gUPVP;po?!;i>lPaML_a@TH^IWChM+A<#7(5be]Y;S'W:ShA'WG#-&f)etuo(bbhdZf<)cE*;cf?
%[ERtLFmIH/p@5;6gt[qqi8L2RlCRi4XW/nD;)PuY@\5W;DL/9G1UWXs1TbKSqt+dD*1Y/+0?7B>fIMu@'$^=<!p^ir%ff7bAp;l-
%-i)W&i5]ur(;_`\]Jk1aqXN4dO1QR3a7$I\j/..THeFM<n']jZn+ZD5G5pdGHFVY"gj]i9`QQ_Aq"guejBnPLNf@O+X70uCjbp46
%OVp'[-=p'=*^a?s2$F@\)&2,<huF;?8bHE+<76=[h5?]ZbSCU"N?.`,<"msenIS-V?%)h6<gLL+7@WGHq'[Zs$JD[7'!ner!Hfrk
%[J"^32-0=j]700>r/kr?s*]30".]DWOfl$e(Q/[*HTOpO#Yp^Ym;bhR'b\ToOKK+CfW4c=4*U([:\XK,4krAb(Y/E[m,aXno@9hf
%p\4T\0C[h0Gk($KR9Rr?EJm<[5j"+`Aq9;2:^+]3hp2-p(T_us2nttN:s&>XJpj0QJ%ND(rAT;6e!;d*Ed(*NG36NN*Pe3t;^;T2
%oc:V*B$pO-#=qkgk5-+UV!/,5UClB)81!ao1O*;nm*uW/Sq1d1/T#L5>*;?Ug09J"!nX1^pXT"i!Dl&5PTj&$mX>p*h[trCJ90R7
%FfDjA);JV'OTOl`pNKuS9\,I%`)".DhtU;HF8Y*-[(DlJ(Gq2u3ph,@,cWOu!Dnb0n7'RT<8j(b0RQ`L"(JV(QLbf+O@4,LOF*Cr
%Z#9qV+^(ARks5#?X=5/e&,.:Y@h_3J^Y5!kqb=PPS:-j@4:g#Sf:TR,(+l@mXWl!'p!bgt=)VlmA^5gkjUWCI)-1/^[EUkDNeAUH
%66jh+[PZ,/!'##$!B(99@'ur&HH)$.Wk"ZBBl1.#o[1#Ao.Sj#,,-FC.,qSHQ1ifZ,HV8%^!]!O\A=tf3%0_eUW)h`)Bg&d7<*KC
%dKl_Ra(%!'XbtZlB'P;sQ`ZQ-f+>/.s1hKg[IcI@-VR19a9'RP,5Dai/]V"oCLE:YW/s.<>OmEbcq:Z^R_C)\S"*LALK+3_\nh!N
%&uZA[j2lQ6!FhKekeT<-ZBJ!`:oB,/WF01<%.606Io+[=HKK;pQ^!&`a5J#5Znb"fo]!c:V!&3TMJN?-F@s2&0-%rlIKiT<9@]q2
%G6sfr7n@H,Q+6cL*Kdp?/Yqr8`p6;Q>f\KLWYQilO<X,UFX@3r7;IoR[3uc8Om]0PJE!\/+C!AY"S!m4,u'hJ)TlD>jr`A_8u#U/
%V@BjU)Wrr:7)t#L*JP^ZdFb)rYJ'qF+J5-Ei=XX-=t?HEc%D,)lUP/T>41U^G0QZkY_umsc;[^29ao)]FB6*98@<&cF;rKEon]G#
%&)#4F+C2/Hp9E^h!K:a>SYV->n:p'6g?[_V5PI]FS0R`m=#C)-(C],h1L).9/+!?id-1R:%LB*QS!icjnHE)<'[27r3,R],c8,Nn
%=^$)Tg7Zu#:@n"?.@R+;la/iJG\*^lI3r>9*8p#se:*&57<d)26Ym)2F!fbA0h'f+'kE3O"1uW[W,nVX3n,.$2m0l0gK^c+1Bg5W
%Jp1^$(Qh2\iT)5E`!Eb.N>2.`.MAYm6miXKpKZaUDUdUji2sD>k.&JGE`Adf!`tha)bYuQFS@hR?7nr0#1p4O9bk;5<NaB57?F:t
%A.g`)T@[n*S*KPJR%XMmAHY">*!2l\g83Oqaa7jS<PrZ<I;d6t$@*SmNe1iNJiE/L1=F*+Acbk?#$&'u*q&t2rFG5EPf!ps'>U\f
%T#!6SCD<_/\ueDd_Grf*os:ErHDNjWo4%Lt_ErpuQ&W[j#jQ1(J5M7,RP83Ge@_Gq?uQRYUY-_Gdd.H_=(4@o4<_iu[pb;=c\g`J
%6FEB%p,\(+95&raZ_d%6l)Gf*IEF?jite!M=KD09-)7tEN1RTU*Cm53iajC-m'G5u<Ke7?G?ig[#JAS_?sjj5Q@+u6g3be1q+I_\
%%'9]Y,iNAH]:,JV=U=WllL!peHllRT[k6k;B;ef?#=g,MB4SS1g7*$,AHnM2rt9ln+#T3kX=3$YM!6*$,@/tc#js*ta<:hSL5+Ep
%E`(u@=JeYL,WK80N#m,Q-Th*emg,1R9Jj"*mLoA.7q>k_9g](ZbrN(cD?;lm_A^p2<JkYJZH!G`aS_o8TX!6&n]kItaTWEorQ):u
%O$"DH)f/g(=#5%SDWQ0<RKAdTi`HMFgIjPq;enfpd/!)e5M+D4!)-;3]H;c:c8n],bUC$"'M'u@epb,7[NV%`TeTZ'[<483IaK+7
%b@3oEYI2<O[j/9fS\<(fdM[.RYB;;$Vu1N<;aVBf(TI*,&:g_(%BR+ekLId!Bip2hJ97p-5*M2dXJ+`@#!?7:S%ssN1D<I<^4Aao
%,loAZS)STu)a+g2g(25EdA>M437R7BV@PsJKaIO+!%!'\4nL45-YmF,TOV999]Tc>^MUf!+Tl9/5B6a2MOCe;1QVf=!HQnA(rdnj
%..W]Km)$$T1J,#**o.rV'^C[dStje57-<:B;rN]`2rpoJdr9l05uAAFohIHc!q29LghQ<!J#:F>pULLFYc9A:7TVc\K/;VW=lfC*
%N:2k/V+f^34]Gm#mP4YQgH+?eaRLMXYYV`?BKrUqO,3m=<WD`8dFgC0C<JVJ%Bc)[Jp2UmTOmli'Qc'CJ>@]T*`^9iJAf%K]V=A]
%5rX?8nW3Gh*Fq;97fDk)r$JT9\D;&_0/(`.<iM4:4_DHs,b</-;r1"V,4_/]Kj-GBJN%f:Fu\pii?LIeF8TU-C:0(@mn%]i;5i*=
%_;V26j&479R8Z`H(2Wg,$eGNrS!Rc/pN297(?4.J]jK-fo(Pe\LNqGpO1XWOAp^g2+85*>p9$RYp)JIfTmCod*`(;'_5l&[h%<B\
%q;"Vk4RLIS_Lq)tYV&_2d%dRdZtAcd?GJ%S2F[;uD$b%_/>?-0oflhQ9)coj&gJ7,Qg:7(]NAf!,2d0`nLnRu9pbEYm.qpi2)$d6
%d<33[$29DA,$I%#e%E\0FLkmp6?K6n;"^TK<p$,GaTq4X8QcHcJ1UiN?e3S`iUW)B<2oEI*Bq@d+R0\T"#R,`1"c.c2s%o1n8?Ep
%>t_&&;U5fC0@323Nu:BoUca1Ai<r>h7l];M["),>#8E5fGl_2F81RrW4O1[s]=bP8kjha^1R)ll7";q,>5:(cX1F.Mqbm<O>4GpI
%e;VIJ.&,@7"n\VKBM4QPUP8Lq?gu*pi*TfQ(sDb;a>=0?0jJp)&!.SdkHZ2&Ao=aT3a-QlL+;9MrBG+H]/'cIDH(kqfn`C65Lk@i
%fN_V*;)N.NC=fo7>Mm:5L>?(8ir0*MEa]OpP68$g=]FOQEZ3--Y4l7!V9-e@WLQ^m>fI%rYV%qGHb`8=?Z,fLZ(7+^QV+3K%ck>0
%=ueP)<ij+^S>L\KUu:IU'$(WrV&UP<;:p'"O-]@WeX<\SX\4["j96H$43H8\HAZ8_F;c35oQ,62A#]A$%BB:<l`[a3`Gd?S>3.!I
%TdQmh$_G9,$D>e;)d:pImQ^BmkWcHN55OI]T(["pg+U=RDT6+e^,+<69GAmqPsd2A(;P6EIt!+o:APW6nC2&(-l6"-#NrWcJuKh+
%)FM^=k&5G;!O;L$hqo2h"BdU\Q0H[dd&VJ71]+2OrcGeG(dZ1D%!?Wsr9heX7&U7_\GWO[jakQXGe/!f*.2^dPHSkp(!!/6lfoN.
%BDg!<eeVOggqIR-cr;91kAFYHkpKKTgo;RYl$5HZ.P=LJ^.*<coXA@+5DRV_18d?h02OD7e^L9TTSuhN3@dho17KGm?&0fGEpd?N
%6;*`Q0>\Fq2jb[*>A*^=kjeu0I@THk`upOn3O29jV4I8ri?OmB.7nYl/H3WW+8']-Ju<j`^PPK%DgM9Ddb6#E0)tbr\jCHTW:o-P
%Z@%Ldq0GH8Q,SIh7*Wm8aTMYWG%t"b3MI^DR]m4(b:JO\`H&Js)UQbdHgATb1k8/]2<k8^ZoXn*h8NUs-:g.%$N1p(%"A>Yo0*NX
%pA#kUnI020(HNf%g&TT=*\j6a8@f(>k[#s8QnVU'r(nD6kbZ'/)#Pr0fHUQ.p>&7s7g]m))HHt)Lk-[5SgE/2S:']6r<4#lj\c>l
%Jr=M*TBAL=U808<-&?bTdL9%1go/ASZbNBZGZF'>2@ge$.cipg\6l)A&_+=DL%a#H5"O2iM&-Q(qCq-Z-IAPSq0u%$LEM34PN2FF
%5G.P(qu6+;^O8'Zhi7R&+(i1BJ)P=>-\&ns[f<N,)=@%JXQ?2oXK4DWaCTFI/4HhPqJBaF%GtF>ZRZ")X\*P?"=.r(^+$d$\h/O0
%JE]RPnShgkE,9jt69(bh6P68e:Kf1^*[<CjbNc15]Q/:L[ujMj),`p/6mVt1VoEk4CuamgpaeTFa[i(u3h@7C@9`DHFb".9Mt.<*
%R@]jW5%YETn`mL10fn*EHKBU9i.Q4Y'eu7&K%7P&"[RQ!9=XQW=V.tK(cBDu!.ol2\thLkR,H0OILsX:=rB1-m>$Up[qkj4hct11
%iNVJ!Wf?u0N^Ron?F4T;ql[+`_NhfO;6PM<7P;HGf@+(;%#@-!F^3E@URlQd=@)27[(d!Q-I5%af'';.[AsongQi'Dm>*gGg.aZ5
%M'K#^@D`PK7$TQsMM-=kp[n1nGAL]:;`>I3*_:Qkjcq%,Ip58P#3tJE(_F4p#e[bKbr9CQ/Heu8fMW/TP:P4-h2HX1Ln,V6T\L&Y
%;C[S('!Y(aSiRRu$r2AaBIL)g,=RkYjqe%9[Rs)u+@qV!36dd_i!m2)\DPUgXJmgm4[crJ&D#^cjiRsPo82KDDX0/rVMq&&GA/gS
%S7qtf92;?l\4Q1/!-L?VbQgj;\&BM%ABi3C9Bd]dLPM>oe07ON:0V/"1k+(o3N@/UggiarP\QosnNML!\sQtsUGi;5,!@XKGsTeR
%nha$%^R3M;rlGYT"M^jnLbMoD5Udj2;`%o$)_E#d5>1!Y4$mL5LP*H)\hKZ!i=%jsHj^d3M_:fnj(?@nnI_(kn3]13>s('d\[^J^
%4EWii,Ksru3NmVYI46pD8m+]XX[q1HD9:>;ZBU)cj(#Sdo&O7/.1[.k_)9BCQ]Qdh4;VoCR-mB=el4](92V>p:<7&@6:,u(Gr="H
%d]<4P4YI8IRtL&2Yn)i8(M!Z__'A<3YDLm06&AX`+71;S)Yg*+puUI0qs:uDs,\E.BE3$^RqZ@I1+lPYV"E4s;iMiUAj9fhkFIT'
%i5QYGCkM<P[%d]E&FP\#Pnf*RGK^i@LQgu/7ibWq;b+_gVg,DBN>^9"MLDlaoZLJ67,;<L'j#^WG(6SBk>=)?2V>C/Bf-Z@(oJ1r
%a$nVRm0m8b-UfedNK,k16IK/k"5FY(6n:SM9%O`4Q'@DQ;RhWaFo^]uX,!0pgY18Qfnjf,cfiA6X3-G^S3dAu"7<\*ma0:Y8IMl$
%@`oW`/mtp>]@&hI6GW_0dB4bgT]35%=*!p(_,)IoOK9C)Y)Zt/,@e'k.fa*D\;bJg'^L&j$^$m]qmodmTi#($L0`M##kDFm$,%*@
%n#T&@(La=7<+pY@MYh>Llk6um<.aNC-Q2o6=lt%fHpQ#u`dL/61'Vhqo@<01@YAj*,fHQu;\=XDH5))cOc^4Wcd-`;%tp&i,:9q6
%NU0hj@^DX66A#i-$@P[AV`Gb_^1g!n5Oo>FekT"J5%k0fKC09d?!#2LO)Td/:*Tq8RPXmmHa1`qQ!aGTo(@m;Cs4^K@$#Un60)fT
%jFiD=Xg=[QXF><oDOT5nKq3:N&Tis0*ZYMAN>-)MPE%?tPpc[5CNQA?SaHdV_cM>UOkHZa`paTn/#S."#YtIP=f53-IDUGsl5lF'
%?aAY__.eSGf""tT-uHR=+dJRkih[+/j=>dk#=42)Eirl`KU,O:jYi=cg$#b%Zl2Q"MuOE/*)4u.,M%mK#Z=_u[5@*">%!>3BSppm
%b8uaH!\U<mS#CE`#f9:CG(P;W]su3Fh#j@5,la_^?p6Q5ce"gfM6!:Pls6&D<Y'0,km+mF<nQ5BN`aN&`4(r3'.R5I96qppoB'=/
%CG"[k#$"Cj)eq$A6kKR.!.n)bXEUheg`+Y2.V7<?6M,Vr@j.YFo;$bD$5%0^ON4-=Tis(:W85*/>'Ps<UAsX+X[0R[>%XJ)(dV?c
%#^n?NU36<1;KMYAk8"0:[^cTQQI4`k6@lAkjFe#PlfNi^LXr+n4sLn'NQA29+5:S_81Qp"V>_YTMj33V'0"!@;/5LW.f\<%*eakr
%`$?DYkn&3VbVu&&3n%sNj-lY+YU4.f*8NOI1)WR"lX!YaP&jF,U-\C)f5ttGMQ;3'4L,-!$R3(Uc\t_e=/lTh/fF25:sj'^Em+PP
%TL<[B!8[+TA(>jtJaWH[Js2fp0"2r>\#sGU7$o0Pb>&AQk[\G(%-\BpQ_578FU%0RLlgZ>6(^pNfr]^C3\,Euk*T@5BVXV^#c,T^
%A+l=WMKU9hA*?=VoZk]YaV)QKra:&@n4N:$97(ARa;UWoo,f"clc+HeG1lF6\^A?17]C3"Vuf;WXjNk9,trLnS>VJJZk,!^h$uUn
%4EYjAcTj^bV$.H6(F[O)_VbunaX`#T?5R_<6eX?L#-1th?N1SfNSO2k(.bQI\`fo*+_!OQi[JO?>`$k'B9"o0#8s,/r[iq@B8(!`
%'0,#Tat#J-V@\;Z4BU.!aInrF7c?ra0N%"SSsldM["QZ![]6VTmLtO#g7VhF_JUp`;EX:t9^N$ubWIs-D9$,=1An;UYHB;N"i!(5
%XY-:GWBG'3MDhaBD>E6_e>hdOg^SX,T;i-h!^!PRgg+bk_;G0'4-V$=&%]^*6XZ<+0L<[LKLA#Ee*moY3g"9RG!0N.c?23;YAV(_
%?aL:lJ"C)7(4q>X+dGGdm:\jq^6JApmWI7+<ZcW-8cmjAaPo".WIYCH;d-tOXjg&0Gn7[#!<pX$JZdfQq1:tV!BVmjH?[Xk_"G79
%57^"-FaJC+B8YE;bbQ5Q<8fQ+gV["nSB3dT4n4gJoU>/!rCg+&6;u7G[a',nb%t1X.D77-6X%uX[oRkMoGXCWN9dD<j\fbmQ0([#
%b]sf*dgT#dZ<JgtUTT`d1F@Po/[X'+k_K@>[83ioO30/e2ecJjr_:\;o!\U/5m2$:k#>BY;/BUV5c_c7;S1(kE><+YPM+]I\9VSi
%WG"qp8TGhHT8aK&h5gm^]\[N-X;S$kFjqI)2H1pTEXC4+OT__;it:#?[h,_X]-,,,,iZ0q!=+g%N1?a1@Y."uYIR;%)9U@1BGi!P
%[;3W>V+K/e.+_$$4Pcu3hQGWYQ.R?&.?0V//j>K\*iXU/6?%uoC_!T;*[&2fX2u>%U"q,3D5>[$.)dccM:8m)aO1\^h;h>W!.Uk&
%%9A!QcNoK@ddQPr&[.E`UT#:5o?ANBk(LW78s#CE&>pF8.5#Ak9qo,;md*qS(N\@E0dks5r[`e+h[b09,8T&tMR'`fh^5P0%[rWd
%(T"\=^*1T:Kf*""frOch!d[S.ZZ[uRMaf2<Q\Vs#eeOP_fm0`a8iRi'_#qVqi&VmE5iF&Q2</a[HmRIbW2^C%QDTn[3W(3WAXe(9
%Dc'gXkY=SHF'R+`AYG/M0e$ClMEAZf/GIQ:AC;]mB>VbRhY_h+CZT>WT;sOdN@>(O/Fc5a8pU&*5M$!<lbY&lVqqdKS?rX?rX\"_
%#@[)Ajo3t>IP=>t&N7SE=_C3COUX;)(-?MpF:i=8=.i3$h<sBa2+Sd7r,r%#r"360J:glmbq09&&DH[XS2GW=6%U:L@B?ER]#r'q
%dT:(/7r@YXqp5K_ATXT8fYccD5d\5h8d%7F9GH;PCpZ[91M$!8eH+&D.??<e,:=DL!5=PGA43>?&%.*],'+uo=k#eq85H]E2-3mL
%O.f%G-_7f!jgL=>$ZZ6h8S@mgP;eQgrjd@`PR86XF\`;n&dX/s/]TF2^Ep-/:s_c6&m]F8,_8_f@@nFc`2dmeNsqQX'Y-;bbUOs2
%_#omg:t9F0F.L5tQBdhg3)(I';B#ofgd\:BXd+^8kT8eE;fpCl@EqoOG58gap!bGA/RY1CWXia&5jBq-kUYD4J'di.C'5VNkQ1u3
%4ZZ+PC!lrBh2peSH.a)YOC2U=^h#M^NDouRC^JYu1NYbcX@0a&W?maES70bqS4Gs_QXU*nfM0?Db*l!<@RNi(\:12^7l''o&UMVL
%2pFuEQQK'c#=q-M>^l8^SWmX@ZY/UCf<VLW1QrOnB./o72b,\<TGC[hQhO+Q=a6bA7%X!iO+-L7GUC)XIeia<jjOpIBf,87c/d2k
%`iNIHiWJc?b+Fie=2g)Lmjo[P3UWV;F1!1<#8+'?#.-BJ`Id;Li3$VZ*XNE;GOEj)8M0&.e?_h/cAkM$di!SaEt^Tei?s!&*@U)u
%-'p_j5Nk9Z>co`/A()l?6W$,\\VlFNK[>d$nloljDO1'"s*F1?GL;f`/WMa63V`_rLREifg$`W"2Qg$s8So+/A3)/qOP)aUW?R[K
%)%cL]:U7K@_Bp2maoYN;<"D)#`C^0[frmGflQ4fo+@FOrnH\$lTFaSiJFjsdYkP?q>8)=@Y&:/u08J6Z1f@rUV6.uNq:IWm5?F$U
%3/K!3)_!>_N36J5?>12'#W^<YCe97FhOs]s)/5!BX9GY3bt^CU`VQ;`43=gjHtZ#-B?JOFR:Wk[:VF)#Fa=Bn;:L:f6F[BWS5%q.
%"@$o/j:o<&"l6))T[WH>XU?ab095iL-g%m=Y2AAM4+77O^Bi69>RcB]kF2^Y<?l!0SFX*6kq'n9'l6^Rit;l!qU`iJ),V0/[!hW!
%"%C^qjh#,<$gNAK5q`-W)BlUPQ"/\d.P-:I;^ERQ/Nd]p&>)QNmm<q<eHLU"Dtpka$M'Q'io_cP$\n+Zf=i"@[%-<'\XC,Y2fg<)
%;rop?M^p_BPF;LfE`=bK,Vi->O=>tRnkEl]XOPJNPFA2o/4D\!B%EbiqXPsjP7.rrJ#?oPT%&^j6)b`jDFi%=Qb$M=rA,X!>A:'S
%jmA.QksobMj8,F>dk)RV+(T#'PK;%.X#1EOXaHOZ#L4$q[Y3U1[_Sr=Y+*up+WEdGQ)+N>,R=eUn6.o`@\r]+XCcOjjMft=pSk$'
%l!Z;@]R75AdJAH!_@/V-g*dRq3PqMrM2XfH-W7sa`cq8Va\RW%9<]N5\[Q!T#MoEmN+PEi;)I8OCUDnTJ9=$&#7+L_9.H8b@-Fpg
%d>k6"LDn='gp8cH0X<:H^&]Hc.[@W98`f@V6K^m/G+--aTbcicDGn)!=7%_.09sXrakQ7*j0&3IZ^Q0&Z6bR$:XQ<=/s"a:O1SI7
%pXkYLST")/<@gYKAhTiMo!hocEVkqVDEo"E#=Y9*;JFqZa3qK<RPaG9C#$1pioT&+U"fQi)Ic*(%diREI&VTOW5'$Wo!e\@M/%WZ
%%H3N!Jni8WhJ!0Q8B`rd&g_ul1:H10UU:Yl2pUad?i8]0jBpfm;k35Snj<sP_E64FFT,pf2D>-l`9+ai_.=/A.3@$&4VIrBd^C%$
%*]^mNMFqncSXtR=CqUB\CN6%B"63Qu=tUgQki30Idu^6"Yc+Da,<Tk5.EMb01'?TH@<%BQp_DduCMp*HrgeLRUTZW*r<"\"cemH_
%FB+6-nQY,^7V5Lq6B%W%S?+/b!SOn*+[WcHKdB`1;N%GsJ(n%;)aYdVH>6$UQk(YRMi[3%nn^g,n__U]j"e8SXXrH*lP^oH%%k8@
%q1C$j3l5V@^#3>l0G4I@cfXT')@V(6<M.3WAe[%3Zrt^jQF>ZZK)coVHe8N3'c'.hLaU<km30J<Ot\ZtQ*lo0;qSrbqll/8c8L*c
%jCoc_[kjWBT(`na=o<_`^SV!I\l+7XC4;egEX/H<qgL:apItMc?1.W/6^D&Va)#diElbq'0HhWe8f1*iNj^LGf*0/.m?`P,e/08=
%kBUd!Q6,!fRYA-aF@I3Hk3YB&_Be4TS9e08]VI!p;Pu=!Yo3q:l[!b$B;*jfqAK*:nb'F23K(CH=f&Nh'I+k7l5V$q6UHVH:V]a)
%D+.4u+/>Kk/"/p)*:.[O3reh&\A7qUi!_D5Vu3(RP$.F"$KISkZf'f8]0_Ep[CLXl%;N[7oF0k=NV4UCh'6blX?j(VZk8Fr?e@nJ
%%;ZnYps)-QVWcTC8?#uX7.;0Ag)BCs&I'cTlDo7[PMH@]b4M\L`T`q%@;:?pd$Ecn\tAMHjLVWh-U.*(pp5hRTH?84Pug;BB4qIf
%>&=I;%jK$ASM]A-,3Jc.Ec@=J&['BmqZ:MM70.67H?9"40hlZ(:cf*/IpZB_V#5L).UG0.E[@g3RZ7MGd2!`'\3sYO[.k7I-T:uB
%&LqB0iin1oq-0HBO'WtRWKgNf?&K,20t<FNmHL`9h$<9Vp+ltBXofXCB!Rh0m3B""g/Zo>jJ@OfJu)Dt"7f1%RIW);UXQuS6,SS<
%1j.*t\_XX]>1'ld9Y\]_Ck4g'5f`;2M99EE6Q'%mT'srBc\mgtLR,:C-`m"T)%Io?@V&sI[\H!V$-`uU1JBu-ki])e);76&&a/;G
%#@4@YL(rG9X.Ru<HMLMr'Zrm,T4)6:oi\u4X@JiB)9Um6N78EPVcd/$A/XGN[=OSV^ZMHWcTn"6>20tOX39rgb:uMmaGn`G18B#-
%7NFo:Uo&:-J<rC2pugMu/d1Tk#!A%/bi:%):4o#?/ee?#.m>*3-["isfei#e$^=b`Iq)/.opV(8%M,;Ie++[8R*I00+<-+)'pmn)
%!nGB\gqt:boB[uAT(NBtZKt_-m"\#E.Iu0`)s0_<Z/=q2<1srdGIK,!0>-6;oCBH`rgp4\6f7/8:!\m))NJ.hTIL/F2bE>if/g#@
%'/e``&Y]Q0X?<nb*]0&2W<=SpX,\d:`i;YY>FHVC,<Hu'+C(m`?/GAs&N\TLP*WeW"b`]$J*<:[.WguP\hSkd0oW8Js3MfZ?$Fqu
%U;0NhF1XZ8F9R#+@3@PDHB<0.CV'WaN;``\,Y.YQ^_k$cQcSsi68..[b$+=P(P$n>gjp.^aZ:Wa/8%bQM)c%^/jkepLIocm)5VnU
%k]4V,P]c8<=N?Z5BI6/n>fU34XJG91]C"@&`HZ[a8j6\9a$gGX%JLM!nn;AL9.mPBgWrB2rjXeGbP1rbf@&-4.6_oa32n=:Zgm0#
%q4F=,&<8`e_cFJmqDZloWi9R5/f-![Cp%`*E#s3`F)U,Y&6gJs\lrP\,\WsO5j`.q+m1s4$oB2O*A(X]I9HEcjDSXbT4+*S,F`@4
%r^ILsD<YZM4R,\&[\W6UdsBU;n_-73koa7>32K'UPj7/0jQGs=c]F%pf)1FVg1T[&S%j>0%ChS\B4?a)9B1ISgA6+G'I'PfG1_"[
%CR^/P^,ZnKs(3e6;P8ZJA9I>nNFQ!2Th54]>l=FmoqSS\,>nL(E%$,[f^t@?DDX"j45j;slkqo#S8a"`.`3k"]n8@q^0H`"qRH+b
%2[CKf"2%WS#K5-+\75NZ]LBY\AH.p$X1H)\p"!9;c"mn\Lm_,[JCA"m#hYUV=JO<ui\1PI8!>&97/@Gcno)!e5)0j5pW+'AQF[t]
%0rcRK8Yj*=@#e:j`0*=.DKj0u4^Hf4\jpY`(7>3G%@#cHlJ%F5qDQ<l!@1+GC!W[RD@gUo,:t-:@PT]$198An'HsX):U:qtA-bV]
%,a\Puh'9t9i6jRYlQh]u^^J800g&B+Bg@_G2/eVVkg`]Y.!:FmjMERM`J\rI@7F.B#A^IK4_JNZ/If#f)K;Y+OoA6iX@f\lLcj+7
%8`K-:1b7l\!!0!,genJpU3KcR2.%Ie<P\?,WW:R$c@_EAU_H@8p?BIjlYb7@[j*fJFh@AA(+SXl'HdIl=Kt/[Y,d_73cBV;"=%-.
%/@1,$_*'2ZG6[3["`Y=gQ*iN?IU:HQ/MP$>&eJ:Lb':>MM!jeB5o!p,qt5/drO_D06JKp6.*;W8';5?9R2A=A^tiq.S/JQG(H1Vs
%.S]k-:)I6a<rs!]he7!lN@[67Zkg1T)*[6(=/-]lK&i1e1dN74Q[H$`]<K:GMU0(!+W(Wu.?^/ngd=/2n!BoNqb@j)DQ1G*d?[^&
%o>Gqe)6RRlaO[oC0apG"B#<@o\3Xi$Ff(OI]U9aZU<m4!:D3`jg0C0LoIPK3Ue8ok'nfUR#`&Tm.L1N_]S7TH7?*G,AKZMS/o,9h
%f=F@sl[X.pF/js,1I_LOqblrY*o?KBdR/r*hs,HA/C<o6ZTLi67_!M>a^nUUGG^\'<F9fGK(9CL=u#$<->WBX-(*q]G>!V^@"gi>
%WcE!=@fD\Y91s/!a,%_^jXCoP_P2\jQPfU5h:a)cCUL'Ta&"#>BI2BZ]=Vh5<MgoPps;nelEYk^9r>?MWcAX_m_cONds*>WH)>H"
%(`2#cCYT'oEm-5IA<H!9g=&9(Ng!W^+("S\B@E#`B0rAg?r'Fh+8<YG%.d^+4<MslZYg4e:57GiYA%$+*h&Kokd<CaG\W_K1.U(O
%>>:"8\tNfV6K3)60Vi3:5"6.(*B?*R)>9[o]M+t.Khih8"HHE$#c&21]4/Gh%_G_&_]c4?V7:,nA\0b:,!)H*:pkm"4gRtAF`2K]
%@DRM/^j<eBneiG:9S;bZ->a(]kOeY^q3I2`C!]e3RT'6G+`\PbMcaKFWc<K@8q"cr@:E,M`%i=sR6^@l[jA>t9!:[mFAI-WjGj@Y
%]LMnj$d()BI0m3kK68Dt*]D9H-^&t(;g-c5CpqS\,<*Xh?$4/[k;79#[j7_PF06\5cSkj'Z)&T`o_sfEj-]r28CF5fJ;2=>'SR4j
%<=KmoOa-TloSa(T;BT2mOup+JX`YM]q.-H(mBEd,5*"%Y2`.Ep3@F0VcACtU53pBf;r;6mP2;``S5eq$Y%oc&a[^I>3O=0t3-5Hf
%d*c!nW]5D8[Tih<//0mt:*/Y47af;Y6*;13<EA>6A?$7<+8_lI)ZA;N.f/3!itUb87c;t<>0mu=BDP22s,P/'p1\->4&V_I;e!9Q
%bM:<.$h*3jaTjj"HO+`j9]^\`RNW\sMa''c4Ec'"HJd(SK+CF5cO-S^0hH]+9;MPNUK_UX4T[a3IFM==%T`rd7T'ph8(7nP2^=hb
%K]5U?D4r#VHV@O5\Fsgs3g+TB4r@G_Xt)<SkK`K98q&=`]<5tV'_]&JS/_!)4Ij454lH@rL[h7UX5@a@^AL7[qEFBIPBj4:g<J>R
%S<G-g=qi/!FaMd[RuGK=ko`;9a7gekI+XT"&NbEl'N_&4QhJ\Up!%;!\"W1!qJ&N`Sk\HFqY&X*ltOqVX<(.'J=ft]G@tYRl9Vh^
%(K=OXo!RS9VOC]IoKoiGX']?IYsLXD#Mb4[Nm:^U>m*srbf6XH(N,H&*S-+VZ#.=^%5G(0iWZBV:8?N#m5L#Hk.`r^G=uJqkp9sd
%F,;NK7-ELgH*TipTPou"5Fj:U[.sGR/IL7Iq-L0`=OZCWL-\%r![6iHnc;K]^j&6C<tOAgrc1Y!?E^D$T[iOO$b^l`4m]R(47_(;
%4Ia,6e,4SVSug],i]c6'caM#\:%`o.-,FSnr/ZTH?Qsj;NY.MWD>_+AF3=WB*fPi`l]`iQG&L"U2SLNm=0'PfT%&;>'CDeETI6FG
%U,>Rk;524NO1?2;W/msV_M]l[)6"JWp-+=CqDW<D@sqD@q8g#/92KTUE9@1e6#fbu[=Wuo^28nK5Q$n'qX:+[o!:pHC[sm.><QJb
%hMi<mBCQ0uB[sH%k)atpP/WpF`1YjZ/Rc,jPtF"F#=(.NF]5.?YkpB/MN4oXST0tN#>r6cqF#/fh0l7j[R\LG;THgU^Iu3_"*"8D
%9QU?%SXh)c^l^+arBPlki<SFY2CTB#g]@gHngq[;bWs1c5>dU"\m7&lgE!r87Mq!>!1XK+W\:],8cP;)K[gl:%X:.As%q6(Y]a)#
%:WL7trW?*Pl]`mcS!Fc78([BY'>qdum@Jip5D2nc2K1<]dsd^n):Pi*-r/ADh,K6P*V8f\=Edb_R.jIAX:h;k7!^&Dnl!f`?_l)L
%20`iUE6O%>X`&`pq^A@3Q+_sY&drt%Bua#Z=o[FlPc]:_gHKMhDojoMhka-Bo$^=JY'&=FQ-(Y>Z=97[1h4\1L;7G_bc*3B)`<W'
%=$EdV9-!ddUchSDL6g#63N_Fl)dRKWH[nu&B:bN)TcgN4]mq`R)g0g2=cl!sT;q.rQ?91p7j!\p41[0<->I>TR?`]&T"[('V1Lt8
%T6B,crOBSHdnleW0_8*kj]]@#>PL0Z[1VJ)G[?:(?C1S0pXa4:StEG=a7@@2rU?&d2[>C5j/I$D@Y>dSeV=q-^$0lQ+J2h8m<_8r
%K;-^JO#Z`JaLbTR(`g)VT`:r_dC`g7TC:aB9C9lamj:?eG8XBs(5r!'bL,bKEau.#C+OKmNk3:WO^p-?]^GM*S+>7=%^h=Sh9kOc
%i0Ig%+5Z`Zg[Y%phu%f@<hm@*AmE*0AWi=_0!g;@C5#nB=<UIjl.A>7+BO7GjCJ,^f20bFG>]N4DoV6HSm$Vb*Q?4gWBOl`S+`NJ
%<[[jIgS18/K#^ac?CWq*IG*qConV?AI3sKk\(uDH*o&@#fH[.QPW05cfGaDQ1nGTUB*SCXXml8bG]M+m>Xff?=q?tSZQ&E0<Vb]N
%ICsit?dWZ*Ir=H"//DF/KE7h;?fIl/@Nb=A.D:b]P6:ILV#B>7H-r85QhQV_`[;@-BK;cs&aon>D0PLU*Xi?G\5Xp&)sVRTo)S_)
%f-3rO#n\c2W@Q-VH4kh)^a,i'>li,d3.G.6ZZQos#n&oBCa']6QS;h%7Z*@-@F7>E!>A?f6#AQ":V--3lbH$]BC1MPkYNj'3SS?5
%e`do0B&3J`!BE\C<:&ktfW*,qp!D3-_TsK+8`]r5^DO5$$1t](FZMN<]*jFuM-)0)1Fk:5mm47!WKMmh?4$+s*">fJYGnTg\g^F2
%S0O:lg4<D0mhX@kQ;#BS3LG8"dcjhYX%"t?c2qH26(Wr4();'S;b&+RQ5P(XXiAZ?\h-9*@$(WWl%,MTH@l^K8"lH`]l#cO_.]OV
%ZJRtQHV"A^GHOL1qGt3#&CU1Rh_8!:@sg39UT2*!YmqFd)+Q>u_dGpc%[fTDEf06SPj1p;3J2YXSg#]n#AR4R%d0E!Gd$6R\OoBZ
%K\c?DL8#Qt$]YA&fU;&D0<#WDq.M&$ll3DqAic7HC\5-(05mW`Nt'+,8aZ;=P+HSfAS*K%Lq?.<"6VE5n5EU1AK-IVg#q_D(>^8/
%+9TFh.,3f]Y0'sEH!]31A?_>a!qrH6(WphkTr!EnfWYSa?KJNV2&`dU^4dho.p@'*!gL70)+eBE.>YH_2cG=V?1*#H1Ls""7k)<7
%P4nR*&WhaOQSPK\cGW(SX&RiE9:K]4*?Yu69+(pB^ks\:\(#nXCsfmmKhQ@5;A@cL,=0&5=7/`Sh/[sW2m,0.IbSd)L$j9"7S.hN
%O4D*Yf_1stPY)p!$tasJ5_NI*P-Kbs\Z*&ZB3)'R?%_;`CeHP5.e3<D.7q_LdgeV[KL(\M#%g00"RJc23q17*k?7^j<82MI=8>#h
%q:DZ#8'j_Dr^N4WN0XoQPa$18/P%?T8?T(61[J:93Ya"Kbj'=M6]>'J5oHQq\<J,f)%oD^mGWq@#GJ*P@uX"SirVR$j(WY:A\Chp
%;ea.\8b0St%u^:Rk2S6lLOtq::VKj4.GlVp5Pfe),=o4eKJ"[9^Kc6qWb6W5qt'nsZkCRuda2H-&W;7;'*aB6JZ9"<:e[5a6'#4>
%U,B_)9DfeKWj2,1/9M@##jZ(cfj8LAg@3,a>&Xk.>C#@SfoTeUO9C8X+&orZCk2g`B;sn\funju6<,=?eeg#ts%#Zfbnpo#+7_>N
%=uN6i%D\5+NQ7,:i>:KBGOq8<.!Jbe>e`<$99_B$;!X+,p+m[F"";\$4oMBnEGY:hRW+buUec]`m$tF?'H.m91W=^k;O>24gQpQI
%^5faI2A'baS._2h[BcIHF51Cm@g"^!X\=4%]:u@mX\6hC1:Bs:Rmso4SBX$Js,\-^6P`!i53JjQ%n)`ZXLi&rU+0Jbf)j3E]<f7:
%!*<_$E:c=RNd's,0:N>S\,A#mrP$69\#"3C6`9Rb)>ekqld-71U.(h/'N\m(s-H2r&J(XEq@P:iVp]_.Buj++*=s"R73>6^&#4B/
%>u3>G?$/Nn<pR*Se%LKBrNgC]Ie/?hkDS>0LHa$k-h#*_5$a\GJ5.u%ik7h.9B8[+YLLooQfn$\YPtK:DUa#dFOb<F'$_%fPYYoV
%USNb'DYj38SETt75q<:U'Q-'.9G3Vd&""-A_I7Ke#A75QPJB2e?f$g]fm<QjQ[AR+*7!.eI.Jaq&g#SqCFEXp8d"gQOZ9b;X_HX*
%^2Q=-GA-U3ED1n(m=ZiOqc[5$qc_?R[r!;/n3X9i`mS(bX,t@ehR1ftD8S*P.&S5,MB+d^<t]$Q6uR_"r:XnHRMik<,ZjgnBU>lK
%H9en,eG6A1r#mWWr>ac9e/tD&gdNsV;W/s/V#'E`R#`_i/t5U[p6dr8b!*Q*bHITmW9iDNaM4==UC5EY(0nVqD=GfVA?;8l((qsK
%;T:hX.IRF&i_>9]RGfsXk8G@=r6];V81_VlEOkA<2Pe_W<#!q&2>mSP,G&lQ81[ONhOZk#Y<l3;FHZK']k0C\FAF7P0Y"1&^asFf
%6[8ncJbEHX6eYX@+>6W=/[Q7b22[DiLTVmL(.@#C?iAK`qRj^ZM1jV]QrX'RQYg)dq38D,`.7[E\mMeQB106M\O@<)?b#k*!/nQe
%;hNF=Ig8eE6Z/UGck;R-e%2^X6Ej*$1=(N#(*7+CicqP"2!6j8[)OL3@@to4QbZP[.&0HYVe&$9Vllqcp9W?Dk1mhpX$;9Jr5hY2
%l;8>3C;4&1gJ=>N9h=l.`Dcc%a+Y^(UTeb0CktPrLaGgoPmR*U\7=//j0M9;BU%n`+)s!<&QuRj5PqKCpP7X*:LUULgIj/-h@#s7
%;1qa;?Buc-+#\&.=B)]>mc/Vsc*r3]KpkKES'LAal]AjXh9UMSJ,"O[k:^^2s8(X1#6+T$[/D*HiLg.rYCHKMrq,A,?Z#sqpV6Xr
%TDnJtrqVWTnN[!:c[Y_6s7@sor."_<b9-c[TCiJ>qCf>Xl^*+to:Q$Ds8L>ormNP#npgW$s&UHAd.Mt)qn)mt5Q?dopila&4N?OY~>
%AI9_PrivateDataEnd
