%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Boy_Slide.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: WINDOWS
%%CreationDate: 12/15/2014
%%BoundingBox: 0 0 468 113
%%HiResBoundingBox: 0 0 467.1397 112.0372
%%CropBox: 0 0 467.1397 112.0372
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.1 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 32 8%%BeginData: 6331 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD07FFA8A87D765276527D7DFD23FFA8A87D7D5276527676A8FD24
%FF7D7D76765276527DA8FD1AFFA87D52764B764B6F4B76767652FD1FFFA8
%A876764B764B764BFD04767DFD20FF7D7D4B764B6F4B6F4B7676767DFD18
%FF7D524B764B4B4B766F7676766F7652A8FD1CFF7D764B764B4B4B6F4B76
%6FFD04767DA8FD1BFFA87D52764B6F4B6F4B766F7676766F7D7DFD15FFA8
%27FD064B766F766F764B4B4B4C52FD1BFFFD074B764B7676764B764B4B4B
%7DFD1AFF7DFD064B6F4B7676764B764B4B4B767DFD14FF7D4B4B6F4BFD07
%764B764B4B26767DFD1AFFA84B4B4BFD07764B764B764B4B4BA8FD1AFF7D
%4B4BFD07764B764B6F4B4B4B76A8FD14FF4B4B4B766F764B6F4B6F4B4B4B
%6F4BC94B7DFD1AFF7D4B4B766F766F764B6F4B4B4B6F4B4BA0517DFD19FF
%A8524B766F766F764B6F4B4B4B6F4B4B4BA727A8FD13FF4B4B6F766F764B
%764B6F4B6F4B6F21A0CEA776FD19FF764B6F7676764B764B6F4B764B6F4B
%4B76CF7C7DFD18FF7D4B4B9A76764B764B6F4B764B6F4B764BA0CE7DA8FD
%12FF274B6F76FD054B6F4B4B206F2076C9CEA076FD18FF7D204B764B6FFD
%0B4BC9C97C77FD18FF7D27764B6F4B4B4B6FFD054B6F2075C9C951A8FD12
%FF7D764B4B764B6F274B4B6F274B4BA0C9CFC97552FD19FFA87D20764B76
%4B4B4B76FD054BC9C9C94BA1FD1AFF4B4B4B764B764B4B4B76214B4B76C9
%CFA051A1FD13FFA8204B4B4B27FD044B7575C3C9C9C9A02752A8FFA8FD17
%FFFD064B206FFD044B75C9C9CE764C27FFFFFFA8FD15FF76FD054B27FD04
%4B754BA0C9CEC9762776FFFFA8FD0FFFCA2776FD074BC976767CC9A7CEA0
%764BA8A87C7C7DA8FD13FFFD064B274B4B4B76764BA7FD04C94B4BA8A876
%A076FD13FF764B4B6F274B4B4B274B4BA05175A0C9C9CEA05227FF7DA076
%A1FD0DFFFD044B274B204B20C9A07CA05220A0C9C9A0A07D764BA09976AF
%FD11FF7D20444B274B204B204B9AA07CA04C4BA0C9C9A7A07D4B75A09976
%FD12FF76204B274B204B27274AC975A07C5226C9C9C9A0A1775175C275A1
%FD0CFF7627FD074BC9CEC9C94B27C9CFC9CFC97D75764BA076FD13FF7D52
%FD074BCFC9CFA04C4BCFC9CEC9CF51A04B7675A1FD13FFA852FD054B20A0
%C9CEC9A10076CECFC9CEA75275517576A1FD0DFFA8524B274B204B4BFD04
%C97C76C95176C9C97D7D75A04BA8FD14FFA84B204B204B2076FD04C975A7
%A05276CEA17D76A09A51A8FD14FFA8204B204B212776CEC9C9A076A0A04B
%A0C9A17D76A09A51FD0FFF52204B76A14BA1C9C9C9CEC9CE27F84BCE7CFF
%762026A1FD15FF7D204B27A07651A0CEC9CEC9CFA727F876C9A1FF52204B
%A8FD15FFFD044BA07C4BC9C9CEC9CECEA7F82076CF7DFF274B4BCAFD0EFF
%A8272020A0757CFD05C9CEA0442076A07D7D272027A8FD15FFA8522051A0
%7576CEFD05C97C444475A17D7D202027FD16FFCA522775A04BA0FD05C9CE
%754420A052A85220F852FD11FF7D7DA0C9A0C9A6CEC9CFCECF996F512E27
%27202752FD19FF7CA0C2C9A6C9C9CFC9CFC99A6852274B202720A1FD18FF
%A97CA0C9A0C9C9CFCECFCEC96F6F522727272027A8FD13FFA176A076A17C
%7C75A07551272E0C27F82020A8FD1AFF7C7C767D7DA075A07676272E052E
%2020F84BFD1AFFA87C76A07DA1767C767C5152272E0520F82052FD19FF7D
%282720272F3C2E52277D7DFD21FF522E272705353559274B7DA8FD20FFA2
%520527202835362E284BA17DFD16FF7D7D4B270536353505350D60FFA17D
%FD1EFFA8524B202F35350C2E353560FF7DA8FD10FFA8FD0DFF7D7627270D
%35352F2E350DAFA87DA8FD0FFFA8FD06FFA14B204B202E36362E2F355AAF
%FFFF5952FFFFFFA8FD0AFF7D52A8FD0BFF7D204B20272E6035352E3659FF
%FFFF2E7DFD0EFF5276A8FD0BFF5220204B2035355A2E353584FFFFA82E7D
%FFFFFFA9FD09FFA87D52FD05FF4B204B274B272E272E0D36A8FFFFA93535
%2EA1527676FFFFFFA8FD04FF527D527DFD0AFFA8204B204B272705282E35
%35FFFFFF5A350C597D76757DFFFFA9FFAFFFFFFF27A827A8FD0AFF7D2720
%27274B272E05351384FFFFFF600D2E537D51767DFFFFFFAFFFFFFF7D527D
%27FD04FF7D204B4BFFFFFF52272E60A8FFFFAF3536352E204BA0C952A176
%A0767D7D5205524BFD0BFF524B207DFFFFA85227355AFFFFFF8435353627
%274BC9A07C7DA076A076A1282E5252FD0BFF4B204B7DFFFFA827273584FF
%FFFF84353635272075C8A076A176A1767D7D2E2E5252FFFFFFA8514B20FD
%05FFA87D7EFFFFFF3535352E204B2075C97C6FC2A0C24B7D2735F87DFD0A
%FF7D75204BFD06FF52AFFFFF84353535274B202775CE519AA0C29F767D27
%0C277DFD0AFF7D4B2652FD05FFA852FFFFFF840D362F27204B20A0C97599
%C2A0A0767D052E20A8FFFFFF76CEC97CA8FD06FF7DFFFF3535352E20FD04
%4BCEC97C9AA0767C7D2E2E52CAFD09FFA87CC9C976FD07FF76FFA8363560
%274B4B4B2776C9C975A076A0767D2E2E52FD0AFFA8A0CFA0A1FD06FFA8A1
%FF84355A3527444B4B4B76CFA0769AA0767D5235277DFFFFFF7DA6C9CEA0
%A1FD06FFA8522F353535204B274B2027A0C94B7DA8A8524B05277DFD0AFF
%7DA6CEC9A07DFD06FFA82E3535362E4B4B4B272720C9A0527DA87D7D272E
%20A8FD0AFF76CEC9CE76FD07FF7D593535352E204B274B204BA6A04BA8A8
%7D5227054BA8FFFFFFA876CEC97CA7FD07FFA82E3560274B4B4B20202752
%A7CA525376FF524B52FD0BFF7DA0C9C975CAFD07FFA828363527444B4B27
%204B4BCAA8522EA1FF52277DFD0BFF7DA0CFA076A9FD07FF7D2F3535204B
%4B4B20272776CAA82E52A8FF27527DFD05FFA8757676FD09FFA82E0C2720
%4B204B7DFF7D7D522F0D7D7D4BA8FD0DFF7D7651A1FD09FFA10C2F204B20
%204BA8FF7D7D520D357D7D4BFD0DFFA87D7576A8FD09FF522F2820204B20
%76A8FF7D7D27352E7D5276FD09FFA8FD0BFFA85220202076FD04FF283635
%592752A8FD0FFFA8FD0CFFA82727204B7DFFFFFFA82E355A2E4B52FD10FF
%A9FD0CFF7D27202727A8FFFFFF7D0C3C352E277DFD17FFCAA876A8FD05FF
%5228524BA1FD20FF7D7DA8FD05FF272E27767DFD1FFFA8A176FD05FFA82E
%275252A8FD21FF7D76A1FD2AFFA176A8FD2AFF767DA8FD87FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2014-12-15T11:29:16+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2014-12-15T11:29:16+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2014-12-15T11:29:16+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>64</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAQAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7755/Mzyx5OiVdRmMuoz&#xA;Lyt9Oho0zLuObdo0qD8TdaELU7YDIBsx4pTOzxDzL+fvmzU2ZLNhp1sagQ2poaV6POw9Z/Zo/RPt&#xA;lRyufj0I6lhlzqWu6s5kuljl5dJrqNbiUbEbT3ImnPXu5yszLkx08B0RmnaiNEInHpLOOksKLbT0&#xA;32Se39K4X7X7MgxEystPA9HuH5Xfm3b608Gi6jK0149Utb5uPJ2CmQQXKhUCzBAeLoOEgWvwt8GX&#xA;xlbq82AwepZNx3Yq7FXYq7FXYqxvzv8AmB5e8nWUU+qyM1xdcxZWUVDLMYwC/HkVUKvIcmZgNwOp&#xA;AIJpnDGZGg8R8y/85A+Zb5nj05l06A7KlsAze/KeZGZw3+RFEw8T1yo5e5z8eh/nMHvPMHmPWH53&#xA;NLlSQQbwG8Ckb1R703Dr8lamQMy5MdNAdF1if0efrEwtSwNVLW0B4nxVinIH/Vpg4izOGB6PUvy3&#xA;/Oe3tpBp+q3Es1gafvJ5GlmtKEhn5ycnmt6UZi7mSP4j8Uf93dCduu1GmMdxye7ZY4TsVdirsVdi&#xA;rsVSfzV5s0PytpR1TWZmgtPUWFWVHkLSSV4JRAaciKVag8TgJplGJkaDxzzL/wA5HXUvKLQbQWkW&#xA;4E0wEtwe3QH0YmHUH98D4DKzlczHoiebznU/Ovm/XZC11cS3asakXR9aI/8APB/9FU/8Y4VyszLm&#xA;Q0sAgbe2aOQT3SWgVaH0/q1vwFOmxj4j6Bg4i2eDHuZ/5F/N+fRr5LeSaS5s2pG9hJKfTeo+1atL&#xA;yEMq0oIqpC4P7DCrWQyd7h6jSdYvofTNSstU0+31Gxl9a0uo1lhkoVqrCu6sAykdCCKg7HLnWkIn&#xA;FXYq7FXYq+Wvzl816B5z8xKuh2cKR6afTuPMgLLJcBD/AHaAEI0KmtGcMT+xxG7U5JB2ekwyG5NM&#xA;IW6sLX+5j9aQf7tfYfRlLnqM2s3MkfMSBIqcuSdKda1wraGt/XvZIUt45Li4uiFgiAPN2bcCh9tz&#xA;XoOuCRAFlFvXB+X1j5S0ry7rH1pLXXf0rpw1GSSbhHN613GfTVX2rCQrfCAWRGqPDH0uoM8hHTo4&#xA;epGz6PzaOqdirsVdirsVdir56/PX8wrfXr658kaZaQSx6fIP0hqk6B5IpwKlbWv92yg8Wk67lQO+&#xA;VZJ9HP0mnJ9VvKY302yUKgNzKopzO4qPc5Q7NZLrN05IQrGB1C7n8cVQLXPrM7NIXMZ4uzV2NAep&#xA;+eFbZ95Q/Lq3vfJGq+aNRYWl36Zn0SeWT0Y1jt1ZgZuZWP0rhjxbn+xQihzFOorKIjk4+XcW+kvI&#xA;lzJdeSPL1zJL68k2mWckk1eXNmgQluQ61ObQOnlzKeYWLsVdirsVdirxf89/zNv9LY+ULPT0j/SM&#xA;X+kanqESPbNGwqUt0lDRyuP2y4IX+VidoTlTlabCJGyXhFsmladCsUQNy6jZmPIfea5ju3AoNy6x&#xA;dOaKVjB6ADf8cCUFJctJKEkcvIQW3qdgaYVtmH5Y+QrbzZqss2pQu2jWKsDIjtGWuWXioRl3+BWJ&#xA;PboN9xmLqM/BVc2ue73v8kGceSZLVruG+FlqN/brcwOJFkC3DEyFgW+KUsZD4cs2cDYdLl+p6Bkm&#xA;t2KuxV2Kvjj80dX8q33mu4/w1p1tpmj6ezwRtaARLdyqSrzFEIj4VqsfEbj4j1AWiZ32dtpoERuR&#xA;YNc3ZkRVZuEZI9UjbYnf8MjTcZWzHQvJNxrWhfpWYyQ6Xct9W06OCIzXF1MSU4JFtRFKMW5EbKei&#xA;/FmLkz8MqHPqyJBHk9D8jp5L8s6nDZX1lqEHmS6lFvbC8tzIZW5J6ghltzNb8YvVUyUf4R9rpmLm&#xA;jkmOL+Fj4ouhzTj80PL3mXU9R0qewE1xYxcrVra04Kw+uvHDcyXDStQxC0MqqYwGVyDWlaOjyQjf&#xA;Fzas0ZHkyUfnNFCNG09baG71a6062u7+KS6W2dJ50qYY0KSc5FKlnXbipU78hm1y6gQ5hwsWlM7o&#xA;0zHyj5vtPMdvclLeWyvLKQRXdpNxLKWUMjqyFldHB+FvmCARTLMWUTFhqzYZYzRT7LGp2KuxV2Kv&#xA;l7/nILznpOt+ZpNDt7O1EWkOI7zUpIY/rUs67mJJWHqJFHWhoRyav7P2qckujsdJh24i8lkv2KsE&#xA;2JNF9hldOYZpl5a0e71ZJFsyEggUz6nqLqWjt0oWZmpvI4AoqLufbK8mQR9/RMTtsyzRfJnlzQtS&#xA;M3nFdRt9GjkWa1jntuaSC4lb0BdtbtM6mRlYBJEQEqajtlEsk5x9FebXxxGxeufmBpmr6v5QSLSF&#xA;mih/dXM1nAqR3rLEVliWEyn00dJFUsrA8gCoocwtPKMZ+pclkbKflv8AMu68peRNKstehh/xC109&#xA;vNaXFwlnHH6kK3xq/GQKsYuo4VUL1Kj3zdnMBDiG7rhgMp1yZ15U8/Ra5qT6XcWEthfCFrqGrrND&#xA;LCjIjlJEpRkaVKhlHXau9HDqI5OSM+mlj5sry9x3Yq7FXYq8F/5yN/MK7gYeSreGS2trqJZtRvZF&#xA;KieJq/uIGI3X/fjr/qfzZXklTmaXECbLwBr1EJWMARotEAFBXoPoGU07LjVdAsdR1fWPqVjCbq/l&#xA;UelH0CoWId2b9lBtX7hucjkmIiyiBs+bL7fyHZW9/DqOonUJNBMRGoajbwEpI1v6ssjQoHM4t0jU&#xA;8pEjINKhtwcxxlnIERriYymAbJe12cNpqPkCWDyW6WcNzbyQ6ZcPE8a909RVPptvvwb5NQjY647T&#xA;9fxSTY2SD8uPNN75D0LzEvmGCa3trcwtodrfSwLdTojNZxCV4qx/DBFArOooFUt0673HliYkx3Dr&#xA;cmImQHVneg/mzbaheWMF7YC2t9RkWC01C2uEu7ZpnJCKWCxOA7DirBSK7GmDFqozlw8inLo5Qjxc&#xA;wz7MlxHYq7FXy7/zkP5J8l+WLqwfRNNnsbvUC8kvpErp4VTuqKymkleiRsqqv7O4yqYDnaacjzLz&#xA;+w8kzXmgxakb2GGe7LfU7KVZRzjSQwl5JgphgDSgohlZVYjrmLLOBKqct9K+RfL7eXvKWmaQ4Amt&#xA;oq3AU1AmlYyy0Pceo7UzUZp8UiWYFBi3n3RND8s3tx+ZKx3d5rFihjsNMEpa1N1dhbX1BFSqsykB&#xA;+LCoHTll2LJKYGMn0oGImXpFyKD/ACy/M7zBrmh6rq2tW8RkiuksdMsoh6Us13w5NAFZnovxIeRP&#xA;wryZjxUnLpaWJnGMfi1zlKAPFsQwPz95h8s+XPM/6F4tr0dpBZSahe29w8Pp6nFCiyPAyEq4/dRv&#xA;Q/ZfkO1Mzc+EyNg7teny1HcbW+j/AMsfKM3l7QGe+qdY1ST63qBd2lZCVCxQc23IhjAXwLcjTfMn&#xA;Fj4I04WfLxytl+WNLsVdirsVeP8A/ORvlrS5/KUmsQeX/r+th0h/ScCsJLaGhZppvToZEVV4rzqq&#xA;lq+xhMbORp5Hiq6D528ueVZNZtLq8a7SztrcpFDI8c05mndWcRolukslFSMs7cfhH4YmTLwmnYh7&#xA;v+SflOfQfK8txdek1zqk3rq8LrIpt1ULCQ6FlYNu4p2bffNZq8vFLboyimnnzyV5a1kQa1rEl1FH&#xA;otLyZLWTik6WtZlSaOjcwnxcaUYcjQ75HDmlG4j+JEoAm2E/l3+cWv8AmTzffQatBBpWjWdlNfSJ&#xA;KrIY4leNY29Qn4j8Z5NQA9gMyMuliIjh3kTSzE4SqY4dr3S781te0bSJ7K/vIDdazrjTzanopkML&#xA;Q2SqkNmJmjPOKb04xySh3Lg/ZU5nS0/oABohxsOY8R22elfkL5fin0xPOTRywx3tt9S0Wynmkme3&#xA;s45KSEs/+/3hQjr8CKa1Jy3T4eAb8y06vNxGhyD1vMhxHYq7FXYqxb8zdI/SfkzUY4tDg8wX8cZe&#xA;xsLigHqn4eaNVWDIrFvgZWb7IIrgLPGaPOnx1ofli7v9Ym0u6c6a1lE82ovcxyc4I4uKtyiA9QuW&#xA;dVCUqWIGYmWfALdqCDyetfkh5IuNO1vVNYmmSe3ij+pWksfJebOyyS84pAk0LoEQcZEB+LaooTr9&#xA;XmEogM43b0jzj5P0zzZo50u/muLeMsWW4s5PSmXkjRuA1GBV45GRlYEEHMXDmOM2FlESG7y2x/Mz&#xA;XLTz9pfkPQbBYNAsLmPSYZrlCXlisT6dy5k5AbJE3Cg6gE1rxzL8GJgZyPq5/NEozjRqoHke9N/z&#xA;R13RRoM/meScObe4gtPLMCv/AL1uPVW+moCG9BopmjWQU+JOQJBWuXh01YqPMuN4x8Sw1+Q+lWfm&#xA;3UV1uGxl0/RdDuGk+pyXEs8cuouOasgagpEG9Q1/aZdtsswYCDZNo1WcGPCNn0RmY692KuxVQvrC&#xA;xv7WS0vreK7tJRxlt50WSNx4MjAqfpxUF555l8n+XvL0bXMOtab5c0WUtSx1GFWtUlarMLYLcWZU&#xA;PuzR/EK7qBU1xM2jhM3yczDqpxFDdgesfmbZWcgtfKPmV/M+pGN5bmO7s0W2RlKUCyJ9QKpIX+Gh&#xA;l403r3EezIZNoteftDwRxZORLFtY/Mr8wdYjXQ9R0/Tra01AMk0xhaRfh+OiBpZlLcV5Dkq0I2O2&#xA;Tx9j1MWXGl29AYzKG8h0/HRILv8AKzzPqWi3tzpNs2oWFrKjyTHkZYnfiHYxoGMvwIOZjXlTj8JA&#xA;qM/LgjjFBxtJ2hl1WTxJnlz7j+332zf8q/8AnGm5XVtM8x61qun3ujxPHe29tpzvcJcMvxIGkdI0&#xA;CBwC1A3KlO+Ywi7Oebag+l8m4zsVdirsVdirsVYZ5u8naQGl1yC+tdBdQDqVzcRIbSVATR7gepbM&#xA;HXkQsglXrRuQoBj59PHJzcjBqJQOzzTVfP8A5Z0j07fSvOQ1fWGkEcWm2NjG2niPqOPJlPwgbn64&#xA;SSenQCmPZ0Jekc2ebWygDOQ9LGNQ/OH8zoIjy0vThGzrH6/CQqEcleTgTyMvUH7LDrkj2LR8nGx9&#xA;uYpcufcx63/LfXtdkuINJiW+nkt5DdWaBYI1WlaQAUjVQ1OCP3/aGbP8pDFG+bro9sZ9XMRJIEeX&#xA;dQ6H9nyRHkT/AJxp8w+YRFeXmq2VjZhvT1GCIyyX0EigM8MkDxxCKUcv2m260IpXEEXdSzgPrbTd&#xA;Os9M06106xjENlZRJb20IqQkcShEWpqdlGWOISiMVdirsVdirsVSHzX5Utddhhl9Y2WoWRZrS+Cq&#xA;/EMKSRyI1A8TgfEtR0BBDAEV5cQmKLZiymBsPJ9Y84eS/L1vdzXHn63lu4EaSCw0KzSSOaYJ9mb1&#xA;GvyzNwCj99GF7nvmINDjA33cw6nJI3TGdQ/Nv8yYGm+qabZXMCLWGRoWSVjQH44lu2A7j4WPjTeg&#xA;sl2IRyt18O3sJNE18GLro2veb7+31NTAda1NldLS3QxW7esnE1IAfkysebtXbYg75n4Oz4Y4XzcL&#xA;Udu5ck/BFiF15339345qWi/847ecdb1u9s5Lix0m7tZWkmsruST6ysLsaSoiRssse9A6ycSdq1ym&#xA;UbOztceXhgAdzT6l/LzyPp/knynZ6BZv63oBnuroqEaeeQ8pJGArSp2UVNFAFTTCBTTKVm2SYWLs&#xA;VdiqyaaGCGSeeRYoYlLyyuQqqqirMzHYADqcVfIX5j3/AJi/Mj81v0XZRyASSfUtAhkV1RbQE8r0&#xA;Bgp9OQKZi4H2KDegyni4js5+MDHCzzZtL/zjD5h0aKbU9B8wQX+qrEyLZ3FoYIpQaNwEgnk4tVRQ&#xA;nbxpl+KRgbDr9ZGOojwy+xLfJv5a+bdS8yPpmvwyWGq2iCaYTvE0cdtKxVJYVgZ0ctxK/aYhgQSB&#xA;mZHUCrPN0uXs+fFwRAEDzP8Ab+wPZ/Met6R5D8sx6fpyj64yFLOE0LFj9qeX6fvO3yqxwOSVlys+&#xA;aGmx8MefT9bwCD809Y8j6nKdElW4nvC0t/ptxye1LuKidgrKySk7/AfjH2uxB1fBHl9Sexo5sgPF&#xA;/d955/BnvkP81vOWqaPdeZrm6fURYSN+lNBiggRPRX4nNkyqk3qCNg6iWRw1Cmx+IaeWqMcnDL6S&#xA;9DPSR4LHNmcf5s3twizWvl9zbyKGjea7hVmVhUGkQmWlP8rDLXwB6sY9nTI5hi/nL89tUXy2sej6&#xA;TJp+q6m11bWt9cSQywwtZyNBcsFRizOkgonJQp+0enE52EeJVdXXamYw3xb0aW/kEjatr+r+ZbRL&#xA;i00pLaLTvQmneZri6JWaaad2ZhJKh+zIdyjjp0xrds4riPN7dixdir5g/wCck/Ot3rOuWXl7ThJP&#xA;otk5BkhUvHdalUoYo3WqyPADx4qah2YEVAyqUgTQc3TwAHEUdo3/ADiprJsrHULrzGlpq6LHObP6&#xA;p6qRS1DGJ5ROOYH2SVAycBwmw0ajIMkTAjYpPF+XH5iL5htNK8x2npNeSkaY0MsX1KaSAeo/xIzS&#xA;/Cq81WShYA/D8OZ0M4P1Ogz9nmAHhC72vr+ofL4veNO0/QPy88tyT3EgedgDPN0knlp8McY8PAdu&#xA;pyqUpZZOTjhj0uOzz+94N5i/MbVdH8wy+a7S5Nvrl21Ft0HKK4jTYQzxkgPEi0HIkMv7JDHe7UQh&#xA;CG/NxezcufNmNbxPPuDJfI35w+fPOWs3cS30Gm31uhmsdMigjeymjXqs7SB7k0NFZo5E+0CB2zSa&#xA;jUyxkH+F6yOkiYnvZ7a/nDc3sIe28uXCMjPFcJdXEEZSWJuEiD0zMTxcEbgdK5KeugGuGgnIWgdY&#xA;/PKfTtL1G4fy9KLiyaGJD9YheH1LshIC5qknHmfi4oSKZfgyjILDjajF4X1d1sF/K++1fzb+YmmX&#xA;UxuP0npb3V75h1T1G9OZZBSCCIcz6cQDoPRpShJFacjdOHCaacOUThxDq+kMCXYq8V/5yX87XNj5&#xA;bHlzTC5e+IOt3EIYrb2n7MczL/d/WX2HI/EquO+VzmBt1cjT47Nnk888g/8AON2p+bPLMOt6hq/6&#xA;Igv6yWVr9VM0hgoBHKWMsQUPQsq8T8JBrvjGDbl1G5Cr5k/LX8x9Bu/T1QfWfLkZSE6xYNHEGMhV&#xA;IzMru9xHVzxcqAo68qZnw1BJqWwedzdnRiDLGLl5/oHL529r8heQ9O8n6YdT1MxpexxfGxI9O2iA&#xA;+wp7mnU/QPeOXLx+mPJnpNKMQOSZ9XXyeU/mV58XUNZXXkuJNOj0uq6TcRHjOlepWnVpf2k3BHwk&#xA;EZd4UYw9TgjV5cuceF8vLzUPLf59+efMeuWGkXl5Ho8MqlFurGCEzSyrQj1vrK3Mah1U7RqPi2Bz&#xA;S6nNKMbi9hh0gP1c3qMH5qatbSTaTe6LJd6zYFVurmOSK3tZUfeKaMM8koDp9ocfhcMoJpXIjXQ4&#xA;QT1YjQykTXJcfzfuIbhorry9PxS2mvGa3uYJCIrdkEu0pgFR6ooK75bg1Mcl10a8+lOOrPN41f8A&#xA;nLXPzE1+HTZopYtV1m7gGgy28rCPTrJTzkZVBB9deIeSWlWXkBxCgHKnAxrzcPT5xMmv4ftfQX5j&#xA;2d5daJb+lbyXljBdxT6tZQAvLNaxqx4qg3k4y+nIyDd1UqASaHH1EZGBEebkYCBLdiSa7puu+Y9E&#xA;h8vc7+/tLpLiW/thyhtIOZS5jupB/dmaJZUEbblh0qBms0WHJGd8h1c3UzjwvV83LrEj80eX7jUo&#xA;YrzTLgWOv2HNtMviOSguBzhmX9uGXiOa+wYfEqnFbfNXnLzBrNo2q3WvLIuuWXwXdtMalZXoIgCN&#xA;jExYcGXYr0zYjLEY7HR5uWjyT1AhM3xHn5fjo8qUzzyBqPc3dy42RS8kssh2Cqu5ZiaBR8s08iZG&#xA;y9xjhHHAAbRD2P8AKzRfzK8lRzXmtaVbaXpGuNHHDd6rcrarbTKrtG0wQSyIrqCtHVavxFVrlGfS&#xA;eJW9MBqQPNV0zUtHtLp9KgR9bsxepaWesm+utMsUimaNS8VtbVdoYJJHVSZaFFFGPXMqOhjw8VfN&#xA;wZ9qVkGK9/Lp5Jfq3kHzLrvmm60bypdQ61ZaZbxoZ4pZY4LZ7mZjcCJriSapLbs/qMzUNORQoLcc&#xA;+EUGvPhGQgyPW6730p5M8q2PlXy1Y6HZUMdpGBJKBx9SU7ySEVNOTdBXYUHbAyJtOsUJX5qt9Vuf&#xA;LWqW+kOY9TmtZks3VxGwlZCE4uQQjV6N2O+A8kxq93lera15ck8u/wCHtMsp31Ph6FnoNvCVv7We&#xA;NDJFI0Ro0QikjBEx+GtCGPXNFjwZRk83bSyQ4fJ7HaC5FrCLpla5EaidkFFMlByKjwrm+dQhdd0S&#xA;y1rTnsbvkqkrJDPGeMsM0ZDRTROPsvG4DKf4YpBeAef7rzZba/JY+bLgTTQIz2N2i+nbT24pWWJO&#xA;isNvVTcqe5UqTsNNONV1ee7Uw5OO+cTy8vL8c3hV5qj6ndS6jMaeoT6an/dcSk8E+gbn3zWZshnK&#xA;3rdBpY4MQiPj72f/AJZ+W/zM0W+XzvBoEn+HrWCX6y924tfUtmUM0yKwaYqoo4KxkEA5j5tP4kab&#xA;TqACzHWdUsLLzHe3Bmj8xvfRpc3lnpF9LZ2FrcKFRUF3EryTvJEg5EBelSq8hlmn7PBFVdODqu1R&#xA;h5mr6dfelnmTy7f6td6JY+Vrm3vr3W4hqd1o0NxdSxQstorw/WLi5lnJPGgSvAKSKqAwYXYqgdgj&#xA;UwOWJBJHm9p/Jz8vX8m+WSt8Adb1Jhcak3wkqRXhDyUsDw5MTQkcmah40wk3uWFAAAcgz3FXYq8f&#xA;i1vTvL1lfWPmONk16SSeW6tWTlLqk0jUDWYba5EvJURFPwDijBaUzSanBkOT3u1xZIcGzPvy+tb2&#xA;08o2NvdxSwGMzC2gn/vY7T15Pqkbg7hktvTUqdx0O+bfEDwi+brspHEa5J9c21vc28ttcxrNbzo0&#xA;c0MgDI6OOLKynYgg0IyxreHfmfaeadB+qabdXUt15Rqsel3DHk0T9Et7p+rsvSKRvtDY/Hu2VpZR&#xA;Bo83Vdq4sko8Q+kcx+n8cngfmjVm1DWZoFb/AEawYxRp2MnSRz71+EfL3yjWZeKVdA7LsPRjHi4z&#xA;9Uvu6Jh5I8k/mNrmp2mp+VtHe4hsZ0nW+uOMNo7wyA8BJIUDgFaOEqcxDj4gR3u2nmES9U8za9Bd&#xA;XekazeTxHU3529x5X0y5YXMUHFmkGoXYQGGSK4VFCent8YUtyqtem7PHI+pxdT2j4UTLkPvSfzKL&#xA;S/8AKT6pps8Wm6zdyNpcWhJeX+o3csLTxrMjyTSUVJVCEhYF51VQ3IhTkjEMZoANUc5zwBs0Rt5P&#xA;R/yV/KfVfLmoX2veZIY49Xbla2MEbrKkcAO8isv8+3GtGA5Vpz4i2cjI20YsQxw4Q9eyLNakUUZY&#xA;oioXPJyoAqfE06nFV2KuxVi3nb8s/J3nSNBr1kZZo42ijuYZJIJQpPIAtGy8wr/GquCA29OuKjYg&#xA;9yV+Q/yS8ieSroX2mwTXeppyEV/fSCaWNXFCIwqxxptUclTlQkVpgEQGyeWUuad/mH5an8y+TtR0&#xA;i2ZFvJVSWzMmyevbyLPErneis8YVvYnJA0baZREgQeuzzDRfyC1jUOLeatRSC1P95YWVJC460ZnX&#xA;gv8AKysJQR04nLJ5py58mnBosOLeIuXeXsGg+XtG0DT10/SLVbW1U8iq1ZmY7F5HYs7safaYk5U5&#xA;JNpjih2KuxVb6UXq+rwX1ePD1KDlxrWletK4quxV2KpR5o8peXvNOm/o3XLQXdryDqOTRurDaqSR&#xA;lXWqkqeJ3BI6HFWDeXv+ccPyx0XVv0iltcX/ABf1LezvpfWt4jWopHxXnx7eqW+/I8IbTmkRT0q9&#xA;tILyzns5xyguY3hlXpVHUqw+45JqeEaR+QfnOdxaatqlvZafAfSWa15tNLGh48uHw8ea/ED6g4nq&#xA;ppvcdRMiuTiQ7PwxkZVxHz5PW/JvkHy15RszBpFvSVxSe8lo08m9fiYBVUVNeKKq13plNOYZWyLF&#xA;DsVdiq14onZWdFZkNUJAJU+I8MVXYq7FULqulabq+nXGm6lbpd2N0hjuLeQVVlP8R1BG4O4xV5k3&#xA;/OMn5Wtq41D0b0RHeXT/AK3I0EjftM7NW4qx3P73rgMbLZHKYihs9Rs7K0sbSGzs4UtrS3RY4IIl&#xA;CIiKKKqqKAADC1vFde/JTzde+bdVfTry1tNEv7mS8W6epnV7o+rKOAVg3GVm2PGqkfGDlsc8gKDi&#xA;z0OKc+OVk93RnXkf8pPK/lSU3qIb7WGNW1CcVKmnH90pLcdiRyJZ6GhYjbKjvuXLFAUBQZtih//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:AF5151251284E411BCEDA968A3005EC0</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:AF5151251284E411BCEDA968A3005EC0</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:AE5151251284E411BCEDA968A3005EC0</stRef:instanceID>
            <stRef:documentID>xmp.did:AE5151251284E411BCEDA968A3005EC0</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AE5151251284E411BCEDA968A3005EC0</stEvt:instanceID>
                  <stEvt:when>2014-12-15T11:29:05+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AF5151251284E411BCEDA968A3005EC0</stEvt:instanceID>
                  <stEvt:when>2014-12-15T11:29:16+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>150.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Web Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -112.037 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 112.037 li
467.14 112.037 li
467.14 0 li
cp
clp
[1 0 0 1 0 0 ]ct
70.8169 69.9395 mo
65.6006 70.9443 55.5903 71.459 53.7764 67.3516 cv
51.7559 62.7793 61.9824 59.627 67.9258 58.2295 cv
68.1694 58.6084 68.4092 59.0508 68.6421 59.5361 cv
69.6235 61.6348 70.418 64.6123 70.7051 67.4951 cv
70.792 68.3271 70.8306 69.1455 70.8169 69.9395 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.823453 .403418 .425788 .104005 cmyk
f
76.7202 58.0752 mo
77.1167 56.5566 78.1626 54.5186 80.2466 51.1963 cv
80.2988 51.1846 80.3457 51.1631 80.4038 51.1592 cv
81.8628 50.8496 85.2051 52.0264 87.002 53.1816 cv
87.2988 53.375 87.5596 53.5713 87.7578 53.749 cv
86.7441 57.6504 84.2813 62.5859 83.0088 64.1973 cv
81.2847 66.3838 74.3511 67.1094 70.8599 67.4717 cv
70.7051 67.4951 li
70.418 64.6123 69.6235 61.6348 68.6421 59.5361 cv
68.8145 59.4512 li
71.1846 59.0605 74.6948 58.3799 76.7202 58.0752 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
76.9761 44.8379 mo
77.2622 43.5459 77.6392 42.1035 79.2925 42.209 cv
79.4702 42.2168 79.6514 42.249 79.8521 42.29 cv
81.9873 42.7646 85.6025 43.5645 85.2021 45.1445 cv
85.126 45.4189 84.9941 45.6475 84.8105 45.8389 cv
84.9023 45.9346 li
85.0908 46.9268 87.2686 47.8613 88.9277 47.1777 cv
89.4219 47.4756 90.5674 47.6592 91.5566 47.168 cv
91.583 47.2227 li
90.9883 50.3496 88.8467 52.6729 87.0225 53.1416 cv
87.002 53.1816 li
85.2051 52.0264 81.8628 50.8496 80.4038 51.1592 cv
80.3306 51.0391 li
77.856 49.1152 76.6543 46.2539 76.9761 44.8379 cv
cp
.0797436 .400244 .584497 0 cmyk
f
79.8521 42.29 mo
79.6514 42.249 79.4702 42.2168 79.2925 42.209 cv
79.2261 42.0107 li
79.5518 39.6123 80.2373 38.0371 81.3682 37.3848 cv
82.332 36.8252 84.1309 37.0127 84.9326 38.2334 cv
86.2354 37.4092 92.9922 38.3389 93.248 43.1191 cv
93.3828 45.5098 92.5439 46.6777 91.5566 47.168 cv
90.5674 47.6592 89.4219 47.4756 88.9277 47.1777 cv
87.2686 47.8613 85.0908 46.9268 84.9023 45.9346 cv
84.8105 45.8389 li
84.9941 45.6475 85.126 45.4189 85.2021 45.1445 cv
85.6025 43.5645 81.9873 42.7646 79.8521 42.29 cv
cp
f
54.2339 67.1484 mo
53.6436 65.8115 54.2642 64.5195 56.1338 63.1973 cv
59.1221 61.085 64.5132 59.5635 67.6885 58.8018 cv
69.1655 61.2891 70.2783 65.8262 70.3154 69.5195 cv
64.3979 70.5898 55.7383 70.5547 54.2339 67.1484 cv
cp
72.5254 59.3057 mo
73.7988 59.0762 75.0562 58.8516 76.0864 58.6816 cv
75.8784 60.0859 76.2295 61.1494 76.8135 62.584 cv
76.9175 62.8398 77.2095 62.9639 77.4658 62.8584 cv
77.7183 62.7549 77.8433 62.4619 77.7393 62.207 cv
77.1646 60.7939 76.7881 59.8428 77.208 58.2188 cv
77.2129 58.2021 77.2178 58.1855 77.2217 58.168 cv
77.5996 56.752 78.5762 54.8252 80.564 51.6367 cv
82 51.375 85.6895 52.748 87.1963 53.9229 cv
86.1299 57.7891 83.7656 62.4385 82.6172 63.8916 cv
81.0757 65.8389 74.5386 66.583 71.1411 66.9424 cv
70.8472 64.4307 70.1895 61.8779 69.3252 59.8711 cv
70.2954 59.707 71.4072 59.5068 72.5254 59.3057 cv
cp
77.4614 44.9473 mo
77.6626 44.0547 77.9063 43.208 78.4282 42.8818 cv
78.7461 42.6807 79.1768 42.6455 79.8105 42.7891 cv
81.3091 43.125 84.0986 43.752 84.6553 44.6582 cv
84.7305 44.7803 84.749 44.8916 84.7178 45.0195 cv
84.6377 45.333 84.4326 45.5654 84.0986 45.7266 cv
83.2344 46.1387 81.7134 45.9834 80.311 45.3398 cv
80.0605 45.2246 79.7646 45.335 79.6484 45.5859 cv
79.5332 45.8369 79.6431 46.1338 79.8945 46.249 cv
81.5771 47.0205 83.3955 47.1689 84.5293 46.6289 cv
84.5713 46.6074 84.6055 46.5801 84.6455 46.5586 cv
84.8535 46.873 85.1748 47.1611 85.6104 47.3955 cv
86.3848 47.8115 87.6855 48.1279 88.8994 47.7227 cv
89.3867 47.9326 90.127 48.0459 90.8906 47.9033 cv
90.1836 50.3652 88.4775 52.167 87.0215 52.6123 cv
85.2334 51.5488 82.3076 50.4941 80.6304 50.6318 cv
78.1904 48.7373 77.2075 46.0713 77.4614 44.9473 cv
cp
81.6167 37.8193 mo
82.3232 37.4082 83.8359 37.4717 84.5078 38.5039 cv
84.6572 38.7334 84.9629 38.8008 85.1943 38.6543 cv
85.7285 38.3174 88.04 38.3369 90.0625 39.3799 cv
91.2285 39.9814 92.6416 41.124 92.7529 43.1484 cv
92.8467 44.875 92.4023 46.0801 91.4922 46.6338 cv
90.6182 47.1582 89.5439 46.9648 89.1885 46.75 cv
89.0527 46.668 88.8857 46.6563 88.7402 46.7168 cv
87.8477 47.083 86.7627 46.8799 86.084 46.5156 cv
85.6523 46.2822 85.4541 46.0352 85.4043 45.874 cv
85.5283 45.6885 85.6299 45.4883 85.6865 45.2637 cv
85.7861 44.876 85.7236 44.4834 85.5068 44.1338 cv
84.79 42.9658 82.5059 42.3701 79.9653 41.7979 cv
79.8975 41.7832 79.8359 41.7813 79.77 41.7695 cv
80.0923 39.6787 80.6992 38.335 81.6167 37.8193 cv
cp
70.9102 70.4277 mo
71.1416 70.3799 71.3125 70.1807 71.3154 69.9424 cv
71.3228 69.2959 71.2881 68.6201 71.2349 67.9385 cv
74.9941 67.541 81.5996 66.7949 83.4023 64.5117 cv
84.6611 62.917 87.1748 57.9795 88.2441 53.8701 cv
88.291 53.6914 88.2354 53.502 88.0986 53.376 cv
88.0684 53.3486 88.0293 53.3184 87.9951 53.291 cv
89.6709 52.4385 91.4414 50.3398 92.0303 47.4746 cv
92.9082 46.9424 93.8955 45.749 93.751 43.0938 cv
93.6152 40.5967 91.9189 39.2119 90.5195 38.4912 cv
88.6025 37.501 86.2783 37.2549 85.0879 37.6211 cv
84.0684 36.4805 82.2373 36.3018 81.1143 36.9541 cv
81.0347 37.002 80.9556 37.0508 80.8794 37.1055 cv
79.8003 37.8682 79.1084 39.3916 78.7637 41.7314 cv
78.4429 41.7754 78.1499 41.874 77.8936 42.0361 cv
77.8628 42.0557 77.8335 42.0752 77.8037 42.0967 cv
76.939 42.708 76.6782 43.8711 76.4854 44.7275 cv
76.1357 46.2764 77.2764 49.0957 79.6958 51.1406 cv
77.8208 54.1514 76.7852 56.123 76.3242 57.6309 cv
75.2266 57.8047 73.7998 58.0605 72.3477 58.3223 cv
71.1318 58.541 69.9165 58.7598 68.8916 58.9297 cv
68.7139 58.584 68.5317 58.251 68.3423 57.959 cv
68.2271 57.7822 68.0132 57.6963 67.8081 57.7441 cv
63.918 58.6592 58.6338 60.2061 55.5566 62.3809 cv
52.7085 64.3945 52.7681 66.3047 53.3193 67.5537 cv
55.4146 72.2939 66.7275 71.2354 70.9102 70.4277 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
57.2974 61.2373 mo
57.3125 62.4551 56.998 63.8252 56.6934 64.9873 cv
55.7612 63.9658 53.3179 61.1348 51.5049 59.21 cv
51.6787 59.0527 li
52.1499 58.5205 54.5508 57.2627 56.2114 58.5322 cv
57.0044 59.1279 57.2886 60.1143 57.2974 61.2373 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
47.9331 67.9629 mo
47.9839 68.1035 li
43.2339 70.0234 39.7065 71.9424 38.2017 73.5801 cv
38.106 73.6758 38.0273 73.7822 37.9453 73.875 cv
37.9229 73.8516 li
38.2583 70.7861 42.0674 67.5576 45.0337 64.8799 cv
45.2026 64.7324 li
46.0508 65.6748 46.9082 66.6445 47.9331 67.9629 cv
cp
.826932 .410346 .420874 .105837 cmyk
f
38.2017 73.5801 mo
39.7065 71.9424 43.2339 70.0234 47.9839 68.1035 cv
50.5723 67.0459 53.5195 65.9961 56.6934 64.9873 cv
50.9873 69.0713 46.6851 71.6895 44.1938 75.4199 cv
44.4102 75.5664 li
44.7441 77.4043 45.9702 79.8223 47.811 82.5742 cv
47.6885 82.6572 li
45.7764 83.6279 42.6558 83.1172 41.1978 80.2393 cv
37.6953 80.4541 35.3809 77.0352 37.9453 73.875 cv
38.0273 73.7822 38.106 73.6758 38.2017 73.5801 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
57.3105 61.2334 mo
62.1074 63.1777 78.9893 75.249 86.2842 81.7051 cv
85.8564 86.6201 74.709 101.661 68.0288 105.492 cv
60.6426 98.2891 52.3691 89.3984 47.811 82.5742 cv
45.9702 79.8223 44.7441 77.4043 44.4102 75.5664 cv
44.1938 75.4199 li
46.6851 71.6895 50.9873 69.0713 56.6934 64.9873 cv
56.998 63.8252 57.3125 62.4551 57.2974 61.2373 cv
57.3105 61.2334 li
cp
.74789 .241123 .31931 .00552377 cmyk
f
67.3188 67.3184 mo
69.5732 68.8545 71.9761 70.5576 74.3428 72.2881 cv
71.7632 79.54 62.5776 89.3428 55.957 92.8887 cv
53.9849 90.6436 52.1421 88.4316 50.5298 86.3418 cv
55.4854 82.8232 64.9043 73.8906 67.3188 67.3184 cv
cp
0 0 0 0 cmyk
f
49.6323 57.4004 mo
49.9888 57.6445 50.6777 58.334 51.5049 59.21 cv
53.3179 61.1348 55.7612 63.9658 56.6934 64.9873 cv
53.5195 65.9961 50.5723 67.0459 47.9839 68.1035 cv
47.9331 67.9629 li
46.9082 66.6445 46.0508 65.6748 45.2026 64.7324 cv
44.6558 64.1162 44.1265 63.5107 43.5635 62.8418 cv
45.7886 60.7588 46.9307 59.3818 49.6323 57.4004 cv
cp
.0797436 .400244 .584497 0 cmyk
f
55.9116 58.9277 mo
57.1025 59.8311 56.8931 61.9561 56.438 63.9473 cv
56.228 63.71 55.9927 63.4443 55.7388 63.1563 cv
54.4624 61.7168 53.2354 60.3369 52.2153 59.2373 cv
52.8408 58.7725 54.6611 57.9775 55.9116 58.9277 cv
cp
85.7568 81.9023 mo
85.0273 86.7002 74.6128 100.859 68.103 104.866 cv
62.6436 99.5225 46.2515 82.958 44.8994 75.4766 cv
44.8906 75.4287 44.8687 75.3887 44.8477 75.3467 cv
46.875 72.5117 50.0234 70.292 54.2134 67.3516 cv
55.0967 66.7324 56.0225 66.084 56.9883 65.3926 cv
56.9922 65.3887 56.9937 65.3848 56.9976 65.3818 cv
57.0117 65.3711 57.0215 65.3555 57.0337 65.3447 cv
57.0674 65.3115 57.0991 65.2773 57.1216 65.2373 cv
57.1265 65.2295 57.1353 65.2256 57.1392 65.2178 cv
57.1563 65.1846 57.1704 65.1494 57.1802 65.1123 cv
57.4531 64.0752 57.689 63 57.7695 61.9912 cv
63.2793 64.6172 78.9336 75.9131 85.7568 81.9023 cv
cp
44.4155 82.4111 mo
43.5752 82.1553 42.4121 81.5303 41.647 80.0098 cv
41.5566 79.8311 41.3677 79.7227 41.1675 79.7354 cv
39.605 79.8369 38.2183 79.1123 37.6338 77.8926 cv
37.043 76.6572 37.3862 75.208 38.5728 73.9141 cv
40.4624 71.8535 46.0034 69.1533 53.668 66.5137 cv
53.6582 66.5205 53.6484 66.5264 53.6387 66.5342 cv
47.9321 70.5381 43.8066 73.4297 42.0991 78.5381 cv
42.0112 78.7988 42.1528 79.083 42.4146 79.1709 cv
42.6758 79.2578 42.9619 79.123 43.0469 78.8555 cv
43.332 78.0029 43.6914 77.2217 44.1143 76.4834 cv
44.5986 78.1621 45.6602 80.1748 47.0811 82.3564 cv
46.2695 82.6484 45.3091 82.6836 44.4155 82.4111 cv
cp
44.7378 65.8193 mo
45.1626 65.4365 li
45.8042 66.1611 46.4751 66.9355 47.2222 67.8682 cv
43.52 69.4023 40.689 70.8926 38.9546 72.2334 cv
40.0601 70.0342 42.604 67.7402 44.7378 65.8193 cv
cp
45.6079 64.4307 mo
45.1543 63.9209 44.71 63.4189 44.252 62.8789 cv
44.729 62.4258 45.1582 62.0059 45.5698 61.6016 cv
46.8066 60.3916 47.8838 59.3369 49.6245 58.0293 cv
50.7124 58.9873 53.3525 61.9707 54.9897 63.8203 cv
55.2959 64.166 55.5718 64.4766 55.811 64.7461 cv
53.0073 65.6543 50.4497 66.5703 48.189 67.4746 cv
47.2285 66.2598 46.4038 65.3262 45.6079 64.4307 cv
cp
51.5303 58.5078 mo
50.8174 57.7607 50.2544 57.2188 49.9229 56.9873 cv
49.7466 56.8643 49.5132 56.8682 49.3408 56.9951 cv
47.3584 58.4521 46.2056 59.5811 44.8701 60.8867 cv
44.3667 61.3809 43.8359 61.8984 43.2236 62.4717 cv
43.0322 62.6543 43.0112 62.9521 43.1812 63.1572 cv
43.6309 63.7002 44.0649 64.1953 44.501 64.6875 cv
44.0693 65.0762 li
41.1328 67.7178 37.812 70.7119 37.4326 73.7305 cv
36.3174 75.208 36.0454 76.8867 36.7319 78.3242 cv
37.4512 79.8271 39.0664 80.7529 40.9063 80.7441 cv
42.4551 83.4707 45.4976 84.1396 47.6558 83.2207 cv
53.3545 91.5967 63.8047 102.07 67.6792 105.851 cv
67.8403 106.007 68.0845 106.038 68.2773 105.926 cv
73.6855 102.82 81.6348 92.8662 85.0889 86.2939 cv
86.0703 84.4258 86.6885 82.832 86.7852 81.7451 cv
86.7979 81.5869 86.7354 81.4326 86.6162 81.3271 cv
79.7012 75.2061 63.0586 63.2236 57.7866 60.8994 cv
57.7241 59.7656 57.373 58.7813 56.5156 58.1299 cv
54.7529 56.793 52.4009 57.8154 51.5303 58.5078 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
62.3311 7.89648 mo
70.2505 10.9668 71.8271 20.5703 70.3608 25.1162 cv
70.1123 25.1982 li
69.3999 23.126 68.7539 21.3633 68.3179 20.1436 cv
67.2412 18.6152 65.1401 17.0684 62.6221 16.4004 cv
62.5195 16.3701 li
59.9468 24.4336 48.2266 34.0371 42.269 35.457 cv
42.0352 34.0332 42.104 32.666 42.3936 31.3936 cv
41.0796 33.3086 36.689 37.2861 31.7827 40.2041 cv
31.8462 40.3174 li
32.6572 46.0078 30.6323 50.5381 28.9312 54.1777 cv
25.3765 50.5059 21.5864 49.8789 18.9907 52.1934 cv
17.1201 53.8594 16.2739 56.9912 17.6484 59.8916 cv
17.5166 59.9639 li
14.3389 59.3721 10.6812 58.3193 6.74902 55.5176 cv
7.66797 53.6553 9.86279 51.2637 12.2065 49.4756 cv
8.88135 48.5439 4.1123 46.9053 .820313 44.5791 cv
1.86133 41.2021 5.58594 35.8691 10.6318 31.3096 cv
7.55713 31.5068 3.26172 30.8838 .502441 29.6992 cv
2.09424 26.6064 6.32178 21.877 12.8198 18.8467 cv
10.9658 18.4199 7.71143 16.8594 5.43262 15.1191 cv
12.8135 8.2793 28.8223 2.00586 39.7085 .791016 cv
51.5596 -.53125 60.5146 2.81836 62.3311 7.89648 cv
cp
.373144 .782101 .665248 .350225 cmyk
f
70.1123 25.1982 mo
72.3379 31.6758 75.2236 41.1533 74.4766 46.5557 cv
73.5039 53.5078 68.3584 58.7764 64.0889 60.9551 cv
59.9282 63.082 45.6177 68.2881 32.3589 62.333 cv
30.7939 65.082 24.9966 66.5391 20.3311 63.0654 cv
19.0557 62.1045 18.186 61.0205 17.6484 59.8916 cv
16.2739 56.9912 17.1201 53.8594 18.9907 52.1934 cv
21.5864 49.8789 25.3765 50.5059 28.9312 54.1777 cv
30.6323 50.5381 32.6572 46.0078 31.8462 40.3174 cv
31.7827 40.2041 li
36.689 37.2861 41.0796 33.3086 42.3936 31.3936 cv
42.104 32.666 42.0352 34.0332 42.269 35.457 cv
48.2266 34.0371 59.9468 24.4336 62.5195 16.3701 cv
62.6221 16.4004 li
65.1401 17.0684 67.2412 18.6152 68.3179 20.1436 cv
68.7539 21.3633 69.3999 23.126 70.1123 25.1982 cv
cp
0 .167361 .439734 0 cmyk
f
54.1304 43.3242 mo
54.9375 45.8555 54.0713 48.3936 52.1973 48.9902 cv
50.3228 49.5869 48.1484 48.0186 47.3413 45.4854 cv
46.5347 42.9531 47.4009 40.416 49.2754 39.8184 cv
51.5752 41.2217 51.7915 41.3008 53.2954 41.624 cv
53.6421 42.1172 53.9292 42.6904 54.1304 43.3242 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
51.0601 43.2324 mo
51.1646 44.3691 50.5664 45.3535 49.7251 45.4297 cv
48.8838 45.5078 48.1157 44.6484 48.0112 43.5107 cv
47.9082 42.374 48.5054 41.3896 49.3472 41.3135 cv
50.188 41.2344 50.9561 42.0938 51.0601 43.2324 cv
cp
0 0 0 0 cmyk
f
71.5889 35.1592 mo
72.606 37.6143 72.2393 40.0977 70.772 40.707 cv
69.3032 41.3154 67.2866 39.8164 66.2695 37.3613 cv
66.0928 36.9336 65.957 36.5039 65.8623 36.084 cv
66.5757 33.958 66.5366 34.0664 67.0874 31.8135 cv
68.5557 31.2051 70.5713 32.7031 71.5889 35.1592 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
69.3716 35.8389 mo
69.7412 36.7295 69.52 37.668 68.8784 37.9346 cv
68.2363 38.2012 67.415 37.6924 67.0454 36.8018 cv
66.6768 35.9102 66.8984 34.9717 67.5405 34.7051 cv
68.1821 34.4395 69.0029 34.9473 69.3716 35.8389 cv
cp
0 0 0 0 cmyk
f
51.9092 2.8916 mo
55.4126 3.68555 57.645 5.0166 59.041 6.33008 cv
57.2661 13.6455 35.5894 18.2695 25.293 21.626 cv
16.3955 24.5283 11.1211 27.958 8.4751 31.3213 cv
7.40674 31.2793 6.28271 31.1641 5.18262 30.9805 cv
13.271 18.3711 40.9966 10.6289 47.4326 7.08691 cv
50.3398 5.48828 51.6309 4.09277 51.9092 2.8916 cv
cp
.341833 .684718 .553277 .151247 cmyk
f
62.3311 7.89648 mo
61.7861 6.37402 60.5933 4.99902 58.875 3.86914 cv
57.0215 2.6377 54.5371 1.68848 51.5776 1.11523 cv
48.1689 .454102 44.1465 .299805 39.7085 .791016 cv
29.6606 1.91211 15.2456 7.34375 7.2832 13.5508 cv
16.7939 7.99023 33.9697 1.90039 45.313 2.13867 cv
47.9067 2.1875 50.0781 2.4668 51.9092 2.8916 cv
55.4126 3.68555 57.645 5.0166 59.041 6.33008 cv
60.2402 7.45898 60.8364 8.57227 61.124 9.33105 cv
65.1919 10.4346 69.8657 14.7549 70.5952 24.2236 cv
71.6084 19.415 69.7637 10.7744 62.3311 7.89648 cv
cp
0 0 0 0 cmyk
f
62.7549 16.4482 mo
62.1162 29.1816 47.2842 38.0732 40.5278 40.4072 cv
40.2261 39.168 39.9751 38.0391 40.1304 36.5977 cv
38.7539 38.6855 35.1929 41.791 31.999 43.9102 cv
32.0703 42.7617 32.0225 41.5703 31.8462 40.3174 cv
31.7827 40.2041 li
36.689 37.2861 41.0796 33.3086 42.3936 31.3936 cv
42.104 32.666 42.0352 34.0332 42.269 35.457 cv
48.2266 34.0371 59.9468 24.4336 62.5195 16.3701 cv
62.6221 16.4004 li
62.6709 16.4111 62.7109 16.4248 62.7549 16.4482 cv
cp
.0797436 .400244 .584497 0 cmyk
f
70.1123 25.1982 mo
72.3379 31.6758 75.2236 41.1533 74.4766 46.5557 cv
73.5039 53.5078 68.3584 58.7764 64.0889 60.9551 cv
63.5713 61.2178 62.8916 61.5342 62.0645 61.8652 cv
66.562 58.8525 70.9448 54.3379 72.8906 47.3174 cv
74.314 42.207 71.4829 33.0117 65.6724 17.7363 cv
66.8076 18.4424 67.7236 19.2959 68.3179 20.1436 cv
68.7539 21.3633 69.3999 23.126 70.1123 25.1982 cv
cp
0 0 0 0 cmyk
f
21.3618 56.8838 mo
20.3008 58.834 21.9971 61.6035 25.3276 61.8389 cv
27.895 62.0205 29.4985 60.2949 27.7451 57.9531 cv
25.5513 55.0225 22.5005 54.79 21.3618 56.8838 cv
cp
.0797436 .400244 .584497 0 cmyk
f
63.354 46.1758 mo
63.6577 44.9248 64.9707 44.3184 65.167 45.3301 cv
65.3628 46.3418 63.165 46.9531 63.354 46.1758 cv
cp
f
68.7231 19.8496 mo
67.5288 18.1621 65.4111 16.7334 63.1343 16.041 cv
63.2861 15.5068 63.4053 14.9775 63.4697 14.4629 cv
63.5044 14.1895 63.3096 13.9395 63.0356 13.9043 cv
62.7593 13.8711 62.5112 14.0654 62.4775 14.3398 cv
61.4956 22.1943 49.3726 32.8232 42.6846 34.8281 cv
42.2739 31.0039 44.1724 27.543 45.9941 25.6855 cv
46.187 25.4883 46.1841 25.1719 45.9868 24.9785 cv
45.79 24.7861 45.4731 24.7871 45.2798 24.9863 cv
43.8608 26.4336 42.5039 28.623 41.9263 31.1914 cv
39.9658 33.96 32.4795 40.2256 25.9932 42.3994 cv
25.5376 38.1025 27.8472 31.3691 30.7969 28.6436 cv
30.9995 28.4551 31.0122 28.1396 30.8247 27.9365 cv
30.6372 27.7354 30.3237 27.7227 30.1182 27.9082 cv
26.7744 30.999 24.2827 38.5439 25.0874 43.1416 cv
25.1118 43.2822 25.1958 43.4053 25.3169 43.4805 cv
25.439 43.5566 25.5869 43.5752 25.7241 43.5342 cv
26.7554 43.2236 27.8174 42.8057 28.8843 42.3086 cv
29.7251 41.916 30.5679 41.4717 31.4019 40.9951 cv
31.9468 46.0469 30.2305 50.1875 28.7769 53.3262 cv
25.2358 49.9639 21.4038 49.3779 18.6597 51.8223 cv
17.2026 53.1211 16.3857 55.1406 16.4751 57.2256 cv
16.5063 57.9482 16.6567 58.6523 16.8955 59.333 cv
14.27 58.7959 10.9595 57.8184 7.39795 55.3613 cv
8.37158 53.6553 10.3687 51.5029 12.5098 49.873 cv
12.6602 49.7588 12.7339 49.5684 12.6978 49.3809 cv
12.6621 49.1953 12.5244 49.0449 12.3408 48.9941 cv
9.69873 48.2559 4.83496 46.6914 1.4126 44.3799 cv
2.46973 41.3662 5.76318 36.3887 10.9688 31.6846 cv
11.1265 31.542 11.1772 31.3154 11.0942 31.1191 cv
11.0117 30.9229 10.8149 30.8018 10.6021 30.8145 cv
7.64502 31.002 3.80322 30.4316 1.20752 29.4424 cv
2.93945 26.4229 6.94482 22.1377 13.0313 19.2998 cv
13.2246 19.21 13.3398 19.0059 13.3174 18.7939 cv
13.2944 18.5811 13.1396 18.4063 12.9316 18.3594 cv
11.3755 18.0029 8.46875 16.6787 6.21729 15.0811 cv
14.0215 8.18262 29.7085 2.40918 39.7642 1.28809 cv
52.1836 -.0957031 60.2803 3.64941 61.8604 8.06543 cv
61.9092 8.20215 62.0146 8.30957 62.1499 8.3623 cv
69.1572 11.0791 70.9546 19.2197 70.1548 23.8057 cv
69.7817 22.7422 69.4355 21.7773 69.1479 20.9785 cv
68.7866 19.9717 li
68.771 19.9277 68.75 19.8867 68.7231 19.8496 cv
cp
73.9771 46.4834 mo
73.0557 53.0762 68.2314 58.2803 63.8599 60.5127 cv
58.3003 63.3506 44.6152 67.2842 32.5649 61.8721 cv
32.3311 61.7676 32.0532 61.8564 31.9258 62.082 cv
31.2983 63.1836 29.8862 64.0596 28.145 64.4219 cv
25.584 64.957 22.8462 64.3154 20.6348 62.6631 cv
18.686 61.2051 17.5635 59.2588 17.4746 57.1836 cv
17.3979 55.3945 18.0894 53.6689 19.3242 52.5684 cv
21.7627 50.4033 25.3037 51.1504 28.5703 54.5293 cv
28.6846 54.6475 28.8496 54.7021 29.0117 54.6748 cv
29.1724 54.6494 29.3125 54.543 29.3828 54.3936 cv
30.9746 50.9863 33.1436 46.3311 32.3594 40.4346 cv
36.2031 38.1055 39.7222 35.1592 41.6714 33.0537 cv
41.6226 33.8623 41.6323 34.6885 41.7725 35.54 cv
41.7949 35.6768 41.8735 35.7979 41.9893 35.875 cv
42.1045 35.9521 42.2466 35.9775 42.3818 35.9453 cv
43.1821 35.7539 44.0718 35.4268 45.0205 34.9844 cv
51.3467 32.0342 60.2729 23.9629 62.8188 16.9902 cv
65.2451 17.7178 67.0039 19.1816 67.8687 20.374 cv
68.207 21.3174 li
68.7998 22.9639 69.6289 25.2734 70.4771 27.8682 cv
69.9712 27.457 69.4995 27.4346 69.1768 27.5215 cv
67.749 27.918 66.8501 30.5879 65.9375 34.4932 cv
65.709 35.4717 65.4023 35.79 65.2666 35.8125 cv
65.1357 35.8408 64.8433 35.6738 64.5107 35.2402 cv
64.3081 34.9766 63.9326 34.9268 63.6685 35.1299 cv
63.4063 35.332 63.3564 35.708 63.5581 35.9707 cv
64.3418 36.9902 65.0576 37.085 65.5195 36.9854 cv
65.6216 36.9639 65.7197 36.9307 65.814 36.8867 cv
66.4072 36.6104 66.8413 35.8994 67.106 34.7666 cv
68.2856 29.7139 69.1084 28.7822 69.4902 28.6807 cv
69.5957 28.6514 69.7505 28.7939 69.833 28.8818 cv
70.062 29.123 70.4414 29.1318 70.6816 28.9053 cv
70.7212 28.8682 70.7441 28.8223 70.771 28.7783 cv
72.6938 34.7881 74.5928 42.0781 73.9771 46.4834 cv
cp
62.7207 7.51367 mo
60.5313 1.98145 51.1074 -.982422 39.6533 .294922 cv
29.2427 1.45508 12.8682 7.54102 5.08789 14.7549 cv
4.97998 14.8555 4.92139 14.998 4.92822 15.1455 cv
4.93555 15.293 5.00781 15.4297 5.125 15.5195 cv
7.07764 17.0088 9.60156 18.291 11.46 18.957 cv
5.46924 22.0527 1.59619 26.4814 .0561523 29.4648 cv
-.0078125 29.5889 -.0170898 29.7324 .0288086 29.8623 cv
.0761719 29.9932 .174316 30.0986 .301758 30.1533 cv
2.65625 31.1709 6.25732 31.8311 9.32324 31.8496 cv
4.95801 36.0205 1.4126 40.9609 .342773 44.4307 cv
.279297 44.6377 .355469 44.8623 .531738 44.9873 cv
3.71973 47.2402 8.23047 48.8232 11.1357 49.6875 cv
9.00195 51.4531 7.15283 53.584 6.30029 55.292 cv
6.19092 55.5117 6.25684 55.7783 6.45703 55.9229 cv
10.624 58.9004 14.4824 59.9082 17.3857 60.4502 cv
17.9917 61.5742 18.8809 62.5996 20.0366 63.4629 cv
22.4775 65.2881 25.5073 65.9951 28.3496 65.4014 cv
30.1709 65.0225 31.7036 64.123 32.5479 62.957 cv
46.5425 69.0137 60.834 63.0361 63.7842 61.6602 cv
64.0747 61.5244 64.2549 61.4346 64.3154 61.4043 cv
68.9175 59.0537 73.9961 53.5713 74.9678 46.623 cv
75.7192 41.2441 72.9321 31.9238 70.7246 25.4541 cv
70.7729 25.4023 70.813 25.3418 70.8364 25.2695 cv
72.3271 20.6475 70.8691 10.8281 62.7207 7.51367 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
22.2954 55.3115 mo
22.2637 55.3242 22.2329 55.3379 22.2021 55.3525 cv
20.9834 55.9209 20.3262 57.1094 20.5981 58.2764 cv
20.6602 58.5449 20.9297 58.7119 21.1982 58.6494 cv
21.4683 58.5918 21.6348 58.3184 21.5713 58.0488 cv
21.4048 57.333 21.855 56.5586 22.6904 56.2295 cv
23.895 55.7109 25.9307 56.0576 27.7056 58.7422 cv
27.8442 58.9521 28.1128 59.0225 28.3335 58.9199 cv
28.3555 58.9092 28.3774 58.8975 28.3984 58.8828 cv
28.6289 58.7314 28.6919 58.4209 28.54 58.1914 cv
26.4248 54.9912 23.8535 54.6396 22.2954 55.3115 cv
cp
f
49.4766 40.9756 mo
52.7241 42.5313 54.3452 42.9443 55.374 42.4648 cv
55.4014 42.4521 55.4282 42.4385 55.4556 42.4248 cv
56.3081 41.9746 56.5225 40.998 56.6821 39.9531 cv
56.7324 39.626 56.5068 39.3193 56.1797 39.2695 cv
55.8521 39.2197 55.5464 39.4453 55.4961 39.7715 cv
55.3652 40.6279 55.2188 41.1924 54.8945 41.3643 cv
53.9819 41.7998 50.9912 40.3711 49.9946 39.8936 cv
44.373 37.2012 40.4399 39.6748 38.7813 42.6133 cv
38.6182 42.9014 38.7202 43.2676 39.0083 43.4307 cv
39.2974 43.5938 39.6631 43.4912 39.8262 43.2041 cv
41.2319 40.7178 44.6016 38.6406 49.4766 40.9756 cv
cp
f
31.4028 40.998 mo
31.5234 42.1338 31.5293 43.2344 31.4521 44.2744 cv
29.9771 45.2051 28.6118 45.8975 27.625 46.1475 cv
27.4507 45.4668 27.3682 44.248 27.5483 42.8838 cv
27.9961 42.709 28.4355 42.5146 28.8794 42.3076 cv
29.7222 41.9141 30.5664 41.4766 31.4028 40.998 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
1.41211 44.3799 mo
5.5249 44.4932 9.4458 43.2705 12.1787 42.3164 cv
12.9897 39.3232 14.4761 36.0039 18.5181 33.1484 cv
16.9229 36.5186 17.1973 38.5977 18.1143 42.0313 cv
19.5405 35.0107 24.0498 31.5947 29.146 28.9424 cv
26.3081 32.4619 24.3618 39.0078 25.0854 43.1387 cv
25.1084 43.2822 25.1987 43.4063 25.3223 43.4814 cv
25.4365 43.5605 25.5879 43.5771 25.7231 43.5371 cv
26.3232 43.3564 26.9375 43.1367 27.5483 42.8838 cv
27.3682 44.248 27.4507 45.4668 27.625 46.1475 cv
28.6118 45.8975 29.9771 45.2051 31.4521 44.2744 cv
31.1836 47.8643 29.8931 50.8936 28.7759 53.3242 cv
25.2349 49.9658 21.4072 49.3779 18.6606 51.8164 cv
17.2075 53.124 16.3828 55.1416 16.4731 57.2285 cv
16.5112 57.9502 16.6533 58.6563 16.894 59.3389 cv
14.2695 58.7969 10.9541 57.8164 7.39307 55.3613 cv
8.37451 53.6563 10.3706 51.501 12.5137 49.873 cv
12.6597 49.7607 12.7363 49.5703 12.6924 49.3818 cv
12.6616 49.1973 12.5229 49.041 12.3452 48.9912 cv
9.69482 48.2529 4.83838 46.6885 1.41211 44.3799 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
134.69 83.9121 mo
136.11 80.9316 137.35 77.752 138.04 74.7021 cv
138.06 74.6514 li
138.88 75.0313 139.43 75.5615 139.69 75.7715 cv
139.68 80.3418 131.06 96.0117 128.89 97.7314 cv
128.15 97.3721 127.5 97.0117 126.92 96.6416 cv
127 96.502 li
128.52 94.6416 131.95 89.6514 134.69 83.9121 cv
cp
.181369 .0870985 .113436 0 cmyk
f
134.47 83.8115 mo
131.53 82.502 130.03 79.3213 130.3 77.9316 cv
130.28 77.9121 li
131.63 76.292 132.92 74.9121 134.72 74.4014 cv
136.1 74.0117 137.22 74.252 138.06 74.6514 cv
138.04 74.7021 li
137.35 77.752 136.11 80.9316 134.69 83.9121 cv
134.47 83.8115 li
cp
f
125.41 82.8613 mo
126.92 86.5918 124.44 91.1016 122.04 91.6816 cv
120.69 91.1816 119.24 90.8818 117.77 90.7217 cv
117.79 90.5918 li
119.79 89.0117 120.21 84.1816 118.63 82.1816 cv
118.63 82.1416 li
120.8 82.2813 123.09 82.5215 125.41 82.8613 cv
cp
f
125.57 82.8818 mo
127.54 81.4121 128.93 79.542 130.28 77.9121 cv
130.3 77.9316 li
130.03 79.3213 131.53 82.502 134.47 83.8115 cv
134.69 83.9121 li
131.95 89.6514 128.52 94.6416 127 96.502 cv
126.92 96.6416 li
124.18 94.8916 123.01 93.0518 122.04 91.6816 cv
124.44 91.1016 126.92 86.5918 125.41 82.8613 cv
125.46 82.8613 125.52 82.8721 125.57 82.8818 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
98.9199 101.872 mo
98.9102 101.812 98.9004 101.752 98.8799 101.682 cv
99.0498 101.642 li
101.729 102.691 106.229 100.512 107.68 96.6416 cv
107.68 96.6113 li
110.1 96.502 112.57 95.6914 114.87 95.0518 cv
114.91 95.2119 li
113.51 96.8613 113.88 100.142 116.11 103.062 cv
116.19 103.182 li
116.19 103.191 li
111.05 106.252 105.06 108.352 101.13 109.622 cv
101 109.682 li
99.2295 106.202 99.2598 104.321 98.9199 101.872 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
116.19 103.182 mo
119.16 101.412 121.85 99.3213 123.7 96.8818 cv
123.81 96.8115 li
124.36 97.7314 124.59 98.6113 124.69 98.9316 cv
121.81 104.021 107.59 110.672 102.02 111.542 cv
101.62 110.872 101.28 110.252 101 109.682 cv
101.13 109.622 li
105.06 108.352 111.05 106.252 116.19 103.191 cv
116.19 103.182 li
cp
0 0 0 0 cmyk
f
123.81 96.8115 mo
123.7 96.8818 li
121.85 99.3213 119.16 101.412 116.19 103.182 cv
116.11 103.062 li
113.88 100.142 113.51 96.8613 114.91 95.2119 cv
114.87 95.0518 li
117.19 94.4014 119.33 93.9316 121.09 94.5313 cv
122.43 94.9814 123.27 95.9121 123.81 96.8115 cv
cp
f
96.4404 96.5518 mo
96.3701 96.4121 96.29 96.2715 96.2002 96.1318 cv
96.25 96.1016 li
98.2998 97.1221 103.26 94.4814 104.87 91.7217 cv
104.99 91.6621 li
105.03 91.7314 105.06 91.792 105.09 91.8516 cv
106.3 94.2617 107.229 96.1816 107.5 96.6221 cv
107.56 96.6221 107.62 96.6221 107.68 96.6113 cv
107.68 96.6416 li
106.229 100.512 101.729 102.691 99.0498 101.642 cv
98.8799 101.682 li
98.6504 100.722 97.6201 98.6719 96.4404 96.5518 cv
cp
f
118.63 82.1816 mo
120.21 84.1816 119.79 89.0117 117.79 90.5918 cv
117.77 90.7217 li
112.17 90.1113 106.31 91.5713 105.09 91.8516 cv
105.06 91.792 105.03 91.7314 104.99 91.6621 cv
103.65 88.9922 101.979 85.752 100.47 83.2314 cv
100.57 83.1719 li
102.46 82.7617 104.13 82.5117 106.21 82.2617 cv
108.82 81.9414 113.37 81.792 118.63 82.1416 cv
118.63 82.1816 li
cp
.0797436 .400244 .584497 0 cmyk
f
100.47 83.2314 mo
101.979 85.752 103.65 88.9922 104.99 91.6621 cv
104.87 91.7217 li
103.26 94.4814 98.2998 97.1221 96.25 96.1016 cv
96.2002 96.1318 li
95.2295 94.3818 94.1797 92.6318 93.4297 91.4316 cv
93.7402 88.4922 91.46 81.4414 88.3799 79.4121 cv
93.7998 75.7617 96.9795 78.0518 99.0498 80.9922 cv
99.4902 81.6221 99.9697 82.3916 100.47 83.2314 cv
cp
0 .167361 .439734 0 cmyk
f
96.4297 96.5615 mo
93.3896 96.9316 88.3203 98.8916 85.0898 100.622 cv
87.9297 97.542 89.96 94.6514 93.4297 91.4316 cv
94.1797 92.6318 95.2295 94.3818 96.2002 96.1318 cv
96.29 96.2715 96.3701 96.4121 96.4404 96.5518 cv
96.4297 96.5615 li
cp
.498634 .76672 .682032 .673518 cmyk
f
88.3799 79.4121 mo
91.46 81.4414 93.7402 88.4922 93.4297 91.4316 cv
89.96 94.6514 87.9297 97.542 85.0898 100.622 cv
84.54 101.231 83.9502 101.842 83.3096 102.472 cv
79 106.722 72.6299 107.842 69.96 104.182 cv
69.6299 101.842 70.71 98.1816 72.71 94.6816 cv
74.71 91.1816 79.3799 83.8418 87.9697 79.1719 cv
88.1104 79.2422 88.2402 79.3213 88.3799 79.4121 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
93.4297 91.4316 mo
93.7402 88.4922 91.46 81.4414 88.3799 79.4121 cv
90.04 78.292 91.5 77.7314 92.7695 77.5918 cv
96.0801 81.3115 96.3496 87.8818 94.2002 92.3613 cv
94.0596 92.4521 li
93.8301 92.082 93.6201 91.7422 93.4297 91.4316 cv
cp
.0797436 .400244 .584497 0 cmyk
f
79.8999 104.981 mo
76.1401 106.981 71.98 106.952 69.96 104.182 cv
69.6299 101.842 70.71 98.1816 72.71 94.6816 cv
73.0498 94.0918 73.46 93.3916 73.96 92.6113 cv
72.0898 96.582 73.5498 104.441 79.8999 104.981 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
128.807 97.1279 mo
128.389 96.918 128.007 96.7031 127.644 96.4873 cv
130.379 93.0293 136.317 83.6982 138.38 75.4023 cv
138.709 75.6133 138.98 75.8311 139.181 75.999 cv
138.908 80.6465 131.101 94.7715 128.807 97.1279 cv
cp
122.819 91.916 mo
123.82 91.4287 124.772 90.418 125.451 89.0723 cv
126.419 87.1553 126.62 84.9824 126.038 83.1348 cv
127.604 81.9297 128.824 80.4863 129.899 79.1699 cv
130.301 80.8418 131.73 83.0039 134.024 84.1309 cv
131.521 89.2793 128.497 93.8145 126.801 95.9434 cv
124.732 94.5361 123.64 93.0898 122.819 91.916 cv
cp
105.36 91.2715 mo
104.119 88.8018 102.636 85.9258 101.249 83.5469 cv
102.975 83.1914 104.528 82.9668 106.27 82.7578 cv
108.471 82.4932 112.896 82.2734 118.322 82.6172 cv
119.634 84.4883 119.181 88.8447 117.491 90.1963 cv
114.525 89.917 110.562 90.0898 105.36 91.2715 cv
cp
107.051 96.8457 mo
106.286 98.5576 104.809 100.03 103.014 100.828 cv
101.636 101.44 100.271 101.564 99.2549 101.178 cv
98.9111 100.139 98.0908 98.502 97.1621 96.8066 cv
97.2344 96.8105 97.2988 96.8271 97.373 96.8271 cv
99.7969 96.8271 103.253 94.7803 104.896 92.5762 cv
105.203 93.1895 105.488 93.7637 105.739 94.2695 cv
106.408 95.6162 106.852 96.5078 107.051 96.8457 cv
cp
113.94 95.8301 mo
113.95 95.8271 113.96 95.8242 113.97 95.8223 cv
113.146 97.7383 113.712 100.537 115.487 103.025 cv
111.777 105.169 107.055 107.169 101.254 109.056 cv
100.001 106.468 99.7861 104.809 99.5674 102.967 cv
99.54 102.741 99.5088 102.506 99.4795 102.273 cv
99.8184 102.348 100.17 102.398 100.542 102.398 cv
101.451 102.398 102.441 102.178 103.421 101.742 cv
105.498 100.817 107.201 99.084 108.041 97.0762 cv
110.035 96.9336 112.018 96.3838 113.94 95.8301 cv
cp
120.933 95.001 mo
121.971 95.3574 122.675 96.04 123.168 96.752 cv
121.581 98.7891 119.322 100.707 116.349 102.521 cv
114.508 99.9805 114.038 97.0166 115.287 95.5332 cv
115.312 95.5039 115.323 95.4697 115.34 95.4375 cv
117.442 94.8643 119.394 94.4756 120.933 95.001 cv
cp
102.28 110.986 mo
102.068 110.622 101.89 110.289 101.712 109.957 cv
112.686 106.373 119.89 102.35 123.701 97.6797 cv
123.924 98.1582 124.067 98.5918 124.151 98.8672 cv
121.127 103.776 107.698 109.978 102.28 110.986 cv
cp
87.1348 99.0664 mo
87.5205 98.6172 87.8994 98.1709 88.2725 97.7295 cv
89.7695 95.96 91.333 94.1309 93.332 92.2207 cv
94.0771 93.4258 94.9033 94.8203 95.6709 96.1826 cv
93.1885 96.6172 89.8896 97.8086 87.1348 99.0664 cv
cp
82.9609 102.115 mo
80.6006 104.442 77.4517 105.888 74.7432 105.888 cv
73.437 105.888 71.6431 105.555 70.4385 103.984 cv
70.1777 101.77 71.2061 98.3174 73.1436 94.9268 cv
77.0103 88.1602 81.9961 83.0527 87.9658 79.7441 cv
87.998 79.7637 88.0293 79.792 88.0615 79.8125 cv
88.0811 79.8281 88.0996 79.8438 88.1221 79.8555 cv
90.8652 81.6914 93.1436 88.1914 92.9473 91.1943 cv
90.75 93.2529 89.1025 95.2002 87.5098 97.084 cv
86.1387 98.7041 84.7217 100.38 82.9609 102.115 cv
cp
98.6416 81.2842 mo
100.343 83.6982 102.638 88.0918 104.383 91.5537 cv
102.838 94.0918 98.3213 96.459 96.5313 95.6719 cv
95.5361 93.9141 94.5303 92.249 93.9346 91.2949 cv
94.1309 88.4199 92.2041 82.0361 89.248 79.4648 cv
94.3096 76.3818 97.0264 78.9902 98.6416 81.2842 cv
cp
124.559 88.6221 mo
123.901 89.9229 122.95 90.873 122.049 91.1514 cv
121.163 90.834 120.067 90.541 118.725 90.3418 cv
120.178 88.4727 120.544 84.916 119.517 82.7012 cv
121.278 82.8369 123.133 83.0352 125.04 83.3096 cv
125.599 84.9355 125.433 86.8896 124.559 88.6221 cv
cp
134.858 74.8828 mo
135.906 74.585 136.769 74.6953 137.465 74.9473 cv
136.81 77.6709 135.72 80.5137 134.451 83.2285 cv
131.896 81.9668 130.63 79.2373 130.788 78.0918 cv
132.049 76.582 133.249 75.3447 134.858 74.8828 cv
cp
139.993 75.3711 mo
139.825 75.2334 li
139.14 74.6611 137.315 73.1396 134.584 73.9219 cv
132.374 74.5547 130.884 76.3828 129.305 78.3174 cv
128.187 79.6904 127.02 81.0996 125.497 82.2852 cv
125.395 82.2598 125.286 82.2578 125.184 82.3008 cv
125.175 82.3047 125.169 82.3125 125.16 82.3164 cv
117.735 81.252 110.3 81.2646 106.15 81.7656 cv
104.27 81.9912 102.607 82.2314 100.707 82.6367 cv
100.272 81.9219 99.8525 81.2656 99.459 80.708 cv
96.5088 76.5166 92.877 75.9102 88.3652 78.834 cv
88.3057 78.8008 88.249 78.7559 88.1895 78.7266 cv
88.0439 78.6533 87.8711 78.6572 87.7266 78.7344 cv
81.4858 82.1289 76.2871 87.4102 72.2754 94.4307 cv
70.1963 98.0684 69.1191 101.831 69.4644 104.249 cv
69.4761 104.33 69.5073 104.407 69.5552 104.473 cv
70.6875 106.03 72.5303 106.888 74.7432 106.888 cv
77.7495 106.888 81.084 105.37 83.6621 102.828 cv
84.2773 102.221 84.8398 101.626 85.3838 101.036 cv
88.4336 99.4111 93.1943 97.5547 96.1855 97.1074 cv
97.377 99.2744 98.3281 101.212 98.4297 101.94 cv
98.4844 102.334 98.5293 102.712 98.5742 103.085 cv
98.8516 105.42 99.1143 107.625 101.595 111.793 cv
101.686 111.946 101.85 112.037 102.024 112.037 cv
102.05 112.037 102.075 112.035 102.101 112.031 cv
107.637 111.173 122.089 104.541 125.129 99.1787 cv
125.198 99.0566 125.213 98.9131 125.171 98.7803 cv
125.13 98.6455 li
124.858 97.7451 124.031 95.0059 121.257 94.0557 cv
119.083 93.3105 116.45 94.0674 113.663 94.8691 cv
111.731 95.4258 109.736 96 107.785 96.1104 cv
107.552 95.6699 107.135 94.832 106.635 93.8242 cv
106.386 93.3223 106.112 92.7734 105.823 92.1943 cv
114.022 90.3691 118.975 91.1094 121.727 92.0977 cv
121.824 92.2383 li
122.982 93.9072 124.568 96.1924 128.674 98.1777 cv
128.743 98.2109 128.817 98.2275 128.892 98.2275 cv
129.002 98.2275 129.111 98.1914 129.201 98.1201 cv
131.421 96.3682 140.179 80.5498 140.188 75.7686 cv
140.188 75.6133 140.117 75.4658 139.993 75.3711 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
55.2197 55.2314 mo
55.6299 53.8115 56.4897 52.3916 57.4302 51.332 cv
57.54 51.4316 li
58.96 51.5918 62.7798 52.1221 64.79 50.8418 cv
64.8701 50.8516 li
64.8301 51.2021 64.6899 51.6016 64.4399 52.0615 cv
63.98 52.9316 62.9502 54.5117 63.3701 57.8018 cv
63.4502 58.3916 63.3599 58.8916 63.1602 59.292 cv
62.21 56.4219 57.21 55.1416 55.2998 55.252 cv
55.2197 55.2314 li
cp
f
64.79 50.8418 mo
62.7798 52.1221 58.96 51.5918 57.54 51.4316 cv
57.4302 51.332 li
57.8799 50.8213 58.3501 50.3916 58.79 50.0918 cv
60.9502 48.6318 65.2397 48.3213 64.8701 50.8516 cv
64.79 50.8418 li
cp
0 0 0 0 cmyk
f
55.2998 55.252 mo
57.21 55.1416 62.21 56.4219 63.1602 59.292 cv
62.25 61.1221 58.9199 61.1914 56.8799 60.0918 cv
54.9199 59.0518 54.6602 57.1416 55.2197 55.2314 cv
55.2998 55.252 li
cp
0 .919585 .825986 0 cmyk
f
63.894 52.0156 mo
63.3979 52.9258 62.4795 54.6182 62.8726 57.7979 cv
61.207 55.7773 57.7769 54.8828 55.916 54.7646 cv
56.311 53.7324 56.9185 52.7441 57.585 51.9385 cv
57.6846 51.9502 li
58.4111 52.0371 59.5835 52.1768 60.8413 52.1768 cv
61.9224 52.1768 63.0625 52.0664 64.0391 51.7363 cv
64.0239 51.7676 64.0103 51.8018 63.9946 51.8311 cv
63.894 52.0156 li
cp
59.8926 60.3145 mo
59.8921 60.3145 li
58.9106 60.3145 57.8975 60.0742 57.1118 59.6553 cv
56.0811 59.1055 55.5278 58.251 55.4678 57.1143 cv
55.4443 56.6719 55.5132 56.2109 55.6182 55.7471 cv
57.5498 55.7676 61.6357 56.9883 62.5996 59.2451 cv
62.5596 59.3057 62.5249 59.3691 62.4761 59.4248 cv
61.9785 59.9902 61.0371 60.3145 59.8926 60.3145 cv
cp
59.0737 50.5107 mo
59.9893 49.8906 61.3887 49.4736 62.5557 49.4736 cv
63.415 49.4736 64.0415 49.6963 64.2744 50.084 cv
64.3467 50.2041 64.3813 50.3418 64.3901 50.4893 cv
62.8052 51.3906 60.0615 51.207 58.4292 51.0293 cv
58.6489 50.8281 58.8662 50.6514 59.0737 50.5107 cv
cp
65.1313 49.5693 mo
64.7075 48.8633 63.7925 48.4736 62.5557 48.4736 cv
61.1841 48.4736 59.5972 48.9482 58.5132 49.6826 cv
56.7617 50.8691 54.314 54.2168 54.4692 57.167 cv
54.5479 58.6563 55.2988 59.8223 56.6411 60.5381 cv
57.5669 61.0313 58.752 61.3145 59.8921 61.3145 cv
59.8926 61.3145 li
61.3457 61.3145 62.5298 60.8779 63.2271 60.085 cv
63.3774 59.9141 63.4971 59.7246 63.5972 59.5254 cv
63.6079 59.5059 63.6133 59.4854 63.6216 59.4648 cv
63.8604 58.96 63.9531 58.3779 63.8706 57.7363 cv
63.4956 54.834 64.2949 53.3701 64.772 52.4951 cv
64.8774 52.3008 li
65.4678 51.1904 65.5532 50.2715 65.1313 49.5693 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
21.9683 99.3809 mo
21.5059 100.621 20.999 101.754 20.186 101.967 cv
18.9487 102.306 17.5723 102.337 16.5723 100.685 cv
14.7798 100.458 10.3218 97.3682 10.1074 94.4023 cv
9.89941 91.4424 13.5615 87.1182 17.311 84.5635 cv
17.417 84.4434 li
19.2344 85.9453 22.3442 87.5029 23.3042 87.666 cv
23.396 88.0254 li
24.8818 89.876 26.7183 92.7266 26.2627 94.9092 cv
25.8081 97.0918 24.8516 100.216 22.5039 99.4277 cv
21.9683 99.3809 li
cp
0 .167361 .439734 0 cmyk
f
28.1079 79.9736 mo
27.5024 81.7012 26.0415 83.9102 23.3042 87.666 cv
22.3442 87.5029 19.2344 85.9453 17.417 84.4434 cv
17.228 84.2891 17.0527 84.1377 16.9053 83.9873 cv
18.1934 80.168 21.2197 75.5938 22.4907 73.9688 cv
24.4385 71.4619 33.7334 70.5869 36.9248 70.2939 cv
37.0806 70.2891 li
37.1646 73.1836 37.7437 76.2139 38.5791 78.375 cv
38.3979 78.4414 li
36.0044 78.6689 30.1079 79.6943 28.1216 79.9746 cv
28.1079 79.9736 li
cp
.433509 .775906 .674159 .526574 cmyk
f
35.6001 78.7998 mo
34.1216 76.4893 33.1328 73.3281 33.104 70.6914 cv
34.6597 70.499 36.0342 70.375 36.9248 70.2939 cv
37.0806 70.2891 li
37.1646 73.1836 37.7437 76.2139 38.5791 78.375 cv
38.3979 78.4414 li
37.708 78.5068 36.7148 78.6387 35.6001 78.7998 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
39.2012 79.7207 mo
38.9839 79.3271 38.7695 78.874 38.5791 78.375 cv
37.7437 76.2139 37.1646 73.1836 37.0806 70.2891 cv
37.0591 69.4521 37.0786 68.6309 37.1396 67.8408 cv
42.4194 67.2041 52.4312 67.3916 53.9526 71.6182 cv
55.6436 76.3213 45.2236 78.7451 39.2012 79.7207 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
10.6074 94.3711 mo
10.4126 91.6494 13.8999 87.5498 17.4399 85.0918 cv
19.1509 86.4072 21.6914 87.7295 22.9092 88.083 cv
22.9199 88.1729 22.9458 88.2607 23.0068 88.3359 cv
24.2261 89.8623 26.2061 92.7344 25.7729 94.8076 cv
25.3047 97.0479 24.6533 98.4209 23.8525 98.8799 cv
23.502 99.0791 23.1123 99.1035 22.6611 98.9512 cv
22.6577 98.9512 22.6553 98.9512 22.6523 98.9502 cv
22.6582 98.9346 22.6631 98.918 22.6699 98.9023 cv
22.856 98.3799 23.0405 97.8555 23.2466 97.3916 cv
23.3579 97.1387 23.2432 96.8447 22.9902 96.7324 cv
22.7388 96.6211 22.4443 96.7383 22.3311 96.9873 cv
22.1162 97.4736 21.9224 98.0195 21.7271 98.5684 cv
21.2729 99.8477 20.7554 101.296 20.0518 101.487 cv
18.6011 101.879 17.688 101.563 16.9995 100.43 cv
16.9209 100.301 16.7861 100.214 16.6357 100.194 cv
15.0498 99.9902 10.8003 97.0439 10.6074 94.3711 cv
cp
22.8838 74.2715 mo
24.0771 72.7412 28.6924 71.584 36.605 70.8262 cv
36.7231 73.3467 37.2012 75.9336 37.9199 77.9902 cv
36.1558 78.1836 33.1851 78.6641 30.7476 79.0586 cv
30.0024 79.1797 29.3369 79.2861 28.7886 79.3721 cv
29.0449 78.2334 28.9463 77.2051 28.5566 76.0146 cv
28.4707 75.7529 28.1885 75.6094 27.9253 75.6953 cv
27.6665 75.7842 27.5215 76.0635 27.6064 76.3262 cv
28.4829 79.0039 27.8521 80.5469 23.0947 87.0977 cv
21.915 86.7256 19.0303 85.2178 17.4863 83.8379 cv
18.7954 80.1797 21.6641 75.8428 22.8838 74.2715 cv
cp
37.6089 68.2891 mo
43.5864 67.6396 52.2222 68.2832 53.4844 71.7861 cv
53.8638 72.8408 53.5352 73.8096 52.4785 74.748 cv
49.79 77.1367 43.3291 78.5254 39.4761 79.168 cv
38.1772 76.5811 37.3857 71.9766 37.6089 68.2891 cv
cp
16.2686 101.143 mo
17.6406 103.174 19.6411 102.634 20.312 102.453 cv
21.2734 102.192 21.8364 101.107 22.3101 99.8809 cv
22.3208 99.8848 22.3286 99.8955 22.3403 99.8994 cv
23.0679 100.145 23.7446 100.094 24.3486 99.7471 cv
25.4292 99.126 26.2163 97.5801 26.751 95.0127 cv
27.2388 92.6846 25.4478 89.8047 23.8374 87.7754 cv
26.3066 84.3799 27.7734 82.2041 28.4585 80.4355 cv
29.0679 80.3428 29.9209 80.2041 30.9082 80.0459 cv
33.3242 79.6543 36.5928 79.127 38.2861 78.9561 cv
38.4385 79.3135 38.5962 79.6572 38.7646 79.9609 cv
38.8672 80.1465 39.0737 80.2461 39.2817 80.2119 cv
44.0522 79.4404 50.3286 77.9961 53.1426 75.4951 cv
54.8584 73.9717 54.7866 72.4531 54.4248 71.4473 cv
52.6685 66.5703 41.3081 66.8311 37.0796 67.3438 cv
36.9756 67.3564 36.8818 67.4004 36.8076 67.4658 cv
36.7139 67.5498 36.6528 67.667 36.6416 67.7988 cv
36.5874 68.4492 36.5752 69.1318 36.5806 69.8223 cv
31.4897 70.3057 24.8066 71.1816 22.4902 73.2402 cv
22.3394 73.374 22.2065 73.5137 22.0947 73.6582 cv
21.0703 74.9766 17.8315 79.6748 16.4321 83.8223 cv
16.3716 84.0039 16.4204 84.2051 16.5576 84.3389 cv
16.5884 84.3701 16.6235 84.3994 16.6558 84.4297 cv
15.9951 84.9014 15.334 85.416 14.6982 85.9814 cv
11.8203 88.5381 9.42529 91.8799 9.60938 94.4424 cv
9.84082 97.6611 14.2554 100.69 16.2686 101.143 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
234.292 69.9395 mo
229.076 70.9443 219.065 71.459 217.252 67.3516 cv
215.231 62.7793 225.458 59.627 231.401 58.2295 cv
231.646 58.6084 231.885 59.0508 232.118 59.5361 cv
233.099 61.6348 233.894 64.6123 234.181 67.4951 cv
234.268 68.3271 234.306 69.1455 234.292 69.9395 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
240.196 58.0752 mo
240.593 56.5566 241.638 54.5186 243.722 51.1963 cv
243.774 51.1846 243.821 51.1631 243.88 51.1592 cv
245.339 50.8496 248.681 52.0264 250.478 53.1816 cv
250.774 53.375 251.035 53.5713 251.233 53.749 cv
250.22 57.6504 247.757 62.5859 246.484 64.1973 cv
244.761 66.3838 237.827 67.1094 234.335 67.4717 cv
234.181 67.4951 li
233.894 64.6123 233.099 61.6348 232.118 59.5361 cv
232.29 59.4512 li
234.66 59.0605 238.171 58.3799 240.196 58.0752 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
240.452 44.8379 mo
240.737 43.5459 241.114 42.1035 242.769 42.209 cv
242.946 42.2168 243.127 42.249 243.327 42.29 cv
245.463 42.7646 249.078 43.5645 248.678 45.1445 cv
248.602 45.4189 248.47 45.6475 248.286 45.8389 cv
248.378 45.9346 li
248.566 46.9268 250.744 47.8613 252.403 47.1777 cv
252.897 47.4756 254.043 47.6592 255.032 47.168 cv
255.059 47.2227 li
254.464 50.3496 252.322 52.6729 250.498 53.1416 cv
250.478 53.1816 li
248.681 52.0264 245.339 50.8496 243.88 51.1592 cv
243.806 51.0391 li
241.331 49.1152 240.13 46.2539 240.452 44.8379 cv
cp
.0797436 .400244 .584497 0 cmyk
f
243.327 42.29 mo
243.127 42.249 242.946 42.2168 242.769 42.209 cv
242.702 42.0107 li
243.027 39.6123 243.713 38.0371 244.844 37.3848 cv
245.808 36.8252 247.606 37.0127 248.408 38.2334 cv
249.711 37.4092 256.468 38.3389 256.724 43.1191 cv
256.858 45.5098 256.02 46.6777 255.032 47.168 cv
254.043 47.6592 252.897 47.4756 252.403 47.1777 cv
250.744 47.8613 248.566 46.9268 248.378 45.9346 cv
248.286 45.8389 li
248.47 45.6475 248.602 45.4189 248.678 45.1445 cv
249.078 43.5645 245.463 42.7646 243.327 42.29 cv
cp
f
217.71 67.1484 mo
217.119 65.8115 217.739 64.5195 219.609 63.1973 cv
222.598 61.085 227.989 59.5635 231.164 58.8018 cv
232.642 61.2891 233.754 65.8262 233.791 69.5195 cv
227.874 70.5898 219.214 70.5547 217.71 67.1484 cv
cp
236.001 59.3057 mo
237.274 59.0762 238.532 58.8516 239.562 58.6816 cv
239.354 60.0859 239.705 61.1494 240.289 62.584 cv
240.394 62.8398 240.685 62.9639 240.941 62.8584 cv
241.194 62.7549 241.319 62.4619 241.215 62.207 cv
240.64 60.7939 240.264 59.8428 240.684 58.2188 cv
240.688 58.2021 240.693 58.1855 240.697 58.168 cv
241.075 56.752 242.052 54.8252 244.04 51.6367 cv
245.476 51.375 249.165 52.748 250.672 53.9229 cv
249.605 57.7891 247.241 62.4385 246.093 63.8916 cv
244.552 65.8389 238.015 66.583 234.616 66.9424 cv
234.323 64.4307 233.665 61.8779 232.801 59.8711 cv
233.771 59.707 234.883 59.5068 236.001 59.3057 cv
cp
240.937 44.9473 mo
241.138 44.0547 241.382 43.208 241.903 42.8818 cv
242.222 42.6807 242.652 42.6455 243.286 42.7891 cv
244.784 43.125 247.574 43.752 248.131 44.6582 cv
248.206 44.7803 248.225 44.8916 248.193 45.0195 cv
248.113 45.333 247.908 45.5654 247.574 45.7266 cv
246.71 46.1387 245.188 45.9834 243.786 45.3398 cv
243.536 45.2246 243.24 45.335 243.124 45.5859 cv
243.009 45.8369 243.118 46.1338 243.37 46.249 cv
245.053 47.0205 246.871 47.1689 248.005 46.6289 cv
248.047 46.6074 248.081 46.5801 248.121 46.5586 cv
248.329 46.873 248.65 47.1611 249.086 47.3955 cv
249.86 47.8115 251.161 48.1279 252.375 47.7227 cv
252.862 47.9326 253.603 48.0459 254.366 47.9033 cv
253.659 50.3652 251.953 52.167 250.497 52.6123 cv
248.709 51.5488 245.783 50.4941 244.106 50.6318 cv
241.666 48.7373 240.683 46.0713 240.937 44.9473 cv
cp
245.093 37.8193 mo
245.799 37.4082 247.312 37.4717 247.983 38.5039 cv
248.133 38.7334 248.438 38.8008 248.67 38.6543 cv
249.204 38.3174 251.516 38.3369 253.538 39.3799 cv
254.704 39.9814 256.117 41.124 256.229 43.1484 cv
256.322 44.875 255.878 46.0801 254.968 46.6338 cv
254.094 47.1582 253.02 46.9648 252.664 46.75 cv
252.528 46.668 252.361 46.6563 252.216 46.7168 cv
251.323 47.083 250.238 46.8799 249.56 46.5156 cv
249.128 46.2822 248.93 46.0352 248.88 45.874 cv
249.004 45.6885 249.105 45.4883 249.162 45.2637 cv
249.262 44.876 249.199 44.4834 248.982 44.1338 cv
248.266 42.9658 245.981 42.3701 243.44 41.7979 cv
243.373 41.7832 243.312 41.7813 243.245 41.7695 cv
243.567 39.6787 244.175 38.335 245.093 37.8193 cv
cp
234.386 70.4277 mo
234.617 70.3799 234.788 70.1807 234.791 69.9424 cv
234.798 69.2959 234.764 68.6201 234.71 67.9385 cv
238.47 67.541 245.075 66.7949 246.878 64.5117 cv
248.137 62.917 250.65 57.9795 251.72 53.8701 cv
251.767 53.6914 251.711 53.502 251.574 53.376 cv
251.544 53.3486 251.505 53.3184 251.471 53.291 cv
253.146 52.4385 254.917 50.3398 255.506 47.4746 cv
256.384 46.9424 257.371 45.749 257.227 43.0938 cv
257.091 40.5967 255.395 39.2119 253.995 38.4912 cv
252.078 37.501 249.754 37.2549 248.563 37.6211 cv
247.544 36.4805 245.713 36.3018 244.59 36.9541 cv
244.511 37.002 244.431 37.0508 244.354 37.1055 cv
243.276 37.8682 242.584 39.3916 242.239 41.7314 cv
241.919 41.7754 241.626 41.874 241.369 42.0361 cv
241.339 42.0557 241.31 42.0752 241.279 42.0967 cv
240.415 42.708 240.153 43.8711 239.961 44.7275 cv
239.611 46.2764 240.752 49.0957 243.171 51.1406 cv
241.296 54.1514 240.261 56.123 239.8 57.6309 cv
238.702 57.8047 237.275 58.0605 235.823 58.3223 cv
234.607 58.541 233.392 58.7598 232.367 58.9297 cv
232.189 58.584 232.007 58.251 231.817 57.959 cv
231.702 57.7822 231.489 57.6963 231.284 57.7441 cv
227.394 58.6592 222.109 60.2061 219.032 62.3809 cv
216.185 64.3945 216.243 66.3047 216.795 67.5537 cv
218.89 72.2939 230.203 71.2354 234.386 70.4277 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
220.772 61.2373 mo
220.788 62.4551 220.474 63.8252 220.169 64.9873 cv
219.237 63.9658 216.794 61.1348 214.98 59.21 cv
215.154 59.0527 li
215.626 58.5205 218.026 57.2627 219.687 58.5322 cv
220.479 59.1279 220.765 60.1143 220.772 61.2373 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
211.409 67.9629 mo
211.46 68.1035 li
206.71 70.0234 203.183 71.9424 201.677 73.5801 cv
201.581 73.6758 201.503 73.7822 201.421 73.875 cv
201.398 73.8516 li
201.733 70.7861 205.543 67.5576 208.509 64.8799 cv
208.679 64.7324 li
209.526 65.6748 210.384 66.6445 211.409 67.9629 cv
cp
.826932 .410346 .420874 .105837 cmyk
f
201.677 73.5801 mo
203.183 71.9424 206.71 70.0234 211.46 68.1035 cv
214.048 67.0459 216.995 65.9961 220.169 64.9873 cv
214.463 69.0713 210.161 71.6895 207.669 75.4199 cv
207.886 75.5664 li
208.22 77.4043 209.446 79.8223 211.286 82.5742 cv
211.164 82.6572 li
209.252 83.6279 206.132 83.1172 204.673 80.2393 cv
201.171 80.4541 198.856 77.0352 201.421 73.875 cv
201.503 73.7822 201.581 73.6758 201.677 73.5801 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
220.786 61.2334 mo
225.583 63.1777 242.465 75.249 249.76 81.7051 cv
249.332 86.6201 238.185 101.661 231.505 105.492 cv
224.118 98.2891 215.845 89.3984 211.286 82.5742 cv
209.446 79.8223 208.22 77.4043 207.886 75.5664 cv
207.669 75.4199 li
210.161 71.6895 214.463 69.0713 220.169 64.9873 cv
220.474 63.8252 220.788 62.4551 220.772 61.2373 cv
220.786 61.2334 li
cp
.74789 .241123 .31931 .00552377 cmyk
f
230.794 67.3184 mo
233.049 68.8545 235.452 70.5576 237.818 72.2881 cv
235.239 79.54 226.054 89.3428 219.433 92.8887 cv
217.46 90.6436 215.618 88.4316 214.005 86.3418 cv
218.961 82.8232 228.38 73.8906 230.794 67.3184 cv
cp
0 0 0 0 cmyk
f
213.108 57.4004 mo
213.464 57.6445 214.153 58.334 214.98 59.21 cv
216.794 61.1348 219.237 63.9658 220.169 64.9873 cv
216.995 65.9961 214.048 67.0459 211.46 68.1035 cv
211.409 67.9629 li
210.384 66.6445 209.526 65.6748 208.679 64.7324 cv
208.132 64.1162 207.603 63.5107 207.039 62.8418 cv
209.265 60.7588 210.406 59.3818 213.108 57.4004 cv
cp
.0797436 .400244 .584497 0 cmyk
f
219.388 58.9277 mo
220.578 59.8311 220.368 61.9561 219.913 63.9473 cv
219.704 63.71 219.468 63.4443 219.214 63.1563 cv
217.938 61.7168 216.711 60.3369 215.69 59.2373 cv
216.316 58.7725 218.137 57.9775 219.388 58.9277 cv
cp
249.232 81.9023 mo
248.503 86.7002 238.089 100.859 231.579 104.866 cv
226.119 99.5225 209.728 82.958 208.375 75.4766 cv
208.366 75.4287 208.345 75.3887 208.323 75.3467 cv
210.351 72.5117 213.499 70.292 217.688 67.3516 cv
218.572 66.7324 219.498 66.084 220.464 65.3926 cv
220.468 65.3887 220.47 65.3848 220.474 65.3818 cv
220.487 65.3711 220.497 65.3555 220.509 65.3447 cv
220.543 65.3115 220.575 65.2773 220.597 65.2373 cv
220.603 65.2295 220.61 65.2256 220.614 65.2178 cv
220.632 65.1846 220.646 65.1494 220.655 65.1123 cv
220.929 64.0752 221.165 63 221.245 61.9912 cv
226.755 64.6172 242.409 75.9131 249.232 81.9023 cv
cp
207.892 82.4111 mo
207.051 82.1553 205.888 81.5303 205.122 80.0098 cv
205.032 79.8311 204.843 79.7227 204.644 79.7354 cv
203.081 79.8369 201.694 79.1123 201.109 77.8926 cv
200.519 76.6572 200.862 75.208 202.048 73.9141 cv
203.938 71.8535 209.479 69.1533 217.144 66.5137 cv
217.134 66.5205 217.124 66.5264 217.114 66.5342 cv
211.407 70.5381 207.282 73.4297 205.575 78.5381 cv
205.487 78.7988 205.628 79.083 205.89 79.1709 cv
206.151 79.2578 206.438 79.123 206.522 78.8555 cv
206.808 78.0029 207.167 77.2217 207.59 76.4834 cv
208.074 78.1621 209.136 80.1748 210.557 82.3564 cv
209.745 82.6484 208.784 82.6836 207.892 82.4111 cv
cp
208.214 65.8193 mo
208.638 65.4365 li
209.28 66.1611 209.95 66.9355 210.698 67.8682 cv
206.995 69.4023 204.165 70.8926 202.431 72.2334 cv
203.536 70.0342 206.079 67.7402 208.214 65.8193 cv
cp
209.083 64.4307 mo
208.63 63.9209 208.186 63.4189 207.728 62.8789 cv
208.204 62.4258 208.634 62.0059 209.046 61.6016 cv
210.282 60.3916 211.359 59.3369 213.101 58.0293 cv
214.188 58.9873 216.828 61.9707 218.466 63.8203 cv
218.771 64.166 219.048 64.4766 219.286 64.7461 cv
216.483 65.6543 213.925 66.5703 211.665 67.4746 cv
210.704 66.2598 209.88 65.3262 209.083 64.4307 cv
cp
215.006 58.5078 mo
214.293 57.7607 213.729 57.2188 213.398 56.9873 cv
213.222 56.8643 212.989 56.8682 212.816 56.9951 cv
210.834 58.4521 209.681 59.5811 208.346 60.8867 cv
207.843 61.3809 207.312 61.8984 206.699 62.4717 cv
206.508 62.6543 206.487 62.9521 206.657 63.1572 cv
207.106 63.7002 207.54 64.1953 207.977 64.6875 cv
207.545 65.0762 li
204.608 67.7178 201.288 70.7119 200.908 73.7305 cv
199.793 75.208 199.521 76.8867 200.208 78.3242 cv
200.927 79.8271 202.542 80.7529 204.382 80.7441 cv
205.931 83.4707 208.974 84.1396 211.132 83.2207 cv
216.83 91.5967 227.28 102.07 231.155 105.851 cv
231.315 106.007 231.56 106.038 231.753 105.926 cv
237.161 102.82 245.11 92.8662 248.564 86.2939 cv
249.546 84.4258 250.164 82.832 250.261 81.7451 cv
250.273 81.5869 250.211 81.4326 250.092 81.3271 cv
243.177 75.2061 226.534 63.2236 221.263 60.8994 cv
221.2 59.7656 220.849 58.7813 219.991 58.1299 cv
218.229 56.793 215.876 57.8154 215.006 58.5078 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
233.594 25.209 mo
235.819 31.6865 238.701 41.1553 237.95 46.5479 cv
236.977 53.501 231.835 58.7783 227.566 60.9561 cv
223.405 63.084 209.091 68.2813 195.832 62.3262 cv
194.271 65.084 188.464 66.5459 183.808 63.0674 cv
182.129 61.8086 181.159 60.3193 180.716 58.8262 cv
179.968 56.252 180.826 53.666 182.468 52.1943 cv
185.063 49.8809 188.854 50.5078 192.408 54.1797 cv
193.947 50.8809 195.758 46.8359 195.47 41.8623 cv
195.4 41.7393 li
200.916 38.6377 205.895 33.1279 207.383 30.0947 cv
207.444 30.1104 li
207.004 31.9814 206.908 34.1885 207.534 36.6445 cv
213.56 35.2021 224.16 25.7803 225.916 16.3652 cv
226.1 16.4023 li
228.617 17.0703 230.719 18.6172 231.791 20.1367 cv
232.231 21.3652 232.877 23.1279 233.594 25.209 cv
cp
0 .167361 .439734 0 cmyk
f
184.837 56.8828 mo
183.775 58.834 185.472 61.6025 188.803 61.8389 cv
191.37 62.0205 192.973 60.2939 191.22 57.9531 cv
189.025 55.0225 185.976 54.79 184.837 56.8828 cv
cp
.0797436 .400244 .584497 0 cmyk
f
233.594 25.209 mo
235.819 31.6865 238.701 41.1553 237.95 46.5479 cv
236.977 53.501 231.835 58.7783 227.566 60.9561 cv
227.04 61.2236 226.352 61.5449 225.515 61.8799 cv
230.021 58.8623 234.413 54.3428 236.367 47.3184 cv
237.791 42.209 234.96 33.0137 229.149 17.7383 cv
230.28 18.4355 231.197 19.2871 231.791 20.1367 cv
232.231 21.3652 232.877 23.1279 233.594 25.209 cv
cp
0 0 0 0 cmyk
f
226.308 16.4697 mo
226.735 28.1543 213.791 38.3721 205.511 40.4902 cv
205.209 39.251 204.958 38.1221 205.109 36.6719 cv
203.368 39.3037 199.283 43.2275 195.326 45.4814 cv
195.482 44.3281 195.542 43.1299 195.47 41.8623 cv
195.4 41.7393 li
200.916 38.6377 205.895 33.1279 207.383 30.0947 cv
207.444 30.1104 li
207.004 31.9814 206.908 34.1885 207.534 36.6445 cv
213.56 35.2021 224.16 25.7803 225.916 16.3652 cv
226.1 16.4023 li
226.165 16.4258 226.236 16.4375 226.308 16.4697 cv
cp
.0797436 .400244 .584497 0 cmyk
f
225.809 7.89844 mo
233.714 10.9648 235.305 20.5723 233.838 25.1182 cv
233.594 25.209 li
232.877 23.1279 232.231 21.3652 231.791 20.1367 cv
230.719 18.6172 228.617 17.0703 226.1 16.4023 cv
225.916 16.3652 li
224.16 25.7803 213.56 35.2021 207.534 36.6445 cv
206.908 34.1885 207.004 31.9814 207.444 30.1104 cv
207.383 30.0947 li
205.895 33.1279 200.916 38.6377 195.4 41.7393 cv
195.47 41.8623 li
195.758 46.8359 193.947 50.8809 192.408 54.1797 cv
188.854 50.5078 185.063 49.8809 182.468 52.1943 cv
180.826 53.666 179.968 56.252 180.716 58.8262 cv
180.536 58.8887 li
177.361 58.3057 173.317 57.0137 169.922 54.1836 cv
170.979 52.3105 172.488 50.5039 175.225 48.4004 cv
171.9 47.4678 166.549 44.8652 163.537 42.2646 cv
165.424 38.9023 168.5 34.8525 174.105 30.3086 cv
171.017 30.502 166.629 29.6572 163.705 28.1191 cv
165.077 24.8633 169.842 20.292 176.012 17.834 cv
173.565 17.3193 170.43 15.3281 168.521 13.6025 cv
175.743 7.20117 192.299 2.00781 203.186 .792969 cv
215.037 -.529297 223.987 2.81152 225.809 7.89844 cv
cp
.373144 .782101 .665248 .350225 cmyk
f
215.387 2.89355 mo
218.881 3.69141 221.107 5.01367 222.505 6.32715 cv
220.757 13.6299 199.075 18.2676 188.771 21.6279 cv
180.229 24.4189 174.759 27.1904 171.931 30.2852 cv
170.726 30.207 169.433 30.0156 168.176 29.708 cv
176.385 17.2852 204.491 10.6221 210.91 7.08789 cv
213.817 5.49023 215.108 4.09375 215.387 2.89355 cv
cp
.341833 .684718 .553277 .151247 cmyk
f
225.809 7.89844 mo
225.26 6.36621 224.071 5 222.349 3.8623 cv
220.485 2.63379 218.014 1.69043 215.054 1.11719 cv
211.646 .456055 207.623 .301758 203.186 .792969 cv
192.299 2.00781 175.743 7.20117 168.521 13.6025 cv
168.595 13.668 168.675 13.7412 168.758 13.8018 cv
177.735 8.11523 196.646 1.88965 208.79 2.14063 cv
211.375 2.19336 213.555 2.46777 215.387 2.89355 cv
218.881 3.69141 221.107 5.01367 222.505 6.32715 cv
223.703 7.45605 224.304 8.57715 224.592 9.33691 cv
228.665 10.4277 233.333 14.7607 234.072 24.2256 cv
235.084 19.417 233.228 10.7725 225.809 7.89844 cv
cp
0 0 0 0 cmyk
f
232.198 19.8496 mo
230.98 18.1299 228.807 16.6777 226.479 16.001 cv
226.566 15.458 226.626 14.916 226.651 14.3779 cv
226.663 14.1025 226.45 13.8691 226.175 13.8555 cv
225.897 13.8438 225.665 14.0566 225.651 14.333 cv
225.229 23.5176 214.512 34.0566 207.903 36.0283 cv
206.972 31.7676 208.251 28.4238 209.519 26.3408 cv
209.662 26.1045 209.587 25.7969 209.352 25.6533 cv
209.115 25.5098 208.808 25.585 208.664 25.8213 cv
208.125 26.707 207.467 28.0527 207.038 29.7334 cv
206.996 29.7744 206.957 29.8203 206.93 29.877 cv
205.056 33.7051 198.14 40.6836 191.757 42.8379 cv
190.647 38.2813 192.229 32.0498 195.28 29.2295 cv
195.482 29.042 195.496 28.7256 195.308 28.5234 cv
195.121 28.3203 194.807 28.3086 194.602 28.4951 cv
191.196 31.6436 189.48 38.708 190.931 43.6152 cv
190.968 43.7432 191.056 43.8506 191.173 43.9131 cv
191.289 43.9775 191.427 43.9912 191.555 43.9521 cv
192.408 43.6953 193.257 43.3643 194.096 42.9736 cv
194.394 42.835 194.687 42.6816 194.979 42.5293 cv
195.071 46.8838 193.544 50.5371 192.252 53.3262 cv
188.712 49.9629 184.877 49.376 182.135 51.8223 cv
180.678 53.1201 179.861 55.1396 179.95 57.2256 cv
179.966 57.583 180.016 57.9346 180.082 58.2842 cv
176.323 57.5127 173.124 56.1006 170.569 54.0654 cv
171.698 52.1924 173.246 50.5518 175.53 48.7969 cv
175.682 48.6807 175.752 48.4912 175.717 48.3047 cv
175.68 48.1191 175.543 47.9688 175.36 47.918 cv
172.26 47.0527 167.202 44.6338 164.178 42.1504 cv
166.484 38.1563 169.837 34.4053 174.413 30.6953 cv
174.583 30.5576 174.644 30.3271 174.564 30.124 cv
174.484 29.9209 174.284 29.793 174.067 29.8066 cv
171.084 29.9971 167.09 29.1982 164.357 27.8906 cv
165.871 24.8643 170.37 20.6191 176.19 18.2959 cv
176.418 18.2256 176.522 18.0078 176.504 17.7891 cv
176.485 17.5693 176.324 17.3877 176.107 17.3418 cv
173.956 16.8906 171.148 15.1836 169.278 13.6035 cv
176.548 7.5127 192.411 2.49316 203.239 1.28809 cv
215.658 -.0966797 223.756 3.64844 225.334 8.06543 cv
225.384 8.20117 225.489 8.30957 225.625 8.3623 cv
232.632 11.0791 234.43 19.2197 233.629 23.8057 cv
233.256 22.7422 232.91 21.7773 232.623 20.9775 cv
232.261 19.9707 li
232.245 19.9277 232.225 19.8867 232.198 19.8496 cv
cp
237.452 46.4834 mo
236.531 53.0762 231.706 58.2803 227.335 60.5127 cv
221.778 63.3525 208.09 67.2842 196.04 61.8711 cv
195.806 61.7676 195.528 61.8555 195.401 62.0811 cv
194.772 63.1836 193.36 64.0605 191.62 64.4219 cv
189.06 64.957 186.32 64.3154 184.11 62.6621 cv
182.161 61.2051 181.038 59.2588 180.949 57.1826 cv
180.872 55.3945 181.564 53.6689 182.8 52.5684 cv
185.239 50.4014 188.778 51.1504 192.045 54.5293 cv
192.159 54.6475 192.324 54.7021 192.486 54.6748 cv
192.646 54.6494 192.787 54.543 192.856 54.3936 cv
194.286 51.3359 196.231 47.1533 195.974 41.9814 cv
200.524 39.3496 204.534 35.2344 206.648 32.2402 cv
206.553 33.6162 206.631 35.125 207.051 36.7676 cv
207.118 37.0322 207.385 37.1934 207.65 37.1309 cv
208.435 36.9434 209.276 36.6377 210.152 36.2295 cv
216.424 33.3047 224.465 25.083 226.271 16.9834 cv
228.71 17.709 230.476 19.1787 231.343 20.373 cv
231.682 21.3164 li
232.275 22.9639 233.104 25.2734 233.952 27.8672 cv
233.446 27.457 232.975 27.4346 232.651 27.5215 cv
231.231 27.915 230.324 30.5879 229.412 34.4922 cv
229.184 35.4707 228.881 35.7891 228.741 35.8125 cv
228.61 35.8408 228.318 35.6729 227.985 35.2402 cv
227.783 34.9766 227.407 34.9258 227.143 35.1299 cv
226.882 35.3311 226.831 35.708 227.033 35.9707 cv
227.816 36.9902 228.532 37.085 228.995 36.9844 cv
229.097 36.9629 229.194 36.9307 229.289 36.8867 cv
229.883 36.6094 230.316 35.8984 230.581 34.7666 cv
231.761 29.7148 232.581 28.7773 232.965 28.6807 cv
233.07 28.6514 233.225 28.7939 233.309 28.8809 cv
233.537 29.1221 233.916 29.1309 234.156 28.9043 cv
234.196 28.8672 234.218 28.8223 234.245 28.7783 cv
236.169 34.7881 238.067 42.0781 237.452 46.4834 cv
cp
226.195 7.5127 mo
224.006 1.98145 214.581 -.982422 203.128 .293945 cv
191.932 1.54102 175.39 6.8418 168.184 13.2266 cv
168.078 13.3203 168.016 13.4561 168.016 13.5977 cv
168.015 13.7402 168.074 13.876 168.18 13.9717 cv
169.748 15.3916 172.237 17.0742 174.532 17.9189 cv
174.477 17.9443 174.42 17.9707 174.365 17.9961 cv
168.688 20.6436 164.527 24.873 163.24 27.9258 cv
163.139 28.166 163.238 28.4434 163.469 28.5635 cv
165.941 29.8613 169.606 30.7412 172.688 30.8271 cv
168.436 34.4365 165.293 38.1084 163.102 42.0195 cv
162.985 42.2285 163.031 42.4883 163.211 42.6426 cv
166.021 45.0732 170.831 47.4893 174.169 48.5986 cv
172.041 50.334 170.578 52.0068 169.488 53.9365 cv
169.369 54.1475 169.417 54.4121 169.603 54.5664 cv
172.449 56.9453 176.077 58.5605 180.384 59.3701 cv
180.935 60.918 181.995 62.3301 183.512 63.4629 cv
185.952 65.2881 188.982 65.9941 191.824 65.4014 cv
193.646 65.0225 195.179 64.1221 196.022 62.957 cv
210.017 69.0137 224.309 63.0361 227.259 61.6602 cv
227.549 61.5244 227.729 61.4336 227.79 61.4043 cv
232.392 59.0537 237.471 53.5713 238.442 46.6221 cv
239.194 41.2441 236.407 31.9238 234.199 25.4541 cv
234.248 25.4023 234.288 25.3418 234.312 25.2686 cv
235.803 20.6475 234.344 10.8281 226.195 7.5127 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
185.771 55.3105 mo
184.467 55.8271 183.794 57.0811 184.073 58.2754 cv
184.135 58.5439 184.404 58.7119 184.673 58.6494 cv
184.943 58.5898 185.11 58.3184 185.047 58.0479 cv
184.879 57.332 185.342 56.5684 186.165 56.2295 cv
187.37 55.71 189.405 56.0576 191.18 58.7412 cv
191.319 58.9512 191.587 59.0225 191.809 58.9199 cv
191.83 58.9092 191.852 58.8975 191.873 58.8828 cv
192.104 58.7314 192.166 58.4209 192.015 58.1904 cv
189.899 54.9912 187.328 54.6396 185.771 55.3105 cv
cp
f
212.952 40.9756 mo
216.199 42.5313 217.82 42.9443 218.849 42.4648 cv
218.876 42.4521 218.903 42.4385 218.93 42.4248 cv
219.783 41.9736 219.997 40.998 220.157 39.9531 cv
220.208 39.625 219.981 39.3193 219.654 39.2695 cv
219.327 39.2188 219.021 39.4453 218.971 39.7715 cv
218.84 40.627 218.693 41.1924 218.37 41.3643 cv
217.476 41.7988 214.466 40.3711 213.469 39.8936 cv
207.847 37.2002 203.914 39.6738 202.256 42.6133 cv
202.092 42.9014 202.195 43.2676 202.483 43.4307 cv
202.772 43.5928 203.138 43.4912 203.301 43.2031 cv
204.706 40.7178 208.075 38.6396 212.952 40.9756 cv
cp
f
217.604 43.3242 mo
218.413 45.8555 217.546 48.3926 215.672 48.9902 cv
213.798 49.5869 211.623 48.0186 210.816 45.4854 cv
210.01 42.9531 210.876 40.415 212.751 39.8184 cv
215.05 41.2207 215.267 41.2998 216.771 41.624 cv
217.116 42.1172 217.404 42.6904 217.604 43.3242 cv
cp
f
214.534 43.2324 mo
214.64 44.3682 214.041 45.3535 213.199 45.4297 cv
212.358 45.5078 211.59 44.6484 211.485 43.5107 cv
211.383 42.374 211.98 41.3896 212.822 41.3125 cv
213.663 41.2344 214.431 42.0938 214.534 43.2324 cv
cp
0 0 0 0 cmyk
f
235.063 35.1592 mo
236.081 37.6143 235.714 40.0977 234.246 40.707 cv
232.778 41.3145 230.762 39.8154 229.744 37.3613 cv
229.567 36.9326 229.433 36.5039 229.338 36.083 cv
230.051 33.958 230.011 34.0664 230.562 31.8135 cv
232.03 31.2051 234.046 32.7021 235.063 35.1592 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
232.846 35.8389 mo
233.216 36.7295 232.994 37.668 232.354 37.9346 cv
231.711 38.2012 230.89 37.6924 230.521 36.8018 cv
230.151 35.9102 230.373 34.9717 231.016 34.7051 cv
231.657 34.4395 232.478 34.9473 232.846 35.8389 cv
cp
0 0 0 0 cmyk
f
226.828 46.1758 mo
227.133 44.9248 228.445 44.3184 228.642 45.3301 cv
228.837 46.3418 226.64 46.9531 226.828 46.1758 cv
cp
.0797436 .400244 .584497 0 cmyk
f
194.977 42.5322 mo
194.998 43.6699 194.915 44.7676 194.749 45.8057 cv
194.117 46.1338 193.492 46.4248 192.891 46.6504 cv
192.522 45.7188 192.395 44.6855 192.45 43.6445 cv
193.001 43.4541 193.558 43.2275 194.101 42.9746 cv
194.391 42.8389 194.682 42.6816 194.977 42.5322 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
179.95 57.2305 mo
179.963 57.5889 180.016 57.9395 180.078 58.2852 cv
176.318 57.5117 173.123 56.0996 170.574 54.0664 cv
171.7 52.1963 173.247 50.5469 175.532 48.7969 cv
175.679 48.6855 175.751 48.4863 175.72 48.3018 cv
175.681 48.1211 175.541 47.9648 175.363 47.917 cv
172.336 47.0771 167.442 44.7471 164.395 42.3291 cv
168.205 42.8574 172.298 42.4053 175.025 41.4648 cv
176.406 37.9189 177.953 36.0059 181.994 33.1504 cv
180.4 36.5205 180.674 38.5996 181.592 42.0332 cv
184.337 34.7178 189.591 30.8662 193.895 29.2344 cv
190.97 32.6396 189.591 39.0527 190.935 43.6123 cv
190.971 43.7393 191.057 43.8525 191.172 43.9102 cv
191.291 43.9756 191.43 43.9883 191.556 43.9521 cv
191.857 43.8662 192.151 43.7627 192.45 43.6445 cv
192.395 44.6855 192.522 45.7188 192.891 46.6504 cv
193.492 46.4248 194.117 46.1338 194.749 45.8057 cv
194.283 48.7363 193.203 51.2715 192.253 53.3262 cv
188.712 49.9678 184.871 49.375 182.138 51.8184 cv
180.681 53.1172 179.859 55.1426 179.95 57.2305 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
298.166 83.9121 mo
299.586 80.9316 300.825 77.752 301.516 74.7021 cv
301.535 74.6514 li
302.355 75.0313 302.905 75.5615 303.166 75.7715 cv
303.155 80.3418 294.535 96.0117 292.365 97.7314 cv
291.626 97.3721 290.976 97.0117 290.396 96.6416 cv
290.476 96.502 li
291.995 94.6416 295.426 89.6514 298.166 83.9121 cv
cp
.181369 .0870985 .113436 0 cmyk
f
297.945 83.8115 mo
295.006 82.502 293.506 79.3213 293.775 77.9316 cv
293.756 77.9121 li
295.105 76.292 296.396 74.9121 298.195 74.4014 cv
299.575 74.0117 300.695 74.252 301.535 74.6514 cv
301.516 74.7021 li
300.825 77.752 299.586 80.9316 298.166 83.9121 cv
297.945 83.8115 li
cp
f
288.886 82.8613 mo
290.396 86.5918 287.916 91.1016 285.516 91.6816 cv
284.166 91.1816 282.716 90.8818 281.245 90.7217 cv
281.266 90.5918 li
283.266 89.0117 283.686 84.1816 282.105 82.1816 cv
282.105 82.1416 li
284.275 82.2813 286.565 82.5215 288.886 82.8613 cv
cp
f
289.046 82.8818 mo
291.016 81.4121 292.405 79.542 293.756 77.9121 cv
293.775 77.9316 li
293.506 79.3213 295.006 82.502 297.945 83.8115 cv
298.166 83.9121 li
295.426 89.6514 291.995 94.6416 290.476 96.502 cv
290.396 96.6416 li
287.655 94.8916 286.485 93.0518 285.516 91.6816 cv
287.916 91.1016 290.396 86.5918 288.886 82.8613 cv
288.936 82.8613 288.995 82.8721 289.046 82.8818 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
262.396 101.872 mo
262.386 101.812 262.376 101.752 262.355 101.682 cv
262.525 101.642 li
265.205 102.691 269.705 100.512 271.155 96.6416 cv
271.155 96.6113 li
273.575 96.502 276.046 95.6914 278.346 95.0518 cv
278.386 95.2119 li
276.985 96.8613 277.355 100.142 279.586 103.062 cv
279.666 103.182 li
279.666 103.191 li
274.525 106.252 268.535 108.352 264.605 109.622 cv
264.476 109.682 li
262.705 106.202 262.735 104.321 262.396 101.872 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
279.666 103.182 mo
282.636 101.412 285.325 99.3213 287.176 96.8818 cv
287.285 96.8115 li
287.836 97.7314 288.065 98.6113 288.166 98.9316 cv
285.285 104.021 271.065 110.672 265.495 111.542 cv
265.096 110.872 264.756 110.252 264.476 109.682 cv
264.605 109.622 li
268.535 108.352 274.525 106.252 279.666 103.191 cv
279.666 103.182 li
cp
0 0 0 0 cmyk
f
287.285 96.8115 mo
287.176 96.8818 li
285.325 99.3213 282.636 101.412 279.666 103.182 cv
279.586 103.062 li
277.355 100.142 276.985 96.8613 278.386 95.2119 cv
278.346 95.0518 li
280.666 94.4014 282.806 93.9316 284.565 94.5313 cv
285.905 94.9814 286.745 95.9121 287.285 96.8115 cv
cp
f
259.916 96.5518 mo
259.846 96.4121 259.766 96.2715 259.676 96.1318 cv
259.726 96.1016 li
261.775 97.1221 266.735 94.4814 268.346 91.7217 cv
268.466 91.6621 li
268.506 91.7314 268.535 91.792 268.565 91.8516 cv
269.775 94.2617 270.705 96.1816 270.976 96.6221 cv
271.035 96.6221 271.096 96.6221 271.155 96.6113 cv
271.155 96.6416 li
269.705 100.512 265.205 102.691 262.525 101.642 cv
262.355 101.682 li
262.126 100.722 261.096 98.6719 259.916 96.5518 cv
cp
f
282.105 82.1816 mo
283.686 84.1816 283.266 89.0117 281.266 90.5918 cv
281.245 90.7217 li
275.646 90.1113 269.785 91.5713 268.565 91.8516 cv
268.535 91.792 268.506 91.7314 268.466 91.6621 cv
267.126 88.9922 265.455 85.752 263.945 83.2314 cv
264.046 83.1719 li
265.936 82.7617 267.605 82.5117 269.686 82.2617 cv
272.296 81.9414 276.846 81.792 282.105 82.1416 cv
282.105 82.1816 li
cp
.0797436 .400244 .584497 0 cmyk
f
263.945 83.2314 mo
265.455 85.752 267.126 88.9922 268.466 91.6621 cv
268.346 91.7217 li
266.735 94.4814 261.775 97.1221 259.726 96.1016 cv
259.676 96.1318 li
258.705 94.3818 257.655 92.6318 256.905 91.4316 cv
257.216 88.4922 254.936 81.4414 251.855 79.4121 cv
257.275 75.7617 260.455 78.0518 262.525 80.9922 cv
262.966 81.6221 263.445 82.3916 263.945 83.2314 cv
cp
0 .167361 .439734 0 cmyk
f
259.905 96.5615 mo
256.865 96.9316 251.796 98.8916 248.565 100.622 cv
251.405 97.542 253.436 94.6514 256.905 91.4316 cv
257.655 92.6318 258.705 94.3818 259.676 96.1318 cv
259.766 96.2715 259.846 96.4121 259.916 96.5518 cv
259.905 96.5615 li
cp
.498634 .76672 .682032 .673518 cmyk
f
251.855 79.4121 mo
254.936 81.4414 257.216 88.4922 256.905 91.4316 cv
253.436 94.6514 251.405 97.542 248.565 100.622 cv
248.016 101.231 247.426 101.842 246.785 102.472 cv
242.476 106.722 236.105 107.842 233.436 104.182 cv
233.105 101.842 234.186 98.1816 236.186 94.6816 cv
238.186 91.1816 242.855 83.8418 251.445 79.1719 cv
251.586 79.2422 251.716 79.3213 251.855 79.4121 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
256.905 91.4316 mo
257.216 88.4922 254.936 81.4414 251.855 79.4121 cv
253.516 78.292 254.976 77.7314 256.245 77.5918 cv
259.556 81.3115 259.825 87.8818 257.676 92.3613 cv
257.535 92.4521 li
257.306 92.082 257.096 91.7422 256.905 91.4316 cv
cp
.0797436 .400244 .584497 0 cmyk
f
243.376 104.981 mo
239.616 106.981 235.456 106.952 233.436 104.182 cv
233.105 101.842 234.186 98.1816 236.186 94.6816 cv
236.525 94.0918 236.936 93.3916 237.436 92.6113 cv
235.565 96.582 237.025 104.441 243.376 104.981 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
292.282 97.1279 mo
291.864 96.918 291.482 96.7031 291.119 96.4873 cv
293.854 93.0293 299.793 83.6982 301.855 75.4023 cv
302.185 75.6133 302.456 75.8311 302.656 75.999 cv
302.384 80.6465 294.576 94.7715 292.282 97.1279 cv
cp
286.295 91.916 mo
287.296 91.4287 288.248 90.418 288.927 89.0723 cv
289.895 87.1553 290.096 84.9824 289.514 83.1348 cv
291.079 81.9297 292.3 80.4863 293.375 79.1699 cv
293.776 80.8418 295.206 83.0039 297.5 84.1309 cv
294.997 89.2793 291.973 93.8145 290.276 95.9434 cv
288.208 94.5361 287.115 93.0898 286.295 91.916 cv
cp
268.836 91.2715 mo
267.595 88.8018 266.111 85.9258 264.725 83.5469 cv
266.45 83.1914 268.004 82.9668 269.745 82.7578 cv
271.946 82.4932 276.371 82.2734 281.798 82.6172 cv
283.109 84.4883 282.656 88.8447 280.967 90.1963 cv
278.001 89.917 274.037 90.0898 268.836 91.2715 cv
cp
270.526 96.8457 mo
269.762 98.5576 268.284 100.03 266.489 100.828 cv
265.111 101.44 263.746 101.564 262.73 101.178 cv
262.387 100.139 261.566 98.502 260.638 96.8066 cv
260.71 96.8105 260.774 96.8271 260.849 96.8271 cv
263.272 96.8271 266.729 94.7803 268.372 92.5762 cv
268.679 93.1895 268.964 93.7637 269.215 94.2695 cv
269.884 95.6162 270.327 96.5078 270.526 96.8457 cv
cp
277.416 95.8301 mo
277.426 95.8271 277.436 95.8242 277.445 95.8223 cv
276.622 97.7383 277.188 100.537 278.963 103.025 cv
275.253 105.169 270.53 107.169 264.729 109.056 cv
263.477 106.468 263.262 104.809 263.043 102.967 cv
263.016 102.741 262.984 102.506 262.955 102.273 cv
263.294 102.348 263.646 102.398 264.018 102.398 cv
264.927 102.398 265.917 102.178 266.896 101.742 cv
268.974 100.817 270.677 99.084 271.517 97.0762 cv
273.511 96.9336 275.493 96.3838 277.416 95.8301 cv
cp
284.408 95.001 mo
285.446 95.3574 286.15 96.04 286.644 96.752 cv
285.057 98.7891 282.798 100.707 279.824 102.521 cv
277.983 99.9805 277.514 97.0166 278.763 95.5332 cv
278.787 95.5039 278.799 95.4697 278.815 95.4375 cv
280.918 94.8643 282.869 94.4756 284.408 95.001 cv
cp
265.756 110.986 mo
265.544 110.622 265.365 110.289 265.188 109.957 cv
276.161 106.373 283.365 102.35 287.177 97.6797 cv
287.399 98.1582 287.543 98.5918 287.627 98.8672 cv
284.603 103.776 271.174 109.978 265.756 110.986 cv
cp
250.61 99.0664 mo
250.996 98.6172 251.375 98.1709 251.748 97.7295 cv
253.245 95.96 254.809 94.1309 256.808 92.2207 cv
257.553 93.4258 258.379 94.8203 259.146 96.1826 cv
256.664 96.6172 253.365 97.8086 250.61 99.0664 cv
cp
246.437 102.115 mo
244.076 104.442 240.927 105.888 238.219 105.888 cv
236.913 105.888 235.118 105.555 233.914 103.984 cv
233.653 101.77 234.682 98.3174 236.619 94.9268 cv
240.485 88.1602 245.472 83.0527 251.441 79.7441 cv
251.474 79.7637 251.505 79.792 251.537 79.8125 cv
251.557 79.8281 251.575 79.8438 251.598 79.8555 cv
254.341 81.6914 256.619 88.1914 256.423 91.1943 cv
254.226 93.2529 252.578 95.2002 250.985 97.084 cv
249.614 98.7041 248.197 100.38 246.437 102.115 cv
cp
262.117 81.2842 mo
263.818 83.6982 266.113 88.0918 267.858 91.5537 cv
266.313 94.0918 261.797 96.459 260.007 95.6719 cv
259.012 93.9141 258.006 92.249 257.41 91.2949 cv
257.606 88.4199 255.68 82.0361 252.724 79.4648 cv
257.785 76.3818 260.502 78.9902 262.117 81.2842 cv
cp
288.034 88.6221 mo
287.377 89.9229 286.426 90.873 285.524 91.1514 cv
284.639 90.834 283.543 90.541 282.2 90.3418 cv
283.653 88.4727 284.02 84.916 282.992 82.7012 cv
284.754 82.8369 286.608 83.0352 288.516 83.3096 cv
289.074 84.9355 288.908 86.8896 288.034 88.6221 cv
cp
298.334 74.8828 mo
299.382 74.585 300.244 74.6953 300.94 74.9473 cv
300.285 77.6709 299.195 80.5137 297.927 83.2285 cv
295.371 81.9668 294.105 79.2373 294.264 78.0918 cv
295.524 76.582 296.725 75.3447 298.334 74.8828 cv
cp
303.469 75.3711 mo
303.301 75.2334 li
302.615 74.6611 300.791 73.1396 298.06 73.9219 cv
295.85 74.5547 294.359 76.3828 292.78 78.3174 cv
291.662 79.6904 290.495 81.0996 288.973 82.2852 cv
288.87 82.2598 288.762 82.2578 288.659 82.3008 cv
288.65 82.3047 288.645 82.3125 288.636 82.3164 cv
281.211 81.252 273.775 81.2646 269.626 81.7656 cv
267.745 81.9912 266.083 82.2314 264.183 82.6367 cv
263.748 81.9219 263.328 81.2656 262.935 80.708 cv
259.984 76.5166 256.353 75.9102 251.841 78.834 cv
251.781 78.8008 251.725 78.7559 251.665 78.7266 cv
251.52 78.6533 251.347 78.6572 251.202 78.7344 cv
244.962 82.1289 239.763 87.4102 235.751 94.4307 cv
233.672 98.0684 232.595 101.831 232.94 104.249 cv
232.952 104.33 232.983 104.407 233.03 104.473 cv
234.163 106.03 236.006 106.888 238.219 106.888 cv
241.226 106.888 244.56 105.37 247.138 102.828 cv
247.753 102.221 248.315 101.626 248.859 101.036 cv
251.909 99.4111 256.67 97.5547 259.661 97.1074 cv
260.853 99.2744 261.804 101.212 261.905 101.94 cv
261.96 102.334 262.005 102.712 262.05 103.085 cv
262.327 105.42 262.59 107.625 265.07 111.793 cv
265.161 111.946 265.325 112.037 265.5 112.037 cv
265.525 112.037 265.551 112.035 265.576 112.031 cv
271.112 111.173 285.564 104.541 288.604 99.1787 cv
288.674 99.0566 288.688 98.9131 288.646 98.7803 cv
288.605 98.6455 li
288.334 97.7451 287.507 95.0059 284.732 94.0557 cv
282.559 93.3105 279.926 94.0674 277.139 94.8691 cv
275.207 95.4258 273.212 96 271.261 96.1104 cv
271.027 95.6699 270.61 94.832 270.11 93.8242 cv
269.861 93.3223 269.588 92.7734 269.299 92.1943 cv
277.498 90.3691 282.45 91.1094 285.202 92.0977 cv
285.3 92.2383 li
286.458 93.9072 288.044 96.1924 292.149 98.1777 cv
292.219 98.2109 292.293 98.2275 292.367 98.2275 cv
292.478 98.2275 292.587 98.1914 292.677 98.1201 cv
294.896 96.3682 303.654 80.5498 303.664 75.7686 cv
303.664 75.6133 303.593 75.4658 303.469 75.3711 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
218.695 55.2314 mo
219.105 53.8115 219.966 52.3916 220.905 51.332 cv
221.016 51.4316 li
222.436 51.5918 226.255 52.1221 228.266 50.8418 cv
228.346 50.8516 li
228.306 51.2021 228.165 51.6016 227.915 52.0615 cv
227.456 52.9316 226.426 54.5117 226.846 57.8018 cv
226.926 58.3916 226.835 58.8916 226.636 59.292 cv
225.686 56.4219 220.686 55.1416 218.775 55.252 cv
218.695 55.2314 li
cp
f
228.266 50.8418 mo
226.255 52.1221 222.436 51.5918 221.016 51.4316 cv
220.905 51.332 li
221.355 50.8213 221.825 50.3916 222.266 50.0918 cv
224.426 48.6318 228.716 48.3213 228.346 50.8516 cv
228.266 50.8418 li
cp
0 0 0 0 cmyk
f
218.775 55.252 mo
220.686 55.1416 225.686 56.4219 226.636 59.292 cv
225.726 61.1221 222.396 61.1914 220.355 60.0918 cv
218.396 59.0518 218.136 57.1416 218.695 55.2314 cv
218.775 55.252 li
cp
0 .919585 .825986 0 cmyk
f
227.37 52.0156 mo
226.874 52.9258 225.955 54.6182 226.349 57.7979 cv
224.683 55.7773 221.253 54.8828 219.392 54.7646 cv
219.786 53.7324 220.394 52.7441 221.061 51.9385 cv
221.16 51.9502 li
221.887 52.0371 223.06 52.1768 224.317 52.1768 cv
225.397 52.1768 226.538 52.0664 227.515 51.7363 cv
227.499 51.7676 227.485 51.8018 227.47 51.8311 cv
227.37 52.0156 li
cp
223.368 60.3145 mo
223.368 60.3145 li
222.386 60.3145 221.373 60.0742 220.587 59.6553 cv
219.557 59.1055 219.003 58.251 218.943 57.1143 cv
218.92 56.6719 218.989 56.2109 219.094 55.7471 cv
221.025 55.7676 225.111 56.9883 226.075 59.2451 cv
226.035 59.3057 226.001 59.3691 225.952 59.4248 cv
225.454 59.9902 224.513 60.3145 223.368 60.3145 cv
cp
222.55 50.5107 mo
223.465 49.8906 224.864 49.4736 226.031 49.4736 cv
226.891 49.4736 227.517 49.6963 227.75 50.084 cv
227.822 50.2041 227.856 50.3418 227.866 50.4893 cv
226.28 51.3906 223.537 51.207 221.905 51.0293 cv
222.124 50.8281 222.342 50.6514 222.55 50.5107 cv
cp
228.606 49.5693 mo
228.183 48.8633 227.269 48.4736 226.031 48.4736 cv
224.659 48.4736 223.073 48.9482 221.989 49.6826 cv
220.237 50.8691 217.79 54.2168 217.944 57.167 cv
218.023 58.6563 218.774 59.8223 220.116 60.5381 cv
221.042 61.0313 222.228 61.3145 223.368 61.3145 cv
223.368 61.3145 li
224.821 61.3145 226.005 60.8779 226.702 60.085 cv
226.853 59.9141 226.973 59.7246 227.073 59.5254 cv
227.083 59.5059 227.089 59.4854 227.097 59.4648 cv
227.336 58.96 227.429 58.3779 227.347 57.7363 cv
226.972 54.834 227.771 53.3701 228.247 52.4951 cv
228.353 52.3008 li
228.943 51.1904 229.028 50.2715 228.606 49.5693 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
185.444 99.3809 mo
184.981 100.621 184.475 101.754 183.661 101.967 cv
182.425 102.306 181.048 102.337 180.048 100.685 cv
178.255 100.458 173.798 97.3682 173.583 94.4023 cv
173.375 91.4424 177.037 87.1182 180.786 84.5635 cv
180.893 84.4434 li
182.71 85.9453 185.819 87.5029 186.78 87.666 cv
186.872 88.0254 li
188.357 89.876 190.194 92.7266 189.738 94.9092 cv
189.284 97.0918 188.327 100.216 185.979 99.4277 cv
185.444 99.3809 li
cp
0 .167361 .439734 0 cmyk
f
191.583 79.9736 mo
190.978 81.7012 189.517 83.9102 186.78 87.666 cv
185.819 87.5029 182.71 85.9453 180.893 84.4434 cv
180.704 84.2891 180.528 84.1377 180.381 83.9873 cv
181.669 80.168 184.695 75.5938 185.966 73.9688 cv
187.914 71.4619 197.209 70.5869 200.4 70.2939 cv
200.556 70.2891 li
200.64 73.1836 201.22 76.2139 202.055 78.375 cv
201.874 78.4414 li
199.479 78.6689 193.583 79.6943 191.597 79.9746 cv
191.583 79.9736 li
cp
.433509 .775906 .674159 .526574 cmyk
f
199.075 78.7998 mo
197.597 76.4893 196.608 73.3281 196.579 70.6914 cv
198.136 70.499 199.51 70.375 200.4 70.2939 cv
200.556 70.2891 li
200.64 73.1836 201.22 76.2139 202.055 78.375 cv
201.874 78.4414 li
201.184 78.5068 200.19 78.6387 199.075 78.7998 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
202.677 79.7207 mo
202.46 79.3271 202.245 78.874 202.055 78.375 cv
201.22 76.2139 200.64 73.1836 200.556 70.2891 cv
200.534 69.4521 200.554 68.6309 200.615 67.8408 cv
205.896 67.2041 215.907 67.3916 217.429 71.6182 cv
219.119 76.3213 208.699 78.7451 202.677 79.7207 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
174.083 94.3711 mo
173.888 91.6494 177.376 87.5498 180.915 85.0918 cv
182.626 86.4072 185.167 87.7295 186.385 88.083 cv
186.396 88.1729 186.421 88.2607 186.482 88.3359 cv
187.702 89.8623 189.682 92.7344 189.249 94.8076 cv
188.78 97.0479 188.129 98.4209 187.328 98.8799 cv
186.978 99.0791 186.588 99.1035 186.137 98.9512 cv
186.134 98.9512 186.131 98.9512 186.128 98.9502 cv
186.134 98.9346 186.139 98.918 186.146 98.9023 cv
186.331 98.3799 186.517 97.8555 186.722 97.3916 cv
186.833 97.1387 186.719 96.8447 186.466 96.7324 cv
186.214 96.6211 185.92 96.7383 185.807 96.9873 cv
185.592 97.4736 185.397 98.0195 185.202 98.5684 cv
184.749 99.8477 184.231 101.296 183.527 101.487 cv
182.077 101.879 181.163 101.563 180.476 100.43 cv
180.396 100.301 180.262 100.214 180.111 100.194 cv
178.525 99.9902 174.276 97.0439 174.083 94.3711 cv
cp
186.359 74.2715 mo
187.553 72.7412 192.168 71.584 200.081 70.8262 cv
200.198 73.3467 200.677 75.9336 201.396 77.9902 cv
199.632 78.1836 196.661 78.6641 194.224 79.0586 cv
193.478 79.1797 192.813 79.2861 192.265 79.3721 cv
192.521 78.2334 192.422 77.2051 192.032 76.0146 cv
191.946 75.7529 191.664 75.6094 191.401 75.6953 cv
191.142 75.7842 190.997 76.0635 191.082 76.3262 cv
191.958 79.0039 191.327 80.5469 186.57 87.0977 cv
185.391 86.7256 182.506 85.2178 180.962 83.8379 cv
182.271 80.1797 185.14 75.8428 186.359 74.2715 cv
cp
201.085 68.2891 mo
207.062 67.6396 215.698 68.2832 216.96 71.7861 cv
217.339 72.8408 217.011 73.8096 215.954 74.748 cv
213.266 77.1367 206.805 78.5254 202.952 79.168 cv
201.653 76.5811 200.861 71.9766 201.085 68.2891 cv
cp
179.744 101.143 mo
181.116 103.174 183.116 102.634 183.788 102.453 cv
184.749 102.192 185.312 101.107 185.786 99.8809 cv
185.796 99.8848 185.804 99.8955 185.815 99.8994 cv
186.544 100.145 187.22 100.094 187.824 99.7471 cv
188.905 99.126 189.692 97.5801 190.227 95.0127 cv
190.714 92.6846 188.923 89.8047 187.313 87.7754 cv
189.782 84.3799 191.249 82.2041 191.935 80.4355 cv
192.544 80.3428 193.396 80.2041 194.384 80.0459 cv
196.8 79.6543 200.068 79.127 201.762 78.9561 cv
201.914 79.3135 202.071 79.6572 202.24 79.9609 cv
202.343 80.1465 202.55 80.2461 202.757 80.2119 cv
207.528 79.4404 213.804 77.9961 216.618 75.4951 cv
218.334 73.9717 218.263 72.4531 217.9 71.4473 cv
216.144 66.5703 204.784 66.8311 200.556 67.3438 cv
200.451 67.3564 200.357 67.4004 200.283 67.4658 cv
200.189 67.5498 200.128 67.667 200.117 67.7988 cv
200.063 68.4492 200.051 69.1318 200.056 69.8223 cv
194.966 70.3057 188.282 71.1816 185.966 73.2402 cv
185.815 73.374 185.683 73.5137 185.57 73.6582 cv
184.546 74.9766 181.308 79.6748 179.907 83.8223 cv
179.847 84.0039 179.896 84.2051 180.033 84.3389 cv
180.063 84.3701 180.099 84.3994 180.132 84.4297 cv
179.471 84.9014 178.81 85.416 178.174 85.9814 cv
175.296 88.5381 172.901 91.8799 173.085 94.4424 cv
173.316 97.6611 177.731 100.69 179.744 101.143 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
397.768 69.9395 mo
392.552 70.9443 382.541 71.459 380.728 67.3516 cv
378.707 62.7793 388.934 59.627 394.877 58.2295 cv
395.121 58.6084 395.36 59.0508 395.594 59.5361 cv
396.574 61.6348 397.369 64.6123 397.656 67.4951 cv
397.743 68.3271 397.781 69.1455 397.768 69.9395 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
403.672 58.0752 mo
404.068 56.5566 405.113 54.5186 407.197 51.1963 cv
407.25 51.1846 407.297 51.1631 407.355 51.1592 cv
408.814 50.8496 412.156 52.0264 413.953 53.1816 cv
414.25 53.375 414.511 53.5713 414.709 53.749 cv
413.695 57.6504 411.232 62.5859 409.96 64.1973 cv
408.236 66.3838 401.303 67.1094 397.811 67.4717 cv
397.656 67.4951 li
397.369 64.6123 396.574 61.6348 395.594 59.5361 cv
395.766 59.4512 li
398.136 59.0605 401.646 58.3799 403.672 58.0752 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
403.928 44.8379 mo
404.213 43.5459 404.59 42.1035 406.244 42.209 cv
406.422 42.2168 406.603 42.249 406.803 42.29 cv
408.938 42.7646 412.554 43.5645 412.153 45.1445 cv
412.077 45.4189 411.945 45.6475 411.762 45.8389 cv
411.854 45.9346 li
412.042 46.9268 414.22 47.8613 415.879 47.1777 cv
416.373 47.4756 417.519 47.6592 418.508 47.168 cv
418.534 47.2227 li
417.939 50.3496 415.798 52.6729 413.974 53.1416 cv
413.953 53.1816 li
412.156 52.0264 408.814 50.8496 407.355 51.1592 cv
407.281 51.0391 li
404.807 49.1152 403.605 46.2539 403.928 44.8379 cv
cp
.0797436 .400244 .584497 0 cmyk
f
406.803 42.29 mo
406.603 42.249 406.422 42.2168 406.244 42.209 cv
406.178 42.0107 li
406.503 39.6123 407.188 38.0371 408.319 37.3848 cv
409.283 36.8252 411.082 37.0127 411.884 38.2334 cv
413.187 37.4092 419.943 38.3389 420.199 43.1191 cv
420.334 45.5098 419.495 46.6777 418.508 47.168 cv
417.519 47.6592 416.373 47.4756 415.879 47.1777 cv
414.22 47.8613 412.042 46.9268 411.854 45.9346 cv
411.762 45.8389 li
411.945 45.6475 412.077 45.4189 412.153 45.1445 cv
412.554 43.5645 408.938 42.7646 406.803 42.29 cv
cp
f
381.186 67.1484 mo
380.595 65.8115 381.215 64.5195 383.085 63.1973 cv
386.073 61.085 391.465 59.5635 394.64 58.8018 cv
396.117 61.2891 397.229 65.8262 397.267 69.5195 cv
391.35 70.5898 382.689 70.5547 381.186 67.1484 cv
cp
399.477 59.3057 mo
400.75 59.0762 402.008 58.8516 403.037 58.6816 cv
402.83 60.0859 403.181 61.1494 403.765 62.584 cv
403.869 62.8398 404.16 62.9639 404.417 62.8584 cv
404.67 62.7549 404.795 62.4619 404.69 62.207 cv
404.115 60.7939 403.739 59.8428 404.159 58.2188 cv
404.164 58.2021 404.169 58.1855 404.173 58.168 cv
404.551 56.752 405.527 54.8252 407.516 51.6367 cv
408.951 51.375 412.641 52.748 414.147 53.9229 cv
413.081 57.7891 410.717 62.4385 409.568 63.8916 cv
408.027 65.8389 401.49 66.583 398.092 66.9424 cv
397.799 64.4307 397.141 61.8779 396.276 59.8711 cv
397.246 59.707 398.358 59.5068 399.477 59.3057 cv
cp
404.412 44.9473 mo
404.613 44.0547 404.857 43.208 405.379 42.8818 cv
405.697 42.6807 406.128 42.6455 406.762 42.7891 cv
408.26 43.125 411.05 43.752 411.606 44.6582 cv
411.682 44.7803 411.7 44.8916 411.669 45.0195 cv
411.589 45.333 411.384 45.5654 411.05 45.7266 cv
410.186 46.1387 408.664 45.9834 407.262 45.3398 cv
407.012 45.2246 406.716 45.335 406.6 45.5859 cv
406.484 45.8369 406.594 46.1338 406.846 46.249 cv
408.528 47.0205 410.347 47.1689 411.48 46.6289 cv
411.522 46.6074 411.557 46.5801 411.597 46.5586 cv
411.805 46.873 412.126 47.1611 412.562 47.3955 cv
413.336 47.8115 414.637 48.1279 415.851 47.7227 cv
416.338 47.9326 417.078 48.0459 417.842 47.9033 cv
417.135 50.3652 415.429 52.167 413.973 52.6123 cv
412.185 51.5488 409.259 50.4941 407.582 50.6318 cv
405.142 48.7373 404.158 46.0713 404.412 44.9473 cv
cp
408.568 37.8193 mo
409.274 37.4082 410.787 37.4717 411.459 38.5039 cv
411.608 38.7334 411.914 38.8008 412.146 38.6543 cv
412.68 38.3174 414.991 38.3369 417.014 39.3799 cv
418.18 39.9814 419.593 41.124 419.704 43.1484 cv
419.798 44.875 419.354 46.0801 418.443 46.6338 cv
417.569 47.1582 416.495 46.9648 416.14 46.75 cv
416.004 46.668 415.837 46.6563 415.691 46.7168 cv
414.799 47.083 413.714 46.8799 413.035 46.5156 cv
412.604 46.2822 412.405 46.0352 412.355 45.874 cv
412.479 45.6885 412.581 45.4883 412.638 45.2637 cv
412.737 44.876 412.675 44.4834 412.458 44.1338 cv
411.741 42.9658 409.457 42.3701 406.916 41.7979 cv
406.849 41.7832 406.787 41.7813 406.721 41.7695 cv
407.043 39.6787 407.65 38.335 408.568 37.8193 cv
cp
397.861 70.4277 mo
398.093 70.3799 398.264 70.1807 398.267 69.9424 cv
398.273 69.2959 398.239 68.6201 398.186 67.9385 cv
401.945 67.541 408.551 66.7949 410.354 64.5117 cv
411.612 62.917 414.126 57.9795 415.195 53.8701 cv
415.242 53.6914 415.187 53.502 415.05 53.376 cv
415.02 53.3486 414.98 53.3184 414.946 53.291 cv
416.622 52.4385 418.393 50.3398 418.981 47.4746 cv
419.859 46.9424 420.847 45.749 420.702 43.0938 cv
420.566 40.5967 418.87 39.2119 417.471 38.4912 cv
415.554 37.501 413.229 37.2549 412.039 37.6211 cv
411.02 36.4805 409.188 36.3018 408.065 36.9541 cv
407.986 37.002 407.906 37.0508 407.83 37.1055 cv
406.752 37.8682 406.06 39.3916 405.715 41.7314 cv
405.395 41.7754 405.102 41.874 404.845 42.0361 cv
404.814 42.0557 404.785 42.0752 404.755 42.0967 cv
403.891 42.708 403.629 43.8711 403.437 44.7275 cv
403.087 46.2764 404.228 49.0957 406.646 51.1406 cv
404.771 54.1514 403.736 56.123 403.275 57.6309 cv
402.178 57.8047 400.751 58.0605 399.299 58.3223 cv
398.083 58.541 396.867 58.7598 395.843 58.9297 cv
395.665 58.584 395.482 58.251 395.293 57.959 cv
395.178 57.7822 394.965 57.6963 394.76 57.7441 cv
390.869 58.6592 385.585 60.2061 382.508 62.3809 cv
379.66 64.3945 379.719 66.3047 380.271 67.5537 cv
382.365 72.2939 393.679 71.2354 397.861 70.4277 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
384.248 61.2373 mo
384.264 62.4551 383.949 63.8252 383.645 64.9873 cv
382.713 63.9658 380.27 61.1348 378.456 59.21 cv
378.63 59.0527 li
379.102 58.5205 381.502 57.2627 383.162 58.5322 cv
383.955 59.1279 384.24 60.1143 384.248 61.2373 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
374.885 67.9629 mo
374.936 68.1035 li
370.186 70.0234 366.658 71.9424 365.152 73.5801 cv
365.057 73.6758 364.979 73.7822 364.896 73.875 cv
364.874 73.8516 li
365.209 70.7861 369.019 67.5576 371.984 64.8799 cv
372.154 64.7324 li
373.002 65.6748 373.859 66.6445 374.885 67.9629 cv
cp
.826932 .410346 .420874 .105837 cmyk
f
365.152 73.5801 mo
366.658 71.9424 370.186 70.0234 374.936 68.1035 cv
377.523 67.0459 380.471 65.9961 383.645 64.9873 cv
377.938 69.0713 373.637 71.6895 371.145 75.4199 cv
371.361 75.5664 li
371.695 77.4043 372.922 79.8223 374.762 82.5742 cv
374.64 82.6572 li
372.728 83.6279 369.607 83.1172 368.148 80.2393 cv
364.646 80.4541 362.332 77.0352 364.896 73.875 cv
364.979 73.7822 365.057 73.6758 365.152 73.5801 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
384.262 61.2334 mo
389.059 63.1777 405.94 75.249 413.235 81.7051 cv
412.808 86.6201 401.66 101.661 394.98 105.492 cv
387.594 98.2891 379.32 89.3984 374.762 82.5742 cv
372.922 79.8223 371.695 77.4043 371.361 75.5664 cv
371.145 75.4199 li
373.637 71.6895 377.938 69.0713 383.645 64.9873 cv
383.949 63.8252 384.264 62.4551 384.248 61.2373 cv
384.262 61.2334 li
cp
.74789 .241123 .31931 .00552377 cmyk
f
394.27 67.3184 mo
396.524 68.8545 398.928 70.5576 401.294 72.2881 cv
398.715 79.54 389.529 89.3428 382.908 92.8887 cv
380.936 90.6436 379.094 88.4316 377.48 86.3418 cv
382.437 82.8232 391.855 73.8906 394.27 67.3184 cv
cp
0 0 0 0 cmyk
f
376.584 57.4004 mo
376.939 57.6445 377.629 58.334 378.456 59.21 cv
380.27 61.1348 382.713 63.9658 383.645 64.9873 cv
380.471 65.9961 377.523 67.0459 374.936 68.1035 cv
374.885 67.9629 li
373.859 66.6445 373.002 65.6748 372.154 64.7324 cv
371.607 64.1162 371.078 63.5107 370.515 62.8418 cv
372.74 60.7588 373.882 59.3818 376.584 57.4004 cv
cp
.0797436 .400244 .584497 0 cmyk
f
382.863 58.9277 mo
384.054 59.8311 383.844 61.9561 383.389 63.9473 cv
383.18 63.71 382.943 63.4443 382.689 63.1563 cv
381.414 61.7168 380.187 60.3369 379.166 59.2373 cv
379.792 58.7725 381.612 57.9775 382.863 58.9277 cv
cp
412.708 81.9023 mo
411.979 86.7002 401.564 100.859 395.055 104.866 cv
389.595 99.5225 373.203 82.958 371.851 75.4766 cv
371.842 75.4287 371.82 75.3887 371.799 75.3467 cv
373.826 72.5117 376.975 70.292 381.164 67.3516 cv
382.048 66.7324 382.974 66.084 383.939 65.3926 cv
383.943 65.3887 383.945 65.3848 383.949 65.3818 cv
383.963 65.3711 383.973 65.3555 383.984 65.3447 cv
384.019 65.3115 384.051 65.2773 384.072 65.2373 cv
384.078 65.2295 384.086 65.2256 384.09 65.2178 cv
384.107 65.1846 384.121 65.1494 384.131 65.1123 cv
384.404 64.0752 384.641 63 384.721 61.9912 cv
390.23 64.6172 405.885 75.9131 412.708 81.9023 cv
cp
371.367 82.4111 mo
370.526 82.1553 369.363 81.5303 368.598 80.0098 cv
368.508 79.8311 368.318 79.7227 368.119 79.7354 cv
366.557 79.8369 365.17 79.1123 364.585 77.8926 cv
363.994 76.6572 364.338 75.208 365.523 73.9141 cv
367.414 71.8535 372.955 69.1533 380.619 66.5137 cv
380.609 66.5205 380.6 66.5264 380.59 66.5342 cv
374.883 70.5381 370.758 73.4297 369.051 78.5381 cv
368.963 78.7988 369.104 79.083 369.365 79.1709 cv
369.627 79.2578 369.913 79.123 369.998 78.8555 cv
370.283 78.0029 370.643 77.2217 371.065 76.4834 cv
371.55 78.1621 372.611 80.1748 374.032 82.3564 cv
373.221 82.6484 372.26 82.6836 371.367 82.4111 cv
cp
371.689 65.8193 mo
372.113 65.4365 li
372.756 66.1611 373.426 66.9355 374.174 67.8682 cv
370.471 69.4023 367.641 70.8926 365.906 72.2334 cv
367.012 70.0342 369.555 67.7402 371.689 65.8193 cv
cp
372.559 64.4307 mo
372.105 63.9209 371.661 63.4189 371.203 62.8789 cv
371.68 62.4258 372.109 62.0059 372.521 61.6016 cv
373.758 60.3916 374.835 59.3369 376.576 58.0293 cv
377.664 58.9873 380.304 61.9707 381.941 63.8203 cv
382.247 64.166 382.523 64.4766 382.762 64.7461 cv
379.959 65.6543 377.4 66.5703 375.141 67.4746 cv
374.18 66.2598 373.355 65.3262 372.559 64.4307 cv
cp
378.481 58.5078 mo
377.769 57.7607 377.205 57.2188 376.874 56.9873 cv
376.697 56.8643 376.465 56.8682 376.292 56.9951 cv
374.31 58.4521 373.156 59.5811 371.821 60.8867 cv
371.318 61.3809 370.787 61.8984 370.175 62.4717 cv
369.983 62.6543 369.963 62.9521 370.133 63.1572 cv
370.582 63.7002 371.016 64.1953 371.452 64.6875 cv
371.021 65.0762 li
368.084 67.7178 364.764 70.7119 364.384 73.7305 cv
363.269 75.208 362.996 76.8867 363.684 78.3242 cv
364.402 79.8271 366.018 80.7529 367.857 80.7441 cv
369.406 83.4707 372.449 84.1396 374.607 83.2207 cv
380.306 91.5967 390.756 102.07 394.631 105.851 cv
394.791 106.007 395.035 106.038 395.229 105.926 cv
400.637 102.82 408.586 92.8662 412.04 86.2939 cv
413.021 84.4258 413.64 82.832 413.736 81.7451 cv
413.749 81.5869 413.687 81.4326 413.567 81.3271 cv
406.652 75.2061 390.01 63.2236 384.738 60.8994 cv
384.676 59.7656 384.324 58.7813 383.467 58.1299 cv
381.704 56.793 379.352 57.8154 378.481 58.5078 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
397.066 25.2129 mo
399.287 31.6797 402.183 41.1543 401.422 46.5518 cv
400.449 53.5039 395.316 58.7773 391.038 60.96 cv
386.878 63.0879 372.572 68.2803 359.313 62.3262 cv
357.743 65.0879 351.945 66.5449 347.289 63.0664 cv
345.325 61.5986 344.318 59.8174 344.017 58.082 cv
343.619 55.7637 344.459 53.5176 345.94 52.1982 cv
348.545 49.8809 352.326 50.5117 355.881 54.1836 cv
357.425 50.8701 359.24 46.835 358.946 41.8525 cv
358.924 41.8291 li
362.582 38.458 368.073 35.4219 371.652 29.7266 cv
371.714 29.7422 li
371.26 31.9609 371.17 34.6074 371.837 37.2207 cv
374.306 34.1162 388.077 28.2021 389.504 16.4033 cv
389.571 16.4053 li
392.09 17.0742 394.19 18.6211 395.263 20.1406 cv
395.703 21.3691 396.349 23.1318 397.066 25.2129 cv
cp
0 .167361 .439734 0 cmyk
f
389.28 7.90137 mo
397.195 10.9639 398.776 20.5762 397.311 25.1221 cv
397.066 25.2129 li
396.349 23.1318 395.703 21.3691 395.263 20.1406 cv
394.19 18.6211 392.09 17.0742 389.571 16.4053 cv
389.504 16.4033 li
388.077 28.2021 374.306 34.1162 371.837 37.2207 cv
371.17 34.6074 371.26 31.9609 371.714 29.7422 cv
371.652 29.7266 li
368.073 35.4219 362.582 38.458 358.924 41.8291 cv
358.946 41.8525 li
359.24 46.835 357.425 50.8701 355.881 54.1836 cv
352.326 50.5117 348.545 49.8809 345.94 52.1982 cv
344.459 53.5176 343.619 55.7637 344.017 58.082 cv
343.657 58.1396 li
340.758 57.8369 335.741 55.7627 332.845 52.6992 cv
334.601 51.3291 335.779 49.125 338.148 46.917 cv
334.06 46.2412 328.946 43.252 325.936 40.6504 cv
328.896 38.7188 330.897 33.9238 336.993 29.249 cv
332.879 29.5127 329.186 28.2891 325.909 25.5908 cv
329.009 23.958 332.802 19.3867 338.968 16.9199 cv
336.33 16.6826 332.851 14.8516 331.267 12.2354 cv
334.779 11.8887 352.95 1.94824 366.658 .796875 cv
378.545 -.211914 387.46 2.81445 389.28 7.90137 cv
cp
.373144 .782101 .665248 .350225 cmyk
f
378.863 2.86133 mo
382.341 3.64551 384.559 4.97266 385.956 6.28516 cv
384.057 13.3604 362.063 17.3496 351.767 20.7051 cv
343.189 23.4902 337.426 26.1563 334.516 29.2129 cv
333.395 29.1289 332.296 28.9023 331.245 28.5645 cv
338.919 15.8945 367.864 10.6719 374.391 7.08789 cv
377.325 5.47754 378.599 4.06641 378.863 2.86133 cv
cp
.341833 .684718 .553277 .151247 cmyk
f
389.28 7.90137 mo
388.735 6.37891 387.563 5.0498 385.858 3.94727 cv
384.021 2.75098 381.554 1.83887 378.621 1.27539 cv
375.208 .604492 371.146 .414063 366.658 .796875 cv
352.95 1.94824 334.779 11.8887 331.267 12.2354 cv
331.348 12.3633 331.425 12.4824 331.516 12.6045 cv
343.688 9.84082 356.042 1.92969 372.263 2.14453 cv
374.86 2.17969 377.036 2.44531 378.863 2.86133 cv
382.341 3.64551 384.559 4.97266 385.956 6.28516 cv
387.172 7.42871 387.776 8.55859 388.069 9.32617 cv
392.146 10.4277 396.811 14.751 397.545 24.2285 cv
398.557 19.4199 396.708 10.7705 389.28 7.90137 cv
cp
0 0 0 0 cmyk
f
348.313 56.8828 mo
347.252 58.833 348.947 61.6025 352.278 61.8379 cv
354.846 62.0205 356.45 60.2939 354.696 57.9521 cv
352.502 55.0215 349.451 54.7891 348.313 56.8828 cv
cp
.0797436 .400244 .584497 0 cmyk
f
397.066 25.2129 mo
399.287 31.6797 402.183 41.1543 401.422 46.5518 cv
400.449 53.5039 395.316 58.7773 391.038 60.96 cv
390.512 61.2266 389.823 61.5479 388.995 61.8789 cv
393.502 58.8623 397.894 54.3418 399.849 47.3184 cv
401.259 42.2031 398.437 33.0039 392.621 17.7422 cv
393.752 18.4385 394.669 19.291 395.263 20.1406 cv
395.703 21.3691 396.349 23.1318 397.066 25.2129 cv
cp
0 0 0 0 cmyk
f
371.837 37.2207 mo
374.306 34.1162 388.077 28.2021 389.504 16.4033 cv
389.571 16.4053 li
389.674 16.4346 389.775 16.4648 389.882 16.5029 cv
391.767 29.5156 376.02 36.3955 370.722 41.834 cv
370.093 40.2959 369.628 38.3057 369.779 36.8555 cv
367.106 40.3975 361.49 42.7402 359.567 46.3076 cv
359.296 45.2529 359.06 44.4141 358.968 43.5088 cv
358.982 42.9717 358.979 42.4209 358.946 41.8525 cv
358.929 41.8389 li
358.929 41.8389 358.929 41.8389 358.934 41.8252 cv
362.591 38.4541 368.073 35.4219 371.652 29.7266 cv
371.714 29.7422 li
371.26 31.9609 371.17 34.6074 371.837 37.2207 cv
cp
.0797436 .400244 .584497 0 cmyk
f
358.934 41.8252 mo
358.929 41.8389 358.929 41.8389 358.929 41.8389 cv
358.924 41.8291 li
358.934 41.8252 li
cp
f
395.674 19.8496 mo
394.472 18.1504 392.334 16.7129 390.04 16.0264 cv
390.092 15.4795 390.129 14.9248 390.127 14.3535 cv
390.126 14.0781 389.902 13.8535 389.625 13.8545 cv
389.347 13.8555 389.126 14.0801 389.127 14.3564 cv
389.149 24.0039 380.871 29.8623 375.393 33.7373 cv
374.042 34.6924 372.902 35.499 372.122 36.208 cv
371.394 32.2998 372.284 28.1738 373.639 25.9473 cv
373.782 25.7109 373.707 25.4033 373.471 25.2598 cv
373.234 25.1162 372.928 25.1914 372.784 25.4277 cv
372.176 26.4277 371.644 27.8096 371.29 29.3916 cv
371.269 29.4141 371.24 29.4326 371.224 29.4609 cv
368.76 33.3965 365.305 36.0801 362.258 38.4453 cv
360.358 39.9189 358.553 41.3223 357.178 42.8721 cv
355.809 38.4297 357.005 32.0215 359.813 29.4268 cv
360.017 29.2383 360.028 28.9219 359.842 28.7197 cv
359.653 28.5176 359.34 28.5039 359.135 28.6914 cv
355.835 31.7402 354.572 39.207 356.536 44.0547 cv
356.604 44.2207 356.755 44.3379 356.932 44.3623 cv
357.028 44.375 357.126 44.3604 357.212 44.3203 cv
357.282 44.2871 357.346 44.2373 357.396 44.1738 cv
357.714 43.7637 358.075 43.3643 358.461 42.9697 cv
358.443 47.1289 356.975 50.6309 355.728 53.3262 cv
352.187 49.9639 348.352 49.377 345.609 51.8223 cv
344.152 53.1201 343.336 55.1396 343.426 57.2256 cv
343.432 57.3506 343.452 57.4736 343.465 57.5977 cv
340.648 57.2275 336.277 55.335 333.581 52.7295 cv
334.34 52.0498 335.01 51.2236 335.712 50.3574 cv
336.483 49.4072 337.357 48.3311 338.486 47.2783 cv
338.627 47.1484 338.68 46.9502 338.625 46.7676 cv
338.569 46.5859 338.415 46.4492 338.227 46.4189 cv
334.501 45.8057 329.763 43.1406 326.753 40.6816 cv
327.891 39.7861 328.916 38.501 330.079 37.042 cv
331.785 34.9043 333.909 32.2422 337.294 29.6436 cv
337.468 29.5098 337.534 29.2773 337.458 29.0713 cv
337.38 28.8652 337.178 28.7334 336.958 28.748 cv
333.233 28.9834 329.817 27.9424 326.793 25.6533 cv
327.794 25.0293 328.854 24.1699 330.047 23.2021 cv
332.408 21.2881 335.346 18.9111 339.151 17.3877 cv
339.357 17.3086 339.493 17.0801 339.461 16.8506 cv
339.428 16.6221 339.241 16.4463 339.011 16.4248 cv
336.804 16.2246 333.762 14.7559 332.102 12.5791 cv
333.543 12.1943 335.947 11.1816 339.064 9.86816 cv
346.447 6.75684 357.604 2.05469 366.701 1.28906 cv
377.953 .341797 387.045 3.12793 388.812 8.06445 cv
388.859 8.20117 388.965 8.30957 389.101 8.36133 cv
396.108 11.0781 397.905 19.2197 397.105 23.8057 cv
396.732 22.7412 396.386 21.7773 396.099 20.9775 cv
395.738 19.9707 li
395.722 19.9277 395.701 19.8867 395.674 19.8496 cv
cp
400.928 46.4824 mo
400.006 53.0762 395.183 58.2793 390.811 60.5127 cv
385.249 63.3467 371.565 67.2832 359.516 61.8721 cv
359.281 61.7666 359.004 61.8564 358.876 62.0811 cv
358.25 63.1836 356.837 64.0586 355.096 64.4219 cv
352.534 64.957 349.798 64.3145 347.585 62.6621 cv
345.636 61.2051 344.514 59.2588 344.426 57.1826 cv
344.349 55.3945 345.04 53.6689 346.274 52.5684 cv
348.715 50.3994 352.254 51.1484 355.521 54.5293 cv
355.636 54.6465 355.8 54.7012 355.963 54.6738 cv
356.123 54.6484 356.264 54.543 356.334 54.3926 cv
357.757 51.3447 359.69 47.1807 359.45 42.0371 cv
360.489 41.1006 361.652 40.1816 362.87 39.2354 cv
365.551 37.1543 368.535 34.8301 370.946 31.6182 cv
370.775 33.4395 370.854 35.4033 371.35 37.3496 cv
371.396 37.5332 371.543 37.6748 371.729 37.7148 cv
371.838 37.7383 371.947 37.7246 372.045 37.6787 cv
372.114 37.6465 372.176 37.5986 372.226 37.5361 cv
372.828 36.7773 374.284 35.7471 375.969 34.5547 cv
380.79 31.1436 388.537 25.6348 389.897 17.0303 cv
392.258 17.7715 393.971 19.2031 394.819 20.373 cv
395.157 21.3164 li
395.75 22.9639 396.579 25.2725 397.428 27.8672 cv
396.922 27.457 396.45 27.4346 396.128 27.5215 cv
394.705 27.916 393.8 30.5879 392.888 34.4932 cv
392.659 35.4707 392.354 35.7861 392.217 35.8115 cv
392.087 35.8398 391.794 35.6729 391.461 35.2402 cv
391.259 34.9766 390.883 34.9258 390.62 35.1289 cv
390.356 35.3311 390.308 35.708 390.509 35.9707 cv
391.292 36.9902 392.008 37.085 392.47 36.9844 cv
392.572 36.9629 392.671 36.9297 392.765 36.8867 cv
393.357 36.6094 393.792 35.8984 394.056 34.7666 cv
395.236 29.7148 396.061 28.7744 396.441 28.6797 cv
396.547 28.6514 396.701 28.793 396.783 28.8809 cv
397.012 29.1221 397.393 29.1289 397.633 28.9043 cv
397.671 28.8682 397.695 28.8213 397.722 28.7773 cv
399.645 34.7881 401.543 42.0781 400.928 46.4824 cv
cp
389.671 7.5127 mo
387.557 2.20215 378.349 -.695313 366.617 .291992 cv
357.36 1.07227 346.116 5.81152 338.676 8.94629 cv
335.115 10.4473 332.302 11.6328 331.215 11.7412 cv
331.044 11.7559 330.894 11.8613 330.816 12.0156 cv
330.741 12.1699 330.748 12.3516 330.837 12.498 cv
332.245 14.8193 334.937 16.4424 337.298 17.1094 cv
334.068 18.6553 331.52 20.7217 329.416 22.4268 cv
328.002 23.5732 326.779 24.5645 325.671 25.1465 cv
325.524 25.2246 325.425 25.3711 325.407 25.5371 cv
325.391 25.7051 325.457 25.8682 325.587 25.9756 cv
328.553 28.415 331.892 29.6895 335.531 29.7764 cv
332.71 32.1426 330.838 34.4893 329.298 36.418 cv
327.954 38.1025 326.893 39.4326 325.666 40.2324 cv
325.535 40.3184 325.451 40.4609 325.44 40.6172 cv
325.431 40.7744 325.493 40.9268 325.612 41.0293 cv
328.375 43.418 333.022 46.2539 337.12 47.2158 cv
336.265 48.0898 335.566 48.9502 334.936 49.7275 cv
334.106 50.751 333.39 51.6348 332.535 52.3008 cv
332.424 52.3887 332.355 52.5176 332.345 52.6582 cv
332.334 52.7979 332.383 52.9365 332.479 53.0391 cv
335.396 56.1172 340.424 58.3008 343.603 58.6328 cv
343.615 58.6338 343.626 58.627 343.637 58.627 cv
344.083 60.4668 345.231 62.1504 346.986 63.4629 cv
349.428 65.2881 352.458 65.9941 355.3 65.4004 cv
357.12 65.0225 358.655 64.1221 359.499 62.957 cv
373.493 69.0137 387.784 63.0352 390.735 61.6592 cv
391.025 61.5244 391.205 61.4336 391.266 61.4033 cv
395.868 59.0527 400.947 53.5703 401.918 46.6221 cv
402.67 41.2441 399.883 31.9238 397.675 25.4531 cv
397.724 25.4023 397.764 25.3408 397.786 25.2695 cv
399.277 20.6475 397.819 10.8281 389.671 7.5127 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
349.246 55.3105 mo
347.941 55.8379 347.27 57.0801 347.548 58.2754 cv
347.61 58.5439 347.881 58.7109 348.148 58.6484 cv
348.42 58.5889 348.585 58.3184 348.521 58.0479 cv
348.355 57.3311 348.818 56.5664 349.641 56.2285 cv
350.845 55.7109 352.882 56.0566 354.656 58.7412 cv
354.795 58.9512 355.063 59.0225 355.284 58.9189 cv
355.307 58.9092 355.328 58.8965 355.349 58.8828 cv
355.579 58.7314 355.643 58.4199 355.49 58.1904 cv
353.376 54.9902 350.805 54.6387 349.246 55.3105 cv
cp
f
376.427 40.9756 mo
379.675 42.5313 381.296 42.9443 382.324 42.4648 cv
382.352 42.4521 382.379 42.4385 382.406 42.4248 cv
383.259 41.9736 383.474 40.998 383.633 39.9531 cv
383.683 39.626 383.458 39.3193 383.131 39.2686 cv
382.803 39.2197 382.497 39.4443 382.446 39.7705 cv
382.315 40.627 382.17 41.1924 381.845 41.3643 cv
381.837 41.3682 381.829 41.3711 381.82 41.376 cv
380.918 41.7959 377.934 40.3662 376.945 39.8936 cv
371.324 37.2002 367.391 39.6738 365.731 42.6133 cv
365.569 42.9014 365.671 43.2676 365.959 43.4307 cv
366.248 43.5938 366.613 43.4902 366.776 43.2031 cv
368.182 40.7168 371.552 38.6406 376.427 40.9756 cv
cp
f
381.082 43.3232 mo
381.888 45.8555 381.021 48.3926 379.147 48.9893 cv
377.273 49.5869 375.099 48.0176 374.292 45.4854 cv
373.485 42.9531 374.352 40.416 376.226 39.8184 cv
378.526 41.2207 378.742 41.2998 380.246 41.624 cv
380.593 42.1172 380.879 42.6904 381.082 43.3232 cv
cp
f
378.011 43.2314 mo
378.114 44.3682 377.518 45.3525 376.676 45.4297 cv
375.834 45.5068 375.066 44.6475 374.962 43.5098 cv
374.859 42.374 375.456 41.3896 376.298 41.3125 cv
377.138 41.2344 377.907 42.0938 378.011 43.2314 cv
cp
0 0 0 0 cmyk
f
398.539 35.1592 mo
399.556 37.6143 399.19 40.0977 397.723 40.7061 cv
396.254 41.3145 394.237 39.8154 393.221 37.3613 cv
393.043 36.9336 392.907 36.5039 392.813 36.084 cv
393.526 33.958 393.487 34.0654 394.038 31.8125 cv
395.506 31.2051 397.522 32.7021 398.539 35.1592 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
396.322 35.8379 mo
396.691 36.7295 396.471 37.667 395.828 37.9346 cv
395.188 38.2002 394.365 37.6924 393.996 36.8008 cv
393.628 35.9092 393.85 34.9707 394.491 34.7051 cv
395.133 34.4395 395.953 34.9463 396.322 35.8379 cv
cp
0 0 0 0 cmyk
f
343.427 57.2207 mo
343.433 57.3506 343.456 57.4717 343.462 57.6016 cv
340.649 57.2246 336.28 55.334 333.578 52.7324 cv
334.339 52.0469 335.015 51.2246 335.714 50.3574 cv
336.482 49.4033 337.362 48.332 338.482 47.2793 cv
338.629 47.1445 338.684 46.9531 338.631 46.7686 cv
338.568 46.5879 338.415 46.4492 338.224 46.418 cv
334.545 45.8164 329.896 43.2061 326.88 40.7842 cv
330.727 41.6494 335.522 41.6416 338.351 40.6543 cv
340.026 36.9375 342.082 35.2402 345.476 33.1504 cv
344.195 35.8213 344.154 38.5986 345.063 42.0371 cv
347.822 34.7031 354.128 30.8809 358.579 29.2578 cv
355.699 32.5967 354.675 39.4854 356.542 44.0547 cv
356.608 44.2217 356.752 44.3418 356.927 44.3613 cv
357.033 44.377 357.124 44.3574 357.215 44.3154 cv
357.277 44.2861 357.342 44.2334 357.393 44.1758 cv
357.718 43.7607 358.072 43.3633 358.464 42.9707 cv
358.439 47.1309 356.971 50.6289 355.725 53.3291 cv
352.188 49.957 348.352 49.375 345.609 51.8223 cv
344.152 53.1201 343.341 55.1426 343.427 57.2207 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
390.306 46.1748 mo
390.608 44.9248 391.922 44.3174 392.118 45.3291 cv
392.313 46.3418 390.116 46.9521 390.306 46.1748 cv
cp
.0797436 .400244 .584497 0 cmyk
f
461.642 83.9121 mo
463.062 80.9316 464.301 77.752 464.991 74.7021 cv
465.011 74.6514 li
465.831 75.0313 466.381 75.5615 466.642 75.7715 cv
466.631 80.3418 458.011 96.0117 455.841 97.7314 cv
455.102 97.3721 454.451 97.0117 453.871 96.6416 cv
453.951 96.502 li
455.471 94.6416 458.901 89.6514 461.642 83.9121 cv
cp
.181369 .0870985 .113436 0 cmyk
f
461.421 83.8115 mo
458.481 82.502 456.981 79.3213 457.251 77.9316 cv
457.231 77.9121 li
458.581 76.292 459.871 74.9121 461.671 74.4014 cv
463.051 74.0117 464.171 74.252 465.011 74.6514 cv
464.991 74.7021 li
464.301 77.752 463.062 80.9316 461.642 83.9121 cv
461.421 83.8115 li
cp
f
452.361 82.8613 mo
453.871 86.5918 451.392 91.1016 448.991 91.6816 cv
447.642 91.1816 446.191 90.8818 444.721 90.7217 cv
444.741 90.5918 li
446.741 89.0117 447.161 84.1816 445.581 82.1816 cv
445.581 82.1416 li
447.751 82.2813 450.041 82.5215 452.361 82.8613 cv
cp
f
452.521 82.8818 mo
454.491 81.4121 455.881 79.542 457.231 77.9121 cv
457.251 77.9316 li
456.981 79.3213 458.481 82.502 461.421 83.8115 cv
461.642 83.9121 li
458.901 89.6514 455.471 94.6416 453.951 96.502 cv
453.871 96.6416 li
451.131 94.8916 449.961 93.0518 448.991 91.6816 cv
451.392 91.1016 453.871 86.5918 452.361 82.8613 cv
452.411 82.8613 452.471 82.8721 452.521 82.8818 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
425.871 101.872 mo
425.861 101.812 425.852 101.752 425.831 101.682 cv
426.001 101.642 li
428.681 102.691 433.181 100.512 434.631 96.6416 cv
434.631 96.6113 li
437.051 96.502 439.521 95.6914 441.821 95.0518 cv
441.861 95.2119 li
440.461 96.8613 440.831 100.142 443.062 103.062 cv
443.142 103.182 li
443.142 103.191 li
438.001 106.252 432.011 108.352 428.081 109.622 cv
427.951 109.682 li
426.181 106.202 426.211 104.321 425.871 101.872 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
443.142 103.182 mo
446.111 101.412 448.801 99.3213 450.651 96.8818 cv
450.761 96.8115 li
451.312 97.7314 451.541 98.6113 451.642 98.9316 cv
448.761 104.021 434.541 110.672 428.971 111.542 cv
428.571 110.872 428.231 110.252 427.951 109.682 cv
428.081 109.622 li
432.011 108.352 438.001 106.252 443.142 103.191 cv
443.142 103.182 li
cp
0 0 0 0 cmyk
f
450.761 96.8115 mo
450.651 96.8818 li
448.801 99.3213 446.111 101.412 443.142 103.182 cv
443.062 103.062 li
440.831 100.142 440.461 96.8613 441.861 95.2119 cv
441.821 95.0518 li
444.142 94.4014 446.281 93.9316 448.041 94.5313 cv
449.381 94.9814 450.221 95.9121 450.761 96.8115 cv
cp
f
423.392 96.5518 mo
423.321 96.4121 423.241 96.2715 423.151 96.1318 cv
423.201 96.1016 li
425.251 97.1221 430.211 94.4814 431.821 91.7217 cv
431.941 91.6621 li
431.981 91.7314 432.011 91.792 432.041 91.8516 cv
433.251 94.2617 434.181 96.1816 434.451 96.6221 cv
434.511 96.6221 434.571 96.6221 434.631 96.6113 cv
434.631 96.6416 li
433.181 100.512 428.681 102.691 426.001 101.642 cv
425.831 101.682 li
425.602 100.722 424.571 98.6719 423.392 96.5518 cv
cp
f
445.581 82.1816 mo
447.161 84.1816 446.741 89.0117 444.741 90.5918 cv
444.721 90.7217 li
439.121 90.1113 433.261 91.5713 432.041 91.8516 cv
432.011 91.792 431.981 91.7314 431.941 91.6621 cv
430.602 88.9922 428.931 85.752 427.421 83.2314 cv
427.521 83.1719 li
429.411 82.7617 431.081 82.5117 433.161 82.2617 cv
435.771 81.9414 440.321 81.792 445.581 82.1416 cv
445.581 82.1816 li
cp
.0797436 .400244 .584497 0 cmyk
f
427.421 83.2314 mo
428.931 85.752 430.602 88.9922 431.941 91.6621 cv
431.821 91.7217 li
430.211 94.4814 425.251 97.1221 423.201 96.1016 cv
423.151 96.1318 li
422.181 94.3818 421.131 92.6318 420.381 91.4316 cv
420.691 88.4922 418.411 81.4414 415.331 79.4121 cv
420.751 75.7617 423.931 78.0518 426.001 80.9922 cv
426.441 81.6221 426.921 82.3916 427.421 83.2314 cv
cp
0 .167361 .439734 0 cmyk
f
423.381 96.5615 mo
420.341 96.9316 415.271 98.8916 412.041 100.622 cv
414.881 97.542 416.911 94.6514 420.381 91.4316 cv
421.131 92.6318 422.181 94.3818 423.151 96.1318 cv
423.241 96.2715 423.321 96.4121 423.392 96.5518 cv
423.381 96.5615 li
cp
.498634 .76672 .682032 .673518 cmyk
f
415.331 79.4121 mo
418.411 81.4414 420.691 88.4922 420.381 91.4316 cv
416.911 94.6514 414.881 97.542 412.041 100.622 cv
411.491 101.231 410.901 101.842 410.261 102.472 cv
405.951 106.722 399.581 107.842 396.911 104.182 cv
396.581 101.842 397.661 98.1816 399.661 94.6816 cv
401.661 91.1816 406.331 83.8418 414.921 79.1719 cv
415.062 79.2422 415.191 79.3213 415.331 79.4121 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
420.381 91.4316 mo
420.691 88.4922 418.411 81.4414 415.331 79.4121 cv
416.991 78.292 418.451 77.7314 419.721 77.5918 cv
423.031 81.3115 423.301 87.8818 421.151 92.3613 cv
421.011 92.4521 li
420.781 92.082 420.571 91.7422 420.381 91.4316 cv
cp
.0797436 .400244 .584497 0 cmyk
f
406.852 104.981 mo
403.092 106.981 398.932 106.952 396.911 104.182 cv
396.581 101.842 397.661 98.1816 399.661 94.6816 cv
400.001 94.0918 400.411 93.3916 400.911 92.6113 cv
399.041 96.582 400.501 104.441 406.852 104.981 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
455.758 97.1279 mo
455.34 96.918 454.958 96.7031 454.595 96.4873 cv
457.33 93.0293 463.269 83.6982 465.331 75.4023 cv
465.66 75.6133 465.932 75.8311 466.132 75.999 cv
465.859 80.6465 458.052 94.7715 455.758 97.1279 cv
cp
449.771 91.916 mo
450.771 91.4287 451.724 90.418 452.402 89.0723 cv
453.37 87.1553 453.571 84.9824 452.989 83.1348 cv
454.555 81.9297 455.775 80.4863 456.851 79.1699 cv
457.252 80.8418 458.682 83.0039 460.976 84.1309 cv
458.473 89.2793 455.448 93.8145 453.752 95.9434 cv
451.684 94.5361 450.591 93.0898 449.771 91.916 cv
cp
432.312 91.2715 mo
431.07 88.8018 429.587 85.9258 428.2 83.5469 cv
429.926 83.1914 431.479 82.9668 433.221 82.7578 cv
435.422 82.4932 439.847 82.2734 445.273 82.6172 cv
446.585 84.4883 446.132 88.8447 444.442 90.1963 cv
441.477 89.917 437.513 90.0898 432.312 91.2715 cv
cp
434.002 96.8457 mo
433.237 98.5576 431.76 100.03 429.965 100.828 cv
428.587 101.44 427.222 101.564 426.206 101.178 cv
425.862 100.139 425.042 98.502 424.113 96.8066 cv
424.186 96.8105 424.25 96.8271 424.324 96.8271 cv
426.748 96.8271 430.204 94.7803 431.848 92.5762 cv
432.154 93.1895 432.439 93.7637 432.69 94.2695 cv
433.359 95.6162 433.803 96.5078 434.002 96.8457 cv
cp
440.892 95.8301 mo
440.901 95.8271 440.911 95.8242 440.921 95.8223 cv
440.098 97.7383 440.663 100.537 442.438 103.025 cv
438.729 105.169 434.006 107.169 428.205 109.056 cv
426.952 106.468 426.737 104.809 426.519 102.967 cv
426.491 102.741 426.46 102.506 426.431 102.273 cv
426.77 102.348 427.121 102.398 427.493 102.398 cv
428.402 102.398 429.393 102.178 430.372 101.742 cv
432.449 100.817 434.152 99.084 434.992 97.0762 cv
436.986 96.9336 438.969 96.3838 440.892 95.8301 cv
cp
447.884 95.001 mo
448.922 95.3574 449.626 96.04 450.119 96.752 cv
448.532 98.7891 446.273 100.707 443.3 102.521 cv
441.459 99.9805 440.989 97.0166 442.238 95.5332 cv
442.263 95.5039 442.274 95.4697 442.291 95.4375 cv
444.394 94.8643 446.345 94.4756 447.884 95.001 cv
cp
429.231 110.986 mo
429.02 110.622 428.841 110.289 428.663 109.957 cv
439.637 106.373 446.841 102.35 450.652 97.6797 cv
450.875 98.1582 451.019 98.5918 451.103 98.8672 cv
448.078 103.776 434.649 109.978 429.231 110.986 cv
cp
414.086 99.0664 mo
414.472 98.6172 414.851 98.1709 415.224 97.7295 cv
416.721 95.96 418.284 94.1309 420.283 92.2207 cv
421.028 93.4258 421.854 94.8203 422.622 96.1826 cv
420.14 96.6172 416.841 97.8086 414.086 99.0664 cv
cp
409.912 102.115 mo
407.552 104.442 404.402 105.888 401.694 105.888 cv
400.389 105.888 398.594 105.555 397.39 103.984 cv
397.129 101.77 398.157 98.3174 400.095 94.9268 cv
403.961 88.1602 408.947 83.0527 414.917 79.7441 cv
414.949 79.7637 414.98 79.792 415.013 79.8125 cv
415.032 79.8281 415.051 79.8438 415.073 79.8555 cv
417.816 81.6914 420.095 88.1914 419.898 91.1943 cv
417.701 93.2529 416.054 95.2002 414.461 97.084 cv
413.09 98.7041 411.673 100.38 409.912 102.115 cv
cp
425.593 81.2842 mo
427.294 83.6982 429.589 88.0918 431.334 91.5537 cv
429.789 94.0918 425.272 96.459 423.482 95.6719 cv
422.487 93.9141 421.481 92.249 420.886 91.2949 cv
421.082 88.4199 419.155 82.0361 416.199 79.4648 cv
421.261 76.3818 423.978 78.9902 425.593 81.2842 cv
cp
451.51 88.6221 mo
450.853 89.9229 449.901 90.873 449 91.1514 cv
448.114 90.834 447.019 90.541 445.676 90.3418 cv
447.129 88.4727 447.495 84.916 446.468 82.7012 cv
448.229 82.8369 450.084 83.0352 451.991 83.3096 cv
452.55 84.9355 452.384 86.8896 451.51 88.6221 cv
cp
461.81 74.8828 mo
462.857 74.585 463.72 74.6953 464.416 74.9473 cv
463.761 77.6709 462.671 80.5137 461.402 83.2285 cv
458.847 81.9668 457.581 79.2373 457.739 78.0918 cv
459 76.582 460.2 75.3447 461.81 74.8828 cv
cp
466.944 75.3711 mo
466.776 75.2334 li
466.091 74.6611 464.267 73.1396 461.535 73.9219 cv
459.325 74.5547 457.835 76.3828 456.256 78.3174 cv
455.138 79.6904 453.971 81.0996 452.448 82.2852 cv
452.346 82.2598 452.237 82.2578 452.135 82.3008 cv
452.126 82.3047 452.12 82.3125 452.111 82.3164 cv
444.687 81.252 437.251 81.2646 433.102 81.7656 cv
431.221 81.9912 429.559 82.2314 427.658 82.6367 cv
427.224 81.9219 426.804 81.2656 426.41 80.708 cv
423.46 76.5166 419.828 75.9102 415.316 78.834 cv
415.257 78.8008 415.2 78.7559 415.141 78.7266 cv
414.995 78.6533 414.822 78.6572 414.678 78.7344 cv
408.438 82.1289 403.238 87.4102 399.227 94.4307 cv
397.147 98.0684 396.07 101.831 396.416 104.249 cv
396.428 104.33 396.459 104.407 396.506 104.473 cv
397.639 106.03 399.481 106.888 401.694 106.888 cv
404.701 106.888 408.035 105.37 410.613 102.828 cv
411.229 102.221 411.791 101.626 412.335 101.036 cv
415.385 99.4111 420.146 97.5547 423.137 97.1074 cv
424.328 99.2744 425.279 101.212 425.381 101.94 cv
425.436 102.334 425.48 102.712 425.525 103.085 cv
425.803 105.42 426.065 107.625 428.546 111.793 cv
428.637 111.946 428.801 112.037 428.976 112.037 cv
429.001 112.037 429.026 112.035 429.052 112.031 cv
434.588 111.173 449.04 104.541 452.08 99.1787 cv
452.149 99.0566 452.164 98.9131 452.122 98.7803 cv
452.081 98.6455 li
451.81 97.7451 450.982 95.0059 448.208 94.0557 cv
446.034 93.3105 443.401 94.0674 440.614 94.8691 cv
438.683 95.4258 436.688 96 434.736 96.1104 cv
434.503 95.6699 434.086 94.832 433.586 93.8242 cv
433.337 93.3223 433.063 92.7734 432.774 92.1943 cv
440.974 90.3691 445.926 91.1094 448.678 92.0977 cv
448.775 92.2383 li
449.934 93.9072 451.52 96.1924 455.625 98.1777 cv
455.694 98.2109 455.769 98.2275 455.843 98.2275 cv
455.953 98.2275 456.063 98.1914 456.152 98.1201 cv
458.372 96.3682 467.13 80.5498 467.14 75.7686 cv
467.14 75.6133 467.068 75.4658 466.944 75.3711 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
382.171 55.2314 mo
382.581 53.8115 383.441 52.3916 384.381 51.332 cv
384.491 51.4316 li
385.911 51.5918 389.73 52.1221 391.741 50.8418 cv
391.821 50.8516 li
391.781 51.2021 391.641 51.6016 391.391 52.0615 cv
390.932 52.9316 389.901 54.5117 390.321 57.8018 cv
390.401 58.3916 390.311 58.8916 390.111 59.292 cv
389.161 56.4219 384.161 55.1416 382.251 55.252 cv
382.171 55.2314 li
cp
f
391.741 50.8418 mo
389.73 52.1221 385.911 51.5918 384.491 51.4316 cv
384.381 51.332 li
384.831 50.8213 385.301 50.3916 385.741 50.0918 cv
387.901 48.6318 392.191 48.3213 391.821 50.8516 cv
391.741 50.8418 li
cp
0 0 0 0 cmyk
f
382.251 55.252 mo
384.161 55.1416 389.161 56.4219 390.111 59.292 cv
389.201 61.1221 385.871 61.1914 383.831 60.0918 cv
381.871 59.0518 381.611 57.1416 382.171 55.2314 cv
382.251 55.252 li
cp
0 .919585 .825986 0 cmyk
f
390.846 52.0156 mo
390.35 52.9258 389.431 54.6182 389.824 57.7979 cv
388.158 55.7773 384.729 54.8828 382.867 54.7646 cv
383.262 53.7324 383.869 52.7441 384.536 51.9385 cv
384.636 51.9502 li
385.362 52.0371 386.535 52.1768 387.793 52.1768 cv
388.873 52.1768 390.014 52.0664 390.99 51.7363 cv
390.975 51.7676 390.961 51.8018 390.945 51.8311 cv
390.846 52.0156 li
cp
386.844 60.3145 mo
386.844 60.3145 li
385.861 60.3145 384.849 60.0742 384.063 59.6553 cv
383.032 59.1055 382.479 58.251 382.419 57.1143 cv
382.396 56.6719 382.465 56.2109 382.569 55.7471 cv
384.501 55.7676 388.587 56.9883 389.551 59.2451 cv
389.511 59.3057 389.477 59.3691 389.428 59.4248 cv
388.93 59.9902 387.988 60.3145 386.844 60.3145 cv
cp
386.025 50.5107 mo
386.94 49.8906 388.34 49.4736 389.507 49.4736 cv
390.366 49.4736 390.992 49.6963 391.226 50.084 cv
391.298 50.2041 391.332 50.3418 391.342 50.4893 cv
389.756 51.3906 387.013 51.207 385.381 51.0293 cv
385.6 50.8281 385.817 50.6514 386.025 50.5107 cv
cp
392.082 49.5693 mo
391.658 48.8633 390.744 48.4736 389.507 48.4736 cv
388.135 48.4736 386.549 48.9482 385.465 49.6826 cv
383.713 50.8691 381.266 54.2168 381.42 57.167 cv
381.499 58.6563 382.25 59.8223 383.592 60.5381 cv
384.518 61.0313 385.703 61.3145 386.844 61.3145 cv
386.844 61.3145 li
388.297 61.3145 389.48 60.8779 390.178 60.085 cv
390.328 59.9141 390.448 59.7246 390.549 59.5254 cv
390.559 59.5059 390.564 59.4854 390.572 59.4648 cv
390.812 58.96 390.904 58.3779 390.822 57.7363 cv
390.447 54.834 391.246 53.3701 391.723 52.4951 cv
391.828 52.3008 li
392.419 51.1904 392.504 50.2715 392.082 49.5693 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
348.92 99.3809 mo
348.457 100.621 347.95 101.754 347.137 101.967 cv
345.9 102.306 344.523 102.337 343.523 100.685 cv
341.73 100.458 337.273 97.3682 337.059 94.4023 cv
336.851 91.4424 340.513 87.1182 344.262 84.5635 cv
344.368 84.4434 li
346.186 85.9453 349.295 87.5029 350.256 87.666 cv
350.348 88.0254 li
351.833 89.876 353.67 92.7266 353.214 94.9092 cv
352.76 97.0918 351.803 100.216 349.455 99.4277 cv
348.92 99.3809 li
cp
0 .167361 .439734 0 cmyk
f
355.059 79.9736 mo
354.453 81.7012 352.992 83.9102 350.256 87.666 cv
349.295 87.5029 346.186 85.9453 344.368 84.4434 cv
344.18 84.2891 344.004 84.1377 343.856 83.9873 cv
345.145 80.168 348.171 75.5938 349.441 73.9688 cv
351.39 71.4619 360.685 70.5869 363.876 70.2939 cv
364.031 70.2891 li
364.115 73.1836 364.695 76.2139 365.53 78.375 cv
365.35 78.4414 li
362.955 78.6689 357.059 79.6943 355.072 79.9746 cv
355.059 79.9736 li
cp
.433509 .775906 .674159 .526574 cmyk
f
362.551 78.7998 mo
361.072 76.4893 360.084 73.3281 360.055 70.6914 cv
361.611 70.499 362.985 70.375 363.876 70.2939 cv
364.031 70.2891 li
364.115 73.1836 364.695 76.2139 365.53 78.375 cv
365.35 78.4414 li
364.659 78.5068 363.666 78.6387 362.551 78.7998 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
366.152 79.7207 mo
365.936 79.3271 365.721 78.874 365.53 78.375 cv
364.695 76.2139 364.115 73.1836 364.031 70.2891 cv
364.01 69.4521 364.029 68.6309 364.091 67.8408 cv
369.371 67.2041 379.383 67.3916 380.904 71.6182 cv
382.595 76.3213 372.175 78.7451 366.152 79.7207 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
337.559 94.3711 mo
337.363 91.6494 340.852 87.5498 344.391 85.0918 cv
346.102 86.4072 348.643 87.7295 349.86 88.083 cv
349.871 88.1729 349.896 88.2607 349.958 88.3359 cv
351.178 89.8623 353.157 92.7344 352.725 94.8076 cv
352.256 97.0479 351.604 98.4209 350.804 98.8799 cv
350.453 99.0791 350.063 99.1035 349.612 98.9512 cv
349.609 98.9512 349.606 98.9512 349.604 98.9502 cv
349.609 98.9346 349.614 98.918 349.621 98.9023 cv
349.807 98.3799 349.992 97.8555 350.197 97.3916 cv
350.309 97.1387 350.194 96.8447 349.941 96.7324 cv
349.689 96.6211 349.396 96.7383 349.282 96.9873 cv
349.067 97.4736 348.873 98.0195 348.678 98.5684 cv
348.225 99.8477 347.707 101.296 347.003 101.487 cv
345.553 101.879 344.639 101.563 343.951 100.43 cv
343.872 100.301 343.737 100.214 343.587 100.194 cv
342.001 99.9902 337.752 97.0439 337.559 94.3711 cv
cp
349.835 74.2715 mo
351.028 72.7412 355.644 71.584 363.557 70.8262 cv
363.674 73.3467 364.152 75.9336 364.871 77.9902 cv
363.107 78.1836 360.137 78.6641 357.699 79.0586 cv
356.953 79.1797 356.288 79.2861 355.74 79.3721 cv
355.996 78.2334 355.897 77.2051 355.508 76.0146 cv
355.422 75.7529 355.14 75.6094 354.877 75.6953 cv
354.617 75.7842 354.473 76.0635 354.558 76.3262 cv
355.434 79.0039 354.803 80.5469 350.046 87.0977 cv
348.866 86.7256 345.981 85.2178 344.438 83.8379 cv
345.746 80.1797 348.615 75.8428 349.835 74.2715 cv
cp
364.561 68.2891 mo
370.537 67.6396 379.174 68.2832 380.436 71.7861 cv
380.814 72.8408 380.486 73.8096 379.43 74.748 cv
376.741 77.1367 370.28 78.5254 366.428 79.168 cv
365.129 76.5811 364.337 71.9766 364.561 68.2891 cv
cp
343.22 101.143 mo
344.592 103.174 346.592 102.634 347.264 102.453 cv
348.225 102.192 348.787 101.107 349.262 99.8809 cv
349.271 99.8848 349.279 99.8955 349.291 99.8994 cv
350.02 100.145 350.695 100.094 351.3 99.7471 cv
352.381 99.126 353.168 97.5801 353.702 95.0127 cv
354.189 92.6846 352.398 89.8047 350.789 87.7754 cv
353.258 84.3799 354.725 82.2041 355.41 80.4355 cv
356.02 80.3428 356.872 80.2041 357.859 80.0459 cv
360.275 79.6543 363.544 79.127 365.237 78.9561 cv
365.39 79.3135 365.547 79.6572 365.716 79.9609 cv
365.818 80.1465 366.025 80.2461 366.232 80.2119 cv
371.004 79.4404 377.279 77.9961 380.094 75.4951 cv
381.81 73.9717 381.738 72.4531 381.376 71.4473 cv
379.619 66.5703 368.26 66.8311 364.031 67.3438 cv
363.927 67.3564 363.833 67.4004 363.759 67.4658 cv
363.665 67.5498 363.604 67.667 363.593 67.7988 cv
363.539 68.4492 363.526 69.1318 363.531 69.8223 cv
358.441 70.3057 351.758 71.1816 349.441 73.2402 cv
349.291 73.374 349.158 73.5137 349.046 73.6582 cv
348.021 74.9766 344.783 79.6748 343.383 83.8223 cv
343.322 84.0039 343.371 84.2051 343.509 84.3389 cv
343.539 84.3701 343.574 84.3994 343.607 84.4297 cv
342.946 84.9014 342.285 85.416 341.649 85.9814 cv
338.771 88.5381 336.377 91.8799 336.561 94.4424 cv
336.792 97.6611 341.207 100.69 343.22 101.143 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.1
%%For: (WINDOWS) ()
%%Title: (Boy_Slide.eps)
%%CreationDate: 12/15/2014 11:29 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bli@DQ6?%;,3hDR(J!-L](-IV$'Nm\'9VTtc]jc8q0%+ZA"k/?b&XJ`P%mtEol^<2G?-7?;kc0#;eAp#-5$H4K7gMji/98N
%k>u<:-YL3<ci<gmM/e_\-I4&.>teSXm,a-Y^A,1$+1IkHQ)8\12-A=&D.QA=SkkiU.e0+0c-$0,>b3$CIGCE"rbuk+[/KoJEIN4_
%nbKAP`UB;&ag[aHi1&!Ps(kJ,c[VG.:H(eY_EG5Db.$]#e*[#0ioB0AihdS.k&9MH^OM!MTE0EnjklRKSR*=TIt7F*a5;8tmm#8[
%eQ_n>Ap\e0]nWF'm*XhIs7="chY_MZ9rg%U#6)67EHP#p12AJSBen_+ad<&'j7\h'c^,H;bEMP(s8*P>1],13O5=\;D>4K`&j-<"
%0B(*rEr1<,FaD/8SV129p@>6j2Y$fA^Aij4TBRsealm@#Lg9l"e@n2O<sF.@[I-,(D^R5or1"jX=Q2+f=)cig.,eql2jhkmYiJIB
%,Qdb=mDi##S'*BX]IgH=b]-Y"hrqaSKo)R>Y=o,H"&-if4*<0^'?:7V=8FI,"9dEWj(/&A?RPl^h&L>d":o)\QZ#Xu)s4cVTMoDK
%`BR\"DD2!<G&dnNF&^`[>^UmI]KPA5QJ:#h)k?aA5582pr3X$0AU=a)I=?Kr;t8I2S`s(e]DD;KoDA7@ZSpIKrVk:>m&0H)ViJJ@
%MJ:YOC=3gFU<3MJe'(N[<]:"dVpf8KM(q^]S_?+_Kam8k.\*I[!+3LU3;M[sm'!U#\-TcGE;=Dg-cZ7Q.m'a+%uk:,8&(&_8uD[m
%Q^?G_*JLb:(Z0t5Z>BC))gTG!+0IfA4568J#]2`HTmc:X*0C2:\[gJqZu[)J^MX!2RK%_-b:J9IT&X1F<-U80r`q(^1sb]AT&[;*
%No/tZJ%K%9m<kCE=Nrl(j;_3A%]_V!?>H<1K6<UelSS+*gRADJ2%<U(GPDuT/J_H*Z+sQ[$iFVA^cLd=I_/oJ8%5\R=CJo*S%-r&
%AaU-pPJ>(@p%pk,g[Q@d_f=XBXG5c`dIMK@./]!GE)?=r`ie7XRrM^.(I-lOn1Q]=^uD52;#$BsNc2-=a+[<#QuW_A)@d5V@\*01
%bB0&Ko*f>f-%cR)nuY$#*WUDVHcOI1cKeGD'n0RK*$bI%VKa;1jSYQB*597(3(BHQ"qBIKA&Q.W#m\OrJ:FEe=G21/)NGF0nmjMe
%0Q=Q-pe8X1lF^Sh:*"P@@?8qUGR>B24V*'(cX#QYF5&`m>X`"%#7%1eM?B[/H0"l\NY2;#29'bY,K#4R`kPU\#7.dhQKq.PnF8:O
%dhSDgBb^$7o8GG`'Y6hWDAi<+5DD<cR=Rl!f87oFEVH`,5+e>-#5EOo8`tAm11p.51Ouul28'il_s6E3i-&D>@@\jO_E)'uf/4*n
%O_t]^Uan[R[_b)L#51X)8[eqdBQpl-qIFK2D`&l:(]G4KC#ihWIhhtSX!maaps1V']e$]Br9%-]n`TD6?ZjVcle4S:QIfrm?\SOX
%Ra:eNps1V'IC\F5n=O'g'n6_nq3CcBd!;-Kr6+]TTCilta"c:W;3^BX<isu[H<++jb*A9AQdp,i[(.hs9"D"XXG1X#RNVM0MtA@o
%b09?%^7gqSY?U%:Xp<jfnU"et2&:0Hr.TS6:kI$<\ERsZBEGq-[6,H65ZR<R!#rETr\#krAO-d9:l?8ZR^Uf1;8mh9l0uWi8V2aI
%V=V-IgRVB]?Z*V\ckrH:"KN"b$ktA)S_BN@kI?p6^3DnBX2%omF_hb1pXQ?sKV6UL@\jpGGj3FO9=VZ@$!ZO>;Di].%+5+dkrc[c
%2"7mp7&V)Ccn<5BZdM\+L9PPro<dnb%Q@@qU7UH$P>G2tXrVOuCM)7/21qTAqtt:>8d6mIVm0<@Z*"k$8)!cNepdf$`s4;a_!T.E
%f='[O!!l6b[*>6s))U/7D_gSe2/Y3eN,Hu(#eEG,c`__].YWF3$dFr=[kn3qX"2IM[&H[:\+"n2BX:f.j!EYl_^LMX&tIQVjX4Hj
%3/o`3e#;0D(haBY?P"kpj%N?n+q-Fh)EY*U!ihO4iLHC.A[\<j\>IPQe9T&V"I7h/PumIf"Z/P!Wa;hkGe%gc\5L>VJh]:hS)/Z@
%D)%du>'9U'>ei@3(!_T-%FMHbcFm\RoVh=2%VsH*&MeA3kr_)+q-$h1_H_"+*&":8KE7pg!PsCD^)_`i/_;aq]ENk!1B^[bT^!EP
%4G3YraYR>DYTe)/^lsac;fXrD/iNc`HnGk-fDn6r)rTI&G+<HuRph9k1IN!p!1rY$ib#'fE%isljil*=fn++F'Y67+#U!>+`Y$cR
%@K*7\*`>6uq0'E-Wc:Pn4Z9PLFJ8qj:K"PdjJA9jB]?Pe%%')KiJMQE!H%q()gnB3QH>!oO4aiq%eK(,(")#WLh2kH<2F_.2AMaJ
%3fgTXFXii(A-q`nK9H?JS]Pn'F9U$p6/5tKi:q:)M;$mP`4%M%ibT:927WK"mWA%-5Rb>W'uBG[:77pjdZR`'`8MA%U3d5:,adm9
%#7,IKH(qZn,@_b>Z`JJe&\toZM.e%S&qjT8T_:t`2'>JFdf=>ni1r&E(PS\?+t0E[V%:F'YXg!P`K^]A^($YB0:ZUb.DqY5(6n6!
%\5[!.149GaNmC#dF/s(C$sj1KXq9%Nb>;OjAq3he#\=$m`1S]E+CPY^6l))g2Z[LK,;r7EKCoPt235GE>8gYle36(<XW>9fU+6Uf
%$3oX+k"UPm1Z07U.mQt1[`X]CeHAKU_aoJ$%tn[Y>[C75ZoE61MMU2eW<L0YT0bIh8jg;-)_u6`%huR5jb^&)3a^MS_3a7D7ZJ4,
%4tC]aap(A^oFRk%R3f*LOWGF>To+Kf252NS9W*I[2;k\FCa`N!N*rl#C:!KS0nVYt"m?3jG9kiR'J^if94hqg-bLJ#felgVQ8@N.
%9&]$L_rp5mKj'L_#S/@s9Ib%12:-s<-J=>L&\Xh6AVBPU\VqR7c'0cLi(\A`@bD*>`?GoNL,d75'&[@aTXs(%i&u*BHu.`,7O:[F
%C#lFgqGoETX)+26j&@+i_MJ@U_a8OrrIXlsU?RgG'@@hh8=8f[h4Bs\><,',QOO8a-*D+MdsB#@Y7YUhFW!(sft:jkHT7oMkHTT,
%"o8Is;%A".,].SZUbV;*MSt4c\!Tfq/AkU[MV-hui\k;$"nQ1cLLimVF=g/XS"NMER>4%c'k,E_f*-a8k+C6edPdn@b]J+b,%sSA
%F"l3+d)L%74Fo8-e/ie9,13HWoh<+g[T:hDbY:ZRaDtS.ZX'\$5:mbVKVo@bFR+WL.YKt#-Nh2^$!"O=`6+%t!0h_]V336?BN5u3
%q$YrMPe3`r,CNGMTZ-.0l\M$&;i#@rYU]&S_S.MQ7U\mPJCZL@1/AX*I$1iP]'^DS@;&t$j(]is+F+Sb&LZO;YTV6W=OT\!T%+*[
%Qc[1N*$l$)eEPG:'^MI9lPU:KU&m1[-Nk^5G\F$P3=[Q?:3m$kL#4B>!e,rmY(E&TgsWHQ0aW+WCH<jL+tdJ=!&a"\b^bd7CI:c4
%O=]Y3&E[)M<FfO-9]u?uA3RHm5['IJJj^g7bT)NnUkIaKO8t@n,=q&HX\uhRqr9FBk)B*[NkIdA$gZO:3n%ZWg_FIRVN;arH"A[c
%H,X>G0+d>J,'Ye\Zk8`1U4tKM#-\@\d[?!TI5[jSMSm6T;'W`L8tq&l8Ba\_=G=0,7)Q16-*sJ9X0B0%2]K8Lc+#EtT@J6D/<,g2
%<`tT^=_at1JZWdkoUc7B]bsm,&q;1]g.d;%M_01Y9F4'2+<lSX6ota'D4r4(O=6Y^j>B%]-55?+6uimSLmAEdB:sefda1[T$7.7A
%$@55lAfj[UN1a$HMgipp8Se`L?=g3qEGoO,+qZ)WJV>fk:m#3!Z)mc7>#so\N(mZ\cAp;Q+`A1[+41\nfm>i1\2Z]9s$aX2+6^<q
%gWQWnilRmG\)3ao%4>fP<I+E"48uC3qnqY5I/170o;b[ES@q.:q;TTNnbKfajJRp\&_*=us6dY18!dRW^6F6=m`j;(j`\3qq=N2H
%9s%2M(Y]7G$b+STq#;E8&%R2#I=H_90f6\BX0[:l:X;6o%Ju=5g%",f2A`!?2#bDWk%o)nTeCfJY>>,uheW9pU%M5?W7gRWk>)(;
%\r#^Z*cXo.kc7"1g0B)obYP]\a.IeGr3=dt/f`=#S)6HE4$Pn(r6[G?Qh^:WH[!$63;`]6]6SDhq8;9koCLE2#d,:WKh9"gjEpU_
%+hi!S"5qB$D1&TK4[&W&@e8j%a\cFB4l?,AmC7?O(*+":qjs1(jWE'e@m?Q;J:;ugFpthkeI.I#s7cnQ:*smCCd)8^em(^&6bDGa
%+OVtVIeDuPnnac:r%,#A[u8N$#r$nE!Y*s*",T46XH%e`Ea/r6Up"m':%HF(puRG6I/+tU3\gcb]*]hpHC*50qXCh*PrGAli]E?*
%[\PZg:$K13Q3FoM-==EV?T`:;;<K:[gdGA9BO_]mCSFNtUnrp=PhEuc)7G=*!cK0Z\bYCnkumhT*@i55?OtjBmaZ\&Y[%ia#82Nq
%4[5G6Ld<)GIm<bjC^WlKZ+-tS"&l4Ma&Q1%\Rc=_%6>Ti>u=W++X)Z#VB@_=WhM?BV?!$VMkIg%gS:_AYL$jB'^'@?c^X`H^7;AB
%ftr81==hT`[AXnJ`I+pY>Mdd\o4>0X8SG8nZR&R?#NKj<b!>:8=2h1E\J=aF<NYQ:$nc3%/uTsha#,9W)-hnK.p!2sr[m>>+]g+B
%iW%(;^9i]2j`4N#NA#)gT7Rgrpf3q6ojio-Jj*Yik1%Eh>n-EDYDOq;=%QHo,JsmH9*88(!dUE@'ff@s3!bA-0*!1*^niCQ34MS2
%<WOnt!HN?t!.l'qiV6fnM4F",%DgQpSC,.8!9PRm^-IhYjbnhHR4o"F%H)hu_IMMYq&JO2#.%=U/%?SC?3t\?cRiBUh>`[O21s*!
%V>i.!J=9`0mj[IM:2L]p>!\cQqW-^%&28Oqrt`<ahc%VR>b2!mSuq*-quVu-4L]tEj#_eDC^0?@Z\Eqp=[g*eXJ"I@ILW=GZ`I:e
%C\V0nF3l]*9gcZq",jT:S"d/^%_nZK25\K'&sr+"!0)14^NEhujm&QmlQ!:[X9KCEVJ$G>T2j6'L!!$hb$/0i[#V[S:7bZLd%"IW
%E".,ei@:@?R59AT0X3<+ZP"100CT/1;jinRZ,-eP0['lK>QLmd@KUFT$3Q*qJk6-i"(4(`/?eZ&N(6<So/nsWL.4a"P_G[Ej><Ml
%K$%_s/O4G.FB/Dt,s[/;$]m(C(PL"i>lk.qVQ"Q;!$+SV629r7!HcnKU&Z3e%u_&!9%8EU$TjE2ZF(iXXU/<eTE;BQ!Z99^#_N8i
%=b*#.6am/?&!kLm/q>$eJ_f8f6+"<D\2'DedUG0[&htpfJS%4;1o5al%a,B=eUf=a!NL"HY$dA8'$g]`#hag(^_!YaJF$/V4%#s\
%HpNi_f]EmuOV'l__ICE:dbq>=Fhm''lJVn7M\\K/WbdDtb^]t32!Jtq=s^TTQ7ne/U(fW:#bhi&U's^18tlNUVuX"#)6NcKf,(Qd
%3NX;,X2P,ei!KKO:[93[J`(@jlNUAi@_Vrl`cG6:^([Zq@?,)i+i82c(S$ZnAjc&+joDV$i84P,*PafCaCbMI-/^SsgC^fp^j6%V
%3tprag]dHkK()AT$qQ<E>sO&[`gMVP_F#4"N0#B>&QlrGjg+k@GekAejLY'n>.i<i4KC0=E7l8`Y#j2fTZ)k_e:4TD>g(u>JJX8`
%dCJC$Y1\i9M(`NsI&_BqeW.iG?-m&kj!o4Wq2S+P7FnJUj%n"O1TLL!K\m-T$`mfN(3@9#`+90q",UW"O>P8agL3YUhP7<=5t-1_
%YTf1+PQ/eV5`6PT9642o$bIZ:Y_MQig)t$Yj[OX7_)eWJF!0q=,:A'8LQl]d6\`WKUKFoPJ5a?8F[.=:=uJW'.EDei'$sMfW"=%T
%NOWpB6uO*IFelb]1)F'i$_kkGE_R3T*'ao\6Oo)"+*9osCS2P9hrdDlQU(.nqSOQsnoNs3(XN^dJSrC\B#J[*kjbU%VH7Qo`,JkP
%9*K<Jj?47I+^eZq]B?u)Q6_]s$)%dtq&K048\D1BMSSUk5k@70!:C'n(eP-gQj/+6;?RKQO`XHaX>'gG\H'd_S?;^jnpD??QTUIk
%T>d(f_;*@C9f"`[=ee";)1ss=o>S&DoJ:'(Q=P_pIX$%eIV&pO.uhiqb82oY`m9A1o.\cVO;Z,&oP4t_KKI)A+V&qmn=Fo-Y<ABn
%b*@bO_SarL\2%#&Kdb"i/!T]tf$$RdW'mtZ"7H<Y@_O2f_MX*,8B5C7b?+c%>EPdk<7_-,kXaHA8DdNoID`uA#G=U4g'2:1CRWdU
%_dOuROKu9!,5Ms*n3u=rMUrJ\far?r\J-^;(Wg(h>sT74/<>q#W\W7b0QKa*fc6J*frXnQ),"Tb])q\0J@cC"D+-32b%PjZ@I^4`
%,["@sAKmfk6!_C`Z@k+`mLBt?KrK`kMhICYCqCnE(.ES9cK[q]ZRD;oKH"I.)0D#f1Dk6[Rq4.?!T#G"12BE9WrT1nOUqrC#]#UJ
%(:qeIp?;rVY@6-u<cX>>_s3+&J,hhb>)OXcRR/X(]"mq%SW[dLGAGObE2j_mUZTFUAcSpJR1LM9hh`mS;MO?nb"KTYjt$[X47JFr
%i?6_CNUSmJ-(3pFiW!E0-)TiYomgWuUS!%4FpsA)T^c(dT,GI^Go)nT1OKX3]F.F:XLj3:hM!;nb.*0UhM!9X4h-4r?;D6JAqtJ!
%k`X;l=DPCAUU-!*H?Vq43GP[j(AT.P1C)0bX9AB'd']*R72K,Bem@k+V+3kn,+#@'X/$-S5HAq.#VLoq8L.KWA9/oTOUVJ))Bin:
%MLqPQ7,'MlmrSSQ-cM$\,WT"#$F2AE77oPm;V9i*',TSbM)>f5*lHCnclsESfKun[+de+EQ&G#i7)$UZK3Z@Z9V@Y#^30h<r\E)4
%042)f;sc*Mi@<P_b9"Z(ZJCkZi<&]R/QUJ.osIlMG<q/Ge*Mg)SmH:5XgFgX>.!N_=,L`k%%nJ';u3HtduB`8..)g:Wk'M$!rW+%
%MJ5U_RSDns[R=oP/sDJ=:r[N-8-BAn%!/*u/DI>K'#mh:&K02H.>28q;WSUT>$130aPOqbmp+qD+SVf[PYrW"LV0.IEj>>qa5gb;
%(JAkW\BK8:CErh[r)u+*Qa<_fad*.^7R]ds(0OsOa[%djeqdI9<f)I9E8NP(mofBd\V6grOBQC^C1\[M0WA[tXMg!4;J8(qIe+.D
%:FZ;ZCG=LpS[S\?Df8pC,g4b=-[&K?1?qIWe!X;H5p?K6,C,O?W,%M^=TW1!ZP:O16rKr*S3c!WBp3+&clEoHC[R?B;`V09A#9m9
%,Q0Nd0M/u(gKu26W)B]o_=jcBWS6+&o%5Dqo:^=VS/9e^9!M)_m=((k_jmMcD\n3l#,UgTi&=KiJJ"*ig3XB3i^Hsq5/piE7fJ(/
%kBOE//?!d/$(k2"R<q_^<W;8H%X8$)'2H44hM6gJfJE%bnAW&R&t];6V>![u.Nab-_MX\sGQZCJq^Y]Ri`M$"JmU>(?o3PII$#*F
%)"#9-:l9H_r=c`.KM9bU@SKU1U<QDMj?C9T/)b$jo=sTN-XIgR$SA5%fCSG@s)22I#b]0&,`(dJO'PXVpiM,ke<ZJJoPa&lhbk_#
%Q@NTlRk@\b'hQo$q6LbcJ_CDqaoo@Uq/RbsK1r?Nek;1&QQL!]5F?dhE>?TNYV'A_`fd$^$,mk)T#!m`jP5)?e[rBa*l^)7*!q's
%ioO-BcR*[<=2*-$0B;lI^Ec=hZg$Y-TH64clIh\a2q*U"dh:b.H:&BY#r2_$8%fF(.@*@0K&6UBO1:(8`t4#_FEs[XBF/0e("-46
%qCiU*[6CD&"jpi0qN*nIh%I+Z[TF:ja0DI]7Qq$H\eVJZPi11TM71NoaDPea*a,a:<apbf&4&^0%673Z>_k7#[QGap>(W9!ee44o
%OGc-i$eF;`>d2hAA?no,M("LkO0K:h,A:l^GKJ]4p.W>A0&B4o>ZTk+CrEZj+GgIPXG-F6=6pGdaU0sLOG&mGr@n"DEMXA@$L0#%
%=&C+Z+Fj*/Ldtg[7;c*_8CO<,SsF[/n$Xl"p&gVSWlTpFEm[KqX!Y+sP[[.MM]IANj(]NW@MrgZpjs?Og(EfXj!0LlS=1%*:eQ%l
%<?A?^rlr$*M0&i<q$)7T7dNV:"0m1lnlHU`k1t8u_eUPVDr[r-_;a9=R)`A3X&14k&_,\fHbSTN*FUB8JpM;BP0?li?jd*G,[IDb
%(pQEs"bXDXXPWFbggZmW-2:cq1K35?!5Td*G,SRqG&qS]C>5N9,1U=e,&7m<H.<\L(rUSG-b+e4-#/[G:HHoL#u`tZWB_q%XB74%
%!En!9SiA*4_j%$]H!\>B,%[`=<h@e<)5&1M:lcpHNWo:;Lb^)9^rV>%U+26@cA2]LpTm``9s`"mhD;4EHrt5m<u^k\"YBrWW-dq&
%_tElnfV\s+G5Zg#r.<1R/+GPbMrE,;?Y.iia]GZ!PUKN2[EIL7$eY"OIA6\ojo:<f`/u?bkr#r<pHLY.@hn!=0][OcMhaUs$`S?D
%+E*\0W0kN,&:5/G4pBth]@<ao)BS-f5i"9b6T%%"/$Q1Sg)fR,Wps5Kr(-boV"k#p:?+Q,")RcN<"EM6:jieS$`Z,+qB3i3bfF/6
%=s<3cWYr*[W7iE\LT2MtNi:>KX="(IV?dBc@:3qLogRCJ/c4s)CKtJ0aJu`ofk`:GB!GTQ]O\GnafHXkcg?MrTm/;RJN7%qUI."5
%N$H:/BFt5,l*UiQh'.sUTH]l@h(8[N,PKgomVWVu=J1[Ki-L;HU>\4$5UK5DWj`Zj-Z7"_Jp[o/rY^F.l/H'3Tb,h^\ePhG%>Fh`
%CHt1QZ:4o.Ga[a-b[JXp($B,d8XoP6Y#9k`G_rKmE(sdP)Kg/,c[D0^m?bI<qLZX5?MN(VI][=IPlrXo_9PRSCM:k1d`LGr`1Tg7
%g&qH(TFp?s6kTKqL+I_2&2?d^Ntf!Th;o7d[LuO><$>4K7,TB:Atd^&PQdhDGPe=X?5'A8R=4=b>j!+X%C,mm/U1h*89])pLZ;o&
%;;c<RS`)R@P<ou83XW]/Ep0Vb1KZ(@2,XhfZ19=r!VorVM-g_j?)'PdQhW4ZGbE#%^[#-A3rr]&SXqpB`VB=Lm5">+)0-p"%CnRS
%`g9f`c;h^K%D8L@94Yf"X.NJQ;M$UUg!:.XA]bpUM4o2i`-HP+1S`6D+KHftJ>%Kf@GULd+qblEQP/Wl^U2.MjCHVE<c.ZA+d+u5
%7AKS8"T7Su&AZ%#.LT47'GX9jJc]R2fKb.C-)idB8381R\0gK<P8[EsYZ_@7X^GEGaHmSb\g6Ql.TK4%LQ3d;ojP9KBKN,"`#6r*
%U]o>)g9*EG&?UCOJVf'`KW]%&F"h9%XM;i7.+hGN.N;"/OR0M:KN;Ud8Js'_:?LCMJuX#ijt12J$Qk=1&lV4K]qgb6)9mOp<1*iQ
%2)Mih#TJB[Jfok]MioKl+aUci!Lb=>ac%@K+F8ld''Z/0b83?9P63\)+Th<](Y[ZN6_SjulD`]o^hkkn7.sg$08dOJJT\(.e$t-J
%C*6mJ""*krm-^WH`W;A9&?6Is&kHP\J5E?ZPQ:LX+JDs^-iqo[K7munTEN'f#78ofJQf:t#)6k]6'Zj*g9p3J^ZlO_?oo)T_OL0I
%PKP6gM*JrU.g\X:Y9pelaYe!BMf=g-Bpi5,es0@u>P`\-4F2Q,)d[f1(!0Ia/sfgC\4AT^>?@"nidm*k.9CtA<:NtE.r6^X-JNbn
%/UXehb)[<UPqhAaCprtae@onkXG5&!"pbO/eKA&=L-o/3*1H-1J>`LVCe!KY=tq?:%FEI*%Ba9[U@Y&`8/6(ghoqQ-(MprX)W?<c
%%=soLDUn7?LnetBXTmY-8KM21Yigms0f;C'$<G6)7rfHL#3+4j0KJmd\4^b3j:DNGUBK_ZTou],89h9AkT]]a"CDQol4#I.OZQmd
%YOfj2hJZZQ@8`!,8DTs13%-pJ&7'3(lHl$Q,h-J`&P&VT/S:a2X5ddZ2j<JaZ9fPI7U3^>E@b,_;7bYame84.Wp7&.I9,rP'_2j3
%&`^>sc"-EFT02+$S^0jDS$PLLOrULk/A\GVJZid'<$A:=$LsE*,Fb-D9@JbV1neOC8BS^o8V%==fiGKNeYL'UT"+_G-YWZ3#Y>sL
%hROtYK4U'sbj15M>,@9@P!9eApg"lTR?P0AO2=8c@',:BBimsBqAZ5n)eBeFfiWB(b8[V'FdM"/GgeO^iG/":(7Q=GIH+?#?*kud
%MY:'tQhMml@,*.C?6H!R(cR=_'$08=`f6^C##"S,&PXD^n!tSl4RAWsVjH84aaKPQd:UfC^OlU;ca'm8@OD)MALkpI8o.WZO_*pN
%'GO'WZ2Z"I`^Z"e@T;ZRa+(YKj%lP6QS68k1)#dK4oQ-cg1F:>SQ"/.L:Vi3'E!R7Wk4kVN$Z3l]:$6(b;6M=-W@ZZWUMB8ILY?(
%A[KR>\".8sGVkD)bn88>b?*[Xce2M4kVFGJq+A<\L#DT^r)rA*BA?pfpe6+pJg7+:[q:T4SX=%i/NSamfs7e[/]u?k&;f=9N*dL.
%!=2I8CdqAWlp1=-Y6XQSVJIEo*i:J6Ah^cfm1=>@#_UQL:)KAp4ra'9bp=Q`0!(,n%+,&H0nr.7AP'n`>!/N-<%f\h0F6.KG"])a
%f;/&baT0-H)AK:cZ`+G&mO.DLFY.*R(-.35VX#QejV\uD\;SmCb:o]qS^mrrL/4A,[ftV;ZuWVp"a'T&Ki[VbUL8WD>s^&c]2:hj
%]>eIND/1,-fU(HfQ;Bo?hOp.h@+e+h;#>2s9lQ1ei(>=>J%B'hm3iFH;V<<;m'K$je4/3-*@mIZid"/*@a2jYV'uS0mBW!6G+9n^
%dp?l@h/L8iHR6iqV]]E4K%Za'P2M^46ETNP8:l,$Mb11HUnX"Z9.DR!rn<ITeCl%&0"0=XdG6kL,3Z*k)CoU*Kil1ZUplN<WZ!CA
%etAlYM.%6)Z_I3q6NJ#IZj$[WS@:A0@MkP:'maiMEW-ccBb^&G73(/^QpsAN:*[Um1UE%.=ebkKm2PGp(t%K'`/i?[`+K*&[PpOK
%^5f?\A[g!=PYu2bH='<mDt'^DI[/EX;H"u[lq)1\^pWPq$/pn193ru@n<n6LTHcsQZ@kejY[ShcME,t>OhN@p:iYoUPq,X9JAI@E
%Oetg>&Nt+?*Q]LB[31r8/Kn]8DUoFq<`!IkUU>^>AEC]B/ZfFLbSc*@brJ%oKG>auMO(L';:&-6P^6)u6OTXFMWGh`W'Q=fdJB:c
%]dE#/-[b(g7`P4r"Cr.nBSZ^)K`)hGW88NfmK@H(/Nef:60oDV8%t]dj?m*c@&3^thPXBC9PO'_aEOIHPj7#O9eHUsg<'Z+W<1Lm
%T,DQm=U;-9`X7S#)@F*(fJ'cU$W[rQ<I,$P*Ee_>Rq*/!`g])*U>WAd7fpU^6lkqk-lk6<BNh0G0%'&k0[PTQM>%$"1JhW?oo4XF
%XpOE7U9Yc9`^7B_)Hr#S^ED(W&AFC\#l#t-081k[nU=4>I+Aq=b"737Dm0qjFqF'rO:>4#-;rpa^hr,L[L9NprD,;64CGB%p#&,g
%AT6,]_Zn;GhsWj`AVc[;BWqnj"9o(R6q3`8"BWQDgT+-s=6bo=]G7f*;L_1$lY+%2:J%QdY9gDG]e""29^86Q,Zia0'D['L`ECA;
%eFje\ad%1B;K!8S+_WTTX&<<Uoa,2-[qk%h,7j58a^Q$S-H7!u6B"b._Z?<h(!:qq?n5Q^5?\?fA2dgc!sNnf$>IRhDkmrk6B2eT
%oMM`8Td=tsig?Fn-S9:$W>(+$8jHg9o(C^l'iJG5:GgVs=<\2-e,[CV&<VPQI@-_*TE8ei[n9^im6_@$cP<&eF+]a*j`,8-XlY4;
%igWok;%-<<d!8t]Ib7i_GAQNH"l7F'ai/V@F;L<^5?%5NollQ^Tg`Q>RGVLdU]'FcT=U#*X/H!n>Q(c&eI8baAH^DP2-!&40eB&i
%C:+>/DB?+>;78X@Kr3"k.\b5#>q@Fs*$-@kH;SpSk2Rs<%NM00E1iJ/WV6RQ[Pb>9"U0Q2rEae;qjiiA3?K;Cqs99SgM&stElIHk
%pbf?%hTBd)L%"M8&A'Mc4I>faDu;&?mOH$8dP;4$L7Z$:rJo5ph<h0<OCirsA(]V)Akn<&YVb*lL-R?m>_W+pc[Imth)3DXLg&7_
%ZGcQ:QC\9S11>3NXb8[YE,f,mCme-1]9in?*jrQ)UfR>.J=K35Tq!$]gh+WH3@Ld;(RZR2pX8M*7;F(N+nk&aMhN?u.$?RNSV^&g
%ZWop18(SnO)$AJW?FcN[Ki[anE`P3ETX^`_IrS5oOAQLoqCO!e$))l;,bs.N1CD^-nOjo`bp'&GjAt7gjSXCF+QcQW]hjA#&1Frd
%`gOSF]Wh?,_MU1S84/;uCgLRHeK%;Z%l2Qe,;mgN'92NJ#eP/'Xcm!r746-,HFK1cecd9mB0VUT\^](CAb(_%1aP-mBU<n2a/chQ
%WV/UZU4t#R46f(lK0T4M5PbIIU(@lnZk"<5`ksiu_H6TN5^!?`^`;tNKD=+jK0ah$6.18pQidd(km[tk9PZg?ABZuUqqO63!L9TG
%AU>^A`:Q2&>?FC($V\g)d.')WdK_@cIk1_$Q5!fN1j^B+8!RCb%Aul6-<6Bfakf(VN.)r!^jnQOSlVn3/*-[tPr/]:V?%cJ%elZp
%1YF$M7QWY3hV?@*WooJ+HJ1akm=Kq<gWF6,69an^>]Sp!X/7A`HhB5d.,E'-e+;:K(;4VX5iD\]$im$IY)(=a7VdVF]-CX'=1"ib
%D*V!i/uc@8=O?arNBb$(lLea;<^'[3m`="NJJAg[TRdRkl4=1^p]NWAjM;'aBZ_<eXp_"=j&B;-r1W]'\MPni+prtL5`!Xb3Be8]
%k,jRTDs?[$9t-B56=?X_-T'gp2A7kaAhd`3CmhRE?oBND/V1/\>>[L[L8(!U2uk,S-C9;tM@h!7@@`&o1h;m6/^]ls3%b\YLi?/g
%9`<VAN/Cb<([lUp6]?3ile$j..041uom/'$!7X29Gq<1I#%*@n:'2VjNDqL*]%*/@qYWoUk']t8D1aG@HC%4tNqnbb9'TF]h.o=[
%DLUG"#%U!B2OE8@-ucL))0e#0r7;mN3uVpSnp<<Fm-"s!B4?X$Eh\,oj(.\J#'afNPTNFP")1N'&-*:)!KsN!5)X1^"TX?WVR%Vk
%h&:kH$?&3aIM[.!PfYOeG!E+J0q8VMd-*E"!m1LZPe"]RG/$)[`jcQ]i1o1on9^=[M1(8LJ2.0F=gSI'^_VNu/!"LT_)`?9bq^AU
%&TT\04Sp;c;`6AT(s-q^[G'ki@`t@qqL\(fb.eUq2eqJEc.TUcZLErUaBPKm>q2b24F(C=.X#!go[e5%;UI/)(i3NugSNJaK52dA
%Z@uo2&URJKeu4bOAN]B*_d-([U)E(95tiqFSh/,56amXg<(]=i`/lt-$3l*HP\H.6>q@G[ge'D)_sTmKh'sjgX-%36RUN,dfdu9K
%-S]/=#cr;05iZ'Fb+gL'j!`eRRd42Lm.BC.Crfb-D0.>>SJU?deqd9?jE/(42A70i5n;aegq.tR%lC1TksK9%ajmjo_JDh"SC\B(
%\+5-4PIr%HEQp8'3Fg-fTSp$cGO1K5b4o3bW&74s,"F9cKj0\t_0J@L[':n-e5;MC-Y$MI>Iu.86?7a8pe[+'S7<q+C`>ip0G<mP
%15,F>Rd.EQ3?7%B4*iYA1bl0>=rh"(AoLS,Tff)uIRfpC@Hj>Em7bn2fhk*8#'EHhHF#Qk8bRn(G>>/bP-f+HYt*Id]`+JaDQ(2`
%*k<eF3fEjj73./G,kpj>,M@B'(V<S;e#:l8e9)b1gPB+7IBK>OkKse6d4PZ%^C)K1,,o?3;PD+3&PnoS,!$KUU<QE>[>?e"OgZUj
%e3mN0fL](<?"V5NPtusqgZW=XLM`C(DS'8FAN$Ng.8\t#_7CLAWMdo?%s<-:>ENJs4j!Jf]%R3t^mg'SKB$2%W@84ES0rN9g\Jrf
%_-me;%uO9QX7Ybh-8UY!0f4"R>g,,,X0.>OIud(e1B(m#X/ri&puV4)_MncfYk<Y.L,A]k4`$d#"5nI?*bpng6\K@YU_+sSk9$ps
%b)"7!Uk!!CiKj^D#Ie*<+Ke.sGct-b;Ai;GMg`lV8`ShH'`EQJ><69!2C6#&(@9P>.L+1H>.Fl#m'Hg4Ip[Fk.h@=oq:'pcqOj3#
%9g2MeMeQMKeV!QlRcGNU22Duh1[#X8B\O5$!K3!=mVY^XW03Eg9b2rgY`3Q,UlQA#*h]cb?omdHO;.,@l-d`QU#W!uP<BJ!Up5]j
%.LU*E`.i-[-@7_Xfl$PX<^8GEdJ#pC!4R3r'4u_R3W!si,CJ::ilSLra,,A%og%3'>^$^2OVm7^I'Yb,GdU]KVte>F&<SiYfh`l#
%<h_J+Ju/S2g^7ercktrBQn+-6fqWl<8HQda%Vri*,aY&Ji<TZ`d(8pOs4mL@oI."*#;A\"FLm_qhF<uPU?/oYJpe2>ZtN##Oe!cS
%UD3Tgg3t;**Msl'4mJm(4/+l7)EKfM4@o&lGV22(V1"Fud<gsJeT6gFq`pKeUl-;Z&e9)ANd(#mjkF!?qXSKlh,hYD'?iK\9kfa_
%-&R[lnhj^S%n?*b@#P5`E%"=-EV^-DC`KRlO>)n6.<Ohq$\9/RTHan/d2cA2#s'6UR1IVOgs78Y2B1s=*VPF+c3:2=.ggn9HaTpc
%/)d.aap40Tr;'Ni>"^3UN"k+'-d>*a(tVDLlEFk:M0E\,jV2FtbL6>=98VZISLnW6maZ_g\_ih:-mj0cHWK8mq=.(#BrrZ^GG[mR
%U'Z?nc]tg$W[Jm.S.JiL#`qsrA67WFFtA;>!j-/YMNL#9i@9/WEqcD:35`AAf!Kd=6$o=EgAg5I`tRo\b5BP^lh;rT(Y?hHhT=;k
%F/=o"f[])S?.&WTn*U6<&R8X2Z<)).SPf"(50:NEP*/_/P+?@m4*=?,p..YeAOBq[Sm@MLFV8:J5-urf,I\L0?(T!$90SLM@ihAg
%6WQh)9?G2t&8TQ\c.m4n@/F$f9q5u@IEqBG)M>24kSf@Co+C5HO%\)_3`#'<,LthTmoA_gr6E2c\Ced?1`&lDNS`W_**quqm!)[?
%S%"B<_>,#Cdtmmdgg0FNj_]rUpZV#ja"<gW]jO3NmTP[:h.%-4]VKMR#WFnH)N("5Fqte2d)+.C%n%@(@iXmR;SlAJ`=uD.fP7-C
%'.Lr@=;t[$i*qY[>s+_OicO?U9UYoP)E(lU/j%2"'P+"e;D]g"\laa%[[q7"^m%uuJGEnq6$IjR!Hd+)Bc]ZPP@]T*I_.[[.8g-D
%ltl95HT_*mMC&N2l^h"!BWgq!^XB!Y<r?PD]h-uX]]^%"7B!`F8sSLRp4$HGh_GNakm=2""]G-"N0)"nk#;7mg)b:HH9.93Dpsn?
%[<%F6F`!4TJ!fLNMCL)"Vr`lmD/&X19qotdBc4s_l!EqOO_;V+@[CXEIC>"C,%g)5nu5I`n\]g->1;I%;6f2^]1FNFoV88pIS'Ls
%o9V&M0ta0D1eSp(XhiS.^id^s`ecu@pf[d(F)jc1s0n_Ta?h:u9iCICb/^uQ'I$+<5&tm9\bQ)93T/a_,B_Bq(Wl$TP;^_QQMu*M
%d/i4QnFYYipfKF*D3Aff.J)H>6#Mtfh0fi[8ELT.j=iR.U`OP4.10@&K(Vi%Zs0*>-4K-F*]-Y.$GX3nn*KRWQn>)SM=-BF4f^-j
%dpj\5jLSHfDDY3t/<Pu?UA1oOO[pB`e/qE7MC%hhXaP(fcWO@I?A8A`DB[\,S>rG6hcasl[#fGYE:h"S(sS6@bPEaU>n)-A6ahcs
%3B8\!`PeYYLg!iCOftb*c4-!`/(sDnUN$g(<t17#ZqrVjNau`?1#[Je+tbR5<tuUh9]\$Y"-hHB(Q32SIg6o8)f3rA'.?_F`;KN5
%NJU::ppFP&<l;h,jd/us:+i:J(0]]a4Yk1YR^ooCZ9r(%OX1AZ$WFP\j>i_C)@&A0UK':?f_OIt7eTW8WJVnuq?!6m+jZ^$po.D2
%^6j8E;u8B[lQgLC;s,!9Qu'i/Z]^tn4d1gLVDsfCcQHH2knPVS8"<b6cQ$/FBsAeea,J>hMGF4Ebm2-#LiiN9cN\-fgk&uH'SgoH
%Fa"dI\rjS1Q.ea05$0ir:23OYSHhc!'h:tpB-h7W*aQ&)m3I9f'-ak:8nuu.$^R!c/M30MNFV;&/o+?]MQ1XCNeHnj8(TN-PQU,%
%"MJVn8`UFV;)mREn9YlAWhQQQj*l]IoihXQ0&V&.YW;WdU;4gB1Ft!-Z1aSB;UJ"D,o(n+kX%0Q8M5DE"O5\_*1_25d0ADEje?`Y
%$i\Rmh9%2HrK9'U@@gWHI#hK'*Gs9JBIi>+o%b+Hq4G"K=*-hMkFZ$Xmb*IU@V(d>G*Zs8V=Qds`@;a@iq\U53Q0Smj)[KGA9Z5\
%iq$7DRR^G<O%j`8YKC3)>dR-I>X`bRCEcNX&LX3,KP+"S"XH]W*dTE5CCsinT-a>@H)'NXZL.C);hUEbkA:%ogD#3<hDs>>s/mTg
%O#&cMIZLT6")[=\X;!@%'Kar>_4h1IW;m:&hnX6T>LfJ-S,p^+[#nRc^iEYQiAckQO*$^E;r$u24S8>klZ5?)KR"e&ca^WM4%nuf
%a?TseF_&SJhKWtD-u\tD+t.C*9)XguT53e$+?S_'8g<%C'3J4&@$Z2r`IP\+mlgXomiOcYa5[]U\_nqIcJg15`cc2\M`76hGbVa1
%N@rUL8Oc<+o$6AR,o)`o^r0I(k0XsOgh4H?D\'I76mN^6p&**#-k]G:M+'*2`EAMejCU.4^WlJiF9A7.jID.Hk9I8aGB,7*45&4_
%qb;oA,cuFf1@5>RgD!Y.?\P%$4Ut\=f#C;1l6Kf,7cDB2"Y#JUj`$/<f>968ZBN,?.W+X38D-Ym_d64Fdpb$WK?nqT6(C"[`hIY5
%KU'TR39Yl\<ab4oS*"`$m)f^1?(@ouan+YD>GC$kL*QK\XX4Z.MZh4n#`a$8f4GW7a[MXbH7dV3<]C[dG?'M4du8rp!)<[.&S$LV
%J%/83kS6*kmm.m;g>YS'i+S#giIp.TE?a4f>'p,*KocEjR)3OfK\-u%YLC/PlM@rXh*&pJ??NJ^.B^%dih?.p`K2jlPCP.q`m?FR
%MDm!PbS4iap`/:KBX.#^PQ%5>K]8-I^.n-D[UM`GYsXu;O;q09VrlA2C^uu8,p[$gXVQ4hqO5^6At)6dbi/f&bnYR/W@6ucckD<R
%Zj2Lb/<8"+p,eD&PbH5tDQ<+WUjQ=,bGd/25UX7\i6[@4aWN#?eh-V+?Z3\$;h"1-#C3pE0TpHQO,RjX#A9L02giQ#&LU&<(ieP=
%S@D&U-EVM"n@`.HVA^*>?"Odpn'J_a-4NY\cb]@YOLmC,*b2P:q!QnoHuF_PgnCr>H0iWj(%tL5*u4KH@366X;.1O]p/,6?(%tK9
%+-j/E-UsUCET3r3G!,VoSVg28("H[R5(H^q@*gD,o2biU#*?ED>.Te@d!FLt99KIUklPu4;Cc#q*B)8>(mp#@"T<3``=0]p`=Bit
%O!0bcX@WK'$bu/o7QfqQ'\OS(6/3uJNf$b<k7T'Un0>r5'K7H-&LA'&bin%T^krsVY"O&I,\_!7S^/;ho34r+mm@XjH:^VF8bAHB
%@L[B[Mj3O21K]HlXD&d21E"N8mWbg%?]4%\,k5u+=hO&TbcIuIpf,=71qQU/[[/XNZli)\ejg>#E;cAYI6;'!RT[BXiDhO*OG%*a
%WfYS]2@as_n-:cuFdU9GN,VO=i=BYla"hn0B[??&dTT!4>ccle]dN#1*X=*Nd`1N9,<T("<+['_WZCsF.2ib:,2I+7f[.)02E`@.
%l$!nX:b[S*;`8.q"l>4PEQ[s!'1\Bf5`7430bc-]-:4J+N&1uLN"rrQ6VJGH68ZN8q<`,FOqRW>#.&^(GMGbUB0mfG8WGhTb(GJ?
%35?,!a3#r@hCCX#J>6'_$>Rk[K.E=qVDg[rLB4RR0EK<qi<\RngrVmW<(ipr#\BmCI,KkS8"Li&EM\Aa!sk2G?gOMm#pa/Tq^Nin
%/Ajb%[WQiij(mY8em`0fkiOLcF_k'1&)3aEGO?Hig)%X63,t!-f"Mu%TG.'U@dQBr@s8W&F94aUW;@$:&A3C1mD83LSj>W>MXs^5
%$U2KLoSST&hTb;l>t6:.2KX-1Jkj$cO#SlR`/#'O:(5!r1kY'Fr4(G0ABeDN^iK%,G]/pCMnI`61a/l>CZfh`[iRb!KXn/\*S+'D
%MD1B\]U$$J%ddM#bK^\Xn\U14M="VO$U0qA3PqZ\G+Qn9ggPL$*FmQ@46LYJEZ$I;,c*ceDD#J9l&ohF")1e`<]dpYkpRJ):+$f;
%P/Vk98Y[HgR#/F#3)9+0otU$n3@N<,'KP<TBP4K(dK7?klZH-T8:Q^J5u>VGN(aP!b2f^>^>aeOOphAJ3;dM(K_Ps:4c)q^+&E#l
%=qVrknq.gZ/UYtg;OEDdO_0bTgQKH%QYbFH)0@`G/La/8qAc+lVru?.J*L8Rjng_Qjt)=tSQ>,\0Tcp=9;[g/fWp`-,`);:N?Xgj
%GYSTC&l`-bUT;0],6#8K^+3F\$iaSsRP>t7-Q,U@*ot^S7F)Xif(Z2kn7R=UiL5bq1koQgmo<Z7oY??2gQ,k10l<8+Ls<9_HMm?Q
%6eIH0lS4qFIrG4(C_NJZ/I0ph^$`W,=jlG0)MF4K^h9'tF;%6_M,qb*d/.5m(I%(Oha+PfiX(+)X;l.!-_Bh,-U8=/-D0M!T1BHu
%M3#"-,bVqh=R?3-XuXq-Ff8#VXGs]<Z2[#?\mdaDEjUi#`3?Lp(0up7_A:]P\m-Vd:R'T==tCpf7[b[!2c7ST<#Nk=<JKQT;TouD
%/E>H+):2hCA]E)M)*:`.kg@@BTC-5%,s;R6:M)b(24UctRmWLXMDG)VY:#L:b#,I'7T3:*3SBV')Y[o6jM]gjLWM0M.8"(q].gJ0
%dS\F!.lh;/E^tS\41B09l-]2p4'Du7N+GM_\.h-&-C1QWP,=p=HutZR?P)*ud^JiSmDWL\ER<Q9P2h8gX_G:O*3tn6mY0$$-m6c\
%-*E`?C9\utXV9Uu0^B$5A,%a3fGTcOp'.<M;<Es"(p32NklddW&aF'sENiF_KGQ$%%FTB\Y;Hke`fDJC.,ZR#D*\#4I#quk5SS%b
%)*L8NOthW3%,J.g,iD8solPjN$uQhlK@?S23AKmCk9Y,4r"[Nr>#D$G1bT.UX%4Tq`TI[FHJT4LN6`H3aa$6Bms.8.d%)sR_$nXA
%Ro(TuP"ltUZ\Dr^*0kSGbr^fnT>Q#Jg6.=>5Z+]u9Eq$?dM>G?p)e6c9@p/F,CJ/6'u8>&);i5NC!n^;Sdd`IVEIC5LC\@t:-;,c
%i<,U`'9<_p3:Q:*FH!o1T0-Un8<"LZ.-3`iGo#ZPeg>%7&gj)fSpPhu&g+Itjb'of.K(:V;Tsej1q%3Kofa9A)G2/Q^ar4$)It:r
%<2',q!5S*>Xr-[?Xkf>7pN,p91\[p(\8u*6\M3GV(j@Tk3u>o-$ffNdETb3KF(("u*i%4TS/?6T`/-]>e\H%=-9=&9gYB:`3oo""
%J.J<An'K<@GlWV9!oPX16T4uR$6c$1dr])unA#%bTe2/bGXrM]`?5VL9&'4Y;f<F@1m#6rb?W#)9!T]Ga%uF=#<q+_Pt`,X[I2r)
%dq-cTHC%7OCW8-CAuoC?8:qE\MGVt<HjFNVAci56&pAsN[UQ(@LAMHcan=jdEgLl8&?cC,6k@);,?L$n`&&/_%S"C]2oVqM`5JaR
%+c.,%W"DqaF!mh89+b&%RN#6re+mN8QVCF:qCAg1mB_1`SCZ/HVJ.+d;mG/ipS\oN+XKU<"js_Hhf1AEpF&@cPXM1,l!Z=:OYK:P
%=:D0kcGrR8Eb$A4rE4re't=;A<W$hkEQhC<Qu^U5M)2FZ/k?/2a=.1W`_D#97nRK@brg\.+-$*$Xgq$`eoLdpco_K^3kS*u.`<B^
%.&An,8Y`'M0@!LDj:/j78)?YSgiT:K_D*r0a#)Pt@X?6mr%:,8Vt"?_EB)q8)`c'\++rT?54I-/l'6]:+-Ao%TM_WM:5tG/IS8+O
%`j;NBSL)P3_T*%<(a4kG.fG2*)Z(c,5#H^ROs7U9:(jUSUV(C_jjc@lLgk0kVWf-Qe3.!V>^N^%4N)D?b]t2_eNI/.,J-9Y=8Q[)
%,d*&K+n(6Qg9LP-a)o:IO$c=%mT3*EBcY'i6D.4ulu%Us\M;sAF,F1?][r0WYMMX/@-4YNoih"+H/3Eb'!sXf:o%me]:oQa^nmTW
%,41?W$>tW<J;6AMJ`m_O4kaA2=6*r#+:hUuqpq(Z6@trC+@T,_XEET9D(1P?C?K;Qag+u30&,seGV%ct/79_rN5l![`r_:A!q+OB
%JGXBVh7_,)MgKKJB(!hW>q]9$D>WV>'h>DdElF.kNa-R"\`1?mUAa&spYh!003>6pOPhi=GROm"6\<@?i%ZL%$jdtBK#`u25F7"C
%%0%;e@`4*8-h\#tr^7pGrJB:o#7>NoSM3PGYJ"\"gE=P%$J5HtqXh69f%1ApPBW1+WZBS*&o"bufI^%qTJ/9Ph[O)E?C@)j(l,B8
%JmfSEedc/I_V#tTCeKpH"1>`WXW%tO'N,dU_j&k@8o$:J9%ot^OA[b][Y'fJ`nVpJb8CkUdpoI1*G$D8CsaA2+X<al)l%$6WN3,%
%ai7GI=]>(BX*Z_q1t8SjV-_CuW)koFCfcb13CnMJTjRaY@f*ILP)4_;B;C9W<i4MR.(W]QQZX^Kl(N>6]nq?/dkKIB*gTZ*Cuis;
%:sl^U06ZU)PT'L/EMW?Q":4#=%Dp`)7-l6UefeQIhD36R2^I7c6d0GhWn6n=Vcna,-%:8QYY,K'#iiQV='_.pG)9g\(-<h=Y35?Y
%[7`&:eu[O<PLh\'4c$m6c-fL*P[3<'n?.gIhR/&%KLGg[k&Pg"<0?''"(ak+.G_;)af]4GB4=;<43@onOZ!plfiXIP>'ZnTP,/)<
%fE2ca+-Dgd/<iTb><lF@'$*JF'ItWd8ScJ&Kg_#Cqr5a@1<>,&m,a%WUCa]6(:#8"8f+I\//!S=*ouY:TU$e_cS)h8%D,(9l^X?l
%Lgss=Y)p&%d5L(Abpf!&6!dngB!Ie&G,]It5osO]X,RpO#io48ajXLJ'i"Ub2g2-&O;qige30.OAX6S3C`$+Vfa8HNEKBXCn^aFg
%T-u@X-UpW:UKC"E':(E9Eo7(A:c:j"rs\<UcT_GEB!IKs_2Z1G*M[[3Ld+Am,/FXA)i1CV7Y$!jYq@(B!Z`lQ20.-erT:ijG.*%X
%=q98b(O79q*`(5/=U8)k%gap9g<&G[5(\LTkZZ*2/edX;lM!s"Mm>1ZT#iBR,:?JcI$/oG)V$>eIS#pO`&lYH/$T0,s53JJ:DGk6
%f,QP([hZB\dam8"QL6<(ZEUM[`;?3(23WGtF.Yaf08Y%;4go.$0A3p*.QT!;,jOq(eBKXTNMEeBC"q"tE4;.r5-c[4Xg7fL3Oqf>
%mjl^]_-3JQ)8#c0(X].dodtTD(AXMb*GkRHjZiA:>4r5'I](q\qFQV;"MajV1/fut`dj3.ei7h?,!F:EmU[=&9;L0X0(lJA)QskG
%/9BTEfT.i_^>)2\>-9@9?@M\og82],9d(0+a#A\hV`6'qc8,YR]Kfik;[2RKPekM+#UL?WEn6nR2FuRoUD!l\1fu\CW?&CrNa6Bi
%0I?U#U1bn.\kMG4ii=;_a-hqA4(-e>@(Nn/dlfFfSMAK#Z9tM6;QeEUGM*>,4ca1$QKU.jUG&],ElduggF-P)T?Es[)P&Pk$1jiU
%T9h4BTg$f>28/luP/$8?&lp9W`7f14D7")N0Tfqt-?b5fUNK-/`bL3`\)iA6inur&4TfO62O^jJBMjDBFmJ_;Dnjk=/kIQ[+S&Dt
%OSlEV+d0c?Z\T?/-@6/jm"'MV3bFUVA6;As.8=7a#YKToZ[pZRJO-DTX?D<'=V?IX>)HP)('(&:JIj1s2qcp=3PHV"^`\:4_`Yc*
%FgejKZpFFjTbDLj%c[m^%9gEpT`@/+dQScj>.jZ5JGu5"*QJ3]KU[-uE7^T^BNC5JV'm;05WP:@ETh:-;a<ol[ZL)=:,,XBlcKs)
%@H[W,EQE$gQR1bmc1,0WCsWq?CQZ^eF6!_)gPr0P,nJ#>^t_ad9hSRrEMr6^QlHY;CoPE?ATdAg8T7_nY#P!mK,KS]GA3=.ldS16
%iF/"2I@>@uKR3`m/IZhE>+uZ@J>5^ZEm`B>:,Xq-3cmMYJJd",f[*5H"`b2NfE3u(-q63FH2HFnfaelHB9suY^V"k-)scL%?G?4&
%'7H5=G<]mr0=Ma1J":tt4P>*E5<GGfY24"[UHL7^R(-i:b\gn6'YnW7FZI]&;bsE*=ouiUa03#IEfS&ukMQ+,s+:"F"f8t.MTN>k
%s89XbjS1$es84*jheMjp<$k=8?=R.(H"iu/rOSmq.Qcs3io@/0(u2)H*qo>kP,Kk"*1^?SJbDKe?%AMG24Th#:Um?2KpVQ\#]h+B
%:4D'Xh*j>@0S[;`;rh$8iOj_:2.cns()Z"+ca40Z^/^QTBakI$hu:3j9e(N4J!1[I+?`a$1i'!h%`;)6Q5&W5o_-mbD2+t!Ef/kY
%DhFW^2Ue`1BI/2\2NgC/j1shpg4a^>h5;]LP,D1?WkKNiTft%/DnF9`Zo3<qBr6IS?auR;c/_f5o)TDPh`(/KZ][VqZ][(hf$1^h
%?jNHQm8=@4p!bf`TT_9s6H'MLrH2J:h)V5gnfjX2RrMWp/EoL5c1!Pqb/mhfl=j7/6fu(fYgTRQ^Y3OJT9cQ9IG2q*X\VTU<P-ND
%duo"*VsT5"(@'A3.;H?F`COhj_8l`nJrrWm@-#SboNjLtSKn"8*!?uo`<.6Y-1,Ql5b$)PfED6M&0hUA6E83cG'Iq\e(ELT]m7$N
%`!rWL]@Z@f3i"X>oJsU-\hn([k86t;GB8f'>]D_ThoumGWi8A/>"`r[&T9PWGt'Q^X@748'(<O\Q/Fu]Vg@HIM@7NM*_s?%D;KtF
%%&_n`3JG/,;[fS[]p*K//>87hS9F@e-&0T7=u/gDdp&`^L50iG?AZ3Ie(PO^J'Hdhl"4h&[%Wkj:[>.9Z\E&@$19;P'6G/<s4V>H
%L"l=p=NAusZNp4L[A7h84&Vq>ONk5&$IAMEb874GX>GO'.4XB$]5!opIlG-PqY\1=j^[SSGQQu6^!%gJ8FPX&hd4%,_De`/frnG^
%;Yd?04jCAh"HHP`jZrJCY]8(VZm_tH%?khDZ):-14JSKEB>-mj6C*2>:IcBbS("h3VQQDOo?B1YmW+%S'SUDV*.WW22YiL/=uR2b
%aECQtq+ZlHm&16Q9h@ej4Qrc_&q;U0Tn\&gd;_pFhd4%6>u3Mk%QeU+=iF#@3Y1P=L(_X9\'+@lBUkp7-#.'oH"cAHg6B]!Lh!k*
%W;BeHq<N3L%f1(o[(E]W4LF^_D+$[_p5\J!FcGkTbUtmI_[SX/9;Iu'q:4Qhs0s.W]W18@^m_>1>EQo^*fKD"DChN&602QZfZ%BG
%50]S.OR`VNAOAg[b'VjoW=4j/J-qQafq(beDSrEpER-oc3g@Od]B/G2GL'bp)kF,WD=9g"*C/6`[&TLf^CApH@%G:0]46/2hmmV3
%\1KL2H`e<TUB7c!\)t8Q_7?kSg>-Z;H>7;&G07Gahm@P>fRD>io=QL+0Q1bjc&AoE=RGJ!Y0Qq-VK:A<T*Kpme80g!!E9AgmiHj`
%kPABVFL"!++*S7q:!@5;`?j5+,pC\k0`[''cBY>Y^en:e[-+6_SVNSrSo/Y]QdEBNbPgR@8&K_`"8k)/_,)1?X>(GT]IA#6E<ftI
%T@TThFul7;16e]-m-T1YXgR#L,R;b).`W!bmj:KN(@fUZp1]neB2m7$JYkE$f.-1,ns]ShOl#;0UO.0L8((]jS^Ia$JBXEm[)d;i
%.$:T=5$]4p^M]D$e'(rj=$f!\b!S7'!B(HT&-DVnmsp'MNU;b'!;(Ea7-Jqt\u9CL=QarI'cuU!$>55sjY43Cfsm.?E7BS<=b6:1
%2Ci0.q]LS_Se4PLUWW+[pguU,J/7!+!mXkQ[H@0B%l-c>MVI*;\7\lgK(Ji;H4#V9k[Jm@.Ohf]neA,l41iZ8#]($b9<gW4pLm^'
%mk/N%E&Fc(gifs9SeelASY`$49,:AQN3PO#O@RL@CkBIVLD8K1LSN#^K_T.@E-NXEYO@M=rMk7/"$8"W)P%RRe[-#PPMXqjPTosV
%?s#Up?!`r@[kCmG1hCO!LOW9Lk%^[QF\rK/"2S+I1"hO%_S`Sh&YLTU7C6WiF*V8'1t$2HU/[[@e(eJ5Lj^t&/VU.5*3#$(2H_Zo
%3=LiSS!mnLB\$lpdqB8,X*@s$no(Vkngl:!WN87]OIBjX/LW<5II["aZ]!#gajK4lq:XoipW6dIm)rHQ/6?!)\?@6/H#n7NEq[];
%bP?O/FEI3Ga7II`<rQk)03Im_r1em!nm(B(@EA<(*Y9uZ/,q^i,@u+':gHI&>ObO`4KG$F=@9,$DF5Y\'KVB\%0b%EG[d*>J=qei
%/ip8J'UF%/r5:@YJAS%`UPZ*'/U+)a'3d<AXRq(@[PHVCJ4LPPD:V75D=/e&l@AK#SFf/,E@*T1Y)n:q&"-Uj1OI=Qf>LTlC3a,f
%^H?9\/5516SJ0"If2WP]D;L)s$Y74PXV1NR)68;4.P7`Z,+dLT89e-9`_W_Z6.uR4g:ZE/1q@c!e@JgE>^B(a[V98cAaS_O$AV->
%>lWR`Hi?N/DS]+"R'9&DCP<L-gh!XP>=p'$24[uV0ma.]kOIVRBj!AEiaP.m(H0&Er6uM![A$e]>_FrAdL!!ieN)aM1oi*1&5A-r
%e]P+HZ\2J`FA-iF0e3FCj34M5S#GmfcRR"*VTaa0OZ4"RQc]VuFCh&%b[dbDp`9F[(W)/:=Q0DPJs7fh-uVp"Q=f`i@@EFUksG6.
%eV+\q7AP0mFXcE@`^kUm?>ZOcpAkVj6MjU5Lht.q`=@N",*djui6WsO11CV$%mIQ!#^J%E&psUJ9WhbS7`f6hSm8>X<SdGlFi+#H
%-I^(J.G94_k9Ut6>U.D+2*/-s]@P.Y1ps10F/C\^e64HM]q!qYNAde"^o92VoUr5TG\V<Yb'B:e$ebgo)mt-0;^acNe68+V.dZsQ
%1:<C9VG%P^@2<)mN0:-9:9BeuU<\-0`nXH8ain1.Md"W!+tpgoQE&^$hI$>B7gk6LMC,fIN0KZo=5tbS'A+l-8Qs;[c"0:sUU`7^
%DHX.J3i`Z/T^D8""iKBEXZj4n3I'J%k8%0&AVJ?/`d.s%6kqs4A=-n>Wk^#$FpDRE;O#%eofHQCAa\)Y.'JHL!M3o6//i1;6e/0?
%Y]V87D.Y:1Ru>/YL$sQ3Q\+Hj.G3T523t=4+LBc'.9G;[VK&;`#-^rmHCLse%BDr(F_.+%gOd>\:G+c(bX=oQ`Sp^XPNs-<2J1R"
%-eE)nE)&X..QHUZnV)*<13-B?jb5$_`F2tO>.H1`*-PnUqoLFC*]R5fn`3lU>W"R'FjimTmfQ=fE?_=8d`.K?CPN9pic&q/TLVqd
%SDJt;UJ,R!*3$rL5PjFB)9[*;D,=h]Yd`PaX]"T*4ol@uCkT81'ml3JAdjmY,B'0q'sK#p0bp08RAs(XXXsNMQ,:rd:R-Lt3lRrD
%$4-q=m>U6c^(4%B(#"EK4eTH2g>OAoUbZMGih85`(:N/jn<46@OKf`HU@:^;H^to?0!RJbj"K<fqqosPVpNr:(OtuDZ,;(eq:jNY
%SKDe7I6*[0^A<0HjZbu$T#$bsTS"%.n#e9_b6a+75]X,Df/`\HEdE,<j`0%s?bSP4$t&"dbMPO$l,t`d0-[X><W96`]okGVgee7"
%R8a81c+Vf^+oFN3#erU[&54um&AObU?[`hG&?3.rKDD`7q;oNUJC/&LV]*kIS%#`Q:EMK5c-:l%3?BjsXRoJE3Igd1gS;sfq:4.Q
%oPo>oCM?:KH;Cp6mq4#7T*GcWWVnKfL9b_Snabu)h::c`ltC`%FSN!X_;ZD`Z2rcDP`+qlX4&4B;Car]E6cbd>b51Am3783O?QUV
%T2&.j6Z=u`rD\EU2im7jlJqV/Q^`I5)H9u;aZ),U@Q+h`h<+<PIBia#=0V7MnEX-RJ])0P#g@E9\=#m*J%CJM6s[QV*hHo"hOIqY
%*,Y_!Z2+%NjCeOg3uc'#cM!giSXf(NDWs.Idg]h8Un_@gJ(e4F0$c0TN$VGOiq9T:s7kjVo?$*ujmksU+CXBo%fBnKI6[OR<9<g_
%#brlYDhC&4<N[0=\Nbj!p\nV(_XH`5k9lllAZg52UGDS"K,['g%T&Q4?jI]o\P\\4Fh(A9)g/^'@EL+t%(*QRK@kBrY'<_<gn;J'
%P!1h^raU<Ok/6?Vr3qH)clJjp_lTJpgh4Fthjn*@U?IB2l3u#D5$o?a\,SFMW0IBU:0daSV1?<tY!.>!fpp<2ce<ikbld+kGR2JU
%IR9VfA.1gbmdUsrggSBTn#=q7qtH_lQe/<nHd]-r>jL:rfFDqeT;'P]d<nIIVrnkGrU%L?]d4iG^Rl"@%8+<Rl.g%kT0I1R^;&BU
%?\c`"#K/iS^:JR(3SM2-g'km+V#$9h'Ec>YPBh;^\QGAoID4L,%@O?d/Pe:=D"n!3s86tf[_:2k_^u+nE4d[,C]K:bh,6OojrD%9
%iftNBN;jqQN;n?I)<6MDPI&Ha_b:[Bnp&u8,>7^;a:/A'oF,?1HS6;md_`9`5(VlElAT&0IA?iFfYXi(N!Jlp@&6"%2Liu,N$7*I
%0ao4/^HNgc)M1Vo`gMe%4>e4+5#1ZQE;7-0M5M_f5AX)<.T2&C'K6gUQQJD/08JK>T:.b]U(Vhm9CH^'a\tsu\(cgJ[Kt!-P]hd[
%OQSVGO4oLHb3-U"B3uXml"j0eadsHsN#@7qG)^)EJp\?skGRp0mIn:"39nM3)p_sML7&P(#E;7O?4DIA<d\(Vo=78#%2m't0>[a"
%3#L3:puHNQ,_Y+fe]MgV00XeD5<]$XJ,lj0C<5ujA']^N%G=:Xn&4NPD>tQ3fA7.D=3i(VoJt:"kE't*a<8JNfPtF!,;57o?g@ds
%`r0916_rR+O\hWlJq=#3aTn3+?i^%_#n!8cq<X!dM:^2&./9\LJ,f-0SGeKeGrG`*p7HI;(rX7pc6!:92]!PoB4ouJ2qugKd4kO5
%Hco?ID`5E$H2I,SDg>f0ZTS']l#_!RrO>#&r-%\r+Bd"1%5^#ZeTMLmNh0"<9dZF?-@'t0JEcG4d7u4[1M,?k<r3jl%h9JqTp]p:
%\/G(rl\NK.e$hW![J-_3J3(:AX(/pf%Ru$hZG#uC86N6:X6ol$@&3NEVl.EVG#"ZINX+M.jnTIUkks\bYW;Z!oD:-h-=(k_Ru;hJ
%O)$r4Zj[esnW6F+>jKLBeH*R4LIYqc0u@qD4XPpP0?ucl=n#DXWQ&q(Ejjd4fW&nt3Bd64Hq;2$<;!3pF`r3lJ08e"=LbDI64W!@
%`Kd'1=;P1>]a'M_q"Wq@j<'#ojf:SqW!:<On^-pehpEQa*a`+N8MuFNfu_9#f_-tZeUqLrR-dm:7\]7'Jp-c+,#O('im>mc@jK2\
%fk1OAPJ(>hcQNp4a<1u4)"XgR;2-?"42=[Wn_h;JB0QJdb6*Siq=AQrrJsB-H4I2.6O%Nab]A_3).QP;K]P>b=;:?SLd`1LhY3Vl
%5)37)+bMa2A'UdgU'sAi]jDf++VnY1+:^kmgQPa(6h&MD@SG%>"a:?SnW\*?fZE^hL#J"IEHi?[%VHt,[22WlK4gIaE;%Q2-0=T?
%qnV?s6f_TAN+Id-l0#T'`u_S2N-+G^FNoeeD#ai2\i/!EOff]-?!CT"aXF<Oin?S[[4NTe8C^20Fuu]^$>ZE@2H$rFW]_/u(41_k
%5-VBm&;f-A&H&LIJE&DrrA(CmAMaAij"_O>;0s2ZE:V?Bkms\]hqpVQ9n6e5.0i6dngsc"-n$gMqc'=/cP@E!Ul4W\o:>d>%kW(M
%1JE1*L854q1S=T=;_g(7gMC=kpmY"9pM5!as1a:A-I4*CqrI*gqu5YmpG'+uMYa^9>V69?@9!!#LA(EVVL?"#=C]dG1$QmAN9V`m
%l;*f;A`#nNkB0V[]3tqbn%5STC`!Bj`]on6p6u6p>W)Dmpi#O_gAa=tk8upZIg4Tuql9b\g)g_dfSN0)mLrggF<)VA(gn<[FdG<>
%SdqjoA6S;L1$f5L9#ct]pDAW]Y$[f_E"0X[?/nVu?k.nc*XHs0/Ee/iDg\AQISXJ1]f<S#n8We87"kA71W`"+7,/Dha.7\>:;=L3
%s#u4VOJDh7)<'fZm=idJruM'QU]4Do-$k)Yp@U\n3Vn,qhWHsAoJ-2i8"]5lT_+1,hgI4qNBZ5?1>V0c*IYZJh<0-4o)AU<OAeR@
%If0cuaha'h_,g@j"1.AB[@_25^McnDc[WQPBW!5mI(4h:YDt<Gl[[BjDqO)a'3nh5T7+H/S.3<Rc5f]Xf+-_3<u:<k/g#t9C%[%)
%C#@RZBHc,O$e]b_m(QWDQk=`EbJeXOp,.Y)gTODuN_b*as8!fbkGR(XY:m?)?_:\Ac?B&[7ap%(3ZCe+UZj>H^]>Y>BKpia@EI"$
%]HNdE55BGG\a/=jA6QA&;rO8d0V%MZHl?[tM<[:0R:^_2lGdUE=AKj)Z=Nps[B/kM7/LV+1A^o_HN`^$id&MmK=(HED%_>KgAXL&
%%g*"_#^Zr#9D=acSiQ'&lCX\6>eSYf__%YBAMh%^$N?'?QhE\9f^L(s(,ig]'o)'.UZ#c@]SqT3dI8n0?:MiU5o<p'YH^_?;XD86
%5k7S1Yr_GF'V9rc+Pk34ZM0*LkI./ZGoF]BA/"i2$(aMiM'6B]pLFq)`j"pR-AEeif_8nicgBeOiGlF*cPKAQ/q;NDlnh?W,#]JF
%9T73cl&"uF1WM3`dsa!ki<4Doq;Nt`i.L!J@g8ep+`fb6J,:f/G0IZWAm]j61nB'dp<AB;nbI+Liolpf8^UoZ^n5CDrkZYY!tq8d
%gY&3<nI.B*notu$8Rf(+q/eSSA./Q8>GXsh^$PKbHC_g#s*8sJX5RN74HLiGKpFm`RfAu!ph/(WmP;E#;]45sR<_1ZaPfh8W1b5`
%LA&cS?egU66Y)3)'KLmW@YiD$KJJ<3Z2oUQmGrLg:nZ<bZGGTh#4l7b/0N2=I&c-.42u>4+[+O67Q\UugG.Jsa4P/.\:+X*N$2[J
%m212Nl&KqG6fGDI*FiHuph7\bm2-(;a$:+$E\f,rA^o%tK7<On@WQY%3W8CDA4V)+hfg;QI.L,hUn\0Tk'<C]49l89O?jkFZ@$ip
%k47U(BU@7'd@%8r:FE&mE_.OaT5&=41(Tp]IJb."`BOQd.^&\KK?C%ndLEnEI,;"Z[f>f2HZh56%rKi]:pU,&&e/F$!U!*\Se#77
%k>+$oB:(=9\R\>O6:]m>S:;Na;Q/;JNF^6P2!,5co*.A+W.mhUJ&8QYO(J+^l0@9aeLA<10TC[:'YJkG;P.1AP;,5A,Hf[3ALJQ3
%Qa>l6?:0IOn%i>`EshUZ1mgW;p'NAImB5:DLLe[M*=;n!FEs'PG%g:H*7/B=4q'7@J7,,SZsmZpA&]R4\U0Eo;4AN4\P\h8[CK/(
%)n!3YfB*8C,bm9l*437h(`kU#F,-O:%7l(jJGS&O;2skrW6UCf>WSHRSK$+iTns2LJO2;3&GrWYQ-W$u)`3pL;X+2@r;?>VMp2gU
%3pLe46(`LA-VFm'RD&(!qonV'$rCo_]Fn_'bV;?EF36$'%*7q*+ChUsf)&AW=8>hP^V2ec*<#a,KT",?D2q@DJ,egWe(X!.hbT#0
%WMSHMiSqYjL\H6l%33E^/Yb0IhEe<=Tnmh.>j&QkDYDr0q3_j@/tU2Ms._R=BTRZuKCln*[q?ma%mMjkheBmaOW;T^++1fUS"n4N
%=Ym&U<29<W_k;G:VfLqtX6TnFG]<$hp3>-k<>Xh2T.`,bNu1R7#OOUEC30PEZ9DW$]\a]GLE^;5I3;>>2f<$o!J&l$pW:IV5oqF]
%o;SUT(=R?G%HRe)*87"$Vh#WCW9t=W:WjCq"g<]l!WV794$p==[F!f.RX7B'mPZH+*fM*2ga.\>J>_h9,bt]m$W3jLbEIp(!,p9A
%Y5\7]r+p_\!JXfJTkJq/U/<6UAYPYUnj_4"5mp,j4?%`8AY\E(Vu/Yg^!YKGO-F#P_t\A@:HY3YXRoJZ2.R--d`3VCaS1#i6O;;I
%:Iqr!BEc0=WfrCX4>ed;54Pbm]g2J@(JdgZJ(U:Xe?f^J.;gb5/jFa=%QZ7QA<-OXPkU_/%O'!lc5_Uu@GdL5&7!q5juAk2mlb$j
%V$9'Q`fW4J/T3a>$hAPpi4]O]O$ht=B0IBE(C,d/cS1.#o/]nL`cNYbaSqfS?D;(X>hYQXG2FbE`sjja+KrUIcu:e_jQ_*T95Ye&
%]cFE"[,N7Uq7UEEItP?t?PE*S^jGrlo@:>%XgS*S'@0<4HD[1P`Z,ln]nfuXLEmb@#"Wi_T-`OfX@uDFSF=KD'DoH1D^!^p92mtQ
%B*hbuEDSk_Y>!5OK\\i?KA.R(hNNV;3!6T$*mEUu6dFm:"mV5T51h@]q>L"rI<+k2p5aWkiQKKX+gZM,ek%q@@,e'bs8,Xa@oE2\
%WQG#%m-)KB,U:VAaemT6RlkmOqqHp=:Q8uKq%L+1P6Qf(MM#,bJ%F:&I==EA,_\D"q:eIuHS;2NH8!?*(d<1DO!f14VN9-s+oS=#
%\(U$1W8ZNS!KJ=hNtZ!u83OKE+\5ta^+n<qe_.2l%#N,!/:.3Lq:Q;*$Dk"Q-0=ac0.1E&2_SNcpIX,50Al^,n_O!i3k[GDJ)+F[
%oeN#\?G=K-5QCHJ`RW-Js5OI,\AXR!iQnk\1CM(Ue5_L/F*a$Q$bGZ2ac%_qL?@Y.hOq,25Q?b9rYN6E0.?^7;G=fqr9++)-HGVW
%T7;7aiYAh#:%QTiP<,c1WQErVUDB?A(0FhY".EtVL#pgqb$e^529+3HQqoM>'iEqA=toWVan*%5CG'h[.aO$[&Q;A=>FY8):fq:s
%%:,0Po4`(M-oNEAQI&QEf[TtbZL4$f7gR*&&M?`Qg:CuqeKs":fkFa&;BQO9kL6;K%_H8pBq=?#()C-m$Oca$CJ*Ot[fGG=o=S'`
%mqXh"pOS+bbHiMt!*)dK'[#`R>1lN[_2lKR;WYE,^/4['"%auS^1LZ_%uVHIA%9BW3?V,NfFCHInhBbWg8W7>Ki25PS^^=uR_u&9
%Ct1-6=tSH6=D.eAhL]DhO+sf5Mdb[necMcl7T-e^CUIo$@BfoL*hYqZXc':K!&Q/96\du1mh-HPDOO5;"J/%B/PXp$>kGF-[(F,e
%p>mlVL@T$Arc'ZSI,A*=eSujWX1hW8Fr(oUT]Q8Yf$i&j&Mt2WJX>"]AQ'.+@:m.8=h:R53n106p,#s]T$KRNiYF(nEAVA/W#.YN
%XVN2\&<aVI:SW'uq29]80c^56h\Cp:b72m*+A6:F/>Qs0Or$[g9JpreQ0W*=?/*.=M?;XCTp]Lm:5'-8@a[RN']%o2N[L&1T_'P>
%i1%,tl7t^Y:`h7^!D$g/HDC^F@2eJfcpsGS<k;?)'Ns?3=^6u@dUJID-ha/aJ'X1K,2cj?")R@I<!4miM!'JXNTFp/"9%Rf=C0TZ
%<$#(B=Vk<QCp&j7Af8%mQB?Fb:=)>ZJVaUYHk0&l1jK<;75iDrU=!"^(Wu?LcmN"G,+q_$1l/_D2H4@eJ5SgKI)^8_Q8R.&Bo3T]
%=d+As58J63<2A"43[tIm'j?Wp1P#VF`_0Zt/Obj0DLuh).tSR9>O[<^<4GO(NWT%_ps/!*]VrGr`V#\/$I,q3FVD0e:`1]48^%0*
%>**o,Ft+5[E+]@XAWdh_WJ+nF8R"IU/FsJX[+A:P_udoP>l/>W8X28)(i<:mB)NJnF&fUTo;SuIC1,Ej&iA.S;LPZ8^q/6>Z#P4m
%8g+2A7bmEcnfj4F?lV'X$D([nc!4nt,0_X5EX$>\n3`*bCQbE.MBE]V,D@PI<l.RYHU,$.L+,uE\/$,7$5A3;>F!BG@<o[Yc2,;a
%"/.^>Wc'a9;J5ntSdNB](N2T^]M+UN0A`"h,_=O/rrB(]p>YF/cojR"?BD)^-e4QtG\c*1W$fYAEr\A]'Kja)'(M;1\!p;+OiE8M
%A'LLl'2ENR)U@4m:6,AKp315tFru^c'JD)6LI1%moCLG<dM\LCs)rO*/1U0+Dc-O\qsm03q=:T.ci4S-A"l<_C/n?5Vq]D:X3#a1
%o]pFbMrV6tFeu+g:3FZh?%&[t8Q_+Y"TICO9kn@)*5)M.S26A*AXOuCTMKj1H3o!L\:M.AP;a/#'#'Wb>Oa(DY*L0'F\SF8`Leri
%MK(:UqbM2RI9SH2HkO/!,iaT*kO/sEI*FkuIJi[)B;d=&:O]k,*1q%U]%pH_24uU!-e(`4e62+=J=-A^5o0amTr`#.r(93#K#G]p
%T^@=^4oZoE?p84\$sG?,(R<fj%Q[l==tfN_Zji=ep`Hp)3id"W4]!0m^f.fR""nA`\iD:5%0Ndf9V2$c#@<SoY@6?d"*%OJ;Zu"n
%$1O1*_Z\F5ZnANN\1LnS!Ensr=n8q\^+C3),>4RM$YeD^^rIu^'Lgi@5=t_P48t0\W%eiE_ZtmM.q<6P)P<4Ne3kYSS@f=0_,$ZS
%KSlXaRP7_M!W(k#^n7E$gk9cNa0eH-q)YC5[(;<*^2Q\212g=#amq)3hnBd]6s0U;W(-SV%6.E);)q;33C=Dr\8qhuN?]e4JC2rZ
%MPqps-@LJHb,,cUS)-J?'dg7Z-IXbc@(uk:NEk(IBj:Mg"!``8nlk^0QasKDE5-HN[F*V>(bBq-pFZ4+.pRX=N5E!Xd$i9dd9Z@I
%:kHp<U@S_6h'R44m(uI`WR<?uC'C?tcQC%f:_a*iOD)f9H]WL3HC,f1r]0T/cb\^H3"Y067hKH-3='X7`$&/XJBia_TPG%6/5eus
%2`um3g!hX8MtG$@])chkK"M1hB*@k[[';lC/\rG89+WdJ$%>n(#,]hs9V=_<K1m*dmG@qjA@=$W9WP1`aWL6fB;DIlo?9o]2r!2Y
%JbGfYYKWc2&S-*6n9jGP&ULZHEn>WAT<!E$l-!-n:oXqiAn2OGcY#a<=!)oS^C4P%E-m!$j=fD]?iIPu3kmY/R1Yj!(Z[Z0e7/-r
%hdeKlH@LD6;>6chci[1nnbKfagY"O1>NkVs4JVC_G^(\WiDYlS+g0I%i_"Qg18$b/1aFb(mJ$Or"?PkjGfgi^:K$e#f*%I3&hJMl
%q<.JDL[E(XmEm6'F8r[/4$MJt6f'9ahU!#GR(mr5obK<gSH*-8O0O`t)4NiW11$RPFuDt3It1L7^-Z"gf0tOUJI5^q"__,].Y5LK
%]!DN2#rNHUa81?5"kT,nq*Sl&Eg2\V)>WN.jB+fn5t(DZEj\h2Y&=r7M['rXMe`LW3Ymf],!?7RAXSK.*rkom1!1rUWBk?"!P,/5
%GImugG[uh(6<KcVJnr@!bdN&g5ig(Grd,UnV?!SO(6F;8V_'#upRDX7<Pl$[+s7P&<8KW+<))b7Y4Kd!V_XlJ[f6-l6'c6Wl+thV
%lY0A*JQ?RO1N+&0.o7]\:n=hdAB72nj*68F!IY'3]rlpB^EVi/%S?rY2=*.I&PJf4JIV"CCn1_m^iG3I6aLH&JAmOAFk:gZd-F:>
%'AS<B^;JF^6_?j+CNsj@j),R*V4$[9K]q6Bh?-'T%m*6@HDhg#-EmuB!1IOD8$C5l7K`6q?lk$b;0X,kbbKabO"rCf0Lfeb[a7Z?
%*d_g5VHTsM3P"Z$#%j.I!5/dFQm=TP=)@1SHA'c"=pqX8/RrQJ9a]X$nM+eEmCBbU8e>K*4%W/[GCAt.n:O:X/YCV4]G(!c+<6GC
%k0_<kUuU(]pRU79;)B>rbbLgn$Hf-/H*f=k[[!86h968Jr98A!A2NR2ms]lO<-=s)V.JCp*54`+ePg7h-7R+*BOZFedq,&g+C:j7
%+u":.<33gj<Z?Q9BUY3"#-Vb+kfX<Z#7]AqVPc%ih2*3Rkm/Z+'#Y:`mi<H2^YNB;JeVHR7#l^M0tJIVHQYP6`oVQ)cd0_Cr$.c-
%4j)*Gr&i-JU\m6sc_LF9a3)`8K@A#iAKK%@oZ9bM7JB_15MLpf1LfZlhN=Fgn;'0Icb!g_jju[>P`R5XR\SW[C$bn6]5@^JPW]lJ
%S.0r$r)QU?*(a9YPYm6aXq;"js"m?0UBESLOJ;sSa%2<&4-2FU1@=T[5sC#+ah]*W4Ig78NlOjY)?#6I]1lO\]Cdu5*(SG>8td@k
%g9daKTC*EUqhk,e=]\=7<hP-XA&a%n<]kpYh:;$*Zq,iX&[ZffA6`%/n15JjZ4*-e/pC8Kq!PgLO%@b+oeO^6=dmaM4Eu=5#;\?u
%>G8f!`(XEl"utHA`&1d%pX(TTMUZtr;I<b%T4(n0bU(mVWp_-5f9n?YJP"_A(e*]uKAAP?$P_R_b#cF7HrZFI)G]u?(KjG3BCe^C
%=DfM.o5]sIl3bI0f9BN.\-IoTZm^_Ci*B>g(0\[9*>_<aiZd:1\1nt!r4IuVF:/H-ORARVm%u1jo;jhTK''3D#qSn2.%i6?UM8[P
%HBmr6)MZf1'Ym"OO[]T8m1g>%2r<B+]<WG'GhYa7n+::dmf;X+@^De*Pci/C[mu^M^qE<5TktmM-=fhF_/`OebG*sCP)V8l0Anqn
%V5kI?4t9m'26gbS(DV\I!FD!hR"Zk=1apa('JlNr0EX:o&^71)3tP*o1JAT@fU,&TD6#^a]*Rl-?Q\'F>j+6](]*R>c!@YBr8J!N
%7(dDX=h<"oH0?i9?SrYYk;qm\1I\>umVNu(M\:RebqX3/<_e!)B3A?_VK?5Q!iN7"3p!7!_KapbU$lmS*+^Nj+jhG_q$gNK<NM"T
%U2B*<9ME5OHo,`u&(5L4.k8E=K4:#8m\bG9!^d^`XDLFm8.[F0'B:IoR&RaD8HGJN%hZ^fk-P\'#c'*R.Oupo3C7[k0+"Up,IgS-
%/k3:rQI7=k&0/[-UDAkgT2E5Z6<TI23c2[^=f%5,rh+;m3%l18Xl^pARV>]21'-bK=jZO/c0X=4*ZK)i"9`+/`n!s[Gu`ufXh_hH
%>=@RL=G*..8GpLRDXB2G<h=q?83.r'F_DB<;cu_dJ%QP;"/&!rAR20ub@[3.=e2o<b+cq3_U-WU@PjbGkSM/2^`Wr%=:ls$"!h*=
%Z5V6HmTpaJq&al8N-o"qbk$FQ$Dso2%q]BF6(9#'5:U=sa^QUY%'`\qM[:_i8IK#h'FKCCft*RsD.8lZ+)i/"/gE\[BmNa\>[,#;
%bbiWSKqSUB0^<Cd1E'4/!fN:]K^YBI65A"q3B(O0)ln&[fR-l`A?:RoistoP^qS5o<lh46bX's::`_t0^hG:IUm3Y<W(1T>2AF/0
%j9q`cL,PemFWn!A!LXle8&@Bm$-ABtU&Di<?K#YVg"2ph_;3"tCc/p!B)BE[=SGmQ=;BO;%FERc`J,Z[i*"Je=IgRg'oDF:'7bp\
%M];,&*,qO=NBan%k58!#1e;aEf-bdn5b^%+@Ca$'-ri85Y@UII.TebXaOW7&Z#-7h"?:3$m3s3@1lc.4.<iQajJIDR6-%'Q.\4\i
%]I*5SjI5eo@mT>dD9d^Je,Kii[D1q&KT*Cm"laA4?$?'@D9&07/JXdm'DOdbpJV5mRHs%frc?XInsSgQ5Pt<SBXi<`oTX#ZYRbVB
%TN&_dV?r!1>eLFpg=;]X56KHQPqFWsL'1jOq/_I'Ou+L0TRWQ%g2#<=PaP%!8)^I/QH9T6lM"#nKu&l/MgSUd`lK,?4jQd)#o'P9
%i=4Q./Z*I\L'1mIf7agLZH*$nd0O%<\CO%gcaCq=;cU65D<lUf\G2rUJ\i$_C)QS\qt0^?St5sY0MS`.Ts@gT%KQs=^<&eb1i+rJ
%_@D0PS4Z(j"X2n4;Ks]Y<TI/='[@p,8BY_8E@P>j,/B&@q#B#oe$V)sUi#o(4kDRS+La;B+K?nA1TLr:#`6M;gXtG4'gdEZ86?Kf
%e+;T_p+PiibZZ88nBsJUoCVZ3/Z!L6fJ>9,Wg(*+1e9S09C&s@(b.l]m^ZH^-;Z8ao.5&B"YDKg-ubru^4b?hOLHgo3h3dMR5OmV
%@KPFH/f3YKc&,mBZ)Omj3ceJ1^,+^b$9N<e./PpINARHpqIB##(CTipb)3L((-?RQT].S_;3C>Lq<s#B<K<=\31=)@_3gDS[$@^+
%b-+X.btH122lZUcA7fg,k6uoE53PTUs-:jqX3G!uI3d8[B8j;UcM2bJ_uYTcQC$68ol/1h\Du`0n\,usUfSsa+>=uDb2m^rd4^X<
%_S'mNS"=An2#").ONOCUbQNb<&!q%RFr;oSBa58"P7I.mRL:\9S%b9NBZ>I&YaepVAXfi!o-A8m1d^F,M0;G&pF..S4,Quk;AU2X
%XL7.r-.d\e>oHpIR&<U`9gd3p;-9%@+SS`Yp!=LRCWEkU>@M\40(5j\S\<J5'*(Oab>)Cm4WpI]1.d][a0AGk%ZIT5XG`P\.O9c<
%ek9OaEM;:uFVSUX0l$t^+;f`uHJ.+"qjk0j!)[QV&Up9_SWVRk8KSos\O])Ciq>p3PW?5B"YjnBU-'M"%:tdHWofBAl!.@Ec[++b
%!YL+IdIZ2dL$h(%hh8mb'e9q[7t+SH=YF@3Xal4i8UYU`6Yn+Y`N+p(5"SgAWgjF8!bK<R&V\Mn@Zi-TCb!a&S7H?)82cD?BAk-'
%13W.q@m9G`d8uMeaJZBg)8oHlT)594gP(bJ+jlGGSP%sk]FFEk`tNF%CiTqA8`nDm`M=@698]:$:+6*HKuJZf-9<1%WJGW9PW'=E
%8(#CTNC-_E*,)sGJc9Wb!*r;2@k:(f"Hj*0_)[PVYp9-mF/%Pj;-Rr\O#^"m/mhZW?@4.pWlfWS@%o3n#Ask$2NJP+/u_fL"X'Qk
%ade[\A'<n]R&'P]KVHVpf3dBe;&CM%#Eu%9&;INRK*,Th$h.`C*5HErH&sLD4ipV5a[e]!;BaQ@cR)1l5?E5s(>2=8YM!Xu4_,L1
%*XpM+`$rn\.kAhnCgUC1*tE=X"A'kVGl5[#3Sm5/Fr^a59Y@^!9dFFYR]dsZliATZ/s>cU$,UC+ad)ELLaWJQ-.S"<G!5=$MFb<j
%nY0!=#VmaX=V$XQ2T'sRNVC=6KacG%igf'6cU!EF5$j9ZZX:%-(V@b3BOnb0o^&8*\\,/NN:B&K("5`?6T*.h60uW>IWh]$e\NUJ
%qW)W!+O9r;pf.Ni6i02o,/c2UB.Hqn5%CBm'?CkF&6F*)N"%,g<)jB:jil@s+PDB\VnFiTU`WWT.C>dkat.F*4Mq@JpN_Xj+:DS6
%83oEK&b#"d9;,t!0V16<SkXointU2>+La=.h6jo@+>aB.pu,*:.U00Nb4bVbH<9<jT9a#^Zs9"16jI0I[Z^PcjJ'T;(>"4gGGmKY
%Pf#AmK9[*B`/+d/(N+Q\6KHr11>L4!BrAB/UR?pp'd+m0io$,K5rul'<1#'*Oas&\Dr\osnj#_IEF=_A"%gou_WX"`Nb]_poZPj[
%EMV\=k]Gh:ah^#3I6o$t:)U?c4O%JgbY-OK^=#(43UWVD.`9nF/gB91`-F\_@QD]M4+bj<.)WRt`lga0/D)Fma(DZ"C7tp`ZFbcl
%<bB@Y0\^`:V\1GkU<mO\,h^/5V@)A);nPZ5qd[Y9QBu'ELuU1C\-[6(6_V;N/tZ((=s$X!QM=Dk*-a65:V^O8lHYda"]?0`ar+B7
%:n*Ta=O&ei_3^?FCdL@VNQ(<PUUbK/A+V(Br^b(pLjoQqa))T[NHQF!\kqhUCgf6E]l#Kh&HP10]*ot?'*FuDZ,^_G&k"G#R@l%i
%B8(5Q&]`IUjiV[[SE.'0CK<>KJO4WGfrWfRWlDK?jmVkl;MHV5$NJP"V:Ku@@oeFN-s(=p]\bk"$]FpE*-n?2N,V@cKt%h861404
%9Ip2r-^n9/Y]`VtZoHC'/C?Kl)aCRtO"`061.KQE5)N;+FYel[N,.38#nm7"UPF.nM6uj*E"F.6,hI"3!QK=mZ^fN(@(D1WGN(uS
%QY^7[Yk7'(3g`lEDIpia0ePb'PaHh;76Vop3-/[B`bIs(cCG4d<_MmCDbY[q-Z81Dk89T6S[9&'$Ea;d7a,eD,[c>%eS5_8E9e(Q
%\VG>/8n_nd^G9qWg>>'V8hd?r:*"ll^PQV(Od4Cf,*g&C?EQ]UR,o]#S-tViK3Y5Z]_G,NSILJE=6g;4`@_LODEOiFAEBWeOI.H)
%U9)BlQ?:Q(;#f?kpM=/iHMImT4cV2)FZH?LV/GBiLQH`nGI81%]5JJRpL'ju'b]q*B8C7[\/828oi*p)XMldpek+P/.S;>UOfG^*
%eRXWLk^gYukOh>.PpgP7Uh:@;/Y2l9_I%NqN)+gi`+M^5O#9f6r\P>KkDB:P/tOVP5Y3Y5Ll@kNU`<'?jUdfMk2n]62$o09"#0P:
%6"?(X;OtUWi@O\eQ^((cb6q7mqCF7r[,t"B#DP_'iraPlZ/6V%C.^g(a'iGtn$^nEls=8IqCbS\8E37&N\h_S#2uo4bpTrW]um%D
%=t;7;?jd=3K=ST4[\R(<Fa!4MrN>ueKokiDZ[`EpTAi]@'HeHmj[-_]FhaoYS4-dt_=2k^'3/#g<;u<%gXHtM'GTk9350]0nic,h
%jl,h%_HaEbZR+^k0&I11Glb&mb79NC9Mtmr@H+@S=lIFqZLS!([fTJWp5!LVUpLa%HTe:5Ypn;J88>EM]PupOZLYk;ZYnTNr,V,"
%`F!;SSoDRtoHJe"8eWc&NpHpb2%oq).))qUS9Sc"Pm?`+7?k44`8Xsm.?,TeUe7%A@E&n9i5as%quef2j_jZV5DPQ>Gk:#g<SKL5
%Pe&.H`gb9E*.21l?+L=Y.MnD@G<<MLQfO-74GArRCiWtD+WpYfo@9:l;#<5MUi9)W,114g;0_(;B.4McEp-N[i^WkrB82&(F&q_2
%jI4/TAHlgkA1?,)7#376R[:PkZoi3pjb6Mi=g'+4HYZhD"(.?s@bkjYFn9/ZH6(amT5d'!Vo-\^]YE8=5M^.hg6RdjVA%V7=eaP<
%Fu!7h>f:0<6,[KtK@i7Tj#SenhX-jAZT[Ch[o-dB&-h^63:F:PQko(2Gr`^2M;=&pDIJ]$j[q1uK.kH/`D*jE3Eo[lgTc2%)93AR
%%R[8'*/ji[c.<IaR\XDY%9TlJ#0O^&.[7r@h%HCBDHF(GB,WU[UT#gZB'*G6flC@B(hjW&j^&=K14d[?lA@T7]h%0dVf>+OXHN,W
%Hsq3si+?2pm$C`=FCYK&`bFXOAAVG:Q<F7,9f?HrX;bu/NYNkj=gks-.!F3R8nHWPH*N[5p9SRb$NcM_+^[Z2Tb4oD0?d0=bZlg,
%asel8G,3m*:o9<rDcU,MU:X_`M,0k]'rKmr1Fo8nDkV2k_-+7B]C8bO$pg_L4em"(r,e^\&#RA9"]c.j.7Gp1(pEu%`CcZJB)+4'
%^V(buQ&(&bS;QWH?K_Y#$,"Oa,Hn1W5>=VY/JPcF\/t3]#RXF,.<fRgihJU@=.!8Kq?[rfB.M/P*SZ7>_c]O#0ZJ/Lq,3fd)snj;
%:UJCZBm<5m-HsS&3A+7c,sk/c*6VP#po8!>ojbYBdY5PsWj$8-WA989hFWsCbmXIig`GY?TOt3%l4p2h..[R_;t,Jmmh+RA>Gte/
%ERsIN0)QF%_<%A#s6arBZ5<rm3(dg/ReS0)`pqj:*m8#T;r//O6Z-JBEY3*n,Q]?>l+f<UO^o;TnE0Tek=rjoRZ_^b8s2O8_A(qq
%PR/gu`*_&AW4QoT<Hf/t8=2E*Q[>]*\DV_q97M[F/Nm[TA5)&,`EtfDa9HZNYH#UC0<+Q_K([^7RB.8n_G$cX?R8X=MN+YU-]q2D
%*@>6-KBJ<?o[!k0FL3"3Kgpr>V\Vgn'VW_a&#+3\RsV*qX\t6aN\r[eOsh=+K9RV)V8`ZB!==tiTTI)f9knO&>`0NhIF+@0iRom0
%8G8O'o4m7L&T6_*D^m\;0\n,EMAN]'am5Z7%Zs]K:WC7)E4g%H?,o%#6mi*Q-<5?\'=Rku_+fG65F33gU7]ea&r81aqgq6M>I'$8
%&hdXl^3o`:ZXY.rh!")YfHioWc/RPB/N*Oti$mQ*NrR@;.T=1R!]qQM7m',%i)Qf51ItQC1>g5>M^+tfE1`Bu8YXI\,DOL9+XRql
%YAo*/&7Xq=B7:RKjaiUZA+)hfe@*(B#fXP.'o0ep-]?9B!ETt-OIsE/afB]4-p6g#Dj5ao)<Fa8eJ5\j8eZst9b`'53ArH:M%^gP
%mn!XC;fGk_^2.pCjkR0V`c2W:8el[.a0<`>(W&J=mKKH>MIeOXdo&c-KQ/R8gGj3bhb0.Eh8?#s`@61!B*2#tn</lVS;n%"1"_L?
%^iMbUQ"3IaC]^5%6t#&dLf9"%L:S0mS2GO#Kn2<PXcsR[A4XUhnPeD/1`f/>CJ<q7e?F!:9RmK>RY(0GlS;6J2T,-"(5s;0TU-Ug
%aUI\`MdsX;BOtdb>=8P?M6l-9Lb6.7/MhU*)&J0+r3@uD\dAt<D=ljCpV5m%s2r:&QAJT]APmCPjl7I>q3%=`NJm@9[#c2YW#W(S
%rUu%bN;)t'!mr^7M_rg";;6]&Mpt4-WOR&(WBC$>?@u&uXeeHl_Be-Q,BrOSpZ6":Gdb_=h_nYjp$\dAkKo.@U_Y:PH?!l=_2`#>
%-a,lNa.otsD0U^E]0a[KJY>K&#dh5dE/!<O7>8lE:80F5S.@*mQ;3B,(#o_1#+fC43b?I"VO;"0r$6`A>%q5+"-sZdNCt-(M,Qj=
%F(q3'C'<&%>52&`pgfirE>#$6QHBpIq1*B*#Jc#=PoLPg/WB.;(JLqn$kH:4e0)ScWot:/9*.P'Zuoos`5j`ORP$m."Rf+D3uF^/
%m\[376ke9L(n!0Mj":\*)oOI@'rR66.SqGu"UTBE0pu9eb2Rt*Y0"3$+Xuc@OcEFlN3GO!5(3$*rcQ=]3(BDNQ@G/8\KsluWJ'98
%bF!=T8ujFNI17O/=R>;QA1J1)kX:5I'X1I@R0kb%;V":UZpsE3VHKV*fhmjI1[b>G$S1(eE**I<CNq<fUZ.pd\Q_]1V[s.L>4cjb
%c7N)R`V<XTl](cq?R>8F_`5\?;2n.Znc[C&es8;<lN1R8Tt&>L^1.s?+)ZD]4&mNB<(<XR.L5-BB>qd+)P+lC+:Q51EU5*f?bK)H
%.fpXJDe@gT>q(=\M7AG)HWGj"Q0#7jV<Ro",T9]'Z:KV@2hmrHkg6kao.)N'#XYC_?)1@B1J!d&LecZn"pGi^%$L!E?/!Z%<FQOI
%DJYg_'sUrI=-jk.Zoed:YsB%dKe`H2D>ATZi5.Bc+!1#/F/JO:]cUgAn=67N0@#oUBLH]d6K6=050UbkD%a#=@pgYs0?\W&-<9G%
%U;RuR8SiEN;QQsLK#u)e=IPuUj]C62E>G*A-f4_EB&aIf.++_!%3EO/=^qg,c4H%=K4C%`)2doib_]La91T'n+a6VaJAM/JH--f?
%ZXTmZbc?Q^=rq4aQ[5ucc/iUa63md`7kg3t`4od27,(sXcIsSj'oba["L:m4jAC\o6YC-8GfsqsJg`P6,reIuAWB-@SmlV*)``Zq
%&<pXkLdU71L(PN:P&s;a@ACmh>./dDp'HK>36A6r.7@5H-SOa:6?dOk+d0?n;%_AFSg)oqn.niPm3_a7Jd?K5VkL'%A$&IUQqiJ5
%5kLGZ#M0=>g-i02P*/=%2#=`+\3bu/j%nG9oS?mo;G3Ag"7P_S@-j,n9?gRV5E.@(.s];j7>D/ie%huU+shZl62lS[O>^6l4M5N)
%EeVcZgLpl!&6WW@67:1;I@;I;=ahbC1]X__9GYl8L-_91,q+!+Fm+XF^t!!$!+Atq`2Xt^bj<kVjlL4k*m60)#[GOs-fjbSP#L?C
%eO(,j1REof@MNJkH9)aj,%?a,0G(L+MB*al$4b,0UE_L)TU\/GUsLfD:#'4h.?ert>R7cEpNL9jJ<OhCTh0[XH]okE?9<uAXa'XU
%IR"q]F=?^nd`ad5Nh&n<=N1U[QEpHK,2J(tTZcG,A2upY#dTGhAdElB@D]ApcA)OB(h.d6D@nkSBkrh'TY.0p-)-u+C+c\%&XG;]
%841[@Ag@I'M'3/<a(?XK:+eK:jC)$=iWU.QQ*?[?gP-=[;][@+U"A!N2g'*l$6i':+[PfT6]j?c@2.pt+W,XfWW#mHdKH&&ieWUG
%l"G("3:R];)*;me%T)AG!B\O=J'h$GJ2e]YfN*qTFY@<>)nF04;;bT<Ft[94L5pZY3"dHsa_WCmNl5uC1PktXAF1GZJJO?7k5@CV
%]C#ZJ&tQSRKiZV>YYE6N-bY@t\A<)@7.Z(O6+[+6-GR2&"*k2(nfm)/8n#jf$F1SNn?[L\'NjZB\$:<^pK,`.N5D>9N[BPPDV1B=
%SKl#(1&QQl7$LQTJ0/h4]pKJ:ie7n7B;@Z\Ro<5'__cphJ9q^5-kT(goS7((Uioe#e22cB#26Z,iJ'TgoYL?YP-uXUDkaoNGt06X
%';,Wu_M$M4%JRlh7jCq2Z/q\]+cZ`UEs0n./"OimbTmAs5QVNcqFV#q-aeVk?HbmP:bE]Q00Ngr'ff5Rhb"$5\h@\m9&ZQDj#IR_
%lR`(9`2W6"AWdEc!_l:[<Z#gs+4!9!jBfkVNXT'Qf:9+XpBh;c1Cor(].3Vk-Ld)HZJGpWDW"3JEoe;!`Hbng5)G1E7MQue]C4FJ
%=.*Kj>/$(bJ)dT$65Q`uEO_,(OZX[QO9+mJ=7BfLNblZmVK!%ZF/J)?XS^)C[lro=MYMHh+cdW2!d#%kVOiRA$i+[&;JDEb\^,+f
%GYCNQMY#%_[/4b]I/06::V:Pi-b@F(q8K:4F-7JfH=>Tmms;S<I!^54buTq@g%sMGKk_pJ$I![&go6j'QG]$Oh3J?[S\-!Hi\615
%MO\r>.s/k+*KM`%9u]7HPdq*2pIW)hn!SR=+)qPqeG'0P_G!1VfbQ(SQBh2*^'=]RkIe*HrHRqQ_Zl7hR9$6C,$Gk4\lG0]pNuuI
%./d8FR<#>O*oE^CA<B.h@Y$\$ZLU^s:,q10A;jRnK0Zu:ZTr0[7&bjf%G7j2e*i)K.X0D^p^DKm9U;psB*'g,Rm]TqF!1kT=jWtG
%4Gm9qn5Dt*KYP%[V5XtJ'.7f@QG?uZW_?Z>rLD-boP`r5k7alcIDYk.%UUoq:N2Ls/7-.%>HSR2/]NXn%@1,28p6g>qn::l0]hEC
%7e8R^E*!L.U[?"BPeVH:`4nBrqt#YCY+N%bc(F\F*`H&Rpe4&RA`%4F2th>5iZ%\0IDEGMDY@:iPN1?qmXb6dOAW:j7au#/"Up<%
%%uE+2HF&FH27=?RJKCO,=ZVCA;Hi'd3Hs""bZ07ScmT/_N]iO<-MRfJJTmn%:GA$t=SYGiSE#ns5\R7cnW"-g*[B7Hn!>FkXC;uP
%Joi9A3O*@Q32h+k@f5U5@^\`dq,J;m+rV)NgX<Fu!G#"J3rKMsk#kh2'EOP&;W^<P[EdIcj%Es4R.U:K:M8?&L(%bdQ\Q$5Y0T+L
%s3$In3qkB!guXkE3I1%$in;L.5BcnYa2IS9?[`+ZcIm:,RlTmE3D;Htl^nMsrS8h0j.QSmLW;erZ4gh7;?*<6Vi[2bKXMu4oQf/F
%.f0D&+p,#P`lrB[cQ2/"?hPee6+/rehCqmop:?O-#+7sQqo:5+V7M""A&RUX]=@TZ4=59,0bQ-r$R;=]/:3"2[i%G6PW:!62R$eE
%-0ESNnfH:k!LXRR*OX1i@cY@tKrn>;4Hor'Z<._8^g`FM';385(KJ*R<@Fnps*]?C>HS@cEJ\<A+kVj*\)Mc`"5J_:.^q,_pEJC)
%*_:NeA`Q_sZ-AO-TlbL'n48@P(:5To7VV3q+f0`h7Mr8S`rS'&R'+J*UAW<Gn9Z:;:;!eD]:=CS?SQqE@eZ[c1dQU/@/Yd')nbHB
%Ul4;1nId5YrAtQ7H;7O>b"!l>!(%<u8__J2'+$^/08:c>c=et).Mi>@`+P7H:W2c*&(F9bb/`O3^4aHs)roaXPn12VIa1OTS0RJM
%<ih4[?5J8%*_Yo)!B^IkF)$V4Pdu8%6<M+$.='9"bLRaO,nqN"g`miX!L'tsR#K.=Zgg\#pOG&C=_4@C-u&*Xs,N;iToaU5!`]s`
%jOR_E]M9la=eHd>GT*KeBX3b9=uu7ppo'ee2k-/U2$(d""=cW#f>KU:#.5o%c30+6ei+d,.4u(^LI;+0\KHB'=a/NbT:`omR*Fu%
%Eid<A`G>7@q>Aa\G$JWr;)^H4'qcdR#QP=uACJ_NlrD/p+/h<7'C=g5]Uk"uU_Ktfn,oYt2`%`YNn4]Q6%>\?n(o`Z&\QIf0$ST[
%ih\MM?95VX8'?Rq6%C!0.$UN/,e6W?XWI!o3qpA>IhDP=6;=]pSr?(FplX(kZ%!<S[*fV2]Zs+I7V\,u3^u(ZlQ-Q`n;YWbh*tO-
%XYu+#"Zkf$bY4I:9ZH+t1i\qaikT0[07n/]:2UO#/.NKQ5Ia8YWPn5I85u,E:aFsA959J`ROXW%s'kXOSfaQtB0ALF0NsH9,ro*q
%Fr]`amhJ/$ED$sroek`HaqMhE./2Z3Zr"YYk/4H`!CsLo3jt.j.k3'q2a56NeR8<J8nY^q*jc#%1JnpM-MDg,Gtmcp^eN7jZfBX_
%DEX#4ZN&"Ca7;VIkEod[#s7\"_Ia[h&^+3As-7>F8l4_M-;tg#!R1KMe\W;!X-m5b9f]^+G9o:h[l3S0E8jYQL_@1Ep9i%<5*fE`
%^rUkn9s4o9<.l5f;_Hu>>g6FgW*?fZ]dSeaMaEA)cgDTS<_$EHAM=DUP.Z5R`MYQ19c(YL!CpuBUfD+N2*#]<(c06WdGn_Vg=Z%t
%]aNLV;B7AO-6;ED@)mVWQDS/tGcg)\CT*fpN\RVi;'*#\FPA`-8m5"GPa*M+(.fd67[JitT\E><9!DkX>^Prg2M$Wp$o:$&<i$'I
%m6hn!OFgWS^]fA#k/"<cP>k4nWnaWh>/-@b4kTMDGM)$#%Z<tHl^nidh?C!*XY<ld$??FuW3gjuVnKG)?=e*.4De.pH@$m!nh.YF
%p_fisgWb4P>hWn`(YeB4V'L=LRq>5*[7L(dp5.7p#b`H\7fbU][1AL-O\Ce7`.1fn#te,<iB[3$AcWNi=B>mfD6[1:h%*bW-<=`e
%=dnLf,h.d+aQ=@1g"g#&6FE8Jc5N;Fn;e&ZG"'FHZ'_7/KLV3+Yp@mlPsq(^NRH/[7'5npBf'Jq[#s9B6B]g=jk\VR+o$H6HrNek
%Zde%Onk^Hq]\KR2)8QYup0C>jP.EJ)rhsYaMi0+H_MN?;8mipIPR!5h@3kP#&rF[[XcaeTp$09gJK9[`VmfeWngff.jebsoGtRs3
%^Q>69]!]h%P'*4b%o"$5OM0pk3Ds,PZsjVs/GrX?179:&2?tIufEgoVWI"gIXTL/)b<WSm;PO_7(LI;@-9HSd@dM=[M_"?qcoGG.
%k"%KS[q&WRE(E)NN'L'"#A=k65ib1+je-7/<lK8g/G/OQTT*uShC$[@5;@R+g$L4V1)@n9ajA)jlgng8M6%k,rY>eNNT:9mP=/mQ
%'.`?F1,utrji_bg!PkEd*<Xi2,U1AJYkh=2US'(KaGNYfkm7>D[co]Nq.GWh9M,k5'$4n'HRRe/1PH^'46NI7r57S921j.,0Qdu"
%-'D:8T8i]\jW-H!8<HN$0cIVTOqg_ZBoBI+kFl5tRf3S!#OJaE%WYcKgc0oD(D!cukol]-->>Rpi!?)2Z50pC-Hf&MaU]A4e1hY!
%_GFL=[j"2%__!U-Jh1D)]b\O0j)S[&d>r=058rPPrVW.1SARHoB[e66OhdoP,QgV#;)/'_@(*H\,KYfLH<csr5SqINJr@pq=f_)!
%<k5$me%H&ul`?!4\ld&&Yl<"WbgfG1B&BHn_JiOOSK&X./j3%[jBrhFE-jUg@1Yd9CL!)_r@2dr'..52I3h6cHsq)F@Vh3)iV6VI
%?iIdeiF`?jlk1S/:TU@<agi0d0DG1eWEq3oQO7T"IlCinXllV$l(k'5q5HWL(OdPj'mk)\H/(A2Je?>Sj^IXIIK?V'+Br6!>;"F<
%^(K;uKq+;N0-?Mk,_qR%e\$u`#a:b1#`l!ujm8I,)HFJJNeDWGiMa"tP-!s?n,A@TXJ"s"bVjr"M,iU5V^K1G<km*(dVNN.>r`:u
%`F&W?O!gk'>9^h!*M:a:Vn6;L91[Rok6I:6rn656o!m@i*jkg0Vu=;Ps40V'<ohkYoD#g_LidsqBt:6*[*#pO<&kt".o1Y3dc^/#
%KQ-.MfK`5L0VPN=Z$P1F?J%M_KBKJQQKq-b'3a&[>)_'UCC0ZY'*?OY>rq;h;W#[BDR\HrFVkhJ4Lu2@fD>I&^Ka@$]q,HcACV\M
%!CHTQ^Cr_Y2FsCF=b*%%7e([tH;4DM!r81t\P)&K/,da2jKL)n8,1,(Ll(o3_r#<I27e$$s7iE,rqTh(Q^nB(aOn(u]mQCM&L6IC
%Nfc[MFd>uc-$p^4:4q<K4h((02t-Rg7Zg9\!Rh_Q+;:<HG[X&+Ck:77J!aYE(fnOJ9)4)Ui>C7dKhS.EkH:fta-S:k8i`_:19o?S
%nIG)4.8R4J./pn</X>5kX1lD7s"X8Hg\Y'=^HkmLpm]PlU$71-cdbRTq6cdDRB*q]_q!$eD)4,O+#Z4:MH#^Id?3Ts*H\XC*->A<
%2KDiW!0ql6:Z+\$7TaOboC2PMN8;9qrG)5e`007n,H+5h:N0pAO1Ch,n5uPOof6S/P#Z&t,57MH3qF)(;^%!QL2-F;gs(KeD\&>>
%UMjE-p9<F9C/8a^nX&:6I966]<Qn$'G<D./YQK4%I]h)TYKU']`A<4^VJO<:]'?ushH=K9hNF`p`bI0Za/SCNm[.>ig+0qH]2/1p
%Gj;r$5A+''T$H5Wl"aNfDA.R"^`qsOL[S>>@24&(;jTde<rUomSRF;E,Bkkn<:p(4h^[s*Icir/mZ?r%rJZFAoD[>05Wo%c^qVVn
%7kdc,btc%,*T4p632=TEWiS$]LXg#"F>C$KFE(GIPO6]C[rhb0YaiM8Tp+?:m?aHRL0:dglF6MKM<Ve6;@&&\qLFfZe8P(cmI%46
%L4@tEFPA$-o\lb)rmYU'o\8fCfU3%@8XSdc7QYXC^Qu]+L0e`*LbJ?qWU$C-G#Ie"G$Nqd#4'54UJlJ64LjX!`(%]t=eDoEc0ep,
%V":5P`'%6VmE+H$k^Sa^5D76e=Z[s](TPd<AGL/Lr21g`3Ll,Yj[R"/>1l)Ume-R%5#EqUE*91\3f8&6r9\US^-'Zt&;9u-oS7N%
%[OW?RY(P<1&3oRHeaDsqP^$^*mVu<'$.&KrXkmcuom`Nu4XHPHd&nq/Ir-;-?VjMjn#`,Ze;\dc^HZBB@F[=Whkn8OkG*!qLWaR5
%SB2)XSJ)SU17[#>$qlu\V)pg<"sj%tW39$cWX]Z[57';NK1Z=1O@BAVH32$S8)fdUVa-RkfY9@*)0MbQWT7U41B*RoINHr;Oi[(;
%i-nu\1'p>aEHZK7^B=T*dZMl<]LZQtLc@^>=3pm;TAM,ZRtIL)A0@piU5@O^91q123qW=OhXS2Xa57lq:BpHVJ6uTd44ndE^[D3r
%s6HOXd7=2eVuPn%5?SQqWTrX?o;mPlrLFjPWJ>Cla]jCHlb#B\7N.,KX&3=;ng92."QTR?Ndc)f#+9q3ER;C2s+lSFUM=Iil!^dq
%+)g)%_`_j[S0D==p1q8n*62$,eG=d>++CuIs#9mnpNK1eW:aAM1s>R;_;R-Iq^8gkr\l7WF;L/r]KW7Qq)CRpTSVmjc<o.omXBFV
%#C`jSoEhO&[#V\kCBO]W\uAMmBnj[9mXYJS%)j,*=pT'-h84:;=+&]fGOg8Bfn4#:oXmn^,/DpsNW7RCT+[Y)Sp&:_Z3@2]*f(q&
%`^YYJ+tEqn$m?lqJ>\rI!XM/),D;^#@u]Q'YA<;53D`2<i<U3R(\?M3DJ,Yk)P+_/EUu-b>$d<J\]NTj/U)"mph/LZU<P03ra2sY
%#$%5lIe<'CDQNp&<K1J>r[:J#aLO8SRLFSn&Z7.bS;ma`aHQCCJ\OjI2?*ogdFk`Br@EZpDu)YS^.3ZJqHfEQs/+b)Uq%AZ])E6Z
%rYJNn^WXp`Tc'QS-K]\Pkq/$"_U)7-?=j7i-E>c*=m(23JN-5#)#]OBlLtLToY2aTr9<0Jin9*r$FK4K>8mN[.(AZD]QnZ_r(tmT
%[lYt8a14*TY.a&p5;+)qpfo^6EQ+W\QY[7*)jXO?T&hKY]n0Ve`=D0;c/\M:fTp)bm9Y7u1[g4+5sO/a*I.N)ls0@AJ,WrY2//Ch
%?6+3DD?'2dKMeVA-I"dD(ElKa#qg_k^pTc;/Q\OQpTaf$'+4\J,nG:%4Eb8chmAI']]*.Wcu%c!la9]7Xl"#?Z^NpCr_MrDN3l4+
%CopimqJXWk5#GR;83U$hda7d,%uU$+`.Y05)3,;!%;@<oPte/Qs)IX\0Ya#55q8]bPqWWG`J17PN?kEsYq^_nXBN'iKg,3A.!OLq
%lXH6]b1`R^/'EjUc8RMOeso/j%:`.59DqB[FaG%u:Zr<&%S9q9@cg%f55.2b_"?>iPYf]K'TUV=S,`X]PZY@JilS3NJZ.E+k:i4D
%QFiru[7-6IMd>oHU>bIM6!u\KB:<Ldl,t3(dg&XZio_pKb7Np7(0+2t1C?.(BUm!I3_sRj!\Ji;(5a1C_/5&O,8D]/Z9C.CaiV43
%Fdi%rCg+APOX?I6Y-TD5e9@n/rtrCnA$aH)Cnp!<<;G2p#q\k0:ShmPTRI_o&4_h+&Y\aIBKOXPa9R@!Vo9^"&0fmVHK<''n,np]
%aQlrYe,!?lHE2gq35CDM9[`!-,.3Vf$DtORi.F:kkUDBK;)NqN3q.u:2dMc=cQrms7iUVnAQ6P3EbI>;A=g!!Q)?B3l]'IP4/*Oo
%0:lF-j"U:Kd"3*[P_p&c&0#:#H6O">/LMQ3S65"A^nXeW!VT=P3+E72[7l4gg*UhUTg.(DREiGj4fLDFAJc3Z8ru:C@<7'SkD#)U
%CpO1N>+&W-0ehXO1I1/#gRQWeQ>r2*fqfi[";,GnP@88CBU1sIY+o*l(itV0*8M7.(%7?H9WU%e<fLT3!EKOpRP%;^<1$FDjI;cr
%.M*esA"H)],j[2@m,MeE5b&sd-_8]Zg\c<pr![]go0QqO4f7ppJe@"%!_RURSVC5in#485-(T@P@$CY"$%nlN^DpID#tjEc/JT[o
%&4rK0SJ+tkT$SC:'*/Z2%LD[LO#Bb@k*aR3cmGDAg9s7I*[8(4O]H`gW1?f,URUpE4,e6&,?fdBH$(D41Mh_1&i(alLePn\Fd8!5
%"rY&rgX4_!QC\l5$SiXDB#Z9h7=u^K&e(T"FQ=V&8ss6[?6[.NBi&@!Q9u>4T`hVjPamL7;<BF33\7TK`Q&UF3NJ)MEWSeWfo0p:
%Be4)XHC-GF12L%83F0esS1nOhG)aRgb_SjH.KO?h&-IjLgth1I9:<0*J>E)k2#&G-o`0V]JXS&K9%kj4").90"c;ZD9^jiMk;e&B
%0fu*7@!4NjUsQ:['p&3L6gg9N,N8'HQ,hZe7K_KB6peRm^Bl72=D`.g90%ko-H"6fdB=-*%09&;,3_%R-'&lX%h$mZFojC?#ki=#
%X$VfEaT/+j&W3cJs"R3D8K.(A\ZL[A!+?>d;9iJV:d&?LPsfoD-;oF9aBa[POuP]JB3l*^@*Z9HkLkmaPSb5.XTGb,.H`NWaSmmO
%h4Ul=J7ua0k1suQ!3YD`/K?c6J1c`["]9u69Q>.=?FH9+66nJC*R0V$.V#^n@hB;8hrYVW+e,"jEGV`g:J8pU#aX2+n^\9No9Mjp
%`h>o65Ua),R.j];U%YGIFO/M"?G!MlX/t[(0:4'W$WPGD:%Bo,bSj:2Uo-@'[:N0[ffA9)3?Z0BrD.0,Re*RlVP?oN7V\JUZ`R!s
%W5A"7N\Bb!=B@Ooj'<0Ja_/51VGh:`s1BlSoq?Cef&Sn,-XjNXQj#A`BgGj2$r^Q^NREo.RZre.pg]+"7H5IP,mJ<VJ@^=X@+&.J
%Oka^h_HB?D9r\^+=T5K?l6&u<clSaAF/,"3L8#:24;C>#R?GsNH$[WZC@m/Ef.sWtL:7=a8bA<;$QT<3.idTiEdps%1"M#-bJ,@+
%NPD,q3NXJ(+#E]s)+eu@6X[=^s*f!`++2rX;b0rGk\lKpO\q(EKY3/'5@PR8\1WUZeo;g2@V<Q&Zl3LgV"uetNK@LuPnP>J>*KK^
%-T:h;GA;h%Z=IBbqEh:&n-h\*AsPYpjj`67qptpC&@2K>E_V%)"Xo3bX%T7d.u$8$[#s6,&4i*)NIJrZJUmD9J9FoAe4=fs/Mbbk
%XSiBGiM_8%^R=B-JkCusVS>,RIa^0F,G$BK\tak]V^6O@=4]KT8qlHOehd:r3mGH."=Rm0[NIkAhKPO`7Qj&BX^(`!]@[KX-n_OZ
%<!Y.>^B!"1O^R*.M6S+q:IQ^-AeHhog3fM;_L'Nm'j4tr@;)`^Jt-dY#?`AG3_[sA]L(N5eoGX9b:HuW(8YHG1DlG%K"2!Cke!43
%NkbDekL>:@dsPlLm<UOOmu0D,NbF<Qr]_<L]lsMn3O@R+5*\)PK;1?Ng8BB&fD_&tcE(!ni_m1jA(o,K/2:@sC0o?PrMs-PfPL#C
%CV2VYI9e0Si*Xb.?E%nOfCriPqg"i[e//[Pac@3*Kp#nUqN8Rq,?]Ib")5;ORBj^?2B'9[fh&e;Cc$p;f5AkM\=BpiP12\[mBt:9
%H+l'*muuca<L@V5L],NdfeA?_2(.>R#Bo^&7Oci&*HmJ;qJDjsb29]*TCHQ]#=Y,md2dW2[FlYG(TpYoFan8foNYu*0K>sS/k:9p
%[>M/5pO?nX]"N"Y1:qY`CE9hW0""EflJ4\D!d?`^4dp>7R7.b4Cq#0qGVtgiBX.E["H";YP]6Jr>])&Q#U=RCbdbkgs47;1gPNe\
%?S>1j;"r9:n5s>hCbY4Hr!CI%mg>f`##/@&Jqjs[?63#E#eZi;rRp?)^P0g_rI=bPi;5/maTi)*q`f/q+]:jCD_]O%ouip$T7gft
%K^K,'njVm@m8E9Hm8($jf[sr;dYjIbYKe3$j^,SV=7]4m4CfQC?pV;9H&$82\E2`Cq5Sq)"aU]dF'#g),N\_()Z%p3L\0:nX`;#$
%T15\c@_(;VlaPTkE!?2]#Sk;DrY4r`Bb-\[,]3L5aeV-`RB(\[A9',d/(BmImiJt43bKh*kNtS(prn#XAKB;BL1)C7acQ"6G07PP
%_`"T;>Q$J:&em1;6DDE*EnWXP8qYF2fl8aI[blR6C%d=o]k2btdcqjbJ8,`/>\,Q#:Rc]XUI1Sk8:km8i3YE_/ScDO4;q@`n9_((
%W[H6od:VjWTC5kK@AS-*lrBW9#K(`B7qr/+7<19#&ALU*B(sp>?otQ(Zr[%YoiArPDLRa0MPK81\l#a#L&L`"A,F2Wl&WU-U#U##
%gXKr,%0M&bq3+\Jqm\dKbgt'p=9+TM!uuH1XeXb+Y]A+ZSXm@'.O]H>oPAbE2(fa(_MuYR)\oAmPetlriEGP+RRCeL5k.(*hWt>f
%:V>b+(Ft9;m9gXms4XXB[/W:jXR((ac/$ZbB:.dOLpMQN0l=8M4ZI3uZn#@odqfDu%9u)7\+d[$?5CUJq:D1ol1mQLagq1f-D.@[
%pNE%HceG@1a+O:,ikc0b)?:]Gm&Z':<&Q%seJLg[Q2QYL&3(YR]'[Y%2T);!^9ON7I>3U3?e^CD=J=t9]<+ZX*[Z"oi(#)G$Yl=1
%UZqa2m[q?YI8PpRET`QBboX@o9gEnfHfLUZ,hq+VG(4Jbk#]/cAFTsr[.<Zo:33>_jYJ>cSdFFl:^magq5F"+p$DJ+_obX;JgNh!
%:-@WL(,Ccf4KcklKo59knTo7Ih/E!jc!q=Z!EYX>Jn2:R&DR/=NDeTlmlO@\0m*-D>g\1PA6raemR=iUR'O$*?$SKugnG.<m\^O;
%[S$T4S6'PT#Kstl;IssOMe;:I(sV.tgt\7QDO!`skjHMGUU>?Fk-;t)r:%`V,&mm+c7\="E7?o(,oeCRb),ffKZ3mU]>p=1/iQ9r
%%0m\Ef%2HJGWm@:nAaALm69n)pF6>+.C0gSpPHqUb8oDFNma1f=)pY=3l=PMK+GF$]WO?/IU9nWMrc2O@@BkhUi9RAf\P=U+`5D6
%dT5GD;LQg)8SNAB*((e/O<q=bXUm<*=V/(X1S:pQiRlFNfnf1@PEDoU>,aGt\X*mmdDrWm/T7',s5lJ.As_/Wn%nnMdsb:jd8NjK
%Q1j9Rh"-A%=&nr&FL5r5!g(?/2*JE\8XH#_[.e:"H^3FE.ZHX^Sc5b5#`G#)P%6f6HY[^IkLV1X@aZTC/XG'BUa+u8NV@PMY8.bd
%:S(L7YM/:a<2WOI<Ut>PK`KAmeMprXf%YlnJ"8KGY'#'GqJ?SH8>T@20Qg$fd]de_9D9*NoAJ].3lmn@9rYK-H/bPjXa]_\b.RJ\
%_s6)uq/dra)P$2,CK$E$)cVk+''DZA)H:oB5h'Lh*`Tc="+D[^]iM2c*V(6@ZqA@^GYN6=:1?[B%M"uH@#H5o`+fiHZNo.eg01TO
%n'gQhF?HN8K\%ZZV]*7t<pub$K5!E_2>5<J8)$NP?@^KM1sgE9F^%e$"4q:2]:&4SV:pV+\TLfG+u:mPgXXHIp+Gl*P2Gs_mq9(9
%4l(F6X7C%JcDmgqdsc5MP@7KKGn^lig7@Xg6jD&nm0ldZcrnAqmth1/i"][i?jIWT:c/oPG/a9%.R!%h_,m*Bc%'Qs'>S/[VHCI#
%=H,bU;K(_0@[cCuoCNY0gJsb5A!p<(3C2T[<)=0q`h63ha=28rW.kR0i<QRK[i&[uM;:ON)I];&-OW5T6_a*>p%jB?UDM?nQnNWP
%rP>imbt3D'J"LEBrp]KdLV5FC`VGerAHCbal=)pN(7K=1T/?F8K9;R/U38`l92mOhr"@OQ1S;au8ddd$Zq5[XAUYOE$YMWin+XCl
%0qN[D#meZ2!Y?M5eK0aT+D,>O#_.>_19k(JWTq<rL_s6[d'2K=>!BKkfR5C3,%\-RaEiQp31XP5QngYMGd/L$:4A[)4S,")M1b-(
%V"9?FDjbt*fk^?E*qsi7essc3@6nS5%T68X-B'o$*d`luaa5r.jF0t^eLN?6.<SG\^`SWLQ_27]FCL0.6>Q1]P:6O3$Cqj)L_nO8
%XCdL?e+G2i>t!rAg6L/@iUdgiWQ3ta0%Q=XlV/'"p=b/E6+9DM-V5/CX_-2@jA#$*CDMViW>1m)&PFGhF)&G*H0-*;)n_*^KKV#;
%ZY@'sZSYS[[+W]GL$qmt45H[l_2nrI=`0XU*sCb`I]iO?e_fhF*SHs<h4k;sUl2j*d?Gtu(%erb=T'Kg]iP$DP?NJ2Y?q6Bq'$%'
%>Pd*2)JO'#c/E:+[s%e7QENm9jgP;#V7D+?q.>\7h-TE/VVd-S]/[,[l?&rQ$J;n6nU-%DY`p\-52;nhn*G7q=tb<Y/Wn=#G$E""
%@"qn!j%cIo?Y3Em]XpP_c,HaFQ?<I=F_4`c@npf`cA7g$J#PMmM],@$r0XFLIbT:r\\PK$DuNe`jV<!ojN1\LcH'/;*24L+:=jZ9
%^J;!PQ<R_ag2jQE1O8=YVUomY3WM0Qalh:j/q9@*^1$4,(/Eb%DKsQ8?afX[PiJaF5sD.S*FF]p9O@A#Okn8e(7?^#:Et+JcKQ:f
%IX[CdEc0'k9J2cZ=30Du.7A*cZkPQ<d9C]F%s%pJ*"7X#eZ1cuU;SZbdVjhRbj6;^ql)FLm0ZG='dnE1B\c%)e,6DeG.05?re`n/
%h$R22Mqe'8K=FsN"8q@<0fN,hc\?2r`IL%I^B81OlM.jF=lkmh>D9;b%B`*o?lIJX!<VM.]$d`Zf^QKf)E@&U9?XLIHg%EYY&sF[
%X'%H#9"X!==4',n-.4GK4ud<u@_rYf%@.=lc=CHE*WZFYPEk!R5,$8pEn3B?jK@eDgmpBmH>`C;V\c:K^@k<ok#^'<cE0\:dN7p>
%9$Aj7dmt2ZljbV?i,&!ZK#7.+>i;tCD)p@gAp4b]mOg;p_V-Y4,AofOa3sWUdB5]^X-gP[m+"O/4..-r`2G'+D\quUM63Y;P#^L\
%Ub0@J[/Y9:M;]/<_tMC7fu\-@ff>X=mddJ8n!Y\L&G[e`o^A"aHS4_K-bSU[$%;K;Icod3Z[_VIG_\1oaYNZeG2#7[#iqdsrMaOG
%WU&`6S4D^!EJ['UMnJuPPgu;'*-_9r(L4/q*Bj_6?",k5<^p\B4u`nKfI?Tb?(r'drc6-U3^lhSZOA1f;fYOF:pVZ+QkeRKp#`6`
%TQN$ST/9J],<B$lj6P_4qf_S_p1**X*CA<1LtB[@c7#M6=MfF//I%s['-"X@b#A,8G`b5"h!k_jD7ff:@A4^:"Rg?gaQrAKV`3Jg
%=a7?!F2%JHmY8=CFEVr/^NOXBn">#=A+e"#R@EkEZT>U.?EC>tX7qodXPJ@G5Ie2uroW7;r`RFIY!e>7lX:c?%>$n+9B4rJE,B=g
%A+fQD_VN\WdbmtZ8&Hn&DdM]*=rYB@KCrlH9+,`d]A?]'heH,k2\3pJg>%$B"5:c[om?E"g9C,/_fGZup298n[lL*U)]mkHDm#\6
%2WAMUQG4EsHptq0p4J@\M7m3$l+VTAm+qQm:;-Mpr)&CFmX82@3*Q9bFDju=\^S'8rG6UgD/Z&$iVcsY9Y@R6s5B5K5$g:!I;aW2
%E*,?3Do:"`I(n!AKpuG9(*;7Y,otC/#PF,_++*YE`n/5J]n][TB9P"#C>6'r]/#5pc+PnO-N,]@VmXt$cXuHtnYc2:g3%PucLR12
%TC4>]Dn]>U\'JsLJ%9RlE5'k;*oU&\cH?.KTaVqGF%tEX>l/oPo5S8Yq=sf=S$W&Tn'>a<gGciU!OnBW2\$Q3A*.-I=K6LJ2c&im
%5+\CQ-gqj5f$4`u<NY/)(u@9a(M6s])B4<qZubqQgV-S%hRu[4Y"=Bg5$jbI^"ZjW[Tb,bL,YURQg,(tY.e)MRqb@hCcm)XY26Y\
%hT%\c0DF>ZMfu:Qi-t-=YLA[&S(h"a/FUe5o;mkP]"`W7bKN!IICZg)KHI?\DTjsSDQI0To<s]g%"@um]l4])-J8:Y@E`*Hgg=?+
%T,(b84HfR6].9MM\*-QYO<F=@E9I6!Q+KoR_82l3kge\0r8*bf+8Ib"),l#\QaIoiC+X@7;tuGM+e2\_N`th;bOh(]`[BV\P"?_5
%k,nI-WpMXWghH-$4o2b<Cu2h5Cj'/J>?Gfk\mO2PC^k/af345N4-9RMeEhrL=/jU(gQgB_+.QoS,f!W9erN=HDom",^[;X"9s:h:
%]s>[_9)UYdh78#XrfrudHDY+O5)"2e0#t.S<gW[]_\_jVa0-QR.4)RS2fsY\n(q48V&r3OZb5qif))S4_aRW`bl"$NZ^K@`EO[!)
%k^2r7/a,_qpW[SoBms^i95S<OGW*:*,H"\sH@Pdpqc?V&".Jqkg8U'Le_0Q$]fL5poN(q;4FauK)_Bc^[/9g66$mBe5+@Dq8@BP.
%CUHqW+iE*Pm,qBAm%\=Ui>:6j<'X29g&?<gW:olDo&J9sr^INRO*:7ul[(!tR$(3(LUH5RZhQ$=g^H+Xh_),$>[8>;":[`iBKp@8
%*F3U4=O.aJCfIWgmo=:R^8(@)o]bd_mIZb$1qb[e58i.<q1jUZI_@Q$(abf[n$\rp=!+U.l^DbL]5^.srVRF]m.$XcNOKjUe:[K`
%dhMb,IIm0dnC-5cD>WooA$-LFZ6C=Uhcr+JS]AErV3a7SS#\']Ze%%X]uP>k66A/lm9.^*e^[I)XrP%8_<54&eNE7ReQfW]k.t6G
%I_7G7"o$>Z?>jD!mbP;)f%gT"A;VMY1^m=J@YNLq`s[*pG$`dDG&H(eE2,,>4^5JMh0PEYc,lNAQ`o"(K=QE*Z!UGs![Gd8"UMUF
%.u0+DrpA%lc0p*8YH!Y"@t1Cp)B6.lDm*GRgPCL4pIbk.p5#+WS?:@Gn+I(:pV'OjVf)iq*Ya(BC@9WDs2$(_1T@pm14+40DCe#d
%0p<3N487n6.p)*/%sobAo$S0LWNY4jODM>e5?[nf^Q5[s;V<PZd$,G?eZ<>qT!dWT>MLWBT%.&irmY$>k;iMuHki-n0WQ_#Z+*i.
%,9E^:hFBd.]Z"?t:IjPHk?cptbLoMVB@GT.A^XdG)eNm&0%J5dFb+bWD&U!e5:ABr6A7jm/`qK2ZH>hn7Qr>>Jo'\8XI!+!29"%5
%G.s;-N00<C_rQTXQL.a:/%_Ej<I%)F?2<+6Cr*.sPAnEM#<K/Z9,n>KPu"IB;%$`BR*"9+0l1Zles4.r)!&gnkO+]'q/U1>$EN#I
%DdU]O=^N`\o[lca,PdSs0f#<M&^\7!*gQV,EbCU)aQiQJb4aAl=fqmk;+@u8bn`+j&D15>J:R9=l0Z21d."3qGJe6.NO%"d1tqXT
%^B5;jZti)AW+Vkibs#uW$fU>7&c(M(iS[BHiGeDIe#!'5qX`G7g%A^pr1cbkra<aY4]sdr3(VKF`nY"k\d:8q^=GUGD`:kmq?]aS
%b=BL/41_)5KILUWO-\$b'&[Xj.nD-O)eXAP4KqrV"iS5h;bpGhMGhs`gB,jIe0F*FX<9c4]M!YMm6YMY_:>BK2ePBl)LKMo+''?W
%D)=#,SU\8^>16,c0,j.4h5dqRDmm9S?^pLYs4R8Bd_`*aV6P%'W\,`SUjtf")A-jYFY)t*o'Sf=I=#P3[+9g3Eej:PSZfH'LUZ,!
%G"GQ%d"1E%/5=SI1,ilOHI.)S/5k[#[/0.7K9sid?Hc-459f6qeEJ5aoX7ILaj^**jmCptKBVpDK8)o4&@WH>0<@(G;f_&01>t@u
%<*l)YFi3nHNFmD%'a3BgeWl5\`GLf.6.id]fYab,g(n19B4B>gik\pJ0WqlZZb3lRo"LR71Y(^sfO_HDFCf/'qr1!?;.KXZ@!f&_
%okrG+%i2=B?f"N/.5.Mo^A7n*g-N`:lUT6*;:ZlXSBcUjS_8KlXT](oDkgOg4t_(OYdd\mK@sH>"A58bYJ&Yb=0Je>)Vng=>/=q\
%k:g3).*R?dK@O/#S`0BcG9X\rY81bl4@kOeO6TDT*q.ofrVYo/g0!3ZF#7=*:h(!lXkqbmSnBn*XTA/SU=krsIWKWVf/9':2<P1H
%"n,LcP1IZ]j/BL0I@e3eKjTIZHRHi7Oj7ouM:aZ_g9F<BO5Be$3mZcM$j?'u%Mk/([I(B80*H!IrFkH7PuJ=Vm^9TLM_f!CRhW(G
%qsm)Yo;kN=GA$2T=Yh$tPimZ(o:L;qm`Tp\T@P)F/&U&0la<XgbNm@Afl@Y\I5/g)pHt4%kdun`FT0[(p;;nl?LNBPG3=$1fNA/b
%Si46-B7BU3U#htV:Ra'7cQ8P.RZ-YWF4;<G]fir15C@tBhOXOZT0AN$Y<H,RH@4o0SblXg3@`n'+adNYMAEDV5L;*POX+\KY<70;
%I,&$<l^]QpDA%M+Ib"e-*S+7p7pg3(M54MTl0@QSrKWkQ[:^#,hQK'U4Xc+[m=qCdY;_b=9A3,'*^>-]6dMcC*?9j(>3N#9;%n8f
%,T<j2$=h'j0>QZ@GdY#1))Ntk`2WMK-F3o0C\:3<UKqc>+29@9gtZqJIe^'@(iLIF*q+<_Q)!l?qen[Rp1G%,pV3:2.6+iCo^tMN
%mEb@c=Y8;i4fF,$0CJrZG+d-qC$\p)B\ChQNW(&Fphjpl@ot8U2O_6X+fG(ZPCU[,\[0$F5*!biib8;hc.Yqkl#riuHuF2mhNO^0
%cGFVc'-lk'p#iNP3knn0gO"<K9BV=Rk?U*S+]SB-Vqi@OVS&Ju9T3c]"a/[ZEdmGV0)#WD[ajQ\UIW#nqWFX8Qt-Ws[.1ACk8BQP
%KMF^Mj56s\*3RSMfJ`=oZ9<^6G%GkM3.T)T4861)n&`CnB4Z;M`n.M@A&P[]F5u!JlDL[AT!*UsWXWCthOQe-KBl$LL?U@qR''A;
%.sh$D5.^n(SP),_T?P0r;L^SfX$+)NfO(5`f012moj4"jH*Vb^c.7u0Wc0Wg@Iqe(UF1DJ]p&)+4uBB\Ad4@*>.a<^d!6cerH@dO
%m]cZ[ZgXYppm'-Dm0]QMhT)IrbMbQ\-?XHBp.Eko/hX10&>6&tn*S^J4Z^%fW]W+FkN8PE.`^;q=$I];;Js2&Ge_[QE'lQ*4hS(k
%DI*:J\hr'lr8K<;NnB<.;SD\F2<42rh?ltdq=O)'J@I+i\\k81q_+7Tbbmn7d<1/L=o2TFc.2I_LPKI2eX_0;=`1Bi>`E(>T$>$]
%?4`4S6)HGtNPQCc%SV$4qV(gB[I2b,k3Bfe30SRJjKs+@p8WI4l/DNn0qi[KEUESIdat3qmcHDtEp`#VRXID-?b6!sCWF.eWa4AY
%ou6tbdRRZ2odp7`]%10%rH36k[5B@_bl'u*>ed6+78NpZ^'#nr*_qG&F7g?<7/LB6oWH"k\GY]>ccgS$mUTeXU8mUnHuQI"E<#Q%
%mD[kUKpCJ`qV3PRM(dX&J2u19b(SSU^UdUPI5mlaZ_(W$CMZ.o`qpV.?0]]&X:t0K+-*)9\SKGB'T0T:CV7\A$S2&[D>4"Hr8<Du
%5ME(YlJYcRmdo]1jY+N8:9jClM_QrFkC]$]\'9A!Ei2..Vk98>0"nnU*9In:#V819I$SYe]_tZ/1J"g_hE!CeG%[]I9d[W_mGYZP
%A,jRFEME@%YP:.k^AW';E!"Add_O6O')B(dA$s%@hM)I5KET"mJ#2u:h+[?<>>&UgK<+IuODZi&>%sC/$anpl`lSJnbdUqIXiAB@
%(U&\"Y0R_o^K\UQPq_GDRr:afC;#)%:GZ>sP19=(F(8]W74TIPmXAj9mrYUU^UQj\^^;L[KmOd,reqPJS6C7;L3i`eet2S=Vs+ln
%BnMGBqj`>dQ(=@<T-';[nr$%/o]\&n]?nCEURE+XDUb8%+#d5DpHL6)*/84I1[.it/]"cYeuPWX'\S)Sh7)P6o@ltPDf3:\`%]Cg
%X,h2W&F,77/,R/._s"RB:XALirel#tVB>/CY0K.59+.cM'U3aeT+*Rc!A_:cgNL9:p`SN'PN&Fjm$4?Innf!i#.';E%j;\4/KZq*
%$Qjj!Z.XHsp'D$ubE%Qt0Wgn-`:3&\dkojVk1eV`mchI@.7K0^jhb1/[L0_Cf%e%7<9JT,(o.mK3H]fFTXM1JrDhgPR=!'e0>9\-
%]mU*=P2Kp9bNA)fiRRm3J1=hqk59sh+_Z<(R@:=O'%h\>*g8j4[Z>+&ibLr9hB/kKlodpAG%YUR9*OJWkoNAC/a_NIWIi.`qUOd'
%'+tB@DG71A"+1Mc=QloMPZc7dp)oHXSj%S!?3?j%1BDp"[s'h6Nij**VZ(*PrESY/5.uC-rnqX^d52D5'"t<S(2'5pHF*NcC[&rG
%kN]a7>]o3ZX.PF8%#K#eGfdZ`=K*T^K->-]B3/_(Ama-,(FOk5'!!uK$+6MeQK;9tfo-3GRnghKem,-Em03+YBC3FF8C**5mri3D
%cltgb[i/bjL?UUqe(^q(9*\,1"DKrEDK!bJQT7=eS)%H8kEM>+Cu,K/i4<i57<I)gO)*KoQUn2;\D8_GK,_4f/$6-b51PhLl7\-V
%R9O:aC_kT^]C"_TBQ)50I.?0,@NX+O!>`F0HFUN":&t6$G.%&A8tR++auA\P<`d\Uiatp"kr$5TH(]'(I*S<HInb^lii^Y'_MoU:
%@=0LB\lS7dmBq,5WZ%nH$[:KUI^shg)t'f@q/lJD9Z]C/bNN$I>D6TJF,_0[)CpM#f7W0<8)7qtk##XKp%D;*R^i%AmX/?/=h&hP
%^16S\]fj-YH?O)/ACBNglZ9+dZPou(^H<`lpZ?:%H1V$Y>`IIKEG)QMo]Cpo=_!<W#.K(j>*1p3X$<IW&$D$+eobFp\P'f9=!&?A
%2ElM"$COg^f4jDX*@`kH*,EHqHb3c&qKpO\g\5BlQJ?nufJl_#oj"caD5Ll&p/^TDH$4g>dFqo=dcLFR:$fX7IPqGbr5+\:ao6>O
%lJCP_l5abCY?\=/f`?AjO(Z5/[,/1Ibr9#&^,4tQ^0G#N8Y4+q]L`hrJ6)(%U\,t7R"RCO+qdolP/cA3d`Ygt[VlLgi6#8*btHA+
%QEDSsf=GRiF'j3(O+r3Ts(1lPrRs=MRarf'^)c<R$uXN>:7^@Q#Qi=CoR"5sF7&fRM5S.hL$&A`)j^3)]UGoHRlp"RO0J1Q8$d-#
%(*5$!Xkr>->UrK/l[TObOm(3_N@FtMm$k8\n!k)6m^3k7Sn)&EYGc8%H[h;7BK7O,9cNs7X"+WrQd+?"4s,*"s*3p]oW\02ONpA"
%52:4uB3S`!/(WU;E3p`K)d[AD>$ebJo'n+j>j@r`hJB9:5J:r^3;=%qZb+>m/C`---_tD$bfFOTcEZdtpNgIIH3<EIWIAQg=4L"?
%`o52?C@fI*gfJ7``nKS>S_DUELJd**H5nfF]t5)fYA>fU/+qX?8a5Pne_@S$`^FuW6X*bu\@^?u);]VJ#aYK6*lPbDX,Z)mCUN=g
%;EBkN5(()Arnm[(B(+!ehKB?g=t,MUCuU(CN`@Sh$>4@.7RNGXG72ar`a>e^dOC5&q7)GA+aB7GcU+WHIX3=I-Asn"Cg'+kVhc"@
%C6WW(rpq3f>e:X*Wbck3ENn"9:(#AGiaJU&Y9LA=;/P!Ki"K+gT5Na(rIhO>S4<AJ^]+%iZbl_g6$5&A<%M2G!YoeUU,^SeZ[.?l
%lk4(09L2hP\jCkGDb*]qfIF1M<b>;&8KUJ'8>9jX4G:%T87ed&fE_cu,;(Z@:1o\LOT%=7c#mLD9'`,L0M,9BML%lo2*cmsS'Xb/
%WasRn@NnfDii4lY;F+3?%?4AcZ#hi/XQ$O=7]fKQKU&62PgG#\!:utheqTXJ(ht,31f@FMCd;!:Pn#CBJs\U(('WDdcQ^hV>o"?T
%W'g/5O[^@$Yf\5nW[(+c@p;7$p<PhjRFqj;;aXatQFFM3CD$2%n!-4?pbT+nBjs%NV)=#!Nu@9pJ$;O<U+2Kl0m%[__^nAoWiDSl
%&0%H4>13eEV4)RRes`U5UIpEgUn;6NmBfo.-+08AM[Df33&=Z7MX]!48f87UU**<f$]mUe"VEL88jU\UQR5^*#K:6Tm91>pa>lfK
%UFN^'$</mVk#A(TBMFHl>5_Q\!%*LP-rHto>`o60E/@>te3Wq+Bh59.^fal9O>JNt#Sb1@Q;>;a7%pWV"B7+eVDF95A,q3<aY9HM
%ZNMEU[/n'7b&F$5R,PoX2A*_1XFlEDW,-M%#WReEgc.uB!hMr5h'>Jd8ZDetZ8!aP9e&k-X%3f;KUNBeoMC#qa9@72Oq9JV,6"6L
%Mc3hTdq4\,f2RY'N+ll1<br&;/AWa-N=HV)?Y>?bZ9^O'(s+7)&65!iI814lG7\g]*7M%lE(j78M,]@T'V\KqUe1u5hGdkq@&Ac?
%0rkDc"PL(p/-`LAk&+nkPU7foa-0G$+:o2e;^>7.TtuS[,Z,-i&;a)j^`Yr5X>.f6)>SHs36HrF.<O$](+"'!Lo#!&dL=6K6!HD"
%e,U[MiNY:G-Os-)]bpkl+9<52OGHLGd'&"$>`o)T_B9GlieE"^dZ@"/'VnX*':B$3L^^Kfa/4,QP;'^@FEiH\N-#8.6-,h&osdpe
%7.+dm>=[(d,0FE_M%G^R:pe=u@$o"S,+:PHJD`DHAGc.(7ffO\;^$Gq<_g/@%%tU*DA$3sH.%]aEqA:h?'<Y0l;[6oj:h@-B6>Dd
%!bg>_J1Al[E"g(l&=leY#%`>lE(le%52hYQ(;R6lFBO7d-&Fi5hB;5:B#('J'bH>(Bu"?u,1.S_&OF.Z<!R-B6R9Cbg!LRVDE]mV
%8XSujU]AAR(i'F?NIp.L\5%_BESqp/OAS,\aAp5>LKn>63JtB]n9^B*'M64g'(Q^0m_pL555OoUn]:pMVfP8@4BchD<bgH!Vfpj0
%%VY@PmGVJlDZn?91Uej;?h)LrkM'X2=W<MbRNs=Q'$)3?=W3JLjtrS70mlR.kji6g52E(4!9t&+k9M'Xk`ATM.(-%?1@QXM?D5An
%VoX!sj?#YjLe!+=/`q#G#n5!RaH"N1QiY[pBTf.,!g.4;"e9-:R-2a:P9;:i#8o%J"B5r25VW=/$ql[!+Ukd^Cgr^f'N1n\-HSR;
%\7lX4Se94UW<)Lg"^@oV7"0=q0-]Fk1#c&e74&?5PTmHCLaf%8(+K`Oi^.+C>UtB\`W]OK.8d6;A7EjcF9(AL;JWLGi*p4_T.Ho<
%Njp>hQme`#1a>j!A;Cg)]*gI)8dQ9;>_E`LUq05/U,;MlJ<U3o%!Z"(\^`$8.Rl1S@MYc$8fMlk,0RRP(VqI._2$^F6IJUP8.7S3
%j]VpmUAY,q[kF2':*c>W!pHR./R?bMLhrq2]4a[n(S:ep,o2RCRYX\9!fPju>Q?c+"X,]'%:LhZ\/!u18q[2nr%o\S2!2VGbbDGA
%mj8<+Y!>@5^_^\rKEY$X!a7_IPS?]F;*Z'@UVNnV&Ut(*/`pld&Q&b[OZ8nSF]^If6-M\^g0quj]T++:a:>1<1!=V]T;&*J.8GbW
%*R00-%rOh$/`^amMAj%E+]u!-"f@/f\g]O83GrY%C8]H:#VNs%+tuF2L?2-==o_@pc@hQRAn+rQToj"$RPBJU3opeA%UgK@'%Vej
%VHfe%A\\9d+;pTj(d1Ic[5s>Y+AF^$^G\\QX::/UIPhfVf&B#JFXg2lX;%ZUBg!jM';./sKMWgrUAL?<Q0BGZ/EC[%&RIg3FX=kq
%)u4@TO:i*f/WH-S=TW+Ad=m%+@lc>24Q1^a.Mr.BPZ+;P0fU"rKGmAb6F^^0A*C6Bo&hc&8d)IC.d762&*s@5U;KFjASAn7["hL.
%qK#)r!0eP3OYo6fJ3];&F5d=_cj:l#1/'?he1`K[_Oaa9SI-4;;O%nl/`HrW-d7F"5Y+>:9IPj$7=oIbA>,<n?>YYJ&$7'HpoI2\
%Ur((&+9um;L^Ee&&tq5AL'B)oRJ%7f@P1%CWcT/#M,"pm$!!'uW[6.k"C7aMU$.K8@gRfF.b(_Z3%QXY8R`YsKSZBD)5VHpSsY_$
%Ls?,seOUI4N!L_D6<uTlR&#9UAI=!F-)&DR.=m02&oA:"OU7Of'8CK4,DODi#W%)u7&VeMH;>A"Kdesf3qSoa6rp7:2-_Y(V'*'p
%W7Xu6A8A&H:(C/eDe9B>&nQk5iC)bC84cSqg)`l%1Ym:&MVX;I,%K"qBdQP49V`oaP#7sZ*=Y;JL$=];)hHeF=:$iBi3GbQP(76d
%JB(MV=t&rG$Ooi>95%@OU26VJYX1DRAGm:34B:#I!hqN1R3s[Y&ND#_?jn-+Z?d,3&[3_cE^f=ee6^Bh'n[TrG7^2$rJ6m('>#tg
%$Ab.onhl=6bSNTP.pKs]4b9R=M\ipkPQ75<1LBS5'-7tpq7oQJ#)3^?)Ju!*DNY"2h#S,"G8aP]%9I&7*3UP!E^7L/BFJ]Ro&RT$
%_(k?X,n,#LR=d++VP''Mgbjaf!NZO)BN]d/i\016!"p!d30E`6i":K1;E)eOSURA?PsC1+^rXg-I7N#<iJ10TLg28%cLAqP(<'&E
%bdK59"Wc9P_nr4j;,Db4@6h(?a-7goWFOl508Z6'_?\:26?9"ME?umCj>p$S9)h;D@NhHsQnf7/g0$,"^h6X)p5on9ibIDs-5BH]
%UdWNQOj"C\85!W`l6N\j6jueO^([3R0W1Wf8j\[88F"c(74$535iQp>Xb$-\":Dgu/VU8u`)U?`"CrArX9(JH'3H5.M'J>["sb=M
%[IhD3!1c+6[3FV9N%AF?&>>'FOP5N0S06CgHO?Xb0l6`ta:,\`;.>^;0e578!O4eNIO!PTMd4-B,mFX>JSZ+@@ZF4&Le1#n"D![C
%U"Jp,3,>Tt"'%\b%T,p+Gq]lqa,,NhMhO#.35DT(;@o]S(Qbq4V+)qn&%"fY\5Q0P\-'[`,a8@nb1PjRg#`J`I2p5/'s)aETcase
%N+":HR$r\Gk='!?Yn\HZ#!*<XNR][7d*=Z_;\U$m):$p7@.If5bo39IFNQ<dorQ\Qr;\5Ki,ogDdO=b=4CtA5R=T@F<X_kT:l;Y@
%'g(Ld[U08b.C1p'LnKq_l9Gs>%08g>=<p]O=gA.XM6;tq8q]:73i";rCG&/nUIEjIEK?A:G<_2!ILH6)PYn"q%7L+l5n4AJj^D4n
%[[0JUPCQbmdi^M,Jk:\k_r0@G5koCd*7d1jMERG_-\?>)_3cfn=?X_4<MGJ;Q!$q5m(#[2.PmW"&9n4igtCW#,)Oc0;PNDI/1N8^
%M@ua#!sD6SNo^^d#A]Fr"gS:=fOdD'^dFk3E>bTACh<bZ9o!hOL^Pb0\%JT1]4JIt2<LPb"+A:?K3]l]cK(=:5CS(e'MpL5-/d/_
%9Dseb60p!#ID?#DEjlaAH*BWN"uD/f1bb4V.ks(Zjm6,r@nd3?Nt]N5#$;>e*=b!I[-Mat#8p8(i"@r.Jr1oc'j1QiDORe!$?JLb
%iCStAdV4\SXdEVbDFGBOY_n5kObd^F&3%&IWM^282.>aG%gZfV;SHUuM7:HO`t8K3NVP+^;'eC6GM>To;/BiuZ[d/AoG2ag_A=AW
%^7nG_>(#dim0Oc^VRXR>Z\C1[N^\A,)P`-S.c;.JaMgWJA(V5'/k\beY@uRU?qUOjKiUGBQE=_7,RAcJCLF/--#bFS+2+RAY%X6H
%6cihJDo.6pM?,_lq#[!EZkAlbbcDBNP$$r7-C6$+XAgi!\l"$lPq>oWT!64pm`8@3lh?q%%q<l;7amKZS]9<-N?'LM#-`X`@MW@f
%MQfT%Bs\Zg/4btD%b>b\9S<%+c7q!`P3RS(8T>n=B+ZO'@$n.)_mtlt$;ctK`l(@ZasC^.Tog+DUZ$P/(;XF_0sH^(dKZTp`Ia5t
%GZ)e?.FE?"<k5K%.jIALQj6R2+"0uI@ZVbaC8??B<K%#<%Af'm%BOh9&htL"@X[2T(``_>&Q#*M%mL_fC^cpL=H^R`:#q1"1VaEM
%OCjlRo)c*Bi(46G!+7.crrcV:%1RCc`Y+A@6E->L9$,lpc7/lF5RLs6/Sq@_`(*4.*=&"Xc>F<%&CoGdNgjGGk1MG?"A0@?[P%a1
%1lS*I>ILS`ZmJ&b0MI/=)PY:R+'M9%Too^)ck7TFJWs#6)?DdJ^bSjjCrS_a'Y#N2SMA\P`k4d_IXT)!DuNF\@/$,*q>0"k^'DKe
%fSRD$8cM2k9)tSd@6ck(A3-$S=?KI?;o$mA&oFbrpE1eJRhQnE0IWgF6FE<s)i]XegD%Y&&gdoS\/DZM#eUsSquks#>SaH?6^ef*
%87Sb%%a4gfe&A3.=,<[:6X!u.P7]KXZY=\f58CRYIiG7`qbqCMfTU$1T[=-Oc;El=]c1?4Y^uS9(o$6<eI@08O_9?ndH89:_U`]/
%(-3op[J1$No$k1f2$lQ<q8aDN).Q20ED]-nF+cQ7Z0tO20:4AfT?9^K2rKFiM+'GdrXAKWo]iKm*E\,ah9qO0)%:Bq&JGU)?Xqje
%?\:H3=1Erq.o.@5+uU2a)]4ArHhkedn4NpN)G'tqm]\jZoLB&n:G%<,/Uh$)%J"DLrat9O$moNNV"G"B:+_2J64o@49gTg)f#Ut8
%bt\n7#XNuM!s*:OCFtZIJlku@^0NJmnc=V'F/2'c58<$6Jf;J!!m&1n&mQrkLBV/o&ORV.)MN4DX&;ed!JB`.6"R%D>_b3nE@tVJ
%1G08=,((^@S#UP11uPDS/LDMEa&)L4Tnb'L9/W(`/sD-hVmmtJ!\o*i3\b)We$s)2;1Q9r&?%=/^&b^K*?$k'T\!u]("S;7E.]F;
%(QO4qkbNcKIi=;mW8O,!D9,t6qiEl-&SsC"eLd:bpmt?h*(O\"4c0U[)ddXl.1&oiIu%b-"YaA_M.-@V.2%Oc/;3F4JoD9>&:]iY
%ZTb)fOVI@DK5>#`8h;RHWsW+KG>9`uTo"npUaiVd_;kqE0!$W1NOq2/M.9eQ^O^EC9=uI$rn,WE$*2@Q`qLjCE["HqBQ#G5MSc4.
%1rWLpXmj.<Y+-6[QInc9m,TTrA?A`WV"+Ck.M<PUEDU1c--5h7"Q`8R5,h6BE"EgQ</KNS_q'lFU`Q@tgmfi=->l_;jX(@+#g4T+
%23g/e'l7_s#les7?4\FVE7.<i`]@Oe:"_s._u`sCF_h67f\Zmr+!_lH`\@,_Lc1>k+gU(*\/QYP9JSJHQ8jD6!j>/VS:Hn"11B3^
%57a%pKjo#_MaFWR^5'QGZk4#TN)i#1@A[]HdnX.YIk0.a,AT]?"N\^`/<_$M#(bS,`^)(Zc%[Cr\O87YA4)$No0k>F8g+^=M/Z7P
%=>:R<^_U1M6q3,fNq(*V)AAhgDGY<f`nkaGpBIT9h=[CT`5"rHJ3L&LmLGU;c'YPI\1+4[`JYt'"o-dP2bB]`<mH41GETt:!!/r>
%jH@k>ASIL%",JjL?9[FT>l530Z72qkdO90Ce%!Z-69hHTAn<_-A^aQ4.ZI1!Vh-ssOB,,q,q*5@B^cCCAR)0QR1#1XKc70o)r0lp
%QGM7l88_nEGEihn:$2q'^Arj-8b9H6JR0>c`IB@bUr>D,a-#\F0;kJh1<n_b;X@r\*#$sVfeS!fa5@?@=hYE)==kkg)]"eL%-k>c
%L+FFECuC(=9E53H6O,`(+Q^S9fN$T1#M5]#2(k%%`6J]OE9]hY1"ZZtM@B`.!_%Yt`YG:U-3-Y*f)Z*VF(]m?Q%BUKP*.-]n$7G[
%b2ER.$U3jOX<=?[,L4=@ao97u*>42oLIs&dSYf0$XcH\#BpBsK'EkE1"4;5/f+O+2$7%M@mK/[_LBhdJG!3^m@$kKQ/mi(bM>3YE
%>=H^B7-_bqCZonSSN:m1]Zb[X$4P=$+,[07E;ac1r2GK*Zgf8p^s3VV5KTc;^A(W99d&93MDZPB$W+Jq8B%%5//]"]\si^ENW]uj
%$UEY1q_'j4Ue2mr^2P?BA0NKITA1d10OWm:`'WJk,&SYi&:Epe\_XS8)\+'3iT%Q$:tu<Ol3DK]*L>TE:g'f-JOigBE"0qgc(Jd\
%>(^O?IA0%&*)a&PJa&UsLVJV)35S<ilk-K:\1;k`9rDG2L"2eGn^T"C3oCGNhI<JuEV>)"Tib=&(iW<E*%/Pp'>Ed3`qK+BP_jR[
%jkU:OX9r6!+MESGVo>.O[=X^`AU(+]EQsikfR3.DJhW<*9Q=5e\3s*hA?Rj04*")t4i/7*g0q2iDhTuTSUINjF+GDq^_2I@LL2%J
%Li"m\5k1`bFBD&mbbn,s;R$8hTpRgNbl4%TJ:sm=?R+m\9RM=@VC-sh=YC`[!'uK*]nh9Na%Y2*lVrkj34KV'9;2jD%i[JMd3N[O
%$P=Q,:8;N8Y_!CRkYruP0dQg6egf;q2.?T^]W.Sr*i@_'6)t;`Z2af]/.r?K,0@$R&s@[rO?unoL7)"TIb+Yp&SSVs'50gKS:=o[
%.M`Jn)Sl_'9UqG(0ebXe"Z;H$)O<0UOuO$;$aNB^4cQk:-KLaQeM&LM=f`=lZe9;Ll_kZg1*J^r1?G*e+bml_VO_9F``g<4!qFY>
%4V[gX"1F`iHQZn]1*3>dYbFg'^VJ)/Rqbb(G:+:Kc`Ig&6O[rFN'KHp9@b=4QA:8W_a0<]9.JLV0M;%WV)g<"J5<JpUnJQX_C+"g
%<Q!ulAdm3I`.^9pbuggDF#$(gTLLmZ-QmGaSa<9V96DXU@W;`eO$/qRS3$C/\EQ9SLon/;3+a8MpHRaYGjkJN_q*/ZT.m4-d')@I
%&<!FkWsT1ln3l-/`-;n[0Wl,5:$@DDOb-aK-I--f1e5Mk'FFQ_SjlV_]PudQpd`\q(#C#N0t8scMI;T?S\HXs*%C(8A81=4$ij/k
%6m9oq8:dSKAoCt*Se5B]hZXVkntQFH!k2\.*sadCB;32X*5$T,36T)kP;qI#:gV4r[*:&/$H4S@_B,p+-9V"#;?Y#WkTh'-=6q;j
%@mUc3D.tE,fq<lQ\:s8L9tNb_`p?NV+t8@D08=fdm:?Fd"F?*eT0O*JQ=Vm`2jLZb4@ZXGbd.`GCfS@/n/\X:E\^MQllJdBp7kXQ
%gfYh+"4Q`ofKT!QEge*-VElAW\,l!1-,qKbfE^(R+P=#$DO"he9H^iFV?^$[#_:SV(&e0n]h=A2agIqXK&-UM%HN6-b=ldJ,OR7`
%rsAhcVuu5ipYRTqLg">BGnug5;4%4u&?&R>LR[Pgk]t5]q:DBKq1_Bajnh"Bg<fK.WYrtThq^<mcdq.dW6jRd9pU=h'ZfMOS>mQF
%5tD=l21g:Z6jNrgq?V29A9",8;jQA#?n5)H(.=Po"gkJA*P_i$rKP?oVFbL3B7e(EA(;ZN`X+MQGrg^QW0.W3r`3+Eh$n'YPQYnp
%AljJ+Zb*<FGliXr.d>p_2T<,iZk3R20u<%*kem;^Y^Sd\cVFCNZZ%]?c]$&l!8U>uB0-m`p;,U6-`m/X'^oZ*R;KVTi6N28M&!dn
%qV,S#].r;ks)>/h#6seYk.+hncgJ!k-$Qs*5O\#)F?+gCOSqcYIXGu>rpeD9q#reQKAO6FW0W\8)r;Z*4)h'ArlQDI2INl4qePhm
%.75udJ-4U(Um.#TP%sM@KQSaq,i;L[ZNcfa]Rb)YoYDrgS<KbOPCs:NATj?<(Z%gf>DdY%9PQp2NP\p`QXU]+=_.)Fli<adjtY.]
%?0hc#@u#3Jp2oWKeT74;J$N).,PX7A0A,;\`E'P[K-U]+rl0j6\u7Bm0$FLI"W0q5j)NZR(VDiFAi@itIsb?):&G!jh\2s_Ua/ud
%/;Xfp=:+*^Qm"='p.UlP`L:uNJ>>]ubSkDbrla;JHp8&;AQBOZh-TB=9]@C(qnITZrH=s.lnZgn_c\U!G.jeXKFh7>DYJ-8(0O2K
%6SiiTmkYeZTc\X'lmS20gl`%Bg[np<k/s%3#-1>f'dec9Kc3"gA/j^3Jua/jN@EA52E-[/i607DYLkS7,UIQ/*O3.lo5?e#E5Q^7
%I4ciQ3^.*5l"lhZ&D],1ij6-h`]r5IkJK6IIt#;Y3,a%f_4_cQ0JN)CTPYu58AON5'$=8B<T&keo<u8X6_.-O"#LQJUID3\?+s<-
%;:&41;AX@pbG6&BBKM;7._N3i]8]$<5`mHdE$uV,S7DRe5?/TSe_HrWH/C_s`7VPcqU.q<V-u_Ehl:tBpB)Df&:">-^%'a$#9M]u
%AdQ/gocL07P&ulU=b<8F44e(goG"r@Nl]]a<]*<FooT9kpf;V5Gm0A*$q*bBG0&]@U?$;c%lLK1q%fQ/(Gb5,4&BfSki"V&W]KE$
%e(_DCkN*El$tirhNd:$JS!Q"m_)Dn3o3ndC^@tYeLCLZ$6J2Kudj*&N<t7kN)R$A^mVLNW?1[Rp9p\g3/j\F0eas7:kt:uQaJ;Qb
%Tc^0#Wu^k/kN#d?5UC.#$[&qd<qX'2#d;cn&'%Q[*sos@*GQmu7ge]>=jnfh_!8>;<JkR6GQ@F=h^7))UJM&2PL1&09*7PJrj-:9
%WtM4mBI,#grmm=%Dk:VP\/q]n?oG9$\5q?f]_KO*i^O?EE>>,<BB0mZ`B:N"<4b<iF`DPRVQ7d4PJ@-G.#%5;[9imWAq'u#7^mnS
%_(7g+Cd@$#Gt_WZe-5L3&L,X8pk"@[Wj:k`$)33c;F%P0%R4D1H5L1JS",hcGu23I`Rb`>]M5Zn7['hKGTS+/-Bue_)_CuG+5?f6
%#h)"e+2t%El7"iK_M[SK<Z"7ti/4?<"]tj><T`!Ldg/i@03E/p:,5-(TIQP9+I2[n$gkpnM7BU`>J@!S6,ndM'LYrj`iZAGCRpVP
%>ns4Q\rW,C1&sR'kkWl;q@NINq5qg>rEgQ7Bt7UUd$T\Z["PL]-!5$mqA1+-IqL7LAHt;1!dq$5Tk4s!b6;QY5uP<tI;,MTeZrfU
%n8TTUM_P`e]8g%M)@mrYbpMk-41p>T+e:$W%eoTi$!12JCmk[NP\hk=F(;StppYDbh/pKuc4lLta_6V%irAKr^&@C+ctm`f:;bW'
%M*?*[10e[]>D1$rVPK40:Ss\fI2I4;>Z:H+XW#2G`p7Vc5:5/cV'3:0a!\k`#`aH5Q)s`?mo@fYl94oH'/>+ZATbP??fq'0?b1c`
%^saqH(AZ41j\3:(Og38;bFm%m!qMmrUio,/mrSOdYZ_/o%%sSgB8Y<SrRR=LaZmKP0.HK@\?d.hJK3P9=m,u826CImouVg50;g$?
%!B!Ula/lb`[r(CsWPriKH5^hE?P_lp?-F\>M0XJA8H#8R9j(GlM&lb[2e`]YnS<[1Y-R<@D8$oeDGt%4W%e/f\/C_k)Ytm;KBV2_
%R^;+aiM\Xh83O,nLRZ<.8)U)q<?<E2LNXU9V]\<N5<4<f^8c%N-sGsi)B?*kmr!@:Vk`\#:MGXEGuknWUf5,rb:osmTT"U0kY)gc
%?b"<bFuSW#XNK+[6Trb\!DQ#1@ATp-q:<oZPhtLp`AeE/#0u05SI4h;))<mONHiYhdF6ascopFDm_sC/IL8@>IY"[Z6pY%FTYhj3
%_kk7$PU$)Oqm\nug)t-qTM\r2VQ,Q(\kiOT?@eW7>L!UpqY3n>ec^SL4L<TKpktjYAMiJ66Xk*F,9OS6>6Pp)m(>+hngP&g"Z/hU
%Pt];0J:?-Pl8]mb>McWtMO&E[deBI;Bn@!U\,HHNE+SFqqAZ\4K8;E(%6Qu;4q)*<G.\b*\Y&jM=hGBgKW>_0LDVn1ouI")@H9$@
%MWT:^56Oi&R0(;%E8:`cp`Rg/.K25\X7'i]_Yc]n?R-_kj,SY@U#uGM#dR1L11TjiS>Mb7'Md?!%Hg<uA-.n!RSSig?C]hj>;i%3
%U(C.LaS^>1;4d;FC&6E`^X</^fGM`E$EYf`j'\(:LVF&JW%s1?bm>P#geM*67DlVrfL<mrN*,'S?"m^<\Y!K`Tc,Ou[*Vbb'g:?n
%^O<P@?gJm6-_B*E4]E`HI8BH.)+gc.6)l*r8ZO3j&m?FLC2Ql-][BXC?*>fD0ZSO14RbPr0h[C#%-Oe=*55=H:)0i+Sl1)X(5"e/
%3E:K^6rl1IP&Dd=h#1G_^b"/#:j'pEknJ:%k,Y1"q_/)M/"U@B%<'4/-MEOfV]9>2!c6FR3P?:aj!g[aAo*$jJddce;^K%TKCO5U
%=3dJ.Sr[=Z+l+Y+A7D4LgV3HPWf+<gWgQFJN"'fUjPdm?7J!XuV2,)\.*iC>C%YeY_J0igFqNL"nA)#V80>Z3BqY5Bd%-!ibI8O.
%f_>#Skt`C^MlZ=**<\(`pNdhSl$"_?s7>2+ld@Kej6dT^e]bqmN'4h(6[]/q8X3O[L':uM9$E1\A^^jIF09$<fW>f:Nc#f=JKq]t
%dQ:s->sNmoK$Gn(g08_!nmO2/5'.LU_VK#c$3=l#;jOe,lWYXK):R)l+Gg:1h*O^q.Cq&Ep35CXYO2For[%)3dYYb0FO=/tF-mZi
%YPPQJjoqV,F]B(Fkj$$(FEdNdq`ls(HiYOQP'!)u<HP+&r?_GXNr"H[hI9%L0F-jh$@tHA&kpB*EDg0GkQ7X9IE![0/5X5*oQSM5
%881(iW_2U8.#4p@'a)PYRIK>n!#aTCfGe<XHAD]HgVAtDcYoWo5T*>qUt)'HK!Ltm*6PB%)CV_Z*-#db(1n5Yr?\;j[O4MWj!pNe
%K3!qpJ_"C&Ksj-LcdR$apFOV-/BF'DZuc"Q.U^nl4^XTV\_03rfMM;DmWA2YTS-7=qrq_ob+;s$:00kdd<2QWI0]^;?&X2ec^^o-
%K.KtRKsdrN="(6<qY*a@4-$@G7lMiD'[#4PlSJso'1fG334\/R&slGgYUZm*@I>Mj]NP"*)5=RqM.3Su+EZ<tMI\S$78TmS#>d(%
%$2ubY5]Hmt(K$@('#Ar+l<!q&O<nX,9JYqBi*1V6*-DcfcortL&dW4E:MEG"@*LJ<ll)lQ.X`9qGr.k4[P7\D6M^/\gYMV35omW?
%*(d]LDk)W<A)2a-@<\?>IirD<X2lH^\u?ic?V(oRNtO%k[Bg`#5nG6`U^]gh\b4.8K5Eo"'O=bVnDQ%c8nd$ckA#l7=pEt;OcH0i
%&N3#<\YuRoMA+"j=C,J&(XnR/@N)jKpT&&+17=Nk[&XQ2blsr/f\>\?1?q9hNFom+ha]FF\pf<XDbc^^E-*g_A&A)BA8!*"'fCR,
%41-#%=<F`3hImRkojO^#QG;M<Q%)$,B>10'c),nJ/9,mVDk+poBtFIKQX<(9Y.2XLi\h,4<tmD3;5lI]HknK*!rdAV<(U(N]gqY#
%O(#KT-JG!H6VX=LVMlO/TUm5ihJZlXi9?V0"(Up?jjKK4Y!/N?.-jN3KQNYn3ZGY(8[74ikbfq.[JQ!r@-C6-8ZaR;e\NH+<Yb+/
%0.G68Au4(Fe.-tsh@.!-%U#;,G+EFE2ULmp*?R'i=uF-.KA`=QQ-W.?RsT:M(9OP'@!Ffj,:N;IX5'B$)gN9G*UK'V*&NL]4$Noe
%kSX_Kf/L6U+Pk.35;qW>^M<rUjG8s&f)D6U4Jfqa!A>--b3u'55V9d`H/eMN#Lo>r3OY>^,,'jIqe5!U3t/=H6H[u-RX"'YH^mLS
%(l@jE!CLNnX,gN2h1n?b]n^T+alFeKmd>Pd7mmh<dgWQDkQ.+YEX=<>4?nlkWCZ&3HCEJ#R/Z$d;Wi68m%X!'\J3`VDSP[;UIIsV
%%.Cm_Q*.%^0GI7)EE6'G:(AF^FD`o8+U)ps-;TUUJF1p[V--X1SB#h1i'(5(3o1IKEOFVUC#jl1p,T,^]fCYIS3f/]jU9`KgJQos
%<1BmF:&^2`XkG&ab'd'_gkC&c#_;aZgj)$;hC<9hS6]S2I0(Oh$G3#(XoW!^!7aN8$J_SgL/daZq):jaMcb-^*-Kg(3/7a+eK'Ug
%fO,4<1PBQBFS=F,`H,J/po0SG3G+$QKMBo5DO^9a:0-.CA_1*6TJZ]nZu,&mD7T$3XjX_$VRq\cY-TA+FG2GA]Bq,LFdgQPM60+Y
%/1j&cQ8?c;3@D;,qSm<i\"`0DY5G<<Mqq"M[^q$(5WDk:q2s!J"i"tB]Xmpa_tTH=;4D&<<M<1mjoqbIY&\<6dr_)gFIgGH*fDL>
%"%em%K`]u\;E]SsB?dC]bZ#68X/eis?NaS[dD"hp1H3dMWrXUQok3H,WIYH&NkYBn+.e47a8#K(LGh(8d*crF5ec5*n)R,)+#PMr
%9kgK31sWaZN2!Mq"@1GuU#0)WWoRj/=a-J2Pp-5#OA:]sCc8fTmS7uY9,4hCYVm3QhTZI/[,&kq4T5dW'eFiLs)-<`[l04@@)seO
%G2#do`4"Bi6(^BcP6RsmWS_3shLIVi/du,d[F`ai4<Dj(SL\psO58VW\pq.f.?8Z,O7`si_G41BMA/5P`p<hp2YL:ud704t,R80o
%8oBc>)nP9Ni&RCS%QG3'0qA_XUX>6(FLn-ReF#:+rg)S2rP&8`,X^^9f/fj;"%qJr-nAZDF_<IaTu7:.iQ>,_6)]Xd]AcKX*E9l2
%R:=mZhb40dqslt9//C8&Cgh6VHP#-XT1D5CYni$"1+C:X/23d=%l=9U\H_bEFdOc/f1HQW>Es)`"d$aa$*LRt7`:"<re/FI7ggKD
%4D+7JW4T#K<iB+\6ZkDaI5#,$`"+YN37=(\cp4qd$.L8>Zn9jRLtUj*m(Vku:f^iV2%\6cbYmH$.;*Dn\f5#Z3rN[k+=V*[W_n<n
%3MJD.nB)-OVP*WB9KPuF8I6$JIHYI;k"utRagkPA8.da`3V";X)B?n/`VE0`T:e*V*Y5-ldZU]Z#1PN70D=77pH\,ZYW0ulg;qaQ
%fE++LA/ZQ`d8sCbJ*alF9pmDTWdQtc\(M^1<1O>;Fgj/Ge::RqqmT%0n:tB?L_C.d-U8H_%f@A(dFH?W-`SW?pju);F1SFS2G"!T
%#k=V6mEjJ^V^\/4>@uD#Mgi^2pm0A@`'@HB^^b^_c3ZjAEmH`3h-aRC<c@U![Ae3.3g@ljNbHMme`-3f`H'IV5VUhgbIlKmnfM$_
%4O//#o?Ggt>s@/;oTrZ>Ag/K]RVKnkR##0EPh`[X/:rIhq\RO:a_&rQZP.`(VYNPh?j7L"E!93BGgW7,,CGQ8dr\IUfK%6+gD<n4
%=>5LK`SoAp.YnGUB1m\$mUhLh*20Q9W(>`Lq,9=:JEEt1dCh.Yfqo:Rik?d>/.ND/80V$g=4@XZae@]R*@m-b/(VXrYm#aLjRK0-
%lDLR5[+,K`:;?^C^YUmAD;3so`pEc^NnF:Ec?Q8nmlZQ5$6(bT]!c-U#r.p#2n2[7`.Y"&1BUW]UpM419U)*JZ.geI*'GJ-R1OF$
%&n2ml0hXi,H^]VTB1[n>L-s/tT1Ol*6HiC[7jPP`@P0.`=rh)'7$q_+;hS:k!@DM6!mHf-F05LaGCV]rrZ5I],euN?Y8,Wajs_9Y
%N^T7=bLDohRW"`IaK3"+bft,VBfH9aFrJZ,LRK>ACu0TOcG(HJ99@g>A:=e=s#lI9qU]^sXkr"l9*<JEbp,0t,Gog4jVq<_6gi&C
%JoP9_k(W[]$Bt"?&Y2gW;NqE<lh)-qT;'\5))Z/4,($3*5F*Y8R4=Pt>n,5IG]m_r,sX>t:eZ=oGq1Y9"9`Ie5=NODa+<CbGQ27g
%_]\B6Qm4$=Q@@m"9%f1K.m<fiO.kSHV(#@dGqjH)CB&(*r#S6$DDO!LIr6TDmk+1b)MFYIDaB"4r"OiDIsbDXNEI?!^[76L[-sah
%_q>KT[hFjg^'KVGj_nu]=Xf*NdqEm;1'@UHRd>=<'ffL;@/(%@KIK=*<;C%_S^9Lj0clE#L7$8=,%.rc<mC61Rc!sD^R"c7b-'k*
%YQqmhnFK\kDl;>P]f_i2;c4B:2LU=e8g`iJbETCJb@bBHV5W<@(KHk]QBEDH(UGZMq8[T[T.bm"hW+A6N3*\l-)E3U#-gUg,N%k0
%Aj[`@+4VkL5O)*f;tML'q!B-fq2(6q6(VIIacD'XjmRX\QO0@:O:+t?l+Ri"'UAI]P@=po"cU1ldlkWX&_VF#O`JNWSN1O7\kJ/J
%7%A)(cT?2bf,qIU]Cincn#,-Y,@6r[X_e$`a779>]q+PW%pLJpJA5.ur07n#Nu"9QLtCp&R@e?"-en.DAppt6%%a'NN+saoZ)-RJ
%ani*Hs#h-(]kJOo"sic*d@NWSB5"+2L4[loaNLm[$tUd.Lsl_"DC/E>\d1@\ml;IpQc;ClS'ue^p1=/O0[1[EHaZi.A&#08/TN='
%6Y5=;>0%F9_W#S78m\V.X1**J[Ns1A;0WZo6gO+tcKW6C>Xf1d=LMgW;;omc;?QkWW/'?2O)&Y,(g4q:GnHl.-Sp0=P!Q9.LL#(_
%AfE8BS"D/,22SqDV$rpoNLj'l?fLFC)dN@@12jU'n4)YND$4&+/E&V3;&8rUk4H/AW(-T;k;DtH&>OKLEdql'gY.qWA_,3`g#mJe
%P1]JUWBlT9eCRc+QmqhM5!U]"Jf!lB.-/PAO#:CqV6>22DY'C?s0O%&kC)`hXRLWgr+t!_rTT!KH1]SHIa;8H>(n=sp%aC<p"N6e
%+o&_1T,`d8a(LsB%gVL60@'K9M<@`d?ql^?'sqIVEhtj'..9P]O+#\ibF0l<Su[-t@rn7lDei$hN3W4MNae2!FfcL.:CT/.lXguS
%5rH#\U3C6h?Mmh"+?\@5?+M97RN1[:WS9I]H6"'>?;jcTQU2Xh0%Y_-['l/O_\/rf+*Lbc(/)KnB#^jY$2BGGH59AF`gXn*Phkau
%IJ8KjGJd=F?MHD#M&Q!7a<rKc\';2N:CR+6o7+A!Ed)oD:bp;ODLJok`[goUjuVt?'jnH1TC.cM4)]'2dm!YR:E73?a12&g&'cJb
%'j`Bp)eMl=R;H4Ri;SotJ%@Y3D5!#;NULb#;YAP)e"@VRSW9s-puCqaR]@)VL@;8N+:sk']\JlrT!;VR%-EFcfDJY;;k<YD_YaN/
%ftl4Pjg8pkh/7]5c'a#>U]3)Lc')4Vo1eb#/tU;>:T!j7JcG0&rbNCB=HC(^=iTX"8Rf9sFh53V.f-j?]iJp%+_2T\=t!ME#IfL?
%,%SldD"CgmE[oZ0XUa;cS'-30@>\#n=l[pc;rW_R5CPiM;S0!qRg[OH\Y<GT:M[+u'9AdP\%hrd`ZF`U00;VriU+BKja5f*-%ba-
%qbS>(>q4Vf;qnq+gj3EPIFCL/VEaFT9=4V\aa^Te:R:Qaf?f`Yl@,_g:#V9RpqCA6GLPofN<4apI7$0NG#)c7a\4mfn)k'W<kMUo
%2j!T$M%LKFOAX^I1p9mMVn\n$\(n]g@k/%M\9uc_S(E;C^-!jk]Z[_>dWAm^BACbK+'Jc;9C8!NaYi3s`49LnM0f,b4i[Y"f5(IZ
%B(pu*rSZn"UbT$FqUs!hql`SmIrPP]+2<"5hmUY]moco4?TG3UXP"@/+:5,41:k3%-*+_^n,b,Bs8Ht:*--J!U0M:iB=D4#FZb6@
%ZGp\[*d_XO33<r3)dg(pnZtURq_f$p:N,$ufPf0^B'f"(_CXR7LL9\S%`+'m?KSg5S*!gXf/`]PioAd)$gQhsc?X\&].Y6`8'_qA
%ZLIV?qt3>G(H(WpGAFdBpGZ;7$]G,*r72tnhE6U%2Per%qGC;MkV+<);,('MQ3Jt@W$ba7NZE+LVi+&*AHOidb^5NB1HgsZAedK[
%ZWBsk39Sg&?9nD]OF!s&81H6;/S3%Y1L4kM"W2A$=%3U+KUp'?bZT35BpB8HmeCNQm_:=&Q:IK)1\lh3Gl3^AH$_48QI^PI3_4!t
%V(aptIj9,n#?]A)GdY$Tc='GD9"mZ:K.OU]gjOrtCM(/<AuB/7/`1-J\]2rI1F-3/7?8*&.k+VCj6C_ML_aCW7K?XdRsg#eGkb`%
%!9Hm1pPU\?5fTZ67ur$WU<q>ZW[ooW/uM/k8RgMpW4>XGhf(#_rZ42fB^<Op_"ZW3,=:nRZ5u_f3N&AaQL/YS^H1pnA&J8u=8RQF
%8nC4\hD_s0D.;#fU]q-ekSU$b'>n874[t(4#5ZE=+QJ!`*tJ2%ERar.UQ21o+Wbtu7@bPuWs>(mA!Z[Ln7jQ.l**&f3her97'j-*
%gOJ-p1un(4mA);XO(nfXn#IrWhBO'O1nGk:1p_Z/2]aF_(V1\>.$&H14))$K#W/G:;4@\HS@CRbr?_[#pGbf/);X(*aqPnOLhd]:
%,=^'p@L.>hVdb(`(PLH_02%@#^.ZA@VaLeNd^,]\.cD`5Q=q\HLuh,uUXs%9r?@<M18T:pY*<"gV@"JIZ^SuSb'.p;r:n+Wl3/c0
%X:0rpbX3oZU^\Ve4q`R&\k9A!D+2'+'l(r`0(76r]upD,F*'Ye6T)<"c;`[<V3rJ@`D],p\BMj/=0?Y#kCY%U`*/E#14Ybb&ia">
%kN6C-3Pt>=I2lLi6V)W:"09+Dh76a4NXl++gEACL,W+aMAHC2@;>L1[RG:MYcC([=2-M)';Q*1\_g-K(\SFR&OfoXbTM[I"6P2V5
%Fmd>DH_+@$8G3if*pd[eRYH&4]E0!Z?C\\cd1'EI?:5IbhFX_&_YIo?Cnu$\>.]s?FGB>k&+a.,qk<\PCo(qQ=mBkM)j>Bp/I)P>
%Y"gM5mYeV(+_&l]]-J4+G/\T?%`]L1GMV`eiIeLoH&)Tl\k1YE?YI>/gT$('[HW3<NE\j$6U'Xc6Fn^)KHq,*G;j450K9IQPS8$\
%r2c@#?nQY1@hfXUdks2T<0a&5Kj7U`[LeXM%aF.Rhsa]Q6/IPW?n:feYfu^D^1tfZF8[O(Z?_R]iiOaXW-1I=W!]u0)$'oP4I4L=
%__&'S4Ut+hmeuFO6TP?g>^Qso*$\:!J&t[eHa+b'JH/G?o(I#VZ6r3qBNHK$<S86IqmLs?D*$Q)*SZn+EITLhBP@VJ2&d_39(1Wq
%gEg2tQEjV)FE5E9UeQUs_[SU%CSh1]@40Q<IanMK<$TB*:EfS=,%cbhlt+^4,nUmCD/,<[F"j\NK.BHMVlk@e`?u=a):\V)E#@[4
%W$1[_513\#I]E>YF*k!tA+@&Q/_^#fX<[,V>`m'o56MhU\8fNE6,A:+F]m17"kpr^E&mf.-a&A#+<uFQ.Ees^$Rhp+HLqtVA!/?\
%'?WN7:$ur=T]h&+7Mc=kaWW#YE3,6/Jn7b#UQP5k1jT)GaG=&b9[nE-kd5QkDZiN?HZ^O([bK@.jOigcA$ZL+GJ9,p:!Pa5Tm,9Y
%]#W-kchbUERl=U^:!Q^^9M6'j=>3hF\pY*5cq9k;Y=QC,9,BJ_PeTr!68Bfq2G;>T_3R)\M^no'8gG;8aBkR#oiJT&I@2oajCgG5
%Adl5EN82eE+$F+O@&)\MieqKlA%Io0>q`T;j",+rNo]0&)eqI_&u&q`R7qq;Djc^DL*,Kijp#6E:8:-sX>iDe3H,l;,a&32n93[k
%3Et88"alcrp!'g.8$F!D2;$j:,>Q-FKA"dXG*G<.eEmt(^\`@@mMnurE9M`**Z$:2`+hW/RHWmT5jZCsp_Gounmh#/%#R/)>])0$
%c1Ofg;6ESm+/FSobBA7'[];*,?KL%*.4!SrqGM7d8kmY)8*(cAm\+&`UUFI@.]VAWWBO%tZsCq#jXnf@deK6qm28]+=2VcM#&&-:
%[-[ZpLloqU#Bh/t3gP2,+ZOt5^Cftfmo8C:?-5t"2Ue>]*#n"&7[,i9I^<<o'TtR]ro%No0&JrW%B^s:BIY7;27h+t**VK_;D3K'
%%EG`DcSG6[G9,^K[:=SS4p^U,l`egNimPdFYBaNeG$\Im`\MnJEC8<MN>^H73G=O"[jQOPF+sKJ1O?qFpT"NWS"XUS]"RMFQ1LeD
%q3>LJFt94A3`jn(G!:Z+Q*SHTjlNq9M?e0gNFYd`p4usM[[q\JbrqhgBm$MgrP$82Sj*.@B0c=i^Br&>YrniBiTt,=#n^($J_5t\
%MdbXTZps/uH-u`c^=9?([bCNSagK/I3=OORV/r:I.]`3bJ^2TidZcQI;I^'-o'W>8M"s-Xo7s"BG4GCb5Bqq1J:LfU3*XLRE%P-Q
%(KQY+!u3Ip80":mc-t6E6Y:5D!R>tm]6Pr5/=OG%9Il+WQU"U4^+Zd#BQosS823gu8#`u;rZ8!'[fl@f$i@0;1I5=<bU\GklO3e!
%?]gPiF)>$##e^N5pCK4piC=QufWOga6$[S;l"?PA70Z\Um)6$XPs)o#bb.9o3C[jmYJb<39>pE?b!pA(rVHh8DH%]BGmulXo)Yd#
%msE<*23/2*VQb-C+nB.^imu]sJm;Tr^O!?@WdTpW?j8KQ>_IuBlA^%o0!UP]J"3R&:9Ep.F^/RQjNob(b&]/Q(1oE6g>(^.+6m'k
%1R_Ef$OfS0bVa*!LHq^8.#E-td@'iUZY<G`*ATT3p0L#pk=W!E/?Y.pA).lH1_R@RCU9ja>`*l7K<Rge'@k,g,seRu@@Hq6KeLtJ
%d:Rl#J-Co'IB(j]F.*Dm,phbG9U'!Noo*c"mp<0D>mY3HLP0j8&gt>/`dA@n+@)nL(JIl/7phgfLl>_$f57uRX`LVVJZK1S'i+%?
%/:CmRI&AP;hcutEEk#AC'B^8r"=tNOO!o1GW>k"J&LEth]EPCs!*%'blU].1lOA%;5`(/9Z9`A.j>nJskaQ@:CjjY.I>TiTHFr$4
%gh%/U4A(Xf<m24/-&8(!-Q0p/`ClON;_J,s%="pV=LMK2c0rL%\-d*s5'h5-_&Pi2W<HjFAhjoik:3mt9rV$h$phU@8I;L2q.Di[
%;KaA!i_SF]PG#)BHgelsI8KOY!dmOOL]"q"bct>nC+(9*LcSosG$>MSVAH2sduWh+gik1"I,/"%(V\]GVNW6d?4eL6Ht(43cQG];
%@`)XA)E.agp1apBH$B>7B?:P/iCRCXTd"PN[8).T4*"0k8&R(39hbsu5]&b<^V(p:#T`hOFs[-j&J-/-3W2`GV([q](rLF]hL&#N
%EF+&e8+[1WiOF]Q=o\I7#jQ8YhY>'NZZr,*:M\qNq7'tm))K&:BhUB3/*#\[/s^da+5a6.cuES3pZ^lSmb>Wi(KB0SYM[Ne[s5q>
%SW@Gu$BRJ&eA]ER<W34.lfZrJj1.D"n8/K'0,)a1W4:ES!<\qPcOlFa$)\naqeDt!OnAt*K;@7Do=roNj#Xn:H/e;->\bp@?,tIH
%Z/^`7Cd2!>Rq8=:0PTeceHJXr_D'>j5,jU"^^4brr;.4X$S#6D'7t,"Gn:m^"(=Y0SF.Cso-"HaC.hNDqcI[hdN(SKZ\4cJh1M3g
%3/b]DC)1?V;!-QGN/,jNVcb=@2QT-QF`.pc,&fo>*ZuR;cU*!YkGoo\g,@g.^@RZ'c26,N)`p_iY)4=$U]&F9F2;O-iC\VblSQ3m
%Zjbs:e\=4JZ>Fr%gU9Y*CJ7$L#"Gk\.&p)P6mZq$gE>"9rXel59gLflpH79jrl;7.qkqZNFbHA#62Ts8:^VY4paH#1R5@#qZ4H)I
%8>Z/E>]U>i<1PZWa#*i+-UQ9DCo\Y%gZs3h>pL13XdE@TDleLm(=f#P#lR/Z_-J]+`Xa$Y>T6P(NQ+\IFFbF02tJIGOHku1F)4o-
%8n7?>*mk>A5!dll8.&N&l&IoA?c'm2:Ksslm`1p+S6fREJV2+?5Hn,Q0djL8:!PdNI&OeR`r%_*Stl&IQk9*GA+(ZB_j>M<5C?)4
%K11_fn9/h59W9?+[aXKJ,KeNnTPE4(VQej.BK;k`G$I\@o'<j#"bW'K2E>Ae17!92IHX4R%"aXF0+W[ZVC7?kaDe5b&*6'EMUVP*
%e>RFm\d/L^UOH$em]+S<FYPl;g`:bsBnS`BY>1\bnH5X0hL7HU5>J1`/0,@I+,g&FdAVi6.]qUKU1=o`aY:d'J\-sbdQ!9`cQ4iR
%&0.E0276Km/NQ^CV>k-A(Yg+]cAmU[eShkmP`[/U+fj/><Xq(N,M$,UQVB]PSMhnaNd?OXoZI)2=0uC/AqOa3'DAXpm=u38Nm+s-
%>?9,)rkiMQhSfs=,SW=WXJZ7nI;>M/6Sl?p&X^JZI?)'Lc>B#$s&H9Z)889'<nP.C9YplnV1Fjm3gZ-IEMqCpRu]ui($cI1^-L.o
%bWYe$@9-^AhE@NJJXY-4PliS7VJRX)*,03<RZ7ZU\oG2FbRfe[>";9U<;.n%*OpdV;j,oPL0@""4hH;ZpN3u<ahH.YLn=6_fG9Xt
%fYT9lWgr=(n8PS#RSN\t6-\Ho-DB.\%,hY>dm%uCGe\hkYtGbV_&.MC1LN&66@`j=i^`H1#\!0.aRI"[$O8AJCTK*37$_\6(?`Dt
%huBY0rL7upG[*T8Fo31na%g0JYQN+WqFT)jV0\k>+i1aV0HrDN-iLb;:Y,!Cb[,XsPljf[B"E[]c]S(?/gVCR5Y\a="TnJuo^k]J
%W#e%K_%-'rech=>e^QM;5Ni3G\6VeK0m"f.mtgg>+IXHg&;o;48&MWe`!CGuSZ+M<I]#]FnI4IO&DAOinQfN&nb3`AfTJCCJ^VTI
%=(@#\X<HY8%@g(Zi4`i4^u^EB7V!cW8mc]QE-tp'YMEL!cb^ot\2JtL1VLuanf$\/^SA!LodP(*"s:FqM9]erBZ`pa/;,l\hI-P\
%VZGrQ^OF/5d5i1uJQ@@qU\]lMS:,k^QS2X7?X^N*s&*j+heR'M$R)9n53sOFmo54C%cE"rZ&J9TII1I!SupCW*H*J,Grp8/9\g!G
%1h;Tl.(:j+[1\-2+J#Dkq;I:kJ6/m>iK&%3rY+,,i`h^MU``*DQrFcSMZNB68Cr\$6MZFckt1-Xb:1*K`4p6.bc_KJ^Fm#tEH9f4
%4s?9b`pN<KJcTi-6qB@%Se*#,Yp8tC8empX:c)``UkBCKhQ!K%*`/`:[/?oJR%)lPA&^NTr/Y'Zm&MCb&nZcH[B>X2.E_T/=7>S;
%JQ-c`2.%W>YI85u?d%[N_[_J)0+)+!4dU$X!(s01Vrc)q=2Y:O#-ZenO%l+87!q'op&I?WVXI=n*mP7RU31g\X"rrg/3P1[oNV\T
%XZ`j=osk=6!MT;sjA(!:/Y+!+f"8r2,n^qHrCRmXBsH$i7J>\>^VM-7)_J/PB;fZ95@7n%c>o=ahr@RqP?C077t3sm<=DCBV27gi
%.po(:bTMG:Yp*-g;TBI`KS:oWG5DXDotr6KT;S37p@[i09NbOBq;gTI7q0d4"H:pj+XOW&JXro60[7Q[YHmTTA2VIm+p.q4#8kA^
%i).RHTu&ENB_0coXL*p8-`'HJLKB4%69/N^\Y5s"C;'keSh]242"`9kbep`-UBSmf)qb#`<eoFUU/^=["1UG1=O07VmAciRR>egQ
%E46q67Q]F7AT+^'Ak.r5PGIKcfdu+_)euij=,g1`?Z=-(.%M^J(ANLTf/#/dC@'d&oJn>T&]cj6[u4S(Kt\EH'@o..Z503lAPS]A
%:Nfa5Y1>!:k$qqh1pWHmbS4+:"DdhPh*A\TiL)J9:FSMI&7Etr@2\]<(1^t1?.sRX*-emN:8\5G`4&`UdYS^H5sJClG$NE45.@YK
%&:TelJL6oN:H>SiNW%RhLtpY0FJ=CII2BY<]R&tZ<co3/=UVj85,5+kq0njp[$A;@`VJ0-Fs"8eoqB:$NEjGORN37klO;hDC'Qs6
%e(a6mkP"!O/<7(cS5B?qYq^kg\5Ss6V(m+I.eWL1?TW2CUq37t?a];COOb:gLCh`"\B4>=.Sto)/%os=],UHhaC33LT(\B7GO3=C
%89`#=<:a!k)&0YF6[#=0nuAas`70u\%aS9@00]2',cQ':r4"eLi2)OOecMj"=>?K5jRXCD>Rs%FLo(1)U(u6o/IkP:EMu3anFF0a
%Y*N^/p1S6QE71<Hl/7*U'?rQ%%MBrX9r+/&.`(u!b"GQmm\W4$\j!ktJPIlP9M0-`=_"okaT,Nj;BF[Z%kDda`mm@=78>MoH[(g1
%25)GfpB8%]iM;t8nQK-_mc,/rh6)3A?*UkunbT*Z:=uB:1f&GLe9a0``IB#1BVB1rbdZ[T;5esaWVWeb?"8FP\4!M2;LSUu[NO`)
%6;WSm2(`kq(D]ruFMA&'D-KsOg@*6Rb2eTq,'lcV2J4?7rGnH\GcgCb;LYNK8=/2mEk,BaI+pJJVcb$SE.RA$>E*%+prj@("k7Vu
%S0lJ1G"?f[!h+@hG";3gH$d9gXDE.k1=GINOmO'DYheQQpRmV<Jcot,5QCiiNn*!L<1RD'B1iU7?Cp<J=BJM+5Ob>LWr;@W603R@
%&ZCeq8URH>3XJc>Y)EOi,Ot*W)f\@A,VdUjh"d=Xk%tEs1$_[^CeN!?k,F=Zhg&LXB#?gJTLoA;o3F<!)H&hg-7RB*bH=sV<gnM(
%=r3q^?J2*%,uPhS*[966(F5!/G&*3X+[;D!Cs1?t@oN90/X5,SQrHgG&7M%Oa04Q-(X#GAqU.N?Mg>]Zh#.e5m32Mu57J.r\$d_u
%lH_.EhiSq;)tUPln>]G3U`h*uP&!L08J)5cS7g?JW[uHH>-`Q^6BkboA<.Nr.!\;IBqq)22N)`Y38]IK8AKt[ohV$W8@rGJ1t\q$
%-r-j%q&!>Xja$Bu8fu2uUXLn?^3D]NMO^Fa:_/Ja,!neF%n8XoUB*;oc;U_'`OB9*SGWX;FH"B<<`@_#ErMI_1?r2+m2%P(^QTM9
%A+bjS-:nP&D]X#ELIT(sKgj]j-;d2rQ'Eh>kUEbi"Io[u`1oU%\W"m$U>i`u$T2sU8oPjH@Yeh/$;j6%f[HXR,N/;@lAi7#E=m8+
%/AKf,IaSM3dj:Vh78urM=bX%n?Vm@%/40PNU>6R)0cbgC<g91C(#^o3mUHXOD2Hjc!UXe](tQ_q@Wf%0BUNADd;k(EB(j?ec1>4n
%[lnolLHjOr-8n^i;O>dTs$RBnKsO[>:Ra-THGq&:V>fbNpnp,&oOnriLRkR65npu)a&[4I,8U_IQZn^f!%nF!lDA%BTY4;6lLPp6
%"2LL/Ue7"/9O+`$k3PAZ<PF=&Gou7kRCrFePhqLa]-^t)=%8#AG6NiZhht$$S7dhC0%kGaJEM8EpS$H0TC>!nb`qXQ;_Zq&"IG3e
%n(OU8[m:Tc!+cVN%f[@KLgR.U$WsLZTHdKuCad#b3/U"Jb;;3"V,qUj`Fsq@5s,75<Lm7;*X<9ZpsBk^eEq5;I6Jb3gF7Ve$UdtG
%Cft.BB7%t7,Dm\qW`)Fc)0E_qG5](1rn5!_CV0JPA_t)M5&IC!S+#S_*?G9)rS9h^L\!\TW]%-9OH5a+e1U@!X0GmO'mhg9JnEQ4
%,b=CP)]1@99:D"24_Ss380l5<n'9JRa#^i."c=J6;si,HKYjCS^VlgLnn;L!=$<6L+r7$_;2]3shDZE]]^<o>hL3,WD[56M<^%V)
%S?i`=0AH&H6LUiIl!aU&&j@.k]1)P4h=h<8^bYmb!!hf'9%%<mQ2WA%Qs6MuF_?sr*\67,oC'6&WT;JafS5;S";?`ej>>>.U(L>h
%b^%$/F@UX1k['!7IkP4nJ5]sa++X3[Y%`Jrc<Pie8S!CAOoF(/-G1"RXDmB8)R,9?09In_K8OV<<)_mg*((li&3LV75L^6h23+4b
%ka#a"8c5OO_MFHm,Yk6LE\Aj:m![\"mZ]c,$rk'Ep+l\*9sQH4<(K$'^)L8N1j$MicW'u(c/t9UW.>Cq!'DPT^+6C@g`=`]rjLKo
%U^!VO-rrT1JA`>k^9>"-A(N9'+QGleQ!@1',9M2a6k78=04"n0MNgK88eie<bp*=e\g8JP%..:,I$`dZ&Zn+YZKu@[=CElN>XSb)
%S,7k[?Fh4#WE0sTP5r_Qf7O)hb`[9TFSiYb?mS=C8C\`.C,OtF)5D;b7V_R&BmY<R`HUBi'o+TPiDtf#\KBeYZ<q->_Jq-.@PnT)
%pE`Cp4lWFZEW<(_F6F;p8:ZY*[X'6>`+ENlS*181\kP!4[d+5^6u22sTICt,o8I2sNO/K9k!PBfSYhH?[tDM6*I$602EF>$@i'R4
%On4eNmjMGV1(Na)/?ajPQq3>"-J'j-f<SbdZcRMYn=>RbSZ,e;7#dRZ6BL!O3@G?>V\C4]mHLGPm],bH,7)m=!1RiVHb(JR'^NbS
%;0_sB%eoLC.4k0m.D=dg.L?Wjl=JD!=89iB\K0oOGQ)G&EN2GfIVhY>SCP0_.M:#qiVhCKT6rK.?gB(:<5=G*5YB47)#K;f!h:0a
%U[:#jmR\FZPr)l+4WTl4[Wc5N56b*fQTb#]&RHf%D";==%%:h1b&/8OOa_U-UgO1GE2nmpMd"N"[%RmR"l4TJSOYT^bT=&.8k[@O
%;>e?*:%qgl&=f[!V$C744I/otIuI`fM^;f;I2U;SHUu-ld'9Zq*%K(Q@/`paRcRsPG=lVo*H<!^PD-Jpk4DiC7^\`5r.@C50t38_
%3h4bI,!L1^?)_#p_8T#oHK9D`gV;p"TJG)S\L&U`HYe_tmF05jMq#?CXTu&E+RL'G<(Bk;;TT,M&(7^un\FWMS&KRQW)!Pq9(mfr
%B64Zcg!o2ok'IEF+`0=O4(<HGM.OLsqh]8sCaSJ]SMAN5[o:?HA7YGU[_B6DEs4+4pdIBLqrTT9)Z+@BmIKd4HuX8&"(\g=OMW8r
%50;OF@QF#X;PJHlI4<Ao$1.&B5j/+j[A1>9Ve[Tj23B/lp5"0%n@GeRFiOLM;&1De.2eiTSYNj\b#oHg/XX]]Hb*E!JZ!(gYQP'd
%$[)#15;0W6j+7d@55g+'1h^C?2?2VI`l64MQd3=<pA!%g+>-P8%F38QS1rNdNfLWha>@[rAh--Ga_/!%KS.5sJf2aJ6H/.2Uul/&
%rn>&$fm2<ZA`'E7^e:'qFoUKY-@-m2_-5h"@SHW0/L^cVfW42N(jq<NKpXk2+9B&_V*,=G`ag\KENIUVUWqcJaPOAkS@ULE_3l9m
%fb/EGCOl+F@_,J9jJl:_XMqXDCGrJfCPj#1N$;I4:m@"t"'#*KRD+Ydpg=sqGG8&\ng$N;!.f7Kc97H`IMJMs)qB%l5V&[25jj\^
%M6I9OKT*&/D4o"d+0(e>,=93?_tV]:]7tJO/IJ$8^3WLKGMNqVi()/:VM.k:ghe9WZ&!/=:+]a>`(E*@L,?VYj61V>?8H27q3+QS
%Wk+g=U3ctV!hEuK1p"XoR7gEN%_fWU_Y*%r1@1"q3s,BOR?:jP]d:GWp>*c1U#=.93N1-Co.q(BI=54mfRpfnRViX*X@=h^)3XQG
%[A4[Cq(S40@_X-m*Ha@UDID228*9*,>g/EX!eC.fAYl*LJO7q(2IE\a4,F0,bX`'F4,dNL]2'bi3_U%BRZ&pZa28QAosg_4Snf[X
%U$Z74B>KhBd>=^3,MAoB891/WJ!rJtDDU"CqE5g:\]F3B<_HRdbOdOQ>3IKc$L'2a2;5d;DK!/ZM[tA2Ih(BI]3K8tP@5<T4CELY
%-9_9Y7(K]Wps!XDH$iV,g[O@"QVO,uqSC#U,_mECFduP1Y9kUsXC>]H'1edr8(]hW>>c1,oHV".&3*:de5O'EH7m,>5uQmf5J5n*
%cJK_q'pYI4a.H=erOP=iFM2@1;U;J(m99d[!lA4+E4,1oBT7EieSt\.m2T2#!Y\6.@J9JIKM9@eR@)-sMJpVN-D9FX@_Ag#<Q"(n
%Co`ED'le77[iVi[_eS')61tF'fb51nYS!5oD5d10$9:%(]\Qrl&!rlrl1qNdQ54's.1#X&A)&NH4PUBL;T^nNgsEp62Y\sE:>>`W
%0QgR#KC%8OUCXsB`925*7e9TGDfpe5VQ/_'I<gQOW/;Q%%&Iop-0:K!8<HXJ.[=TWdo-M/dh?kj`RcNPjhT+YCk6^]63)JON?lIK
%[43L;P0XEi5Lr+W+ZO(T398I/X2B7(g,,$1Gc0A.]_Wn8`@B@HkqST1-&D"GoS3b25I6*ZHamt"c5POTkK*dS?=thQk/s[#e*\,F
%$j1'\'n10Q99SEeOQ/L'HgNXDm\F#`K:[Z/A)pJ;d'8*G;haMK="@!7E_'"+0pM-$6`9r[O+3:#ccqW[)Vct9(BKc,cA!R"TE>pL
%m2CLHVFT#C>D60.k#gE_I%+CYP$4Q`Q"I+,coT"E*Joc*[X[c#r-f>t-fuq'fC-,-fL3c/.D,c_;=/.=mnsf;k<!Ztb-9%Z0$\F'
%rSeQG##EYLcJFVX_^siC@&1"(2_9k!:8u*=N]fM.^7eagQlB'D.'W,Dimk)ZgH,*-om%KgDgpKGfh<KsomQ!f59S9i\(_)]n\06n
%Z3Gg2K(c6,j<)^X8!I6%I<rC+nR`TZoW7ZVBp)t.chKNFL^?,'a\fK+R#s_>:8VK"[5sm*b=2_h0%eOG(/odtfIpJZ#b.7'\?!:L
%6n,-@[&fNObI1crY@L:#!%IVBM3SIV'LJB$/\q<*^\$Uc8mSY#V9NM"*kNRJ531+PoJXAXH3fPha9=$#_'R&0=n^\I9&f`SO*:9X
%St;G+olIa=DAV!L1Y7B!Hb\J,5/:f4+f<'L`U&ojeqio9ZT1%B)]"Y]Tld`;Qt)I]p^#Q2>n![)O!oS:-i2`/'u*6(j0('iCO]44
%PX"",/!?9r;HK)sOC/lE,_Aqbit](=`#e%1%Xlm#Z_GM!`3e**Xr<BpJb:jMJ1mec8.2uW8ofTE?],q8bioTAmA5a>KdtNOpX0P>
%ZWL+)(t+63d>HM'P;QE%20'O-Y;&t/.Y0C$dL`(6X77Dk98.&TSV`4m4AQ#pMP!T:DI#Y-JDaD#&`'4TeEm$8caE'XSH=ki_<&WR
%.]2L(HV'lVGqgVaHtm&sX:@'I3dWW7&0Pkf5BE.%Uk#CZR+\Hs<m_7(\\RmibROVIZ$\FF]T:ST5X0iAb=QZ-6B3T]&#N=4&8iK:
%@:I2t^(67b]/-tlH*LHuH7LUnpV*#*CUd)\Mjt!5f.^@*W+\=3KJZ5oaK(.gW\-BH]h4>tJ#qU&,X#a#7r)ZE+H0m2Pj3GIb+>'t
%lM@D"R#EU'L,;.1,L,3X7uiapdh>X79#k"oeYt!'\sdI$epWCDKh[&h7X9&mLY%]2\R!jM_ImfTq8#EDU7S'+J0ubD?4dJd&>cHM
%pVC:f,Dd:q1;]('O:el`fm6L.:nlEaPt$M`Jk&AqK8@Och*QLk>>6QR/m4%,gtk/*!^5Z;j9sp\_MnD[$Y,9a-4=Ip"?-P,Cf7/^
%SGj.KQ*VAf`O9?#B=RD>K4p=r,_AmT#CIRf+1i/cgBFH><Sg(lU^;'M7&^`#6LT(ZUQo?;L*^L%=1&Vrq/cmO2mu`Jp2-<nQrXYD
%>_ZdT^<R?_Bc.PQ/p4MIPI^NCp#ntM?>,UM\7-t&/Sb;05;?6o0S&Q!$t#H4EM0PAJ?.POg8Op-LMq]r"Z?i=lg2=pba:np<nV3#
%%]tIA(m>aTBDXWc5nl(bc7o]700HJ?SKTOsI>@WP[[(l]5Fi'?9:AKGGk[!ndSo(cl&9WaI(aHD*E1'Pl:?U]CiCCL3QKF?Q&AST
%p(X4dJem(aF+'A0P]Z7f#1DQS;@DoJo1'^G2SF]1WY9,b#';:XkoMi4Ai2M?)c6SY>JONs`I,FrAiBFP9D[2&J%.4:]c/bV,l'\D
%"K"tZ$1T;WQZTLPNqf6g2R_*N2$054gik=f$/br)2@)A<UWR6-kc8KCp\MKdpm`.Y*SE/0"@t:I;:*AWn=CIA_"o#qc'WD-AiE#d
%I\oV-.gu/5?Ng+%;\8)PT)hj?eH&Cfp9_f6VG;KsYchKrQ7,AJI.skEkao=73SGVkhTVWliS@dS*TZDDA<3QXL5j\a?*f8N\?J6-
%mJ=5fJhlh]Vk=.Yc1OXUJS7ZopDWuC;(@k^U;Oqo=2QupM\@[S=Y=F4j#sq6FIa4-UX8\7G,d72Y;T30YUXRrpC]]tqN=l;JUors
%2QLSH\D_PT&4@ek*ZS8nH5uA>E=qV+B?pk"eI6V*GCZsZ8<KIgN]V3M+W#Q$:'B(jb[\%,IEOmgJtu+q_km#hqn3U"@AN]t3)pBg
%/23MMl[-nlVeiGs1t<,#r%ld4+(6J_)0E)Agm@)a=YmAF:\ieCflVYiET9UQN(3#CP#"6mT>HH783a7a4SD1:L'+0';k8/#G`!+#
%q\dXAG"o;X!So-a2+Ie[Xbeu8`Vd5G^\2894pQ]N68'0`Ai`B;4\LO-6-s]49,NeEpCmWRMD*ct%U<[`/ao)S5.]d0MAn9G8L6%l
%ATF+kVm<?-jGLR1>G<QD2=2s.kM([fm2gq=?[p4k?m*880$_KRr)-Ja#:2M:=Cm`qcWBc<AXYa34)"]leq_uihOMnJe+P1*q#feO
%GIraah"PQ%2c[(ETESS;M(aEI00CQj<VZFm3qj]f^Z#C`Lf\5</%fCrh3%i#Z,k9--r?"m/=GU&m1p=Q(?<ma]]tF?P2>10\b/KR
%IFE<qkHH&C=:f?q%94YO+Rq&!.G?iRUbkEhOG?WhH9($._IeXLVXhoW2rknj\"_'pT;bnAC/lYd#5ST1NZN=-1I;4CV702n/OIMN
%MNKZH&!u`.[Q=olTg)9sl&2M.cK:&8G;E'-mHsA!Z_<[!4Q:=Bj=nTcV8asX,L?HY2oA\Ic0Zif%<cO#is1/E<0e@D:edPJRqNeW
%$Bg+)`>m">]d1KdU^Yk6quGjX<P=OG)_eS33&'*)XO+O2i;d^\,O6ecF[:8TRmmuOlqlSC`.$?oeFh?n^7ZQ2C8'NQTE6+4058hJ
%-KB87rm2#9_iM#"b>#^cPIa1RZTCgl2!ETXL1'3#W]]q@g_3R8da5GgS&<#ngacA-O.22_!Ge1Q>DiY"#g]q]!MMS5qih!r`AXE+
%.LqF8Za,C>eP1+7dP%0/kN.^'%1HHYC.""\g!R0a'P[i*E_O8!e[7uDGZ)["kJp,>SHB>nHe:*`TJB[nnpARp&)+A9=2PqY+7eRj
%]J)5.mAA.:7=F@<eK@AjOE\gq&V:4OPm@W[s.s?6MQUB7!h7_E]IWW:Q-WZ[%);V*-<MGPU'3tkOC<@4.(JV]-?2*K6jLV:KUA@(
%Qk4E,QNEd'9m]HH/_"rCf!GEr'\ZXU*O=g]>6^%0)H12@(PWj^7n-%<!otBps7O!t`Lk^(8N2X%mA^bhi;4kr6V$rR\*#E/B%kj-
%"8o5mf[R/9f>)bn'c`(N#3g^AZpBCPOGIb(96gX^p$D/IiT$)oqHH\3d$lVhREm.l7_?Q?Ub=n-?bkrgV\JOE85eed(;AOpI'Oeh
%/Bh$[FMIG9I_k2!P'uqA1OTcJiPUtnn&hPtpW4JkT7bJ1AY#M*#O?^D)^!D`m>0U/nhLRpNr4)3IeF[uT&hd.o8/h1fopjLn36H%
%TD?bS?0iAWYm#9J,dRW2Q'\7)7KmJi.&hpMNEukA=s;Q7N%P)Mr?ZHV)8K=K$E_MmRT`5RC5]BEmT5cWAbP*>R!P1'9!mRl491A6
%77D5jJcM[7cd+c'.k`\R`*F(B1bRZoKp$IGfj<u,H@(-8oP("ad(H<W6?pqr_,qhTDn_H*cOUd)Q\hV5oc?g/iNc2_\K&<='M_NG
%Jn)_%LZ_ef_kE+5m'HhfZ7D&64ZY-#-L(&Q$M?\,S!\<9G+fpdR17Q?ZTCFKkm`pRMS;*i)Cf60$?SF-g2AHlOeoT+QS156J6W8l
%CG&*N"!$0-$RnZHc1KY'#D)EBKVo*GY5`H0=pZ$W#`u?]V\:,ha\<5U-!4Igh2Triq\;kI-#:Tg=fSR?Tqot&c*"87&HI/NM1gKd
%DHdal]A)gt2I%+5?^`l@OfGP[lG#pd=k&(???a;)mWQYm@pq5#:1'L0L`Eg08j@>+]<^<:O#FN2&Q?;d`*Uh5P7(k$[A>%HUa#fO
%1:K+nZ[AX4H,)cKRS-Ac7Y0qjV-ggpcTk:P0!HBAq$gV.g-OgYb1b@MZ>cKIe$JZ).mkaUE=q75.n7?ODP#F2NIPOC2a<.JV[&=f
%-r0Du@/L5nQ-us6O4!@%h,!,'K<*3A>^@k^kie@u$Y9H49@BiGc=1r(BO6GFc>]?5mQf-c#I@=-oC+MUEf/?+>E_MQ"tB%(Ee3K^
%FK*BVhH0aM:EHHFOD(!m@"T=3"#.8VBijkq4o3+SC<ED,:*-nfg!W_J\&@"78dPPS&_f@Gn"*OrHV"M=%:-R10F&Ul3C6Ijrj=*?
%=$4[nYOO/ni=YA,n>H;Rl$S7*ftmVmb`P5E`a6,;Hh4s,b+LB]Xd(14I(E%Eg*G4W]"J2'`$qb(T$FMCm)<p9$*G<]=-UOt"j06B
%<qB9^^%eB5jIp4nA2M0[r\-*K0s"9'ca..Ok:3o3.7Cr^)gH7GP:6#ce^YA.2NBL5Os,1^c'%T[KBCY57+rWu:e]'RTR76/O9*c8
%i@H3XmPJm2Y;ShP0(hInji.k3b)`6EZ)f9,GrlBk;q/O70"<BFplg)AGGG]n00\'TcN"K([9r(Q2P!ZMQ$V\Vltjl?SYgj5C1tdB
%X[`Q7,B"V75QSL)-(rl(i2KC8;m5Ui%8Leq4e3sZm&0Z_/5<."Vc9A0guCBGUH7kMLPo1,p29Gs_bq#6<?io9CWFJ&[?.S:60.1m
%H^I$;GR0k9GE1k@9okgpG9^3T?jrE1jRLBeWpj8ep=#"ik'N67,Gh=']ls.<DE^r>nl-%87#PbaY!)@$,fpVZ'_?0Wam,'A9P4gB
%T5u>B=o[MQ8PbZsBh&dXH<qLT5msSG#?/I>F6?UFcIp=&AoM6Bjh+-:G7V]7M4L[SCQD^R9%H\famL>Sr#X#TZ'e.aT&\ghE0R$f
%T#))!(nkW6bEEOqQPsSS^PVHS7^iga=JbR@7MsV5M5_LADtO1tfua$Vl-U2FM@abQ#([@7%NhU*Ghd["VVl`+r.fgU(i2bu!qFa1
%./ROA7(ErcOt@q(2<eVA?T=GF0po(H`63%aoS`[Zs)b-EV@0u2COmo0FMR.L>*qO+)B2Elou6F0nRSgmW<(Drg($Pci"Q/EaD3E+
%o4gkX<d.TY3i"[gfo3ueOZ0?O)PKVpJ:;fs6_XJDZ;m=nU8joXC1UfSV;Y/]*H.m786W354';is4__*#JHSHV#Bu3RO.h64-"l;S
%<UMo3L=Tea5t!_8<RI"\>"g27<&(<K"Jk]"WDL]4MbA@(AL%%4$N.dK;_Q!i*EMn:W6JO:O\gcM?8@Ld47cC/PZ!=FgmKe2ajdQ&
%jR@2i+![S!1h(W@NKgOt^UTa].1Pnf+fO"b(KgkC2"VbZO_5\bZ&(?V.?Tp,PPWWlpah8>m/*&l4Y3Kr_KI7QE\_;F$NN_!3FJCE
%OCUon;.WQjB,Y48N:t[99tYFrX2a*m'u5f5@n$NB-]G&iAe/*#"?ldZ4PI\A,GuE3Ws7pCO6qi.Bht%=GB:4t^cf?A6CqFOK<_;?
%o`$=l#GMK`0B.r.]F2oRV?%.0]plpZrRGZ;Kj[8l3e4E*`aleCIF&\pP"n\+d"F`6[AdB]BNZT<\.(K<E>5j-,o5;FV#Cm"8RIA9
%)Gq*7Amh9-'%.U/"R'p')Wg0r0mY85j="uBX"qS7G2oQ.?*(:MLF*5YN>9FR3n)0'9g,%!7*dctAUK==jiD*<9WA#U)&qgWQ73j7
%&p*OW;S:gnc%iCA7R*OfXcHI=fNA7+p8)>o_A<K;hVqn$OLhr6<W&fjEU+F]U*V(Tmu+J:gWaTf,NN6f;;/4&`=o&,p>7knJ\J>m
%\fV?FCubsf0>S="6[)HkYnA;9f'rKa`"@bV[B:6$a(l2i3"+!/PXbrUUWq`!CuVa*^K.oWV3Dk%!^l-tVD-Z^!jF7t^.+99rJWh3
%rCD[OLZ!sW;'qUtXo"\?R6>kBj"_g.T-'k]N>oIja]h:9>+E>>cnS?Q(i0tO_<7lh9<2p*j2&4A=)L-65LKtiK&Nl!:3g'>P02sO
%MA<9`-.J/L>r,LMEG"gQ<P&]u]JIDrQ2!lV)l7:kRmS,-X;\=Q[t5W_o\kE^_9q.kMb<]\=kU[BTTLK"1i&A-lh=eaanL>:b7Ys`
%5Xur7lH&^Q4bSi.TH\D]^gF,1@sJ=]lln+d<>f0!"&SB"Dd.D^n_];@K!0[tg/F*[l+r<W84MiP*m<9dXeA%eHR_$CEN@,iVY,dV
%`bo)OfDh/^-VXYoH.<5#-7)t]-55^jVjsgrTA55f#ctHj283#JK1>'@cj6%N*M66a"Tq5e=.Kon7r%9c#SW=.*g+AG8<Je--n5];
%POMZo_R'ISg<QeD5a0:n:Y2mpo[eM7<D)@d+/tbe4hIcqfKO`0;`.98*tNo(Xpb^,;jQ(]ngu_.$;u:j2%FI8q,'9=`l;li`<d1r
%L/notjCrg`"'^/GA!)^!NgF[X&ZZdnHgGm39L/p9ZUM?;1Fg*e!,Pkc!>qf[eP$HJhj_0iY*tE#O>\7-*]!=XEGOWOD%A5MjZAl1
%L@rs>.cJo3pQXj`jVJ*6X"?Un8og2G'T1`$U;u%/*O;V#F"\$X'V^=rZK!I9&ERB[I[Y'd5PM,M8!b>174&j['c3ep=bWg1jeRJ'
%eppU>npYetU!$FfP_WF'7S(/t!jgo"moBR4KQ3$;1H4gsE;62If`:LdQs%:IQ2c]ReQJCjhRs"]UsrAC0m1ZOmp':E6gd@tE&%R"
%.EgX3Ko4>^iR94WGWH][X=7\9f=.[kVPM-P2okAD\6'te&O[57-hqo&>jPL[25QaLJ*KdL.&4,:K=BRlkNs$6]5f8]-KQ_ZTCOLi
%.@ii3]=%9B2!/EBi?i(>!8X]iTf\\T!Y\k[j6Z)Yq7Y$J<B8O$LNQKiST:7bh_ppE?<o""AljFlUJfMQ%a(M&OuL?Pl?J1UZ'&_Q
%c;`h!Vf':L.8]a92ZG<c*g%AC!m;\e2nel@@`Z72B$TtVki0$rEOITXB.+MT%DZG2[n8lqX+/EcX*A]Qs0fG(gHKq_Ia4-R"cW1t
%0bk5>$-!ZXom8Me,cJ36E/sss6pY#Y5LD%3F=4#\)dsI,r"O]1=-$l!Th]['gkoC;12QE'[1c(\QV_K4</RPI[1W*"U*9"C7TNe!
%].YP@,tA8db2pmsQiOo,0!KLY2A8#7IJ$;oJHOuTl,&ahs5c>R:*]GdOq(*p7!:VDj%8THkA<#$fJj'Tat8U7T3\ELFjpOJ<[8aO
%Vr@LHRt64+g8.#/Vkm4B/IgUu-qGPH7GM(pK1!sr2;K_g<W+A0Mia1N'tPuK%?[O5>e[Mm1E9^J:tesb,K-g<cYZNE!e@t'G8U,2
%%n7=/Da_$:&!(^2"se:r5D65'T$u)N_E<Wpl+V^&4sW`81h-i\OVI;r6NIH6WV;O/_=9S3Kl<J1lKC$6>hORLPK'8*f>('DYI*T`
%_33)7R2>3&IuC4t!E3(WQBW+`$`$D9m)+?3nq'LX>e!F6m[\<S'F9PYcYNQgEBl[D]>_Ef[W<%,L#]MNY<hhX9C.M0Ep:ZT!E>[o
%;&_s=YUR3-=sN1<>Z>J*+tFB<I!p!1*3A5FB$gO15#fg!F1VI3_X]31ctZc*aRJnArg6hXQ-doA$2#-';B"6*>,er#4hLcDmP]Q>
%eJ)6,6*$dc,?p7\>BIf.lf/8W2Bk,t=dTmZ%+cCPO(>NE--N%PL?&Y?Vs<W#Lnsi"V(6/C4Q,m+@Z0sOK\bJ?i/12+3k/Os>1qW/
%rZEa::>JV@Y83)HSN]Lm=3f`iEgQYcpU7Xf/'@4JSO#*5.#OG-[+PV^bPm-.Cfq,$']oq^dV)C:QspmT:2\;UEMn6L2ZE`K'K+(k
%rkJL/AMloulLqHadd/%)#[Rut\XU3,gsmtb'()?,>M2?u9to^HQjU@o757I<GE'q!a+h$`$K0u:i9"=H!k[,B=k5Uh%\FsN),Ot7
%XaI1/)mY]SWG6.:Nnm]^ibS7%)e!?rd"q@:S6%MNe].<uS)J\PY#'4JCrGMIq'Shi*Z+*EIKTSs<gFM#m4fEVKXiRVBn@d`dScHc
%*1"T?nOM6;NMTRNq'ti*)BbYa=rsAW%9JZtZotq7f3fg=<BQ8l'o51gO:,2r'P=,#nj-<KS;3D^'Q[K[pR5RoC-KDj5FKnnPfLOh
%[/L-c#U9RE`$^2[GAFD#!T;HH23:_@p9p8\=LXDp*2DN)`(+C!:+$1"=f8`J"=U$#SSA9PQ.07[T+@.;p'V,5)\P\2'"I5Z0BGSE
%q9I1XoOT5j3Lp5GkD3Y-Uod8`oQa#t=eTl3p``5WD>kc1eGI2^Z_R#G8%/4T81<:qA738@)CVfb`mNt3Mm$B"o)tMX]LOq"$&/>j
%\1jXHF*[%@g5YboXuB&aQ#2beN[rB?#%T$&Q$^p!bi>hLp?(g(jAqjNZ^2aj!t'bX4K(]-7_3!rDtq:MasHS)]a+1YMFU^MG$5F#
%Q4K\\k!U]U0F3.JAJGZ7.,IcT:R^+%oH&l@d\\p<l1hsji0RcGs7h""40h:<Y+]+6[g^\qXR)13X[XiB]8os6/T+ML5#!T+N7Ab0
%noU2uX#5KKQ)dX78j,=?$L3NPh]g:aa&A?5$<ta/GaVdG7IbO:oNMc';!?%R15Fd'Q0\/kN\*@6b+k5e%]_HSV?>E8PTWTTdqCs@
%bh&00Q-soYMO*X<f/L9.+3lgbHdmJZ2;2Nj0:L&]LK<hAp2"]O3d\;h78+HNO4c>[@V!e)K3^`B,r%jpSENdnp2%@HB>M$P.bmAO
%kN(;inuRrWF'.hj=Z'=0-**:nHWb'eh.\R/f@dKU-@8dRAC$Dg)](?:L'`b8=V+p,Qn*Zpq%o_fF8jCN6bO![7TOJ)r^oWZR6I3`
%P&`$fdg6i>00GDOZc(6sSQ@@c#jZg=c2DmJ>ES\qV3mo#)Zamaf"%fC0[CSj;r)/l&p?V2!.l:9Z>_.u=:%95(5Mt2$e;u4Mkg!O
%dX(WO\(rq,Dhr9HB9_6+Y`^js/,+J%>2gCmqHco:3HOK=3dQ],T'mtf:(r;%k'\LfIO&QDLV!A_H!*.K(9IDeERObe8b9BRk3[r"
%H+pePs$MmGpg_%\oF0p\\WODVP.SE<S#*aiH=Gj)ftjs4aei34aR7NB;+u@/`W;+"T-`7.n<&VPdR^>">l30;CN!;'8*J>e\a!FH
%1)9;@h9Ep*g9Y/&Us?`8$Z?Vm5>H7:0n*rV>^`FT1pl4!+1'.OT$(?0Q\3Y\U.lt*<+!^9]kMS4@hD*j&q+HAPhtAP3S`<@b*'n-
%K:7)5([$:00KQfrgtsu4g6EC?8<n7h&V:n17aB&,2^NTl$n8#k#/KG4iC)EY3uk@:s*^kC_aVt[fn"WFJ9cuc[;AKJ+bm+:b,3W[
%RKKBuJ+mm`a"l71k8J14>gd!:r<Ilo8CUe7Ck>pZQ8B,El'&ZbpX;`YQ`nBf'uDZHMd&m9)>m=[!G(CVh.WYtpKEJlB_N1+Q.eEs
%o_%$ibrn;Sm]N)#9B>I]ZcpI75gh3Ej]V(Af%Oq)4k!<I/sVLjCTW(kf!X!Let8kMDj1'!\kUYsdlB0JD;-97A*Q&X=DqNB/=e2>
%/#sQL@<hKRRq_.\+(!-r">1`"DZ.;,Wj5[L2JXa7#*n<g7[/K.[!=c$[UgXcr?aU9>GKr`p=8<J"Rk>W83*!D?K/mF#1H8GV_];!
%@NtUV9jE;))?NG$A5[7#^46DmIsZqK0:G+nE;NY>pp$B7hc<+dS,N5(B4ec)fYZN/p3EDt3=WGLnab1=nH\O'nTJI3-i<#C:5TWk
%'mc6h9!Q0n(;X,hOXC3'rlOSSZ4!;keS"3gkgB5;UF_.d?:['BfPPobdf1Xa[u(]F9JtYi\)&n*-XE;+%$B*Sn!%rkNb.5gb5P_!
%#3OuALT%1Kr9)j^1F"POl5$h,H')OLgZ;4`h&E=;qe>Yo26CLs';Te1Ic=W!W>]793.GGO=rEV+i@hWIiH.jt9_Ri)gMIq[H<sWH
%A7haKVFE-@UsZ#Zr,GPo_e?UC->fb_4]U9S.Pi9p"-D*K)n@mSU9&2_7`P?5Ot,eDOmR_/d>XgUBC*_IBC">O2n)l9?4_aYH.;+j
%"0*l4OGio[l`_./e)T/T)F]XA=cI^Y+GH0Vb?I?3NLfk8HHs;]f]RA`lA,1^_Pdt<dBUD7->DE[[+Um<MChficSuSt1(,#+h9oB2
%)P:Y&?i@>SD!B]k4^$V<2Ybscq>7MOHLp'mM>a$&pp^B$f'30$q=ROqR&tYkm8&b\mHin%I6)$=_.3FeM;P!S1oO\IGQh;SQ^l9K
%8j7P]H]%a;_?O`5kS&AupYb5Vnuf.9I[T3OaHecGmWlf8PG=gg>mu`p%P]YaXqgbc6URXGqB3eKZSusA'ke`C:lF1_[iki9hrgkA
%0#_)NW,Mj2^<@Ge?!&9^qnC,#>>er`eq@&HRd^RVlWLfAcu^mV)Y!A/#3L%=^71AiV"X[.#HFnoH6;usK^Yd`)>^sJ^R>)U%?YGd
%j'@g.54-]u4(S#/J%D'.IUDSe2?*C[lHOBsZd8Bn_0b/F5&hD!oR1[03?U1"6j:=r#=RnA4^HL'o98ir[P+4hSr^LBYI6<bH=S>M
%[6h_^4@[3F;q8\s+"V4/I!,>&#6A;"X*qN3eNF[Jm(V*<AJa^bgf<f>jd&In/b]c=@p,?Be8;nRc""JudI0!c?g"?!^Z1g@k4;h?
%RBYj1qt[1?pN1mC#u:uMh81_To?eIr-H8+!4TYW(]A$Mk:ajTAAO-]%(]:t<)N=;AW1b@1S])8+<eSM;#O\K!A\RI)jC.Af`ZiG_
%mG;@DIlPu1mO[<32(*^MKYjuOfi!$E8QF-8Vq^V-^Rt4dAa%<(O`KA0B^QN-Kt:LgGP="[WtAdf*4req)p:C;3PL>_+l,`aE>!0i
%n,M(rhq%#*O?^@+T%m7?DR6qiHnkf]f?F5+B)]M?R+qLeHFE.2cHptdT?R%*(1q\@lgj7OS*qjaXQ^Ud:o^X5[3u*l]^p1=G2G!K
%0#Jkf-oWY_O&l/>7P,sF++?J_A/i'g7UCBjl?Xo8C9i/d^Z%Bk+c+ITDO*D$Y\IcMc;rS1>W7$n:$!FXgD*UN4hlLHV;12+`OX0A
%r8(_,gF[?YC!3rM_O=mZQ=qY8i(Q7bOLOXnoeP+mZfGpcq?;n9pE[KF'P/0BFbZrZ!BL/2KaeIXH]2^piT^mgrU+]E8q<Y^%a,[@
%7T?MW>/eOZ9YX(<Zq+halO'%,J+/7da;:EQc<sj88*NM%C+*k#RdUOT_ITIVqk35)N-hqD+TOjJGaEhqKA4$;qO'>B)OcR;-CRb'
%h2o<+eCJOZ1d"O7oFV+&SfO86d^rBs+H9U#0A"8bp[eS=3)$)d><DU!Kg&CZQAeWt7c73V#l,"3Ya?/,Gr\gA"4/5B\"!U:?:f*%
%$;(LZ'jG]ggK\(FE":,`*"TI"OL:_VC,6W_dCErHLJql7/pTCK:CJ8ef`W+uSFoOd,]Wb)AodTbB2`N+QPt0hogu>/1iQLT`q1):
%YkH44PSIVr?PIRUi1a^&7sL-7fF5@Q(H4EXY"tcgdt<2f=IE1mQ+huY^N+3TI,2\a";DX@m"_Nt6++e$fmiaU6d*A+3kD.*Z7ecY
%.#jQcHMAgE#\lpU"[o:YO?l/'4't'&D;sS<Z]n!mak4CdpD>sH8d7D9qD_5I&>4gko2Sd45\AIs;-/4ph57+)Z#,_k>^A?GZRjcD
%?q3IU0b6Ed*i#YjFJM>j[L4r!$18osTusW-/7_\JjTcq5>U+W9R]56D@h?FZ]P!V8U@)GfYtg?Drb=B(8btiT%f,d;`QEP4$fn=c
%L*2GrH4jrN_h')a:)M.Jg3rO7e^'K#i&Te33\2B:9G4INMGR^U^mtOS^Q`]-6p(McLQTLG>GL%%*.IMrCOl<?ooX;`E,+u,_0s$E
%7::>!)!%W`1O*)+4.9eTX7':n)Wa,8(_o2e%U.:hU4/iaM_*e+r\4!0pb$d8LC[R/KV?XX1mE?#m6_#WO@'YbF2QMXV5.'X(lqAl
%HE-f%YJ_=shOm_'FYX#$%7,bQm;/JBL?NZ8%88U<QH5@;l:>7i8Q9hB.jNWpd-S--YSYHc%9)p9ooe$(M,NkSl:Wp^?TGs?hQj:l
%[4j*B2^]*SONkR,,qV$_a"V8^;dj+GO67QZZT4@EPQI7A7&aE)A3?[O6!VY\K:jA<9M#@26f$1*YK:b2<l[#F_^lb.]7_=q<]+D#
%1H>c77p__>[$lX\/NXuck<`!AYL0.[.CZf'XgK\6$j?fa:)='ihb9g(/>atSAq&0?8@GWAY!\c%XA'K]fEUNE(`F-#?%[B]4$l<O
%Ek/bEaq$l8Y&T7>53NapL+8&.1QnsZb@0rY?.'8H.HN1V8N?tB6I9iV=f7#,hj!0GamqVRN(E&W#g]Q10*'GVk?.D2s)d5Fqc$_X
%E/CVXCp>kn*\n#l4ZMVhPrD&@CsL@HWB"XRS?Mj4.F%&e\[KaUo[Dp>W4f%bq^$s5FV!*+(5eEWS4C3m7n._B'P-4q2cs.%^#ED!
%^n,<sarpF[I(du(>jt,d`2^rBfA\[B9X)Bog94-@L+-6>b6D8&GPNIDPJpV6;NPdte=XV[<Glnsmd3n0eH\0&Rm]s)jJtBXaY%eU
%T0aH69DCu$g\e.lm&<g=hi?tYN/JUkBZ_Nq0WJZ3[q(Uj9bk[/#j-b<f<)r:_"7;2VI#J1T0X[["UVd8AoGdhZ2,d+,s8<7hTdj/
%fPNn$CU+E^+!ps/X8WZHkdkOmV\^Zr]W0/>?=_d1#ihm[^@:f1M+ZX47_SR.U*?#XnX-7*rrXhig9\N]<g,)('&ohf1e`e\H6@AG
%<gi&V'4N##h:JPuQuSaqbb)\D7o)qcal8e"^XLdR+VFoPQUmj^s$&M&qn$pu/@"dFWNq2B7E0V-Ua!MeBDf^i>kXcE275R2Mh[t#
%a?6JT_`fj=1n4&oM[>T$4`R'ZmJqSEm%1L/8*$O"nO@f(-*o%MJUto@DTOJGk_N#_Of)kH1/V7hVtRYNcA7.Er_<6]4EPI\Vi&T8
%/<Ett9^mCG1"$tc/4'jEF\a#hH&`GEMHX[X9smI(NFo6ipn90m/d\-0*q:Aq,,,L-RqS+9A]f2$s$,0GCR_tD_l$qHD]YI9ha+$^
%^:6,4De+EU&KJ>XbY=;^Z)r>mmVZXMS9l28GHdDR9BqGAZZJ!g.Y5ZsclWeY8CVN1!NlQJ?d<efo`T.l]W30o"##HR%u_@KPBTa[
%:c*/@#8aiSV]]@OJT>bYU2ajZF,QEqMHk,uC$;:;;ie<)3-Y*OalMTbEgZ#\h;%bt!R4omk-Zf(JYWt)h-=j7"b!*qeK/6LMRXlR
%e^Fi[$DkN%s5<.ci,F2!QX!]?S..H?@T.QY-PR0b1+X!5Tl[@o7bNbo@?rGOhG536J6BNgV@.8pN^QUrNBC%$m#dhR,WMs]MUqF\
%C@+'WTZi):nVc/,jci#Wn`m,2f//-PhOL;.o8jqCL)aOASNYDD/TS-OioF:m(P<_-QsSMp':$H\7,=,bLUQk-U\i4$]/TS6:MK4i
%F;^Mt?Ot>uMnpjo%ZqR-O(GrR`G:%or3iX%Hd^Y]\Df3gnDVIMDM`Ot2,lmf."FZJYEX]C344*-X".LJk?\]>D+4\'DbL&q(8J"Z
%jQ!;9#_qW0I7KH"$&p_c0Q,ub$Ou,[+YH6]:APg$:.$=JN:Fe^_SUGN>p%R&l3U9Ai,ShW$J2(U?X:=&WinsU\W.fro=U\mJ=<1<
%M"+4'I;VpKE'['$I=gdo&qCU?Q7(E2qh54<$ct*OYG6]KkIO?aM>Er8$$@"S8\f[=csOtC)F<>%-WUik7'X>p96k0u0E?h#28m_7
%>\E'W&q*Te(?SKR3Ik9>>OCJTd#5K`#c;5b98&_W_E1/</Uo=6hJ;=4CL/!.XUhFL\iVqod7FnsB(9Fef@8+m[a(-e[u6O,9#<ot
%IIp0J%e%qe/QVmT@L^PK-`,@A+U.,B]W]Sk/B3BP$J>=%)8N&E'^2s?+0l_fA=@r%C)gg=8)fm_,i&M:d\!k]"-/BO(Y`E\(dVNu
%.Z]k"Fl!m@`nB2N*jaOjF4jeE*_-M'j;K0[UWO8.6uYPUMX_=:E+BNR!?n21"(iG62A:D`Jtf#J14DM-0[BEL=r0mhHN=M39:k>q
%L]FFqh&5*e?K&Mt2%`6.][M0@"NYp.5872W6SqauS`&&d3@7,(56UC:[^,CqW8Ebfh+,>&@Xgh4g*d:G,F3Vdcgt`,>^J6DS)NY[
%IIjc/l;:NLACMC`k9X7"Kc\([J6m@6>fdLf<V0fK<Q(5eCRMEL49JhZ$6D$tB'@[_BC_\=nXBA3lE;$[-,eZ1UHc2u.c[,b)0.71
%oS1D,/7DDHTR*<\iBu\HiJ)*6@/C\8#sH#+VLYM+ddRSV:clW]MJVqha9kbF?r*@d1%i8pBGMC9&c%b_6+,lRVPW4mX*P8o@WLq;
%0RH,BJ(')YBd#00=.%C>m36KVL-^E\Ac^"bWY<erI/7gH:0#&Pk13VaZ)4.VSh'akj$@(RcM+aMn-i4e5DkRg;5eOFnL.&YBIqSp
%#^qV=d;=jeCgO&?YrXY\WY_VdhH(=V]V[j<AX%b!dG&u)Q;$6lrSm\'Ot/%#E)B&*9FXHf>^-t^<&1;aJ`oJeX*Mb`*@6#M4jN)9
%3PPM%]6]sQFM3-lgACMl?DK.-a44_^Aftjb"`!G!pEf3S6pFsd%Xs6$aruW"e2&UUD4huFll6m_ec*"e0@*th*TM6*U8fYAs/`G&
%)WOfmT*YffcXoRE5L0(Q=amr.7&IiA?IK1Y=Q%gXVVp-qH1b6'Kg0a6e_=i;r;GYZp5^a%o'GVUs)Pr!s6CT-hM\hW0+8DC.X3n\
%.)bEW;^:'brrfg<19:&,DJ#dRl+71,^!Bpg>p!foW0[/+]1X*/9s9\cb_rdh=B\F0a4m=#=4YOR\)!&OI<AbW6'<MH(\a)]D7scV
%p_50=U_cT4J:b>FX,?5]*T;s[B(J#-E%s#cKdC!57X2hsKAZX]Y[.7th3o839Nqt%Sni+Z(XK#F??8al:[GGn^*;Fk9lk*IW^i_f
%L[RW`2-`ca@s[3((br9\$T%2?6Q-J]n.m2q;Bdm4[*:6l+J5?j.[]O!Y$X$5Vc5=KZ&(3er(AX7`'2V1>g3qmX9UD'Uahu5,(*P4
%eJ"m(pW-AQ?$=tdYOD:7,Z6&QU"Qi?-"UKlBCR?I;D%Dap@Im)4l?!L>MZ7D6TsCnG%W>^pX#dI:KOhpY7H?/Z'cYs&MnBEMk`P&
%ght;o[R'=6ds&s_=0(kQrR5;=KkU)6majlXg#f#2>U8qso;2lL!`cj,97jeM*P6T<^-*G5+7T`SeuqC<XpHV?Sj4muGc(t>B4sH)
%BMEqE#gC#Nct]9nYM]ktaEB04@;aa8B8#5Tr!fLR(GQH#'_d!;Q%8:=ep"UCb,fr7')Dqq"UcW6&CDL);cRu'g61!"F8Aq]OR!/R
%+bsqV^*EYa9O&e-j*5L#*kF=Vq*%`d#u-Z8(KXgp'e(1)6ML2#9$'jeZ^ZqF$s8Vu^F/ZX+qM^@l^b0M5$)fHb!+DLL7'Vk>W]7`
%E8"OJrWodn;4XRr.aR>kbX:M/W.`1Q(sD__+7h*qI+fH[N`ZSpXFFe1f4AJe+2#P\+)?Z]i=hV`VFN$--oO/l=!3Xi_=f)IUuF8[
%EltHfGQ``jEhE!mQacpo$K<<OCGN:/nq:N"Htl-$mT'@Cll`EEVj4e%Ff6ba]r6S]EQ%Ph9^%9h!IaGY3?YccYG'2DXF,0/OX-DK
%5=Z\)$)m)HL9k7qT;[*CNao>'Y,lng\OEk3Nft3W%_d76Y7QJ]:55I*cjU]T`peBMCF%H)PQK?RgQEZ0+%0F3jFp'3Ba=nc/WMRr
%WO%^4eCIN+%`SP/pk#aG&LMW(NYjtm-9raAnk9Q85Yk3XaQRZ5rg\N[JoU(17(;stXoX=Rjlu>bs.a3)Dq_qc&XE@IZ&b9Hd37jG
%5(sHE7[apZl"R-6IH:XA:dFqpqJY]lA2Tu1HT&e*l&2D'J=7cc2d(ij?6YcP854%U3X'DE?3@hcA=>*pp_/7_/M\8eKPuUI<;Kek
%WFF(K/I?sB.FSAp>Zk#IB-aMLT%XT\A^==H+p)T;T_"<n=h<MU8aB1X#"#124BrHq[2GI9_'?XX6C*kocqk-:P)%QhAU%AcUc7In
%[`+,F>LTe3F^Msc[.G7cj:@_C20SL>K'MPD5V8$0r7RB&Z^^kLl0%=h/1]Qi2m4ta9H9">J/Vies*$'RN4QtW[nG6Bb-F?D/1;YS
%8tY;+j\&\@<s$P7QV&\+AfGqsYTN92&\"8mg>N-"`YlqDkqY7+.mI=@cYIi6pWqT(m29j_o*jA'+-Z^Q))8/*qGX1=<L#]?aHS2m
%+aJ%FV/Om>!uc/oAOT8O+W;ePa?A&gX@?:^.$>^':/P%XDWcF[rd?l,Ir.g;ld?>bHH&Xt#UZ*$?T;\e!S$R^>)de:/R_O34>.uJ
%^1_Jp`>:qu%@01(ekuA)2`eUj2*Ofqg@Mm">li<N1:IYqO1H2[kDOHT!L:+'RG04B;nc0"8+h#u1./e?qC4@\CM&=nE>quOKf[nE
%R@OBJi7r;7iu%/HA`^LPp'@WChGQA9Y^6N3Tp[foZ>iB-@c>;oe*c;(*X\!`rbkT'^niUaFRR<>rR`a>Vn=QK3R^B<e[<Y=KuTte
%O<h#e!VOB_<`%T`i+o()YT$K<&WgY2!j4e[+_Fu&I(1[5?:JUVd9JXU-]O*GAtUpKR(h8i=dl=+d:@dpGHMPd^]=oqq@F(70W"6h
%e4aQ9Tq3^Eg)d=:&X?I,JWKk)>Z)I,6KVF9Oo_3WB/V9./`1tF\+ICjj\LC81U?!a'Ai8#B2k&O%A<")8"d9$8VK!2nDkmV37kHG
%%@N8%]NOh[J21I7OMmg"7eTB&_Jm;Blp5pA."Jta%5PW[SE=D6LtP0B85?a!,Kj+pTE8;US)"(.K8gR;c?,nrH\Ccl+6kn3C=M>P
%=oB6W&HoEAM?_;Xr4B3>jrlp`.ofu8)1cFcbq+=Pq.6,N=5,&8:?0f,=FJM<5ps*@kOqG>i?!c=',JBcjFa8N(i&qgY1qqCK[l]g
%4_0+j6kTMQ$9+\%O=i;Cp4;Z0=O7u6^m@4LG4k-9SkaWi:Ce.s96!#WO:TpRU;c.U=tF0KS8$25.=#8D0E!\NKDi3eRWEnoS+(qP
%5h$f-VaAN5&CEfbi1&HK,5RN0g2n+d(*NC/*5#g?l1!9,YTfJL+M^\Wc@Y210)[RSi45#iX2k3uF.jtSE<E[ihom?pXL`4`b>9's
%#]M^-edujV-_bF#HbZbT6kg?]0PF`/JSjB#c392YQX@/U1T:fn28$m@A6lin1(ha:r;C>*.\=m+fL_Khr+e>pp0nD<bmH0Tg37=-
%NmOt^(RUfq;0k]k;^HhN>YT"=F:N]T)#p$:E+^$M0["Dg!B/?oWS7hr_?"';#YhShgsBW(B\pE`/i/;L/`qR*\+p-u]K;Xii2&Wc
%Q?:((<#W_b">ppe2\4E%h`mj2UJnLcpYQ(mYBOm3D/eKD$`dook?nJ`kmAPO6/#L4rj8cL\_%_JX<I%u(d@mnr=YMJpt^!scqIk5
%83B)&pheWqId+"'R-$P'Po`5e>NuL$*4ZKGS[;+/\Wh=h9$)D,<T)A2X_tX34]P^*^.s/Cpae*%ZB?>U(\dUR/t/m+a_#51=AK'+
%E9n!#d&&e^`Q6J_56KFY*4CBTX%g0[i_C4eSAs/REeXs+809Ptm<`"cU5fi=$fI9r15B(<fcO%!h5R!rM"2BtdoRZ.U&OHgY</M[
%#q-u?eWOR;LW23Ypd@>o(SSsQ?6)))i>N+.ZQ&g7Sf.F`GI*Xh/gOZLfG]>khtbKBI2.Odq7WQdA,ATB!>!U#gD76f$opH8.:Y6S
%,Z.cEESuI7)=d)1UlPD9R54RgX_VqOS]94_P:NV6a3OTK+SItf0EbN'>;"62@177Nh2!=9>^d@7d1T+rL`;>L#I*ti,NBQNJ8N^,
%S'8;gNo;J;cpC?B%\[ktK$)jGEj*b=0.rcZ2is1Pb5nQ-V7I]#YI+]:rMNMormj!XKD,`SnK5!$0(.0F-7nL0%\<N!3.W/PX:l8<
%:(gBsCGO.)Y#9"f9mK^iRLej%@E6mA6XSSa`aa4+q23@1#cmU'1uVD7gT<WpQ\ll5O,kfaQ_eI%jPfX9)X4DuSc4h#YD$Xn)W/+5
%og3=NJGOV_g^]ZL:S<fLXp2otn[=\2@3XprQ+nt'mX8jLR9q`qaLhC;@f:NAS%YtRhF%%Q7Sf'L*IisPjDdl)8i_"c*8srb_R$]O
%'c%(;6!&jW[@I45#lta6<EisD!I#rWnjU+Y[0:RAR)_64VQ.Lu"H%Q\9P&WWjCqm\jSl^PHs&tAo1(NXNBe"?h/D#LeDCVW,pfH!
%]a-sreKFT=TJ_2i_NDS/3?`>@2M39(*1'1RZoR]QGEE&1#H:)5@r7Hk]B?d25OG`Q2LN)?CH-!,R+3dR5B\ZX&06mZZA<)TT"2&t
%=)Z&Bbq#MY4*G.fL)i+Z@BmNOZ7;&,.8+u`qJu%>fq)66!@P^$C2n5N.*.?:gkW/40ru%tB\c(h0)0n(+^KGU++/Iq9X[p80(72W
%&si:NKGNIe9r1U(Ko-d&J^Q``DVj\OhX$B'aS0il2YPrZ`-2_1N3c$9RQ\A5l/DU,MT]\K;=dJcia"V%^_?FZ/J28l6cdO?iCNES
%\G_aI-8]5Z;DJJ<oQgk@@?)Q<%\:U?;dED&>goegA;Itp^Q2lqWZP#MhWN?B^7Y%qp7PVG'^3TrH:P/3P''!K3U#8]c#\].msQ;V
%Zb-%b[eP:*]Qs"\]C%cMffm+11ML4lmQl@JLmJ"Ck0BgDQ7]_kI3eiJgMmJ_=:qeZYuVMNOH>J*%7$YA8kI\YOg\90+T=Ma^+i[L
%,PJ[NHZ,4m%El6Cfm@AMHHsQu@rO!_<2DUg%AO@hLt8bFVc/nO9g,I,.BgBj3NjN/TpCqSWu%L=p+=["VN&jCO&Zrf%mWSK]3;DG
%S4a\JY,_Jo5_^QVH;o^n7>O?Xe=c8'mb,eLo?+_LhM7$e[MSB/jgM:sf04)fXNgW+]kuj9)ub:=HoO#**%YI,!e1ODrR]EWr/":;
%gm:b>D8mg5j>q?lHho$=`!<pGVTLgK`IqX>b0^qnJL9H-&RWUgYu2=Me>Is'SF%.0bX].==+bC(9r;OQ<#!J1X7Dq^A5T-7<;*Yb
%;'e"b1UC=bESpI\447E;ea1S+YtT!dgZNOoL1d4f0c"r,BVknUW0]+U*mUAU'Cn>?*/;-Jl\`e,.'kJMhoKj1]'bA^Q=p?!i.8?Q
%TUs/*O>GfWlpH8:aZ=*jBp?$mSHA4nqimpWT+.L%ONF%c;F2r6kqf4UV$'No;S"I6`>K?X/[[jENK;Q1]&0^+W)_nAIp,=Cjjh:H
%_N7=*7%K/q%<H3+(Emp[R[dK3@)Hj71*To>&]p-0mp:F$3b2&o[Z2PS5?BYhBU;qK\V4M"WWi\09`/nNM1J]B8[L$K";rl+(CEsJ
%eg3(:P_$C.`fY&qh".1cmS+S\GZ"\7s2LChJS%aU7Yead/Q?A=oXHZ%RiW9M/8dlD;28d+.36-UVY8ilBiM<S?a\@&mFf>2_6?)a
%1%c/Mp'cuFc$'Gn4tKbBN5bS4OnP9U863P%]m`NJ<60j%M<rP@4qY/4?'!p60EQK0g[<&JUe%VFV$_^?C0+MTi^9208YMlEI(bd)
%(J^1PZ/iCgl"lWDDpKlPJ4f4kY^AG"9N_oU2KCc-D0%OAI'tXjdOL"aV6:903]uQ5HjrEX?kEg*-YRJ]]M?cMWN>[e2s>YrTq03!
%>35^\T5nkVe;FgnDbG;G.S>#Mqn`0;^(P"88ula:0<mBEl>]gSVW2]]cI#6#?LoRZPLCPiktm<rk,>EX/J<3]iDDZ_*RB^>c:uGM
%@jYr[+a7U.2rMV:jrP%g6bBksOR8P8U(/c5#=D\8&`#ga+s&1i@*/N`9W-ceo.,TnopV>=.:q2!>='O+dhaB)niqOCRl,6V4U"PC
%QX-W?;H#V#SYML72;G_lURMp.e00Uj^6IX@#EXY)^h;B+YIh_ifP"6(R;>N\nT:L*_Zs#JGPEL?U+BFh&)%3-;PNB;=ffXfOd7B'
%c$DBG!6'&*Lcprog7uMVcQe`35('d1+B-?TpK[3ZeAEc+k<Af:joXhu8kE/A'SMTX;h8#.n!M6MU!"m?i$b:7mCB-9_I!YiRjr,S
%Nb.E4Zkd(F''sW'h1R?`?F@OJ.+#tSVf<tGDi1`Y;YIjdm)QuoP?8b$-\>FKf8#WnMIS';-G/%F[<VCnL&.i=l8kPX6<nQJ,e,Z<
%G-9"7>#1l'7Yqo:/$A(J$ZlO.cM.\<.SV^+HXmXIBX,@Ge#`_(!<ctP:-PkfiJ<V&C5rjWSXs`sGE:*'$9]9o%;KOIpA=@B[#hu(
%C@]FAl*F[=_t5`gUh_QH1EY<j#g`^qh`p,46+V6(6mB\Jf^@CF<U5oOHD9-&!B'41#D)X]n4)f#`RiNW([K908?(47)<%jg7N<rp
%:$XF(0R2Ln[DcdhJgOQBHS--F<ubF>Vr!R]R1A?B07A"/);Vo5Htl)s[lSIQ_p7d/E(kq#)Tt@Q*32%-3GaUb"/4W.m5&oh4nORd
%cLnTdeSh=VW/E#5Pl2Aa4P`EG,q#UGGH^<MD],Hmp,%f.H%<S$#d*6PO?hj3=djF,:QmJ4Ef3L7n+^T)IdmUIDjrWuiC+$?cIJLB
%9nuQ-mq?llW4U0p!pVDq-qRB7i$7Vk]2L,JGOu[]dKUUl]oA2Mqmq_Fq_QCBT?/]`@oXL*P;Hlunr]?@;-k_7M!Dsg5HcU$Y_>o+
%cN$'Boj;fkq0>=B7G=/7:NL'U\Q\;h3:6T/SX\<dBM]W(O#HWp%Z\eh+jN'5Po17&KD=p%lbGPZWhT<)oC=<1?$5[mOq&=#?9'U^
%NL#kag_4/8dHi6u4-g%aUk*p:U\`>*VOk%9BTnkk=3%80L+A)=\OP!dRe\.QFtcj"lT!&9d4B9BdaGl.LC$0+4AR"t*00U;AT7`E
%SU'1Xe+_Yg2GG#UfF>M1NHiM6dqsefm04u="s1UZic_;4?AJe&+#FHgGk`+1Qm-^U`A/7TB9]m4^+-NI(M_&B#cOb\gSph5!0L2u
%eEo9"#&H^16%SD-XY;TMX*TN7]-QH"Kht8k?@q)E-LR^Gpu&u%nHBl'8,r(5?TWj(?Y*2>Z^nk.b4qfE`GH.?KGp>&d(\/r6kJO8
%[MKJe%YC-t$&2;c[WkC[/HW$?RmSW06&/454'c9e;!B^*q!rAk.fiT?3Dr9c(7bR$14>HT:o"sb'qG,@Po&46s(euhH-YYKi`ct[
%MW#5-:;H`Gs6Qi9Sj*/KM:.pd8T!rS*n60FQc>]ok4O0CY7?NR,\=jE,Lh"NpY'^F<I1r`1E;R!dCkI&7s,]/crcm)HEMoE.GAiJ
%PJZDF&1Xp)DLj2'cBcUdP,aqI?S''RJPK.V+cDb@7#)ea4N9Mqe&BI+`j**cFp$Z[=D:;k.q08=Lf/kMAYSkNh:Nk1KTgIVj!a[W
%EADRX2<,s?JnG^,3bhFloZncSZPh\.1P`_F?gou=R_oAoF.9u"4HjQZL1k?^n^FkKSD,"=Lu9@kaO'QW/=4ta_6fssGNYUj%%tIG
%.;@Is%."B@9jNt?D+kb2I*noN1.b(Wi'l`m0CZt`:+,e"Q`n_YX9).0Y)Q-eB*pf175VK]L$Xs\c(``Cb^Z%9cUnUmYYa?%2O6-q
%+[)Gh3e+Mkmn<Vn*H&LO.p(AAl[Rk)@urPTb0t<G2Zma(GUX-%cXa<'\nn6SY6B6*`2hXX1C,k3`#G8a+&7\Z`(_M_Y8fOWQVkDp
%66qm\`*HWp8tYK?lO#s-@.8e;na,N?]QtVMZ-OrjaTp_D29UDf>M?RJs)=;e]%ud5i9+n9l-V?cCieDc>p]OGM"mh7qmoX#a29Qb
%f9edH-k=YL#WH-a,95CY&Z3)V&sOa[F.>Ndh,Jsj(+C<22!O;TXW@OJ\Z0P)f)`6(.n"tHk"i^p9f4f$QJpWiP+eF)e@`qoR[4]3
%S.\'@`KX>1<4K^)QgVUq;W@Ql@[/&._>S+27o>Vi6"b[./RE6%Y2EPdAPG$K3IN<?D[tF+Vt76ep=Yf0_%$#3,'n?6ID41%*dKd!
%_On"-]/t!')KK3\g)/eljG71K(U%-_h"FN+S[CG_aQ4LqUX16UOECs.UEnZDV#P7HnS<G+s2=#2/MP7=^+C(R(OI>K3N:YE<>X@3
%]MuuuY^#o$o7G!)kk+'VN2\@><J)\.b-E*F?VE8?eecJsJ?opqC9@Z(R<AS;C+_+ZqYHiEqEVMQG1VPm8EjZ\cNUe;bkSEL(16Cd
%DH.$VE-(\kPU^&#-P-\G.@i5Tgk'/O@$9@[l*2e:kQ2SKHMF1CNE?$delI96GW1eE_P,B_1k^ZD'K\'u(%n7aPf6d03BOocs!7>h
%Vk@S.S12TC3Z0b2qFFiXbH7ls>dU_>)!U"b<&>/p;@0f\/RRE_Dt2a$@C8SbW&59NkJePPDcU'>)e[3\5IagZ3NhW[NhZBPVF36<
%.YjfH2Y%.YRk*g'bPTueVe(@>3cQKXO".(Z3iJuCRZI%GNTIM<Is*N-0knm?X/O5,DVXs"Won(,TH9?gb%Pk(B'C,nM_1R232JoT
%kcDrj)d?P2hOqO##')!FMR/#9PKM_*dV)PNE/g%XT'7_uStlacr%)0KZJ:7JoPB*lS1hhG9"$8A-_)I!p4kSfCGUR-_icIM@rJ?C
%%bL!kFLL3<NWel;%I_?Tf=KPS0T;k(OgNk9U.q:sb3NboF(o1FJOYe'(8[.X>](=D2WY9h@Y57*;))RU4/+s[jGo<555QsJFDDDn
%j_6/Ne:EiP\QRj/<!bbd98,Qs!3-RDVo9]i']'pknk#E?%]e/h$IY#Fl-S'`Z.g(7oteeADL](*j7CCSDkn"gOSIa3-O`_DWuk<%
%Suh%*XiTSGXWf[1We;!?-!kZMd;9f91tBIe*,u`piL@r_$3q715-Hr0_dRXOOIjuJKd:Fmk7l_*3.a*2+WKl^\q=*TR1miV?c3k\
%o?M:j.GP-uVbl9i/,mofg!>f,dB)?nrV=3M,B.9t<e[E7hE3t<`NM*W@#`\s]^7_$#TArBGpE2NC<Ol3Y_G@.\NsFP93UG4KD"AW
%@U<,GGqUkeb#c`A+pEd]jJ`R=:nt)rp=\&\<?\u<#5XQ7=P#]i`6n#P0fn`pI1ICD]oSX:/qf\BnI[&P1>-Kh:)@h$Q!,scaZ#e?
%0ZkSY/Jd9l=Q\^[^k>4ZFn/@Ap:f78HP0eP3p*r.!AWRV_"LV94uTD:CKM92H#gb-6<PMHL8jYc0:"$A0QM^4[<unWo_[&*'N`0P
%<r0nJR8;:sIEQl"942)H_EKU@g9'[5^s;^Q2*B2q3h<-hP9V?s1Qa^]fOIAL"7Ks$EXf)@cLfoClB`P,5T/i532_c6&hH#!+Bf`-
%8p`tb9!NfP)e%#'jZU-5\KLe/^/d1q]"E:<jj%fVia5T9<L<^!cfJNF`2_SrPg?k5_j@_I+tuhN6?MBm"3IIKVL_2P;H&?$*#p5'
%1c?R0hcbFt#eicseT;09=frtUA<miNKT/#LZhKt)fp?[n!D8C'"/k'LS2A8Yq-Mk5kTaN02QVg&CD"`^#GWcU^?DA4F%6NP"%8WP
%.'aBfb-J>I2Kmi^/MQ+J@G,6DVgjP`eb)'1N@iC3Z8>pB0$MIg&'<K@#V9-bM*R%/7&aiZ[\RgP#E!XgU5o"ZK\?V<]c'f&@8*Gk
%@,q]N/"*#qlIT>M83?0.Y^-<PCS3hD3S5iReMnT-Wat'Wn=Ln%-"FT<ij%S=]kiSXq-2[7HXQ;X=`QhZd42)Z:0'`''kc/\MCo^%
%MK@ku\j:Z;Tc;1#_1U(T[G5-Z9+R5YWU"7]m;;=,^9%'!dfiW?-@U]ae5[\(S:LN\E;!['9s)%>;m=\F3fR<Qmj>8YfEEfe=A@7"
%i9mrCPYlJ$'8@#U6897CR6?EjiTg@j[oolPfu!q;%@/jFQh+tXC\_GSd,B:'Br#m<htcZajLqBCiBnUPf9<N/.p1\6LG"0Ge*9R6
%QF4,21ea[<OeAlqr2:E4LUV`cWH'.cMP3p:9aLncm4e5J;%*+e[)sgK%U(jU`#cQ=\Kt*(W#$Tp<_S"?hd(1@qVY]YMBKuoD&[-%
%f^*9Z'_@@?=06srR3YLaQUNpJ2)FSZQI3K@QrqG1't\uQPjpljWoEgMD208<=E)8`21Wem<&Gls/a2%)FLU>`Pl.GMUFtJ[ZH&U`
%_.Ns9UoP-R*#[;:n_N;P+3<P#gT0aFPG*i@\TLF$VQYQ\[U67JNPB.g<V$GZ!K']9T?:ErGK.sHIr2MuarfI/X%+U#WS2D5YPu=5
%Zpq+Q+JirE:($?s7_S<a2E5;sq[]$3HC/u=@Dm:,1>K`Cp:u##dK;8#VABZ:".bL\R@4!;d7Ni``m;PC)nAJVH^f]c7,?u]PPfF_
%^UlJt@=?ptd,UDbE'`=smDlWJd_HrJ_+KT5gar1/Fk_+U1OduMCrZ?A^2N^8B>XW2G]:;X4GE3Ye`YuZo9o?;1N*Jp?aBF\MG'1n
%iKBH/Z$Qfsi3H6nH6\*=.`k7=[3-!TYaU;:ho"KL=[D8l=0Eu_>+lha8AQ+OoP=eI.JAKoY<ac&\h@M<VECO'(s]>V0e0Y!U6?Y$
%C04?<\1)nP9j)2&,<I0!jE)I/q;'Z"s%j<3p=.a\.T"]@d+U1WYBm97LsGk+RW_7l67']kAXX(o2*u7G7!i?LV=FiH":JR&NsAKk
%-#C3+n5;dG8`ao$5_dbj-rjV7rLsHc&P%K_6DqQV"VclNTCt:uFV]s5KR,<=1@lP:.qr,0kO[eJ?-$B!!rde/7JYr#"fNf>1W=Kn
%f3-THq`5HQU-p=#3g;!eP"7642emd<O&_^SDlCL@4_:r;'uL2,Qi$3peSEBQ&@!4pm=%.nV:TUoR>ENP=%0@>9iteGCe6f[_W/jg
%h-=lZ4(A%B38rsF[AB3j]7"4l%g*o]\8-]3[\^O6:8`*=g<@61_gnK3#3f\>DP#p9i]b[4V,X0Vd?O=@8T'd'p(70Bd@^p=`"&,K
%rcYH0)Id6WrNc<^Id(To:]c,kI7dlcA:rA:F__%QJ.54o-pA_IU,>i0H@^ekFt.bfi4TUS?tMeoP4)@2SsNJO-J[sZX;9O:(cRd0
%NCqQc,ri)+;3,qjIA>]FJqk_.N8hm?&JZ!_I.P_/X'hldX;^c4Pg"U6gaDt.oS;iPJ[F\,4ehs5ApaVZ:X1t%?E;!2JXW):D*kOV
%44<S?TDI_X\XT2X/SpLrW)ZDJAVDF.T$9"fGruGfGE-r;'=]I?W_2!HjSbGhU?#48kN$-Zek7An%[Icl3oP4Qf-M"]-Oc<HIn")8
%(\=X*(@Zl?pMcn,#.nEKHStMMQr.Q-I1.;OLMKMJb6clO2B<T\5S8mCFq!J)8A(Ne*H$P)=eBE)3m+@fR[k-TW;9I=J#/Ho&U/tR
%\j,JH7KYljkkpiYoAl>?]Gd9HHR2V+P3$f5o[TQ_/nD)1Qb""iVFf6Ol^X8\W!;eU<RSDmFO%5i]A;0a!X:ZCg0P![Zj=R+YfOHB
%]R4nV-<W6iQND`QV":rFl)jsJ)@?E>%<Mu)?G8P;:0THm4u<4\"cIe\:.Ik]Jp!2EomiR0nQ7+q"^Q4OlSgCdPW.Mq,?gOIQ1I]u
%T^,(c!%q2,[rCBEO(`i,TFhLp6KTt]m'Nb5M/mNg>2mgQO^-[B2e39%8hArsW':]XJHX.:Ct.7TkAo4o,Z3C#Jrr6-)AZ+uat8g4
%\aY%p2q.BLiOHB:Z,!0Si4Nsss,n)A1!C#7Yj.i*L%BG&s8J<;59,UmQN-g!,hM3$r)kT4TCSR*Ii?8_5J@A*)?';6M*85dV04>L
%l/IAsnS.'k3U+t4/rFO-:+7bP8*WRic<-OU9heb'\PXurjQFSKok?"N&2bMi,k?)Kd5=r_-Oq,Z&3%A\qU/[s,QVL\G&oY.MtOH7
%,t;mi35X99,FT*J-*i'FOQB"J\qY_RhcPX8(9k>iN#co1=o9R>qp3Or&/ZiK=1MUtIW@[;L]idBe3Z`W&(ap8/p"EL-Uu&p03\[9
%Ji\U6[7BVo*[Y+Sn'sZ>OYjs_000'.fB$gAoP-t]NF]Tc&N"F&o2YhFDLP;K%1C\58s>dbqHtS!X3I=b()jGn%of\QOjqemmqsLQ
%lGFUTFdV`#01^:6V[cPgG.;bi>MG+#8?Tp@0)AXXSilMek7G3F)B'-cDNAC]U;HdLS;%<gC1OCHe(cM=JY<a#F)0,@R+!ttD?hhN
%];N8nK2<==B]R+gND-70I!:C_09J<\_)3r&mRiKT>"6M87_M3J[u)5HHUimgr6K3<;%iG1jb2j\<')_WBC/fC/R^[4l78b/=KEXH
%[2Na<#G[8ZJCOWKA?KDAdlBbY2m]r$s0=njP?/q+3g)=aAL7%N1H<B1qI!j+q'Efb;@M#=nb;a]iS`&PTZ<5,ltOo[Ru8@sppnI2
%_V-;*N]rK4;G>bRSGCfHo7;3#$UD=88JGqa&nrjGF]"J!+oequEVOi+KPX,sa1;1Y[sg;:jJ+]bAfcR:#r;b'ej!3_\cblQAnHa@
%VSY!3c<4'?eH$d?`3NhDj=Y9HQGk.0@s-9>3rK]V#/M%r<ijl9B=mLGRZiB\8E:4iA-X6lM8AiBZH3&m[O2K2o'2fFd,;\IQ:AZO
%l(Oju]t#\k&B(]f?1huU@j?$,`Ns4l+_k+%FSI8fq;b]_d5T(.+Mg$9M7kCZJE:aL@]>G&"0)0UM?]#Iq@l>5-#/(A9C7YD8cQdb
%<B0?Vo-T=?TJV@Acde=+&Xlb-=]3Sb4LsuucYdSWjmk*&3IVqZ)S*uTo4F7)d!HUAruD'h7&DBXfaYp0Q[r,AHm0u<[D;O.n$R+T
%Nel.tSbfc6;)q[aCa&;1iEaj:j_C79Wcj,"<(=9WTOR[mk(IP"<EG+>.[9"'JX[seRF#hLUp*\$i65[G/tsoL_Q;5\?t7MNAd'ZC
%_l)1^2-.rh[M0;`#a/AQL>Baf$Ao+Gj5Hs/>j(djSlG!087_$KA7M7^63uYd^o,8JYUNq4gY?/spOhYjpJ8YaZHgU=Tk(*4,N5=!
%KodjS=8195XQS8\18@@_OC0:/ECBh\SB#[MFnuD[L7Dua]e1_hOd:8iAJo(9HlKG)p8A$a&VO@c%XKo$bHYEt>/:8INoCS?,QQ`d
%Qu:2T#HZur?F3#06B)0'9R1k?A@+cJ2Oe8/*I]i#+4-n-i\O.As)3nts%pDEpV9)Q*b,8*(;oC$L"c:n6,=e"]Lt`2N##qfYr"sg
%MioGrm+*1_BC\kB`.-H7S#hPSJ3R%di.k<g9[u^DQG'-IWRZfo3)"Fe,R,lm;AMiQloE_`B)1/F=(0<NdXn^kHP.34kdl!ZQEhAu
%kNPpn<u?eQj5O$]qja1ZH'k#C.npdgrdBpNaL?&!f-e=2>p03:Tr7W3C%T+\,\kPaNup<$5KtT/X.5gj7i%:@[I2=IL'BhqQDibf
%(&NhVH`/K[A=sl9df\L,e.+kK+NopTiVk("e0:Xhad4ZZAmi>([J>/\;6k#9q8?f[`\X0J?YL+]GClpn8V'n)&%\#ohM_Y((/oTo
%a-jJG7Kuhag#mX?%DWd"hp(+'oK=NopX#;gURbJqM2'l=3NZNZJ][C+,f.=V6I;SQG/*Hmo-DLHf;=bNg8^$O2L5@]$.Uo\1G!b8
%'H@5U_cjdM]ZYC3Q.eIUo-8D.4Y1;&)UU*[:_!Vd&taReUEF!B^L`+Lcg__ii^>@>$V1O$`<Ih^9gYg+V>90[g&5M7FHV`'E:uQ=
%a%q,tahK[Ma4;Mm<]@he0A\kM+LLt73nX[A$n;;0iP_2R3GIRJrCYP,+@Jn_YZ@Ks6)%;93>jj<,?21'SaSRG`'G06iuT<,V!Y$Y
%".[I6.Yt<?NqGgS(s-ILAUFGU!#=8#^DN)TN3pOQBFrS[af-BP#p#q8r>'RLB7%@q.gZW'!:-5%d[#JK7snrl"5nW3[g^;JaKVU5
%EI9;.WCtt$]fNkB:o8C@-l*CB6=+DN>F=gD]%5r%F#5D9Sk1-M!7;7Og!e+3,IX$'MEAf'cn>%+\*Ku9)fbUKcVg&rJ!u:[CSdJu
%19]mG/(n/H*!)5PKY0(mWLaT3T8aFAe"JD^_M'CL\\fZ5'UEfG7jJo2.B)#fXg:N+8WKR`r4\ZW;9hhuOc01d-bD\fYk^-rV@n<&
%`I(Wfc>Gcn5C1`uB+G8:"`&"'=^]b-c8Y6i#Q(S9WO;&Meh3sITrM@-j^YO!r.IgrJkBB4I#mfn1t3oYjZN(I:>onnUB5dc?)2:n
%lM)`p8;t\(?I.o89GZ"R=QXm_K74i;QUN5dJ7uNs]'B=G&.C+j1Inu5<iM%pLLDn<=Z*Q$&.sqg/=0FA(K4]rcpo]=qOg!9E#KR#
%Rj>>pQ/N5E@CeUHG,e?BCo%8NmKL<&_I^m72F$VA=+p,^rEERpYQX,Zg*EJG*L9NRF.?<k\%;TM0h9o2QV*"A#b`X=eC,H`,<7k;
%DWRZGVf-M0StcF.F.,>C^SD%.I*3Sf.(J6#2DOG>Sp_UeF5qBhZLgFdAkt@U<f[0l:*:l[PeC67cVEZ=gr1CLmu]"T\_jWDU#]l1
%oq7c+Sj9.VOj6?+<ff[3_tiFW:s6s45hWU:5]+nJVQEg`""g5gJ[g<P+-npmUe/VT@L`8VYc2Nc2L#:!-QrNLlX6)1O]N?Wm1omB
%,o4U964Z\#Xn-PFShjMZ,n(<r=kr`iG!i<pmo$^5.Ff+di!J<jX*ZZ4dSc3!(4t!Rek$u=,\_#7)tLs8f=[Z2bqn<7XG4#[ZXp,:
%3\F\q4kM))-%-BR5m@PhGe(Y$J!HUZNjbfh-UVB><OonONF6hg,Ue3Wd+oU<o&.X#YEU$6$1da\414!0'I<$+@LL#/4>]o!+.9s:
%V$6+iU3RdOjHGgnk/;2cqN>E4[US;%.nT7FghfsNh.V6KCrgfs'hk^+X+^aFENa[$h'OQBKJW3E<(qn/m"%[8/`'TdI$%a^+^VFN
%,4A#`c'#JEcPLL`'c-#of<Jqn;__fX.MR%tO-"fR)iDSG/5eO&cQ,9.o$M8Lc$/J4aDL,%bEu3.%RqH.(-Z0s>h82EDh;n\a1bnp
%21,bE9t\^hd8WP[XVkg3VUAZ$DMcOrK2`8Pg4:J$i`0,dZ.EoHU3^)bA=-FeRnhbM3?hVRTj?^':b4/@fJbl`2`LD&SRD+P-rXY?
%\n6=`n/h!a"VM3!^P52:>ROP"Yp4eJ$TY%6Xq"r%pk?!jAt_r;O6[0JWYBEnfh,$a(8D@D=e)[IZ<AOTJSKaWW?#LP@A6uMg$gf<
%2$sHui.4q+J5?F0g7=;eMs!FE/dG>=/b;>C%j(F)At!tJimtXg(XM<8Ocfg+VBi:Ma[^_`I:f&-1=i]+nK1lE;f*MM(n=Wr(SZW-
%=-E$*'Gs<&Q^i,-bUBO0b1P]@D,J!1cN"YVYDdt1<7pFdiJ4uDda]X;)944L(KI7r6M*]0I(4VV9O=atj\>$_*U3Do_IAHK>jl9Q
%&DN.8G=1kUKn`l9EX't5[*U<n3l]5Bo3A,F@I"?;@37!IZ:,7(@Nt))V,*!7VbL)__MC_rR4MQCQ8BjaZ"Q-jkgqF9JZUjnN'c/*
%7U'ee,-;2W<(ggaTuc4,F@k<Dr:])TU+3DJ!I_Gg&XImcTM7.B,GH_$6Qkr@jZqVGn@@%KWo'?=LUtAq+$,S)e`c3'P.tU<Mjb!L
%R%&rtBF:1Tg#lg:Ou(BZ1$"@UD=MXTQ)Epd:qS9!flSE]Taja68>RV)h7J0Y5[+tXJ.r?>?<3Au=\BEpLi,&TSC</Rj7F:>>c(l>
%$i]`"]YONq^\[i264.B=/QC3:W;Y]ji?Y%=pk5-q$l2mJA\-WY-]KOjE?rd=Rp,_uqD]W(i'-JEDQ4ASF0UaD=+1-_0f,j^`5b?%
%SsWD#mJO+fIAic'^!jEm2,;LVdlGPh-YK(^6F`G-^VnT.KWoRi[W\':bB]W`L^W+\k+A$pZAmJVrq6%t%A01FXhil7,04cd>LB:V
%B6>U+iUpS68cT^>]m<m:jSl"gF;W)9e=0RTjWMsD%Wa<XW0IG;QgVq'70ujQTQ7I=NtCWEAUeots4IYN1jT":V-V@Kcj1P#p>,*F
%s+qoT;ul[s^q8L*Lsu@Gq<e65;ua2@\I&dBL$h+K:^TOIo:)k#3@Eml-8Ff6'SA6%?ee>O^R=[])-hC%dt#oNPjqk@PhjmG6pld3
%/AS&MLg,25T*!DN1UONh@%j-W^aagG88&Z/rOi&$lh7d:nN]NqAn^a*:Lc:IN6FMo(Zo^Tj#:BA"kr<RD#0VPSNLS='O&qYUoh*7
%+;"dG,M`S]UlR#T%a\MH>OL\36_C%?*N.BP,6b2$kR#oD<:"e>8A_tSf'J9Xp9gP^]c&o0kMQu[lH>Grr,dbuLt)A,^N;l[+*15V
%?`\*Jkc\F(dX4rjI%=#8g1sq!")Z/W\B%>7*sQk+\`1nYQrFsLm?XCo.n+O!&6<,iDlt))\T0OKd#;LKi1XpeR<!oAI$^LWX\K1k
%,70eS$@.*`84r67T@oC"+mH$i!E9=f`C]6*[Z^R4l>(0.X64TZ"8Ng:Y/nqJQ(Jp=q3a"A07jKT5GQlo#Pjd9j_%W^C/5q'mbG64
%&)g8BF<Yf/$4O>_Tu/O/$LH$jSd8@9P-sDg3ur2,,?Z"RI%HiC(d9LhF@3?M/CD%.g<(nC.*5^p#G1oS<>mGo<G@ua3t0kIh:I[$
%hH...IsJk3#M"\d>_LW!dcW#$c0k37J=>PiOce'p1l;Ac#6A\qK5`SicBZY&>1q\;P0NZ4$n(L0X#l_RHa:$Hi#j1hm^[5WCQcot
%=#(R3EXciIA8^>J9&5YF,al7lR;:'#lBU@>mcO.](!-,`-$+]-2?P#Rh!IWjG;u'b:R/8sr@OLcSh$;bSXt#4R;?amal]m'MO2GM
%c0[$NHdpBp>`]r?+IbI<A96':"!:9rV`tu(p\8CM(ZR":&f/mE^=\f!H<'c1.ebJF3]L(Ll'>^cro,&f3hc;5o'4'PE]TcYVu'j!
%lF>n26%uJLJqpan1SVp:d3EJ;?g"A.aMr84`nT]*msqEn3:J&'eF89-E6_;5mA`]E6jHlC)-r''e>2.OQSa`DLm'9+;l+<,b@#$O
%!4uC.U^D05DFr)f$5mFFF20IBh)H:s(:^ILj12g)l*h`LPIt`qRafJ5c+.mEbb6>d%%'^XVBTgDmr!UiD0`/!roOtB$Q2eee4V2g
%ZhY,55$EXC/',<^2/8BDUZnc05JSSj5CgRXQl#.]G\*t)85X&h]F2P3]eSVZ8@WseYm+bg>BL0;jT+Irh&,]4+m[D5cDU:ONnJ&%
%0V1)Rk/"&8'o@pOO4A$O5KrG^ljkW)]8`Eub'c##L["'^(qJIq$D'=RD"Z@%r&/[IljL7%($?X0o%al(M@,L/EkfP"..F@bl-?>c
%3&)!h3>NUIp-f`B1?I3[brn%1(mahbouaiqCu&\m0Z?=a`IHjfjCkQ[PkPEX>l=&>3bn`4f`eLQ*1Cr:J.+RX';+r)+[FEkFX!ni
%)N>PO-p-21>C&:]:'ISrRHr0,F04$f/"";%?fqqX_ehh)4Zp$UqJX"9^1D4eqs"&Oas"POSB2<0HN^iTM&N'&V>]ifX6[J,+"Yr4
%djM3#a_sYG_QU0I%e*kLf$+.`!ddcun<?ESYqJ"=/l>[8>02H8,!Io'n[_J?9GrX9T5bb#\-bETcB<Y&!jHN50C;7ZQ*jmSZ1$!"
%O2dWB,f5Dsdm$c7'pj9#p9st?@MP2cal=2XHF^`Bjl.*&'_6??GT*C1R.o@fW3oodRT-J'QDS]$?CJp(*;E%!*X?Jo7]5F2(&Z7!
%Rn@!X=4J4/U`HbpYfit%lt)-#;F\*"_q<G+-rW"XDTsfG9l_#q4UZ4UQPZ8rdi="\3Wsao4g=AMNsK;YI%6e[&sX2mg>eXn?/#O?
%aLBo.VW-VG/MHh6[HI:0h1G4@r.@Ks$DoH&kdPt[-tpTQ1#Jf<HtL\4;+,o2XPR'ejm:E>1F&Ls3hu^h:)O!-j?8miqc`dBZMEgA
%,PGU4VpYJ2_734WIBma?.=_?G>0]&$]]L;PN8"hGqs*3ZisE3f\!I.t"_mB,[+[B6IPc+Q?"T7XZ;_//K?3+&no)\`[!-R5/hcXm
%g22l2FE,(J]&tMhL8So<cHAVjF"K1e!1CtB_p\k6qB1RkGFs,okk"iZACbg=6+me)?Je4b^H@Fck_!<iT"3?cFF*o5So67epb61a
%VMn[S*ghWJHC/H+Y]`Ns#iRc)QF&T;\A+Rfg-q?lNKqD*>D)T\qKO(=:[+DG&!$Di(W#LUa=ZuQC<8_B484N$ZWc7XDleqJS+Uo$
%rq^$nk/P*es81mD4`C[FT&]Ah5<,&><\r^2CnRI>^+AX,JGC;2q%"7]I0k=*COGk]A#b;JfFH.8#-Xo4DYe[iA18ba8::##W"UpZ
%ICV.h'ajUmju%Nh#BL@2iDloVhGX>,iTA8(I]hM<X]N-FcSqKmm4A4r8K@2;pu;212A?Z+m.&/GhXKDcgp_pp_=;M,BCpiN1[2NR
%CNikSZq?F/H*N-i4Cq\dkt\4G+$>bBQV7fK67=^<njJVc8U.`jnr5DMhQ8?JEYTl`a'2#*FJ?:eDu3]hX\5Lh/gNOfqL2Xk:O)(6
%bK2tRDX?=3-jko_?114Wo7k?@lRY!SStdSJ&nO$%Io#WYNC'Sp?i2\VPtBmp.ZpX<h[pmcCcl\GXV4X9`P/KELI.iQ@dW*+GiV@^
%J"*/;'D]OMkgO\Ipen_rK+CH0q\n/F=L>Rk'ZTj\SfTGoLEgm_aSTX8Sed1^3^AlA1l%\a(`b!@,c1/_1$#mJU+e[F!Z]gqqhj@X
%oUcurk.Vo(W0]HNQg8/I%r_QiTB1[O:X-P8mPO30A(d$03(epfka*C>MmiiE*4&dpG2Hgm)9*ocN%;De[!2QHQO2JaIfe?6?[i[F
%<m&U(43#E8AOQU79(c:e=<c":/o)UcedYr_4/OV"iV7Xj##%gt?fuC:mr?l>A:;(l.;aOC[DsXYguL'9Ec-%VN]c)G?Z7Wl_JR=C
%N]+<&R4aoZ'/8i5>%[cl8pc'<B&J#a>o>,IP;4:oMl$2dd,(trJ1gS;DjOh\boie-Q+3):CZ,2\^N`!0o1q_Fo$r+5db7UL(*\)K
%b$Jm@ibGnp,Yr.NGpEo:GsUP4[qII]jH""k("aodbXsX[NY!lu.6r*-L_a7WA``bb_R<'6#ia2&LS.6_b`B&?$.Lp1Db5'lUG)Fp
%`UF.;"%#AbN6UTDUH<9i\)^F9pNIFRTJ&$DXOSD.A,U=/^FXLfRaea3VgaL",aMeO9t%c!g%^1)!^4m'rSFmsi+fGQJgZ"LHfR&S
%KIAT,8T!FQ.9>I42e&3Z$g2H.)-1WS9o0#*o5cO.kXVHdU#&P;jZSk%bu]Q)bCih'>nm#;NRN\j#[nlL)*SjfS_(/XB4U8X:Z)R0
%cME]_PJIE8=esOi$fp@I?90pNqp#sAhu/F&p^ge,V\Lo%r(q"G+%f-j-uV@i3_,(=e,aN,A*#1S0ib6>Q3e%t;(m0U;>K:le8^*I
%llq3Q4cC".1e4Ea)ln&./T1nnksm<$D3%"XUt0[)@[=YX]^$Vpq"6?jQs8TC>>oHdKWi=/<kUmTC0\n_L[2N,/]FeS(fq:LZ0u3a
%cL<NFU^&UV3O&.;Be>^@&asGf\[7*WN_6^EZ2/WRSB3/+]35_PBD/3;'#1u3PYXCN@)cq)as1"dR3F_lE.<;&('._W*([eZ$ne:V
%!MhFH>KHl_oMVCF@;bRW7_[WC(mpUJ:nN'1`CfV2,QpD6>c)m-2pR0h>*fKC()%Na9PZ40kAbHuW6'YBBpAn(3-I^ZP_3Nh*mgA<
%HAl/5qZOOV=b_6l+qEZ]]"9b0TWKP@L.'J4OUAC[A1B3kPGs/&.k,(B2,\(M`mV2],ush6?I,t<Ae#mM="r`.fH#.#FU>*1UI&5J
%:Gq#=cd#W0E%S,Ee630n.<ShT2ql!!e?i_#]CJCeDFs4i[I,I!0dGW-,/P[7;G7.BUlDo6m\hSVcp#Pp%/`O@MO6/M-G`QP.H\b:
%9e3@pc!mtFJF2I*:Bf8_.:u=,S2'&X8@:e>^^mHIo"/t-7UVG'j94_*PDX`,:cGc^crjuT-`SQPClW&0!%(OmVE#BT^4JqYUi3,X
%2_j7&c^F8>'<*jWk*A43I"\]Gq=2o7Dj=Z0mYfhQ[NS<mi[sDUBDW2oVKW=Si2]:2HZqSQV*SoNk?=f69o#fLKjm[faoS3<?W<eh
%<`bYIit-U2_k7da'7F]:1Zp4Z;_E1`,&/K'/MX8]jc++X/1>UMF$5GtW%NODLJqCKMdmF"V<.K1)5cJP[@\mr4l;NU6/UQTBE5/m
%H6ts$=A<*D?"6n\C<`iZEn.!F%YOFu=er)4h\T0n<pk#T+YDNFT?@O_"KO*&df(P@$/giB8O-9u#dM+Q(,cLW.W0+f6O?baNPP70
%_,@u$H=Ep\b2b@bO&[L^ML2tp`EBs55GFS\mN*jF])'qpqd?'PJg>m"$E,.Dk8<LLCXc^CCe)bd4+L[W+@0r)Se36fIr_j#qjq$n
%#M7dth:kA(+ht$^LZuGQn/8%*GQ(R[2O7.3,Jl4n@`_aKR-iF6\^E^So:P7R;WKiNM$(mhY4-N8LPLi6Q9RHo[[<cXXCtKgB*-;A
%E?D(ei$$.f[rH+d\+WisK7sCR*EU:X,q@<e:VKQ<HlL%:a7>,cZ*lL1`DSnE9QBi'<`=)c50V`Eb9fh2IF*?mW0`.Tg-oLd@B\hm
%(#5O#($%6['E;d/)mfC6h'-E.B@QB^]@(gHj/MB$%W#+L_ZPt!iJ;=))d^/CQ_N1LE\*V`J_lQN_b#SR'N8+6?_-dB-__l4,c?__
%gX]42mq^7@^TK(A5pR%I9W]erc2pkmhLJXnrEY,;"irsRaG!G0;2?FrOk)bFAR3s1gPX'=.;tRC1_B5s_dL=jg^dr%jRRqFjjrB)
%Q>bmcL>$Od\OsDi*bh\*P'>Y$]2*ZDEj61IY_*!h,\9<W5?RtZ[LP+\fNUTA<ir#rPq-A%F(;b0Fa-h:g_c8no;;gH]./X8WXVIu
%2ambRn>]rf'R!\F]&[7uFKo;tG4ErdUTeiU]=E`>`oa>mRYQ=#RToZB/LG%N=T<f7X#gA)Y:X*)!0blfGe9)rSk.JOSdc0>,d+3H
%ca(+Iote7P&C_<Wo3&5lf'&#F!<X]\"f/1l_!HV3Iq[JY-W./,nE0]uhFr8e%U9V&M\kLi-\U8Oo)OrF<SL_mbU[)MK/]-QG^5$:
%#I5i6#q#DrDf?X3Ys)373b4,/./u^r"dp?>af.GP%nu0F^/ga"pitk>,[GofggmmVb&.hVes2/K)sem%ZEj?U2Iia)62Y">D'eP"
%"_SiMX+Ka_p!O)YhK2!qaLo70EV<Djn&]N%*[Zn\LbRpeO+b/Y9L;0eAf[(;+f1YaY_H)I*&9A6?]LGS,f9"nrQQp,[]E'AY=<=S
%0]nc;iCSPD;dTiVr4)Z)E1GT'L!R;-.e*USR8f!</cRRP[Tg5not_\/3&1)4>b!oS.c@8`S!WoXe0;D]g31$T1KocQLa_#lNnnO$
%[YQSB9i<bZ@Pp;='3X/s.q1)q86GBS:!.9*[O0J2UVD=@@l>5`!Z;;a+4*^-;m/"Z,W\=dJqGIP-c=G]j/3pBR%]["!X"W9r9:-o
%0M&%uDH\2)"Paa9]6dk/X2dgW=R*pr`K`3<1NcGGpU[0%02ko08VGuLd(er7[l7C*qsY(T*7C\GlFmPl9>*6)GrjGu_-Ro+!q$V/
%Kb.0[jZIT"$om/![ZV7QQAKM;_=Xh0@U=S^E9;4AS1?NE2R\3eg"1Uf&N".,&OIVTY37=;C#[PmTHV"?q-S,`Lg/S[<EC0]<77mU
%5fI#g^,e%+@NK]Z!e[#Sb!3=W>Egu8WrRkB$DaV!$.*H!jQJuOp5(a*Ho[eA?5$Wi4]Pq;hZ@u:@=Bn2l`/('aJ9H#X9`NE+1E3r
%]gPp=YDs[!.(9UBXDl+h)_reZ(/QX*P,c[Ub[=?5SNSe.>YS!h<Egf=4DZtG2&QCJQTFArjGpD01]n'A>k/j)pg!epYLW%lnPWak
%O-UGW>J-R2QjB,N)Q#Ql"09I:ZE2QdPT"M<c>d8hh(cm66jOrCiiomj1A^`2cKHc!Ok]_SNpake1\G^Y1">A-=r4>a3#:$X(14aZ
%7l:B7K.kk[[AYKc2u2$/X>[6(>Sq:L>a9j:k:P/%V"1=7"A.IT(?O&>DTso)%_R]sXPJYY#9;XbnCWm?q=LO*!YK8()_Kjr5>7aB
%eg3EpX\h@+cjc@r,;9>\*mCIc]Celo\1Ku=kmAI=&VmQ<&PF51/nrDU_QA,fr%I>S=]51KJs`(?d6Q*#F=!&0Teg725)nB8JP\JW
%ri``;@&tPo1]p]3$t<Fd#SF6AgY!>^8#g]C4iNhBiApJcB=&8sTI85?6ZM4H!%hQaADT6nbS8*tPVM?9CbhI]PnjgUSB(M3I/aeA
%oep9$!8RnR2YNai.$O@E-GS;KN10_GolbG/8(_j-nOq>LHcmSs=Co.0+p%P6;tYscQ2B=[5!=4e2iuL94^<^qro5+KArtKXs1-VW
%o3b%(q#-"5R$*4<f7Qg:qn"S9%t)\l--]nRB&pXt6ZN13DnIUmK)P#ugPgWLgo!Y<rr!WLD9(7[(u?>HDhZs'Xs(']6$49_re%+^
%UdbXYnhB[CR6`s*(8=\%/r"!l0pb20%i&^d^TB8kk0.pb,/%>oPFK07Xe/`j9Oa</j[ZE_4VmY8Bn>tOXi]0`#D?b3ZZaX8!@pYn
%dMCaD@dH9WZIEK==[<q^SioJKh,li<>?UgSZ1,HQ`pZ)gp&b-bp"c59PA8f5`)LA?b/X-UIF<\sD0$ms8(n60qt-8&pr!<k[rZu@
%'jV]6@($IM(A5dYTs=6;QboN93HIBI$.7.YNk(1sopdY2SdOu\lS"^1lO7GI>2E]Q5h?Wk7R2p*!^YKl=Z5Q\9;d<VRKh)Z9i-\5
%hc*ZE2tuBM76\IZk0%D5OGA^.chUb1CoRI^SKl,AK@lVV0%]p->[QB(X8BL>SI)F*36U^ld9Is[p6O\NdKWa2F#,3X9BQSm\B.3d
%K(YL$]ejaKfE@c84D%1=:SU5T@6<>+I!h8.^GAq@-a5W%O)W\W`rJg#2D0jQhNmNjebSdWpqQ`.%'O#-Xr<+nZt_2k];=4KTAA'7
%,E^H>kB(tY-DS8DK<&0RnXB3nP3%UgL.!jHk@/f)/kqT75(eB$*,j[Boi!T+M%3&imeGp,9sr!"P:758rE)^u#AgQ4V=*$:U"aTr
%DHeZ<Z<Z`mb35?:Yg>^<9?4acXj;V<#?Q6Z#g$ciS$W<fC)s3bht(JN=LVHnIc4>8f2I]PMpjc5S*t@kS67jNpF51j&cTIC8kC'i
%]!%!\/?i0R;MXUk#5#9P!bl9O3F)E9R4@5QRTJHQKkl8V]:Z:);+)@3;-]DEJGX[<'Zhs)%qIoXIc`$4IJDmQ$?>=8VYWt9?Bu6(
%d-O\DTGUH8LAh#2C]EFXmJGp/g8Gj/pAet?J&+dfk[qLnT\X.&(A;jVg9eLYi!r7lISU_Y5]4j"V8t$K^+[YI&X6k\Hm%^TP#CVc
%2JgdDDMsLrh8c6";EDn'+51'g@,&hh2;abYdCJ7Ih()ZQn34']LrAJ4L?NMA!j&2X^RNA##oBP;@07*Wq2sU%[hPU-0j-8/0n1sd
%T&iXGNZ_3?08cTB91K&e<O`mkTU(-0aTQmDM_qhJEfeC<m86sCkCW3U%!OuIAd/A=KCdR03W<1WZ#9oB^;d"!4CuoYVIrc)&1H-7
%7GWl]=.cSU/Tb\f5=igEj:.0js1q)dR*OI!B/OM0fZIr+D/kTc4oM]J&IOt#/jWJ>KCW$fEF&a<'FfLp^sh>d*"g]#9mhjW"O4)K
%\AMPtNbeES^PR.S*\r"dcl(+7L[%Zq/\'K%1<F_ZX]m]MN/INl#Z#&VKRhd2FGj+WLG%W/luYG'+k1QaLfR#LOf`D>XrTKSB8$>+
%GH+2&"FfYpVdI($rp_q"FS0+W7Y0e]T7(@J5Ci[*no_*5]I:q`U-S]P,&;)!5OuN=p3JTb%:5%tN,YM3LQUZD22)A^B93oV;U\'p
%#+:!qV]YWm?p&l%FT%B\o)-rZJcc/TD;F"d?^E@Op_T-YEbPOHe0k=1S6-d@EhDcIq8$n'-hT[nT@_+e1a"itj:<+V+-SW4nJS9I
%oM_P8U#U>X<'$jV)GA\Ipdcuo2Gf>eM]e_BN6"cl=f3K5M?.58Ln"Y3Jt13bd/<^*;#f8I`7O)r8l,)>,6coMMf4WEc@?O)#c\(b
%jk?ZTe`\ngIg\t$<t,!tPi*ZU'sd65ZN*6iLi2VU*1Mebeii7aJ?7c#`tWKmlG`8BpJo&K<'sdC=4*U;((s_^<\l)[G%28Xebl)`
%1#C.>\sW0oEI5,oUDh^4:p=@mkf=iGP^&_7"5u61>JYSuUeUE,"REG^&X_1r4$ekqH4'tE7qkU8XJi!K&3-iHPKCH-U9Ng>cu'#P
%OtYC1=`X-@Spcre,LM5_<j^R3KddBjQj'bak"UKb:_*$*",c2pPqf@WUS#ujitJ9m0!eoR)Njj7>"1n;*'Wu(P4O2u()h*b22q:i
%N16T&SeLtIR`-tU@\V>'oE"a*ZF,t!$9kXsF]]([i!!`D.7l/LI(T3$T1t#ur6XY.nq4"Z06`qHG2<_D&S]a-++@fbP7][_OnmuJ
%/,[oZ"sI+L;W`m6ls`@.@;MWM+!G"0!n9l@VI\BO78#%h&E&Pe;`U`P#]7[<]jM$+2oBpp&e'a68nMbthqZ%gBg]T$\66[Ug090h
%l0]Z3i!u+4P.XcG5Q/JURSj=#dldsg,gD!35.9g2pU"V2El=Y?Q_`AQ_\-[r1fE'c53o%kkoHpt[=qJ;5hIEAghE9_*9Q+qZ9KSs
%#'LS:AC)NO9U[b=I$[=R.$(T&+%==il"hETHPHT'HVH$pNud;<e!7HdnQ)`9b]VE/`!W5Wj+%j/h"sD9[FZ9V5</^m67L1DEe!UK
%,U]GuH2<C&A]0@#?(>Og"6O#hMe<\)G?'I,,e3;SZ#IabdI5J"h\QoM#tW:jB<TXRE($=l[$8J,pf0h=F%9cC_Y?+=$?,DdqfNF6
%>_K_j^tTfWm4]aVkWYtl_$"ib(uI4RO"k:[2S-O>V*!A7W(G=kn@JBpQ5c2anT)HFeFM)KLmnii3+)C?:h$`C<IqDoAP[K&c5d&B
%CIfS5)k?"fm.&/tph<$grU;4jJar6#_kI!'a,&"SrACo:*g-",.5ZBOW@&0Wc$3GTqSk3SI#[LQrZ6Pq*Qb#4`Fm?A>M>jPbsIq4
%r-)"d7]ccNYbO16I=M-P@/3BL:B/9Y/O7;t:0RE<,>XMgV5+8$llCd6glQ##0IS.q+.3BuI8AB%Zq3QkKgB9HHTodIF+N3ac1BO>
%8msR5P#Q-31iquSrmMFLSu[Ka>??toMGgb:F4E74/5K>PO&1mDCM`f!YYa1l)BL\>W/6u[hQ5\E)D%`IpnSmaaVY/\U2aW<89G1+
%$?\1*&-=Bm@"@U.?)cX6[lAY)bm6cEmA]<)l4JOmIYoEhp9`q#C-R(FL(J/^M64g&%4TaDE`=XEe`&AO)D5f2SNtc(^f9d"olK3Z
%So3HQF8_4GNriM&VA[QL5\f@q%;aW+VA=@5Ca14t8lq8nBNL8#S?djV#CBRuRZAHs!B/r(01q2k<-S=VMa,uuVREDn^]tH%_jso>
%3jMbB)s@sPC-ekbajpQX-RnL&GK'k"gD+aF#g^]cBXpACddGDj%<j'('R0N+,>)fp]'\_BmT2'7E%k^.?*"(]70bJU9U?%ZJkKtf
%TB0\gS<rO)ZSTd_&LU!WmDT8(3UMA\fX,"4.f@I37^2`kD$\efCY2;;s7c8;rVH!_lJK)Np2C!)^OQ:>s82a:^3t>cr8iG+h;A/0
%5Q0Pbs7:a=rXXMK0E1)UIeS>@s3pH9p2BWI^]42_J,8DJrp]f7ptpSqLYr.(&-(\Yri[mLde/=/r6'Te+9()'r/:RcnDGp2~>
%AI9_PrivateDataEnd
