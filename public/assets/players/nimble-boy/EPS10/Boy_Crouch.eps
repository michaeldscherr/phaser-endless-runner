%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Boy_Crouch.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: WINDOWS
%%CreationDate: 12/15/2014
%%BoundingBox: 0 0 202 137
%%HiResBoundingBox: 0 0 201.3643 136.0118
%%CropBox: 0 0 201.3643 136.0118
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.1 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 14499 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD13FF7D7D525227524B524BFD045276527D7DA8A8FD35FFA8A152
%524B524B524B524B524B76527D76A1A8FD23FFA8202720FD044B764BFD04
%767D7DA1767D5276525276CAFD30FF522020FD044B764B764B76767D76A1
%7D7D527D525252A1A8FD1FFF4B4B764B764B6F4B764B6F4B6F4B4B4B7676
%A17DA87D7D52527DFD2EFFA8206F4B764B6F4B764B6F4B6F4B4B4BFD0476
%A8A17D525252A8FD1DFFA8274B4B4B6F4B4B4B6F4B4B4B6FFD074B7676A1
%7D76277DA8FD2CFF7D206F4B6F4B4B4B6F4B4B4B6FFD064B446F6FA17D7D
%52527DFD1CFF7D274B764B764B764B764B764B764B764B764B764B6F4B76
%A1A876527DFD2CFF7620764B764B764B764B764B764B764B764B764B6F4B
%6F76A8A1764BCAFD17FFA87D5276204B4B6F4B4B4B6F4B4B4B6F4B4B4B6F
%4B4B4B6FFD054BA1A1524BFD27FFA8A152764B204B6F4B4B4B6F4B4B4B6F
%4B4B4B6F4B4B4B6FFD054B76A1A8277DFD13FFA876274B204B4B6F4B6F4B
%6F4B6F4B6F4B6F4B6F4B6F4B764B6F4B764B6F4B6F4B76A17D27CAFD23FF
%A84B4B204B204B4B6F4B764B6F4B6F4B6F4B6F4B6F4B6F4B6F4B764B6F4B
%764B4B76CA5252FD10FFA84B27204B4B6F4B4B4B6F4B6F4B764B764B764B
%764B764B6F4B6F4B4B4B6F4B4B4B6F4B6FA1A820A8FD20FF7D4B204B4B6F
%4B4B4B6F4B6F4B764B764B764B764B764B6F4B6F4B4B4B6F4B4B4B6F4B4B
%6FCA5252FD0FFF204B4B764B764B766FFD08769A7676769AFD1076A1A827
%FD1FFF7D204B764B764B766FFD08769A7676769AFD1176CA527DFD0EFF7D
%204B4B766F7676766F7676766F7676766F7676766F7676766F7676766F76
%76766F7676766F76A87652FD1FFF52204B6F4B7676766F7676766F767676
%6F7676766F7676766F7676766F7676766F7676766F7676CA27A8FD0EFFA8
%274B76766F766F764B764B764B766F766FFD13766F9AA852FD20FF7D274B
%9A76766F764B764B764B766F766FFD1576A1A152FD10FF524B27FD0E4B6F
%4B6F4B766F766F766F766F766F766F766F764BA852A8FD20FFA85220FD0E
%4B6F4B6F4B766F766F766F766F766F766F766F764B76A152FD0FFFA8A827
%274B764B764B764B764B764B764B764B6F4B764B764B766F766F7676766F
%766F764B6FA17D76FD21FF522727764B764B764B764B764B764B764B6F4B
%764B764B764B764B7676766F766F764B764BCA4BFD0DFFA8522720FD044B
%6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B6F4B
%4B4B76A84BA8FD1DFF7D52204B4B6F4B6F4B4B4B6F4B4B4B6F4B4B4B6F4B
%4B4B6F4B4B4B6F4B4B4B6F4B4B4B6FFD044B767D4BFD0BFF7D204B4B764B
%764B6F4B764B6F4B764B6F4B764B6F4B764B6F4B764B6F4B764B6F4B764B
%6F4B764B6F4BA17D76FD1BFFA84B274B6F4B764B6F4B764B6F4B764B6F4B
%764B6F4B764B6F4B764B6F4B764B6F4B764B6F4B764B6F4B6FA1527DFD08
%FF7D27204B4B6F4B4B4B6F4B4B4B6FFD064B20FD044B6F4B4B4B6F4B4B4B
%6F4B4B4B6F4B4B4B6F4B4B44A84BFD1AFF7D204B4B6F4B4B4B6FFD0A4B20
%FD044B6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B767D52FD07FF7D
%274B764B764B764B764B4B4B764B6FFD044B204B4B764B764B764B764B76
%4B764B764B764B764B764B4B276F767D7DFD18FF76206F4B764B764B764B
%4B4B6F4B76FD044B204B4B764B764B764B764B764B764B764B764B764B76
%4B76274B4BA84BFD07FF4B206F4B4B4B6F4B4B274B274B4B4B274B274B20
%4B4B6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B6FFD044BF8274B76767DFD17
%FFA820FD044B6FFD044B27FD054B204B204B4B6F4B4B4B6F4B4B4B6F4B4B
%4B6F4B4B4B6F4B4B4B6F21204B6F7652FD07FFA82727FD044B6F4B4B274B
%4B4B274B4B4B20764B6F4B764B6F4B764B4B204B4B6F4B764B6F4B764B4B
%20A04B4B6F7D7DFD18FF7D20FD044B6F4B4B274B4B4B274B4B4B204B4B6F
%4B764B6F4B764B6F20274B6F4B764B6F4B764B6F205176274BA152FD08FF
%7D20204B274B204B274B274B274B204B204B4B6F4B4B4B6FFD044B204B4B
%6F4B4B4B6F4B6F452726A0C9A020764B7DFD19FF52204B274B204B274B20
%4B274B204B204B4B6F4B4B4B6F4B4B4B6F20274B6F4B4B4B6F4B6F4B4B20
%51A0CF5121764BFD09FF7627FD0C4B206F4B764B764B764B764B4B206F4B
%764B764B764B4B204B75C9C9CECE524B76A8FD1AFF5220FD0B4B274B4B76
%4B764B764B764B6F204B4B764B764B764B6F274B4BA0C9CFC9CF27764BFD
%0AFF52274B4B204B274B204B274B204B4B6F4B6F4B4B214B2027206F4B6F
%4B6F4B4B204B4B76A0C9C9C9C8CF764B27FD1BFFA84B204B204B274B204B
%274B204B4B6F4B6FFD044B202720274B6F4B6F4B4B204B204B75FD05C9CA
%52277DFD0BFF52274B4B274B4B4B274B4B27FD044B204B274B4BA075214B
%4B274B204B4B769AC9C8C9C9CEC9C9CF7D207DFD1CFFA84B204B274B4B4B
%274B4B4B204B4B4B204B274B4B76A04B204B4B4B204B275175C2C2C9C9CE
%C9C9C9CF4B277DFD09FFA8524B204B274B204B274B204B20272021207675
%A0A0C9C2A04B4B4B75759A9AC2C2C9A0FD06C9CF4B20A8FD1BFF7D52204B
%274B204B274B204B20272027F84B75A0A0C9C2C3754B4B754B7675C2A0C8
%A0FD07C9A82027FD08FFA87620FD0D4B204B2076C8C9C9CFC9C9C2C9C2C9
%C2C9C2FD04C9CFC9CEC9CEC9CECF5276FD1AFFA8272720FD0B4B274B2727
%A0FD05C9A0C9C2C9C2C9C2FD04C9CFC9CEC9CEC9CEC9CF27CAFD08FFA8F8
%4B274B204B274B204B274B204B274B204BA7C9C9CEA051264B75C9C8FD04
%C9CEFD07C9CEA07D4BFD1BFF52204B4B204B274B204B214B204B274B2027
%4BC9C9CEC97C4A4B4B76C8C9C8FD0AC9CEC9A0527DFD0AFF7620FD054B27
%514B4B274B274B4B277CCFC9CEA04B76A07C514BC9C9CEC9C9C9CEC9C9C9
%CEC9CE7C4B2752FD1CFF27FD054B204B4B4B20FD054B20FD04C97C27A07C
%7C2751C9CFC9C9C9CEC9C9C9CEC9CEC97627277DFD0AFFA84B204B272726
%C9C9C97C27204B202151CEFD04C9A6CEC9CEC94BF8FD0AC9CE7C20A0A852
%FD1CFFA8204B274B2075C9CEC976204B204B20A0FD04C9A6FD05C94B4BFD
%09C9CEC95126CF767DFD0BFFA84B204B26C9CEC9C9CFA0274B4B51CEC9CE
%C9CEC9CFC9CEC9A07D7D26CECEC9C9CEC9CEC9C9A620F8A7A17DFD1DFFA8
%204B2176CECFC9CFCE76204B20A0C9CEC9CEC9CEC9CEC9CEC9CE2776CECE
%C9CEC9CEC9C9A77C26CECF7D7DFD0CFFA84B2076C9A0274B76CF4B204BCE
%FD0AC94BFFFF20267627FD05C9202752274B7D77FD1EFFA820207CCE514B
%27C9C92720A0FD0EC926514B75C9C9C9CE762726C9C9CF4CA8FD0EFF4C75
%CF4BA0A04BA0C976CEC9CEC9C9C9CEC9C9C9CEC94BA87DF8274BA1C9C9C9
%CEC9A052FF525152A8FD1FFFA827C9A075A07627CE7CA0C9CEC9C9C9CEC9
%C9C9CECECEC9CEC9C95151A7CEC9CEC9C9A0C9C9C9A752FD0FFF7D75C9C9
%A0C9754BC9CEFD0CC92020F8F875CEFD07C9517D275152A8FD20FF7775C9
%A0C2C24B75CFFD0AC9A076A0C9C9CEC9CEFD07C9CEC9C9C9A74CFD10FF4B
%C9C9C9C2C251CEC9CEC9CEC9CEC9CEC9CEC9CEC976F82026C9C9CEC9CEC9
%CEC9CF4BF8F87D52FD21FF7D75C9C9A0C975A0C9CEC9CEC9CEC9CEC9CEC9
%CE4B272776767C277CC9CEC9CEC9A1A0C9A7C97D7DFD10FF7D4BCEA0C3A0
%FD0EC9CEC9764BFD0BC926767D76FD22FF27A0C9C9A0C2FD0DC9CEA0764B
%514B75A0CEC9C9C9CE7520202652767DFD11FF5275CEC9CEC9CEC9CEC9C9
%C9CEC9C9C9CEC9CEC9CEC9CEC9CEC9C9C9CEC9C9C9CEC9CECE7D7DFD23FF
%27A0C9CEC9CEC9CEC9C9C9CEC9C9C9CEC9C9C9CEC9CEC9CFCECEC9CEC9C9
%C9CEC9A7A0CF4CFD12FFA8524BA0A0C975A0FD09C9CE7C267CCEFD0DC9CF
%27FD24FFA82775A0C9A076A6CEFD09C97520FD09C9A0FD04C9CE7D52FD14
%FFA85276527D27C9CECEC9CEC9CEC9CEC9C94B51C9CFC9CFC9CEC9CFC9CE
%C9CEC9CFA176FD26FF7D76527D5276C9CEC9CEC9CEC9CEC9CEA04B76CEC9
%CFC9CEC9CFC9CEC9CEC9C9CF7D7DFD17FFA8762720A7FD09C9CE754B51A0
%A0C9A7A07CFD05C9CF527DFD29FF7D76F84BC9CEFD07C9CEA651277CA0C9
%C9C976A7FD05C9A827FD17FFA8F82E2E2820A0C9CEC9CEC9C9C9CEC9CEA0
%7C4B514B514BA0C9CEC9C9CF7D52FD29FF7627062E004BA0CFC9CEC9C9C9
%CEC9CEC9A751514B754B51A0CFC9C9C9FF4BA1FD17FF52060C352E2EF84B
%A0CEFD09C9CEA7C9A6C9C9C9C8C9CFA127FD29FFA8270C352E35052775FD
%0AC9CEC9C9A0C9C9C9A7C9C9CF4B76FD18FF7D05352F352F35052751C9C9
%CFC9CEC9CEC9CEC9CEC9CFC9CEC9CFCF7D27FD2BFF27352F352F352E2726
%A0C9CFC9CEC9CEC9CEC9CEC9CFC9CEC9CECECF4C77FD19FF762705272727
%052F0C0020757CC9C9CEFD07C9CEC9CFA1524BFD2CFF5205282727052E2E
%2EF84B51A0C9CEC9C9C9CEFD05C9CEC9A1277DFD1AFF520C2F21272E2E27
%282E2720754B7675A1C9C9C9CEC9C9A7A152527DFD2DFF272F2827272F27
%27272E204B4B4B51A0A0C9C9CEFD04C9765252CFFD1BFF272F06272F352F
%352E2700204BC34B0005274B514B524B5252A8FD2EFFA1270D2705352E35
%2F2E052720A0A04B002720514B514B514B7DA8FD1DFF7605272E2827272E
%60353527204B75052E4BFFA9FFA8FD33FF272E272E272E275936352E2720
%76272E057DFFFFA9FD22FFA82627272E3C2F272E3635352E27F82720FD38
%FF7DF82E0535352E05363536352EF827F852FD27FF27282E3C3560282E35
%5A35363535352ECAFD37FFA1272735355A35272F5A3536FD043552FD26FF
%762705FD04352F27FD073527FD38FF52052E35353536272EFD0535360C52
%FD26FF52282E353635603527355A3536355A3552FD37FFA827522E36355A
%352E28603536355A352F52FD25FF7D52760C36FD043527FD073527FD37FF
%4B7D27FD0435362E2EFD053536067DFD25FF4BA82735355A353635283535
%353635362F52FD36FFA876A12E355A3536352F273635363535352E7DFD24
%FF7D52A828FD0635278435352F35352E4BFD36FF767D7D0536FD04350C52
%5A3535352F3505A1FD24FF76A1A82E3C355A35363552FFFFAFAF84AF597D
%FD36FF4BFF5235355A3536353552FFFFFFA8AF8452A1FD24FF27FF522835
%353536353527FD06FF7D52FD35FF7D76FF4B0C35353635360676FD06FF52
%A8FD23FF7D2E84844B27272E272E2752FD06FF767DFFFFFFA8A8FD30FF52
%2E857D522728272E27277DFD06FF52A8FFFFFF7DFD1FFF520C3535592027
%2020F84BCAFD06FF767DFFA84B4B4B52A8A8FD2CFFCA27350D6028FD0520
%52FD07FF4BFFFF7D264B267D7DA8FD1BFF275A35362E27274B272752FD07
%FF52FFA84B75C9A04B4B514BFD2BFF7D2E3536352E204B204B20A1FD06FF
%A87DFFA14AC2C2A02075277DFD19FF7D283535352E204B274B202E84A8A8
%FFFFFFA84B7D4B75C34BC24BC2C27552FD2AFF520C363535054B274B2027
%2E8584AFAFFFFFA8277D26C275769A75C2C226A8FD18FF522E36356028FD
%054B27363535355A355920204BC9A051A04BA0C97577FD2AFF2736355A35
%27264B4B4B202F3535355A35602E20F876C87675A04BC9C2517DFD17FFCA
%05FD04352E204B204B202EFD04352F362E20204BA0A026754BC2A07576FD
%29FF7628FD0435204B204B27270C3635352F353528202175C9754B4B75A0
%C226A8FD17FF7D2E3536356027FD054B28603536355A352E20274BC9C251
%27A0C2C9757DFD29FF522E3635603527FD044B20353536355A3536274B20
%76C2A02651A0C9C2757DFD17FF520C3635353528204B204B202EFD053536
%2720204BC2C226C9C2C2A0A052FD28FFCA27FD0535204B204B27272F3635
%3535363527202775C97575C8C2A0C94B7DFD17FF2735355A353627FD054B
%2E36355A35363528202720764B2775C2C2C9757DFD28FF7D2E355A35362F
%27FD044B2035355A3536353520272051754B27A0A0C9C251A8FD16FF7627
%FD053527204B274B202FFD0635F8202020F820F8F8F8A0C24B7DFD28FF52
%0C36FD0435204B274B2027FD06352E202020F820F8F8F84BA0A027FD17FF
%CA272E2F60363C27FD054B2E36355A35362F27274B274B205176A04B4B76
%FD29FF7D272E5A35602FFD054B2736355A3536352E204B274B202775A051
%4B27A8FD18FF7DF820052E2E27204B274B202F35353536352E204B2027F8
%76C2C9A04B53FD2BFF2720F8282E2E204B274B2027FD05353605272027F8
%27A0C9A0C220A8FD19FF52272727202720FD044B272E6035363560272720
%4B2076C2C9A0C94BA8FD2BFF4B204B20272027FD044B20353536355A3527
%204B2027A0C9A0C9A052FD1AFF52F82720272027204B204B202700272727
%F8272027F84BA0C2A0C2A04BA8FD2BFF202720272027204B204B2720F827
%272705272027202075C9A0C2A0A027FD1AFFFD044B274B20FD054B202720
%27204B274B202776C9A0C9C2C24BFD2BFFA84B4B4B274B2027FD044B2027
%204B204B204B204B27C3A0C9A0C9757DFD0FFF7D524B7DA8FD06FF4B204B
%274B2027274B204B2020204B20272027202720C2A0C2A0C97552FD21FF7D
%4B527DFD06FFA8204B274B204B204B204B2720F827202720272027F875C2
%C2A0C2C2757DFD0EFFA820F8350527A7FD05FF27FD054B20FD054B204B20
%4B274B204B2075C2C9A0C3C2757DFD20FF7DF82E2E274BFD05FF7D27FD04
%4B27FD054B2027204B274B204B272775C9A0C3A0C94BFD0FFF52202F3536
%0C27A8FFFFFFA827204B204B2020204B274B202020272027FD042075C2A0
%C2A0C226A8FD1FFFA820272F36352E27FD04FF7D204B204B274B204B274B
%202020272027FD0520A0A0C2A0C27552FD0EFFA84B52355A3535204BA8FF
%FFFF27FD054B20FD054B2027204B274B275227A0C2C9A0C99A52FD20FF7D
%4B2E60353C2E2752FFFFFF7D27FD044B27FD054B2027204B274B2752274B
%C2C9A0C9C2757DFD0EFF764B2E36353527CAA14B7DFFA827274B204B2720
%204B274B20A8FFFFA8FFFFFFAF2775C2A0C9C27552FD20FF52272F353606
%52FF7D27A8FF7D204B204B274B204B274B204BA8FFA8FD04FFA820A0A0C9
%C2C226A8FD0EFF764B2F353605A8FFFFCA524B7D20FD054B20FD044B27A1
%FD06FFA827524B754B5120FD21FF4B523536354BFFFFFFA8277D524B4B4B
%274B2727FD044B27FD07FF76FD044B752652FD0FFF274B0C362F27A8FFFF
%FF52514B27204B274B2027204B204B20A8FD06FF7676A8A87D7D5252FD20
%FF7D4B2735352E4BFFFFFFA84B4B27204B274B204B204B204B204BFD07FF
%527DA97D7D7D5276FD0FFF522736353527FFFFFF7D75CEA120FD054B2027
%204B262752FD06FF527DFFA8FFAF7D76FD20FFA14B5235362E7DFFFFFF52
%7CCF51FD064B27204B204B20A8FD06FF4BFFA8FFA8FF52A8FD0FFF4B522F
%363527A1FFFF52A0CF7621274B274B2027A0C9A0C9A7514BFD05FF27A8A8
%FFA8FF4BA8FD20FF7D4B2836353527FFFFA927C9C951204B274B27274BC9
%A0C9C9A0207DFD04FF7651A8FFA8FF8452FD10FF522736352E2727A8FF4B
%C9C9A0204B274B4B2751CFC9CEC9CFC9764BFFFFFF7D272752527D5227A8
%FD20FFA84B2E3535272752FFA876C9CEFD064B20A7CECEC9CEC9C9267DFF
%FFFF520552527D524B4BFD10FF27520C2752A87D277D76A6CE5121274B20
%4B20A1FD07C95152FFFF4B062F0527052E05274BA8FD1EFF7D51282E277D
%A8764B7D75CEA74B204B204B204BFD08C926CBFFA8F8350C280527062720
%76A8FD0DFF524B27A8FFFFFFA84B26C9CEA020FD054BC9CEC9CEC9CEC9CF
%A076FFA827352F352F352E27274B2752A8FD1CFFA8522752FD04FFA1F876
%CECF4B274B4B4B2775CFC9CEC9CEC9CECE767DFF762E2F352E35352E2752
%272752FD0CFF4B527DFD05FF7D204BC9C975202120214BFD07C9A0A74BFF
%76052E352E2F0C277DA8A8AF5227A8FD1BFF7D5227FD06FF52207CC9C94B
%27202720A0FD08C9757DFF4B0C352E2F2E2E27A8A8AFA84B52FD0BFF764B
%7DFD05FFA8527D27C9C9C375752076C9C9C9CEC9CEC9764B76FF520C352E
%352F2776FFA8AFA8FF527DFD1CFF4B76A8FD05FF767D5275C9C9A0764B27
%7CCEC9CEFD04C951517DFF27352E352F2F27A8AFAFA8FFA84BA8FD0AFF7D
%52527D7D7D767D2776FFA82775A0C9C2A020FD07C94B4BA8FF2727062E0C
%2E27A8A8AFA8A8A87D52FD1CFF525252FD047D5227A8FF524B75C9C2C975
%51FD06C9A62752FFA127052E0C2F0552A8AFA8A8A8AF4B7DFD0BFF4B7D52
%7D527D764B7DFFFFFF525175C9C97C26A1C9CFC9CFC976A8FFFF5252524B
%52274B527DFD04524B52FD1CFFA152767D527D767627FFFFFFA8524BA0C8
%C94B51A0CEC9CFC9CE4BFFFFA8277652522727277D52765252524B7DFD0B
%FFA85276527652767DFD05FFA87D4B514B524B4B4B76757527FFFFFFFD05
%5276525227FD0652FD1DFF7D765276527652A8FD05FFA8524B4B514C524B
%76517C4B7DFFFFA8FD045276525227524B525252277DFD1BFFA8FFFFFFA8
%A87D7D76FD05FFA8A8FD067D76FD047DFD2FFFA8FFFFA87DA8767DFD05FF
%CA7DA1FD047D76FD047DA8FD8AFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2014-12-15T11:33:56+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2014-12-15T11:33:56+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2014-12-15T11:33:56+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>176</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAsAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXjf8Azkdq&#xA;f5g6PpWnaroGqT2GgI7Q639UCLMjSECGYylWdY61VuJFCR9EZ3WzfgESak+ebm51C9cyahqF5qLs&#xA;N2vLma4rX2kZh3yjjLtRp4Do5RZhgTp9iwHVTaW9D9yA4OMr4EEdbX+kwlS3l7S5WU1DejJC3/BW&#xA;8sLe3XDxlidNHzTzT/OWn2vEQ2up6YNgx0nW9Qtx26JcveL26HJDI1y0Y6H7GW6R+a2ow0Wz86X9&#xA;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&#xA;cEXqhVEcYkeR+KhP2jiAxlK2Z4WLsVf/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:FD46D21B1384E411BCEDA968A3005EC0</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FD46D21B1384E411BCEDA968A3005EC0</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:FC46D21B1384E411BCEDA968A3005EC0</stRef:instanceID>
            <stRef:documentID>xmp.did:FC46D21B1384E411BCEDA968A3005EC0</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC46D21B1384E411BCEDA968A3005EC0</stEvt:instanceID>
                  <stEvt:when>2014-12-15T11:33:45+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD46D21B1384E411BCEDA968A3005EC0</stEvt:instanceID>
                  <stEvt:when>2014-12-15T11:33:56+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>250.000000</stDim:w>
            <stDim:h>150.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Web Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -136.012 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 136.012 li
201.364 136.012 li
201.364 0 li
cp
clp
[1 0 0 1 0 0 ]ct
63.8579 89.0918 mo
63.835 91.2734 63.8066 94.9785 62.186 94.917 cv
61.8916 94.9023 61.6309 94.8184 61.4126 94.6602 cv
61.3413 94.7832 li
60.4121 95.1777 59.9526 97.5078 60.9619 98.9854 cv
60.7778 99.5332 60.8398 100.687 61.5273 101.546 cv
61.4746 101.581 li
59.2393 101.511 56.2695 100.25 55.4883 99.041 cv
55.8281 96.6514 55.6563 92.668 55.4326 91.5693 cv
55.5991 91.5342 li
56.959 88.7031 59.3013 86.7871 60.7544 86.7998 cv
62.0562 86.8223 63.522 86.8848 63.8105 88.4512 cv
63.8501 88.6387 63.8657 88.8516 63.8579 89.0918 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.0797436 .400244 .584497 0 cmyk
f
63.9971 88.4121 mo
66.4019 88.2305 68.0889 88.5732 68.9609 89.54 cv
69.7129 90.373 69.9082 92.1738 68.8789 93.1973 cv
69.9644 94.3027 70.4614 101.108 65.8389 102.363 cv
63.5234 102.998 62.208 102.42 61.5273 101.546 cv
60.8398 100.687 60.7778 99.5332 60.9619 98.9854 cv
59.9526 97.5078 60.4121 95.1777 61.3413 94.7832 cv
61.4126 94.6602 li
61.6309 94.8184 61.8916 94.9023 62.186 94.917 cv
63.8066 94.9785 63.835 91.2734 63.8579 89.0918 cv
63.8657 88.8516 63.8501 88.6387 63.8105 88.4512 cv
63.9971 88.4121 li
cp
f
45.4004 66.0918 mo
50.3184 65.2012 50.9868 75.874 50.9648 81.9814 cv
50.5376 82.127 50.0581 82.2666 49.5381 82.376 cv
47.2715 82.8398 44.1851 82.917 41.3125 82.5195 cv
40.4863 82.4102 39.668 82.2588 38.9009 82.0625 cv
39.146 76.7441 40.9878 66.8975 45.4004 66.0918 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
49.3398 90.6738 mo
51.3882 90.7422 53.6494 91.1807 55.3872 91.3633 cv
55.4004 91.4121 55.4185 91.4795 55.4326 91.5693 cv
55.6563 92.668 55.8281 96.6514 55.4883 99.041 cv
55.4707 99.1699 55.4512 99.2891 55.4321 99.4092 cv
53.0845 99.7305 43.9268 99.0283 42.5356 97.5176 cv
40.3828 95.1768 41.0537 85.8623 41.2915 82.6719 cv
41.3125 82.5195 li
44.1851 82.917 47.2715 82.8398 49.5381 82.376 cv
49.5679 82.5645 li
49.3955 84.9619 49.3828 88.5283 49.3418 90.5283 cv
49.3398 90.6738 li
cp
.498634 .76672 .682032 .673518 cmyk
f
68.5254 92.8486 mo
68.3315 93.042 68.3306 93.3535 68.522 93.5508 cv
68.9639 94.002 69.4277 96.2656 68.8311 98.4629 cv
68.4863 99.7285 67.6646 101.351 65.7085 101.882 cv
65.7026 101.884 65.6973 101.885 65.6914 101.888 cv
64.0303 102.333 62.7666 102.159 62.0366 101.379 cv
61.3403 100.636 61.3042 99.542 61.4395 99.1494 cv
61.4912 99 61.4692 98.834 61.3794 98.7031 cv
60.834 97.9092 60.8062 96.8066 61.021 96.0664 cv
61.1572 95.5957 61.3584 95.3496 61.5054 95.2656 cv
61.7134 95.3477 61.9302 95.4053 62.1621 95.416 cv
62.311 95.4209 62.4556 95.4043 62.5942 95.3672 cv
62.8267 95.3037 63.0425 95.1816 63.229 95.0029 cv
64.2212 94.0566 64.3271 91.7002 64.3545 89.0957 cv
64.355 89.0244 64.3403 88.9678 64.3364 88.8984 cv
66.4517 88.7773 67.8872 89.1006 68.5903 89.877 cv
69.1387 90.4824 69.3931 91.9766 68.5254 92.8486 cv
cp
56.0107 98.8887 mo
56.2861 96.6523 56.188 93.3115 55.9863 91.833 cv
56.0063 91.8047 56.0317 91.7832 56.0469 91.751 cv
57.334 89.0752 59.5127 87.2881 60.749 87.3047 cv
61.4678 87.3125 62.1523 87.3398 62.6382 87.5811 cv
62.9775 87.75 63.3657 88.0723 63.354 89.1533 cv
63.3374 90.6895 63.3076 93.5449 62.5391 94.2803 cv
62.4346 94.3779 62.3291 94.4209 62.1997 94.415 cv
61.874 94.4023 61.6055 94.2549 61.3774 93.958 cv
60.7939 93.2012 60.627 91.6797 60.9629 90.1748 cv
61.0229 89.9043 60.8535 89.6377 60.5835 89.5771 cv
60.3125 89.5186 60.0474 89.6875 59.9868 89.9561 cv
59.584 91.7646 59.8188 93.5742 60.5854 94.5684 cv
60.6143 94.6064 60.6475 94.6338 60.6777 94.668 cv
60.4146 94.9375 60.1978 95.3105 60.0601 95.79 cv
59.8154 96.6328 59.7788 97.9697 60.4287 99.0703 cv
60.3276 99.5791 60.3667 100.306 60.6475 101.006 cv
58.728 100.719 56.6821 99.7168 56.0107 98.8887 cv
cp
42.9004 97.1758 mo
41.5889 95.7529 41.2075 91.0078 41.7603 83.0801 cv
44.2456 83.376 46.877 83.3418 49.04 82.9688 cv
48.9292 84.7803 48.894 87.0762 48.8667 88.9531 cv
48.8477 90.1592 li
47.3403 90.1543 45.9585 90.375 44.9385 91.0723 cv
44.7104 91.2275 44.6519 91.5391 44.8076 91.7676 cv
44.9639 91.9961 45.2769 92.0566 45.5029 91.8984 cv
47.2109 90.7295 50.5933 91.21 53.312 91.5967 cv
53.896 91.6787 54.458 91.7598 54.9805 91.8203 cv
55.1489 92.9199 55.3115 96.541 55.0063 98.8633 cv
54.9966 98.8945 54.9873 98.9219 54.9829 98.9541 cv
52.1147 99.1758 44.0088 98.3789 42.9004 97.1758 cv
cp
45.4888 66.585 mo
46.2266 66.4502 46.8604 66.6162 47.4292 67.0918 cv
49.3647 68.7178 50.4668 74 50.4614 81.6172 cv
47.6641 82.4756 42.9912 82.4863 39.4243 81.668 cv
39.7451 76.1016 41.6162 67.2949 45.4888 66.585 cv
cp
69.3306 89.2061 mo
68.3867 88.1641 66.686 87.7412 64.1499 87.9082 cv
63.9492 87.3652 63.6064 86.9443 63.083 86.6846 cv
62.4082 86.3496 61.5986 86.3145 60.7603 86.3047 cv
59.0776 86.2891 56.7915 88.2578 55.395 90.8594 cv
54.7969 90.7969 54.1406 90.7031 53.4531 90.6074 cv
52.2764 90.4385 51.0396 90.2686 49.8472 90.1963 cv
49.8667 88.9688 li
49.8955 87.0039 49.9316 84.5762 50.0562 82.752 cv
50.1616 82.7266 50.2793 82.708 50.3818 82.6807 cv
50.645 82.6094 50.894 82.5332 51.1279 82.4492 cv
51.3267 82.3789 51.459 82.1924 51.4609 81.9814 cv
51.4902 76.1611 50.9272 68.7217 48.0713 66.3271 cv
47.2725 65.6572 46.3433 65.4131 45.3096 65.6016 cv
40.208 66.5303 38.5923 77.8428 38.4043 82.0342 cv
38.3931 82.2705 38.5513 82.4824 38.7813 82.542 cv
39.4131 82.7031 40.0845 82.8262 40.7671 82.9336 cv
40.3818 88.3672 40.1392 95.6563 42.165 97.8535 cv
43.772 99.5967 53.293 100.212 55.499 99.9053 cv
55.5205 99.9014 55.5405 99.8984 55.561 99.8926 cv
55.5664 99.8916 55.5698 99.8848 55.5762 99.8838 cv
56.7983 100.996 59.2729 101.971 61.3184 102.074 cv
62.0181 102.813 63.3867 103.542 65.9507 102.853 cv
65.9575 102.85 65.9639 102.848 65.9707 102.848 cv
68.3838 102.192 69.3823 100.244 69.7964 98.7236 cv
70.3623 96.6406 70.1172 94.3164 69.5098 93.2295 cv
70.4116 91.9941 70.2021 90.167 69.3306 89.2061 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
33.1416 129.383 mo
32.7715 134.003 29.7715 135.883 25.1416 134.123 cv
21.6816 132.813 18.2017 130.333 15.4917 128.153 cv
15.5117 128.123 li
14.1514 125.263 15.0015 118.933 18.6016 117.893 cv
19.2217 118.213 19.8618 118.503 20.5117 118.753 cv
20.6514 118.763 li
20.5215 121.513 20.4014 124.093 20.2217 126.333 cv
21.1016 128.693 29.6118 130.473 33.1216 129.293 cv
33.1416 129.383 li
cp
0 .167361 .439734 0 cmyk
f
3.51172 133.883 mo
-.148438 132.603 -1.22852 114.883 4.51172 110.003 cv
4.93164 109.843 5.3418 109.743 5.7417 109.683 cv
5.77148 109.883 li
2.97168 113.953 1.38184 120.893 2.81152 127.923 cv
3.05176 129.073 3.36182 130.233 3.77148 131.383 cv
4.12158 132.383 10.3916 132.883 14.1416 131.253 cv
14.3916 131.293 li
14.2617 132.263 13.9517 133.143 13.5117 133.753 cv
11.5117 134.623 6.3916 134.883 3.51172 133.883 cv
cp
0 0 0 0 cmyk
f
12.8916 126.003 mo
14.2617 127.213 14.6514 129.423 14.3916 131.293 cv
14.1416 131.253 li
10.3916 132.883 4.12158 132.383 3.77148 131.383 cv
3.36182 130.233 3.05176 129.073 2.81152 127.923 cv
3.01172 127.883 li
4.51172 124.753 8.96143 123.193 10.8418 124.313 cv
11.2817 124.633 11.9814 125.243 12.8916 126.003 cv
cp
f
15.4917 128.153 mo
14.5117 127.383 13.6318 126.633 12.8916 126.003 cv
11.9814 125.243 11.2817 124.633 10.8418 124.313 cv
7.1416 121.623 8.51172 115.123 12.7715 113.753 cv
14.3418 115.123 16.3618 116.723 18.6016 117.893 cv
15.0015 118.933 14.1514 125.263 15.5117 128.123 cv
15.4917 128.153 li
cp
f
5.77148 109.883 mo
5.7417 109.683 li
8.96143 109.183 11.4814 111.583 12.7715 113.753 cv
8.51172 115.123 7.1416 121.623 10.8418 124.313 cv
8.96143 123.193 4.51172 124.753 3.01172 127.883 cv
2.81152 127.923 li
1.38184 120.893 2.97168 113.953 5.77148 109.883 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
38.6714 99.0527 mo
38.6416 99.2529 li
38.3115 103.083 37.6416 109.883 36.5117 113.623 cv
36.3916 113.833 li
35.8916 118.003 35.2217 121.673 34.2217 128.673 cv
33.9614 128.933 33.5815 129.143 33.1216 129.293 cv
29.6118 130.473 21.1016 128.693 20.2217 126.333 cv
20.4014 124.093 20.5215 121.513 20.6514 118.763 cv
21.0015 111.513 21.4116 103.123 23.2217 96.833 cv
26.5815 97.4932 32.9316 98.333 38.6714 99.0527 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
38.6416 99.2529 mo
38.3115 103.083 37.6416 109.883 36.5117 113.623 cv
36.3916 113.833 li
36.3818 113.953 36.3618 114.083 36.3418 114.203 cv
34.3115 110.063 26.2217 107.183 21.4614 106.803 cv
21.8218 103.233 22.3618 99.8027 23.2217 96.833 cv
26.5815 97.4932 32.9316 98.333 38.6714 99.0527 cv
38.6416 99.2529 li
cp
.498634 .76672 .682032 .673518 cmyk
f
64.5615 100.503 mo
66.7715 102.883 65.4717 107.543 64.6416 110.383 cv
64.2617 111.713 63.3716 114.353 62.5317 116.923 cv
62.3916 116.883 li
60.0117 118.383 54.1016 117.753 52.7715 115.753 cv
52.6616 115.723 li
52.7915 115.153 52.9316 114.573 53.0718 113.983 cv
53.3315 112.863 53.6016 111.703 53.8916 110.503 cv
55.6416 103.253 60.8115 99.3828 64.5615 100.503 cv
cp
.0797436 .400244 .584497 0 cmyk
f
50.8916 122.503 mo
53.0117 124.383 58.5117 124.753 60.7114 123.403 cv
60.8516 125.393 65.0615 125.293 67.5918 127.473 cv
63.2314 124.893 57.3916 126.772 57.3115 132.923 cv
57.3018 133.193 li
53.5117 133.013 50.0815 132.593 48.1416 132.083 cv
47.9814 132.073 li
48.2915 128.293 49.3818 125.823 50.5117 123.003 cv
50.5815 122.823 50.6616 122.633 50.7314 122.443 cv
50.8916 122.503 li
cp
.823453 .403418 .425788 .104005 cmyk
f
52.7715 115.753 mo
54.1016 117.753 60.0117 118.383 62.3916 116.883 cv
62.5317 116.923 li
61.5918 119.843 60.7114 122.693 60.7114 123.403 cv
58.5117 124.753 53.0117 124.383 50.8916 122.503 cv
50.7314 122.443 li
51.4614 120.483 52.0615 118.223 52.6616 115.723 cv
52.7715 115.753 li
cp
.181369 .0870985 .113436 0 cmyk
f
57.3018 133.193 mo
61.5117 133.403 66.1514 133.283 69.6416 132.623 cv
69.7817 132.613 li
69.8818 133.743 69.7417 134.533 69.6416 134.923 cv
65.2217 135.943 50.5615 135.583 47.8916 134.253 cv
47.8916 133.473 47.9214 132.753 47.9814 132.073 cv
48.1416 132.083 li
50.0815 132.593 53.5117 133.013 57.3018 133.193 cv
cp
f
69.7817 132.613 mo
69.6416 132.623 li
66.1514 133.283 61.5117 133.403 57.3018 133.193 cv
57.3115 132.923 li
57.3916 126.772 63.2314 124.893 67.5918 127.473 cv
68.2114 128.013 68.7314 128.683 69.0615 129.563 cv
69.5117 130.753 69.7114 131.772 69.7817 132.613 cv
cp
f
42.0117 99.623 mo
41.7715 101.793 41.0117 109.503 39.0117 113.883 cv
38.9917 114.133 li
38.1416 114.073 37.3916 113.993 36.7715 113.883 cv
36.3916 113.833 li
36.5117 113.623 li
37.6416 109.883 38.3115 103.083 38.6416 99.2529 cv
38.6714 99.0527 li
39.8218 99.2031 40.9517 99.3428 42.0317 99.4727 cv
42.0117 99.623 li
cp
.498634 .76672 .682032 .673518 cmyk
f
64.5615 100.503 mo
60.8115 99.3828 55.6416 103.253 53.8916 110.503 cv
53.6016 111.703 53.3315 112.863 53.0718 113.983 cv
52.6416 113.883 li
48.1816 114.073 42.6616 114.353 38.9917 114.133 cv
39.0117 113.883 li
41.0117 109.503 41.7715 101.793 42.0117 99.623 cv
42.0317 99.4727 li
45.0317 99.8525 47.6118 100.163 49.1416 100.383 cv
53.8916 99.5029 62.1816 97.6328 64.5615 100.503 cv
cp
f
33.1416 129.383 mo
33.0415 130.613 32.7617 131.653 32.3018 132.473 cv
29.2314 133.653 23.1318 132.423 20.5615 129.003 cv
20.5615 126.873 li
22.3916 128.953 29.8818 130.383 33.1216 129.293 cv
33.1416 129.383 li
cp
.0797436 .400244 .584497 0 cmyk
f
69.2202 134.5 mo
67.5596 134.826 64.6099 135.012 61.0283 135.012 cv
55.3857 135.012 50.1304 134.552 48.3936 133.923 cv
48.3984 133.485 48.4204 133.078 48.4443 132.673 cv
51.1421 133.299 56.0635 133.796 60.9956 133.796 cv
63.9248 133.796 66.8408 133.612 69.3096 133.185 cv
69.3223 133.741 69.2764 134.186 69.2202 134.5 cv
cp
50.7104 123.86 mo
50.98 123.191 li
52.394 124.166 54.7417 124.708 56.9272 124.708 cv
58.2358 124.708 59.4644 124.502 60.4097 124.095 cv
60.8379 124.961 61.9502 125.428 63.1816 125.868 cv
62.1152 125.925 61.0835 126.196 60.165 126.708 cv
58.1016 127.858 56.9277 129.972 56.8242 132.669 cv
53.4399 132.49 50.3921 132.114 48.5273 131.663 cv
48.8457 128.526 49.7192 126.318 50.7104 123.86 cv
cp
52.6191 113.379 mo
51.9414 113.409 li
47.8872 113.595 43.0835 113.813 39.6519 113.659 cv
41.4165 109.468 42.168 102.775 42.4551 100.2 cv
42.4736 100.036 li
42.6294 100.056 42.7896 100.075 42.9429 100.095 cv
45.5171 100.414 47.708 100.686 49.0732 100.873 cv
49.1255 100.879 49.1782 100.878 49.2324 100.87 cv
50.479 100.635 li
54.2964 99.9102 59.709 98.8848 62.6377 99.8623 cv
59.1108 100.235 54.9941 103.805 53.4058 110.386 cv
53.1685 111.368 52.9438 112.327 52.7256 113.261 cv
52.7153 113.304 52.7061 113.343 52.6963 113.386 cv
52.6699 113.385 52.6455 113.374 52.6191 113.379 cv
cp
34.8345 121.206 mo
34.5239 123.226 34.1685 125.539 33.7559 128.421 cv
32.6455 129.303 29.3306 129.416 25.8823 128.67 cv
23.21 128.091 21.1729 127.131 20.7334 126.254 cv
20.9072 124.086 21.0244 121.608 21.1484 118.988 cv
21.4888 111.788 21.874 103.649 23.582 97.415 cv
26.9497 98.0459 32.7441 98.8154 38.1172 99.4932 cv
37.5254 106.209 36.8447 110.794 36.0376 113.484 cv
36.0361 113.489 36.0376 113.493 36.0361 113.498 cv
35.9639 113.573 35.9087 113.667 35.895 113.778 cv
35.6079 116.173 35.2666 118.395 34.8345 121.206 cv
cp
30.5435 133.675 mo
29.2729 134.478 27.4663 134.473 25.3184 133.66 cv
21.9976 132.403 18.6196 130.005 15.96 127.892 cv
15.1187 126.11 15.23 123.028 16.2173 120.863 cv
16.6221 119.976 17.3584 118.866 18.5693 118.436 cv
19.1001 118.704 19.623 118.937 20.1401 119.139 cv
20.0176 121.726 19.9004 124.172 19.7266 126.297 cv
19.7207 126.371 19.731 126.444 19.7568 126.514 cv
20.4585 128.385 24.4604 129.385 25.6704 129.647 cv
27.1548 129.969 28.769 130.167 30.2363 130.167 cv
31.083 130.167 31.875 130.097 32.5703 129.95 cv
32.3184 131.706 31.626 132.99 30.5435 133.675 cv
cp
13.2222 125.628 mo
13.2129 125.62 13.2007 125.617 13.1909 125.61 cv
13.0977 125.53 12.9868 125.438 12.8984 125.362 cv
12.1377 124.715 11.5371 124.204 11.1357 123.911 cv
11.1348 123.911 li
9.63965 122.824 8.94482 120.934 9.27588 118.852 cv
9.61035 116.745 10.9346 115.009 12.6748 114.33 cv
14.3618 115.786 15.9541 116.955 17.4795 117.843 cv
16.5903 118.378 15.8496 119.259 15.3076 120.448 cv
14.4419 122.347 14.1919 124.804 14.5742 126.77 cv
14.1025 126.379 13.6675 126.015 13.2729 125.68 cv
13.2549 125.663 13.2402 125.644 13.2222 125.628 cv
cp
13.9482 130.793 mo
13.9463 130.794 13.9443 130.793 13.9429 130.794 cv
10.3052 132.372 4.71045 131.771 4.23779 131.211 cv
3.88184 130.205 3.59961 129.196 3.37988 128.192 cv
3.40869 128.159 3.44727 128.137 3.46729 128.095 cv
4.34326 126.27 6.229 125.147 7.70166 124.706 cv
8.87207 124.355 9.94434 124.368 10.5732 124.74 cv
10.9453 125.015 11.5215 125.503 12.2505 126.123 cv
12.3521 126.21 12.4785 126.315 12.5869 126.407 cv
13.7095 127.421 14.0796 129.192 13.9482 130.793 cv
cp
13.1865 133.349 mo
11.1733 134.146 6.31396 134.322 3.68066 133.405 cv
2.79834 133.099 1.94434 131.268 1.45166 128.626 cv
.420898 123.094 1.00879 113.736 4.77393 110.441 cv
4.79297 110.435 4.81104 110.433 4.83008 110.426 cv
2.02588 115.169 .43457 123.46 3.29541 131.545 cv
3.39551 131.827 3.64795 132.054 4.06836 132.236 cv
4.87451 132.588 6.38623 132.805 8.10449 132.805 cv
9.96777 132.805 12.0518 132.529 13.7627 131.912 cv
13.6265 132.463 13.4346 132.963 13.1865 133.349 cv
cp
12.0229 113.521 mo
10.1006 114.4 8.65967 116.356 8.28857 118.694 cv
8.00244 120.492 8.38281 122.175 9.30859 123.464 cv
8.72217 123.461 8.08447 123.546 7.41455 123.748 cv
5.99268 124.175 4.23438 125.175 3.11084 126.758 cv
2.0376 120.052 3.73535 113.731 6.1792 110.16 cv
6.18457 110.152 6.18506 110.143 6.18994 110.134 cv
9.14502 109.892 11.2007 112.324 12.0229 113.521 cv
cp
37.0898 113.423 mo
37.873 110.64 38.5356 106.119 39.1099 99.6182 cv
39.9185 99.7197 40.7104 99.8174 41.4814 99.9131 cv
41.4614 100.09 li
41.1709 102.693 40.4004 109.579 38.5938 113.595 cv
38.0361 113.552 37.5317 113.495 37.0898 113.423 cv
cp
64.1621 110.236 mo
63.9004 111.125 63.4165 112.607 62.8755 114.264 cv
62.627 115.025 62.3911 115.749 62.168 116.438 cv
62.1538 116.445 62.1382 116.446 62.1245 116.455 cv
59.9624 117.819 54.4443 117.228 53.2188 115.519 cv
53.3774 114.854 53.5352 114.188 53.6992 113.488 cv
53.917 112.558 54.1411 111.601 54.3774 110.62 cv
55.9155 104.249 60.0811 100.812 63.2202 100.812 cv
63.5864 100.812 63.9434 100.856 64.2827 100.945 cv
66.2261 103.22 64.8354 107.947 64.1621 110.236 cv
cp
60.251 123.077 mo
58.2222 124.118 53.3521 123.859 51.3291 122.21 cv
51.9268 120.542 52.4419 118.695 52.9424 116.654 cv
54.1758 117.681 56.418 118.209 58.5444 118.209 cv
59.7212 118.209 60.853 118.045 61.7559 117.722 cv
60.9409 120.277 60.3838 122.161 60.251 123.077 cv
cp
68.5903 129.741 mo
68.9395 130.671 69.1284 131.486 69.2256 132.189 cv
65.9756 132.76 61.7485 132.876 57.8218 132.717 cv
57.9097 130.377 58.9043 128.556 60.6519 127.582 cv
62.5835 126.503 65.1064 126.624 67.2681 127.872 cv
67.8281 128.359 68.2964 128.958 68.5903 129.741 cv
cp
69.5269 129.39 mo
69.1904 128.494 68.6709 127.809 68.064 127.248 cv
68.0229 127.181 67.9717 127.118 67.8989 127.075 cv
67.8901 127.07 67.8809 127.066 67.8721 127.062 cv
66.6807 126.051 65.1704 125.513 63.8608 125.05 cv
62.4702 124.558 61.2695 124.133 61.2163 123.398 cv
61.2163 122.564 62.7866 117.756 63.8262 114.574 cv
64.3706 112.906 64.8579 111.413 65.1211 110.52 cv
65.9111 107.835 67.377 102.846 64.9463 100.19 cv
64.9453 100.188 64.9448 100.187 64.9438 100.186 cv
64.9424 100.184 64.9399 100.183 64.9385 100.181 cv
64.9336 100.175 64.9297 100.169 64.9248 100.163 cv
64.9219 100.16 64.9175 100.159 64.9146 100.157 cv
62.5225 97.332 55.458 98.6719 50.2925 99.6523 cv
49.1289 99.8711 li
47.7559 99.6836 45.5957 99.416 43.0659 99.1025 cv
36.5166 98.291 27.5474 97.1797 23.3218 96.3477 cv
23.0684 96.2959 22.8169 96.4492 22.7446 96.6992 cv
20.9688 102.855 20.5342 110.869 20.1909 118.079 cv
19.7925 117.913 19.3906 117.733 18.9824 117.525 cv
18.9131 117.459 18.8291 117.412 18.7344 117.394 cv
16.9868 116.471 15.1455 115.165 13.1548 113.429 cv
11.4331 110.579 8.22998 108.075 4.34131 109.535 cv
4.28711 109.555 4.2373 109.584 4.19336 109.621 cv
-.107422 113.268 -.571777 123.227 .46875 128.81 cv
.806641 130.622 1.63037 133.751 3.35254 134.351 cv
4.68799 134.814 6.49854 135.019 8.27734 135.019 cv
10.4438 135.019 12.563 134.716 13.7168 134.211 cv
13.8003 134.175 13.8716 134.116 13.9243 134.042 cv
14.8369 132.757 15.2656 130.278 14.708 128.176 cv
17.499 130.438 21.2534 133.191 24.9648 134.596 cv
26.1582 135.047 27.272 135.273 28.2788 135.273 cv
29.3408 135.273 30.2842 135.021 31.0781 134.52 cv
32.5137 133.611 33.3838 131.921 33.6143 129.633 cv
33.999 129.471 34.3311 129.273 34.5786 129.025 cv
34.6553 128.949 34.7046 128.85 34.7202 128.742 cv
35.1431 125.781 35.5063 123.417 35.8228 121.358 cv
36.2261 118.733 36.5488 116.617 36.8252 114.394 cv
38.1836 114.627 40.1201 114.711 42.3091 114.711 cv
45.3604 114.711 48.8911 114.55 51.9873 114.408 cv
52.459 114.387 li
51.6973 117.621 50.9932 120.466 50.0522 122.817 cv
49.7832 123.486 li
48.5532 126.536 47.3916 129.416 47.3916 134.253 cv
47.3916 134.442 47.4985 134.615 47.668 134.7 cv
49.4692 135.602 55.8564 136.012 61.0283 136.012 cv
64.916 136.012 68.0967 135.792 69.7544 135.408 cv
69.9375 135.365 70.0811 135.225 70.1265 135.042 cv
70.3101 134.311 70.6182 132.295 69.5269 129.39 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
54.4795 70.7256 mo
53.4092 71.3057 52.0493 71.665 50.8794 71.9355 cv
51.3491 70.6357 52.7192 67.1553 53.5791 64.6553 cv
53.7993 64.7354 li
54.4893 64.9053 56.7192 66.4453 56.3691 68.5059 cv
56.2095 69.4854 55.4692 70.1953 54.4795 70.7256 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
44.1694 65.5654 mo
44.0693 65.6758 li
40.1592 62.3652 36.8193 60.1357 34.6694 59.5654 cv
34.5396 59.5254 34.4092 59.5059 34.2896 59.4756 cv
34.2993 59.4453 li
37.1694 58.3154 41.7993 60.1855 45.5493 61.5654 cv
45.7593 61.6455 li
45.3193 62.835 44.8594 64.0459 44.1694 65.5654 cv
cp
.826932 .410346 .420874 .105837 cmyk
f
34.6694 59.5654 mo
36.8193 60.1357 40.1592 62.3652 44.0693 65.6758 cv
46.2095 67.4756 48.5093 69.5957 50.8794 71.9355 cv
44.6094 68.7852 40.2896 66.1953 35.8291 65.7256 cv
35.7993 65.9854 li
34.3291 67.1357 32.7593 69.3457 31.1792 72.2559 cv
31.0493 72.1855 li
29.2993 70.9453 28.2993 67.9453 30.1694 65.3154 cv
28.3491 62.3154 30.2993 58.6758 34.2896 59.4756 cv
34.4092 59.5059 34.5396 59.5254 34.6694 59.5654 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
54.4893 70.7354 mo
54.9995 75.8857 52.1694 96.4453 49.8491 105.905 cv
45.2993 107.815 26.7993 104.945 20.2993 100.815 cv
23.2393 90.9258 27.2593 79.4658 31.1792 72.2559 cv
32.7593 69.3457 34.3291 67.1357 35.7993 65.9854 cv
35.8291 65.7256 li
40.2896 66.1953 44.6094 68.7852 50.8794 71.9355 cv
52.0493 71.665 53.4092 71.3057 54.4795 70.7256 cv
54.4893 70.7354 li
cp
.74789 .241123 .31931 .00552377 cmyk
f
53.7593 82.4258 mo
53.4492 85.1357 53.0591 88.0557 52.6294 90.9551 cv
45.0093 92.0459 32.0591 88.4756 25.8394 84.2656 cv
26.9092 81.4756 28.0093 78.8154 29.1094 76.415 cv
34.5293 79.165 46.8193 83.3457 53.7593 82.4258 cv
cp
0 0 0 0 cmyk
f
54.3091 62.1553 mo
54.2593 62.585 53.9692 63.5156 53.5791 64.6553 cv
52.7192 67.1553 51.3491 70.6357 50.8794 71.9355 cv
48.5093 69.5957 46.2095 67.4756 44.0693 65.6758 cv
44.1694 65.5654 li
44.8594 64.0459 45.3193 62.835 45.7593 61.6455 cv
46.0493 60.875 46.3394 60.125 46.6694 59.3154 cv
49.5493 60.3154 51.2993 60.6855 54.3091 62.1553 cv
cp
.0797436 .400244 .584497 0 cmyk
f
55.8799 68.4238 mo
55.6343 69.8984 53.6553 70.7021 51.6812 71.2256 cv
51.793 70.9297 51.9189 70.5977 52.0547 70.2393 cv
52.7368 68.4395 53.3872 66.7109 53.8857 65.2969 cv
54.5874 65.6348 56.1377 66.876 55.8799 68.4238 cv
cp
49.4287 105.532 mo
44.8418 107.117 27.4639 104.487 20.8882 100.59 cv
23.0776 93.2715 30.1128 71.0547 36.1069 66.377 cv
36.145 66.3467 36.1709 66.3086 36.1978 66.2705 cv
39.6514 66.7451 43.0796 68.5 47.6318 70.8408 cv
48.5913 71.334 49.5967 71.8516 50.6582 72.3848 cv
50.6626 72.3867 50.6675 72.3867 50.6714 72.3887 cv
50.6875 72.3965 50.7051 72.3975 50.7217 72.4033 cv
50.7661 72.418 50.811 72.4297 50.8569 72.4316 cv
50.8657 72.4326 50.874 72.4375 50.8828 72.4375 cv
50.9204 72.4375 50.958 72.4336 50.9951 72.4248 cv
52.041 72.1836 53.1016 71.8926 54.0317 71.4951 cv
54.271 77.5928 51.5562 96.7051 49.4287 105.532 cv
cp
29.7437 69.1748 mo
29.5796 68.3115 29.5918 66.9912 30.5811 65.6064 cv
30.6978 65.4434 30.7056 65.2256 30.6011 65.0547 cv
29.7847 63.7188 29.7798 62.1543 30.5884 61.0693 cv
31.4063 59.9717 32.8496 59.6006 34.5464 60.0488 cv
37.249 60.7637 42.2183 64.4111 48.1206 69.9678 cv
48.1099 69.9619 48.0996 69.957 48.0889 69.9512 cv
41.8892 66.7637 37.4102 64.457 32.0942 65.3223 cv
31.8218 65.3662 31.6367 65.623 31.6807 65.8955 cv
31.7251 66.167 31.9775 66.3584 32.2544 66.3086 cv
33.1411 66.165 34.0005 66.1191 34.8501 66.1504 cv
33.5898 67.3594 32.3022 69.2354 31.0322 71.5088 cv
30.396 70.9268 29.918 70.0928 29.7437 69.1748 cv
cp
44.5796 61.7402 mo
45.1167 61.9385 li
44.7739 62.8428 44.4014 63.7969 43.9224 64.8926 cv
40.8428 62.3291 38.2061 60.5166 36.2119 59.6055 cv
38.6729 59.5605 41.8862 60.7451 44.5796 61.7402 cv
cp
46.2144 61.8643 mo
46.4551 61.2256 46.6919 60.5986 46.9575 59.9414 cv
47.5801 60.1533 48.1519 60.3379 48.7002 60.5146 cv
50.3472 61.0459 51.7822 61.5088 53.7495 62.4414 cv
53.4082 63.8496 51.9951 67.5752 51.1196 69.8848 cv
50.9561 70.3164 50.8091 70.7051 50.6816 71.043 cv
48.5737 68.9834 46.5728 67.1455 44.7202 65.5654 cv
45.3486 64.1504 45.7915 62.9854 46.2144 61.8643 cv
cp
54.2124 64.3506 mo
54.5415 63.3721 54.7598 62.6221 54.8101 62.2207 cv
54.8364 62.0078 54.7251 61.8027 54.5327 61.709 cv
52.3208 60.6318 50.7852 60.1367 49.0073 59.5625 cv
48.3364 59.3467 47.6304 59.1182 46.8384 58.8428 cv
46.5884 58.7578 46.3145 58.8779 46.2129 59.123 cv
45.9414 59.7744 45.7051 60.3887 45.4722 61.0039 cv
44.9268 60.8027 li
41.2222 59.4326 37.0273 57.8857 34.1772 58.9551 cv
32.3511 58.6553 30.7388 59.1953 29.7866 60.4717 cv
28.791 61.8076 28.7222 63.6689 29.5859 65.293 cv
27.8931 67.9326 28.7168 70.9365 30.5342 72.4189 cv
25.772 81.3613 21.3628 95.4844 19.8198 100.673 cv
19.7563 100.888 19.8428 101.118 20.0313 101.237 cv
25.2964 104.579 37.8052 106.983 45.2305 106.983 cv
47.3403 106.983 49.0396 106.789 50.0459 106.367 cv
50.1919 106.306 50.3003 106.18 50.3384 106.025 cv
52.5386 97.0557 55.4019 76.75 55.0059 71.002 cv
55.981 70.4189 56.6895 69.6494 56.8662 68.5879 cv
57.2295 66.4053 55.23 64.7998 54.2124 64.3506 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
83.0493 19.8154 mo
88.9292 25.9453 86.2993 35.3154 83.0493 38.8154 cv
82.7896 38.7852 li
83.0195 36.6055 83.1792 34.7354 83.2993 33.4453 cv
82.9692 31.6055 81.7192 29.3154 79.7192 27.6455 cv
79.6392 27.5752 li
73.8994 33.7959 59.2192 37.5459 53.2192 36.3154 cv
53.6094 34.9258 54.2495 33.7158 55.0493 32.6855 cv
53.0493 33.8652 47.3892 35.6152 41.7095 36.1855 cv
41.7192 36.3154 li
40.0493 41.8154 36.2993 45.0654 33.2192 47.6455 cv
31.5493 42.8154 28.3794 40.6455 25.0493 41.6455 cv
22.6494 42.3652 20.5591 44.8457 20.5791 48.0557 cv
20.4292 48.0654 li
17.7993 46.1855 14.9292 43.6855 12.5493 39.4854 cv
14.1694 38.1855 17.1694 36.9453 20.0493 36.3154 cv
17.4292 34.0654 13.7993 30.5654 11.7993 27.0654 cv
14.1694 24.4453 19.7993 21.1855 26.2993 19.1855 cv
23.4292 18.0654 19.7993 15.6855 17.7993 13.4453 cv
20.5493 11.3154 26.3794 8.81543 33.5493 8.81543 cv
32.0493 7.64551 29.7593 4.85547 28.4292 2.31543 cv
38.0093 -.764648 55.1694 .31543 65.5493 3.81543 cv
76.8491 7.625 83.5493 14.4453 83.0493 19.8154 cv
cp
.373144 .782101 .665248 .350225 cmyk
f
82.7896 38.7852 mo
82.0693 45.5957 80.6792 55.4053 77.7192 59.9854 cv
73.8994 65.875 67.0093 68.4756 62.2192 68.6455 cv
57.5493 68.8154 42.3794 67.4854 32.8794 56.4854 cv
30.2993 58.3154 24.4292 57.1855 21.6694 52.0654 cv
20.9194 50.6553 20.5894 49.3057 20.5791 48.0557 cv
20.5591 44.8457 22.6494 42.3652 25.0493 41.6455 cv
28.3794 40.6455 31.5493 42.8154 33.2192 47.6455 cv
36.2993 45.0654 40.0493 41.8154 41.7192 36.3154 cv
41.7095 36.1855 li
47.3892 35.6152 53.0493 33.8652 55.0493 32.6855 cv
54.2495 33.7158 53.6094 34.9258 53.2192 36.3154 cv
59.2192 37.5459 73.8994 33.7959 79.6392 27.5752 cv
79.7192 27.6455 li
81.7192 29.3154 82.9692 31.6055 83.2993 33.4453 cv
83.1792 34.7354 83.0195 36.6055 82.7896 38.7852 cv
cp
0 .167361 .439734 0 cmyk
f
60.645 48.458 mo
60.3062 51.0938 58.4487 53.0273 56.498 52.7764 cv
54.5469 52.5254 53.2393 50.1846 53.5781 47.5479 cv
53.9175 44.9121 55.7749 42.9785 57.7261 43.2295 cv
59.2178 45.4727 59.3804 45.6357 60.6064 46.5645 cv
60.7119 47.1582 60.73 47.7988 60.645 48.458 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
57.9009 47.0771 mo
57.5151 48.1514 56.5571 48.791 55.7622 48.5049 cv
54.9668 48.2197 54.6338 47.1162 55.02 46.041 cv
55.4067 44.9678 56.3643 44.3281 57.1597 44.6143 cv
57.9546 44.8984 58.2876 46.002 57.9009 47.0771 cv
cp
0 0 0 0 cmyk
f
79.918 48.4365 mo
79.8022 51.0918 78.4204 53.1875 76.833 53.1191 cv
75.2451 53.0498 74.0508 50.8389 74.1665 48.1846 cv
74.187 47.7217 74.2456 47.2754 74.3374 46.8545 cv
75.8823 45.2295 75.8013 45.3105 77.2524 43.502 cv
78.8398 43.5713 80.0342 45.7803 79.918 48.4365 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
77.6216 48.1152 mo
77.5796 49.0791 76.9829 49.8359 76.2886 49.8066 cv
75.5942 49.7764 75.0645 48.9688 75.1064 48.0049 cv
75.1489 47.041 75.7466 46.2842 76.4409 46.3145 cv
77.1348 46.3447 77.6641 47.1514 77.6216 48.1152 cv
cp
0 0 0 0 cmyk
f
75.7192 10.875 mo
78.5591 13.0752 80.0195 15.2256 80.7295 17.0059 cv
76.0293 22.8857 54.4292 17.915 43.6792 16.6055 cv
34.3892 15.4756 28.1592 16.3555 24.3394 18.2852 cv
23.3892 17.7959 22.4194 17.2158 21.4995 16.585 cv
34.1592 8.5752 62.5591 13.2754 69.8892 12.7852 cv
73.1992 12.5654 74.9595 11.8457 75.7192 10.875 cv
cp
.341833 .684718 .553277 .151247 cmyk
f
83.0493 19.8154 mo
83.1992 18.2051 82.6992 16.4551 81.6191 14.7051 cv
80.4595 12.8057 78.6094 10.8955 76.1694 9.125 cv
73.3594 7.08496 69.7793 5.24512 65.5493 3.81543 cv
55.9692 .584961 40.6094 -.584961 30.7695 1.67578 cv
41.7393 .655273 59.8794 2.39551 70.0591 7.40527 cv
72.3892 8.5459 74.2393 9.71582 75.7192 10.875 cv
78.5591 13.0752 80.0195 15.2256 80.7295 17.0059 cv
81.3394 18.5352 81.4092 19.7959 81.3491 20.6055 cv
84.5693 23.3252 86.9795 29.2158 83.6392 38.1055 cv
86.5894 34.1758 88.5693 25.5654 83.0493 19.8154 cv
cp
0 0 0 0 cmyk
f
79.8193 27.7451 mo
73.8594 39.0156 56.6592 40.8057 49.5493 40.0654 cv
49.7993 38.8154 50.0493 37.6855 50.7993 36.4453 cv
48.6694 37.7559 44.1294 39.0654 40.3394 39.6357 cv
40.8892 38.625 41.3491 37.5254 41.7192 36.3154 cv
41.7095 36.1855 li
47.3892 35.6152 53.0493 33.8652 55.0493 32.6855 cv
54.2495 33.7158 53.6094 34.9258 53.2192 36.3154 cv
59.2192 37.5459 73.8994 33.7959 79.6392 27.5752 cv
79.7192 27.6455 li
79.7593 27.6758 79.7896 27.7051 79.8193 27.7451 cv
cp
.0797436 .400244 .584497 0 cmyk
f
82.7896 38.7852 mo
82.0693 45.5957 80.6792 55.4053 77.7192 59.9854 cv
73.8994 65.875 67.0093 68.4756 62.2192 68.6455 cv
61.6392 68.665 60.8892 68.665 59.9995 68.6152 cv
65.3491 67.7852 71.2295 65.5459 75.9595 60.0059 cv
79.4092 55.9756 80.7295 46.4453 81.9194 30.1455 cv
82.6494 31.2656 83.1191 32.4258 83.2993 33.4453 cv
83.1792 34.7354 83.0195 36.6055 82.7896 38.7852 cv
cp
0 0 0 0 cmyk
f
25.2158 46.8984 mo
23.4302 48.2178 23.7969 51.4443 26.7158 53.0654 cv
28.9658 54.3154 31.1489 53.4287 30.5493 50.5654 cv
29.7993 46.9824 27.1328 45.4824 25.2158 46.8984 cv
cp
.0797436 .400244 .584497 0 cmyk
f
67.7993 54.9404 mo
68.603 53.9355 70.0493 53.9404 69.7993 54.9404 cv
69.5493 55.9404 67.2993 55.5654 67.7993 54.9404 cv
cp
f
83.791 33.3506 mo
83.4214 31.3164 82.1064 29.126 80.3354 27.5361 cv
80.6987 27.1162 81.0303 26.6875 81.3062 26.248 cv
81.4531 26.0146 81.3823 25.7061 81.1489 25.5586 cv
80.9126 25.4111 80.606 25.4824 80.4595 25.7168 cv
76.2495 32.4209 60.7705 36.9307 53.8618 35.9209 cv
55.106 32.2813 58.2891 29.9473 60.7251 29.0332 cv
60.9834 28.9365 61.1143 28.6484 61.0176 28.3896 cv
60.9204 28.1318 60.6328 27.999 60.3735 28.0977 cv
58.4756 28.8096 56.3203 30.2207 54.7114 32.3047 cv
51.7646 33.9854 42.3315 36.5 35.5347 35.7285 cv
36.9375 31.6416 41.8765 26.5156 45.7017 25.292 cv
45.9648 25.207 46.1099 24.9258 46.0254 24.6631 cv
45.9409 24.4014 45.6621 24.2568 45.397 24.3389 cv
41.0605 25.7266 35.6138 31.5117 34.3999 36.0186 cv
34.3628 36.1563 34.3867 36.3037 34.4648 36.4229 cv
34.5435 36.543 34.6694 36.623 34.811 36.6436 cv
35.877 36.7979 37.0161 36.8682 38.1934 36.8682 cv
39.1211 36.8682 40.0728 36.8213 41.0298 36.7422 cv
39.3887 41.5508 36.0835 44.5781 33.4395 46.8086 cv
31.6514 42.2646 28.4258 40.1143 24.9058 41.1699 cv
23.0366 41.7305 21.4429 43.2158 20.6426 45.1436 cv
20.3652 45.8115 20.2041 46.5127 20.1328 47.2305 cv
17.9805 45.6348 15.3931 43.3496 13.2036 39.6172 cv
14.8071 38.4824 17.5269 37.376 20.1558 36.8037 cv
20.3408 36.7637 20.4878 36.6221 20.5342 36.4375 cv
20.5806 36.2539 20.519 36.0596 20.3745 35.9355 cv
18.2915 34.1504 14.5449 30.6768 12.4199 27.1357 cv
14.6519 24.8506 19.7402 21.7314 26.4463 19.668 cv
26.6494 19.6055 26.791 19.4219 26.7988 19.209 cv
26.8066 18.9961 26.6797 18.8027 26.4814 18.7246 cv
23.7222 17.6445 20.4814 15.5039 18.5469 13.5107 cv
21.3931 11.5059 26.834 9.31543 33.5493 9.31543 cv
33.7627 9.31543 33.9531 9.17969 34.0225 8.97754 cv
34.0918 8.77539 34.0249 8.55176 33.8564 8.4209 cv
32.5967 7.44043 30.522 5.01172 29.1567 2.6123 cv
39.145 -.341797 55.8022 1.05566 65.3896 4.28906 cv
77.2305 8.2832 82.9858 15.0996 82.5513 19.7695 cv
82.5381 19.9141 82.5879 20.0566 82.6885 20.1611 cv
87.8911 25.585 86.0796 33.7227 83.4165 37.541 cv
83.5278 36.4189 83.6221 35.3984 83.6992 34.5527 cv
83.7974 33.4873 li
83.8013 33.4414 83.7993 33.3955 83.791 33.3506 cv
cp
77.2969 59.709 mo
73.6753 65.2949 67.104 67.9727 62.1982 68.1484 cv
55.9604 68.3701 41.895 66.1523 33.2612 56.1543 cv
33.0933 55.9609 32.8042 55.9238 32.5933 56.0742 cv
31.5591 56.8076 29.9087 57.0049 28.1777 56.5977 cv
25.6304 56 23.4204 54.2617 22.1147 51.8291 cv
20.9644 49.6846 20.7695 47.4463 21.5664 45.5273 cv
22.2524 43.874 23.6084 42.6025 25.1929 42.127 cv
28.3179 41.1953 31.2114 43.3682 32.7437 47.8115 cv
32.7974 47.9668 32.9238 48.0859 33.0825 48.1299 cv
33.2388 48.1748 33.4106 48.1377 33.5376 48.0313 cv
36.4204 45.6162 40.3535 42.3135 42.1348 36.6387 cv
46.6025 36.1523 51.0371 34.9688 53.6934 33.8848 cv
53.3076 34.5967 52.9673 35.3496 52.7344 36.1807 cv
52.6968 36.3145 52.7168 36.457 52.7891 36.5762 cv
52.8613 36.6943 52.9795 36.7773 53.1152 36.8057 cv
53.9214 36.9707 54.8662 37.0498 55.9131 37.0498 cv
62.8931 37.0498 74.394 33.5068 79.6479 28.2637 cv
81.5396 29.9482 82.5151 32.0186 82.7949 33.4639 cv
82.7031 34.4619 li
82.5444 36.2051 82.3198 38.6484 81.9917 41.3584 cv
81.707 40.7725 81.2891 40.5527 80.96 40.4951 cv
79.498 40.251 77.5552 42.291 75.0776 45.4443 cv
74.457 46.2344 74.0449 46.3936 73.9121 46.3564 cv
73.7817 46.3271 73.5874 46.0518 73.4688 45.5186 cv
73.3965 45.1943 73.0771 44.9902 72.7524 45.0625 cv
72.4292 45.1348 72.2251 45.4551 72.2969 45.7783 cv
72.5762 47.0332 73.1846 47.4219 73.646 47.5264 cv
73.7476 47.5498 73.8501 47.5615 73.9541 47.5615 cv
74.6089 47.5615 75.3027 47.1006 76.021 46.1865 cv
79.2256 42.1055 80.3652 41.6084 80.7544 41.6777 cv
80.8618 41.6963 80.9419 41.8906 80.98 42.0049 cv
81.0854 42.3203 81.4253 42.4893 81.7393 42.3848 cv
81.7905 42.3682 81.8306 42.3359 81.8735 42.3076 cv
81.0762 48.5674 79.7163 55.9766 77.2969 59.709 cv
cp
83.5645 19.6328 mo
83.918 13.6943 76.6294 7.02539 65.709 3.3418 cv
55.7832 -.00585938 38.3711 -1.41016 28.271 1.83984 cv
28.1309 1.88477 28.0176 1.98926 27.9614 2.12598 cv
27.9058 2.2627 27.9131 2.41699 27.9814 2.54785 cv
29.1221 4.72266 30.8672 6.95215 32.27 8.34082 cv
25.5327 8.61426 20.1509 10.9912 17.4937 13.0449 cv
17.3838 13.1299 17.3145 13.2559 17.3013 13.3936 cv
17.2886 13.5322 17.3335 13.6689 17.4258 13.7725 cv
19.1294 15.6895 22.1143 17.8096 24.8853 19.1221 cv
19.166 21.0576 13.8647 24.0371 11.4287 26.7295 cv
11.2837 26.8906 11.2578 27.126 11.3652 27.3135 cv
13.3022 30.7031 16.7212 34.0439 18.9893 36.0547 cv
16.3091 36.7529 13.7324 37.9033 12.2383 39.0908 cv
12.0459 39.2441 11.9932 39.5137 12.1138 39.7285 cv
14.6318 44.1885 17.7026 46.7324 20.105 48.4512 cv
20.1792 49.7256 20.5518 51.0303 21.2339 52.3018 cv
22.6748 54.9873 25.1226 56.9082 27.9492 57.5713 cv
29.7598 57.998 31.5293 57.8301 32.7871 57.1309 cv
42.9106 68.5342 58.3896 69.1563 61.645 69.1563 cv
61.9653 69.1563 62.167 69.1504 62.2344 69.1484 cv
67.3989 68.9629 74.3188 66.1406 78.1357 60.2539 cv
81.0898 55.6973 82.5029 46.0723 83.2363 39.2754 cv
83.3022 39.249 83.3638 39.2109 83.4155 39.1553 cv
86.7202 35.5967 89.5483 26.0811 83.5645 19.6328 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
66.7168 59.3438 mo
60.916 61.3809 54.7568 58.8623 53.1914 56.1211 cv
53.2822 56.1152 53.3643 56.1182 53.4277 56.1338 cv
53.6948 56.1973 53.9673 56.0381 54.0342 55.7695 cv
54.1016 55.502 53.9385 55.2305 53.6709 55.1631 cv
53.1006 55.0215 52.3057 55.2148 51.7788 55.627 cv
51.416 55.9092 51.2163 56.2725 51.2163 56.6484 cv
51.2163 56.9248 51.4399 57.1484 51.7163 57.1484 cv
51.9927 57.1484 52.2163 56.9248 52.2163 56.6484 cv
52.2163 56.623 52.2368 56.583 52.2715 56.5371 cv
53.6567 59.1055 57.8086 61.0762 62.2983 61.0762 cv
63.876 61.0762 65.4951 60.833 67.0483 60.2871 cv
67.3091 60.1953 67.4463 59.9102 67.3545 59.6494 cv
67.2632 59.3896 66.9795 59.252 66.7168 59.3438 cv
cp
f
26.7266 45.8682 mo
26.6924 45.8662 26.6582 45.8662 26.6245 45.8662 cv
25.2798 45.8662 24.1816 46.666 23.9351 47.8379 cv
23.8779 48.1074 24.0513 48.373 24.3213 48.4297 cv
24.5903 48.4922 24.8569 48.3145 24.9136 48.043 cv
25.0649 47.3242 25.8003 46.8125 26.6963 46.8672 cv
28.0073 46.9063 29.7056 48.0811 30.1797 51.2637 cv
30.2168 51.5127 30.4302 51.6904 30.6738 51.6904 cv
30.6982 51.6904 30.7231 51.6885 30.748 51.6846 cv
31.021 51.6445 31.2095 51.3896 31.1689 51.1172 cv
30.604 47.3232 28.4224 45.918 26.7266 45.8682 cv
cp
f
57.4194 44.3633 mo
59.7051 47.1455 61 48.2051 62.1348 48.2051 cv
62.165 48.2051 62.1953 48.2041 62.2256 48.2031 cv
63.189 48.1553 63.7954 47.3613 64.3818 46.4814 cv
64.5659 46.2061 64.4912 45.833 64.2158 45.6494 cv
63.9395 45.4658 63.5674 45.541 63.3838 45.8154 cv
62.9033 46.5361 62.5317 46.9863 62.1655 47.0049 cv
61.1543 47.0137 59.0479 44.4551 58.3462 43.6016 cv
54.3892 38.7852 49.7793 39.3652 47.0342 41.3271 cv
46.7642 41.5195 46.7021 41.8945 46.8945 42.1641 cv
47.0874 42.4336 47.4624 42.4951 47.7314 42.3037 cv
50.0562 40.6445 53.9878 40.1865 57.4194 44.3633 cv
cp
f
41.0293 36.7451 mo
40.6592 37.8252 40.1992 38.8252 39.6895 39.7354 cv
37.9595 39.9551 36.4292 40.0059 35.4292 39.8154 cv
35.5591 39.125 35.9995 37.9854 36.7393 36.8252 cv
37.2192 36.8555 37.6992 36.8652 38.1895 36.8652 cv
39.1191 36.8652 40.0693 36.8252 41.0293 36.7451 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
12.4194 27.1357 mo
16.0991 28.9756 20.1694 29.5254 23.0493 29.8154 cv
25.0493 27.4453 27.7993 25.0654 32.6694 24.1855 cv
29.7993 26.5654 29.1694 28.5654 28.5493 32.0654 cv
32.8091 26.3057 38.3394 25.1152 44.0791 24.8652 cv
40.0195 26.8555 35.4893 31.9658 34.3994 36.0156 cv
34.3594 36.1553 34.3892 36.3057 34.4692 36.4258 cv
34.5396 36.5459 34.6694 36.625 34.8091 36.6455 cv
35.4292 36.7354 36.0791 36.7959 36.7393 36.8252 cv
35.9995 37.9854 35.5591 39.125 35.4292 39.8154 cv
36.4292 40.0059 37.9595 39.9551 39.6895 39.7354 cv
37.9292 42.875 35.4795 45.0752 33.4395 46.8057 cv
31.6494 42.2656 28.4292 40.1152 24.9092 41.165 cv
23.0396 41.7354 21.4395 43.2158 20.6392 45.1455 cv
20.3691 45.8154 20.1992 46.5156 20.1294 47.2354 cv
17.9795 45.6357 15.3892 43.3457 13.1992 39.6152 cv
14.8091 38.4854 17.5293 37.375 20.1592 36.8057 cv
20.3394 36.7656 20.4893 36.625 20.5293 36.4355 cv
20.5791 36.2559 20.5195 36.0557 20.3794 35.9355 cv
18.2896 34.1455 14.5493 30.6758 12.4194 27.1357 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
42.1318 131.377 mo
42.2314 132.758 42.2515 134.048 41.5718 134.607 cv
40.5918 135.417 39.3418 136.008 37.7617 134.928 cv
36.0317 135.447 30.6914 134.468 29.2817 131.857 cv
27.8716 129.237 29.2617 124.397 31.6318 120.518 cv
31.6714 120.327 li
34.3115 120.897 36.8716 120.777 38.5815 120.178 cv
38.6216 120.277 li
40.6318 121.768 43.7417 123.497 44.2217 125.678 cv
44.7017 127.848 45.1118 131.087 42.6416 131.337 cv
42.1318 131.377 li
cp
0 .167361 .439734 0 cmyk
f
40.1616 86.457 mo
39.8218 89.3174 38.8916 101.207 39.0615 103.317 cv
39.4214 107.978 39.0615 114.487 39.0615 119.987 cv
38.9116 120.058 38.7515 120.117 38.5815 120.178 cv
36.8716 120.777 34.3115 120.897 31.6714 120.327 cv
31.4116 120.277 31.1514 120.218 30.8916 120.147 cv
30.5615 109.817 30.8516 102.207 30.8916 100.147 cv
31.0015 94.3975 31.5015 89.0273 31.9214 85.8477 cv
31.9517 85.6875 li
34.7715 86.2578 37.8218 86.3672 40.1118 86.0371 cv
40.1616 86.457 li
cp
.433509 .775906 .674159 .526574 cmyk
f
37.0117 69.5371 mo
41.9717 68.9375 42.0117 79.6377 41.6216 85.7275 cv
41.1714 85.8574 40.6616 85.957 40.1118 86.0371 cv
37.8218 86.3672 34.7715 86.2578 31.9517 85.6875 cv
31.1318 85.5273 30.3315 85.3271 29.5815 85.0869 cv
30.1318 79.8076 32.5518 70.0771 37.0117 69.5371 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
31.9517 85.6875 mo
34.7715 86.2578 37.8218 86.3672 40.1118 86.0371 cv
40.1616 86.457 li
40.0918 87.0176 40.0015 87.9277 39.9116 89.0371 cv
37.3418 89.9473 34.0518 90.2178 31.5015 89.6777 cv
31.6318 88.1973 31.7817 86.9072 31.9214 85.8477 cv
31.9517 85.6875 li
cp
.498634 .76672 .682032 .673518 cmyk
f
43.6523 130.281 mo
43.415 130.608 43.0693 130.791 42.5952 130.837 cv
42.5923 130.837 42.5898 130.839 42.5869 130.839 cv
42.5859 130.822 42.5845 130.806 42.583 130.788 cv
42.5371 130.234 42.4912 129.682 42.4873 129.175 cv
42.4854 128.898 42.2559 128.668 41.9834 128.679 cv
41.7075 128.681 41.4854 128.906 41.4873 129.183 cv
41.4912 129.713 41.5386 130.291 41.5864 130.87 cv
41.6982 132.224 41.8247 133.758 41.2578 134.221 cv
40.0806 135.186 39.1494 135.27 38.0396 134.512 cv
37.9146 134.428 37.7563 134.401 37.6113 134.446 cv
36.082 134.911 30.9971 133.973 29.7236 131.615 cv
28.5488 129.44 29.4834 125.053 31.9863 120.905 cv
33.0259 121.099 34.0693 121.199 35.062 121.199 cv
36.2993 121.199 37.4541 121.047 38.4268 120.75 cv
38.7744 121.004 39.1484 121.265 39.5371 121.534 cv
41.3384 122.784 43.3799 124.2 43.7295 125.781 cv
44.2236 128.015 44.1978 129.529 43.6523 130.281 cv
cp
31.3633 101.319 mo
31.3916 100.16 li
31.5146 93.5723 32.123 88.2041 32.3701 86.2637 cv
33.9741 86.5518 35.6646 86.7236 37.2998 86.7236 cv
38.1367 86.7236 38.9219 86.6807 39.6445 86.6016 cv
39.2837 89.7861 38.3945 101.21 38.5601 103.355 cv
38.7979 106.44 38.7163 110.416 38.6377 114.261 cv
38.6001 116.093 38.563 117.919 38.5586 119.652 cv
36.7769 120.335 33.9844 120.376 31.3794 119.758 cv
31.1094 111.04 31.2866 104.245 31.3633 101.319 cv
cp
37.0684 70.0371 mo
37.8755 69.9424 38.5366 70.1846 39.1064 70.792 cv
40.8477 72.6494 41.5859 77.9404 41.1416 85.3379 cv
40.1089 85.5908 38.7905 85.7236 37.2998 85.7236 cv
34.8599 85.7236 32.27 85.3652 30.1206 84.7334 cv
30.8208 78.7617 33.3735 70.4863 37.0684 70.0371 cv
cp
44.7061 125.564 mo
44.2715 123.602 42.0591 122.067 40.1074 120.713 cv
39.8838 120.558 39.6836 120.412 39.4712 120.263 cv
39.5254 120.182 39.5581 120.087 39.5581 119.985 cv
39.5581 118.16 39.5977 116.225 39.6377 114.281 cv
39.7168 110.412 39.7988 106.412 39.5571 103.279 cv
39.395 101.177 40.3418 89.1201 40.6685 86.4541 cv
41.0566 86.3838 41.4258 86.3047 41.7568 86.209 cv
41.9595 86.1504 42.1035 85.9707 42.1172 85.7607 cv
42.4814 80.1191 42.3818 72.8232 39.8359 70.1084 cv
39.0498 69.2695 38.0859 68.8984 36.9482 69.0449 cv
31.8032 69.6699 29.5249 80.8018 29.0811 85.0391 cv
29.0562 85.2744 29.2007 85.4951 29.4268 85.5674 cv
30.0439 85.7627 30.7036 85.9326 31.3857 86.082 cv
31.1411 87.9883 30.5166 93.4375 30.3916 100.141 cv
30.3638 101.294 li
30.2856 104.27 30.1035 111.239 30.3921 120.168 cv
30.3989 120.389 30.5503 120.578 30.7642 120.635 cv
30.8281 120.651 30.8926 120.663 30.957 120.679 cv
28.7778 124.412 27.3203 129.271 28.8438 132.09 cv
30.377 134.93 35.6465 135.875 37.667 135.463 cv
38.3193 135.864 38.9238 136.012 39.4639 136.012 cv
40.6504 136.012 41.5225 135.297 41.8911 134.994 cv
42.6611 134.365 42.73 133.146 42.6577 131.835 cv
42.6694 131.834 42.6816 131.834 42.6938 131.833 cv
43.458 131.757 44.0527 131.433 44.4619 130.868 cv
45.1929 129.86 45.2725 128.126 44.7061 125.564 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
178.163 89.0918 mo
178.141 91.2734 178.112 94.9785 176.491 94.917 cv
176.197 94.9023 175.937 94.8184 175.718 94.6602 cv
175.647 94.7832 li
174.718 95.1777 174.259 97.5078 175.268 98.9854 cv
175.083 99.5332 175.146 100.687 175.833 101.546 cv
175.78 101.581 li
173.545 101.511 170.575 100.25 169.794 99.041 cv
170.134 96.6514 169.962 92.668 169.738 91.5693 cv
169.905 91.5342 li
171.265 88.7031 173.606 86.7871 175.06 86.7998 cv
176.362 86.8223 177.827 86.8848 178.116 88.4512 cv
178.155 88.6387 178.171 88.8516 178.163 89.0918 cv
cp
.0797436 .400244 .584497 0 cmyk
f
178.303 88.4121 mo
180.708 88.2305 182.395 88.5732 183.267 89.54 cv
184.019 90.373 184.214 92.1738 183.185 93.1973 cv
184.271 94.3027 184.767 101.108 180.145 102.363 cv
177.829 102.998 176.514 102.42 175.833 101.546 cv
175.146 100.687 175.083 99.5332 175.268 98.9854 cv
174.259 97.5078 174.718 95.1777 175.647 94.7832 cv
175.718 94.6602 li
175.937 94.8184 176.197 94.9023 176.491 94.917 cv
178.112 94.9785 178.141 91.2734 178.163 89.0918 cv
178.171 88.8516 178.155 88.6387 178.116 88.4512 cv
178.303 88.4121 li
cp
f
159.706 66.0918 mo
164.624 65.2012 165.292 75.874 165.271 81.9814 cv
164.843 82.127 164.364 82.2666 163.844 82.376 cv
161.577 82.8398 158.491 82.917 155.618 82.5195 cv
154.792 82.4102 153.974 82.2588 153.206 82.0625 cv
153.452 76.7441 155.294 66.8975 159.706 66.0918 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
163.646 90.6738 mo
165.694 90.7422 167.955 91.1807 169.692 91.3633 cv
169.706 91.4121 169.724 91.4795 169.738 91.5693 cv
169.962 92.668 170.134 96.6514 169.794 99.041 cv
169.776 99.1699 169.757 99.2891 169.737 99.4092 cv
167.39 99.7305 158.232 99.0283 156.841 97.5176 cv
154.688 95.1768 155.359 85.8623 155.597 82.6719 cv
155.618 82.5195 li
158.491 82.917 161.577 82.8398 163.844 82.376 cv
163.874 82.5645 li
163.701 84.9619 163.688 88.5283 163.647 90.5283 cv
163.646 90.6738 li
cp
.498634 .76672 .682032 .673518 cmyk
f
182.831 92.8486 mo
182.638 93.042 182.636 93.3535 182.827 93.5508 cv
183.27 94.002 183.733 96.2656 183.137 98.4629 cv
182.792 99.7285 181.97 101.351 180.015 101.882 cv
180.009 101.884 180.003 101.885 179.997 101.888 cv
178.336 102.333 177.072 102.159 176.343 101.379 cv
175.646 100.636 175.61 99.542 175.745 99.1494 cv
175.797 99 175.774 98.834 175.685 98.7031 cv
175.14 97.9092 175.112 96.8066 175.327 96.0664 cv
175.463 95.5957 175.664 95.3496 175.812 95.2656 cv
176.019 95.3477 176.235 95.4053 176.468 95.416 cv
176.616 95.4209 176.761 95.4043 176.899 95.3672 cv
177.132 95.3037 177.349 95.1816 177.534 95.0029 cv
178.526 94.0566 178.633 91.7002 178.66 89.0957 cv
178.661 89.0244 178.646 88.9678 178.642 88.8984 cv
180.757 88.7773 182.192 89.1006 182.896 89.877 cv
183.444 90.4824 183.698 91.9766 182.831 92.8486 cv
cp
170.316 98.8887 mo
170.592 96.6523 170.493 93.3115 170.292 91.833 cv
170.312 91.8047 170.337 91.7832 170.353 91.751 cv
171.64 89.0752 173.818 87.2881 175.055 87.3047 cv
175.773 87.3125 176.458 87.3398 176.944 87.5811 cv
177.283 87.75 177.671 88.0723 177.659 89.1533 cv
177.644 90.6895 177.613 93.5449 176.845 94.2803 cv
176.74 94.3779 176.635 94.4209 176.505 94.415 cv
176.18 94.4023 175.911 94.2549 175.683 93.958 cv
175.1 93.2012 174.933 91.6797 175.269 90.1748 cv
175.329 89.9043 175.159 89.6377 174.89 89.5771 cv
174.618 89.5186 174.353 89.6875 174.292 89.9561 cv
173.89 91.7646 174.124 93.5742 174.892 94.5684 cv
174.92 94.6064 174.953 94.6338 174.983 94.668 cv
174.72 94.9375 174.503 95.3105 174.366 95.79 cv
174.121 96.6328 174.085 97.9697 174.734 99.0703 cv
174.634 99.5791 174.673 100.306 174.953 101.006 cv
173.034 100.719 170.987 99.7168 170.316 98.8887 cv
cp
157.206 97.1758 mo
155.895 95.7529 155.513 91.0078 156.065 83.0801 cv
158.552 83.376 161.183 83.3418 163.346 82.9688 cv
163.235 84.7803 163.2 87.0762 163.173 88.9531 cv
163.153 90.1592 li
161.646 90.1543 160.265 90.375 159.244 91.0723 cv
159.017 91.2275 158.958 91.5391 159.113 91.7676 cv
159.27 91.9961 159.583 92.0566 159.809 91.8984 cv
161.517 90.7295 164.899 91.21 167.618 91.5967 cv
168.202 91.6787 168.764 91.7598 169.286 91.8203 cv
169.454 92.9199 169.617 96.541 169.312 98.8633 cv
169.302 98.8945 169.293 98.9219 169.288 98.9541 cv
166.421 99.1758 158.314 98.3789 157.206 97.1758 cv
cp
159.794 66.585 mo
160.532 66.4502 161.166 66.6162 161.735 67.0918 cv
163.671 68.7178 164.772 74 164.767 81.6172 cv
161.97 82.4756 157.297 82.4863 153.729 81.668 cv
154.051 76.1016 155.922 67.2949 159.794 66.585 cv
cp
183.636 89.2061 mo
182.692 88.1641 180.991 87.7412 178.456 87.9082 cv
178.255 87.3652 177.912 86.9443 177.389 86.6846 cv
176.714 86.3496 175.904 86.3145 175.065 86.3047 cv
173.384 86.2891 171.097 88.2578 169.7 90.8594 cv
169.103 90.7969 168.446 90.7031 167.759 90.6074 cv
166.582 90.4385 165.345 90.2686 164.153 90.1963 cv
164.173 88.9688 li
164.201 87.0039 164.237 84.5762 164.362 82.752 cv
164.468 82.7266 164.585 82.708 164.688 82.6807 cv
164.95 82.6094 165.2 82.5332 165.434 82.4492 cv
165.632 82.3789 165.765 82.1924 165.767 81.9814 cv
165.796 76.1611 165.233 68.7217 162.377 66.3271 cv
161.578 65.6572 160.649 65.4131 159.615 65.6016 cv
154.514 66.5303 152.897 77.8428 152.71 82.0342 cv
152.698 82.2705 152.856 82.4824 153.087 82.542 cv
153.719 82.7031 154.39 82.8262 155.073 82.9336 cv
154.688 88.3672 154.444 95.6563 156.471 97.8535 cv
158.077 99.5967 167.599 100.212 169.805 99.9053 cv
169.826 99.9014 169.847 99.8984 169.866 99.8926 cv
169.872 99.8916 169.876 99.8848 169.882 99.8838 cv
171.104 100.996 173.579 101.971 175.624 102.074 cv
176.323 102.813 177.692 103.542 180.257 102.853 cv
180.263 102.85 180.27 102.848 180.276 102.848 cv
182.689 102.192 183.688 100.244 184.103 98.7236 cv
184.668 96.6406 184.423 94.3164 183.815 93.2295 cv
184.718 91.9941 184.508 90.167 183.636 89.2061 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
147.447 129.383 mo
147.077 134.003 144.077 135.883 139.447 134.123 cv
135.987 132.813 132.507 130.333 129.798 128.153 cv
129.817 128.123 li
128.457 125.263 129.308 118.933 132.907 117.893 cv
133.527 118.213 134.167 118.503 134.817 118.753 cv
134.957 118.763 li
134.827 121.513 134.707 124.093 134.527 126.333 cv
135.407 128.693 143.917 130.473 147.427 129.293 cv
147.447 129.383 li
cp
0 .167361 .439734 0 cmyk
f
117.817 133.883 mo
114.157 132.603 113.077 114.883 118.817 110.003 cv
119.237 109.843 119.647 109.743 120.048 109.683 cv
120.077 109.883 li
117.277 113.953 115.688 120.893 117.117 127.923 cv
117.357 129.073 117.667 130.233 118.077 131.383 cv
118.427 132.383 124.697 132.883 128.447 131.253 cv
128.697 131.293 li
128.567 132.263 128.257 133.143 127.817 133.753 cv
125.817 134.623 120.697 134.883 117.817 133.883 cv
cp
0 0 0 0 cmyk
f
127.197 126.003 mo
128.567 127.213 128.957 129.423 128.697 131.293 cv
128.447 131.253 li
124.697 132.883 118.427 132.383 118.077 131.383 cv
117.667 130.233 117.357 129.073 117.117 127.923 cv
117.317 127.883 li
118.817 124.753 123.267 123.193 125.147 124.313 cv
125.587 124.633 126.287 125.243 127.197 126.003 cv
cp
f
129.798 128.153 mo
128.817 127.383 127.938 126.633 127.197 126.003 cv
126.287 125.243 125.587 124.633 125.147 124.313 cv
121.447 121.623 122.817 115.123 127.077 113.753 cv
128.647 115.123 130.667 116.723 132.907 117.893 cv
129.308 118.933 128.457 125.263 129.817 128.123 cv
129.798 128.153 li
cp
f
120.077 109.883 mo
120.048 109.683 li
123.267 109.183 125.787 111.583 127.077 113.753 cv
122.817 115.123 121.447 121.623 125.147 124.313 cv
123.267 123.193 118.817 124.753 117.317 127.883 cv
117.117 127.923 li
115.688 120.893 117.277 113.953 120.077 109.883 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
152.978 99.0527 mo
152.947 99.2529 li
152.617 103.083 151.947 109.883 150.817 113.623 cv
150.697 113.833 li
150.197 118.003 149.527 121.673 148.527 128.673 cv
148.267 128.933 147.888 129.143 147.427 129.293 cv
143.917 130.473 135.407 128.693 134.527 126.333 cv
134.707 124.093 134.827 121.513 134.957 118.763 cv
135.308 111.513 135.718 103.123 137.527 96.833 cv
140.888 97.4932 147.237 98.333 152.978 99.0527 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
152.947 99.2529 mo
152.617 103.083 151.947 109.883 150.817 113.623 cv
150.697 113.833 li
150.688 113.953 150.667 114.083 150.647 114.203 cv
148.617 110.063 140.527 107.183 135.767 106.803 cv
136.128 103.233 136.667 99.8027 137.527 96.833 cv
140.888 97.4932 147.237 98.333 152.978 99.0527 cv
152.947 99.2529 li
cp
.498634 .76672 .682032 .673518 cmyk
f
178.867 100.503 mo
181.077 102.883 179.777 107.543 178.947 110.383 cv
178.567 111.713 177.677 114.353 176.837 116.923 cv
176.697 116.883 li
174.317 118.383 168.407 117.753 167.077 115.753 cv
166.968 115.723 li
167.097 115.153 167.237 114.573 167.378 113.983 cv
167.638 112.863 167.907 111.703 168.197 110.503 cv
169.947 103.253 175.117 99.3828 178.867 100.503 cv
cp
.0797436 .400244 .584497 0 cmyk
f
165.197 122.503 mo
167.317 124.383 172.817 124.753 175.017 123.403 cv
175.157 125.393 179.367 125.293 181.897 127.473 cv
177.537 124.893 171.697 126.772 171.617 132.923 cv
171.607 133.193 li
167.817 133.013 164.388 132.593 162.447 132.083 cv
162.287 132.073 li
162.597 128.293 163.688 125.823 164.817 123.003 cv
164.888 122.823 164.968 122.633 165.037 122.443 cv
165.197 122.503 li
cp
.823453 .403418 .425788 .104005 cmyk
f
167.077 115.753 mo
168.407 117.753 174.317 118.383 176.697 116.883 cv
176.837 116.923 li
175.897 119.843 175.017 122.693 175.017 123.403 cv
172.817 124.753 167.317 124.383 165.197 122.503 cv
165.037 122.443 li
165.767 120.483 166.367 118.223 166.968 115.723 cv
167.077 115.753 li
cp
.181369 .0870985 .113436 0 cmyk
f
171.607 133.193 mo
175.817 133.403 180.457 133.283 183.947 132.623 cv
184.087 132.613 li
184.188 133.743 184.048 134.533 183.947 134.923 cv
179.527 135.943 164.867 135.583 162.197 134.253 cv
162.197 133.473 162.228 132.753 162.287 132.073 cv
162.447 132.083 li
164.388 132.593 167.817 133.013 171.607 133.193 cv
cp
f
184.087 132.613 mo
183.947 132.623 li
180.457 133.283 175.817 133.403 171.607 133.193 cv
171.617 132.923 li
171.697 126.772 177.537 124.893 181.897 127.473 cv
182.517 128.013 183.037 128.683 183.367 129.563 cv
183.817 130.753 184.017 131.772 184.087 132.613 cv
cp
f
156.317 99.623 mo
156.077 101.793 155.317 109.503 153.317 113.883 cv
153.298 114.133 li
152.447 114.073 151.697 113.993 151.077 113.883 cv
150.697 113.833 li
150.817 113.623 li
151.947 109.883 152.617 103.083 152.947 99.2529 cv
152.978 99.0527 li
154.128 99.2031 155.257 99.3428 156.337 99.4727 cv
156.317 99.623 li
cp
.498634 .76672 .682032 .673518 cmyk
f
178.867 100.503 mo
175.117 99.3828 169.947 103.253 168.197 110.503 cv
167.907 111.703 167.638 112.863 167.378 113.983 cv
166.947 113.883 li
162.487 114.073 156.968 114.353 153.298 114.133 cv
153.317 113.883 li
155.317 109.503 156.077 101.793 156.317 99.623 cv
156.337 99.4727 li
159.337 99.8525 161.917 100.163 163.447 100.383 cv
168.197 99.5029 176.487 97.6328 178.867 100.503 cv
cp
f
147.447 129.383 mo
147.347 130.613 147.067 131.653 146.607 132.473 cv
143.537 133.653 137.438 132.423 134.867 129.003 cv
134.867 126.873 li
136.697 128.953 144.188 130.383 147.427 129.293 cv
147.447 129.383 li
cp
.0797436 .400244 .584497 0 cmyk
f
183.526 134.5 mo
181.865 134.826 178.915 135.012 175.334 135.012 cv
169.691 135.012 164.437 134.552 162.699 133.923 cv
162.704 133.485 162.726 133.078 162.75 132.673 cv
165.448 133.299 170.369 133.796 175.302 133.796 cv
178.23 133.796 181.146 133.612 183.615 133.185 cv
183.628 133.741 183.582 134.186 183.526 134.5 cv
cp
165.017 123.86 mo
165.286 123.191 li
166.7 124.166 169.048 124.708 171.233 124.708 cv
172.542 124.708 173.771 124.502 174.716 124.095 cv
175.144 124.961 176.256 125.428 177.487 125.868 cv
176.421 125.925 175.39 126.196 174.471 126.708 cv
172.407 127.858 171.233 129.972 171.13 132.669 cv
167.745 132.49 164.698 132.114 162.833 131.663 cv
163.151 128.526 164.024 126.318 165.017 123.86 cv
cp
166.925 113.379 mo
166.247 113.409 li
162.192 113.595 157.39 113.813 153.958 113.659 cv
155.722 109.468 156.474 102.775 156.761 100.2 cv
156.779 100.036 li
156.935 100.056 157.095 100.075 157.249 100.095 cv
159.823 100.414 162.014 100.686 163.379 100.873 cv
163.431 100.879 163.483 100.878 163.538 100.87 cv
164.784 100.635 li
168.603 99.9102 174.015 98.8848 176.943 99.8623 cv
173.417 100.235 169.3 103.805 167.712 110.386 cv
167.474 111.368 167.249 112.327 167.031 113.261 cv
167.021 113.304 167.012 113.343 167.002 113.386 cv
166.976 113.385 166.951 113.374 166.925 113.379 cv
cp
149.14 121.206 mo
148.829 123.226 148.474 125.539 148.062 128.421 cv
146.951 129.303 143.636 129.416 140.188 128.67 cv
137.516 128.091 135.479 127.131 135.039 126.254 cv
135.213 124.086 135.33 121.608 135.454 118.988 cv
135.794 111.788 136.18 103.649 137.888 97.415 cv
141.255 98.0459 147.05 98.8154 152.423 99.4932 cv
151.831 106.209 151.15 110.794 150.343 113.484 cv
150.342 113.489 150.343 113.493 150.342 113.498 cv
150.27 113.573 150.214 113.667 150.2 113.778 cv
149.913 116.173 149.572 118.395 149.14 121.206 cv
cp
144.849 133.675 mo
143.579 134.478 141.772 134.473 139.624 133.66 cv
136.304 132.403 132.925 130.005 130.266 127.892 cv
129.425 126.11 129.536 123.028 130.522 120.863 cv
130.928 119.976 131.664 118.866 132.875 118.436 cv
133.405 118.704 133.929 118.937 134.446 119.139 cv
134.323 121.726 134.206 124.172 134.032 126.297 cv
134.026 126.371 134.036 126.444 134.063 126.514 cv
134.765 128.385 138.767 129.385 139.976 129.647 cv
141.46 129.969 143.075 130.167 144.542 130.167 cv
145.389 130.167 146.181 130.097 146.876 129.95 cv
146.624 131.706 145.932 132.99 144.849 133.675 cv
cp
127.528 125.628 mo
127.519 125.62 127.507 125.617 127.497 125.61 cv
127.403 125.53 127.292 125.438 127.204 125.362 cv
126.443 124.715 125.843 124.204 125.441 123.911 cv
125.44 123.911 li
123.945 122.824 123.251 120.934 123.581 118.852 cv
123.916 116.745 125.24 115.009 126.98 114.33 cv
128.667 115.786 130.26 116.955 131.785 117.843 cv
130.896 118.378 130.155 119.259 129.613 120.448 cv
128.747 122.347 128.497 124.804 128.88 126.77 cv
128.408 126.379 127.974 126.015 127.579 125.68 cv
127.561 125.663 127.546 125.644 127.528 125.628 cv
cp
128.254 130.793 mo
128.252 130.794 128.25 130.793 128.249 130.794 cv
124.61 132.372 119.017 131.771 118.544 131.211 cv
118.188 130.205 117.905 129.196 117.686 128.192 cv
117.714 128.159 117.753 128.137 117.772 128.095 cv
118.649 126.27 120.534 125.147 122.007 124.706 cv
123.178 124.355 124.25 124.368 124.879 124.74 cv
125.251 125.015 125.827 125.503 126.556 126.123 cv
126.657 126.21 126.784 126.315 126.893 126.407 cv
128.015 127.421 128.386 129.192 128.254 130.793 cv
cp
127.492 133.349 mo
125.479 134.146 120.62 134.322 117.986 133.405 cv
117.104 133.099 116.25 131.268 115.757 128.626 cv
114.727 123.094 115.314 113.736 119.079 110.441 cv
119.099 110.435 119.116 110.433 119.136 110.426 cv
116.331 115.169 114.74 123.46 117.601 131.545 cv
117.701 131.827 117.954 132.054 118.374 132.236 cv
119.181 132.588 120.692 132.805 122.41 132.805 cv
124.273 132.805 126.357 132.529 128.068 131.912 cv
127.933 132.463 127.74 132.963 127.492 133.349 cv
cp
126.329 113.521 mo
124.406 114.4 122.966 116.356 122.595 118.694 cv
122.308 120.492 122.688 122.175 123.614 123.464 cv
123.028 123.461 122.39 123.546 121.72 123.748 cv
120.298 124.175 118.54 125.175 117.417 126.758 cv
116.343 120.052 118.041 113.731 120.485 110.16 cv
120.49 110.152 120.491 110.143 120.495 110.134 cv
123.45 109.892 125.507 112.324 126.329 113.521 cv
cp
151.396 113.423 mo
152.179 110.64 152.841 106.119 153.415 99.6182 cv
154.224 99.7197 155.017 99.8174 155.787 99.9131 cv
155.767 100.09 li
155.477 102.693 154.706 109.579 152.899 113.595 cv
152.342 113.552 151.837 113.495 151.396 113.423 cv
cp
178.468 110.236 mo
178.206 111.125 177.722 112.607 177.181 114.264 cv
176.933 115.025 176.696 115.749 176.474 116.438 cv
176.46 116.445 176.444 116.446 176.431 116.455 cv
174.269 117.819 168.75 117.228 167.524 115.519 cv
167.683 114.854 167.841 114.188 168.005 113.488 cv
168.223 112.558 168.446 111.601 168.683 110.62 cv
170.222 104.249 174.387 100.812 177.526 100.812 cv
177.892 100.812 178.249 100.856 178.589 100.945 cv
180.532 103.22 179.142 107.947 178.468 110.236 cv
cp
174.557 123.077 mo
172.528 124.118 167.657 123.859 165.635 122.21 cv
166.232 120.542 166.747 118.695 167.248 116.654 cv
168.481 117.681 170.724 118.209 172.851 118.209 cv
174.026 118.209 175.159 118.045 176.062 117.722 cv
175.247 120.277 174.689 122.161 174.557 123.077 cv
cp
182.896 129.741 mo
183.245 130.671 183.435 131.486 183.531 132.189 cv
180.281 132.76 176.054 132.876 172.128 132.717 cv
172.216 130.377 173.21 128.556 174.958 127.582 cv
176.89 126.503 179.412 126.624 181.573 127.872 cv
182.134 128.359 182.603 128.958 182.896 129.741 cv
cp
183.833 129.39 mo
183.496 128.494 182.977 127.809 182.37 127.248 cv
182.329 127.181 182.277 127.118 182.204 127.075 cv
182.196 127.07 182.187 127.066 182.178 127.062 cv
180.986 126.051 179.476 125.513 178.167 125.05 cv
176.776 124.558 175.575 124.133 175.522 123.398 cv
175.522 122.564 177.093 117.756 178.132 114.574 cv
178.677 112.906 179.163 111.413 179.427 110.52 cv
180.217 107.835 181.683 102.846 179.252 100.19 cv
179.251 100.188 179.251 100.187 179.249 100.186 cv
179.248 100.184 179.245 100.183 179.244 100.181 cv
179.239 100.175 179.235 100.169 179.23 100.163 cv
179.228 100.16 179.224 100.159 179.22 100.157 cv
176.828 97.332 169.764 98.6719 164.599 99.6523 cv
163.435 99.8711 li
162.062 99.6836 159.901 99.416 157.372 99.1025 cv
150.822 98.291 141.853 97.1797 137.628 96.3477 cv
137.374 96.2959 137.122 96.4492 137.05 96.6992 cv
135.274 102.855 134.84 110.869 134.497 118.079 cv
134.099 117.913 133.696 117.733 133.288 117.525 cv
133.219 117.459 133.135 117.412 133.04 117.394 cv
131.292 116.471 129.451 115.165 127.46 113.429 cv
125.739 110.579 122.536 108.075 118.647 109.535 cv
118.593 109.555 118.543 109.584 118.499 109.621 cv
114.198 113.268 113.733 123.227 114.774 128.81 cv
115.112 130.622 115.937 133.751 117.658 134.351 cv
118.993 134.814 120.804 135.019 122.583 135.019 cv
124.749 135.019 126.868 134.716 128.022 134.211 cv
128.106 134.175 128.177 134.116 128.229 134.042 cv
129.143 132.757 129.571 130.278 129.014 128.176 cv
131.805 130.438 135.56 133.191 139.271 134.596 cv
140.464 135.047 141.577 135.273 142.585 135.273 cv
143.646 135.273 144.59 135.021 145.384 134.52 cv
146.819 133.611 147.689 131.921 147.92 129.633 cv
148.305 129.471 148.637 129.273 148.884 129.025 cv
148.961 128.949 149.011 128.85 149.026 128.742 cv
149.448 125.781 149.812 123.417 150.128 121.358 cv
150.532 118.733 150.854 116.617 151.131 114.394 cv
152.489 114.627 154.426 114.711 156.614 114.711 cv
159.666 114.711 163.196 114.55 166.293 114.408 cv
166.765 114.387 li
166.003 117.621 165.299 120.466 164.358 122.817 cv
164.089 123.486 li
162.858 126.536 161.697 129.416 161.697 134.253 cv
161.697 134.442 161.804 134.615 161.974 134.7 cv
163.774 135.602 170.162 136.012 175.334 136.012 cv
179.222 136.012 182.402 135.792 184.06 135.408 cv
184.243 135.365 184.387 135.225 184.433 135.042 cv
184.616 134.311 184.924 132.295 183.833 129.39 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
168.785 70.7256 mo
167.715 71.3057 166.354 71.665 165.185 71.9355 cv
165.655 70.6357 167.024 67.1553 167.885 64.6553 cv
168.104 64.7354 li
168.795 64.9053 171.024 66.4453 170.675 68.5059 cv
170.515 69.4854 169.774 70.1953 168.785 70.7256 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
158.476 65.5654 mo
158.375 65.6758 li
154.465 62.3652 151.125 60.1357 148.976 59.5654 cv
148.845 59.5254 148.715 59.5059 148.595 59.4756 cv
148.604 59.4453 li
151.476 58.3154 156.104 60.1855 159.854 61.5654 cv
160.065 61.6455 li
159.625 62.835 159.165 64.0459 158.476 65.5654 cv
cp
.826932 .410346 .420874 .105837 cmyk
f
148.976 59.5654 mo
151.125 60.1357 154.465 62.3652 158.375 65.6758 cv
160.515 67.4756 162.815 69.5957 165.185 71.9355 cv
158.915 68.7852 154.595 66.1953 150.135 65.7256 cv
150.104 65.9854 li
148.635 67.1357 147.065 69.3457 145.485 72.2559 cv
145.354 72.1855 li
143.604 70.9453 142.604 67.9453 144.476 65.3154 cv
142.655 62.3154 144.604 58.6758 148.595 59.4756 cv
148.715 59.5059 148.845 59.5254 148.976 59.5654 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
168.795 70.7354 mo
169.306 75.8857 166.476 96.4453 164.155 105.905 cv
159.604 107.815 141.104 104.945 134.604 100.815 cv
137.545 90.9258 141.565 79.4658 145.485 72.2559 cv
147.065 69.3457 148.635 67.1357 150.104 65.9854 cv
150.135 65.7256 li
154.595 66.1953 158.915 68.7852 165.185 71.9355 cv
166.354 71.665 167.715 71.3057 168.785 70.7256 cv
168.795 70.7354 li
cp
.74789 .241123 .31931 .00552377 cmyk
f
168.065 82.4258 mo
167.755 85.1357 167.364 88.0557 166.935 90.9551 cv
159.315 92.0459 146.364 88.4756 140.146 84.2656 cv
141.215 81.4756 142.315 78.8154 143.415 76.415 cv
148.835 79.165 161.125 83.3457 168.065 82.4258 cv
cp
0 0 0 0 cmyk
f
168.614 62.1553 mo
168.565 62.585 168.274 63.5156 167.885 64.6553 cv
167.024 67.1553 165.655 70.6357 165.185 71.9355 cv
162.815 69.5957 160.515 67.4756 158.375 65.6758 cv
158.476 65.5654 li
159.165 64.0459 159.625 62.835 160.065 61.6455 cv
160.354 60.875 160.646 60.125 160.976 59.3154 cv
163.854 60.3154 165.604 60.6855 168.614 62.1553 cv
cp
.0797436 .400244 .584497 0 cmyk
f
170.186 68.4238 mo
169.94 69.8984 167.961 70.7021 165.987 71.2256 cv
166.099 70.9297 166.225 70.5977 166.36 70.2393 cv
167.042 68.4395 167.692 66.7109 168.191 65.2969 cv
168.894 65.6348 170.443 66.876 170.186 68.4238 cv
cp
163.734 105.532 mo
159.147 107.117 141.77 104.487 135.194 100.59 cv
137.384 93.2715 144.419 71.0547 150.413 66.377 cv
150.45 66.3467 150.477 66.3086 150.503 66.2705 cv
153.957 66.7451 157.386 68.5 161.938 70.8408 cv
162.897 71.334 163.902 71.8516 164.964 72.3848 cv
164.968 72.3867 164.974 72.3867 164.978 72.3887 cv
164.993 72.3965 165.011 72.3975 165.027 72.4033 cv
165.071 72.418 165.116 72.4297 165.163 72.4316 cv
165.171 72.4326 165.18 72.4375 165.188 72.4375 cv
165.226 72.4375 165.264 72.4336 165.301 72.4248 cv
166.347 72.1836 167.407 71.8926 168.337 71.4951 cv
168.577 77.5928 165.862 96.7051 163.734 105.532 cv
cp
144.05 69.1748 mo
143.886 68.3115 143.897 66.9912 144.887 65.6064 cv
145.003 65.4434 145.011 65.2256 144.907 65.0547 cv
144.091 63.7188 144.085 62.1543 144.894 61.0693 cv
145.712 59.9717 147.155 59.6006 148.853 60.0488 cv
151.555 60.7637 156.524 64.4111 162.427 69.9678 cv
162.415 69.9619 162.405 69.957 162.395 69.9512 cv
156.194 66.7637 151.716 64.457 146.399 65.3223 cv
146.128 65.3662 145.942 65.623 145.986 65.8955 cv
146.03 66.167 146.283 66.3584 146.56 66.3086 cv
147.446 66.165 148.306 66.1191 149.155 66.1504 cv
147.896 67.3594 146.608 69.2354 145.338 71.5088 cv
144.702 70.9268 144.224 70.0928 144.05 69.1748 cv
cp
158.886 61.7402 mo
159.423 61.9385 li
159.079 62.8428 158.707 63.7969 158.228 64.8926 cv
155.148 62.3291 152.512 60.5166 150.518 59.6055 cv
152.979 59.5605 156.192 60.7451 158.886 61.7402 cv
cp
160.521 61.8643 mo
160.761 61.2256 160.997 60.5986 161.263 59.9414 cv
161.886 60.1533 162.458 60.3379 163.006 60.5146 cv
164.653 61.0459 166.088 61.5088 168.056 62.4414 cv
167.714 63.8496 166.301 67.5752 165.425 69.8848 cv
165.262 70.3164 165.114 70.7051 164.987 71.043 cv
162.88 68.9834 160.878 67.1455 159.026 65.5654 cv
159.654 64.1504 160.097 62.9854 160.521 61.8643 cv
cp
168.519 64.3506 mo
168.847 63.3721 169.065 62.6221 169.116 62.2207 cv
169.142 62.0078 169.03 61.8027 168.839 61.709 cv
166.626 60.6318 165.091 60.1367 163.313 59.5625 cv
162.642 59.3467 161.937 59.1182 161.144 58.8428 cv
160.894 58.7578 160.62 58.8779 160.519 59.123 cv
160.247 59.7744 160.011 60.3887 159.778 61.0039 cv
159.232 60.8027 li
155.528 59.4326 151.333 57.8857 148.483 58.9551 cv
146.657 58.6553 145.044 59.1953 144.093 60.4717 cv
143.097 61.8076 143.028 63.6689 143.892 65.293 cv
142.198 67.9326 143.022 70.9365 144.84 72.4189 cv
140.077 81.3613 135.669 95.4844 134.126 100.673 cv
134.062 100.888 134.148 101.118 134.337 101.237 cv
139.603 104.579 152.11 106.983 159.536 106.983 cv
161.646 106.983 163.345 106.789 164.352 106.367 cv
164.497 106.306 164.606 106.18 164.644 106.025 cv
166.845 97.0557 169.708 76.75 169.312 71.002 cv
170.286 70.4189 170.995 69.6494 171.172 68.5879 cv
171.535 66.4053 169.536 64.7998 168.519 64.3506 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
197.354 19.8154 mo
203.235 25.9453 200.604 35.3154 197.354 38.8154 cv
197.095 38.7852 li
197.325 36.6055 197.485 34.7354 197.604 33.4453 cv
197.274 31.6055 196.024 29.3154 194.024 27.6455 cv
193.944 27.5752 li
188.205 33.7959 173.524 37.5459 167.524 36.3154 cv
167.915 34.9258 168.556 33.7158 169.354 32.6855 cv
167.354 33.8652 161.694 35.6152 156.015 36.1855 cv
156.024 36.3154 li
154.354 41.8154 150.604 45.0654 147.524 47.6455 cv
145.854 42.8154 142.685 40.6455 139.354 41.6455 cv
136.955 42.3652 134.864 44.8457 134.885 48.0557 cv
134.735 48.0654 li
132.104 46.1855 129.235 43.6855 126.854 39.4854 cv
128.476 38.1855 131.476 36.9453 134.354 36.3154 cv
131.735 34.0654 128.104 30.5654 126.104 27.0654 cv
128.476 24.4453 134.104 21.1855 140.604 19.1855 cv
137.735 18.0654 134.104 15.6855 132.104 13.4453 cv
134.854 11.3154 140.685 8.81543 147.854 8.81543 cv
146.354 7.64551 144.065 4.85547 142.735 2.31543 cv
152.315 -.764648 169.476 .31543 179.854 3.81543 cv
191.155 7.625 197.854 14.4453 197.354 19.8154 cv
cp
.373144 .782101 .665248 .350225 cmyk
f
197.095 38.7852 mo
196.375 45.5957 194.985 55.4053 192.024 59.9854 cv
188.205 65.875 181.315 68.4756 176.524 68.6455 cv
171.854 68.8154 156.685 67.4854 147.185 56.4854 cv
144.604 58.3154 138.735 57.1855 135.976 52.0654 cv
135.226 50.6553 134.896 49.3057 134.885 48.0557 cv
134.864 44.8457 136.955 42.3652 139.354 41.6455 cv
142.685 40.6455 145.854 42.8154 147.524 47.6455 cv
150.604 45.0654 154.354 41.8154 156.024 36.3154 cv
156.015 36.1855 li
161.694 35.6152 167.354 33.8652 169.354 32.6855 cv
168.556 33.7158 167.915 34.9258 167.524 36.3154 cv
173.524 37.5459 188.205 33.7959 193.944 27.5752 cv
194.024 27.6455 li
196.024 29.3154 197.274 31.6055 197.604 33.4453 cv
197.485 34.7354 197.325 36.6055 197.095 38.7852 cv
cp
0 .167361 .439734 0 cmyk
f
190.024 10.875 mo
192.864 13.0752 194.325 15.2256 195.035 17.0059 cv
190.335 22.8857 168.735 17.915 157.985 16.6055 cv
148.694 15.4756 142.465 16.3555 138.646 18.2852 cv
137.694 17.7959 136.726 17.2158 135.806 16.585 cv
148.465 8.5752 176.864 13.2754 184.194 12.7852 cv
187.505 12.5654 189.265 11.8457 190.024 10.875 cv
cp
.341833 .684718 .553277 .151247 cmyk
f
197.354 19.8154 mo
197.505 18.2051 197.005 16.4551 195.925 14.7051 cv
194.765 12.8057 192.915 10.8955 190.476 9.125 cv
187.665 7.08496 184.085 5.24512 179.854 3.81543 cv
170.274 .584961 154.915 -.584961 145.075 1.67578 cv
156.045 .655273 174.185 2.39551 184.364 7.40527 cv
186.694 8.5459 188.545 9.71582 190.024 10.875 cv
192.864 13.0752 194.325 15.2256 195.035 17.0059 cv
195.646 18.5352 195.715 19.7959 195.655 20.6055 cv
198.875 23.3252 201.285 29.2158 197.944 38.1055 cv
200.896 34.1758 202.875 25.5654 197.354 19.8154 cv
cp
0 0 0 0 cmyk
f
194.125 27.7451 mo
188.165 39.0156 170.965 40.8057 163.854 40.0654 cv
164.104 38.8154 164.354 37.6855 165.104 36.4453 cv
162.976 37.7559 158.435 39.0654 154.646 39.6357 cv
155.194 38.625 155.655 37.5254 156.024 36.3154 cv
156.015 36.1855 li
161.694 35.6152 167.354 33.8652 169.354 32.6855 cv
168.556 33.7158 167.915 34.9258 167.524 36.3154 cv
173.524 37.5459 188.205 33.7959 193.944 27.5752 cv
194.024 27.6455 li
194.065 27.6758 194.095 27.7051 194.125 27.7451 cv
cp
.0797436 .400244 .584497 0 cmyk
f
197.095 38.7852 mo
196.375 45.5957 194.985 55.4053 192.024 59.9854 cv
188.205 65.875 181.315 68.4756 176.524 68.6455 cv
175.944 68.665 175.194 68.665 174.306 68.6152 cv
179.655 67.7852 185.535 65.5459 190.265 60.0059 cv
193.715 55.9756 195.035 46.4453 196.226 30.1455 cv
196.955 31.2656 197.425 32.4258 197.604 33.4453 cv
197.485 34.7354 197.325 36.6055 197.095 38.7852 cv
cp
0 0 0 0 cmyk
f
139.521 46.8984 mo
137.735 48.2178 138.103 51.4443 141.021 53.0654 cv
143.271 54.3154 145.454 53.4287 144.854 50.5654 cv
144.104 46.9824 141.438 45.4824 139.521 46.8984 cv
cp
.0797436 .400244 .584497 0 cmyk
f
182.104 54.9404 mo
182.909 53.9355 184.354 53.9404 184.104 54.9404 cv
183.854 55.9404 181.604 55.5654 182.104 54.9404 cv
cp
f
198.097 33.3506 mo
197.728 31.3164 196.412 29.126 194.642 27.5361 cv
195.005 27.1162 195.336 26.6875 195.612 26.248 cv
195.759 26.0146 195.688 25.7061 195.454 25.5586 cv
195.218 25.4111 194.911 25.4824 194.765 25.7168 cv
190.556 32.4209 175.076 36.9307 168.167 35.9209 cv
169.411 32.2813 172.595 29.9473 175.03 29.0332 cv
175.289 28.9365 175.42 28.6484 175.323 28.3896 cv
175.226 28.1318 174.938 27.999 174.679 28.0977 cv
172.781 28.8096 170.626 30.2207 169.017 32.3047 cv
166.07 33.9854 156.638 36.5 149.841 35.7285 cv
151.243 31.6416 156.183 26.5156 160.007 25.292 cv
160.271 25.207 160.415 24.9258 160.331 24.6631 cv
160.247 24.4014 159.968 24.2568 159.702 24.3389 cv
155.366 25.7266 149.919 31.5117 148.706 36.0186 cv
148.669 36.1563 148.692 36.3037 148.771 36.4229 cv
148.849 36.543 148.976 36.623 149.116 36.6436 cv
150.183 36.7979 151.321 36.8682 152.499 36.8682 cv
153.427 36.8682 154.378 36.8213 155.335 36.7422 cv
153.694 41.5508 150.39 44.5781 147.745 46.8086 cv
145.957 42.2646 142.731 40.1143 139.212 41.1699 cv
137.343 41.7305 135.749 43.2158 134.948 45.1436 cv
134.671 45.8115 134.51 46.5127 134.438 47.2305 cv
132.286 45.6348 129.698 43.3496 127.509 39.6172 cv
129.112 38.4824 131.833 37.376 134.462 36.8037 cv
134.646 36.7637 134.794 36.6221 134.84 36.4375 cv
134.886 36.2539 134.825 36.0596 134.681 35.9355 cv
132.597 34.1504 128.851 30.6768 126.726 27.1357 cv
128.958 24.8506 134.046 21.7314 140.752 19.668 cv
140.955 19.6055 141.097 19.4219 141.104 19.209 cv
141.112 18.9961 140.985 18.8027 140.787 18.7246 cv
138.028 17.6445 134.787 15.5039 132.853 13.5107 cv
135.698 11.5059 141.14 9.31543 147.854 9.31543 cv
148.068 9.31543 148.259 9.17969 148.328 8.97754 cv
148.397 8.77539 148.331 8.55176 148.162 8.4209 cv
146.902 7.44043 144.827 5.01172 143.462 2.6123 cv
153.45 -.341797 170.108 1.05566 179.695 4.28906 cv
191.536 8.2832 197.292 15.0996 196.856 19.7695 cv
196.844 19.9141 196.894 20.0566 196.994 20.1611 cv
202.196 25.585 200.386 33.7227 197.722 37.541 cv
197.833 36.4189 197.928 35.3984 198.005 34.5527 cv
198.103 33.4873 li
198.106 33.4414 198.104 33.3955 198.097 33.3506 cv
cp
191.603 59.709 mo
187.981 65.2949 181.409 67.9727 176.504 68.1484 cv
170.267 68.3701 156.2 66.1523 147.567 56.1543 cv
147.399 55.9609 147.11 55.9238 146.899 56.0742 cv
145.864 56.8076 144.214 57.0049 142.483 56.5977 cv
139.937 56 137.726 54.2617 136.421 51.8291 cv
135.271 49.6846 135.075 47.4463 135.872 45.5273 cv
136.558 43.874 137.914 42.6025 139.499 42.127 cv
142.624 41.1953 145.517 43.3682 147.05 47.8115 cv
147.103 47.9668 147.229 48.0859 147.388 48.1299 cv
147.544 48.1748 147.716 48.1377 147.843 48.0313 cv
150.726 45.6162 154.659 42.3135 156.44 36.6387 cv
160.908 36.1523 165.343 34.9688 167.999 33.8848 cv
167.613 34.5967 167.272 35.3496 167.04 36.1807 cv
167.003 36.3145 167.022 36.457 167.095 36.5762 cv
167.167 36.6943 167.285 36.7773 167.421 36.8057 cv
168.228 36.9707 169.172 37.0498 170.219 37.0498 cv
177.198 37.0498 188.7 33.5068 193.954 28.2637 cv
195.845 29.9482 196.821 32.0186 197.101 33.4639 cv
197.009 34.4619 li
196.851 36.2051 196.626 38.6484 196.298 41.3584 cv
196.013 40.7725 195.595 40.5527 195.266 40.4951 cv
193.804 40.251 191.86 42.291 189.384 45.4443 cv
188.763 46.2344 188.351 46.3936 188.218 46.3564 cv
188.087 46.3271 187.894 46.0518 187.774 45.5186 cv
187.702 45.1943 187.383 44.9902 187.058 45.0625 cv
186.735 45.1348 186.53 45.4551 186.603 45.7783 cv
186.882 47.0332 187.49 47.4219 187.952 47.5264 cv
188.054 47.5498 188.155 47.5615 188.26 47.5615 cv
188.915 47.5615 189.608 47.1006 190.327 46.1865 cv
193.531 42.1055 194.671 41.6084 195.06 41.6777 cv
195.167 41.6963 195.247 41.8906 195.286 42.0049 cv
195.392 42.3203 195.731 42.4893 196.045 42.3848 cv
196.097 42.3682 196.136 42.3359 196.179 42.3076 cv
195.382 48.5674 194.022 55.9766 191.603 59.709 cv
cp
197.87 19.6328 mo
198.224 13.6943 190.935 7.02539 180.015 3.3418 cv
170.089 -.00585938 152.677 -1.41016 142.577 1.83984 cv
142.437 1.88477 142.323 1.98926 142.267 2.12598 cv
142.212 2.2627 142.219 2.41699 142.287 2.54785 cv
143.428 4.72266 145.173 6.95215 146.575 8.34082 cv
139.839 8.61426 134.456 10.9912 131.8 13.0449 cv
131.689 13.1299 131.62 13.2559 131.606 13.3936 cv
131.595 13.5322 131.64 13.6689 131.731 13.7725 cv
133.435 15.6895 136.42 17.8096 139.19 19.1221 cv
133.472 21.0576 128.171 24.0371 125.734 26.7295 cv
125.589 26.8906 125.563 27.126 125.671 27.3135 cv
127.608 30.7031 131.026 34.0439 133.295 36.0547 cv
130.614 36.7529 128.038 37.9033 126.544 39.0908 cv
126.352 39.2441 126.299 39.5137 126.419 39.7285 cv
128.938 44.1885 132.009 46.7324 134.411 48.4512 cv
134.485 49.7256 134.857 51.0303 135.54 52.3018 cv
136.98 54.9873 139.429 56.9082 142.255 57.5713 cv
144.065 57.998 145.835 57.8301 147.093 57.1309 cv
157.216 68.5342 172.695 69.1563 175.95 69.1563 cv
176.271 69.1563 176.473 69.1504 176.54 69.1484 cv
181.704 68.9629 188.624 66.1406 192.441 60.2539 cv
195.396 55.6973 196.809 46.0723 197.542 39.2754 cv
197.608 39.249 197.669 39.2109 197.722 39.1553 cv
201.026 35.5967 203.854 26.0811 197.87 19.6328 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
181.022 59.3438 mo
175.222 61.3809 169.063 58.8623 167.497 56.1211 cv
167.588 56.1152 167.67 56.1182 167.733 56.1338 cv
168.001 56.1973 168.272 56.0381 168.34 55.7695 cv
168.407 55.502 168.244 55.2305 167.977 55.1631 cv
167.406 55.0215 166.611 55.2148 166.085 55.627 cv
165.722 55.9092 165.522 56.2725 165.522 56.6484 cv
165.522 56.9248 165.745 57.1484 166.022 57.1484 cv
166.298 57.1484 166.522 56.9248 166.522 56.6484 cv
166.522 56.623 166.542 56.583 166.577 56.5371 cv
167.962 59.1055 172.114 61.0762 176.604 61.0762 cv
178.182 61.0762 179.801 60.833 181.354 60.2871 cv
181.614 60.1953 181.752 59.9102 181.66 59.6494 cv
181.569 59.3896 181.285 59.252 181.022 59.3438 cv
cp
f
171.556 52.8213 mo
169.224 52.6182 166.899 51.8545 165.294 50.8311 cv
164.944 50.6084 164.842 50.1445 165.064 49.7949 cv
165.288 49.4453 165.752 49.3447 166.1 49.5654 cv
168.672 51.2051 173.34 52.0566 176.188 50.7129 cv
176.562 50.5361 177.011 50.6953 177.188 51.0703 cv
177.364 51.4443 177.204 51.8926 176.829 52.0684 cv
175.312 52.7852 173.431 52.9844 171.556 52.8213 cv
cp
f
189.214 53.4941 mo
188.101 53.3975 187.034 53.1123 186.365 52.6543 cv
186.024 52.4189 185.937 51.9521 186.171 51.6104 cv
186.405 51.2676 186.872 51.1826 187.214 51.416 cv
188.244 52.123 191.161 52.2588 192.167 51.6455 cv
192.521 51.4326 192.981 51.542 193.197 51.8965 cv
193.413 52.25 193.301 52.7109 192.946 52.9268 cv
192.108 53.4375 190.624 53.6172 189.214 53.4941 cv
cp
f
141.032 45.8682 mo
140.998 45.8662 140.964 45.8662 140.931 45.8662 cv
139.585 45.8662 138.487 46.666 138.241 47.8379 cv
138.184 48.1074 138.356 48.373 138.627 48.4297 cv
138.896 48.4922 139.163 48.3145 139.22 48.043 cv
139.37 47.3242 140.106 46.8125 141.002 46.8672 cv
142.313 46.9063 144.011 48.0811 144.485 51.2637 cv
144.522 51.5127 144.735 51.6904 144.979 51.6904 cv
145.004 51.6904 145.028 51.6885 145.054 51.6846 cv
145.327 51.6445 145.515 51.3896 145.475 51.1172 cv
144.909 47.3232 142.728 45.918 141.032 45.8682 cv
cp
f
171.726 44.3633 mo
174.011 47.1455 175.306 48.2051 176.44 48.2051 cv
176.471 48.2051 176.501 48.2041 176.531 48.2031 cv
177.495 48.1553 178.101 47.3613 178.688 46.4814 cv
178.872 46.2061 178.797 45.833 178.521 45.6494 cv
178.245 45.4658 177.873 45.541 177.689 45.8154 cv
177.209 46.5361 176.837 46.9863 176.472 47.0049 cv
175.46 47.0137 173.354 44.4551 172.651 43.6016 cv
168.694 38.7852 164.085 39.3652 161.34 41.3271 cv
161.069 41.5195 161.008 41.8945 161.2 42.1641 cv
161.394 42.4336 161.769 42.4951 162.037 42.3037 cv
164.362 40.6445 168.294 40.1865 171.726 44.3633 cv
cp
f
155.335 36.7451 mo
154.965 37.8252 154.505 38.8252 153.995 39.7354 cv
152.265 39.9551 150.735 40.0059 149.735 39.8154 cv
149.864 39.125 150.306 37.9854 151.045 36.8252 cv
151.524 36.8555 152.005 36.8652 152.495 36.8652 cv
153.425 36.8652 154.375 36.8252 155.335 36.7451 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
126.726 27.1357 mo
130.405 28.9756 134.476 29.5254 137.354 29.8154 cv
139.354 27.4453 142.104 25.0654 146.976 24.1855 cv
144.104 26.5654 143.476 28.5654 142.854 32.0654 cv
147.114 26.3057 152.646 25.1152 158.385 24.8652 cv
154.325 26.8555 149.795 31.9658 148.705 36.0156 cv
148.665 36.1553 148.694 36.3057 148.774 36.4258 cv
148.845 36.5459 148.976 36.625 149.114 36.6455 cv
149.735 36.7354 150.385 36.7959 151.045 36.8252 cv
150.306 37.9854 149.864 39.125 149.735 39.8154 cv
150.735 40.0059 152.265 39.9551 153.995 39.7354 cv
152.235 42.875 149.785 45.0752 147.745 46.8057 cv
145.955 42.2656 142.735 40.1152 139.215 41.165 cv
137.345 41.7354 135.745 43.2158 134.944 45.1455 cv
134.675 45.8154 134.505 46.5156 134.435 47.2354 cv
132.285 45.6357 129.694 43.3457 127.505 39.6152 cv
129.114 38.4854 131.835 37.375 134.465 36.8057 cv
134.646 36.7656 134.795 36.625 134.835 36.4355 cv
134.885 36.2559 134.825 36.0557 134.685 35.9355 cv
132.595 34.1455 128.854 30.6758 126.726 27.1357 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
156.438 131.377 mo
156.537 132.758 156.558 134.048 155.878 134.607 cv
154.897 135.417 153.647 136.008 152.067 134.928 cv
150.337 135.447 144.997 134.468 143.587 131.857 cv
142.177 129.237 143.567 124.397 145.938 120.518 cv
145.978 120.327 li
148.617 120.897 151.177 120.777 152.888 120.178 cv
152.927 120.277 li
154.938 121.768 158.048 123.497 158.527 125.678 cv
159.007 127.848 159.417 131.087 156.947 131.337 cv
156.438 131.377 li
cp
0 .167361 .439734 0 cmyk
f
154.468 86.457 mo
154.128 89.3174 153.197 101.207 153.367 103.317 cv
153.728 107.978 153.367 114.487 153.367 119.987 cv
153.218 120.058 153.058 120.117 152.888 120.178 cv
151.177 120.777 148.617 120.897 145.978 120.327 cv
145.718 120.277 145.457 120.218 145.197 120.147 cv
144.867 109.817 145.157 102.207 145.197 100.147 cv
145.308 94.3975 145.808 89.0273 146.228 85.8477 cv
146.257 85.6875 li
149.077 86.2578 152.128 86.3672 154.417 86.0371 cv
154.468 86.457 li
cp
.433509 .775906 .674159 .526574 cmyk
f
151.317 69.5371 mo
156.277 68.9375 156.317 79.6377 155.927 85.7275 cv
155.478 85.8574 154.968 85.957 154.417 86.0371 cv
152.128 86.3672 149.077 86.2578 146.257 85.6875 cv
145.438 85.5273 144.638 85.3271 143.888 85.0869 cv
144.438 79.8076 146.857 70.0771 151.317 69.5371 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
146.257 85.6875 mo
149.077 86.2578 152.128 86.3672 154.417 86.0371 cv
154.468 86.457 li
154.397 87.0176 154.308 87.9277 154.218 89.0371 cv
151.647 89.9473 148.357 90.2178 145.808 89.6777 cv
145.938 88.1973 146.087 86.9072 146.228 85.8477 cv
146.257 85.6875 li
cp
.498634 .76672 .682032 .673518 cmyk
f
157.958 130.281 mo
157.721 130.608 157.375 130.791 156.901 130.837 cv
156.897 130.837 156.896 130.839 156.893 130.839 cv
156.892 130.822 156.89 130.806 156.889 130.788 cv
156.843 130.234 156.797 129.682 156.793 129.175 cv
156.791 128.898 156.562 128.668 156.289 128.679 cv
156.013 128.681 155.791 128.906 155.793 129.183 cv
155.797 129.713 155.845 130.291 155.892 130.87 cv
156.004 132.224 156.13 133.758 155.563 134.221 cv
154.386 135.186 153.455 135.27 152.345 134.512 cv
152.22 134.428 152.062 134.401 151.917 134.446 cv
150.388 134.911 145.303 133.973 144.029 131.615 cv
142.854 129.44 143.789 125.053 146.292 120.905 cv
147.331 121.099 148.375 121.199 149.368 121.199 cv
150.604 121.199 151.76 121.047 152.732 120.75 cv
153.08 121.004 153.454 121.265 153.843 121.534 cv
155.644 122.784 157.686 124.2 158.035 125.781 cv
158.529 128.015 158.503 129.529 157.958 130.281 cv
cp
145.669 101.319 mo
145.697 100.16 li
145.82 93.5723 146.429 88.2041 146.676 86.2637 cv
148.28 86.5518 149.97 86.7236 151.605 86.7236 cv
152.442 86.7236 153.228 86.6807 153.95 86.6016 cv
153.589 89.7861 152.7 101.21 152.866 103.355 cv
153.104 106.44 153.022 110.416 152.943 114.261 cv
152.905 116.093 152.868 117.919 152.864 119.652 cv
151.083 120.335 148.29 120.376 145.685 119.758 cv
145.415 111.04 145.593 104.245 145.669 101.319 cv
cp
151.374 70.0371 mo
152.181 69.9424 152.843 70.1846 153.412 70.792 cv
155.153 72.6494 155.892 77.9404 155.447 85.3379 cv
154.415 85.5908 153.097 85.7236 151.605 85.7236 cv
149.165 85.7236 146.575 85.3652 144.427 84.7334 cv
145.126 78.7617 147.679 70.4863 151.374 70.0371 cv
cp
159.012 125.564 mo
158.577 123.602 156.364 122.067 154.413 120.713 cv
154.189 120.558 153.989 120.412 153.776 120.263 cv
153.831 120.182 153.864 120.087 153.864 119.985 cv
153.864 118.16 153.903 116.225 153.943 114.281 cv
154.022 110.412 154.104 106.412 153.862 103.279 cv
153.7 101.177 154.647 89.1201 154.974 86.4541 cv
155.362 86.3838 155.731 86.3047 156.063 86.209 cv
156.265 86.1504 156.409 85.9707 156.423 85.7607 cv
156.787 80.1191 156.688 72.8232 154.142 70.1084 cv
153.355 69.2695 152.392 68.8984 151.254 69.0449 cv
146.108 69.6699 143.831 80.8018 143.387 85.0391 cv
143.362 85.2744 143.507 85.4951 143.732 85.5674 cv
144.35 85.7627 145.009 85.9326 145.691 86.082 cv
145.446 87.9883 144.822 93.4375 144.697 100.141 cv
144.669 101.294 li
144.591 104.27 144.409 111.239 144.698 120.168 cv
144.704 120.389 144.856 120.578 145.069 120.635 cv
145.134 120.651 145.198 120.663 145.263 120.679 cv
143.083 124.412 141.626 129.271 143.149 132.09 cv
144.683 134.93 149.952 135.875 151.973 135.463 cv
152.625 135.864 153.229 136.012 153.77 136.012 cv
154.956 136.012 155.828 135.297 156.196 134.994 cv
156.967 134.365 157.036 133.146 156.964 131.835 cv
156.976 131.834 156.987 131.834 156.999 131.833 cv
157.764 131.757 158.358 131.433 158.768 130.868 cv
159.499 129.86 159.578 128.126 159.012 125.564 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.1
%%For: (WINDOWS) ()
%%Title: (Boy_Crouch.eps)
%%CreationDate: 12/15/2014 11:34 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBlb4`QJcsUkWe!`,OF5%]$@B,HX\3,"i0/(q$>/,m>Zr/"[kZm`tY5DaEG1FrOt(K3l%I\RK-VeJcl]d=d^pM^,o\Np=Wo!
%I;sRVn]PD9cS&p&2L?$Kq(,+]lp^aJfk6rUqq7%bO0*3[EFi%\0Ul]H<5I,\4?$+I\'21WMWr.Bmc=6Cp>Y@mbMC;6j2YbU^:X=<
%jfJ9+F#!Q8o*]rPRJl%1q>'Hfg#@C#ngiKoJ!7WRT:KoP]?Br<X-oAG<11ItS,`0omXbZ4^!qOQEH6MV]);Zthk#;g*kqYFh\<9Y
%_lN1T(%`E9)InhsDu];+nU'lh/=IB#Pf3(K'U:+GH4qSr!cP(e2VIHgs86m6bLsq:bK\Sjmc)!q^io!]%/8u9p;;X"J1&0#TR75V
%cBd4oS*TYrmcr#%"`LTYQsg[.F8#P;XSGD2R9;p:6V!sAVms)K>$f/BlRqM;_tV8(SRq_h++@>O1D7F;6o1?=-unE.f?i^18HeNY
%g\2f82cj4Pp_]oSp7f@;hKupM-B9^*O];.h!rPWJA8Y)*bjp]B!3YrsDK#lerQ!Ub[kDCo^>5;s0*MmObH"]Ws+:&AEp-ID8bJ.r
%kM+1p?(>1$j:'R=4;ZoC::KCKd;o-\I"PAd_[$5,'gHOfJ(\-/Epq;WE@S\mQ'"8l]Bf2E2ns8a5AGi$lgI&S07MXR#BfZ-%YH3=
%/1(Tea&,t?@#[o_$rq</9r#.S9je(WFFc7?"5rG<QY4('?$uGl.<:)F/i`e%jk6V#i?F\Tr.i9I0>1G`0Bk"rrT\-ETtQMNf?Le-
%V'qd^qb!IMe%=r?D_<q\#eHh%Q10^F=ocuX/2pWLW6V]KK":^?D"7B;Xfi"ZdM2_uCr/tJiSUN[g,-eKBo:fF.=Rb`r9\f)\+=IV
%i+2mVK7EDHA+26`en]-0WplIW_J:XrU"cUT0<6S8%,^#N]W>i:ZDPHBRg-WA)SB[q`c'IEA*EXZ)D>3rq'PMdGF<frcfB$7<rG3V
%iHG-SQf5ID04'Cnda@W03%4]_fAN=k09'8R_)LDan1T7-6/c0eMLi`@j.PlpN?-na23&':atVoui+4l)r/91.f3"rW7%Is]1FsDC
%pm5p\dIR@JqqO8^5':208h]-F]F;i:J$CGo800d@-PM8Rn1kuYc8:0.DoONk?i5QZA3@ZBdWqq2^N^WV&c_E41:f/Y\Hhn'`<GP>
%@ZjJ,GEH<pQSItD2EZ:,!-OmF`_Ya*FkZU'rP<8gJ;U*]5e<LVc<oTKnLn4g\;k'0\F@c<(U(XU_X36B\rmnXr!^Se7;#%-`B3?I
%UC8B$/eX^ZL-G?m@F%_]i)/Z[@W["QICr7GccpM5r&t'NkBWaVB(Oe6J@LFnr@f_5e^+!*mCIW"3`BFsFhjBICVX@&h<qL==2(/@
%KsdBZm$!$bDKd5NmV8*]akST-)TNHgi-uo8Z2>jRJ*$\$:R:N`pRcrnp,qLfpRcqmJj6mIr)8pZ\Ld-s9DPQ&rlY3&T>cCH]Dqd2
%[kF(Qjo4ktC;lh$J,Y;kO3i0B6i>.!bFeG@s2Qi@=d.t5AIQp:QGkUTncTe<OtH12?:J(h'F%n5?!Z%CHC<p]28"k=KPt5)?ZN]V
%A%Xoqna[qtMBp($n9]$iDD)F+)rlEs%fU<[GRAO)H4p$4nVcgd`pn6;0R#QRpj"TQ.pKM&bhE"SoF3a2*&tqml)9LdFEYWool"U&
%N;__i95HkbNDEm/blqIOQb39:A&6LBcC:WF*l)h9KK_W0pI=@6QC5-`j!0I.6(Y\.o<!]WU>Zn!LrKoL2_o,a_BdO]#*9k@%5`O4
%_Wcpc*'6r*'(q;ms246\aRX-JI>JirP!X-r)odX+hB"Sm(l'5FFN+>*>[2bpkM8Z.eMlO@."W6?R4okg95G,CFY3L"lt`&/Sl)_k
%E=/D?&U"m-/%U8[>P0;O[o"onKqJth>"+5dY+GaYg25`sY^fK\N?j23FZ7cC!7\'<Q7;aPiT[ut4f@CuR""(40gc3o1Kra#E4\:E
%Yn,#pr\LqgWd"\dT9.VP9_t1hS0.d\VG7JgK8<&*G$YqKIZ:NB!XscB`W&qDQe3s_5.hD;Qs+Fr]eLl_a,3^'S7"(fe*Xg>f_"EV
%03F&WPHoj\&n-Adf\=G'Jc/FC5__SrIM6u6ED[\8!Rnu,gHtlJF>0R@.q#dB9WYg4Fm#HtM6\dGgm2(L\_'^*LB#GS6X3"B16XsY
%)%rbbDBHS\R3SkTGe_VE'p+>;g,A*.N*WIup@1HUf)@![iTW><ZK=dmrt,-ap^+8qSZ)8V_\8AFk@#48"'3c^NK"RUl>(V-5Dq5:
%j-<a>i4MgD:0a9=lAOf<&#0a%Zo")ej[s.?4`%tiVYs<Eo5p:/(g&aICa9uXEEA9HoK@bCh"'BpX\5LL1aHND,_RWEAH2mTq2k(=
%19&!kP*kJq;uES%;2lL=r8C30mAQaC<:/`D>Ye%nQ7opC>)$_U"3kc0cF[j0-0N"]P!jT>F!UCd,iJlu6m*,Ya%f:T%ltdo>"]'+
%YSImN7nluR+s,`o.V4s_6[7ICSn$s"%O\'%FF,(HZdsDlOB`)tWsHI[OrD<RSeVk1d!>%FOZ+#><O6/RKICfah+)Lb1XNJf9Ll[f
%3aNI"O_0S+k!*Wdmh*$5kd*Y7Zpl!E*Ki=`o8m"F9$b:N2T2C&$C:6P@FIP[r28bki\M;.mK!_8>Ysp?R^<BeRur?U5m0`Y91>J2
%:]NX5Q6kR_O7F64Rj!iB$3+".YlcC*TamE?s#%Ze>n;1P2[L1E!1Gka:e77(&/B9Vrco'B`/)cVm#;;%8M*^enfk8P(^*!s7RSuZ
%4A")n_Qe%jnu_VDFbrh,j%W_<gc3]m*$<dsoQ2?Kn/Tl=Go`+2K(VcR'')UgkaMJtr5,_f>FZW-Eb/Tne=mf;RF_0nO.Z+03KDOq
%3m\jT4/tU%_fZj"pOW?e_:)?c\Oqg^aAUN;r.7G"(U+;]09j&T)N=X@e9R/0"NQBHWu51K9\=g=hnX;9SuA&W$54kEg4VQsOJh%l
%f+DM!dGQl',2<.MGlgXd&5":.gHLh\!U+/#C!hH/!6l^mC(QTrN.t-D+W6G\V<`$H+@W^uO,XFj`R*7pT2HVF"M(SM!j2]3`-&nR
%=MnBE+\EEccW06CeWDc2=FrnL=sk?03Gm?k\Kd_+)7T>*Lr##JEsm0Qn-`kM#R#<sj[0$?$\0bn![UXMYD=*Q/-9g]RTX@&$&r#7
%0-o'B!;CSa!mEYf=dX>B#o$WNES'1*RYO>@1HY[LU];c3(_hK*d?9>61kt'pX@^c@!ur^)Ee2QUBd;h.0+rnE$*1(>0EhIgBhkEa
%AC_<s_QMB6@Gk5qj+\3G8&5W=<3h#c+>#2P>[r%1G,mJ6#au&B=SR83(CNoN;R(*c'1H7o,;H9>#>ei5FeMDM^`o,C;jVQ/;2D4]
%JIH.8?,@mS$$%f1B\u>a0!GAj*Cqr:C<a)8SWtS*Ht&gua;S*7$1]haBL5S$rrke(-dDFrW9\k+/#m,W+-fYC*=lums6+W4]d2f"
%6u2/@F\FP+FBq:(Z.gBIC=6:M&_fHLoal,q((*2rOS1@R&5(#)KW)1;^_d8_g%g<sM/\^#,j:Yl;<'dG\mMuo;[i`/9>4Fh&@%To
%fCn%[2nensbW`_[7b0DkM=PlQXuJ,rqEj9PXu:h2592eJ0oki>&_\)5#`35daR)UgYkpi:1JpWk#+cN\s/j*KFVBna-Z1!-6X)#3
%_[ss-[TXKEklE2R+%;Zl4UWgk/IF@V!]_\\%!(\FTag#sZ5aJMeme3P\0!,pp^<u(>(jDBpW8R!:^MP;!9u@KM6*A7/XfnS5nK*p
%Npt5e->QaJ,2Ga9=[c$2eufn6@>U;gN5.P.AXR<h8oTi!%LoM)*.*Blij#[$,e19te#5Z/o0IUu0ja@OBo^UC$H=@;GA15*E[Jn.
%Ut8$qgplJ_hFr/*9O&]+g&GU9JEJS)iOUA/qoms"MD<T`@NdL\Je^$BA5;+bau2fMUF&=YP7sc!M<!;.g`$<#SreI>&bp=e&.Alr
%hRj1&&]#)946\juE'U!I#U@FG=40&P'm>iC.F5u2$Q^p?r,=_*W,&XR;Hk>4@5!kbM\JU/,3/dpJo?]h"V:suG(sHoC2fAKkZQ)k
%%2("NO%OX)Z=iBE[)A*ur8Z8XJ;uWGBO$E,an(D0KSN39aYS&#9"L(V1Js$H's(jf6r?p^$.%0qFB[*%p6A^YOa3iNK-Ps1")uh5
%)prgo;8Z1#&_?a7csp+TB<Yp=Wl5C5-B8>GLAuKA4TR3@ZXLD;?Bj)IR[],iiRmaj0BSbG%p(HH&4t=j^ILidFZ:=:QS;R+c:9lr
%-S,ZNDAUqc_6Xk8T$f=E[!YbR\0@/H4!6gdGH`.p9RO/>$if8Y;R,,p[4AE3GqTL'E[c)E4.!:f<ZlsT:'Z1tem`l,ZB@l:>C#$L
%#)UTt<955g?nLm^4e3b@c\1Hm@0Y)\]Sgd3)^!#JE$c6RBUPO'LR/cfQ3qJ#)2Y:h2Z6&[q>r^(6EXi)M'?t&n\!4">7`-7=A[/A
%?KW'V._4r*<%i`CH9%Dai<FD0EmmUr1SnTJb6`]2/JLCnL!)a187<6&!)USb;<QJ(%.IVh=db,8UC/?0-4R-bFt9MHR#"b1P<N="
%10dtqM;!_Xl%d@1R`Q9RX:d+J78S/;]'$;]%uCHS%ET'jF9&sH>VLsQCpQa`3m(5a,r]8AG,YV%_9"k#_=:efms2cG.nC+^MFXJ1
%NVP)1^7JLDF&**aeCcf+CB[l*EZr]Gi>FfGmArAOOE"+hFG;1&54nos,tchB=MZLl-p19YlcrN38&unje^=ji)<>D>Q(3,1V+K>'
%7dHZ_.t`nM'XjlsJ_#"`ek8n=@]SVOaQ9WRHo56PCr3->c-(dTK(`8*V.^8[mR%GXe?:&0RCk)EnfUS@Sqn1W(\IsB!)+f@/I<mt
%Lq<A'B"Fho&39\oJL*r*FU>EW<GDLXdDuBdn7UEBeq+GGZ5$U6GSho--Nk?MjrAJS'p>[of:66Ag1^RELb)"TI)=-a*7\0^<43o:
%NA9L>RV7/>MK+^L9#*Dm."&Q9(BeJ<0%`q=TRjj(fu,?p1)DJY\ZR_n#j^9%"MP%DVl?r>K1i2ZPt"^nE56IX/eL9S&6>ge0'Al?
%_\*_8@[=dP;HP`s-EWDd$1"ta''G(+PE\D84;QuqZ\7JEg'n>]M:@Mu;\Ojh_^l`<"Vb*%Llcjh%K>Q9W$?*;<l#jsOeo?aMc]sY
%T3RK+6s)s0.96#ZDR.1t6:3cG>?WG!#hC_ib>T.(Bsas7K^`BpS#\-kC68d#Z,9W-"6PNk`I``k`IeOj,V(V7,V79J2\u;;ZJ,"'
%*+9M.On=4,-mAYt#c99,?kcap>VG%r,to\=ZhD8lmPVi-;3=t35mAXDfd7ItO9EbjIC#]-4d_mo9j>8HQ.%.ro4B+dFP`$L4,-cB
%20oh;>r0f.iA`S"=DK&rZt.NO50Wi!0Yo*,FbM/;9XlFV=Shu)5ktkP9dq5XbB>,pW7^1^-0o?Jg\R4?hp'eoBb>L(;5`+fLM2K!
%>``A@?a!IkPhZ/Yn1E]pqq/hS(.A9L7D5gWdRF\J36PYlm./qZ<%Rld5D@;-E\X/R02b,1\cZ3??LYDr?:6$Ajd]<pDNlN*_20rn
%`.Q-7c+Z`SOETRI6%Q,6bfC=s<UHMe(j*EN)\E0@NjHg[#?W^rMJ'ljDA5NMPZZqFDX*[t3VAFmA5\qq.Yb^/Kf*ohD-FPFP\A=i
%/W5>4e[c`PY6'TI$_+%2]].M)BsZXX[WCjAL.7<B&i^_a50(mCN+tmu2o/.+:%;a;$s7%?_%!U?r,L"BcFOY^Jj2Vl`^YIn,hWj_
%iLYm"M_]*>FZfK-[$!<O&_[La"Jht_`/msgYsN3XAGG.J''+THOWg!T5.dg%X.fkDTs:qaIE^2d2br`_g-`2RYJo-4Oi/hZ,TVno
%Lqf\m.4=rHFuC0n)$>-7=ZN24@:O,c+L.l*\NMclJ_1PrIdZ`uK%0uN?<3Z<G(lu1n6bF@]<9ceOiM@]Y[j_&-hd3dKesVZJ>cUM
%s"q<GJ]Sf>5>nS:[3\JQ(h;HP8X=/(L_7RA#/qok371RDQ.Sn?<fYg-.R9!7h-^\P$)q],D:$4oXg58?]8OoF`C^]n&D,V5Mh)(]
%kQ388jF^iT"1Sf-NGKf]fdJ+3>SN8*\!*A@L_Y)rr'#p870b\CltF:XO.<+>8nupZZO`bH;BtoUc-O=r<_&%GD1`s*>TrFHAP*Z"
%8=aWT[Z+*&.8Ggo&fY$+3b]I)d@ofE`Cb-$9$o[7.h5Kh&Pf:LL,#*X-Wdn2Ll!-8mKoX>\XF(%@PqW,&@RSI`.@(DRM!I/[hlV"
%ae;19G?%,^SQ:V5+pJ9gP$'S"afLAJPo:bmSL#LF)u(q*emk$S[2=7nQbo[1J]rOYe7%RmZDoe15pK,1(*)9c^*6TYQs?TM.V!*p
%YnW,cMON\8]rm'&0`I1jgBE.,0ne6"GB9uSJDnbH>U4<q_7_!daoR5'Yr]0NWZ?G_$^<B0#!i#"3L//0)GqGVW3In<"r@_O:8Hip
%c"^'CnhrBtOQV#nb^t-9;JZS"[S?/"<!\S$m2*CALsZU=ASg!6/<AJ``QaTr<YcAGN%"+GSMoI>,A_#P7,Tl6%>$0'\hP@(F:b-I
%aL]_8NKE;&WEB9)&XfF*GSN"`Gm8k^3khtm+aGO%E4;go7`LI!)4`9e,qdemT8)+6_=%[H(S:D"MUdN.)7Rr98SU#DCTYO-f-54`
%!Kn(QHT(Xs]`jlRCCpP1>@!cYp-j8]m,$bt;r#%,>8r(%gn!n_O`0%\qX2o-lMAD>hQf]fYJ8i.%;-KeIId3?n+aNcoag6;nE&8g
%]B^!b>eJlUJ+e/9\pLcSrH,S1JLbBj^\R?cajh36c_\LlHZaa[[@M6]5(%?;;sX&"j`\Z$_X6t-rkHGPA+!]AhsN,S]*>cgFn(O[
%q<imeYcZS`SBh,J\bn.YnK6%8(RrScI::lZH1hdDAcohhXh2/Ac#,1!IK7129ls+q&UQ/"^)H[Cc.0GZid?)mqU)as+'Y<!atZW)
%qYgA^h>,aEpU3B&`kEPJ];t>\`V12(c-,F6mq+fOG39>HI"?\,-Md4iml?bjfSfVJ!+-dbj3?`ar9Tcnc%gLU-[kCVHuC)`E:52+
%3[(Hr4YclW5-0+O@6=bqrV#U;'Q,(ok9.6\rrKGub[/!;I)'L0Ep[/sg<Et,OnOY$M\l94F'Qs*(]G^f?Z&WbJ,t$(1j!dG,^MCR
%Sc5qV`"VX%^=l^H94s13kKj/!q6OaP.^m'#JdCFPoI__:'LSU?O]Ha6iO_'$P+:f&[*K35-$]]5ZIrlo(ROmOR+Jm:2E0+9B%km2
%gR;hT1MLQhbV6du'Oc?U']AXI27N@*00RMI[:B$Gp$5qr`P#G+*O[K8%Nt:cgYKj88'L*LqiA'j0".u0&W?Od0`sl'n@4:31eeei
%;2(KuiE_`c)'L.Ol>]:,()7]*gu1s3&iE`VIkc5(U>EXNQU/i"QpnQa(A2.I=>`qh2e`@l@T,*p;`BVHM/bc'A=5'VAPS+L\ZD-:
%0lA7CY#c2`8*ML-jX[Zh5-0WA\Z2>S.*)oOOj1j\d!-c`0pP.!$3gHAoIc>jb?t&Er0a\3]W4pZ$,-7gXlE@,l3/isgIsb5@\9<S
%fWtbSZ)1DbT<T)0%$[8S"s_$;$=F8g>(M,sAORQ;!B:@AkKa,P'u6Xkp_YD>5Uur(V#\%/,kD;"KVdXEpp0tqEh%IW`;n,'J:%Rj
%:S0iR'e+k=l4+Nl-p.]O==djOC7),D;*ZiiHTB;Y\k&L0FT4"ceHec@7K4`_"^K1$ni[lh:T9>4>0H,.:7mLC#6Ldkm,-#n`V3p6
%2jL;VPO#XSKbj`7$%J9q@!i1jX(uref+ktQ5SmdQS^Asa(Imf-X'/M=GV,s"BQ]65U/t4.U93u9X-+rd=7lDn'itu@iY#Q,kT^I[
%Q":!8PZaE@Bpk2_)&K4q/HF^O!=]_[9UUHTPnl*R[;29pe!Sk=c_$U4<50DFAeGcF(_@<,(8e(VTgAGTImD'"UHH\"38jjl3l:q#
%=FHD9+N`Uo#"6E1$G\b(G*UWmR20<tc-dk3dl<?.b-48U-qmC$PR3*=RNt7[;.gUdP64doi)]Lfi.@%nZ%[be;H5"Q$_Uu83X?f[
%&O9ug-jn<epqZYqZ0!,Q"Zqd,9$3N/[3g,1JdTFG8lU<Z.1?jIQ2ouTgfJAo!3m9SY$q*6(O2Dp5nJcd@OR@q?th>8&W%?jKg7F=
%G[dc2)B]A=_Lbkm:i4*m"cEeO\/)RuA2DC%JoF05bu,Zg,?1:",KM'F;p*r.&O?K#T,(%Q_iC\uE=/K_IXl+Z_T,([eHj/#Li>bG
%%L(E5q)E9fUU*RW,%VZYoO1=UJZ1t2e0#naJEstIFe@^jU=HWD[:<UP,_-326@dG3\k$6P389@sJe`gg*s66;3@l$)$.ftI7jZ@j
%@5uI=c:J2G+a=H;!*BWuY5nD'i1:#2,CoY(n<r6P#hk-N\cM`2"a^8o!PU9SGU3n*UrE:XJ-\>t,7EPO65ea@O=#Vm=Mpo1,dtWn
%?k21hh"_1Yr1prL<af79,QhWA-gDI\0d8%=Qdn?(p6GmjN3DK1`B^C-9'$k&d=!JL8hj.9?\'!aJW^J,FJ&oJaBD<lpsW/fAecGA
%n6:HgJX=;3M^`$gij&TrJOHi%OYe]kgL3YUhP7<-Q>?Ci@7;;5k=Ef0BMh3?Bn6jD5c%L,&k.I3a;JBr&YCb]c:["7a?(0Y8RVK?
%j]fWaiUP8C?CGH@WF;&1TT_nu/)JYV'Qf2='Eflg*<sf`m6)\?CLF7hrN20l^tN^_19^7+9gELp@R(f/BGC98+aRGrbs;->+A0BO
%RLdmi-8?i_B1dOpLC5Q)%<7>q3,Shg"N7A(c\aT#@OMQ0V2Vo?nt#pX&?mhIh$`.<9+oCuKMXDnq%WU,:;!^E$\@'_5k@70!:C'n
%(eP-gQn\Z-U^.s+WS'[FEP<ES4$[&O=*@Vi5%?[@4Hl&$`Kd"1eBVAl1Uk_6UH.?PK/p1-`NutZ1R7G\aUI_;nEd7Db[blt.\2^b
%cX]LS3u>o^_a<NOAg"M.0.l5smL4/k3:tV8]=+qM><"F'$Obq5_D\iAAZ/W:;34RS.-m"sR>P<JLh<mlh?DWP@SQ\f+rZ1Z*MXf1
%UB/*<,#':_>m#>H+`3tuIA=(D7dOn1J0L7l)lRJPBi]WkLS\BKb19HYoI!o%6K0t^f90:9,4:>/.2KgTjKOT#PJn0#a%0B6R;>;/
%\Kn_%JPD8C<a+18V)+3=!IGK1HRof`MI]hRd2""Fi_:^jZFEBp5XIhi\h7#-Te2)4_hG>3<'j5H6AnCC?'/r]U-2.^V'hf[.%>d@
%lX[=?3m!O&N7sK?,*pIRD]=k`.[&!__!5/MKU?;'29BHiXtuf#qLbS&B%e**Ul`I2l:O_M!Itrm(.iJ(1FZ"?J`kKD-.g6,es=A8
%<&_aj(;c2K!1)Y=#S?oP7$]&H_t"c.-13F-Q41@lpdlBCOMp]!pXdM5Ol\%[s$OmSER/"W!R4##^]-dj`&*@1`a9:)C4b42;eRB!
%n/eV).5VX@D@]bF'Uf:X@h2T;'Uf="?k68m:D9jBLNH)NP0bXbCJRJkB-!K7m[RH9e65-iEZn>e!6pP*"T$SD=\;go6*%lV$@]Y[
%8-ip-.2eD@$ES_XlW=a8LcgN(]4/)!aC?K8+IP]0T-s'3>n_(9LqZdgl;!3Sfgo#HQ=ON7_Epli;V]]2="0J&:5)gA@,s&4eIGbn
%,7e!lefk5QEClt14bq+FfQ`L9(nCu?;Yalpi3jrg?_0Jt=f9t"]qK!(d^"Y5Q#*st)[`e[BX-2gb.XY:/'t$f<8ULf@;5=OV%l/C
%U.m;P;H0,p!6kM4dSD`fDYTG`Bnn?=Pq?\ckQf1,9LHD>CadW<-/+aQ1+C<G\M)Qd6r9#aYRik5ZL*N#@4[,O,3("N$=T>J=#i^F
%(7':tZF@+2]+@!CaZV*[KbVVV+Y+pq>cdnu+ZW]@`<%()Y=gFU9g&EVr)u+*Qa<_fad*.^7R]ds(0OsOa[%djeqdI9<f)I9E8*8$
%mofBd\V6grOBP8>C2/lNR+*nu<anKU.>i;S8OcR'$Mh/5K@q#VX;s:/p==sD=gkIOZ)]2qUTR!?Xi4`T&h.3/aeNB:?&KE>&h$DF
%\O`<s-ZuH5l/YR%2HeT6h6@PpF%F^fjik/l)+p9NoNP\>,l*U>J!JZ\Ej8(ogRhZF8o'V_IB+(+LYASD?;/Bh`AT0Qq\bP,;j-jU
%?,6%KjMG,kh`uSpZ'](Qeq:1>0>c0.1$34.q%IMdnOi+M;"&uJ5,hdC[@W+@q5a0J?id8TS9Sb]%uo]'[J1neCNCpGM*cI$&Lei$
%mtC@1,iYYVXT<-Qr=ph5EAZ[ci1F18(_pI3(Qr5-UQ'L=Eq(c\Ij2:`;!dg7?^&s,BQK@V\PFmY$96^frjRr0@d.i:BJHUAcbDR>
%^K"YR5`>LbM#HnbOOW8Rh&la+-)Ma^40d4P/eT[-^pV7\99i%:&l#J*R>[=qm0"PC!oBo(\Isfd,Z]Q98s6`M+%pB6=BJ.7jiN:^
%/n+_TP+e-I`>cmi_+L*U_Kn,j]=G9i`\mW5$%>b0j]#A9$08\#I&Aclqt#_q8WNFUe'8Cgh0D!1ZWW2Fdteer+j,H0L+(7YA./rd
%([hH(MC$XOkBB2[,HbM<0uRK_>okFD>/JorKesRQ5+oH^ocXdiL`W>BL\.#%QDjJ]`A/YuN\-MRq&")9<lBkmJn+*lg*UTth:CXM
%9#MKJL_[3=Jr&t9Eh8N*&8QT.Gsi^]"??pn,q,H1(Gk+g/B(97Yh+tIZ:OnM.$:cqYnEZRBP[*]akfS^9Yr:pD^B`_$h7b.in8-=
%i^*sP&c_$OrLkWBeSFa*ZF;Y&n#?.\EM[33$L0!K=&C:_+FghDLdtg[7;c*_aLFZ+/M4@ChJI`TYog1Y<HpD)P`&RO>E(d-68!G7
%L"I!i3j,o2,F3>XMDrK#e;f&D0L!?%`i5D/K3H-?XKm'sp2ALk@S\qeQ>b+TC19,r+,J`7-@]T=D;LPs2CpA`H,nLIi%3`MLO#sI
%YSn5]3eI34-+CK#ee+4B+fOQ^,KWXP"1CH+7T**c+;QI1(DtXLcfts(UKd*VW]7bOH=eqfj<b^S`"#e)`GT+d;/LXo>GV,^;.PY1
%0<a*((k^HNAH[3RX$hr1ogqN>,[lS,4p=KRL_VG;3?ZK`dM!EbD4&`c1=%J<>GNeRaN=mZ^DNn?0%=A;Z]bB;0LQe?*aiMH8l6>E
%$Z"aQaSc`)p8/b6MYG?[O:SDZlY=>o/'t$>O1JoD&(g-VA"OgLf_+hFq$!gM')3E>7JCN;=5!7]Ep<7N&r#U(6O'/+@*9)E'CDD8
%s0(T1p+1bfX1?d3s'Wp/Q&2\qZIt$DkPP^]G9J2L=i+#jJR?7f.^XU2Z.85.T)reQ"_YHSE?D4FWF(4!4k97.hc#LfOiWU1^He50
%:uF&,6SuTET0`-8ecaOT^q-1RK<,T(S4u`W;Uu1X03$2XF[O[h=[,jp;0>9d%UhL43&O,YBFFuYMlJG1`gF"!?F7^`e9G$5(!1%q
%M)FndZIhc]%7t.Hl$?qa/qi6'5R-@q0ocb&-o$_nqa?>Bi(:+Hi6s7ZJIfo0$%0<Q!+a#SS%tq+"=+b]@h[L5&I:4`#7/Dh.7<co
%!p.?0=\t2U7a"#jO>pPD%2fLm4f_d!nNNi>T61Gg#ZFbqJ/9m1Pa=C(fntBnFOFnCgm(NO(GBcN*j/*$6)0Gmp4WtI.d`DN7A#_;
%`!\f7JR<2]A0h6c1"_p_Y_o:t-_26;64DT/TM5t/%4Z?]H6`MV)O#l9&].%prCBdXfNftX@4OVI5SZTh7Kd&WC_dA;6BO&2=gsG!
%k9[D0OP/etaYhYS;A&5%d"4dMO)u`qG;r>ujTXL1eet%l1!)h'/\M_N-&:?71P:rj;'X&!i%(GZ&s0k^R/#4Yh_j,_Fc$-]LBh!f
%o".Y2gBkBCfC[ii/c+A:11]V51ZWeX)KL&/NA&#WSZ7:t)gFq_QcOV==$Nn,V$(54Z_&9;b*4b3'1;AMM"C!4B1AHG5h:VD!\jjp
%$L=#0MFasu/LB$a?F7kAjCHURX1%r+Lh,,5BTtEFJ7$;'!W:qR=eK6"W$Fb_-u`4=%9,;hP%qmcZjRM!9;3IRWBn'(X-LKS!nIO+
%Hq>KU9;3K+;O%rFBS^+C2U%HhD&3nF=;+Co>*.B5gD-V(T[ds/0JScAco%qL%L+MAok/"$"^<H\AOC/KP.e)Sd"73!+bN5,aher`
%;"[T*]Z&+&Z,)ef0ib$t9+&eBC$%4GarI(UTuf;\3$t"N"@4kKj@"9'U:6*kd*.>@7Kf-6kU"YKUlT7ADetdf#APGM"R8K0["W(H
%6ME%];o&]igLc%nm%oABA<$rtlWOOjE=LOL5ec"X9_8MAh*n14""`ma<6GFkON;YWTis&s!V$%o6FC&p!j'Lj$.X&^$%Teb&ut$p
%[:"uR%+Xp#.f0pe^$8_7lK'I&K8LH'9j$tZR%TQ96bL0q:o(<p6)fLBBU-RPE]Pe)Z>,Z?,2^i+_r8uRLpHFr%8%D#]N%X%$<KbX
%/mG.ZMKkf-5g#@_*E@J%iX4GWL<3I38rX:G?.mWBXYQd'L<\khO4kB[T%3>`-$e6)KN<_='/giYC?Nr;,6gOFW+@b/#M"\dO_B9"
%enT.U)]"DB4[?#t)u45aAo-+QNASKVgJXVH$+O!QUEPZ;@CI/"]-)BD.D_T+'#rE8R8C+S8j&9SE&A39["c\V%EDaXo-B)F!$!:=
%<t1ETAIpM25XRug5ELE(o4FdqDiDeph!l#+SU/TUIcJk,8]`b5FbA!<TQK'V[,4j4Tf9\WW6`+$NlIHqR#,R]NgGIU9W$Rc13!H;
%iqh2bA"fo`df#iMhlH+EWo$kL=j=-!jMOP6Z/%`HbN>cfH,PM"+-D5c@#9O^3E4s?Jm4'5?ddN(9N:a$i[mMe2Ds`bVA3r]6I!Z7
%P^uJj!ZQs$X_?gs8VKMpEViI&dKWS\Ou=`$F%u30b8cMcCJAlPdRWQD+,iYdc4Ai,akWD4i?=%cD="sbYS)`a2b55Rat+O=Z0M<>
%D^`lE@eVY7<9bDpV$1&(#"j/N.JaD=#q`g'PsMYr`I!O_bph9*IE%6jR059kO)^pCTYV8s,GHVtr4Nc>PInLAr:Je@1V"$=(i:UJ
%Yra@!rQI@8-u/9"/R)(aM8Y_A&m<fB8O7?,*;_BUV/Q"I,t></Gl3n\*e,r!4F\]TOBP%Ip%VH*Bq%h>G>@P]%CL\`dfPa)fNh9i
%`o<?YDPf&8Z4,"4alMnjb,gJbmU;X!N&K>Y2Q.sZ7l(pa3T<&/q+<d3.=95=I;8>:YJa)*#u9+5cXPckistt)C\<AhNo]3UWYp.F
%1!ck'F;,+gAa`PLo$/j!M;SYu?Q-0M#Yu/9-E?6PTNh$>4a9C_[btU*6PeZ;R+0EiM`K"760UHU$qu)A'm[D,&s9p?ejj_7BRllq
%_cRae:<(CR4JF6'0.E@:$.Ht=F0TqUV"?=]!5S+C'Wp?#W=G?a-gb6nb8?m@%\gM5gr-'@6\?/0=P[;<l%SN3$FK"\FagDDn<60h
%LYXAOdsk8/jff[-".VS%ZuXfY!]&RQS%5r/ENikYH@o*^$#P!@<cWh(-b2NW_Z;X25q7F9ObEYsL97nZe@A1_PJ"6N!qB/-D?"d\
%<+_!M.GTe\Mq^m'$6\)7/#hts%:#gEg/PT@L)9SVQ?,Ya_C,So4_l@[0r]h0Q(a9Bo?nD<HpL=m,o)_F>[mZ>,*Ak45nmU@X\GP-
%3c!btefKg9[FS$Q@%X7(P1HWO.tuQIVWs"H(g=8?pjne60O/9#$:6^jCC8%:BkCB/_-+hSDfjGVi5LR5HpV6[)2UA=#\2*&,%bG<
%p?/l&['sLhRk"P)9"0W&!a9DYKEuuH?%:#$c\.N\BQ:ej`P:#M<.)GQkYWcX'\<#S(`VDep7Sp78#IZ:""/=F>f#[GSt7KAdN#>j
%8XNsZhKPbK%0\46Cp7qgW=(C>&h:b_#rU*D'@;l_doJ91$'c-$L?iG'iFEg["rUSp\5$'_4>EOpJV[H-R*^Ee'Q[AB&u:m+ef+r7
%.Z%%V.!2C2lE+16+c@8GQkQST$.DPArX6Se%Uin,G=k+G+cS3RTT$*^_].-q_qlEsm4!bPYV1h264;+@e9F0QV$9E3/+c$-S7bHX
%YB[c3%AHhZQ>U`bLt3>"OA-IOb50>,b=a(eHKcq*nqnm_np\L3H7W0)5ZDVQ:o.f1P&6@J?lEtS.#EQ-D3"gU?^,D-4;(9,iug1\
%;Djg)Ft+>B_pcR$J<Up"1@Y-4_IM2NFX^0j%T?j\5:.;;Mhp8Pl5C>MjEh#W(@RSV'qKTaTEIGo$!ZL:60^C2MI5*EpDCu+Wa+X7
%EdlqiCr<\;[XnB123Qa)YRL3_?@ug.e*$Z6bE1WM?@ugFQeuS_%!_tF#0V6\SQ^WGr6k9g'L<$g&qRND<`&#+#^m`\T?pLLC=R)+
%lr#K0gB/,cB:>L#I64%X#?n35I\F4%W!H#ZE=0BV`.jpRkH,)>=o/lTKPjl;ImtL7rQ/Le9bV#r:bG59[,HPT`X8P#,d8":e/p7F
%I'O\EUk++bYsK?afGc7B[#edO.",&F?>)pe)*_`3Zq1Xa9e+-@KG%+KTmXP^@>,CtBG4*?2O6nO$T5^R,t+OO6Q9X9.B!68jK6iF
%;;.+!`cK+3`E[%%?We@R=DKqUQ1u[@EtgtU)g'q<%j/6Gfc=;.CI*/c'iK;&QgOq(m:WHuWW#Yu-a^sr,dMd@&oW92gS^Wf]@Fh!
%r2otMrG"'n!+c;iSi'M9R5$PT::3t&8@*9gmO6h]lp=W^<#&8?h(B!_T,\mt6$cj^R-*GP,n:og6ZA]`QVd-,&oC9NT+(sW/aZm@
%R.`TblSCF]XL-XuH+-^>b]:\jG^.35,<h5kC5$U#b)"m9,bE3Vi8oH/U:Ud%WO0m$Hq_jlnU=!lU[E<TI7Ud%iTPGDL7&_R0J(JW
%U*5VXK<)66fWnl0Ejpi"$;mj-7M\3qb0mTR?7&@+YE]Zs)AgF8@nTNVm!L.]H.3TfP?Mk1!HKNpMK3GKEgn5ije/,9>\"/o\X.J`
%.U!K7#dH=tS1bS]6]o;1lV+B@RH4d-34]S;ar%YNo#d6Y/kdO_,%m1Y%#QRXro`I/EuF'nX5?glPRn0m6mBd5=Jr!U?h29P(-0V_
%[h;1SkNDF=0pe'fKd,#s5cIc6chu>QL$bKTX@NGO1pe[PjsB_#h6E4!+<q=O;?Mn7dDRpK@5sV*3lpEJF`JJ#GABcZSMS]9p+qPt
%90HQe-80:-;ipU$G%l_W]Xk_D8fK#uC1n0mUCMB1pnL(OUH\as$NZqlHPc5c>?Ie0pe"m1aC$+rbX$/$Ln0MZ(o0)1,Ras03REkL
%hOotGZt=qWVL2m_c`Ij!:l3=n[TB1h9],fQKs_`*^skI^3pm5Ng7SW?O1AZ@S3fo;AiGlo<9\P"iKSo1V!:i'fio8WdEcAB(pU!S
%dV:XW\_NgUZF\uC0]5=BiAU>8Q;%Fk\"dGEc/#Iq=q9erVj1oAc7%>SXdg.Vj9*.j,tDjfC8rJj<DPc=d[dHq4[4_KU=G7k.3(U*
%!C5-PMV.jFBMB%e#N@UrU,@(0,Eh>68];`[6/0F:rp6M\f:/I9fOR"[OfsCg'b]Z%JIWU`i!2?r"?JI%_$3&9arHnR$_qG7<*_-S
%Ts2YL1bDehKgBAp6tFgf)[lc=Q@"ItFE`P<gBnQ:YYrg])K@R&nX0fl(q3p3%p98oS!C2na&n_2.%VhS;9PaWJDb7-9>LqR#T&)s
%%RL^VZ:a_Sk_-T.`XctVE)6F+rRe$,MHNpqms*02O*;*"fRq*k!D9usH7<P.e37&</6gL+?]D6!"!F+n<%XoWeX-"+r(0HA>tqnI
%K.[.MaJA]iq2d!sl;e,F4Wskc5AuS`):5\6V2#-VDDi[@Y6Ki5^EL.__)`sYFn>KjI^a=:GK9q8)H]'rjI^.:LLtf,JM]0Ejof]*
%!.Gt3a]`,Z\@PK:J2h+$X+K-//gqjK(51?.U@+4#fgX-QVmSL=;dg"OrME7R)*m1mmP(s&Y7.]k2F7C[oU?JB9+iGR:GEMZ7Z_j1
%/V5=R"_['l4^4;[Nql_^aG*m.ge96AIL,e79h[?4ZCOamFug]%Z7!(E-bHhXn$q_DR^l::2D2Zo4Cf24<[h[J8gtu\)H`<25mrpk
%9ZJLA]q@f,o89YUC+VHU<amRp1cp`MUN3Y0jYX-mi]]-QL@Po+PV37r4em9pBJpa>Q-c40o!'<lpmG/:&1"/IF.DK(8`Afg6uuAp
%5*X^%S>*GAa_%4aG&j(s@Ng"0>t,4BRd1P(?UH9',%$;(Hl$4oDp>W;QPZnNBD(-F=E6J^jAa]d<#+J9]hp[$)i?okhEC;_^5WAd
%;^Agq2PoL">6\Lo3>p+8M3V:J6-)URO@EK]$t[^$Z6JKVCtTi@Ums1u<sWQcP+TgWbJ,b^&j/-L#`CSIM)D,r-,dmWfAtN.8W8`N
%+X0)aA2WQ&a]Pt\UHn#LpjF#Hlo%R\gt3SVrlH0D)&t,u=#d;l0L@QT.*#/Ud6>=_cekt6:<7UUk`"jV/q8L7,b*ZW%;Cp;@:c!n
%lCK9'>?pN$p'.RILUe?2X+bogb!BZ;^UpH)0TtL'emTh.0,J)!l>mm:\rF:],BXrf9=<)geE]48E$#NLOSW6RJJ1U\K:WE-AW:rq
%X:a<o?o)Y;VQJ+MZ'hsVe#$a2dO^e$q:nAX4tG&AORg=O)XW".jg3_0en,uJb$khp35)e=H;3\hEkk$OT(/+8;,PU_/ostNJaMs(
%imZi\eoDhp=V@5PpBe>#PMlRq=.jr&j`4_%B?sRT>T"MK<G'%cC]gp,$Lde7B]N+3?d4cYb!(+KEr1:D7Kmu]jh9Z.1jMk[XPgr&
%^iPQ"e0_/M#i?%],>J6a5@?A!&XU=*!Qd%40/K10DBYU(\E6NFSQ]Gm76mgcluQo^)BZG]kQeIWTedJ-3/@7V68D?r_?\@l>.F_t
%P'I'briYaP<pg?:dWl6Fl+LPd1jNFkbiWVG(AHNMBp*h1QQT>Uc(JD\U2=sN"VQ1cE;)=E&QPR</Eri^(J/0W!pRTmXa=aJ%[[a=
%&L<(B@_/peGNbDSb%15L*GOk(YUY445[qVhb;d'tZIs-i^/dKV#LW9P(BCphb7eK;34ns.p*4t?SE%_srl8.M%I8SN::]d6"sYkJ
%XnZLDS?Qb7mSC*Mboe3GCi`:,J6@`[C^Z[9QuadVWBt*bQX[+R--dR^CJGN+NcA1UI3tr[/9+0>E.ZZK[JHfPhkWc)/NA8H@\L]A
%[/Mu;E"ahD[:eiY&>MZ_MN@*LYoY4KQdk^RZ0<t7+R)`V*T%IrJ^VoU3q+7D]\kgM0UMK!/m7X//k+)P0'raHglX48W/Eai`B2qq
%VNu.==m=,=)%W'oTuWRD>aj(ll:ViWa5h$I=<!3.o>/?XN5D8:\]!`6Up>!IINr8L.oPT\46?T!gd+FKHD3L,((t^UShh=W_76+0
%,&B0gBfbUL'[DG4cP;."\\21'%4gD1P/7Efe966k;6;..?:9ZgC6N8)!fZHA+E^emMtjokqJqJ#pLWT<Q)-n=im*jt7/,u\XOQ[^
%1)(C,bFXuQ9n'a<?!;#8^`D[eZ=j<4h/g-.]#%*qlmG3P1BQVO"PK'LU)aWE8>%j-6]!+MRO_NZabPe#iF:[2[AMbY%IK"PB`F9i
%*Da>c.C)%)p?u.g0!=B`XHT^PjpE,7^8oF<]=e(Mf%gLO_R[=b@'AY63hmI]I?K#j,UK9<,s0]eG3YZ6m?.%hb.>Ns4hDt"lQj]_
%IqYCF8$3^M>opqN90Nt)A+$)8>ujSC9?G1I(Mh;cc.$Ve@/F#99q5u<IEqBG)M>24kSf@cgPGLE`hdIEcI4i(89M]>rFEgbmQ;K+
%`@a''\S+<GZjt^Gk].>Ia,@Ud]PW%<c<%KI7bk3.md^l:De#TS7u*9J[r@N(JrSHoRolcY*hsS1-&&+>\7qqj=PO=i1SZ@Q(5@-^
%+PI[tj(KO#&tT.WL:GsWf%A/%&Rqi&[3"H30)G@t`T+NGV`Q1YAc=&kfMl<0aXiG7+=!_hX?tmtpcA'(lVq'nVT^LnbYOL7F9a34
%5f[B99q>r;7o>qQhsSco9%8@&\CeIOT$DeIW`b:4F\aSO1faAJhe:J<.t5s*hP>"<<qLD-,#m?3V96)Fp4&^h=7-6ToRp,L!\%qf
%L<F%+gQXpk[YNY@Q4AVhg[sQ(m2Y1fljZk[%oZbZ;+6o9[&hC*(.OoB61c$V/cF<Xh+KpKGt&drG?K[JB.NEn@[8&BRgR+U5AV^G
%2'"Rs'hb^@S$]Ck5=u:AQdd*8Ip#.!iJ(7Y/8_&f#$^s*f.Ki:-O/PfCCS'SaW4gVhgu=^F.q548\kcf+($6A7"UAFjRDYZn_)<1
%^qK8-C:nc1PM((+Xe48ur,71^"5KU/iPDYqZ#!NH"lC(nB>9^ag^<os5)@u?o5Snn(n=l0pUQ\+Ke>F&qBd<<X\N==L3+dRRO&?0
%h;)Rbp=M1FQ<rW?G=R^c<T`c78L.bU?S#&5R]%m*a@6h?r0O$H,`F&7O!\V\&m<Z64u]P*/1`HX6@UUHQYaZ;<R[.MXZ(Tq9=s4D
%H=dOSZ_Y#T[^a#ODGR1Rp>@tZVkphhpcJbT(6rFkWsZ.R"!reE2Z/hRgdC+%"f)te<#(fGR@/@ppeIrI$S5&2JrF)W@3U.&PW38.
%(>hCV%Q6RQfOW3#TL9@sk3%))9O)&BY@I9?<BMg7ISiDuUbWj$Td;>@,GX%rR6(d-!tkut/<LTKR)0"McgI#o5N(34Xk^J*`Wi>B
%Z@>bG<>=]L(\$2eH1%KG&'\"1Amq*&C""c;K?,K9SJ,5FA46]kPlru1R:I9l`M(M%#2.-pY<]'Mr6u($k#`k*`Ji"^24sF"T)]Ro
%&&p%0iV)N-%FeFh"i\8+%fRg?mPa?L,B[WL[>e;%[rbZ@e=6q/pQWnEO.)`e9%&7>/&'_S,_B56,.9'qC=gu;bK8J(QGL\_^3+/2
%RcK^-_A1dei-lGJ=aELsJF5bNP'BD>LL?"p&\jaiUS+IQ9#\jL$7kGO%'X$QoEJ`FpgZU@O%s=i;QsYF1MMN:O)@V5m.Sgr2C(jH
%I+e_JgQ2i7F:ch(h3rB3(n1\YBt%uVPlH2(S$k#sXCf2eXe^][BgoCo[&/6F).ig1/GB;g&]a][Q]uj*TT*%cjdN<(Xg<+u8%;YI
%@uW_1IOYReqkJWNW1WEoknQC37E`Ou5!E"RnUCmMN%;8._3N4prgN<iD"u+"4Q0G,;ZV_QRtm<+<uS7nCmO:7j,KM"Q>OBdRj+s+
%:X6E+^J,;2jX4]qn)&75q/Jl:g[DD4@%^4sOHfkONFE,s.9Q4m2[)GimPf+?nlE/s(_[#4;;+PSTYPSPVVsLhglHQDM<DD306l^J
%n(-ZR,RF!2EaES19('p6QQQCLpoYi/hY+rNMa_@10,Hp&b?&G.A,Y4n#6WX6200DhL.l"3,m(F2lRiD6I=:;KB5.D@U#$m+F3ZdI
%Z#^[^JM]9lmEFI4QK!b`68lDC,:"-M_+6YWc]hBSPQo.bK!t0WTVXOSDL6`_*YK'$nC7%k*MEa0Kd@M[8E=Ddp62!AXT(35&&Sj4
%,*?q!&t=q1Bt9FUl.j@oNm_f;X?:4Q\sI,$Ltef*P5EDh>j67\WjC8PRT9V!dkhEh%k.d(A0H_<pph0[Z'R`\"08fB.jALWBb,Os
%),,t-O:5IME!&=KJr`@f]Ep*H8Uf"eM6+MD*B#M1*8$Mk7(YEY[$'T(m']<u/IY.RgKS/`SBM$c1EnfE/R5>>N0?Ss6<KO^\J7lL
%dp85JpbX4g)LrK]DYP'Bq&f;:*5*O$m6,,m6sJI1$63oF_jq@O+"+qmVkp4C<X9$$JglXj:%1m)M_`NBY-.4]Zb(Rph2;bd/B*n*
%<]h'\\epTWGiE\]_\bFH6LcD@SQ`;\Oj>2bNu%VQ39^rG#q-j_mFr>YB.LF"&_j/XFibdaHtqVW^uiG3;F3_$enUoAV6B+lCURBQ
%cR`r^D6DMA84>i-L7VN&clO`%Z.M.Af^;.2;MM3)E`7+)+f3A@>Y]\R#!1uP7Yb$'9En'kY\q!qGea3+9)1W7%e=di?mOj,*Z8%e
%%aL$hhXCh!-CgHB@`!u833c!@-EVM&nD19,dhNMfSOXB<DpZ/6-4NY\cb]?&PIi^/*b2PTq!QnoHtS-r+&LU`hY6))$N$X':C?up
%YYPW'Up*W%qkUGl$Mu*):Wh@D',+,73:U)X4!&gs:.;)WMWui&)o/LE0PGIB]S/M1!Mh?;QHgc_9WW+H"j$h`FFh"*WKf)t%NB(/
%%#it5Jp')9@YWls@Y`ru`=PXj<WrNZRGE(/,G+O9MX1l%+RTt58,9-c;i-ZXpu,^QL`;TPL_>P#Ap!R[@>0aUqbeIe8X`h-kB"8R
%r.ucZ[ipPZ]qhF4"F?%TZ+@Ir7ERKi)9bK<f!LM*RIoZ?G<D1cYBb0rP'FLObhr*WAldNuIk'O%Rp@ZZg[f&0=qIQ>l_=_o\:.5h
%4s%#6B@cf']]u="P&RKi'`ttn`W:u$p4*@D%^kZAE9FT@p5fK*/;(oup0?4@f&FR0Hk"-\4\cg!3'^?*M4adr_h44BA[X=e(t`Il
%d=?`\iGM$%L;"\4i@1Hn]<b=dJgh\,Z6=!3n1[W4.G+Mm**l;?/[i1.=KE?5KLVjVBc9#S.u#I):E++:1r5$fm;Tq+')L#\Z[C,D
%gdstJ66`T>N]J?+K86!7^la;1Q"aX_$T_sOUJr`NC/1IT/"!ZC2a0*Q!Nu5P!QnAM#j-Ni8L%*4\PQRb1/hFAn0G8/Sfh!PV7E?'
%#aWf/%8kdYP-sDc$:tIqG7[Bp3^!?!2=UoedBcbnF-kAs>LhrT2X&MY:QAoOMdZdZ\3gsG?OSI3M*",1p)g^t*6%365i<aLI`!$+
%c_'Sff_rfG#j>6-50CRt6eju2M!3pUPYTsjFL#dQBBM0po'Lb?M$YOVS="8)'Ma<!<,^a9NTP4[IB!r_DB=W.2UOW[X5Ti\hBfXS
%?:UX=j*QS92eBbA)X:N=k&QX:noi<P_*tcu*+@k\/3f]XnA8r8@/AdeS$q's+bt-NjjeR6:"Sd&b+["h\(H:s!hR"aP6IjWXpPZ7
%=n,Y^lrL!YBTdO"1!bt5mUJm.@j6qq\4`@P6pE!kjVQ0-&S@_-0i(5"F+oqr^u&>!S+9k]K.mU`3bE+^,qLI.];GDp'-]t&"=3!r
%dNf+t)0C0;SYSKC":1hL5g\Qs25r0TdN;ASLj"nMP#FFcLJKDQ[f&#G9#b%4N:ca&5(?>RSP/=KF+otL,IT:=6+lTlC<o65$1Y!*
%$?;*.KJJ?C;;],4o4H.;P>%2D<>T\ZA=,g(^,NlPH0b=Nrn"\m9^pq2#*Y\bWHVFpo7XdL]dbl:R34f*Q?[Z>__RDLW\-\c@)\](
%a1h56[S,Muk#lI_IfA[tm)Qj5R*LT(Zi/Oc$..Xs,OEHOG@0&TBaZR'JkLN"ZcktOM'1bF/*-otr@j:l9fg[GOK>(!_B('Ta'8Ft
%-Z&&SO@6\%-bAOiK#;F&j(pa_-nlT@q`pW68(t<[[IK9bZ.:T%h`G&/Dl4)*[]uD@2R_4DWGHQY=:;=":0o"q[h#j58W&H\9h'&q
%N.FqG90ZF2j;h.B(mcd`Dn6?jZ'@(SCr2-^PSndhn^=9rBtU5h0(hflP?,RH-"V.R,$7\s^IcV:jJt&#/>LW-<IR^:+K`X(=qNbL
%NFRU_/s83;j&iSp"+/6$-(RRP#Aok>jOa7h(@EY8-N2>P#mEEeZD1E)1)j-Ob>U;je(>d,3_QJ+Li4kZ>Pj'Hr3/=KBWm`_GV4D[
%(p<%Wlihre/p,DI85$#sf1f>s%"t?t!ZV5Q4b78T+/TU%!GQgt5[*8\%e52!g?tJ+0Ua#USgNM'>PUR0I^39->s%jc"7]q"BVP5&
%Y$BBZ`/i%FGrc4U_,d,S'*KQuK1j83%D)rKXu&sN7qffuC+gNr*js(G@95??M4s"6Gh16!'"s$F8a'8F3iU4cD^a*+L'VC=hG>fe
%%;!69%5je?7s'>#Sm,5o.-Zmi)re2YI.\JEF&pOIMRf:q4.k4>MBtMbpB`/kc>72&,p<)G34#IIeCG5gn+\YGl?gN0nm%W&N.>Q9
%cD>69dE^]6SA!sD&k7*VBCGV*KFs5,HRBeCYN[EofGILq`[=B(OA_[(Z@K@)=fd:u7\&W_hmgT0/Ok"=m7Bp""2#=(+_4T9=-S"Q
%N>!&'ONLssAn2?C.&g1Cq6^4<nA)1DE?D==Q(@Yjo+!RcWnXn%@G87Gm9H$%/ke>CVO\+Dc@ouq_R+AmMFa>5e0gcRE+6\@5<@?1
%D8IV\2M'W<3"R+92](C8W9+2nGpa-\Qq[Rn"^p[$J5IKN[5Uf=L'itM5T\[SG`Kg4+]/ZrfVl00D_^lr@713cMk\9,r$EdaP&pPC
%hf.Ke*aDk0^/O@cNBLV!bcH#fAA)TV\CZ]$9GM"*@7ChY"2Tbsp22cbYV0E5r3-nd"Z+qXi(C">09WrC)hPRI#SB3"j,R@N!YN=H
%6pDM#2rA.5!JuA191'=L-rD4bXQN>P<s_;d!GH@M)<9#?\5SPU<MR;AMpjl5BAg.g<]!PJTU:>uf"FSmfE`o\E\p29R_IfkR-mh)
%'Iel(,K%E.r$,],s0*><,E7\LWoV5hhYP]W\J;UTqc3!&0n.?2MjQ9ViJBGF%i\D4-$"mYV/]G,i/pp+n!PO>jeFOp8S`4\\@'i#
%17BSg>.]";9Y&e#(T$1_.qs)>rl'0RO1aHGm`6@9R%$hbS3+_[kEoj#=q$J&n_]%Ui)I-;4:]CPHm;/7fOJlZb6Qn8.kKYgrXh-n
%!?-**maNLR+1<H^Bfp/<crne52)\d^`<^0W:i9&Cd+BFsp@7-hQ5&T6GEQ(])s*@[;-of'KdarqA=Dr&6J\Djik5R)/R3*.`LQh1
%?/<DP1pY<DG.!AH$KAX1(\0grf>-fa)q3p;4a%EC\mI1ZVmQo1Ee-j>Z+DW#jMlGJc7*YEnQl=F?G2+<_9DA+okJg4]P]\A$!J<o
%.+6uI/hb'LE,"f<Uqu7IkB:eLGh>A)Lb;!Xd2&La+>7L3nkd2@h_O/sOJ&Vt8.ef[C[&B4>KYusg3FZD1@LKho<s$/*=FhI$g>\F
%e$4GPZ%1<.J;84ti1V-<GGheFr1;]CRCdK.e&rJ#gV,^g`JH*?>]Jb\'3@:mY';A-k]$=g?+=@kb8#pa,^9Y&SjJ%,OPhQ5GR=bK
%6@u+si$frHcfLgi_ETE<QuHNOM1`^&5>asjJ)[p-T#)IA-d5H+CTEo]2TTm7!qqGS5(.RkqRQ]UnkP?B[=e<\,-A9k]4K,+'um->
%]4#O0X10GYqI+3S?l0*T[=d,EE41N-gQJAV5jdu-lUHRW\J.O#0VrrSdTVWkP'3cEUuY4,m3&6k1&"P^E^g2noGB*"6Wj\h,cd$0
%OHIqpND[%VPXUh'A7NjSW%.].eX`.S*9pPs;Qo@$e>o&^[];sT*2HkakZ<7ofY/oAA0R]=)56#fPpuDBMJedC730MepJ<u5hKZl\
%@@4,l%s'BTeoPM%W+aqfkI^A$V+,r:*9eJ"!J:)hKCH:8LttJ=3eY_r>C'HF`l)))LtN5?or:4U</^7"`3541G0+/7@9iHeWp:;@
%0%'%3@]-$OoFsqp]>P=mc&t4EBj%1bK*\!p/1m\ffi84Yn+u8/Vmc)MON>1TY-sZf(&8:qOF)YBdOcE,lr#1F(+TaH;-#Z;[&GI>
%NC>:iPsl$'8a??F4Wr&MiE7VK6CARs"iPO-JP62fZ'(iP[%pr/8-CBN0<P^-K1lR,?4L=%EY81`+fd`!ZjA<pSf#uJ+R`6]>)JD)
%^LY(t[RUYiS=!94A#']<aBGl_a5l&N.@53I?=-'3Z'&".WH#!_O"ohJ`W@=cq3FtM1hU\p'0kN:*GQ?88!u5W0-jt/67t#O%'"qr
%KaO9Ya*>IGCJeRhb"CcH&X($[Q<s>S65ai)E.U(u)^Li$3qo0+T7Ac+De-V,UT\W,n(\?2Nukl'n:Jsjr9<qf^nH:^Mu/;q8'>"o
%S9/e`\Z`Z:mGPF=K/W"?*m(G&PB:j]_Nj:O!_i--Eg`5STTL7#/(rGfHb6lcrK?e?=W2_7UmIp?PH"gNahCH.lBN'u,g9lYSSZ[g
%?NKKm+8>aF'faIilnUK.'t:X"f%qVemOTh3\$*ikqk-bcb<E1bc(N<MiZ;Wkm5if?ft'U%3[iu5l>cpjAs]aA;'hB>4/U?lDQQ]O
%A6!AKAbD[:Ep(*m=.Z1=[6Bd1G5$F1]MEh=>P\ISniJ'Xf^tZMIcg[,lk(l:::Gf?K,3\XG5:$.VIhZE!@,:[EU8EJHD$JWaY_S8
%8?^oUC1EMc?HM;3k-u_H+(o#1\WrCW9&XeD5C_h_dc%\_Q\h-jRp:o9T9FQiN'Re(d%C"\K4T#E?suW[P)LqOCJ[bFV!Xu7M1[])
%X;e@mN`p2<0!upkK)I9-1fMgPEN;KVkm6<uB&iRpR.`_2DQ`#=:J>P:%($l<OD2%c4kfUkX`3`S/>KXALB/<A@C;[o^.6pI&[VLB
%((JdWKP<uE%gDelJ(>)%GnR:EiL`+))]gVoLa3^;)tquT]Cq*6ZcjbI>pA';SPt'D=s<f\\LtPI3R:@A5c]Ep#-8MBe=^=-HJR6@
%f3/rQ[))tj0/WmS/k[--8IRKI=E,$F%q1YbEXu-iN3`!_$_]#G$;:Lrl-FZ6Yf:cm:hq"cO("jp_GETmEU26Y+Ol5m_u\6p[^L@>
%0CTK+E8eSd:G?FPD6ALLk^G%(?u?i9Xq9*U`EO>i0PHTW!Q!.Bc,TnX#6bVX$NLa@g7c>gEt4jG7V7u<Y<W3OB\(>!]+%I83P!gJ
%c<ENP83&=2PBhnR]=5a&]4IGoPl!DYK3>Fp,Qh2-9Lb-f?Qe/Ga+^5J_3c+-)_-_j%VroLeD2(-!s4!)PrP_@/.Em3Nlol4C;-]%
%@km@'/L"l!)TWS:=HWABbti82HNBea@dZ@c6mj#U8!Q@#X=C!0ChRg+d.K't@U)B36d+LMO:-QTm\-lj1!2f,lgK!55?sdc>b,0u
%o&>@AXRj2Prp76-oNfVsrNNiDg0S*53W"2L[X#X"31VqYDmgb8SekGObWH,B2iH]VJ3THeq)jYrE`Q02*)ID4Ia,QmEu\dVs3@8:
%2n]0/W;US!c+]bIkC5q,e)sj5o8iZpX4d5RSMWKVM05r`Kp?uYbFTKKm\6nApU=mHFJga9f\]=oU*?d=FE5>)ZmRp$!q`:_ifliW
%_F4JU4NB*@QihnZp@ALWcLQ771%`#E,JW4JV\O<RMJ)EiL(XFWbetXH[joj;?G_<%\%h9FP:GJdhk\pF85Bg]/P5(n$H!CG(0'SJ
%o_+W"D7ZX5I#d3gD1eFG=7[gFBE`q<2M+P'j1siAYRBhV]2)B#"Abf<'n&6r8pskChKGCVBl3Xle)C_cIqERfZoFVs8NHq4Du4-1
%GZHL(Gud`hcak!\!Xp5o0276GVOY[A&EodHTMdL4Dh$HlAp;P!NAM%+lt2d=3=EFFDUUaCQZB=]MK3$6d?o24&m4BeX'b6P]2&gc
%RQg+NSCXSAbGsB1pM%IVl-kCGUQt\_@#EZTFtlnL#V\"6Kj\Ff-Q%+b2SBic>c,Sk!=(nZ7e$HaBhj#E,1,IN-T8ej5/[`EU6+Xq
%N?-p2nMGF!^Gi>sS[e2HG'L]\VaGcA'L&GhRP#$fcT0"onmTfuSh#i!jhk?NVj]ZRW3o#`'(K"$SS&'-MHWD\,k:;,;?8CLGcFhK
%L:@dGipjCfh<(VSMXe'#,c=3,EJj:n]9a.jPU1Ela4'Hb=^o%6UfU%EF*b%SY2SmjWE3Q3id#7D[/\9WNc[(d%GFY&f;J:Jfs?EE
%e,etf$j1Sici;^9IL<ROmBM\RpW=Q4pXGAC..%;.qFEO!C<A^"DpP&XT!QiNMPd>2cTbG$/GZosjn6Z<[OiFs8(BDos5J;\_aA`_
%5QCHTfepM6(!D'6P*O0+7&e<g-?-UGb0nKCJ;pU9L/h)BC)GRoNBL9^is#+/3qGMg(8;'KIQHK0,UmTBY0+&m3T"XQkUpMXLn_+`
%2@#o5&^>d#^"-3"40hSC-i>=1.!F)Cdjc`?$Qer)@uWVg0rB\TY3@pDfl,2D'NLCVjAP1$GuX9rK$J!4&&m)6CtGS+co?*$Mr2fV
%]kce*fMih.&BBrkU$cg'oe5(m.HnCVI)C,^l<QJig-ubZC@A[hmqI0J1IH*uJ/`S7Q:Nn1r/97SJ%lq/^nZI]``5=WMDV39=Bs)/
%`ltJ"<3G@d;C,G;cI8f;A-`K(WhLZGl9"CV<-jU]J-tCLhO[<@DSrDFER-r03g@Lc]CkRB#Nr@qND<RQ[Khq3!!kqW.k?^;16Z30
%)6>XoqX0a-gi9KJ[K$Dfii4lfAH[(=@5dCiY0/5QJS^T?X4tur3_tnon()^:^M3'<Y^N^7VeMI+?sWp/S4@RhZsYcHRA%p\k6?"Z
%f:RD@\_!oMEXu,5Oq/);[rZu"><:H.e+^btJ*"#)4)p*8;$i)d7gqX,-rV9=<=GBD0i`E\FkXB]3U,j!VgCVP)dMeiGM=)!RfW$I
%?\2Ut#;KlsUdPX/*Q6qI`9oaiI1P^e53SfCDfr@ho.@E%H;B\D8:R<Q2dX4fAQ`6UMeD^<EIqM5"[/M-L?Nc]lcG@Bm&(!NN=OOO
%B;j[Np*/ac4tm(LNY4g>1c:[b21bQ[WE9,*>n?#E,aPUCG)#9f3u8AbpHfE2pg!9<KND1%*=]/.;p9ot8%J0$`g(,(k$I/+N[$?"
%f"0KCc>2"7Uct;j+d<e9rIiE&fYTgCjb[P:dUDTRImRtX*B6:lD]\uBMlp6)CRbXSeGp_0L%F.a6hLK*.t4;c.Z:Sb[_&@K@_8ZO
%Z.cTA<<#Hr]B`aYm=)`;9@Wh0["Z;/#"t.4[\r^JNK_Z9d(omDaAr)hmR,'iV/%tS@-p=;mB4@``VtPCAijsV+D`\q*SYp@H,/$P
%*bQOR%]Z74Sr9.2DsXG1&cH#i%-WaDMg4s_Eu$%]]M,tn^K5_nb#muQ//NU:K!SEcZ5]p!LLFa##Z0TB+sqT#Ed\[8Z!;+n*2Vp+
%FHecE9'AX4Q;WQsbD?S:Gnm/RT>JCRZ79"SK4^*D<L*9N9IubS&G_NCl_>lSjC7LBJ^d(,D*`_mm'G;nXY6lDB.$bn]8Oqqn$=[P
%mdh5;//M/\R4i0%I<B[XG4EcBo>RFf3OsV=j6gZ7(On1:$XWZErmAR#nm(B(@EA<E*oJ]+C\p4P,=Qi\:mlSB>OYI_4t;P_fU,\a
%?j[h*V:(GV(fT?dlq]1=T,>QND<]!9;OOGnYnP;k!\1O^oHq!t[,/a3S_1$,B!i./[=G=-#CoA59l3j$LQg4_Cn_#,Z[C=3Knl)K
%<4YC+MEbWdPEaa1PaT[dg0Esm/@!C)PfbP;Co&j@=-dDppf!Y_U@\LiYu@^A^+aQ$J;jo</@*Klg.Y%^;&6F->*X_V+)kuDK)8B@
%M=ILpPg\OG@Zj<_8qrXuQ>V@pG`^%Tc`OG7J&LD[r'V^0hW-$#MA+cVY*5>J-':'Ugn\?O%M2G7alV6hXAm-WJ2j^5J1]EQc%KkX
%ZPmm"daUT2YUEN7e;*(cWbasXeXP)WL'=*dc"`q^.T;7.+TNQq<d!%_PokBS6*\[5iE@MP37XiZ_B_jIVBRfB74!<lJ7^;@9*s-2
%`s#oU.9WrQ?_K5+c)+@W1atlBL%HN<1T@H2:[uNL>jAXdO<DN^User;.]Z8?O=)+&O<of*#,t!C(:&KY.u_W,/NDPcjME/&\^3q7
%q&_?%K!?.=)o_g;-<ac@Q(;/)]T6SYSQqJD@h@Xi"G;mWMt3LY3jjROM3D:E3]g.fj!sc#2UVBNb3;o'BqsAaSD(K7*Y_'.:MhRd
%3K55"62Q1@UPYPq&./q'[>E$8"nqj)RG'u%;m@!s!M$#"7S2*-V`'[[$tOcJ[?9+(8S3-ES!B`!A810Q2cnff[0?_@4Be.aKf?P2
%'h`s]=>d6hblO7J5)F'c/@ge>YW'%rW`t>1"&5Ku*2%0=.g3c-bcO(<.QMb3@HSDSK8G]C,#54m*2*]^&i*-9o/2Vf.s;.clr'(j
%P4^oH-Vl>#_amt*Ee(&b.Z4KaM52n"b!M?I-n.Q#cEc(THl-1S$`7RI?q60TZ",EfRFN'D\`,ePQ#SBTJ;kc$-`JTJY\Jhf(Q$OO
%>B%+Pab<7GOiYVS3.)fqE_Rk,`pB/nj<e%@SC:69$I3?"gWD8d)7_/cnq*(+ic(%sH?#OU3,J.:[?I'd4YWbWrQ.e+ihFkH/?;Am
%D'*_;@kj&G+]&$X9sqm,-uh5W7aRpQ78E<eiB\eL;iXgdcQ@IR0cDB5"h-dc9q8m#%rISX_tFDD\E&qE<ha%V!m=9],ko6GB2SnL
%*3klgc,PmG:fXJH!)]$(4H>[V6f4PFX\Y=;6Y0t@d:mD=TX)YG%h:b,^,4R&.]VQ=asb4rX"pen_;X5u(EXf1O)9]i"&82I/)I2B
%m_f]eq<C2Y?D!cU;pV*7e\9'6s7PPn?[fIGh9u1>/:5,-CA.Hfhk+8kQS5"aQY16>YAhYkN!_gj\S5Dlo'YlBoQ&.8:1f"Sk2OO3
%M1;[Ws0/=Q5EA#"^uf"pO3RL.>k?9m9@02#=5]ja2hsGIha\+6pW"4>*/tiSDeGtLmm[^RXul!d]\B%Vo'U82B_90^)G^7Ulh^Os
%]?T[:k!>Q/NYi=6oN6b!^%q-aajjjEI;oUB>jR32[Pt(m7(`GAEH_"p`8H6Js"\I?LIMr\XtS[;T5QAX[PpR/n%')^[dcj,d*4qg
%gjZn"+1!0a_T*S?`U;:,g""1U.J/AeOfnTGm!Ll!GCuq<CN.D?UUmsas8C'ijr^?&j^7q!*#_e]RtpZKo5VCVh#>'(=F"EOFmJmd
%`+EZcn\,Uj9I.)3h*a*4Y4&!<8"$)Q]BdY(mFR\o&+@e=7PME30oYP[cq3*I`R&W5a,rL@5R&D!%:f-@Hb$]@?&fb[]C_6;9='!F
%@JB<YC><iTTO*_aEcVKb]%k#jI5S!E#;Lm'Prl@h*1n^I9rd!@6^<"F\H1[`r4Ce<a%;]b*R(>'4lG6fd$Z+Xk!g3)-=(N;jX+8N
%dcDf]maElO7IgSg\T*6]FF>cg9)@>A_&SY&\(L[iHiE<dk&g@PI66YQ;;Yg5:J1$g@/OrgYD4P&0rd8Z["49>Vp"Hlc6R.9KTbA&
%rlA!Qf:2)e+3uh]Mr@f#Cq4i0r1&dU\YkM0F2s5J%*(MZ7$]oPfcN?Lg:_q3EI5*+2;F=K4m#rJT#Pr<X8ErK(6%B;fq%Ra^\mKT
%Yhg!(k24M*fEUHKC$FDe(`ttY:VORb_QRJ1r?L;D5$hU1h4/:gSSZ;S>&a;4BbVf3"d=4[^:A''(E]h=(Lq'XHcr1D0,d'jeNZ:b
%0"/5-TY';V'oj)U'TE+?Tj'#1d%$l?<P1lB%HCe?L@MH;QSEsASR#L6*+t0(bJSJ_Pq:IP+u^L<cnh,a*kZ0*9+/eVqZNL^W&&]Z
%%ZpgO?jj^Z)%ZZ0^l&\)f_dTI1PYP+a"W6]rVD=,CCDg)NADD=r7HDXkr?e'_;Por-_?r9rNJ:$<2>P:.;gcaY26kL?B)e/5;dLE
%7O@gfQJU@-P/j*>Dmu(JC_;h#.IE(l+A[&B*jc_^Pg@#\cTXF>e(L[]OomY5`UOZ'1GkO&#kD\Q]CX#'G5JHTNk/r^``(O!&^Nu6
%K>o-bYK&mr077#1o;P,hN>]X-0>\<23#^?<o^$r]-A:=pe]MfSQQP)Oc?I$^&0MHZ%=),flmWLL0cN[oSTm;om=,f>3`tD7i^q(O
%4p@DJ'Jb`/)8m3m4)Kq+i+6ruCOLlOGkc'&N7<2*'$?D5:bX(Eq$7WJN'P-,6,=d$T:m)BIk?Y>Jq)SFpHK273W,h<2^?]7n6+q1
%5o^@"r,IC6Z['$j\CdCfg7E4Y`p*6R>97R-oa&V$mDmhljcR*uo'GClo?GDNrV#79gWbMKA3'*;d+en.gJMWFH9-I2Rs!T-_:tFa
%9Q.t-G'`*j;oZ^f[8.t;i0ZeMRjk8Oc+r6),8,c+haSd?_68k2lKI31NY-n')@:<*p>/"VA]^XJ[^RK6Oku\#T9"o_3Ie\%*eCLr
%].l(gmd\<$3WEsfqiDL*0"e70jiE_-=$G?FN#9k)QqTSheYC6d,DP^mO3AMPK]DA.Ql*QNgq=f9i9@Pf)TV[,`HF%HX2<!@r8cVg
%R##hPd`39U`U71<6/LP)E7]G'%fAWg(I-KT0"7X&Nu6R7l.OV?5=UXU?M[d!)Bgp36dpg?7t\<sI,XaZW`a-jcJFW![_Fq(&"Z$q
%[MS$>M/j.7g<!9L6l@e:@l%IcOXPuqT,k=5%XtNEKh.F_K/acZb`e&T)3\b$#X_IdK+AK_rJV:>O!GM&cbjl858NAA.E%s>)8soV
%cRBW@MFBN:QLhIn;;sf+/BTC3IdjH4.E%s>)8rctF,iC!AJASor9AM6Ypa)dEAS<`J]+9&K9t^;@qnIb\6Ddha.1?5:7aBo$u_Sk
%j3+rP4;77X]m.aB4K874of'(@PeZ8O4e''DOai?FQ5rVqT;RtpHce*"dBucECM';V,=!s1[>D%\FR:L?g?K;c-?3l8f++4MD%T>e
%W]!_^gJP@M=IXuOM5j9LmAWo>h]qdiSt5Pp8DH[bi(rG7S<hRiQVfIhUCeW9QI3'ug<8]8Z[Zl=IlQ?`rq\'[!mIEB4sD25BCX#>
%6&FI+O#<s%CnVG+]%k$W%ITEE[cB#90_%^s-=t8_q;`'WP$.]_'$]DUr^J\gI0K)us&\^/lj:XRT3[t)hk"*^+(H7kW"7Y-eT)?F
%HIk@3couooZnF?KCJ+FY-%1'+;;EKjr<Y9o*1CR5ZjnR51[[Nr6W[:-%HD-=pa>[N@FKahX6.bFs/it)LVKa7p\r(u,KQb>?]R1u
%rb1N3+=8,>:TVt.3_CkU_D_,RO?^aW%_V#Q[+5h!(^^?P`fM88(rfCT?QYDLNPVHbE<]p/O+m?M$$R@@kT:OXI%^+\O(7%[4M,q6
%IX<qAK_\P&a^]E\g_+>!SUT$_^Ou%U5)$q:PQ*QYiT1%+L!8WXSc$6ds&Z-FH@V4CX-&Wfo(bJ`cZ_G6A+KFj52SRil'Zq5LLSo)
%I(f\<h;n0uI(iD4kBhOKp?hO?;a_+ErJr#Ad?&n+<r#fAZgA!!5Luc^hk$J/I_0l=k@_QB]7LDsS7$6d&Yj.!E59pL\D$:%5$i(Y
%`o(=hN^qQ68+<A@bI8U\O2]92nr\=ad+H0F+ZjWNflT.=TioI(&Ua8pj`Z"@'o5fCYKeaqc[OPqooHH8q=a*SbO+Oq]?AI<TMK;X
%SP>ufa`KG/c9)LT+YlgdZUYgtic9]2AFm"2pX`J6-hdenU/sMohO+tnfq-*ZOd6pSg.+'M/C-lCG_lgo;.EOjXT,qt'n2B\s$TOM
%+$XR;J:1]eXdFEr2P79LiX\l?+"?bh`4uLaDddPJhK$t!-bWgao)jfL[i1pOAMUnlL6i.]hoYB9*loQF?Gt()L)7,3OSr`G]M+'H
%am_&'?7*S5A9^*A_oqis]>QGC/kcHp]4;t_,HjMo3GJrMX\:AQDb,1h4)1Cb@;JOoEJTk;.3tB"1PS7m2DJePLRr<k9Yu`U:H%am
%:;.PeQ[ALTnbhb=LX"MF=o&u'ifmt_@ZHLFPRj<F:77IZK/nr>^^&1%DlEaZ%<%al0`;<Gj"^DbDh5,kp8'58dUStbrQXY0ml%)U
%hk%d64&_<:d3aB.f<5%HOU4K&5b#3g5N:Z?EDY`\&Ch(r[/TlG3&Y@W,>MI>M[k*e+$B5M]m]ctH\JNZEdKj1,_$.QHd"AI4cT!X
%VuqFilon-Ti6Z)u!Snm=1F\NBFpo;CM`Cb'Adf\)F$-2<0l@P4KT8Qe3T;S.0o4`4:.GHkb&rb'QupP[hJL::UtH+tCH0V"nJ"kl
%:Nh]=NcEit$o?Qk%U&ibT7@qlbSVZg`kcE$P9&[c3:17s3)hXsfeFg8`f\n.:d_kKN!a`roWtHgT=qqnS6TpV^Y><=M9k>]D?Po8
%r_\DlEmN,qO#)Ti?m-CDLndh506XP%cE9osXG2;ON7\#MG!7CB6u_g/%;nl%To872hZL"Ua/Dl2(I-KDUA9Ue6Z4k)\*M6)s1@,o
%S;bi_>LsrGfmcnVL8+L"o-LP_@i3hcnOE$Odj7/BCe8.#aP4noq_9UT/pj[^9R28f]KoKQTEcCc(eN^_Qo=0%$pQs^?bX'7#?W(G
%;/hbOGN`5q;bMElV$D:](&Od8V.8M*%QrN^bRb7IfIM8?_-Wl@F%jDVN^^](g>.6Pk01r@0EOdH2i2+dk"`\m9kNbP0Op.L2EF/T
%G'#EMlq*PU",WDP\Oi9[[(/btS$]^tRlbY-DM181Bld'9RsTbG@?Wm!4Smih,T'%Mc]&dlUs;^"gn`5Lj-eE-8Y$fiaP[@QFQ3RF
%kUKm;PZ54kK/k9DmdIdDkqABm0pHh/kFR8hpXDs((qDI"cuJf:jcp[Vi(SDBVYlf[Ia"^S=5jOJi@.(46'JF[k9-quWOuTP3T$A)
%qULP*FrrUiB32it3Qe`&n`ol?0ii&"m]g_NjPdu]^SXJ\j4K[F)A2Ed=4(-g3Y&<6gO(pbDrpmf#ni^TZMOSLN]J&R+3bpVB_:\K
%#h@t]bWKtc0R>!7Zg^JWDt`I,1J64,Y(!HLrUt-Y^@62(F8j-B6,F^Kqh>3E2*oc)GOb3<1O-iG?p88]nQ;P*&X)hWqXX%9A31PU
%_okR@UdO/HEB4.TRt%!B^E2KfZ<'6@1t,o[$FukSLl=^UF8.T?6L8"TaPt\>N(Ce.EGiS,4Cgs<2SBh$4%XLSW7B_dUt;B(K:]Zm
%n-AI46^<<=@;d:rF`2Q4nVuHYg=t.B5O:#2[i1pOAJ0k17jsg:U.H]C\Ke:g%3MuSFN\ac%pV#=C2qBl;q@Fsh1nN-7PKd.LOA+\
%FPoTKKiqp*0U+aJ(diW%@i.SCIXOVq2*rhgFm,9%%.Rj!P,AuN3o16dpjDW0m-9ANfq>3bN(e54H$8lKrH?\9)&%'R7&#(mb]+%g
%5'5pHAdjI?*67!cTejaZ"SgpNi[m%GM)S2BnR-Y&0j9[:_ZgWOk]n!hIm!>mTY3<WN-Kq7I%Jogi]!`-3C``BV"53^alCgH4L9f<
%akq$0\Ij)rNe3#+ZUd^G4'QdtB^+oO7A^kB"._Z$VY)h%rGbW_dh2'9UWlltmTXI^9dZHtFS%s[O%hVi%XSf$GR@"t?At!0%R*P*
%_c`BKAN8RC8L=pmh;:Q%H'5+L"O7Xe]]5Z6H<Q`,V[0n%U^+@r[Y#q6rbt>C,<VF6'9>/KHP38)`d2R(ki]G0bOsQM,MG?lD2,5P
%DoU#h;-530fa&6U%JW0-RNI0_+.8S!Y:iY"4A%C"P`T]fbbEch8$fBH1ja$qMk<0f><HY>#cTen-2=C]c,I`4@noo]5b,T[<-.Oq
%g9(+$*/3@(8+ghQk@FFV9HV]4$@/\ucR01b;]"@+@eh]$Q4MJt>98Cg=oD&7]j>!7g;B#N0#t!DhsE%FJ6"(XbmULXCk"IWn@s8J
%m(3e^%Xn0<p\/TLkNMQlI/J,6ou6N9<^2'Lc$oZZq6TDMci1sBNcBn5hnu(3O[f]`GB6\^VG-5KPU)p6cDr?ORDdJM]YPOD[cZc1
%n^IMmGQ/+p^Wj(;\$Q,4Y@r(dchdIXkKdJ!;3fAS-r+Dd<0m,81:-^Y*>_;%eN#ab.V;d#bnF"mXN]gHS<R+^[md18]ZPt4aO5@!
%VZ+Of\NZT$Bpsa8Ut*+OauFbg<#/>q\?9hhBfStQ%'&>IRcfqbUu<d,OQ9u^^-+f]IZ&/Jdarb,c\aK5gS/4b(+'h'GkEbR_AMW;
%*mLA\"]f5_0oi2an+fST4Q2E'o/KOpf#;2rZX0L#6"$Ya#l6;*N5ErmQN3eVcu/@5E1D$Th`"c]IBs%G0=F7ARrt"MLLpO($s35H
%!:o2NdK-=Kn&B7<SMJMX-lG9g\M=/!%X=0!iO*s]e#HIe5h+Ao+R87jU!(o4(tkLg!,@9$>b(Gnl7,/OG+iLK>!PLlPoYC$okrti
%)8j&d7R]F8jh_"h"g!qJDd@1ZSlWPI!2-d7"]/:h%Ga4n#EnIY$_f\Bi7b!1eYM#TAcQQ]TOg11P:hHuC,bVp>:G^H6r4aI?1]].
%Gmr35F`#XWB[h>lpK4J#YdDs;T^AM%n7]:7OL.@\Y"a6]9j>q^qOtlIr#^De*&8k#Om]+</C0T8'H'a<%*;j]bY;*517BE=[2f>e
%bMXCARX%l.<*<WSEEJVO"O]ms_pudml#UaY2Obt5'?/`.p*%79,j@G9(!ZueMR^MU-e[:NAYQ9CFK5c,)3KCt<gMNMOTHo=T+h3q
%+$inH#2KBip<ouC(feNG>g%-(QY@!&ZX%!R=Vb>W>@DfFEBOR2RB3WG@@POe,[S.teEAqar;d;`9BTkkV&_ggHl`;Md8j0*lI-s+
%-RMMQEo8RiB\2g4.a8r0.dN$H24^G;Y^3<!$UKtg!VlG"(:9<Oe*tedE\lf\p80Wr!lN#M?]6R>'a\c0E)A)HX6)uS`8$@#'In&=
%5\n/ZY(u+-h),A=f<eOlk#kqi?42b882(S,63d#fdZ3ns83r&5!(!$,Q,u.>ANL9(J8$a#Ppg[gNrkr@'d+9gg?/m2</tGkf`Hs;
%9,)>:<YVZ.&>Bft2:/^\"Db;pV>=)H5[m@'eZlB[;CV^?-/s)$Paap5"/mP\-8Q(:RHc=;8Fpl*ScKdAr6R!PWh:i1,KPRS9-mE/
%WY"l?gB4`]<D88)_mT&';'=%U)I<j</PC?)\n55ZciL?(l`+gP+&ZbL-^G+Wmq8giFhA'Hj3M&pU*P<@Oo>?\k4\B*8'jC_?<r_l
%q^9p\5'n<>=]WgU:<O>:++k9!_6Q<PiibRa2s2/)N>DeY<Nj]o35m1W3+$$aSc58Kn'YUlI5E9L]Y*eV$B6]^]CYNd$T'elI=68g
%.e./T;?(t@r)koSr/97SJ+o3_;5&<DWpB9JmFCRBCp?"ros`3-Bj8Eb<n1q]?&GD[^/RSC*YnK9KrGK[8JOr4Y%8mFYV(l`#-OqQ
%'L/FVEcq4(%JXeZBf2)%iEHn!'E09#<?@jc&tARJim3`e`OH^;m3fZ0[Oi@aT((J](ba[VG_=r5Z?V/snajM$TWWZ'qrMj>HFAOl
%2IGCoJA+:>:a_7c-:plT+QgEHd"N,hc\mrN^X*KEQt\rg%b`PVdYmid!>Z'?aIi]<cl=l):I1o%7-fR+k=LB83W;N#)-0cE"%@@b
%!`/&=$ofmXqF$$O;$$0lR)p"k[_U&fi+3<ZC;=a<W\Ogl/-)8>mnt4#f9U"#<`oXJ;?k3?L4-FGaVYjtaoGR8j'Ff2`oK9\e;a6e
%[%GZcres/L224!^K0k2S=_Lbk5/S1W'+rE/4S$GV%t:gs`a+rX?5$K$6\%@'#k05+'K72keT!I_-sui#O]M5@o4LNa87X;&8[/-!
%fsf:7W9f\AqH'XU$Nak-B3m_ok%U+DbeT4[G]&?0K="RBFqkb.AC;i=-*Jd1]BLnH(2bmc?ns=/#54OKeB$6RH.Wm^[`Fqb?$WDq
%]8956j1L&S-4e-4^nBZJhm_[)05q)h0acNQ7;G(E=a/-*JBREejuilc#qGQ57:p/7<p:AlPT[R:r8-63Q\'_l&l%54&#eb.Y(t!<
%m@U^%ru>:HR/p<"ET3+XOFn\-5TIq'Wrm>Ffg'N_V(>M7@V^3"@o?<qe?@:>?Od0%8I=ql<G2D]1p7Ob]a;Lq.ru9s8-sa-J]:fD
%dY'E-$<[]kTc:@e#IHH_nk@!/U.C])EW9uIZI6tW1f!/pV#TT4TNs<K]pfUETDIKbkQ_4^@"FD-mm#IM<PP'rq$U"EM[6[<cQp/*
%e0cWqmsj+u\Ze?/h7n1-fC*la5Aj8?Q_uMn,1?rd^*?0+of$7$AH)4EGPPS>Ts;rH;UOasc1Z;Y:%]F9r!LauI-hsrb!u/*,]JPi
%aXqM/]hTGAQ;kjL0IcCur$-9)eroQb0DM1#b);r"Lcn<`s5E=:g[cMqQZ'>\="M\rqrZo1HlEQ@;!>Td/J^$i[=[ZqAE78*L]tP5
%o$EP>r's;tbM@(QP>qGb8B(*88?:/obHWeKf5hKK9+m;:_j[m;">_mq`<D1?qLKpr;oKXGLHLFa8Of:^jN!ULI1b-l&_Tdt`Lq`d
%rdXXu[',H/GoZiKhToilK6*4Yduq;=mJmPW0SGO@"EL-S(iTJEfOf;>+8fIB^CEi;[Z,:0g!"oOZbtF,SY]4iP,^-4OQ.F]+NICq
%j>9ht7oXe4OHZIoZZ,omeRR*-PXn)WF:*&)E-17laO$bM-R!<Oabm--J**\]X?krGn`2_L-52$_)(N_6p+r]k:[9A0%[Fi<RR'6j
%jQn]%E0.Suo,ERlDo-usb;.4,Lec)qAe1tpPD2Jj9j4XaqRfq42IKL7U0;##8^J%ac=7on!qliF=dfC*T;TR5"\&^l2=Rgf<@ip-
%!,^pQAac]dK&]4NN)ifK!fI/i`V%/q&i<eE9F9<<%"CWgeX=$:r+29QH$:'>dC,J,LM5)uA,7"gUaM;FDaetQ79Yq+r?2C[rtC93
%UY#P5@K,Y&riJ?`et.A<R"'IMs!ePcZ&X@M_jg^^QA3N!+2O:54j8V;hr/!e)B,][^`+U(-hBG^HfGFTC$;]'dZI,bY,+QqB.nGg
%SA!sJ9k"*i-*gMBomU\seQFu2XdUU:>p&[K\Gl_sj54b:heqR]45OfBO54^RXW%4_1]LL?Ik/[Vh9<XibWjk,bdTdLK$<+1o5DM'
%W#ksSTaNl%+CfhpJTf;?Ve%<OX8n-ldDnB<Q:klt'GDW[Z3lds7'5(mqeC2J=YbsLoRj'KFS)>Zd6WC?K&oSao4m8$,W_aC/-5DG
%dJFC/<kkeA`ZX(iT1+h?@;>FF<<!$ro5Eg_GH0!h9?uX3PXt\\rqouMriJEbet7HXcbK/9^K>t\6iG]6U&IaCEfGAB>>]lF@_SEG
%lHe_)rg\3&%Jo\lX6'!*8P1CnC8`upeWOsQ7=&i/:dt0_UUXnlpK%6mhL:K^Cc.I79'$$;%>EuC^GX*i)WYfGo!\i!f4^7<s%Vo1
%,fLAqef]Ho#&.Qm39%bmOlHOINdVT/)rBJs63'4$k84;%4*"LQW/n5\dWPA&3b3nM=Ib5tVC\JZ4bS&m$ok9G"XNIf%A09s.U6qF
%(3M_Ydt_"%BG!Z]%$[l&@.N?#OgtNlM[<J902!hl/KIp-U16Y?r+^rJ/8D&6N@7'OrIB5(;t0e@0DetMrZtP/iNUqQ\.TWPE*TCA
%-G:=>6f>bUmmWO17#Z66Z0"lgMa[CcVC[Z\7A-m4ScY"4bGg`)eHV!^ADoh(MDYg+_*4&D9,P$-TN%9<QoG,t1)X3*[YSi_"PP#P
%+@"A[0q;%l?Y"k4&IVN>GKOZD(+2Fq;6,5@l"O3#A(1rs(^l;$*,CZsTpF+`N#N7G?EbZ3[f`nH!H<'fm7`,_5C,ulCV-`u;qJhB
%!S%@6c%\QTBVXe!LJ`n!a[d!8liYLc-qig1S1udU1Cbh$Bu0KEXV5ZbP_n>:d7'4]B_HOVn>[JT78ek?aGN66$>Rg_L'7WiA-q*s
%UZRN2A(=,/:kfgb%-pSRP*RFp[MI9(o_X91%Y9'?+j^`YCi7B*nXIF#&qtaDmGb@Qb!uj)=3;X*K*oVk76CV[8#q5e.?9].1rmh6
%Y]E;.1N+U0Zq,;Q"[UQU^JDE)&/_R>#Q!D6bpcX2`P`Tl;&<=XB;$L.$uJ<1YiQdt26rG`[-oAV38bO&n2o@E/n/$o12Vk(PnA9c
%JMTb>UsG"d97WoI%0-TYN!Su3NrYl-SFu!"!imOr&if?H!im=fE6E[M.<:)XkpG[$JYS[d)PM-h1KcX>Zs+/Uk8Fo)o/TLSnXslt
%aehP/V7act4_8VD(LV>NC:(R9<q^e]@fm$oLk)a!M%/Yda,+jgJ]_a@)$b*`i_<KPs!%r#2Zb45D/jD'Pc1%6;Ob-D;\4X;Oa>lt
%"7dY5(kXM:MM5!5TTU]4=q+oSq[hu2)7J`V1hlZkg#'Rf$d[H:!2?p*'/?e_*#F3)Du`FX$Y-q**@bXfA;jY=J!?:6"LSi9nAM$O
%fJ$nQc592*C,*T$&4L!BLB8S81G[3IKf8Iiq]t67(:d*EZ#T;21IkUk?nE8,Ad^lMN<>gqC=m,PWGr?rMK0sA4j,P_N@@+F#H+qJ
%->Dj=3`bUKaFW:M4V4PFd2WoWD\IbbNakWA(a=&/,I1ceMui4#R[Xb;i=^F/+)9H*T@>+peBYnSKp&2R4Ks[$="$E8Kr;RcVgbk>
%Gr]!u/@3`)8#fn^5FCuDq`GLW63!_\r8_:&=Q;u4)]S-=d)+donqd_S]NN/hecs>9N3#SE[_B?!l8SAbOR#;\P2;T.Mi.!49<0nH
%=QQ3g-Aju(fK5nMVG\_m[W%0.,clRj*$`RMKSbPM'DbR/MTI@tJDqbO>ffikc)tudCu!p<$5+Akk#,$#-MQK!:'Ou<Omsr.JU$(j
%\2aFaD24:B4V]m1VFXf(.6A63e:$6HhkMa/hmr[KG@1>NFBnb<j&;Zo62kgnK#(R)p=q6D,Ud(<`2[+c!VAZY8=erg0R"de&-^F?
%j&2R*Wri.sPW(^6Ve)mDn;+JD6_.J$XFB&K#kX.1*9;kn2AWP5j88H%CB4fAG^.4lHYG7#3tagN9Y3bJ02V`/6)25_ds/((@#h.&
%aIlJ"<6A),]b1afW4J;=O%(,b?e]r#gNnoG-AZK42o3SVi.6DPP;H3=*u+&t!6,M+L.t<,IKdd36_a'V";<:!&r$$I!SVQ+-FD5T
%4:#UEM.N[5eBB1H%BLhs_Mt8e`h8VbQlSEtEoRRtR^+OCNX2IYNYgZe#C5.@f3up(n()GF!+SC9E=nQKeUu3r@^;e/BT0()!&J)#
%$X7f_)uCu*SMXa<\n,hTLHrUZ3QM^gClCMB"Y>UP&TNC$pRI9oa5DM:ZU[k:;)tK_#JsMZL*k+,CJ,GXEQMQbR)O6>;.8St8P-jM
%B/b14q+%WLfsJa&j"2o%Io]Gegu4dc-.\U;_`f,-V_d^M#KO_$YU^Dj.gT+"RMQH`#s`(Z\'moE=XXXH$+nPT[c9%iI7cbiPr&-W
%+OK6k8/]DVjC#4Jd0%/J^n=3hkpbt2HS%^M:RAUPL&id71K9iX#Ln*miuopG'oeI&XS9HU._F,Fn+Iqn)N<,d><u7tA8tAk8ZE(6
%bT?/jba:+aV'u@;>f:E8BD*f(XoM&s54!AVDS[_r,uH(l1Zh^P).+\0&gBamYb%E[P#AU<=R\W0"D%[<#!o<M'N6Mg2t=Wb3^S]r
%5aPo)S`PhKchd-ARg)DA'\17*8cE`<3un_SdiEk'Puc$DbocnNd5qoJC,?,=&B3LICc\4p%qmnu\6EBMTP*MdKe_m2Q3fW!V)+I/
%!U'u@N!tbFG"dE8VZ_@>1uE(:TI"rU8ln$Z,d0Z%o/_HN&Z=3t$.`[(l,1HHj:Q^Zdiund9Z\_IM7iK$U)Dhm"6**eiYpq*qj:&#
%$3su5ZH.6g:Ap/Q!/"^M:FW_rF9LLa$76kTa!;VA'YmXo]?MQ87]W@*=fQJAWguLo(CJOXc6%Q[fJ:Sl!<6%Fg>J2d!5t#qfokQ3
%)J\U*j0?dk[u,qU5>)J0f.i9tB^%X45Ta0mDa)/t6]'nB8B;'0rM:h8fQ)=GUfm[ICf+d-emI9#8mPtQB5@a'3"YF8Vna-k<p!i#
%F-(:WlBmB%)3sA+igukY,Qam!nY:rhfSpV1EXb5Hql??+d"4b]YqrV0GiJqeo!!N>j*5FOKK(\mGtRH]4SiUa2#7=-kCMVIFdL'@
%b$"&9HlbJZLB9(Y1B/jQ_HFn3Q1?8P.7V6,I=GK^93d2qd&osR-ibuRN/eS/Jg>MTgToYImP'D)nXa\nI,J\;`1`7S6fK5s=(1Kl
%_^7L#7f!4!B>m4l\/Z>Z@iWOk0V;<r5"p<'Jc3V:DKHboePV];:q5k3R>gN]:i1ud'.9Iod%UYU_3-B'N4GTZ8n\=OlA14/0FK&I
%:]UW$H_dNM+<KjgN[%:@A28(^C"W3tXgSh])RF[/icGeIjH4R'b/dpu"$(%J?!>,1]Zm.I%1Ab0=A8dKL2st)DBL!h#1G^YNDlS:
%`PdhZCi!Ot*`PUi40>tWgHl<IV/(0]@F3<p_Q>YbrK6cIe;b;Vm'-Y#.@&_)F9]o=P\/VjLse/o+qSub')>,[E)d*7E4otR=uS-(
%2r_YW79TciNKhL?qXE<*d*f:40<$0_JOdW3WI_k)1^eV%XCLR/XSpReBIq9:Vq$W6Ws:!rEuBBc4f';$GihJ'd">k6;QD'c8a^-5
%L!eR["@^,b@\3e+!/FGH"C/`62'ibMLC:hT$cA3Pfqcrl-<R6Zm)$cJRDamtHE>jhQ'fH^$C?>VF;LF99#T.t4IOjnA(orpVo>Mg
%iR"Udf[q^1BYXuWAf,C7KbTM,5*\N?.VJU^`nJ!"a^;hKR4@N9M+"(.J2+7.Do'7U*S/)MB4CSO5]8Pfj;<C:g`Q--V0kK/cc;$'
%b_F'!&m79*e[&E2./US=KRr4)e97E/lk9K:?gRJE2i13^9"^n@rHk2C+FHVS`COFR=\]@,3nVLR!dHn2heG-OE>5e8\c*+30a12.
%h`A$lHLGCg/+FE%lW(gX];KIRdTr3t7iIa-0(i6N)9rGM!;bI"'-R_4/`=1U%;Ta$K-Kd$-I^3p?r=(:jW7jih-?F#%<d)g,n=g<
%!U=Yb"<VC>]uSMG#hOr>2,GD.RAOI7N+6>'O=`)n=_t?_X$2mjZKWOrl-1@c>'UNSXHegRj0H8<<9Iq*r@$.O+[SY9YuFtEgo<X+
%[<)mO1,/*qS_0p&Y+lUSQk[q985SVRFCK\&-SZ_N_5]p-'i,iX?EiHHV6(Clq`Akc-iMkBNW_eMEbZJNpaW.lmMKO&-`M,Ib2J48
%Nd5rf7EJs%l&@W9,%o-9*[HN8rAAX+N3J-=B`#+_NJE/b")9%WML:=bbk\&?VsZWJcGpZab@_Bn3'Q0LCmV/d\sZnd7#`S%7p?UE
%pW_aq4`o/Q&h%s329%<g4;_%^p66lW]Kn):`bO10`^VS@,?)Rn<KhXN71UYU*7nQj<$F`pUh:>EPYQ]Ui=<Mg`[AJf-W7kk>$C(W
%:GJPi%\>%ZLgFSTd%V=F"X']'6qb\NUk^IZL74BZ7e*"pj:B'$S#=7_;hZtl#(i'*jt5]!@]qdS(ntq)S4mA:1L:P*R]jb%G[$6s
%m=D763)k&P;DWd19n$RK.V%=`Z-#>ODc8?!/LUo/&jGp=Ht&l7<]Sm4`pcV=oE@\WK"4#_2IK\gGIHs:*EM!k6Hh1-2[]o4G_u[b
%'M1F0MElsHRR=*/PNp=4%,WBU;9:"[l+?U_.hL7lh?h=*E?qNY,hHK8/9[Z'K<b8brKQkE(XE='*mh;OUqn?GQAWU,;X4e_^lab(
%G_BM7,$bO[,WC)O&b^Q'kHhEGQLcXbCbZ0TXFl95A+e+#$+]<O$Br6O8Nl$cQha)LIME&(n.,JM[4M.Q2&a3mj#M,5Y(^@>#%\G[
%UW4bEX7b=_1nY:.V$!BWLqrN?@c8$gH)Z_Hk!1k[Q90>4E$-;;b>P$:M<VNeDJq`D#P?TD*H4h7Qu_'M3$)[rN?Xt2ab;,^b<5Qp
%)f%WA4VDKOf-q0[M//mn3FigfEV.jk"$#"7cJo,r.dMgV0BYHi>Oc^#Km<n[?">CM<NJTAN<V'uJ<o4)%N^;7nZ@D/n%<Ld":jQW
%Z$*K?fjJ!/X5c27&aL[bkjV:4m;Mm@%G/oBXJ*KDnSfZc>>Gt/aA,4`R]hP;/0d`3j.k76N)&n,VRuOs5`\i)E@VgEXRUCO(c303
%Zd;L7_h$rlChMgu7@.9!7satJ*7-?s*H4h7T3BV.3$*OeZG^.gJ18adikG3X]$<d/<6UO..sAcp.=X\CTs=>r-D95JdoH#F>1Xnb
%dED_Yn,CkcN0MlS//<00eH!Ymn=E\hVPNmdNVc1T#rkt"E<$L4O!!_%K>N(@6)11\p^sQX060J).a,L%@L"D.R<LR+a$NLCT)>aJ
%N9tVQ;JsMXi.R`Vc]eA\ZGDRfm4ef[p.IK??QHtVPJY0kHC2oIZT4,&O>!dBLL,)WWWDdL%CfdO(?iGnDS/9oE5K?B;(VVV0`tBh
%@OGjU(H5SJ>\@fANQEr2/<D8[[Bk@(Yi<i>o5ki1hHo-H.))?`@_R/W""aUH5b>ohL!bC=N]*@/m1=(A3?/b;R?i`TC-MD@Nkkeq
%+eouq:tX)FBQY!q5=Vr/3h`sF/Gu>(>2.e#dN@-M1MI.R0#iQ))1ggVMEO@`7@Bb(gDF,lKI<Y+<_3;`>_T=]'FJX2iMeFfRfhI`
%/D]K.4Gm196EB1@oJaVQ&0.q9DM6[4#).[Iqc:bBn3])D*ZeMTDa,$BMg]">Nku^>,sI1#;*6f.a-'V:V2sUopf&S;2M)C"6tB<$
%,i\-"QnUrgntu!tCH%?SVAN(;Or.k>Qm-f[@fihenU4DOo`U1b=ggi:&Vle7ES6]$1@_Ija'bff_CbSsUp[RoiXR%>B[?C&*e(Q[
%$d^ii`^9(K`*V$uGatT=p.*5T%m%Wt@%9iUiEE&&\#f'k>g6t`SD]HSZ_<Ki^+P=[SoE]5',RBcr\\n^n6;_;1DFV>*]-a,kT4:L
%@4p"e-j[+4rXT&rrCd2=)(&Q]1_)k)kU5TR+PRGl:gP_9HGjU\Jt`886K9;1Hc1iV"4$4qcn]*3C^d^]n6Y$T?'?D^nXWLFJ4^XB
%9]a)daS1H#DB]M\1IJnsr<+I3UA?(td[$D*PAV3cIUpaCX##g)0,DQLb`Q=H1PY+_a*783ebK#oVgR#Ur\pUO9I7^er.HI[iZ_/j
%n5a74T0\VhjmQ5>M6QH7k_Ass-V.]^%M(o0he.HT&jrpZn1lXH0f@Q<]o$HIA@9b-h')lm1(G'+^0d/qKuTEgMtT=:H9`0_IL9l/
%YNGYSn@ZG\UYJdCR;6Y9QMi]ZhWN;'H70&?jB>;W/)ZE!8OO(0o.)>g/.K;<!][U3^c82A35heLZ[FZ9fd.bId&K)p.5pO\['$6W
%3f2-:iQsQi&DtWo0Y3%bLl,WhoNsB?nF?uq*0q%P`#q*/"C5K=e0geB.GhVbQn&lo@[no91;5r6*+o_!%>i.Y@A8upk+oi160G/_
%8(+Af54Q5;GQ[`2T#1]0.)L<>EFNbH.G2mio4X__:cbTHUu$sQi+mgI2Ojim9M__tCS?sAH>kWu/Qht?O^#k"@LlB#?M9>WX71\H
%Ol%7%s'&Otn'%lWL]V.8'HFcT&p]fsfU54`-m(KY<g-+6-#$/ih+#H>K7)-H7VlMC/(24KfPHJg2GtL01;;0_CqpEr2%k!37V&2E
%OX\#V_e8A)]?<qCiQ3J-m^?glDRJr1i+M"KD$_Fpm3UjQi$aUAY/d_5;_+Vk`&<!rO+)eK;Z[+mSVRo-5@B%irsOA"?CXDkPhJ3t
%Ug%"-2UE7%PgNQl2p7_78t7KV]Otr+-,,"9-$]?H[&iJ*>Xhp0,aAM%.nNW$)F87K$te<_jcb'%TEXUKOB/M4a9QN\70,+4c4quJ
%b^qJbJ9ID"IMa[m9W8&M(DKGM]FL@(TfH:\)MJ]rnX29D(DGZam7uI*-kI,&2a^r(S5=Drc]gF.c_BoJ,;)@(EAje*@SdXllr_0X
%B%>RibW#%eC3#Q52P&&/ku^BA&b\`aVlsFM^FspP[I+GlKcrrDkq,)uUgf@ZXI@#WQBGd^TeMGYYE$6@n3\+AKd'L#/")MKiNJQe
%&UTWGBM@Q>r+8Hm%dn6G!*L/Q9o'UO"Q*U>JONUX_lt0Te2#!9+biVo[iFq;$K%Gp,>NS8P=arm8,$$+O#?,ZJ[Cc%^uY)G(uQ@J
%m#[>?*J-Pj2NRJNZVN'G=2af=:kB:V4HHqJ*+%L0?9EU;PORm7`@3ep/]G2gGGucR+MmP+oCfp7$KMV2X'g"p.tLL)E-e<Mi=hAB
%Z@s#$;J@iKNM\'DM."@`/ut61nX%()+/DC-S&&'lYgMuX(NP&rapA8%j\V:58H)",'OG:EjJWor'lc*8a)'i`kTeY\"]12RT2:m2
%8$T*];S]'mXCJ-V@=+%J6t\&?UL'Io4[G-crW.j?^NqX7Y.TUf[Yo^-EkErM;*^B[V\5iO+Xeb</^!fi)>=8t2A9qJZMF&9DP=1&
%7jP(GI1_\7L`Vd+_M&11Z*rMVi4:_C1m0CL;JE5--l27E4OB!^80Qe,'7.I@rT%n>_i?+^;K8(*<m;:uN1k#>@dPU=*08#LJs!e[
%$uhcK=,]_:(gEB5G4BWBc.WhmXGeu#l<ndKXZ?l_bbm$A7^6r7K%#rXAphR``6O,rZ4>cc.)kBo(7<PhSbRFZ$*+1K<_<h=-ZmZ:
%T$VHtVr$0mU$A'h>DC]S2@""K0SqkQ'erl0%?Z#kp_JsDm/fYq86+#aN3!gihQbd<P/[ql..C^h+$<SChBjqT1GJAbM8hGcl'M2W
%hXLhbK_u*hE)KDP+\(n:4-6^)!bWE+T71N`YO>BGZC1J!#eMWClA'%E?al,H@lBPY+!;*O2Q"%$VYP'c.^Q(ZbgV,<R^h\4UcHZJ
%6P8G]0lA'Tc.ntEJciBT6X/3;-B2hE\cBMI/!=E]`bE7rNF=Fq]7EnM+p>*88ZUq!0p4ERGcM2k))Km#XC3FQJY'-'nE<<5YV.a#
%[0$0_&ZE"V5>4VM.g+aP@tfK&paa5:M4jgg5SWNAGD8Qf36AWTFQRW#lVuR0g/733`J^ed*VrTs#hJHE6F)g7fO7S`9VSXDocYf1
%&qrL*L$-?DBdc9#NfZUn8Wi"T\!R9F7eR;uBPf6]\*Or26X"77FZhS<1Smu-:FB20FHhXVQjoo9V`-E%JJ$BC%)#/K-*g9Xl^dW$
%.V%rO(\s=-R?QrONfD-kP[`UQ[Maiq=,S9EBf%fjr[]%GU);$$q%8M3=0CiGPp9#m.=l'&d^nIc%([^(i]%>QG*5T7T[5Cq\hjfc
%-*c#*WY9afgH%c<:<Q1eZjBZAj?udQ?c%E6AD_^,RNgG,UV/=7fb*,3M'ut?lsA02"$,EGRIp59'OBN\qFM?M4YE%jc@C:7`]iWe
%0&d)KeR0a:#fed,!AJVEGcU1(@+H,K%P.]<X_j;(1?%E\g^%#^IG@<g?-OBUdq'6Y/[[]$<d_*)h==V")dA'cd$(a<T223O8-/?l
%9"^$7HpBaqit5"+N;"L$'\*:J`upEUHG;05+=nb)SL*@Y'"p-s@Y-t%UI#7a_;5\+CPeV>^jGUQ!ELU?.D.I8/`X5nT2!?!W!)-&
%;9gL"`XbN0*/!J6/"P?S-5M4D5TgZc),(CU3iQ]mM]6^U%R+^-c9,RA'e**BSOu;KFjK2Hb4(GbpZFC.VR??618j&ub+pQcZ$gB1
%:7V6BB)n:lFY"TjV=$3RXR1H.i4H`iP6kMG#0b.P<qEEs+PX.[UF_o:]\)h!f-XhGf.)"nDnl0>Y<9[p=?_k?^%#6$i<tD/ES-BH
%Ork3DO9*'gYOFG387]WPYlp,=@`m2*N--d2h6s5O;NdWL"F9&^k!P<O_9hcbFb7oYV4s'_;l[`!#,Z)/o#sY3qlfA!qUM.7c8Xo!
%h>#h(I+52Wko+hj@GI&bHFiccH[GD0<g:APqIu!W:!.Yp8F49>VKO^%7phk"[LAC6p%9`m$\K9l0iKD!>'FUiAR&%i;r`iA0KT8a
%T&egOcK#'+n:a[I8N]$6&+oQ%O#AO/9Ik%(*!].OkIe*Hok<smK0$7&\Q5Wc!a[<?hCL8,HbKb'./[3.R=)$N2nmtHnW?*k_ueaK
%o'f?YLHXRMUpVu^UIa(%1Z0DD2GqJfF<e@uj6\p)/X/E`NEh3$%.[/rBiJ^hG/^5#.MC;[#)^!A$0'o!-546ZC/l7jT<IEhR0t,N
%VgKJMif,6eRQ0Qc3QTipDs6^4QVc^eU>7HP(nNF@QQl)0Y@7#W!a:L:`u%*tP]=%*lVm/b:OF"V*"G(io5BrZ\uMt8:,!H=EX.XS
%hsX>9r-[LcCZeB&o7t#5a.]M2N&Na^42q6ZI4t^MHoLV7qLE_#h<_T\-c`Rll%/^cY@G^X"i5(1WDbK+3]")0?0<!Fn/.W8_72Y\
%4@5eik*20FkkM3i.@R9L)aU+GYW\$&-AA#K*XkI)+q<E46WasOpP=??gen4k)TtA%EP^3\D*[IB"[,`%2S91F8Bu7MWtB_Fc1)M,
%:?O<CX7Ya;:&Q,%)[Or1DE2h?A.UBGI`!jUOb]dW&b$?i@5]rHlPpldc]n66ddPdOT(tT=)/..<:)fj3T<m\JQg\("C1H87dkBUd
%o%_*X[HCo2DtSD:PLc@Uq&Tl&#NsSp8_iLAR(Ul!4pGg$bq"b.=)qVE]H<mH$I_.8pRod-OJZA=NfT'6qRj`PjaY)s]2<+V;'[,&
%rg[jYpgp(M*;K>,n:nJG\(<4.-Lqr"?P'CTZi^+s7e<GmIrOl%G]\BP7W?!c!_V5To5kr,?CQf!Q/aMC@r1(V'UG+Qla*c`pjc$e
%L)i/&VkX"'+'ppcP$E`>i)!<%KFKIJ)g>"!P5_,3-D:KCc/%9T\$q's)IlWb4<'-nIb_OMH\XAn1U0L45%\A5KH#CC$"$hL51IHJ
%@*7<!ZtFW.,9\s/BG]N\MX;pi/@*Th&sjaAOW1XmH@.#rmsKcF,Hc.JPa.Wm5!(H^E5E3S'OKTmmP)Gd"%@6TeXT5ZGu=)XO:^h#
%#V\DW.k0R('N"iR%b6d\[nc/G2mH<!;J'P[miLu76,`;])##Idr4iPPg:QouA.N*;`!6:TGY6Y>g>hLhL?fhkHX^Dd4P[;0W:7fi
%%;Q?1NXn;V^6"QX"T`Fb-410l(+%9'A#"^/c)g:W*DEiaD[l1sMY=m>:k9>S!G?5Tb*k)_X=2KP(DWjbDB\m$"AMnO6C(Z+cg-7'
%j!2gii+\]RfTLs5aatpGo5XW*SO5?*ZfIQ?LOfM)q=2!B^+(n:aZt'i9on-i?n`H>)W7GN$mt[leocbmrqQj?_JEgkP@L/%0+,?F
%i,!\_K:m'nD)O=3h%?;k=I<h1[?F=_qpDN<gA-m%iLTJK=DGb>WE>sME(-uq1@7XK:\Me$`m18BdVoi28A`>s?k*KSdsQoQ0?eEW
%k2be>hWmIM"2b<^.6-Q,BPnJ]X%QEY@f*mjI:<+dG\UcAV^#%j^*g<Lit2fhZt&G/hC-Gb+qs?b)[#D`NI<pVinZSTG9]6jiuYgW
%?HC1R2)Cg!N6)AqZ:o,tWYc#Y_%U'%X1&-H9_.aW9$(3iNt]P$ngl99'#>K*jHH$B-qtFte:72gL$OLiqgAhh3DS>-q-d-QDnk:J
%Zt4Wg+BZT7$j=8IP+!g0*1o^R#N(5lVY"J,N$/BOU64+G+q5iMbJk*3nBG])^/0M@h&HsZTi-o7iA778*65]=pd2bc5DuTS:=D=>
%2,Be2O)2C5Sgn;)-5fh9SbU@Epl*h/XTXFY/!P/A)RSc&C="a@0R#0LK/"-R1E#gB3OhWK8s@>fg<c[I'=Yi@9W\@^GHLeca*]?Q
%Bn!7lktGNTMN@mSnc>7MHl*g$>M4)2fZ1Wn+SJq/k6j2K,F7gULbI'Los<R<V1*@:&1/65eG(/g3c\)]l"X$GEltl=j(#g1Z0=r/
%)m[(X*1u5f3ZDiUBZJpS/IX$"nQLjG#CPclh_F+2e3%9t.,$U58m2`dPi3m"(_N@fkX(UQk]W2i!c;Y(=*sEsIYp'8na7Eo:rT*h
%::5o[/XT3?4CI*JH$HTW!p6(QeRf2>q'UQeL]76jmC#&k[s1GWgiJ(k>lb=o'dftI;6GI<V,m'G[!1*W.h)uXVsVo(Df6n!hShtu
%5GFKcS,%!'90:Di@bZ<`Q5!2^FItBE@LZZi5&iW70RU4?UHh;B%?sTEnK*hP5h7i!%`Vi;#RAN60p?jca[fK+-s:4`\;7K@0t3l&
%O)2-Vc7,5:ThU?r4CdX%r^;L<e[0GL@&"ul5?]Ib6q7!W-lWDGd#aY694FHX8VNR;.C7%QB_L_ZH5b%24fp)P+IR?4nEt+7&Y)gs
%V'<XVr9C"?'_*>"XenaV&p%/nQ`ku2Q`q0[KNfqd>N(675+FU@WgH98;R,8,S46sX,DK3)>K]LNnuZ(m@QV"T&e8h9!;RL/X*i@;
%l$j(cWEmTn0tMLjT-PdeG!7c\(dY`52c#Rq_UYsk#D;bR7P^B?0Ph(c4L#M;_jPoVrO!YG^SW5<gesm`c7V9dT$2B?3KUCD=H,tq
%Kch08S`5oQNkfA>3Qj1?6^j3+JRW@S5q<fa&X/dn82'O&I+&,CNPi2[E7Wknn=<pS58LLeKh9:30nM4ROo,!&hM@3pn`=]1GR1M&
%8Wb<NW1R0G).eHL)m.E6-j9U7=Z/aL@O*/?(pUYOAtu/:&K_9E[k^AR(e)%.-%Em)^gI9GP!E+Gl(NKSAdU=jGKrkMq3U>-C1KQX
%qi]rfk"&[0rN+Pqep$Vg5_c8&BLegLQUVXkQNb"Ii*4n+[U0n(rK2LKd?X*?2RfBuN?]D?i\%5eGCd21R`1I)*$pK:`?J:Y]Tc`P
%i0^8j:s=_\Z*E.PJ\m=L&1F5);f"<mLU>6eBp3(UT*4u5.F-uF\*u@IGhCBA+h+_-;)okXHd[Mdb!,A5?:WZg!<`#)3+j(c-quZN
%k/^`,n[2E.VX2aE&S8#a(\(3)5T5AsM]VCjm@^9T2I-p7bNbMGK-d+c7r"J6X;&BE`]$U/##S3!j&"WTZc$>jOcCa^jU?/!L"5_(
%K[T+`Er<>Y=21k]]OusXYmZdq>d8nF`TnG0?M<c[28*[U@b_n9kMJ//GAI"hiH';5]S`e&9:$HD+?^HCjmU];S:tKAUN:\t/BCV;
%>E/O`MeKZJo(kt1UDIs.QTX'pQFl.eT?5)(0?cD/K:>slM>286W9#m8:SXf=e=Q.M]GPdW:"!$I3fF#8Kb\kp?HguM.ucF&miNYG
%\m,,.G6jt3T=8c;AA_dRq2`RooNTJQD&o7bh^?%.!@=E(ddr)h[=:(o/3R`kRg8>0kt-B.h7n6_O!Xe5eiZ.a^d^@Jm'LTV*LPqT
%8X<,,jjK>WRdbU8-u:kZ,HQu#XY?Fs\'[0Q%POoVW5:@_^)"n4)\ZtRo4j5N[;ur%GSM@J-XBj?_a<,.B"-O_].ub]Fr]<EV(;Ln
%mp?i.UKc%Hkd#"@'aUMCUu+]a5FSCn5o*?nLa`*p8[%+Q^dmTqqIU8'VpFuS8!)1HpFl%Y>ll2/qA);tD`'S$"ol*3#QO^dc5H5`
%A[q3)PW8V&q^[!<;3!dIl?+.A2oR`m5H/][MK8n"Ho93!oG3k5*,p/H*dF=c-)[h`R4VrmmN3'D-)+Du[?SFN&lt)gSB(iYFmc>'
%EBG2)3TZJDksVIQ+:JjnPiLBrMLQDi1B,P3l5TZm*t&Uk]mk1h)sSohIFEnj0O,=l$Ph$#rb20a$T39Cf]X:WR]0KXYhA9,\-R`?
%7UE<1YaK6IctNZ+GcbW]P\RlqO;Fi7U0)-t_=@%5>m'EcbO'e386TCh5`rJoi7pjB$Tjp<0b8]tF%XQC<G;qCmPEF:(/%W)"<%em
%ea*gGR0b\+*]@4m?TI06@D@$9SmG":QfBHA>PQ'</9!ne4Jf7N"$4n[U#+WZ/XBeaF$X#/cnRSb>-GP^eet&<V<O7b[MRkAlMUSu
%oCG7pooF:jake'JS^@.AYi8kJ+",P#=?UO(JUYWb(T<%+Qq]8m]SWW:J3'b2DR[o10`3.Q0nE?sqoq>ulb.c15J?Irp<gK4K1aA"
%Rm2ILr8*">GMr5^5Sc7>rFU8(0Aa_QNW5ubg2%dqS"8$MZ6j6o<]T411N[cAK#/]ZEan7.pIG,"a/u$?F00n<rtpFgCP&:$BT!D:
%kf<8]I]M9F(@0=cS"4GDUl.ECe8Bc;[h&=Pqcdmm"K.ndofAiWg!3rEk9F7kROsWEoM]@+l(4HqHD_e<G-So1=CH;BcTh[n/Ok[-
%;6i@d--bjan"fQIp-bFP(N;.a#5XtQcjrrc0<H7I_Mb;:DmoS5/cUuM3N(>G^0L.$:.s>sc+VuKc=b:."1*#Z@6)oTnB]QTG^5Ie
%+V=:loS7N%cm;0/FjN0]k*J&V[<m;@&Eg.N4mqkjiU]67Wd!05rEn`!:OqUMZqJsC+78+g$cZoOZ]3EUMPqp"qh+SR]c)[dBF92N
%Ig[&rQk`2tf+X0+-`fB(4gR?i(3\9lmdTj!2UPmMI@89CP:4EF-P>HT:`8^^9I#.mH6S;,O,6rPT**?RY^\Pm)8/T:6eTSGC&HO:
%Ib^h#.lYLMPP]X!a>aa!V!RAkr?[?j/04?8S/7%K4#[YU`l?\]rpsde;0-^KN<5p'#+gW!SlrDik0UFBAB.IhNo(K.(F/cS7'A6,
%3nS[D^Mb:gs6Hg`[RYf$e%]JM%org_W4D`k1+P&i^X45Y[.(IMH#(cFSVNuG9JE_l=f**)hP@DC"ZaG<8)K6/J[`t="PmkeNsIQq
%b<e;S@B]\QkMYF?4`,AD+WhEqUYTR>K:.#*9RcO!-NA#`g[=N^DG]T,%UkUfSV+giq"GTuE;hdUfCURAA,H+mK'2UmnI"5Us*FLH
%p13ph1Ka.YV=75Vl(WGSKNBBPn>7351n"/f>j3;3iq$BUhLULp,4>ZT&QJ6gZerk,g@tp%psZQ-$jm8UV`4TZ]mU605'YL-2G"s_
%DL90Vpm;n0!JsrF0Zjr]KSo85-bBA3:e"n"H4_Nl]^Sq_4=5iR&\$`?/ef,Fh?(-6BV0T`E-g=;PJ7k\j=iM19n'Z`kb+PRjbo4#
%D#D'/q2EHfqXaL<J)+=[UfZ-)Y4bMN`R8(4`+UoN7ic)N842WDn,[eQrtP=!frb'7@#`HiZM[Q(l#6PbM8.5@PJ;mArGNbV=1XkU
%=P$os_uGGqk;W4)*&V5>[>?mc<-FH_(*PM'4\IK-(d;=_'!oloqu^r-.NuRM'D8]R-i<A3!5CW:9O)pa1Z3C?f[KVF_mk+&nE/Eo
%n9nupDKeiNO)o+1>^t/-J'K)PpfoO1EQ5lk9=BAI%1=tbS)p^,^#35m`>@%5R`FgSYg(YLg7<ZIF)StKT^Qe3#%%650j";3TE!PY
%9u>?6bJVW0m=,%l0ZpWL@/9!Q@Rq/k"ID>pTMj+eWhj@q4l8Q$"nOr6nh>!IgE"$'lh3&>??%hfl.0k:>:gOplaPVS?SW2tdlLmk
%67+2*r*4Z(g7QX&4E+PbOaP;@B0s5LO2CH-@`"FtRUX3$76j;;r,@8YO.$<Xo:*H$VG\$ELLJ74+uGKQE_],A@etV[C<:rQ>jP,"
%BAMA.ZH-!ZD-:GHl>iEULl@ubA^Sdk9W;d#IHb(IB/0@<mGWR!R*/?#EX7`P?-='mH>Qf^d'D*9;OWOW@,MZoL-1FiA<k8e:%*mY
%)"V-n9`f-J)0F918NL2-P[-5*1e%GgdR<-b\J%^%"",,Z;j015Ja'"s<>;kj"U,Nudl>=d;^58+E1?&!`?-taD2(8I-'V9@blien
%ah="(/8l3?['HG.9/)?BA#Z9RGF?>J&U=stI:Eo;W!JG6?i)[6WA3sC7c"PeLWB\[#SIn-1`eYo7p6V60UVMiCb^bLL>0W^Bem3n
%O\2&&PF.3U3%S7FePT0`iJ]Q4Us>IJe4pu5(tpa-$NcT%92\Z^C+//a7kuu>P6n?a.\K3DkIX?ePg!]I'"!g9]F&8BnM#rD>/TQS
%?eDf#E%ru#cBeV[7%6]G(ul#K!Y&"fe<*LNV.5N!M`*ZbUI';>i\/FJN.J[0n1]Bo:!.5pgoC3b>5&Z=UgcP]+bI.#9V@#HF/+u>
%L*==RB8)"QG];MLTZ7;8EC5Z&jGY]IZr_gKD&Pa"+G)!e2N5^DSu&]3gJH*nN+8&,heoDb']CL'3_heI/&sA^!h:]#dZVIdKYl]D
%Bo`*bW/-j,'%7sI`F48dc$g@h,7\49e"AK^^WDhoNDDpj0hjKJ_]s%0.k!./-rOb'WDS4&,`K;tTt!t/-YQ-q@hDQPcnEA(-&*W1
%DTeE),t?=<8`pKsL<$sHm>2*-/h@Qo043Em9+i-LTE(((N<.`WT"2Yl_BH+'Hn_g#+h-9dA(i-P[i=fdClr<7qENA^Lf-O/>[q;2
%d]^iuHm\FVK%Z18Q>u1m^g8^i0dAL"a=S<!.42mH=LXSZjJ_-:HM/O'0!cr?iJ'Z4^nO6%gF0T@@AZ_$=qaaI+c;RSMHj+Q$orm.
%S?a$m>%TLIIH,!1UQcq:=t]%pU?@ba7Y!@(k:pgIBN?ir_h<hJ2!+/F7L2Vf,t:MLQQe`kM32+`#Fg75.UG`_(9%=bI,9IjpG-4Q
%?J%7ETF/OGp]1^`>i[_Tf<C):mDX\2KuHT^3=t:,[HDh.>p%2DgU<U2J8&*N,X<eIn]/IB[!-=fZ]^%D8OUYr23*iGPi6'ppBOB"
%$lu#>SBi[I?mL1H,`sk&=!7O!VQr%:BTXhq@V.kb#A>M%0,h=2+GlB+]O`Z0mgdQIMX@3ZKR')%50*hI_53[G[W88g\4CK@bYi#:
%dhkIGMhnS<W5Sba8F$Rj_bpM-/PBbdAG)%+8HfB!'j*4[eY.7X1[GJ"fDmu>>te4(`7c5i&]&NFB8?maEfT24(hT?DKULt.C'<p.
%%Jubo.c#o7gN4$KCtgZ&=:q<O>KtlnNTOQZ[*pP-mbtied`a?u4XX7ORiHE`4DoeBp'f0260Ui$T\H>o#T'j4WD6mG0:UffS^Iq5
%3d5+=SaK@3hTHmGfMkt=)^OTP&$I7NmG]pmYWDgU2JDE)l#a#L2],:@E04W7@SA,]@C=\)J\a7e"RTnW2?_2nJN8V-5<)Ds`$(9.
%!_kpm0s`&ff?ga7Bj2rmq@J5>s#Qtd<Jgp):Qi&*SL?i,-,HhJ)%0>0S.#Tq_c(GPUE=<aL,L"9n0VP.^i)fP8-JAV'#jW#e=MUI
%`Z!$=rjO#XnLnpfSC`;hO,890)p+946Y$f[s4uU&5Ie-JEC_jAi,?>VV,js;@IpA?r]k9F/9O8O0NJ8>JiI8VPGh>u#,WL4;Mk2a
%a>a3dOKbuugqZBD\4-qN8CB%_c<iiDBH!R0h9=6$6s4Rjp&@'^M.4m5OBoc]g]0t,KZkaHdhU7P.,('G3at_D&WM8/\j/Z,&<aI1
%/N$@rfSYn"$Z#J;S$:\_pg7t9OeNKK;T%C^*l%!-c8&2W[;Hj1HO8jFVW(/kXARs;Z>kJ'Ehf4"=FhY.D#t/]p:KX$2^T1HgX=<d
%hdJ#P6?-.^6\0ZBq$Rc4&ekH&8<!.KrY0*e4;(5MC2uF0f_5[aPr(%nL!W:n7?44DV6#8o/^c0t0B(X>Woh#Ln+$7c-k2Z:_6Di5
%bV(*!^5MgMpm]$J:49'(m4QYn?]R_JNNjjg&P]O0rssE_n"$,-S6KnRT5pHa_,6[km8?0CeG]Qi:84!%i^0oVA&)Yi*eZ*U22B\.
%s6:@"S*g/`M<CdjY>nC$rmgB('nD9MhnboVo0DnL@Q4K6573JQ,`GD]'"E'0bKjiE/W5lC(q-eKn$UG9g>-2N3Ma<2$P$QcdS<D4
%qma,e53M+JdbMT5Nk8+q^,[2,41f,m+8]i)alb<njp1PlP\V:_Nq`BeQ_2Ek\%A:&cS,le2Kuhrq"R@c5?J>S;T#ei1i`2)@JjPQ
%:-gu^E?Wh(Y2l/R,uf#6h=`C%3psD9g3YWLaVDM\92'<6e(oWWMchA51pc!Z5,R#W0[[-"O!KVO7uE[oPhAm\_(^Hsm>P1KqS,c2
%?dBGSr\6K=^p:]Z_;dX^B7jX]j;23R5F"Y*%[qX@MD>n>iTug*=6pkCd'#@!s/iCcf`0PV5i7%n:-QGnZi;gs04W4[j=[I'^Zr/-
%pb0Ljk=$AW@i8hocKifEk4Rmj1+sLO3Yf5F>6!mSdC%bfVe/U$'%=`HfoZg^;r_<@5&RoUI]hn<0gU!cmG+,sp:to:5n!W_^B8ZH
%9QM2WoZQG4`%8BEBDklCMH<)n%Aa,:h(LLCPP25k#MR`>(ejYZK=S:#>p_AT>Ypli^O=Vgl^XN1T!\g:j"l#qbr8UI+@O?KA3bE$
%4/KRB__ui([eaig9+Y3S6))<!FP8j26A*S*fl<BZgYj642#G2H?F.CJCA!U(5d^n;>^=n@g>(F%mHT?k&enc,e)#$Xei`B1D.MFV
%h`L4i/^21pK9>eIHrV5P.VHY*kui']D"h522OK0;jD&QV%R[X9pQ+HE4"mIp6m_$A[j4SXq+;thQKe3VAQ\ZCG5LY]4OI?DjY(aa
%\XUJp1tj:sJ=BX>A/*dHe/fV+\^M`,KJL5nUMd8Xe2nV8%f3lF;d39kL$#"t%8W\9"W^j(R!c1p-q7&@:ReT?>(=C33dX,Ls-XbX
%#BW+K7Vmj670+F97J_M@90;Nj%nisMSRHTKF5.Z0*!rlgGC6<*2S03,c%C1RX*<i+kRgo[DR]@:HFsO961NQthWai#P05l`ftSq?
%47;JoO.WgUc]/8+1;j1t/.Xuenaro>o-nNs7&r&*Le@Q9@/r;-GIm1i&<PkZ@ZK)-d6>srr#]d7Zrhq=1qTk]fcDIt5G1LmK*t;D
%\u"ZidI*X$HhsHTXlI\UAXYc"ru6d^!-$tu,cO<%<kCRUD:>Ok9P!Z*QY?'L_jomb.8+GS-p/m:E`A&#SpXL_co=*NG-pfARXft)
%Y7k!J8kMR_bi?-*;5r2c+0RVYd/7LZeN?=`5+ht@<=iLU(9u\F:bS%BJ)<Q`)nYgY/VH(88&dE0_`a5'YZ"T3[S'DnXd^jBl[E:L
%@_4l:d<W]SEj?*7j!(7H>r5aZ`+U=Gi>+WOG0@ZVORJ3O1Ko[IC*("cPV<#<5ti8M-YF5P3&p2nm_U"P,iusbIFuO;6+]XT87ig9
%j+`0o#O>!:"((VY&oZfKoQD<upNr`e:5\%bepZOuja'G+QZ)+dVouWE#G'g!p-FU@_gPgsqtaH(?XKlV;%(ipU6*8i@2=%p0:9.I
%Ml\Lp^Kc02]h)p]pT-V$Q&l0Sb-`p:/nRDB=sSL8C5F[h:-lgCiQ7Q>S1U(s2VhNc:MaMZIZ#W7nm@A4Xu6C1^1H2oT(^@oMOq,M
%Yg=F5NB9._-"Z21JW?$*4TK1Ib1X<O$b#\4]tFr_gahdk=fV3^mdtEmhQU+g>L;`W>AoK2jSVo05tjTXPp2dd69\9eep'j.rGmu"
%Ie&m&Hf\T6TKIY\[ZET"#QciD(8HE)^9n=Vr\89b<9j+cp#d$(iBj[7?n+dBd'.S]C\JL!oAJ].4Rg\2VA.`QIH$tfXa]_\b..2X
%_t)Z(EHNTD)P$3k\Z&/k%Ec_B`]8$/%Ec:'go/]A4=GF.#P:o?HDsrK4/=[lBn_QNb*qI3SAgF$*#pk&^kO?(`+#Zkq?P[SD[hX'
%qm8J_*D\/<b3P;>6]'Z6X*7Et_))QsM7p7KGl(%N$hcD*%=jJFDJL_CTMj$Pf,O`gMI";b>:1R1R<r8s/sfnQG<nEErjGmS2n/bV
%ak"(nV*F$$Z[rBVqn;rghcXu?0;,2L45FTi)4B?!B6_imRq9h?T#^n_?86703^O#e'_TVs/mgf6b"m>3PcN&e7K=b/J`(p+.C(QR
%(*hA2d+UL=(e/f+4Iq%5gOdn!/?u35,m`:q8h/'6LfAt[S5L,gC5AQ0>iuq1@FF;XZ68R4K,P>pP6[#'IKrj4Mot^FVkY(!C33hL
%2Z&,@.*YnEDgrjRmf%2!d_jq/fAc_FrM"m_;/u<$3tKTHj\M?DUVY$mB.0=3I"oMsaCco-)#6S9<LE"'TFL$>)=u=#1/$3IrdM%4
%FiT[s4$c=k\:?t49XTX#,)AY@,f\^`j%Q88:F^ZE',*`q`B7rrDO+'NaF9b>Ue#L[:DCJnD61u:(ej1aGWbkc=snepAY+1h*ll+)
%;UXEW7G5!9U9iJ>/Ni=c!j=U[=J?%o9f>OU"AS*"0KaLo"gN:/kN$fk\1JL&j!eP8pJ=$pG@r#:l#^Nq7@Dci,q!a80GQVr^_&6^
%8%rNJUSljH>WUZge#b,Q?eEh+Co&2,?b4ln)D*mF-.luD3X=K&ePFUI]WYr!T&`U_P=gR%bLD-g!NRL[SN.EdiB2<ZOup=oCr24"
%^=kFcSh,kc5AbSWXmdnhI&D=54;\-p3QjRln"T#.e^#!Q[/0[u0-eP`coil;"mHRK(Cb)Q<5I.olA^iEd]:daSQ,I'J+`Y.eVaQh
%X6EA,.U][O2M[dH5MQ,S4^XDAb>/;o961,`En)6(]"QZ<%)7dGhYAq]_bPD:Y<Y;g9qIB,0J"MaOUq.nbrbfnWSU9LGDim##Mmu$
%)%+9`hJpS?h6V3]54@pd2KSD)WFcU)Xr7VJYs,)94/^,%lHaQAE`'e)LE@2sd]YaY3L;_VqTV6?\\;NKRiK&(kOe,AjqRIgq/g2W
%pW!EO@BoNBa.ALFS&p(SEkS&KeIoq`;a/7"0`,Raredk2>rWkT<:M/;cWY[3aRRd6a?HJC*RDZL-;XL(f^<@SMbI08V_PhUlgtp?
%5J+u>3Oe.2f8JeJ#'h1\61h%B[ErWOhL]lqO;kFem!oq23cep\:2FDdr>?#RDW_SL:T<#cQU'"P=m`Nuo,c>Lk'nD[];7gb%rAT*
%/`EdL;EZs_A?Mck!.VADR-P32Z_:WM5+mYhmss^=)ZI'e<]UEX<eB/Z7]?O(i%V[g!t;!Wl#OI8JFGWHkh%i@L$=qY4`%(I/p6@t
%X'%K$EkO^-?:FJX'NdTgo"eJp&-r-+>:5sqDiB%Or;fcG2-K53k6'uX8nZs)N8.Ds?b-oFU#f=iF*`Djk">+7@=4c6F`'ca(N;e6
%-jVVs9Oh)D@!>u[_.B+>;A?!(iIX]1e#'H7Cj,RBak\M#$Kcg-2PM*TH_as9KRWmaW$:prJuaf+4..0s,cE*UD\pR-M7'4cOp4H:
%Ya/X<gAdUQ@(;*=@=.2,lt!T[ll8fDGI^oVG0Q7-LjU!%o^<JHp0?Btc?RZV'"['arQ`N[B)h(+G_S+nauoHZ5OG)W"ME0Jr`$52
%d.FX^a5Lr2bcn$`P-_>edEJ".EOX8;;<mhc_e6L4Af)#6Q''Ia:QEXKG(TU'1XmVsY83Y3;sZ>]bM[no$J1Fo[-RhpZc]SPei`%E
%BH=;TK4PC4fOh10\NXo8D`@]056=F1JZW)n\b.\D$VG:B4lJPe(5(!B'-"X@dM)U/4NLm.G+8S<frdJ_O=#*(K(g[4jL+d^PO!.*
%0>1W)Z.OGHB1#sS11+>OYFQZi4m65+BO&,)GGE`'Q3ULaoCZ+3jmL:_[<mtoqfb!Vh0?<T5AQ\,WdL%;'6/CGM?`b"on,?ReWn)a
%j]a6.G>8AnK84IJ\li1k][V/%2MTb7or"9096#<jelf`=WgCmf%`\A!gj9JNRX4#J?1VZF=TA<5)S_]T;`X)Z%KL4\_qXqXQ*WqC
%^A>/3q=qs&kbc'9D<t#6mAe;%c&8K<hc4i7jVR+S)OA#4IV%cBnUBTfTR:dlIcoEf@r?.%+1`VC2*QTXX7*fQBr]3(a04q!<tC(o
%6h<b]0_4IS]d5SOX=W2BnWFiC5n@]P%R0OCe+GBe#C?t6<ThiW="E%s=1UMM=3\E7kU-0hGIt9:8tO>Y%c`V.99j;XqX*S.4.gDo
%e8@BeeCnQEm_.8_Ek'b:2376*kP"3?jrnq#U4oK/GHQD+g\J(Y=$=9@s2KHdp:IZRk4\I$3.[PLM]7EY]$ZEhhQKniXW&XsQQIe3
%R$2a;*Ffihql8(_4V5)`mL%i^X1g<5!LPZ%g?,5hp?m*=$Va`6nS!2cr_C(OCpm)`%^.gpXjeCC?$Wu,-VH/QBDoYNIH@'"ofh/;
%HEm5<Y2$_]T%^m0]`qEHVf,kWAU1=`lDIoUe\17q9g*D$oYo[!,i2mR<*s;k?#NuZrMGY3B`-fk[6d<TRqVQeK:'C.^=QJmT9`fd
%532:B40,!`2>LE>!"+/ih7e)Ooo?-25?P?']j+lIh#%$E"0JFB0sp\NR^d7.<-?(hiI*lm0t7&h9=88]-'tY)O+_Dt8aaXqNW._5
%m*n8WY4"#+r3G$mhRHb>]?d*%Xk,eoX6^h7L6\mAX[eWsWK764k5FTr:hfCClDm_TcTIM\GRN$ti@&Ur4YHK\h4hUNeb?OSpB[VB
%DY*#XHWLting\(kd*:iGEVi0^I^RR*l1Y^\a*/W=]MGSm-Cql*'te\PG.!Zb(r^*,l65F5Wd&Ng.HkC6p@?mAUOFbod7/-mriAO/
%DWm\KmB%r-$nk\*2MPl)fGn&=!;17&?hH&qC^57>QZAuZMQ4!q=h?D4rUa^h:d9<5\f36WWjhm(4&L??H-q\+1#gTc\Q8O9+c,9H
%k!(_Bb<@K/++,t@b6<,je*Se9%kCF><$*u4q\s5p*q&GRC3q>3M3C\:LUHEP?@J;$Y(rLiDlW+b=-c>\!StONg/%!L8(ZJAf@)$V
%2CdFqqm&.EhU-?qpiL/YG'\EmbAJuQO%4/ppgDJ'YB:$i9rrF8m?YD1jhZ7,YJp4klR/p7TA;mZHZXU[j3<>Ep#$k[1^1X#gUspP
%r4$rKg&A?U?g,Fp=1Nn\)sb)@o;Hl;nm^cJZa#r_I0JH^I<8ZtD;[H#:=MCA1d9d/FD.^FT;'k:o=..mF6V!9qeHr<iR4A3h)dE<
%\^fMi[oY(aGOE6-+X3D1DMV5H"m1jf/`!tcGu`PN\UGof7O$PL>J8G?HL'2FjS%ks=6iVsgq$hLYGcUe#lLks!k,o0@==o#ldL+O
%47Djcnj?@5hs'J'`m%T>CY.,qii)Bb7H(F5&7u/[NCrO(54%pT02U`OCS7Bu_65hf]9R#q$.>3aoZbq^48X$2qWRdGB3;Y30(`3u
%R:l!_18*`o(&1^3`BUlS)AW"gi30P8#[8an)An7,:l1,,R^JTf8Y<GiP-=;s2>j(M"91L$5BU&GADBmh[Eo_T$6#XVlJlaB_p<*L
%fA1Cj9JpS(G#S&i^#t0Ym9n^Qc$-KO!DA^LH<h`]=JTAh[JP[C.p-0s@EWp8'jl4),P#OL$&m<Q^6M;ERrGd4XmbV70sVG#RsZsA
%4MGPOG0cq`L_64[rjD#=g_^o^mD^gCaD>Hj(95QM)T?$8YM@B5o!k&F2@K-!l",fo\XR[1`Ak%:0G;TUq`MM,[qDfT&G4UK>p]L2
%gDCf'@t_5X'mleN<p\Q$(hnp^/YfN38%BO4hD1%9XL@Ki#1I0/+9?A(Aou?i1kbOK[[SjUafg.iC"q29#%Ak+Y(S&so=[BYT=4\d
%B_[Wk5Il8'3+G66gjJU%V*DWdXKm7tm;c'QoK^YCbiq&6X!ahUJp+N+E7he"UQ*eW2<=\ElE+7W">o]7&]is,&m-5""7+uU<Smc[
%mcMt`;q]h`],f&0YhX;!#FitKZ5FBl;9NkZU$'ZFP"&t)TXB"LjS54@_N^cF.kbea+g\0:*H/Z1e<;h3U`6Z8B!Y?+<Yh:YfB9_H
%.M#m)G72/Dhs(-hp$J$@H#pO1EVi@+0FGVr7D3J)\HUG:`(bCKT\dDj\lkD9TRkl&HY)A5Aa@1WGP,5q<$sN<2DT!qcjc$F/ZrX2
%I9'p]F*Ll;HMd]"jqjrXVTnR,F%P])RP)%W%6DUpg2Q`0hR*I]C$C);2%*BmQTcuYlJJPN;`A$.pOl/&Zb!;AIogQ3f3Y2gHdl.4
%?n?3]9Lbb#4Yhdog40s@DgAa)eF9-.TGuY>VQMhC<o91U5#\%jJB_hW@8dBA1!ead+4g1Y%^m07>ApQcoAIQP]_lra9f\D'q=6=F
%dZuY[?TYR]MP:8oqfM@,@rD<T\IpL]]TG.VITUWZ@#1iZ_>MRT9I3KbQX8e4b?%bR)r2hZ>/f.tlS./W#Y"m(6).=rqgJIfXpC`n
%jmmf5&$hu(_\t8!7sh]aT0D,TlIF/27h^W7B$A*G`m(XG7G>bl2rO+YS=^a72`E[9>Jln,$b#(foQG@1D1.3uNgf;)e)IJ]r&)'t
%GB+Z(lP(;V`2;q**OE'HnF^@sGn)KQ'#7"[kQ,s,fj<G1%$\3UQRgB8A\:n.>[;Td4Ei.,@";P?k8uh2P9hgKbgj"nAN4EQ01P[P
%5>aAq(U[p@X$*[nL9oL`.Sig?ldbd3)MpQ%#Cc9Y0*;l9qk90)5+M@3lo=%uhBufVDRH7!oui8DnFGtch7JGs\jh2'K\h3#f-JqW
%G>"@!%N5*)kXt73h5.`mn#_$9=D5AFY^5s*p=7pl[eB<pGS_1T6hNu&?cmkKDS20$f%ZO_5->s9X.n1Uo_&JCf]pq3FS2lDg,f(N
%SQ7$5gs6mu&,WCd)O732JD[OnANM<'\oQWtl;np)Y`a19Kh'JG<Np%7n.(K-9guRdT@JVGB&(Dl(kp@1`=$j0G22<Kca&PJO]W8=
%]CF_XYuZ3r4PJlIqXKJ_a":7P[DTI2f^\gcVt"qc>PU1kIIHk+>Ae:%H1/o_Y_%L#.pq_Rg28K\S5n"ndt=r.IrP^M@0b'QfCf+5
%V1_^W][7fh&)OH@H%EALGGD]QAp/Jr5E;D?S_NJRmp]FA&Bj`j2_$ns-en=bZb?1"]8r"6\HpBXO.EN,f:T`Ce+rCrS_g-J9"&\d
%.rWSA%FN+dHd^^nB?H_>:E[/jT0qWjREKYU[+YU3fiFa1%j1K\CS-We1$BJN8c:s@p/?M/#cf'"rpS>H%NG#4[`r)Q[hhitXR7]/
%#H2\00"gH(I=/9O=l%oErhZRMB_JOp>edl+pitosZc:%faq1-!]9A#"E:!q^0Y<8bdrf>B25qXdVmhdUk?8D>-bV@Gd\"k2.Sk!5
%pT*n0gSZ:0hA,:Oa,QRl[t^PTM*:mVk3_8cO8%pd-eY''CRF)9*)]t8Er@;#kG>]XgPs+)_tJj]Y)RVo/$.^`-.nf9+'-*T`?K7J
%F_,^p;H]&UcBgm2J>2f+mT1Gn4LZ"?H(_o'/BY4Aa4o2a+-0f.DS=kN\(\EC4fLYnE+qDg](W\>1>(7Wlo_bCfo4BXX`O<<[eoU_
%.L`%tH=rI-lk.:TiQ@)Wk>bdLdnjng:#Xg-]f.kd.`qPa#=\=9Y(#*(2HN+"jR^OC`L#0X"kbM=2HScQCuMc(?!b.Op?lFe]Crnj
%=BZAZGuIa>HY[?!]XO%E^8i6kG-4'04PO$7&ut&:C^ZofDVhC\GDiko].^p@bY+edQ(:NcN::@uoVJ#3e>P`9]'Hi>1mT&^5sR4"
%QF4$c@X4ktdar[H;Rug816q&RQXLHmK,*4SMVc27dq_*0hn?AVeZ<=^fm.T;BP$Gbl/TqXKni=%]/PmoMnB&#E-$QHZ/RbW@WVK?
%UK2Yi!.X,qU-Gcoogk+P0t=R<S)7A(c*MXS\in?0X$9Dd>BsG&LYXM`-BA2`pC?eK#7g]OVfnF9\*=?n:2a,s%o55pj"Ha/&/`^t
%X1*$3rD7Qj5P(cpWukAK>TF=GJKY=N5Q#VhD/Hq2+3YU*ZF\UJd5eeO.t3]7De4:j[Su(u^4)S!rPb+FS?plIY]VpVBTUY=U-/MM
%F6e.I<m>NU%egeS^.Nm_q<@9O\>lZrZhhM'GH\h@R;8q5oZa4)FDp2MA.'rsT?C8`j3dI"^f]4OJ[F=;+jp]Zkq9Mb=nQOCHFsb5
%?Q4UJq<Cn,@p-q(%o7B+fCsL#jh+k]8\%V$.*.+S)ts1<%#LKY3r9+bqik*PoNJ0Gj5f5)/5,^T.&!\''pCdB-uR2RX<#-T6a(]B
%"':L4C3ZdcH.ICC?esQ<\3.#8-l('>:I)?V:KLaR=45L@((K]Ed;PW4C4^bQj4,E+TeA>G?,oC4eMf,J8*>#Y]K(=ZIN/$Qa/bKd
%rr-M>mbq=bQr[.oXJLC'c*Rr<rUt0`[Ee@APR^C(6a-;Y8&"IE:b)bAo`l"(.pAkmf@rq?/gI^UHMZbY-qi)\Tbu!'-_N3,]P9#-
%H`6b;ZFtUrcY#jj\Qo[,)YbeFjZ!%mh'Yd3kDrJD+NgDJ3sV%ASSKm2PpYb;5<St)QKbM-1amo]<^(F[4q=d_k6b2I5VeZbe.#7?
%]2)7Or=m?P96Eo1g"AOj<5hpi$b\W:I-<`=<d3^WkA(7thWZ)e:70af.oR1BmI`!Um\QQZmTlGgD?op25fZ38%CF?"hR+SZ]_Cd7
%9D&Vu]&=CrOk/CO)fTo%-t$eN=0k\fhVjZ&\*jd_A=f\B1Bl=0HujT$l-7i1Vct[4(HPXc0'/rl'kr%X?I5@fl/NNMl<q#_Xpp,1
%RQfVrgR*If'@0GYq&rek2(5kKiYM2jX4`F[\!pF9IG.q]p$G2+qe,<14\5=k\Tb*g&Cg4(_TkX:0-]-TF*bIG=?0JD#"mY'ZaeCY
%?K;63GCG%@T6">EZO%:m^i`GfPd&_3O"/n.<^<cH\CE0QK-tCm<a04'5??5.o&]_fgeBr;2G7i+h0(Y>g=t(0T"fc;ResL8,`Bj3
%+)\6b"$s\oDcE<6lI3_&iX*6.fi9`-\62C0pR5Gh4]8as4D.H^]n/\"IY[_rE2!S+BYT4\Y1:.2H`\;@WeTf`d[f!^?<!!K`Qm3'
%O/JV-SBN]BcbI,/AX6o`27soEA/*m&O/eh5\lZ/+L\6X.gFEGGimo'To4`>bl-@toNkY8Lf&CH1l-8=A99Y770/Vs,'g1(Fr"Kk%
%)tWafk.MSA)7=Vcp2]9:NVBLFg47t<DI"SqOZkk-4b?K(YC[D<[;&@>8_?Zhhq&rf]`1;<1?XV)dE[LcR`t!W=;u_BgDqfkhg8Nl
%hns1T^%5XBI\:HA\RA3GL2#65<c:3OH6#],b+<hA'#%\'poi%-RtF+9-I0)0/t]ehqrkJ7M^PQl0#52.+F!#/l/gIHlh9)Pk0)WE
%qSMO\CQ6m:)3;nM<7(rtW]YR:hBWaJp<@Xbb0!Uch`G%f;<_*SFYF%M]QHZXE"ZXA>.Sd_X%+(PKie#A)mnfn2a6*!]L>?>g*F_J
%jo"ef/JuF*Fo6t>n.\j:7u\I'f,C<RiiZI"mdIX4e".:eiu9c<e)'eS-ndD6s(5j,IeBd^Zi=Db(pn2]2Vp4YUZ:ZO+HZEN@n5E:
%/*Pc*04-a0.(C37gJ?^4JK7]a6b@&Bs.HW#:J=dGOc+M:Mu1P1#@N>;?6ec`q""Ah$U3>A$rXA(G!r&nnn`QIriit[FnNY73*b^?
%2/^n_h2ec)mgn8FIWRNIQ).[Xq?60O\N-5jn2[d;(LHJ[E,3NUE)f-SgC6#A4E5VZfP"T@Pi%a@>[Q5J]j80hktoqQW(4.Bp$LS6
%I;*IW\Q$0e5YGH+1iD-^'*I!;L"=u#d[e)>lL=Y&AJFt/j$DIIeYj#9>cg-SJ^Ja"p\rWAp&FIYe%[glhR9I`e4P1s@o=+jEi`A^
%;:rqf)%BTSh$otSNPAR'dOC5&q7)/n6L[k/5D)oco^n(U9SPRC9NK#`:6H6E-4&G_rT?E-W,tVd/8]RpiaATIS.qXlq1F"XDM_#9
%K[PgAkT^dsT5NcnrJ503.#ml"J,Ss\B>OU.6$51CRGf]O;'bBnP/_KRMRf!/B"c]j0F?uF,c4>cEg4MJ1nPZ0CfNN)O:hmc=]qY#
%QOn\XpuY#@aso9GPj1"NBXJDNAZ5n,F?)sQ.u(#5e"iL+,8_UZ$Qq\gBd,ngSLLS+PS7Ub"%=Qs&dZoB`f`%YP>l0@J;BTY-KRo<
%CeS6n9`UQdb2S'mMp$W._8$Hm*CI)&BnBmW-qgM5_9Bq&ac]'E;.pVS(5OuIE"o;l/"ctK@_0Yq&?V-1+_b(,R07O21rYo1KLK9Z
%@*Yc3k.sMJ9!DEd88:b]0khM*`0@$QkffhZI"7V9M&@'Z7YRMb>dQs%F"ZFM1.561?pJU`W6(4D&-*qX[qIX0,%CgcR`*^?NCXcd
%16qC8C7%SibGgM2)E,B?*E-$:Cq,R=nrOc9(o8%IZ[^hLR):IW5Y4Od't7AKZs[B-lP6.>f^/ZuA&:k[OTZ:"C<SBr>:Km_Uom@Y
%/5&[0Mgu5B+(dbpR.L`@Pf9jL0RJ=]R$2bY9?SZIZBPC[@.mR84sdPQ=qTm&VWH0eVWhS>pl%HEfFf(Qdg8i5&O:s4X"mA1725tQ
%d"E-&Ca3sV/1(L3(m_[#i[@i4/<uWj5]nZQ\l%IW7)0K#Ht50pDj[eXA]_Tp"#gNG\l$L,o>EdVc5J$LNtI8;6r[Yq2h<fD`3K+_
%8IsED`LPC6;DDa@Me-?GLGD\d9jd8XZM@In5rLt;"HmJl!>@OqMOuRoot4.5NS1-;/7kg]dBHe0<K[>c+F.IS;BWXkeM9a."A=h9
%!$Dqc-5i[h"6K^1).`gQ2ZqV4_UA^/-H\*h8ihY0TnO&j>WT];F"(,3A88?3Nd6`uQ=A]qXT7<N[b)=r!.9h_g0C$+:2hL]l51t$
%#ZE0g=enTo0H1a@>oH.#lc1VXS>D[[qAQIbJKrBio?V3I'$g,^Zd/uJ3*5l+dssMH.M?EZ&s%TPK4I[^,[eG\`g#Go+[D2W6O*Rk
%\-22EB%9"8J.Y'k5KDi4"@rR0k:lZC0ecI(N(XifC;[9oA1ToRP;#C7#%?pQAk38%6M4`MV3)Kp!]_Z*L>\%"XXe'NCEP"`G_q)b
%D\6\[2jU'])(m]T**=ESM?L]6W?o&&'st<fBFHf`(a4o;l9o@kR#[U&1':d&P?0@M=:YZK\2.1H+egC#M9st>YXfX.)di%Uau5j;
%TF&K5#PF-3nrMr^K6dB.QrBhClr9!,blMqcW'*90m1jul8olpaY?k,Yrq!6Je7.a69\O1&)N6\Q.;r]'>8)8t&4+Mh)/\N[a<eX/
%+)lE(C(mR&@`;Nd>+c.e,V]nSM1KMu]RhC0!(6ln%9Tro22bukN+^`sC/1F>(fY!27&H)W*CXCMCB-nhYsK(7.^`H<-8>rtAh\d!
%$;D)s$pa&KWfFM6J=NSS#VDg]&8d(7e%6Qb+1Q#uX'22"jNUpF80h,s@1dN_R"`u$>=m(kSYP5(Fg25D<C9gl`4DXFUqe0>hAK:r
%:`fgj2@,*n$$3t6-qPs[O#/A+b(+loA.TD1Ca5X0aU<q<(XS_LTE5bX-OihTN8TFi6A5CDT<Jmr!6kKEbRce;Te1f,1*`k%$tt08
%?mK.V"u./RQR<LM)7R!-/HoHO[9tX\RFuE`9`dSd*f?r>Kk>iM%OA]s(*GR[$'uLm"!nqa7%FR)$3eSO!<l5n>!d6>d*f5:$i(!8
%$<.%YU+^#u$2U,8Ob,tn-%L&>(<&<M^d+XuQ6^IG:lD_gr2ufN`ES;T1fcqXcC?QlSII*g`lc(*V?MLo+Cdk,,_?_&OEin0ls_)W
%kh*1@A7CqC'`aY&>XDkhpR:3;<dDYhlW?\d@:6)p;60t+"qr0_6rVN9l4#R7bR.',42P\6nj(s9&1n'lIn[^S&5_jf%n6(UkgTW9
%Q5J^,&^1n3Y`BemUoknbDLiCV4:n]J+_38D/,L=)g,W:O>GX6<&iNL,B(]YF1=efa$URCSWn:L5;NTB1NEJkQ?k'F[";'9CA5u[.
%Q<Fi3&-a]B!g,hm6q>Zk["XkId'>bb&j-@B?K?2Te]s7TA.iF@Zm(g!8[lbd8.mNZRg(\[1^QuH=<diR5sn'S0ri$T:omhD08`ka
%-Cn%3`=0^AE/"LZif5bJ+0-c_5gZH%,_EKr(:.&!Wib?a"EHXpJK,t>PPu?>KE)qH*sf+I)i@L_,48o3Hq.sMA0jo%,JM'M'&#j=
%bpd=\[!15,Bai]@<)2i+9#1WsohnGp5tMr'ob%HI1C(ae%SB0IM=5F@-A"7::$RMn%0d\]XD+A7QlsOZ#c*m8^(mmP8Ge7*&4&:o
%Jd,rNP2Mm7,L%Tr"`nIZNefS=Er_;`![Eu=WY#RBelN"5*pm,r&f.ds)AOl0*L082/X<F@N%ebi!o8taN'P?P>8RpQ_7^M[egL`?
%%sSd<[W=tCZUYRbOk"3SJe&b'>q2pG,,JI?Ub#r,7E!nhk&qnFHU8-&2G.'W\kI(rZHSUX<b+4?A696Jgc?hu;WRa8!.fI!Te+l%
%NL4.4Uc2,@"/;W,E#6P1!^)S>'b-3H5k%PK#!:/brCX@:SO=gd[EVP&2Q.3YX+/;th$4l[ZW;=H8?2`#c5'?9H*T,lZdcDB[6^Y1
%g@Ij1J5@+0JiQ"$ehN'ZU%AaE>"4gYaUBkG6Eh:9=DMuNGn3Q21AZMZYl[0Yb#k=\o?OQ$:kS#^'fj4.Zq)Mk!s2pXh*ONJel!d5
%Ll"#b;&r&rR1W;3;".&[M\Dt.YLgU/)XU.MOba!:`[O!`$tt@a*Q/77RH1Y`<t+1FBC-BK"6GD?:5R'^HX_a35</ZP8-#N50H;qb
%Z:'`$#R6EcOi3t5ZjPTU<aSkn1dom3:pEF"@O[+7)K]S>8gu5m>VAG*Lk3iQMR&V=a'#1i1s.L?TqU4MpLY1$[hZIg!!:<QF?:Yj
%fO&0[?WNKqO;&Hu_CN%2$is5LhGmrK.=9H?f#j'TZS_tABun<t9?Z$B;(R$eaIe%NC6i8;Z>&AX+tc<A.U-BD@tk<jp6H%I2c@)o
%]+e6\G"mgHP^T4He3[W=P13SUQ]i6Lp_&]@"Ek'18nGFF\`IecM,opjB:2+u,_U0#>p;jP`beD'-Pb:@Zkdh$1?WmTUp>@j92can
%D&i>NLsp=q-lf`8bZ"*3b#m&HI0)<!C^kIXP`9S1+6m+U,jum["S?LjdnV[e"$TCNQaAd[nGuSqZ(ac@B?7H&Y<$P3iZIeD<+WGD
%HEB)U"8&chA+eOiHF@"E[O_T1&O922W<a8>BX="&&2R1RZDNBS)4)fTFb-'K"B-TJ..%$Q5uMaQ&k"MX!EL_Y/S:)u_8a[*Zn7E9
%6q('Hlh;cMgp0E_g8_PX*4$7s7@"][4[ndl-5\O^e.F:U8tAn8'I.'rM1lLNUlFakOtko8_3)^'6Ji5=,0-IT8B;X&'sqLFAfk)"
%F.,g\a::'N`>Rpt=j`A9&6^.K"D:ToMh.N(;udrm%@Ek]J\3LQ:?>G%Nd62k[%:[GicHA"=&Dg`PI\A#V@Rb$831[o&b$*T!%PC'
%2p$R]!#!Jn2BE7')d#VWZ)l)B\cb9+(WMc_TOik>,YG223Hj_\,f3.oV8sNkFX"-0q)b#9L,G,4R2@tCXHa/MAV"S@G5bpnBE96Z
%\!iRU[BNk%=f\0R8C[%UbRRIG$1FYK#5k0(rmnWoW,M3@H.S3@OX-Dgd>9(rRKhTO-1WOrj$uiCUBEFtZ?h`aUFHC?-G_i89I?(<
%Ul"XRi65"Ic<N4T!\6TZ(5#.7%(%?*r2;Ag4luXDckO9MP\+>6$OAF"3>f1.b-42K'sS!t3riqoTfttVO>(;=pd=A%>F1cf@q[D_
%.SL_W@1X_%EKm+[N0$^eK_pCVa>UhK0tW2XM#D0'cj9%PQlHBBXI<Z^/=8A8<6Rd(h5Qbh=<frLbi'7Z5_Ac(,8p[.$WpG56G*\e
%pP9&/[M\B.N9oLWT6fOt8RlB5.$2)T1?P>K69`L_.G^^i7AXO0CPe:B'tTW1\.K;J"T[1$MZBu$'gaZeX-!dKX4aqd)NU,e8_ltH
%F(Aan.>U/k+".c,l4-Ih'N'iX/t;F%8]R+7SLq-h%,sbqf,Kk[CBH>7#`L![_#bm]V`k6Z*h2ANkP;.-Pp341+;7sQ8&TCXBapW,
%Y,qh&-rb_:7l)W70T_hr[jpr9YS\Hb-Y=LJQ9D9I0e^I:0Eu3UkZ4O?,,%+?4cKuCk;+kbSBiT5`fN%iUQb12[PYtrX7?%sh<QK*
%&XlUV/4E(C1`&9eKcQj`Hu`kcbq_UqA*]h?#;$;CR/k[p39i%e8(e5Ze;b_]!Wb,MmZR7`n]#MVj*crJC?!To?\c]8K61?f0iq;F
%Xic0K;RbIe0j#U2%'Y3]?g$phEHX=(AJQ/!D$$RcO$TCQMMDQp-5?c=TZ@g>%+(^]3]iVTJBE_(W0p+)JBd)WY`(;i'8@5=#Eks^
%"C_(I#jIll0(9q&\VM.kk;^I/0$G0sND\je"Z'!l#p$!k&j%&kGb\B>=lb/i"/s(H*mg<"'#+VZ%>99*Sesl!ZH#*,d+WrAZYH^*
%[BV2pX9CTf&BG^("%Bird9Y$Ba.!No:+]^*4")+0<(]V"]"U;m!['K62@4%U#S8%-!gs^Gpld6TWV^Ss3sr7B,MWnYLc&;ms.?rJ
%=ct(([Y2AFJ#He.8/1t"(t-\`7Nd'YiWr'c!YD0ns0;5nEt:2oeTiVhjkb_hT$T;M2qnl!qH1>Y=&GI$5Q*3ijRjXDHec=qPHW%#
%bNUX#`B,KgAN`Aq3I<PWruOj[s'ALk3QSq3A(pg=6PL+V>]uYkXb;3%l#c]Cd_C6YdUS\l<KDo).Xl\)[FX:[B#QTfM3"!*_B'[A
%V:!IlHbK);k@D(l)O?,tn?P$ZcCI>^+%5)iQi6,1]\POHqsPec=8J'70G/g7g[RU=]`2+WiSbj&5+Ogi[OdLT)mMB,'\4U1KTiY;
%ERAd\A$OZ)=CI7)X?KmBkZ]U(3>C;=N$KI5dDc/k9s:K:ec::^aVHlX5$.+96U1f;*t#cR$NC[?Y039Z_+tE'.-<77j(k6-%XT!]
%$31e#>emr[UFI6C.9RhR3R:V]3Ie\.h.;Y=&oB?]=c7u_^'7_@qK::TmJgmZ&e[;W%_7tRH(J)+^L(:W1^"gtS9[fI."#D-TiQk"
%O*+9F=>n[Gb^5#"6kt)Z'VL_q.sUJ*3:+*UP3?#$OD%<k51]j8O[VBW5PaS&Ll_QBQ&DI6N#NF>q;q6"PEZMgYCod(*!lS?:j<bG
%d<pB%9D&&i5pGIP4Z)uAn0%=BPg?DCe.)dY4QNL>a[tuogUk!%e*.^$8u0Jss/ibk2lMB+FWKMjYQe.D2qGNHY7(AgWKNVHn[a?*
%]1b<TgL_-ld'Hm9gO39B4AXk<Ph5U#]&9_9Tj`?eZVR8&V!ncO/B;(e,8M:>FDU:/7_cVU)%H:N;17[j@o;b8!,p5(O/o]CVr#Bp
%Aj63U5<bE?d0oE\NRe_oUBgB4=&o-:`*PPhX.F)im%O^"#II,3S^=C<g0%n3=ukEd-XkS\_c"hNmMc&Iin'/CgI)mDQd,06h(HSm
%pZXFG?^/54fdG+/Q]\riroGN'$GNPGTql%\a@4LheOLPrCgAsk<C#K,0KJB3*%rD6mI54WK4N]n4tfElW8e^t^;=G(:':JkfkeS'
%#Nu_XUb^G>.PjN6%(36!4<naD;.J@If]<2qAr?Z;Q,2pS!:(':A)o#DXsI4i&!&1]oaBgK]9NZT`K\#=Rhq"Jp<I=H,f7R@*j-bB
%Vamfla!j8=,8-74SFao0=rY,\G:r(Moa$%sdU*H8G=KIhgLA+m4h<\ElMNgr%lJ"sl#ea=^YbpdP7-J`=^5%Rlf`T3^5_,"PQ$k"
%!H\>:87?3+M,1:ZRZ^@\Rr\6RAr*X@1rB_hS#No)Qp?/VUn6mbiKjN=;hjr!YW-YF&Mp2&5bL7!L1s1dh3ZE`HapK7C5:[/<JNA/
%'o9_<<=\>oXhmbW&frQ2C!F-YjKAcOo^fkuR]t\+/H<`^m(^R#Gp$PWqYYUum'2FhI-4Zsam'd.0K,&!<)#fEJli&R<!LfseK@GS
%1s3[&86ksCNqbkiF=D6)]DE3B-'U;^$hY)G+qG.)S2hjcAMIo#o9qM,b#1tK!Qb?E]a@,U*/KPMYW,"r3L3[+b+UPW"g!OT&#KkC
%o2MPh+NVde_T[)Xlq(m7p0ra$BmFn$>[]sicBSBtaMA<tS.D`(F)Q;!Q&HiK6M)Y^4>ZL<"Ue`6?!+lfiA'W"dGH'5g!ILRZuBoF
%EUJ/a>?AjrHjYu@Ua-WjbA\RqVkd&MTnuXPYgDPnk.H?m>LKUa\e2F`QG#Z,:X&!;@D>[$T2he-b:B/JPk[FiJU%%\PB&]1,LD]S
%B0cSs-EB&?n>IeG5+of/Kpj)Dd.4Sds'c"f6V'!/ostd.4V[#0BgAIG%^KP8cN7nAoZniC-SQ\?@=Yb3,+TJo1#3(Z;\g:F1d"L2
%;E.oEj0FoM!I.!\+0'+cjJ%?uKQBEfN_>_#dGkP[HBid>@jrF2Dh[8>_P0KPJDX1hDegm8'$#lF/u$eJAJFAg?7.-#E/AaT_`'@J
%9]8$k3*_aP!.k>r+Y`P(nr:T'j2Por$lkE6Qu(RcD^lMWPu'GV_5s1nP<_^!;0HaZ]`55cO8#^/#LjW&7HG<qq:;Q%>QiqVGT9Vk
%N*1-l!/=!QLYt86fRZQ&.i#R[2s:79Xq:!J[JpPb.):IYl,eOBG@uH\`F1aa:_^n])*YZg+@20h/\=BgJ*9UnY\;+)!VLqUPd-_6
%+!,q,kfJ#Zadn9gThTl?2Xj[1$LS&`pK[*IN?W<lKUZokUn<^E<3[[nHo.]6.6JeSRD_!5SDV:c8`shr%V_=\k62u!"eLn7JcppF
%JEZ;1it+emA)5RnYa9G/:>7B0@lD\YL46X*S`>b!"!4ob3:H;\[\dPBH@D%4Bf$e;i`Xp=qboTabHi:&_'C3D$e@AI6]p$P.*(Ft
%#*/Pa2(GgPI0OEoK@\>8]g$INE?gi$37&hr$S9e]fS!qj:3YR)3]/_Fr\5',j-P-2!T0""=DKJ>_MnO,E*$!]]M_+3@A`XT@KG8(
%Zu^*lT^@?'%Uu-B>GnniPZI+qQP%>%i4EQm>-WS9-;A7I;H:R?Ck(Rr?*MfkmHC/<ZfJ8E6%Z47+i(]V[Gb'ffRF%.'L1f5RQ4W$
%6$j]?.3;q<e=i_K?WggIq6J%C:.>^c>McDK6V5Pk\Lf'>><^%]+^JSK0]pSTjrsEq6P<7O]9(%1ORi\Wq70jH.ME12H^ZGUcIXa.
%Wk#,3`Gh@bI&(@Nb7)`riE6_T3#Du%%3]PgD8@s*"P9\$)F);/]W8iW<kfHoP$#se@ft]i!N%NZL7:ju*G#3R>uON";n/;>;TaOm
%Q@:\,n&AT0O+Q7$1PBV^W[V)6=V*?%''q.$QDIa$M:klp$3!]W.kjRh4'D(ZoQ_j2LDj8;]h5fS\43X_+j7t\0nES5QjcOt+UddK
%`(9UI!Vm?hPY6W])fh77.&KR5('[c,r;e,['n7ua?/,][N7+cOS585;?o;;H7cS[)8Sc`l^sinGC80Q-03b>R.?d7mQ%[[nXBac!
%_modV\b;(bbcrgWhnt2K1p4(U;0BkcV)[EI+S5/)lR^'QYbGmkTj5_G3PmsIKX9or\)^:(lkX:%]SrLfhq5Lo^:(+NAH5:Q6i%Xh
%U/tn\'bI7j\q#G63.)a9>=:.RfZO8#oH&r$_O"o.E>gRZ,8Wio=PF$rhTQHE*4$9\J?d(i8k1C2ggmjt.NQ782Kj(@<;'tl.BK"V
%,U&l8P&s88S7p=[GEoT1jcMZK@4/4mEJ9^]M?MEq8KCmOl(!eH=;p*C^fD%r!UkTV+Y`Iae[qet?qtQiNfV4&"uTaPakL5ETKWrq
%Kh[CGT&HYe]d\Oob!mES`fW5\8O?f1Z)"A`W!^XP>QLnLkK@+t/'7"n.6<3kFlI2_qkuj6$$F4FAej22j#p@uq0i+IPsuNcd?\<_
%P*bkAqC3=jW.\(iE!FC/YoLERE,UQq]eSZ8<L?55o'mp&I7qHjSh]7n@A'3n.&/lLkkuZ@HTN3IjZ7&;&5Y4HeS9UlhTLI&<hAOM
%AZCG+[)]Fk7ZN-jQGn"BB'g.Ukk&/"+Ujtr)NM`EqhRK!U>dF;>+?7)!eYRA?D4s/*83cIpMrH,Vdm8'/#d?RkcG&j'&fcMC,LT^
%XE0oRCE=DuWbY%8M<#4*#HSq1dKTZSLb!Bo^XZl2-[YJ"&BAPQN@Ho<:OmC2@NCeFX8pkPf`jpcm]*59j5.lN2"bX,V&dE_cV_Po
%`OlUiK7k`XP#dR)W@b8^1#_XXQ0.J=V<4HVrcXid>@?+oSa9j&)PrJ+`t%\\ct85R:2q7`S!WA9#P//"L'0b?`JMhG"8[%!m^?Dh
%DR;',rDa,9GV`Lm*8Gce6R9ZN[)3LAK`18*r8F]7\cG-_BgRUoJ:_O8GtP@fAU'7g*AUT;`JTuO!5*n59<^h(-EO05Ct!n\.<g@0
%G'8\'[:C,1`o%.Y3P`3N>:4>-GXO%c]S."N.,d:S%+d"^1U%uuJo`IucJCo4+"OZGkAf0/X:J+,90QCc`DVU&!?.%G@[T2Pi<\WT
%Oi4NcAb*M_!2#Lf\J:h;ZET9!eh!%s)Gc]".b=04NBZ8[R_j$]C+`BTVS(0Y(qHjFO]Wu"ZmCLs&K7JL!'I-m'H_s:Dp66ANWcZ5
%oYsH@nrST82A!61X/dK5#0AhN8OH32T'IGX/Rf5J"Zd_%*Gu#IpIN27(Qec%k[5NR"392,eiYhol08Vt*4#8g@\Cu^"\6QD%kNu-
%fAJ$p$t8rT9@ei7_8'gW4(O"%R9]Odf`G@]$Q^)AU,>eV4"F3_[?:Tib$os4E6EV;lL?daq*1-5fRenU!<;ac_R07l4KPfhp'ee-
%ZWq-!0$1-ZJU=r.#EmWuE%_s#!Q"kk78*qEX4mpn%"3G5=9[`0*(^u%$NOe=7!pIVJ.6WP6]Z=h=^VMhAipcZ2gqBkX:^g&8.]@o
%R$_#m[ZWgE'>Do!Od)Po0pC<s70rUE17W.i2QJ<,!>dU-X3"qn%Y+kg`':=Y6mQAgCoiGaK0*_umpt5n;AQD3G_?r7G>ur*&af/(
%Y]42p=2a/]U!\!SEYr\M(;_qsg+HYC2n`nX.om=(\54TK>,%iSU[l&Y@\me8%k$<Mk4dMTZ"i35?It=@VN0TnN`=2rbLY#1G5/X>
%"*>jj7n<VQgJRIsCh):hC<96K-Y9`+H0u.X[:>X_pqsolWnn\I9ZI0H=E2Ar7?g@E58aFY3J"3VM?@[+(@Rb=P/)#@.dF3o5&\Fm
%*h05C$Tu!Jni/S*K:7QQ'L<>4@(O_U>QDW'>ZQMTCL#>X@[$;pF#B&3;/l='1?N8T*:"-/<YYXD-BkHB)L\HLh,JMsCsdt5-:iG?
%(l(nso*7d(J_@m5D(#K-FtY.%*,0%KQKm6;0?Ol1`<&HqYp7p65rn4LKZImG:D2I8c!'\J%(2Tc,fgrKBK!`$X^.t"&B:G8;UiB1
%\Y0,pYZ1UF=`@]&Yk+%ZW56W.pfU1s;$P%OUBWN]'2,b1%/1CH^Zl[%6["8T#\_:#49T;aV^'g(*/@0c<HnL<VHBB01!;Vd9hd/b
%9M=SPOosJROAFEpHJ=8:G<%fk,70<DGYj;u=m_OVg::a5Ts"/MYhE59HT57:ol^d0?r\OsQ.FeOZPqs/+8^:LB;32C8.6dfG%V#7
%.AZ-d/s=DaEg++q\0#R<Cu\s"du_k4].&@,n3e&e*PPgfNL+n\<mhDlKSq6%A4dpM/]SaXFMs?T27,E27cme^/()-_#R_>uW(3Z:
%(+Re:$UtL1aF`4G*n6ok$B.qmWj3>YVh%5nh?A4QOKKt8"@[P;7uE1fO7r)X=idni`u,tLK*PS\_.l7P^62LX7XW#hOWeKG5(6CS
%/B;]H&Y0h2.0f_pEuj2'OH#%nQRsTGVfMH+0SD0%`8O:pG:Y\70?=-Ff=b_80`NG00SGA3ffIl5fqbF/'b:/k8IGHTg#Mnd@eaJQ
%_6GW@Z#$_@m*qS\;rK3AfQ@LG[;HBnfo*`R_=SoJ!#KW-d]m1-9#ZKaj@Hj<$t9s5\'-tQ[$22slZI#N5iEDR6okQ_IMY1#b9P5'
%g-Ll90[%D^@.ERrQf&)`<BHF\$";qD<\I]f<B#A6FY_k:))Yg[DKg0,jV_\M1EhA7p732_l[5+3'HO;^n1A8$%%WQnJq^VnkK=EV
%%Qep1EgaRs(3E%_=H)!NPglZ>f0cV6nI+R)2$:0_*VXR/.q`'!YhrKB>m$o/%fsZ6,5d";o6AZ]9Gh5/iqG8O+`P;"<X)#qZDg^>
%,#J+RLHUY/n38KGq?Rn46l'3ZnP6qjRnn\\G#L:9:6?.0h/>K8&dL)=EslrZK3H>0-%T2iB[WYT%6OpsJLbi\>ho'EIQ\qOACc+A
%$5?QSNf]Bo=d2FS_uNBMA;S4]#:JYeYrsXP#dci@T*HU<C(_(`<=M_N1^unJ4W[?7+5thBpQOYj3]!Vq6O5<HqT+Y-7d<E>`GbpF
%k=pVEH.`t/A\G,n`#-b77pJP`,E7lCCG"s=IKg+mCt2>A'a+[&')`r4<$RX91g#N(b9/#=Ub5<l5o4!G&^g<,m6+`):L+V"5soYb
%3I(f+;FNAh;Qa:.?Zb_3/rqg';as5,YY44P&Of1:5+fdNi0GVFbT\j*(;b5m$'/Rus7K=Z-_,X%@P6DDUGO1'$8ZZaLY$O-@Ls!`
%4?cV%TkDMDZ<g5=n=IZ6^*mIsQUGDc)l-Rth^Br<"NplE(*<W5Zc;Y$ie,&E2$GR^JOa<4aRFN3KQ7bH+-0m1jU4V_Umi9X'sauN
%4ap+D$(aZ@5M]g6$uNh#aa"s)r:rXAg;0+NE#JlSl[8/h"h4RL;!.fm)-`F>\c#Ll_I\P;pgr@'nN,)OZZ-f[Pnm'FYX(Q%?F,l1
%J%*QdK9Z.>a+:f@$/dZ:3;Ki'@&u*K"=CnKl.E8`S!\Oe<S+&4\gN!G8-?('6$G!uRARf#%_![+,,ad+Y,EE0,XF(,(`'L!CiJP,
%U_;E>8Hq+$Q4/N3(X))dl!;m&AHDfr)<aF4Ch\_Z'/AITO`/q$2u6-TK3B&r,;"r2Ue.qdoppbon]R,/kO<IK?nKAb\J\n)VFeSt
%-H?3B(S!-T=rmq1lZCrOH165S09cCH1?9$p?U<*\0?`^)+hlLK(WCf"mB9.Pp1CZrcQ^77AH;?]^CV7"g>hsAAhN+&!o;YD.%=qa
%c`lReP!d=mJ;@,_UJs3hkA=ISSWql]e<n'Y!]Q/^7,f"f<;`7t0<`9Lk.%dRF1B0@LPlGCR\<#\_!%?(IFmjFJZX]uqX:bVD_?Z>
%5cm&ZQ'PMB9HqnP2H4=%#$oWf*o5d*Hop4=(;RO.H-rq$HMCKAhqf?W3eUhbS2[@opS7%DX^C(D.j2SO_e>P\<J"/'KsHBgCqb_2
%j'Ac<_i&m_f&'dflXum;Ik`Z3Q:b=!FlN&#HmTHl1FnRhY=pL0=b&^f#_n:ud2?MN`Lk5^K*@>sK#_?N#dQE+O!Qr#')GU$Y%JU+
%)"pGcl3<TE%fT35l&t?$q'5\!/11,-KYfa;g$lm6%3<9#2@3&pKMukn"F"<%O\kT]HN2+_"['`V&%j>Y.%o,qEXOBOq>FCu10>dU
%q#R;gQ0';8"Y2@kaG)2XNO'F5&sCmhhGA^,Fcb*UF[`6*KGGL<$TPtXcMbY[b7sHm!9"EMfJl$[4>-h"i?i9o#;rHcdKoif_<b1H
%'50Q4nfNFV/IPh6pr.bU0e6!&0p@Vb&nKo+h'TL7>J^7BNiHJ'B./`FYd5!pVO]I!'#u^>oXLo=?c>#nbdgEfB1CAGgNE^+E]GiW
%8Qig`<G=6+7:/iRq\*]+.3qDrpLTaLlV7%HZn?sb$HK[I(_H7kKe8ug2.<'7S(Hd6@mD(_GQjRVbW7&Z>@%GphfREW6VOpG\NP3^
%5X(N()5FmD(71bj#T/Z:%f1K%WI\Ni@V^QunenD0DBSA\n([d6J?X%.-E5Ms"t4K5.[Ghn%Pn/iPiG#tcpKh;CrTfFEi7$Q0/.;!
%^9"mu+Eku_0CSuP_:ijb_+.[DcrbKICLcM"p^^q0>(*t6R>9=)Onh[`7XfXgi.D:W7C[DO=^i<N7"b]1L7.0a^+0PE@a0sJK)m?'
%ne%4NqS`Fir.>UJBD(AN@A]<BlFsB1&uX(^i9HMEKX2%6-=6/n&CMQA3gFmIA^ohT@\B)7SOqMh00Y>s2l<W*7D:F>!mX9noNgt%
%iBZr;)CmJ3Ye^K!\i1M@TPF)&mSC.i.T\#acLS6mZ9P/kVa(tZ2C#tnJ-%,[j<QDIXMr_XDquDCIV.8\jU`:Y<RF^&M8Sm]We=b1
%npu]+muU*u<>>p0%2/1=S1-6>%GFoc[%XIrC<RY/(B3@_3O01fb,>#&!2HZDaPKpTb!cbfg8EDl(_E'>SHNLb'!N_OoMuj^k'5g;
%)dks?HOql`-:Y(O*a4GDL=mgT(.FWQUMMU8MU:[JL,]kQ4isD,]:kj;P8jMN:tDY.TT@nF%&+6oN*0`b+[]6m`]370(WZg'/u^+n
%pGfk@R19o1.S?!=a[?^[J[j/k.efk`Mn9ma?OkObG7f+T'F&p$5gWN?"6(+@\j-B-TVq)8`%B:h3S`]$jM@3eX925;X\A2#@m7GU
%5A7Wn^V)6aVb3tg5I9UQ[D,B@"9K2Y$(1T)#fm@RTpEB[,^o,u#?(L,8D4Du#orQDXjOBb#8iSS&Kq%WP+n$M7`FBUY)A+$Mii[#
%CQ(eqIq-HqW+i,[!6j2B.l"J'.qn1VPpi6bY#QTQJtWhKNuTO!UHfYap^Mfm.["p6gTo,R9aUW6JiPEMk?Z7Id>__%R;CbP&-`EG
%0?AT,;!Sp)K0D`R``"O84A?;Ua7)B6BI<%aDB+OQ3csNq.2Ytb9L9#dp_cML\qn6P6/c<qIdjh9O76'G3ii[X-?,g]"/UmMV9%>%
%(.umGnbgO9"g"ipaKh3$;b,'t&sTu'92CO$\3%H!.[&jsM;s)sNe5;OArts'\N7Jp\GP)i2=?F"\q<[NZIOG]j9h<94UdPLem3"X
%+j[Li;eh<07M!V[cs\bklu/F#VgbR)#.\XYO[8^M@b"i"l2FK<h`r[B9\9$C:6.""2hkVrXeIq4"bp\kPWGRtL[g+>WUh3NAjjTF
%2\+KMU0o1"=j63Qh-de"?NIjRk4mWi`\u0<&2ML&8iDH855c.__QG,HSD]>>22AhIaKF]=D6TLIPRidrNGe*+\Ef+*Lhod+VhZc\
%<[do]b6A(W93oM#cKkaU%=EI<c;\Il#hm2`SW5E^Z'nFbA/Cki4UKB\r8.'tFcU*&F[W;<_<\mK8#QJtB0,s$fQ((O4tV4h+YQ!X
%-g0f*)A)FliRHnYqr@9p\#\Alj$1L>]5?l.[NEhli(d733^%TjN*.Ke\*d62U_#3]dN-9;$$K5EqorQ+@ji&<li&rL6Kk/<5lsG#
%f$8<WY==$EQ.WUF7Bdi3#_sZgY)iBmd@UHIB__NEfbB[?;%On"<WhZjo='NmDM$C-,*6p+a*S4O@AO/1:&e8a[m'4pqQBG5b@;:I
%Abjou6T`k6dc1VZc+)c<PBqm6Zf`'91F"oj$H(SUh^57B1e'n4A-=UOTFY&LL;bYAXeO^aA%Ue-&eAQ#amU@ShuUFSM/\7L+<BlM
%21.uo5Z]mS1BZ6.%E$--jP&`/LP<8RGWRi?4A`u#d!I*"i6MrQ\dg2H2pWeaZG1,Yr+1+&=?Y5;e>I9AB]m6[A-JJ[!jIP,NuhYu
%p)`b0UkNe)ga@/)D+,YQ%Z$n#FCtWk^2Kp]W<p<+\]_.'ZZRquql0\RW/6Eb\S@U8Q"2cF9m+"]`]*j>eU[,<jJsbY<OHbpnO7(t
%[/*esq`sq*9(6)s*[]J@k83=0p%Whria.uKrO8Pq5Kql%>l&sM5koCh$SA%7@"Ws>4T[1C^/ZG_!'%b(a[2@I<\7A[o'0(j6k^NO
%L7,@cfd3GM!#f7d*@5cGXnmDZ.4m1+l;iOa!n@Vt,MR)[?I*h@F<KSK!ItVQR)#ONe/#j0L#*uPI</1BGflt^^8]!QmC/,>ra`3e
%bn*_g/^.cSmf/6cr$0UkDY]@&/UC,KTobC".!pH.!<T*^V+*M]p$a[s9M3[3,W0SpW40b]41??ibNrE^LFT5649I-t+3Vr"LrJpp
%RlW4f/lHt&nE1Ji+mE7(0`)ZjUs^ZjR+$XhO0*b:O9:?Hhu_oKKH7aTe:20HlS2forUD5&Ir`B3;[2(=DIr`WNC&Di9-/C,:cBMR
%!mm:S.P#K^JL?M2CSMJ>e'9q%!5/,`o&2=-gY"^mrXibkXT0MSn=dHLE^r&7"CH[(7!fS*D1U;'Wf>q%Y4elTJ@7m_QJC:)KWQjF
%6=)e_!bP`;7_B;,0HL<m(ro+]!%$1I+o*e9g#;6:Id=b_o'r`<j?"1qS2"@`.QE1S%C'b@e9@j$@!Ne==0"WM'n8R=;MKQ1Ck4WV
%2ag&G]!6'5ML,/]lHigOR"U0N*Pjp978%p!,;4L^Y[FlN8YaN\'f\J2lfMEO*>gY,P*,A7o6tjJRCJRZ8#i:u(UQd/8OmZS#bR\c
%E=J*@nJ0D$55mh\TH2B=V[b]n`AUB2_P)"`n2)\V2R8qhU[=mJ)]5uWU1'XQ?<@a8RQVM.Zn5C-WnrFITrh2WRI(d:L#n.Hc]l^C
%Z11kNU!:)_a@p7q7#'NJWjfiQeKC*N\<34XjEbhfZ6W9D*FGgpf,S$X"EDMXIg0\(;+1l!MQM!rkTlYc15_tYI9H42SF^k%^ejD5
%qoW^c!R$7T!m_o6DUc;jf[,PL>`I31Ci\X>0IC"G$p,i\"m_(-e'&[Y?^:BSBjZNm3q']gUh+44/Ij0j4rURi&-Am>[N!;[=mdmN
%jp-n.7Z;#$LDXF48N%\^7.+]1iuXfJ4AMs(c0?*>bKG_!s2B,-Qe?Vd0/C[8,"P:.@>"gp!6'XPJg8GR-HC^NRpY0j#sG80/SR_t
%G\sUG^jS5rF!)b:Jh^-&;Op#IQ$;p`f&lmG^`*7Jo6:_Qo-(19/HiXi7i;51Pe\R'j?sQB]+lA"Z]9T=B^9d<B6`bT[$kW$@2Qu1
%iehmtr6,j71kE"K*75D6D9kdHU+Mds:*%G*RW>DuXGLQ;V#RX1<tV^99Yi,V8!aM1.)kj?Z+nkCs2NH=)klctElb,fhjdjW5r0Pm
%JtfMQ3tO\F094nS8j$171&Ek+0-`au8u;g:Yc2$tTo+/SON_["J[LCJqM]q*bIVuZ'URTF'9;D9d&112h^9TV+:/bS_B,J9o&XQB
%kk:)b9!$Mg)c]BV_s:oJVCCu4:H,KK#Da98Gj2XSKBop833YJ.l,9VH0gJn^n(-<VPQ!$7QP\/mmt`oSSYGN17Wrk%lR5)im8.d:
%Cf0_O]B_(q7pXVl;3%TAc^;moh#e;cF3lDV*GL9F0kc""fT`Rjb-/_eS>$k#Ru:iJ/WmWdb#K1[dpgL/EU+*$K92$[[^.s\"L?Vp
%5bM:[D'T*L02]`We?QNMkeTR3>k)*&og`n?7"ICjM/TGe7+3Rd)/t@2P$1<!h+b8/O()6#_h+uiJ_=c(&E.#Bb.U:+Bk(l@()-br
%n:^ut9H*LHTE9b)3<ar)@o5NW*#FO)3rX#=$PBa@C:ha-OerB2Gf*5Z`?E3V-jJPudB(C3_]U7rMi<EE[[U[jD49;=_F&io!IKL(
%HHj8c8A8*V8r`Ml,[k5&^9tcYDJ&oNa=T/*;M%eE%PO?3K^cM`E)uI8Y]N,aMnTM*c1KYh.C2:f5[#B&fMr^JdMp,eaB\@sV8GVW
%P#,$*%&ARRi5^C=DeK_L.n1Dh:f1%4BW$j=ND*m0+fO"p*1'?GJT/.]EtV)7GE_['S7fse-PZZZ4.Y?-e=9g+g4h!@11P>6TG/$8
%qr#r(8PupaKm.<0!0=8+<'B.pW$qrV%1'h^WBDA3%)?&(O@FaX:q;E2F)bU#TSsr^-!'N_e=el)JsbM]45.t5R]qM`TRI'BW`&^0
%gfZ_)7ikGB%J::0!"]F+cX_Br5l)%VV^.3)l3JXRLl,_%a6m=GB)C41X:EEoD9e%Z#@p!uL>\FtG@iT4k,&fUp!9#Q($9nF-Vj82
%f&Z>_ZQt5j+g=UNSXA6+@G(0<5J`qDl9i;Y34K1aX]1>t7<j00cPX(CrX?Y1^Z_F5;`^Fa('/5GLt)NsaH5SHr<#=ofj^6F'Y"E.
%#G>Y:JJR$+#d!YI4+nHD]BG\TNJXuNMYJm1,:E\[lX7^9c,]l9(4'1mh'U.IWPk,gcf9_QH`-j-1[]JP4/5cEOJWjr`Rk0?:Kn/Q
%F)dPH#TNMPdK,gK6#5Fk!j_t>Tlmbar?0t90Zaoh0OT\dIu=4PU0qg6LHVrQ.\QTk9>OZR-m!3ZkgF>QIF,S-P_C\T8.@o*VS.Rt
%=2gK@:!2TZ8[2A5L1>a2&B%sQ<QTN!E*O3A%2*?giIDM8<hu!_CQ55KK:e=I$O/A<]#-U\kp5I]e0K)<S"#f#"T0R`7.VT&2M!!)
%<YZX-0>Rs,pH9tJ)1A7$db/nC-BUrBmo9E9YbpqqdfHe>(3/R#J/KO'((d(V`\dC<pl@Ld.q&a66r?*rCYDg#Vc)^YQCjnm4tF1`
%gqe)!)2sg\GOT-oP3g+rkhPmhG;X,@:Eo!:f&%\%RtX'<aUhT]b*Hf+/d`fg_3@\lPTK`:Lpk]u#,`TGE7N/^OMbEUda4U!MGatq
%p5&Hb!ed&`JZ\ucb^?"2#uYe2a:k#H=q0S%H\.cQ!#s@&1m>8#n%iND&tO[/Lh9Z=Z:Tq$$HE;P[FaoJGhOkj$;M\_[^5TS%?!S=
%H=@(FiOI^B\C_UL=R"j?p,##=aqlq=H\tV.S)V]oWEk_k)OULe"UJ\&!<]iOgoTbqVEjWt"B5Cj3QK<]2S%1?%%BO*'>L(X!um[@
%CBRk29hM:^^^(67_e/u!@D?mhYOmR=IBT'Lij'/N%tB4pI%0$`'PIK-UUE9j[)ict-un8BQ/))#a9ifJljh5hFsn^5C#6>C&a(U"
%-pSqYC'i-shk[pL8JOWu%O@l:#'f_UUBmD2a4f")R@TQp>;m$O<KN=<JZDSg]E_8n_DSEDTH;eJJ:nltA@%MZ:f02#]U"If@/uK0
%\=_bJ#\`\mYp]iGc,lllCt*7a@%MD&BuI7/1aE!5V$@s&_amZkKK=X\\1&1^;m&/U``HY_D6SL>n'dg:7A7?Xl8V*1qL/Q;%khFA
%#)lNL58_[TF]Vu.G\igC+ec/gKiE0IOqNYn/fn#_F\!,E8T%8Y`9Knd=%28Mq'UfS-rD>_*eeeIcn$kVa*>ocZ!oN5(%sIB`*GKr
%5[Ah<F5ii-2c'0_%E4(X:`*`@&L$KJKHVeNpk"E10.cB6)Tg:$5UJ2<"NW-Xmks=:ObCqGJ0,QXTSeJ:0W:DF&#ZQ3q@E9o7d],Q
%!tq+R0J,PQlshC^E/\$Z.<9tD5XTBj7q>XGmnP,']-t_Pjt!&=0Vka=YL#C69dSS8Fl4j.1^&:Ue(^p>V?i9:J]![C?O>kr5qm]D
%:p(omdr>RZ$7t_;FE$Ce0L;lDXEZ.%?lg?'9PRu":<6OT_Sa'N<k>%IKtSK7D]4"Q*5H;7bSo*8'8S2#B8nFC#/['dgCJmBK(D12
%"TaYA6hd7(LI;XI)k.r>#[%`Tg^2\7H\:pap35d,r/D]Wi-(=#6H\U5Ddn0b[5FbI+ji]BotXNN[rCeN8TCLc.WB?>T:mPj<KTpD
%Z3Ztho]j8$p#,ct[7FMaV\Ehi;QfYn1f=toQY28tTq0oIaTTOuUnhKSRV4b;_oE)9L605R7OV6!iiA&"9M:aO,]glnJ=ps<LE,HM
%.Y",,;)T(DN*bF8eOD(D0KQb>`/3?0Ob]d<R]Sodl"BSfpA5j"?'A8/bp5ea6+u!#?F7@,R2$U<0[)4sb;GW3Y^\[7";3qC3lg#7
%<3Zq1P9#*d;j!lMfl[5o]b[Ou0TRJF,WDE3HuKoW(0Xt4JWLn5!`28DlrMq`VBFNKHT#"kBI4<k_IKI9J?2N+P/5iQ-WmLuVa2&-
%TLM*LP=):,WXN)#M\5B/O@hDN^3`WH<\\k8FZCX.o+`0'SQP3o.2g_gQ&m\2LZ0d1]#bLBeXf36\>\<:'_N"?Kkt]qWY+Z^pr6$i
%,u6r<?e?s""nFI-gJAS1YdYTr,OpOIUTjT2*)KeV-)AI+b`.$3'E\>@n6RE(jK:cfC4A],ema:=Ca*Z:Li-.49KKhuc!r$J+KXK[
%U'+?l&!FSKh8lfa,UAAH)dZ2rO4+kY9m1q/S,f#h0fc_k>#'mL&ruuHnCE[,fe@9`?lmtZdSrP..9TQXj;g2%nRH6FoKYnSQ,.-]
%d_5O:cRUOCC;Sb%<&f2cdU-HtBA)_%Q(spkl9O^MKY0ou$7\KB^5@UVko`uf2$"7*HV#@lIhGBbkX/C_@>C"Ck_(fN/=N_br'AI7
%["%a9@`H\GN/0"eF>=lJJq3+scXh5('RQ@3e%EW:9c=S_8@f#/`<s,XG=cu(B3-<7g5),g)3&q2_Jk>QJhB,RGF^L6]sF22#Z30Y
%K:e#/,*Kf4"oIPQna_e3k(fO>3(4uu70-Md[fpS=#!j1_;2_8L;q=.j;e/lt;:\XLXHDg-"F'C-:Tk%0[#\MTC./=W2_2mJh`\DE
%=GWn1p,U>=Ze\*<aY]*(i<i[V/G;E0V=$B,A_#njeD$,I7L^tDMp%R>EeZ>%L=>YYs,m^rCK^p`-+O$==[;QM&1DMI=Lf3QAnj]'
%YR.C6%(nWe8cTXp>"[g0U]Qac&Y(^,@/2HlK5:S7H/0bJ:q.jNh]W97l7i]]d#r>VL]rrf_o%@oY=FUPfIj7fA`8qY4H!a/4Gt\k
%-*os]U'NbB35qubA*><Q;o*W9I@o$^`7\-Vb\1n05A+SdUj>r)Uu"9=pS]54IaN.O2%(`][g7JF5f]NK/B_u@1*G-_O60oeRua^/
%)@OU`>DuR&0FG_D,CA"0OLZp%Hh8j(M?a."l(4a%AQ7L)VIZqeC6S1O'eum'.-)p3ZKI-h*Yq]^lt-cB'h*m-2^>SoJ?(qXB:53i
%mTsdG`>AmWdq^a7G)4"'_!tXsOMe9>Ad%A3dXCN<<i!b($>JF-OQV\i-mge0MM<sp1C_3hRQR%-E+,N0/MiB(4YX/Eo^?]\5$4CM
%)+OQA;R/l%Ql.;TCjtMuNgrG<pV8kHN?qCfbqNH<hTCZ0MY5'\fgN\cr?JF"*C,.3?,>G)AqHQf%q&&:3tW&n6)#brb6YpW^c3*4
%4)EeMS%6W6Z`Zt`P^EjAAo=t:HX0GA88s(IIe`)PQ?M<F>!LCcUBPlGWKbCfX[$373?Y7QC2]u"^9QH\^k&r4J:MmJWaUQ+J/3sU
%ccVF<5^YB)$XB/h/Mq)GLrVC\KYK*GpdBk@r++kBE83"$hOK!\$>^+4hOZ?77Vp#<08"8&[]kOfS1nm^GUD"(*,Yfk`eW:3UaE-;
%-(f!VrWbp'#/Dn)LbIo]b3fUBL]ob?TrQ5(=s.VGA&-BI$d`pX9.D^U22\Vmh;MP_@\GTUO''4T$'-\W(6lT^V%]K>9M/BNLd`N/
%>$(_>c*FTrU<sX3@1M'rp#KN;Qg5JRMVPnZ'aQdUXG#l6J(f!A"PW\+N!)*\C'(&lm>@$VrYc)VNWaULc[rNF)0W,f]'-CO!%WB-
%jBgI"A`^X1hQL/A\jq4SOVA_Z!X/&gm#!J1)u)RNclOop*\i>V*[OsJ+Z.4NN(IN!GJk'(oGN.N0n_a*`t2JX'X4/7ess=bKmr4q
%759PT(EEE*`XmI7&=R)74^n[."I>9,K_C3FoS=ZtXr)cb-lo?(giDd:)"!!l+blX+nf%/C@"p%jFm])ZeNc!7bu4mV3J>a!6LZH6
%rZm40H@ui+::Rs#'LMTLAaeN*(T3Mt3[1;J"HD%UX.)J.:+^;pWCEWYMo+\*S&rnW6(@$)`0q\,"`Tqm[Pa5>E78b#WGD]mDKq=$
%;@ng-NHYu9*8=]_liOU,!er;5U@Bl8_(:KNh9.LUG_sFk!4RQ>#$47^<#3!-p04oG@+,tUXr>^?Sn<SB!nDQ7jSu_+KSOl$fh2&L
%[W>Q^OW>s[Z\>GE4%Q?Pf"YFQU22+Dj/[_NH'"]:bi%k^R"-pT5u!9a.qhCM9MP]&Cn)NH0jRLBhq'mdr1R&L/<BS:m;2%=;^67W
%db',LSmA5&6>PUtiXWb'd=f>uAkI_>PRod">ZT)5n0D.gNp)]lCr!BXcJY\0gGp#8*;F\t/ou9.kNd/uR<7NEX:f.^QQ`mM7rQ?m
%ljn,8)ZtT!]/+T-^"MtGA+R2bq*t0;=mbP(A*jau[[S\<3/>CAKY#e+E!Q)Rnp`6&2&Y:JH'<>DRP%Me@8<!ibte:MSj.^X<"^AM
%,ePVE$W8SC_i,F0P@ic"M]'_J`M*g\#(e'lfB\5gB==PF,<IplicX.-e*De(Nm)),2"TEngB$6hSB(__&^,f[3>QR,C>O*b=pCT-
%Tqh[O7`j?L5hpk\^mP'Rkct,b]St%lIJr*PK>GZ^KOAD.pu_O[LQ2gqWHd$B4=U03fhNj!7VhO4Dcq"X-(XAN5k@,Q@UsA(nX%p=
%oT*n%hj_p]?U[b6E);CYSqS:E=I0aY`%apJHj#?UNk73W5NuBFnJ6hSE,MV^,#2XJnZ%n_C0ZC+>FZ9mSK+!eYgWR>(K$!KiJiUm
%f6ee3>^Vh?%f]*[e7ri"JHa]RJNZQo%VuK&ArPKKVAc"`oAdNK`rVf;85oc9*eA+G%sE)X8BsLT!q*t3UKDTAKPGhDfBCde&>nMP
%_):&Z6MufO1Jj6nYjZb4Oe>80G\kheOgf:&5kkr8!]Jqd.WtId1k/oe#_=5o*?5P3XfTec_[KKiD9=YpDR)?cr<ZnU&4),UE!e7Y
%>W*Nk+jP":0XfD!TGBcmA2lXuZB1Q[A>OM"`t>ni3B^C`7G6ms>ijT^3=Ln+cjN*!7J@@nT`AG6#hJ$/Va?K'\P%lM'De-XpJ<t;
%79S.S&I=qZ?7<LX:"6MTOAPq;Zb#Ofk%Z.T,>N>2q,@oIWM*hL&E00>*G?##]Mq*7"u&d4*+C_(PkN--"MZu]/LQpTK36c$9\*s#
%h<u(FA5[)D/=S^0a2>"BC:UldFkjo)3Rr,OBJ&spL]^@c!%h#Th.1H5*Dp-4a)&:>ngZFRVFJAjgCU\7N0]e-'NH5!%'7;(Aai'A
%].lNR$?Osch!:s2n8KlPkq[?O>P8cPGXV6_Fq@)@K-WW*fZ7@8@W(bq_Ktn`5ZE?ep^7sdPSpT*K7q&4%oX!fPO.MUbuj7j-tJVm
%Wo4N]h]h'Pp:/14QQWs+Wtnfj5^]<t"PZ*_HSX)tCBu2-<PeD7;AW@;gC:G(bP"qUG?GJVJXD=s7Z1C8=RjX2UL])7lJHtj0cAOW
%ZiC3F(i!r-"E9KlAY+`k?57CSO)>$A2@XUkY@tB[nu5MCT7X]//+la\ZEjaD]1I*_k2etJk,)2%=P'@E>sMhU!`6BIO:!,CE#Ap/
%I(D/0Ft2/0^*J*mBcIJP64`8?X\ZZ8?t\/JCHF`+&3M(Yd(ooq+uMQJA4gm;"'1T\n1k@L*!J_cYtNAXWpjO1YjF05jnogaYW;o(
%b-6.2Fqpe'o!o7lMKr5m1\b3BnTi@$DK0Q6*fH5?3nl\'<ur_s*"sak;9pspDs6H5:mnaE--_3h)EE&m2doJ2B%U1dJ5>-2/N)QD
%57u?1&$oJo_C.9URo_K<kc3lcUG@1a9nckDi2[>k91ScD[U`G-QS".?P1/^2`n#m$H[0M:OP)\PUcddCj%2e`a<=\!eFF1+Hs6mp
%=<8ng='6>u%YN[g@A>FSSpM;,_-1hH1L%aLC0S3PTe?$2,Yk-d>G`XtffsZnRs]:njs[M2B*G5C&_"q*5<fMFF@sh#"A,8.`8eOE
%e3QZ^:_s^!%V^uabLI&kFJD`^m#&q#%od/,JnB6Vl>,&<hX&d3!f6l-DHHFg.eK>oaG1c[b$a-Minud;Wd_Yf+44<6_/A$0s-<ha
%OJE7abHUO-q8H*koZO:r&sbO#m[gnKKOcD5L"\]^6F'Q2Uh]?)J-MNuV5@#bm$%Jq^:Vd174*=WZa6>Bd*,nc+G0$Ggn2ZQ:*FjP
%HPd%uKet2e.)(c/`]B(crRFn%E]L)C&cufUg1j3FXf<:6U)B53esMCd"4j4/@Yf&im\j.r@iCK4mALe_WN)35@'PXWFU-g]Z4an=
%d.<;_<LHudZ@flB1sco2T9N=s6HF3fF%/a\)l>*$9*#c_[KAo'G2@0glM,+!L^F0=W9,NQJT`AI5VjcHgK#Bi6HVd;P\+<fJD]&G
%kupQb+<i?-LFB#H+39&>&$\('k'$4WTEp&YYdBf<,LLXn7ETj>dE"SkUl4]<FY,%i7)$l%R#Y'<CSl#G/W($Q=D!s)TJYh._\B>P
%D%n\]RKb91=_88UCnS(Y0<<q(!isAD)=;,e`.I'^F92.kEsth&m6n7eSW`.AYZ]QFJ%'U:pNDo`Pd-p).]R]g"R[Gr)msm+N8[Yo
%/JZ"=<)AVg!f=?)`*SbYm@Ve-+IETKm>nQSi9:C2j/l_!F0RX4gOl1$FAkcK[K3BBd+tU-)VDN\FTYj=\'Y@4gSWo^"\Hn+[m\Rq
%DKK7VA6S#_mUR0#d7X,?KP7DB,!95&[s5/M.u"0?c?=!)]DZ?-q-cTl'?b,k[,8U#aLbL6bL6@.!e7ZmXukdj[^th?fEgC/lDGEF
%bGP9XepjSBhC+Ss)WtZTrG&lKQK5ZCqeb/:roC*WJW<ZsTUOlO5\]29[WWsR0Rk(gq-.00/55D#":L/$Y/H=9(CrZ^,$!O'Ur/s\
%2;CcKf?A1is/&N5gAn4H(<H.)1.hR,H`2)*jCPRqioJ+-7$HOm^`WAQk[O^]+VU`onP3oIS.QIokO#'c+l5-m(/XUR>5<D4j$4F&
%jMYV7mQWdQIjtMiQTJhfdAA54%.jhB4FE6U#dpeHkT>nj.M""8QoiZ*5qd2H`Kt$M@Z=8P_Z:BTs6I#MoaH+ed_%f-i)?[lkS+;p
%+uMRh2AbRcrN%ocEO`Y?#Kdkd!`6O30[[%FW`sROBCA/8St[,:/.gcoV0l+6McLOF9-DN=o+Vi&2RG\Rk"`N>5TGI/Fa@?9DjL8U
%8bYse/:;b92]l&=JPQSZ'o.W0Bj+4tKiTo5>h6cQC7%4,=>/ck'.&-&Mk<<W-7SNL10k/0kI)37[2"p<Bjujtq4Pe6]4E*sM)psL
%mVKPM]7MGmW"9SE%$XPRPZ>SPLk;mr31Y59e<C[i4Ok'gYH)5[_N$`#U$0+i5Tp.?$IKW_i?T@QBW%l0#k)+FG+1P96\sqHFG'(s
%H\VooFl7<]AOUf!Q7`%j<%oL(S&ouO9Fo%o=Nq7Q;$':IQalm(DmSk[>,Wb(jT%Tp\A*5b"Ye71R>>"b<dra>r6['k,U@3G6j`_5
%o#r<B4u]TooQXM]["T&38g1/PSn,/2Gj434A(ei!10&?E$!74blHF4Q^`o)?m)KFr)i=%'6-4EU*gCIYN_3o&4<EtMJF75$>#L4[
%6"SE`,MJF)60c0lm%KFqBsI;urBLM2KLVG?6J,\"^u<:ULA2pD9US$UL6"UsP^+/JUiRE4OfZ3m$(kIL#[kC?$FieEY(Vn!)\.8C
%OXk8WN<aP=<2H$Y6Rs?UI1+"uV9PBibTttVlWTB=%F0G!]=QXYs%,X[:pMPOL:S2%_KL!4Gs:FpMj#OQi*#X@mlI.5Q#EWB+1K=7
%)Z`RNGu7J\7FK^QR[,QOe=LNYiN5YXngW")lahZ01@'n_]hR2:8LYk;]LAsZPIM=n`V.N1h)Pip%L"'D";0et#(G#uM5uB2TI&D0
%8uje6a]LANd_QlsHY>Z5!PQ.F.",")r0r-CeHd[M*)hQ5WVJR"I&(L"@UrGU$D:f=O_d>_N7iRB]\(.uas')=RLA<m7QE(Nqe&VX
%&oXj*;Pm#0Bi-_k44TaC2kKF]Zp@n*ed*oC6^+(9LRH3s=Y3<4ruc0dR9Y91Js'))X?3/n09[AeBEOD7Cdm/9[q++Q<h'Ehc'`'W
%M.m_d#AO;:89&K'gq[<(5O_/JO`.71$#6(Im`/NW8'7;<G%b#))4&(6AN!oS+U;0pn"6FC=LP8`c,=#q(e+rcAK#]UF$RQ8"]lj_
%S-e7087`/;^N@0B&L]Z#V,;!_GTL65>Q.RdfN-N83so#@K-!Zf8W5+_3;>?]qrF\*^8*t"'Fc>QY/1amdZ):50XU,%;Y-I9XP=1h
%$K#i=Lfj/T9Sc29&;K`ILgMHl&m_d02Pf,d:n"[taWI%a/W(bK.nL>PL?O#qYr6HV[Yh7;AY4F(_k+uGAi)]=pGOUS9R,U3^cM5N
%F-*JVT`X-eoG\B=?kJ/^bd0XsN'0jtOf/-aP%LG#J[ALY&*.I'\fQ?E\KgX:_g>h6gR"]?@FFtn3c,'m"\?"O&n-UW8ol\Wa5dms
%9M+pL'Tpk#'>_OWLtZ#e2ko`[H*_6E,):9<gJtL\q#fjkL#\C+HPhrN4j5>(;3RMFKqrRW4flJRJGOm*+09]KN8n2c6n(5RZkFi2
%O;Jc!L^4]^o!Vg=Y_Z09SUe&KAVsCWdD<'qK:,0E4AaD!&gA+f$Fg>=PMrU=(hli/>i3`A.14D2E+57S^B)N@V_M1FN_kd,8:AR(
%BJC-O%9D&?rN`j6?Ol7Q!=>*^_)<F1YU(,SdteiZQab/4)&kCq3i:2Ok#@lZ,arh<>7O63KZGV!9AGp$'dn,OK;cr2?uEA1s5rrt
%mQ#X,D.[37,Ak4):o)fTLmjWkF'=[DiPT>87+@[_:*a$TM2cnp"enbD^!AVQ,Cg2X_X#>WMJ#KAoD(7tB0Z,.<EtP?9Z;N1)V_,+
%WuR_G@@uW1Lu>O=#srgQ_Zn7U\fm_CA.u[nn/i,fKBI0!Ar+&.5I=Uf2Apg.V@V2^$tA$1(TF''60@U60U_YYg-q4U<5QG,EqS&t
%,%AH.>8s!7%\as-#F6VOZ6q"eC!4e1D6gsp_TL'--9as9-)rOb@n.f5?"FbCDFGIshC:rVKkUmdD,@36muaV1A'l\*TI:7>M.e#1
%[?6E?LP5![.,?aI;)H3.c\ggQS-^;#aLfn?&Hf5j?:-$Z'KMW;<MlO.YM"Jth9XtiH:FK$MK]i?.+Lfn+Sc;AB++4GiueD(;^Qmt
%V*g+i-jqNm&Y\dW2SW4R\MskDWlX"/h!4Z&3^qH\[I?^o3Atm)=eI[E%%Y5=K4oQa<RisQHHAFLjbSUnW/nFTHno\=e452FgUT'B
%+<pNj.N34mN0+5LWq!!oIr8$##c9Na2odDNMWmf3/90ihRrlX:#9f<F$MC[An(D+rZ0q#(DZ*FRikPA%PjMh7fDVc3-lJ;9/YE@4
%[.#B8SSsab@"pK'e0G+Bmas5oOm1.lc@4.Y<F4+Rc)tje3'5N+ARWo)@I?!l1&tVigP71mb(R#4N`D;G72;+RF^X,.g(:`OS*nYS
%8lB5^mNidF!6ht//#8-);+cd[7Mc&Uk.p`:DZ`[*^C(7-+WMMu!Tok<3IXS89jCqPN@0UN%>fA!^F6/3c_Bh\XM)?eDT8BqBX4'u
%D5CI'3n\I="@/GhC[14:IK#++]9W.,EqsE5an<SZDIu,OF$-(kC-Gd&`&k<KQ1<&5q'd/A&rWpYS@/M=5GFoX'!3%eS(sV-`#n8F
%]ej&g:!H4k2b).8K1%1%_'#CPS6QCtX/\]m=Meft%:'X'N.<1B#D[Oc"%OcbZ-gr#RK3mIIdBsNDCndXYfo5Jk\)#qTYttt)Q(DF
%;RP4HfP!jB#gVos\KmfFij#T5.BPr9@\D^l@P1u";5u!r8:&=niZ*ApH_&l#Q.K-N<H46^?fLO$q.`[QATY'Wpi`%^9ZPmZq`_PL
%:[Ydfcc'oWa_E$fg`j-9>RW\/B/"UG6%Ve238K@aFJHjUm*+mRRhQ/FmWCX%TJ$Z;9@A'WY$h=8DUi[[R_:o5Zi9gUf,+A(L\,YF
%;Cn2\.]b*gM4]e+r4LZSm+'.1/`s!RZf:mLGJ6q[DcH6qBA_PUhp2ur?$4;VL#:Dk(XKWiZ9`UM?kF:Zp;i'g0?3D(!5G"Xp[e&i
%Kt^^1YNt#6i;:g8GJ%"<Y=eFB0Xi,R8^-7)XUa(s>5)TBM^7\h307Op#68VX!="`_3tDnh)2(jM\4%Xa,OSN_LQiC6:J&6hb-3/n
%7c\Sb"<qXFnm(0rKS7Z%k;:-JSR@7/&5F_Om:#nS:k!J-s5K!Pg&c1$L5TV_Q[.NfQCfdOTKHj?_i`tliI8_kZ8mbiC8U[oANmTF
%ZGi6A9]RcRs8OW,iOTrArh@pS>9VSrI&O@a^X5fQ=%)H8oaid_":E8G`E8l#q=[2q=-^DMiGLDcft^5!7m,B5Oai_-0$MmB:X/c"
%p035hV6k`E*BFPD?.Jb[D+gaf(H/;+$A49i_r-30X:h8J)Oc5[4)LXRKU-5;EI)3?iM9XTE4,>B4QnGFWV+a2+P47I2g!ImGCCTr
%dc((CG-o<C_&P?l/Yppp&Zuk?^Zn(;`64efi<G-Y+_)8=pF[[3k^nAe=?80#I[:b*r"=lBHT[kFN1nBt6&]/1=t`t:buDX7nH2%_
%I9K#&S7[5J&&7,OSX1!&@FuR_-mKWh7qC]'J1VS8+l9tp&5e?1%Zkk$AQ7VIKf9)1?[\(]MXL6)B%;VaLU.]W.>4_*Cd-?5Psu'9
%4c<$l:^1h37bUGrrPM?);Gb[8fcGfg)10#JT+S09p^k8mWZg6#(M&QH6^8_t-DW]Wo&Dd7_jY.DU(#E+&(H5%oK#ELWu^4tM60?b
%>4iu@EEnq<]U=P@`BOECZQ<`4F_?)9\1V"LFe;sKUM'#l`\f*mP?dICITnQgVLPk.hCQ.ZR_0,hL[/L_5E,Zj\Ui2_c"M-TAVo%A
%%IL32\@in69u*5epZ9^b(EL8hO>"2VhMuEA8>pmu@j1\NAM.=R#GadA%r'Q<K;/e:KGV(q&0YTHq2+d<4ATH\7'p7c;r>iKl:$'8
%,7-Ri']kN8gWitT=YLEpGJIdfpth?CAZX;Rc1bh&?3aI_hj^nHP4W<*58AIV%/=C;hY^?OP&L39i;+6QoL<'`9!+)OUTN[c6gQQD
%WT0V)btQ!-h$1h*TM\u[_uUZL]t!(AYAtMLe%>BrLt38e%e"tb21cs0JE("Y#QeA#Vh90N1Hk-FE1d4/Q/>_8BbsO$f*Y2>*ji7<
%R?pWK=atGpcf_u#6SBdeJ*,:gI:N:`9Y)qM^70VE6?q/J'Q'rab9pJ:&g`[cI.9=c`1)>VoHJctG$Ss:[t_eI$fd3qEj\ttA_6!a
%?Gc28BC4M8=mMb=D9-#Gfq\=j7;rgA/*G1R\rKjNiqK_V'Oi;_9/m\rG]GbGA@TUpm7!@PUtu/r&[TfM;9;-a"$!-,Bo`.PeR/=X
%qN??Ahrh1`%'&8U_'i7iZOUVIQ/K:`p;drBF*3N]RLsO;?AN>Y`SoGj_1)-XmiHJYLU;t;iD]_]BO=,[&-VKj=>bTC'q##l\b_51
%./knZ#u:nR0\&;$?d>HaJqQCA-n*sel+A3Ei9+a,'Pk5sTLK:uT3FWT5fut.L`G&V5E8km,.i;9PIT0fK2"KQ.0'FlrKS+lY0&:N
%:.UOqjRjo07=]Q#_l3eCC]8I*Q:MX^S@"oBCp%*C7>*.Y'br34Q6)bgS-d^lYP)-dC@j`3hi#V(U+WhN;:DEX`@3#l.PE]\=;^M-
%;C)I'L_8bsE,@p!Qh<UuRT="@R_uTRn3S*C_*4^tOm^qMKO%*bDbHLMr@[@YlDLTVG9Lh$Zn,RO>DR<U;M^:fVGs+XPAE6Nnd+'_
%'EBhrI&Pf0<OQBK%8`j(fX(]e!)Yjq7"JVRD@^i8C=u$(<n+2T+o(t'+%Q8meU1)WQ:"`m+_Fn8>`01:Jo=FP%[a<;\^h3J`lXL*
%m-XqW.lp'K(?O9TJ9A7&JA,6r%@R7u9YP,TcR!.PhiXZe-/-RN6m32TN-isZ#X:4U,-olBW%9GP7%\<q"<bE="RSH:()RZS4c@=7
%C^&%a9[d9gGr'!^B-@)/4!m$XgUMkCR,JV%m=k[7`7cKdD:daB"`$kYCCa5^)Pn*SNB6PU6DH$"!tkMUU5%[!X\KC`Tp/c9=J@^l
%<mCRe86n=K-a4Y\)esrd6sCI*<'O8[W?&>Bb0nhnh4'RE+RW"D$>=s5SNqbS*Z&Pr#m43he.htKBT$q5-G[tAS=-$3VhqRf8ELbo
%>+uD/kZHVG+?/=jQ"+@,8b6<S?e.u\KFlt)$/F7nkCmSa1#cO93UEcWr"<h1GZX<)]I1W&@,\@:@'tMMC1L%3n-QJ#2X"bcYnoAZ
%XmC\;`$/r<+=`L]EbS]!Xp1h%[j$]45A?e?#-\7Ie$?6L+=IL!#9uuD2*V/OdtidZ,10)EM-QZ@GF9[Ab]@+#K#==n]g5-.+45(j
%3l0W)^kQ^7*YdldR6a=(KC'KM*Q5+?e>m6Z8-jPL%KnD5KX`8iX7qu=35Ao)<KWM2RQJ?m0R#K6LT$a/%DX5]K]bYDUDrEUg/.?8
%SWj6GOc3\bM5Rr0(7n0="1u18.3\#Fp7P$.Z=CWMlt\rI+`bn8OAs5#LCZoK=mToR-!$1j[0n/k*5Q#1gVcI$QbgC0b]$lJ_gK6s
%bMn[!8E<*pd2&rrec4"h^kJDD)Y/XN0K&-D6s,3=&'O\%`*3ha1.Ds8PstPKC;OhS!@D/h??\``:Qs;k`@6Zm$GZ"3\iOVk*2MP]
%V?2Be?4Wd7meTLjR-([uQ>ns5@KIr%gXO%$M'tu/k^!lA"F`?>7$8e7%(u85#5%=]p)7\e`H,p!`SCV8SqSFVgN#+4Z[Uc@2X!"@
%9FJ+q_%+GILGri1rB]B65_G1tV2Ms?84m#4,TKQG;YjWgqA&U$fHt4!<eXmr$sK.,LTXgM/mY`4F.H/jW9o+N_Y\I>;\$fVGolI3
%_suVI!mGC<WN3eph=c_&^K</B8Whs3E*'+T`nk5p((Kf1m``%p"enGIGq>B*C(MlhB9p<G)(5S3:^>AmSk?0107=7U(Wd.>dnp)M
%lAJK1XKU*h?B`MF]Z49r$iW!a3Kn,(UaaZiK\6tUQ,S`jm8/^IO#p4hc7K<3&9c=Aab;XE7<a0:(#7id5\ni[&MQA=%(S`jI(&4-
%?dOJ66m>9@fAn-klWDs_Kdd&XbeV?m*],8t?cZH)ka6&.6HL_',Xc]7`Xs4W#h[a`.91+h@<?3C(MjI3\kU2co?lg+0TVY2#DuKU
%=5:iH,)oT$h3UW.&9s..JSJg48IIm[Pq^rM&:?KigEW[Tj-<d?a'``nbtjr6U*=D<CptG#Fat*ID[Juc.U+&gCp(=ll0E0M"D>ZK
%]1@"N"@&7P3OB+i\M<Yi.-j(/r/sY3Ug<\Jjn+&2BS;b.P_)\59]Es?QLN:WE*?E8]0u-XH=gPoh^f.R]'8jo:"U*3oh*2UcYH1\
%#9L\9`&:38"7^D/0tK%*>Yfe\<t<D49u^irAVc;26%Yat*rX<)5aUp[;77X?5=a^ESkOGj_"oT[m1D9OFiVmIc>n#)_eBKUUjKE"
%<j"f/1JfSj&-8-7de]-[b':OX#`o3H6T_i3fr^PeY<6b+TP3kU'DAf_Gm5H/7Fi_W(>YctB[fP]?ZZ@R'$P++_hVAl]?hHU,*bpQ
%+tJU:g*3+kD(F)/(lgjPP!t>-'YuKUk_.-CX#nE<.5g\QXQ.F)"li^nC[<.>lEV+h9,,V^&L%;h4%iH#c;,_i4GBf!D*(S.`suX)
%m`jPB:)G3)>^7Ge(II$dC=83=&HIrUGm(Ncbo.FSDjj>RpanM+DZQqk3Qf:%<"Yd_o!ES%9cu#c>se^,X+Zr0BGH=2?!PB(m)!]V
%(\97:G.YkuZKDTE>X`8FA>`7g/`Lf*`((VU:@N:MWi0:BMl>J=$OC;q*$;U\e%<5#DmM25.jgR=13Y+$-oNJD;:,B:<38p$H@AMs
%2s<=Wa=9'%`PO+3Ap3<laNe1'l.G#_9Q?*n/]kuq%?_]or_(?jOGH)p&>5T4W93k[b[-*3(.PBm+r6:OYmEUEYDumc$??0)@b):L
%n#)J3X8F]T++`ghkY0THR4m42m.)".9@rm7!5Kg=X<-48rtM8XA4/D`R^BG(?@C;XM$65m8FLB#6qN&N,=N,TdM*?k9F_'7O+_oV
%m,U`$!IB)d?8:<NWY=o.>Lp(+,.^BAVh_:^I5<o5c#-3)X/I!gETF;a`^UY`M<(I0o]bhY[6;Y5f\Waa?W9HDRs$-:BJhQ@+=>q0
%%IYV'![M;<km7%SGLO,uo.aJd`^@e"8_S8;IT`\f)G"9N:upSMp-Gql($1#q]DN)E]kkF%D^Oj<cOk^0)MNla&34'&'ccp,O=X'-
%>GN7XRRB2$.!@(*mEJg6_roFF+n^p8U7E%?,iGH_;"?FD.#NgKAui(KU`h1g]_'`MOq?R.o[?N]Z,jJnGGnq%?/N6>D&dN,->$4"
%J/L$Q2?UB2!coW0Q!n>-*72k)"<XZ+`3#c__X#U06SgQaL;K#>ZUH:ar]j0bkR`Wa@f^W%&tNlk`3/NmIUi(4e8f&i0Q`EciNmeg
%(4ihS)hb:51X=XQUsk->6M;Z+FiKo9B!Z?a<_^E$7;%h+/,^*(1YQjldcAYJ&Oq9"i/(j!b:!!C[&l3a!cO_MaS$e1mZ"P-ZEl2H
%&oWZ+%:@aU28PBCU7H6ua>B]9YXTNI1WX"]f]JSqmpmhS&!(8qN/&V6,gG\URcjqYkt!PDb`F#JXM_<Q[5^Or2Vh6gn+\FpLPQQF
%4^BOeG(kE6,:T[\VoZ$\jJLnWj6>6:b*.:_phQ?U&k.4oEbPOK?:TCqfc4WE3'9t^Ysme<=$Y&*750dGV5jDkk%N.7&W&(V)m$)(
%M=+OtI=8^;IE&)lcpWSX<B7!K=O:RF4O^i?OrM`BrHO_?He&W=Mp#94f:k`g,Nq\CNPr?#;f`492h@mo4[T$'j0%bg=8*PT8i/%$
%O5U^,em'8W=;Ij:D,O/leN88s)g(?OG!2<nH<b&dCbn+Id%oAe?.O.=@5&+VUDkMG&,D%WYTBjRL+h5(&=!:2^oI2BV;pbfN%.`,
%J.oiD[*)1M/K-#_C<1S>%(7rBp&u;C1b$S36Y)h0[>!9S"rR(KrH\rX"se:Km^%Lm%\l5c-2(C;I\B'IcWBKj:HXPNL*79GV?I8P
%S?a$kgHFmdOV,dObNL*L5<WX%nQ!;]9i"*2lZ.lm;%?T+ZIJB1@m;QL,,BO+qFjnZVk;%8R<qUDQPG,F:SBLJ2,"YgpG=s?ZfX*V
%cjnYAXg0*jmHYCImS.("[C;r=$[\#>OqmVOFI8\s7)c^B7,XV\Ud;n#>;dKM?0l*]]V%oe'=+I11mnq-+<85&fl;`g`,%/\hO(#d
%OnrTe1kS5.KlNC5]"g:*#PaH$rA+57UYa[8gKD18$3A@@jnq*C/WBYkket@Z@bM/?Z=Oi-H.';O4iVs*_VF<Vd7kSn'a7W24rM`s
%c,32>pbn"-8/PG42=bdXJA:BrP*Ii"IQd!BY.j1J^Fr+sNpD65/Y]U-dA#;jW\[5l"Gh8]8!;^XR]FU-SmlJN--3&7\iXM-_fk[+
%;rK8kNkMg=Zqqr%&2=jLV3=LTfYH_in":o/@c>=[#-GDilpecd<%>;\QSkQ9B/j&.$g8Rb$f.E333$B%e2>:U:KsQr,nX/q!>_3k
%7)cbr+4^g\,`oL+4QS,eB-KakHU*,D1KVnEXVA+MbbI.+eJ+=!1N*kBSIs.7jt5tarf:30,t+eb'fed1mud[MB*(J[RWCZ"#e%<#
%&Z[>2)K)NHJ$GT\mk+9a:->ru7-m<8O=Htr'X_VI&J\$uXAeNrcEXq%e4,Te+6NG4RGR7$im=M&'-TebTXK+&_ei;'6UZ!ST`A_O
%1NfFU(F</qVtg?2@XoYL1WHo5Pi>IYid\\PJGat#;fg,MFDV&&%YQ/38T&8QC8ttj]P*U43kJ3D4$dLiSeMjkM[[GBd1kFa)?fDS
%9S,>4U"C%LWgFp0>c)9Z,VpH$)tc&.feInjnnEaKH8ig@eJVkcO[,_A]['m<YMXamlSZ[/q"?\pOTiO^Z<muo[%kMoL=A3<ed_BM
%<j,AZKjqOS2Pg5CgTjq$d>uc7<;(e@Qq;Qc-#R_Q=JCa^Ss^)k;8#'Nd^4[R*,a.3.oI$=6o)i(^9,-fG'1*;EJu(-*ol8sos2L"
%-QM-7MIAU[:LSCQhiDs]T.pYnAl@X=\5%WM5%qp'5#"bi;+jF^mkR#7+01X:%+^cZn9%DXj8M)$[QV9\HEbOd1\%/!'Zio&Dh:f:
%dp9`11q?%4WRV7>OBF[_KJhni`?&^0[sWMMFCgNBcS=ofh+Zan-o=X[9mZlS:i'7Zihu]dXaoZK$IBWUN0(-]oLq1Tk%38uaf>Q(
%5@ZEV`.#,R?C'\aiP&IO5>gJ=:`Wd:j@_uQ_d$<T]*Y]Le7&c5Z;uWWE][K3E*XtN%N(iCi8go^eO.qu9U+@jZ-2Q"+<heV@Q8oe
%9Z!e+3e)@!J1n8,AgP)BQrlf7QBjDQpB>eIUMlLi<UIO])I>;cmG7PeSn53/^("U$`FYDRg5dIL"MrVq$NRgFd>,Dk*KC:mFuZT*
%BY!@_;n/(VEMn!NE/V+7-GTN)E(9Y;35p!mn?Z0*U1]N.E6O%QMcF%3SAraScoKiTV(^_Nqe_;`ch(TDnL@N#Lmc<D0ZR48PlZPK
%0jqk$7rVLQm].KB0$AHciG)<(f=G&FHr])XCB!qp[.ZNRH>6_][atW.Vdb^^ZA@hPR>)$g:\E^,Fl'*+6#GJ,lM;LWTjbjf]o;UP
%0;A)G"4]A4%l4XCkY#]0ndj(5<"lo49gCV"F%=r'VR%Q^K`h_+,jJ@aLZCQ#W]J1qOi`8%T@fGT?oZ3AM9),o!uV^W-8%)bl1?b+
%GX]5[9J>Gm5`a<r62Mf,H_;I\D`$VoA45<?QA<[:-#R^biYB_uJd4_j#kY-Us+#.kXt!L"[a8u;7WR-jC#`+tB=FTLAdD$ek7`NA
%3;bHj5!]9m-eYQL#E]':@m8E1N$K/)!Ua/SQ>&SIb[f0hE.&Q6bC8B:.dH/,+FPsG!W]5,k&eX!C1PmCL5B=M0J"$SkqL>Jed]OV
%,J_n22&:Pd,?R,Fi[IGBdP\U](E"GC_c8-TV'N5M7_<<'mmno!3d%/`%iNYEU@,1$g</pV1M_Z)EX=/7:ra!1jV(6Xg02Cl/b7%<
%F5Q#p.5H0>(qq.odTsK>a[Sdeg,+Cf3t)u4;k0>>n.7#_EemJHlTY,4HQ9P5B<(YIqjF5q<HZuro-A(i=+Ik%_bQdo![+/+)%K,h
%@utAL.##rRliJT^]utTS1`uqQl5]c*)K$(!U@ngRFh9c\ACQQ;_TH=%IRSlG/.]T;<Ytcp$C1aYYQj9]S"8Y<W2a@/'\fWJI)p+Q
%,eMP@,L11AghT#5%Rn70JF6@e_,m^T:(Y@(PVs0V9.kGC;tf'KN-%,`29hkEG>JarBUF&&$g6cQ;ZbaM2XSF1a3r#,*1kIJbo(;s
%bJrSi9BaG(r:6&P`fgsPNAkEi6gC-mc!2!CH(>0FYZKABcD8DRQXgHk,?KL'Q-We<7<$rn[p.&_KAg5\"u\*5MAVk29AK>;B/0RA
%fOWIO.f$i9TLQF+&lS]!51Ee>Z'*e,?LY7D<-n<3jW3Vshc0=fmZF,H^3#aR(]kHn+%+5q2HA53-'HMrM4Yt=)LVuq#7_cC2#^[j
%\:ihY=k,=nmT8>_"H5Ef=\$iT:)D:CpU7/[2XTL56,k*Mi"8mY@gd3K#U!E]V%LX4]?@#TRlJFmO>Vu_n;2*^8lG:UI.,;=`K$,K
%9NbD%\oO:%N1oILqLDG+XMim@!i)[N_j4[u(V_o!l!ljkc\NK1qr!uqO?$?8*a$-:mN_mdKNKXK;f0O62A+XfP:5^.X<316Vpjjo
%jLN-E;^.Md2C8.0l/N4#X<-Bc-J8$VQ.X.(''RNEbpEZl.>)%sl\G'f2bcHa=$6)91s0J"6F<(Mb*@E[TWo;Gci`I2Yd/JJl*s"A
%6QcUileNp),P=#M2'FNSh)kO>(M>F6mUa`B'bq6pI-?)uC%uBl;$r/5K9-ktFMHONCamcgBX0g>Ebe)F2$8KI*1'G9oa;T`QNK4R
%7r$,7nLsr6>RTS]d!N(`VeP-$`X7mW+',d!U8G/5?af]eKOsA3bf>\o*.f2o\t77H6G\c7Ajm:X3Snj.73MJ=Ah3W8-e2d@Lm<p\
%TQcrF<7`u7aU5;<OJQ>Y4&KiX,]T2*N;e3-MqcBpOiFb"jd%<N'$r+!.TL$)MHYnB6m$\0MQh8fD+:&WZG_Ks-BbG4<Rp@#\h$eG
%>uXu=)$YhG>(]=/'BV*s(*s0@l7f#pO<02935ZKQ&4CE2j][t5,Y;]<#^f0GYmFUDX%Ye;/K,(fBKC`&a[-l`[[HBImJq^B2a`!U
%RrXHu]P$L@/./D&Gko;T5=l)&hgVLedRY@<C8/1d(psg(Z,<M+FZ<?&l3sVW_qj#5nILp5QYbh">VJV*e)U4Im3j_qKXLus:<0_%
%6MS&Fi4Cp2NB,kX#h,]$!I9iheogaSU=`Ogi#`RrhF2[<R%ai,C$EXu5XDdo?#o#4l8Tf)#fX\gD+3D@19(IbB0K3Wdg$__`Nn2!
%Eo5Tg9?2)4&OnUWdKn&[,Hk$VYBhJ"S9EY1(4u%^24#KFX\_!Q$DZZenfd7;j,.c6GAo*/:[9J!&MYI-0FB-QnacW5'U`qJ?Buh)
%2,)X3bT\XQ;'-=H`/kV>_s7mf-NsKd9N2QY^'+gq3Si)nRiEdJG_%PX/)?SmO7"Y)N(Q_OCp0"4^M7foLJNh!%1qL0/<UgO5=2Rq
%lDIeNd:rjhOrU)8kp@1&;A*+CQFY%qnVae74PUCrr]op^^;GcC#P'>k%aCL=Me0g[Si=+Q`YaL%=Q^Yn(%^eu['q/X5N+:BY'K@l
%g-641QqB/MI,sQrj>$R53B[RZ7Z:8XL8$*mC.4jP\WNW):qqg>.""l\b#)l'8t-GH<]jVgN=t+%+/IK%-kU3ij="=n-i@snM.GdZ
%"Kac'oT"LL-b2H[qq:%m+bT*AG@[)30P&;N`s126+#[U=E;H\m/^ig5j\,t-/=,WI9+oo8!9#mBBMPZ5PTh*7ZrZTu#<I[Oe!b)*
%=bu"rVB^TDEk_'TB3ofNqb;Oe"]p-B?EIJ?cUC3,'No+YD^mEo#CY3_=7,fiahDNLMlM6,csQJFok_,Z+[/uA+#]`pR4i4$Rrdm3
%a4p8$]UkAF[_hueK>2^3"cP>F]iBc2gLSa@pPK$[KN2+-jBbT#k2pE>IrKVp('kUEbH\bPoErUj@CS&C)N/&`(`T&`YWka@p*=lb
%B,1\Zmd6OfWJ0RA,%r)f;*:k&Vc^Lj8q#cKPTXS+PIIY\E2[j5[U2<CTc8d3Lli*5600..pdE:@%q6Hq^7LpfLXm,S;<*k\C17R7
%LK3n*gEgKVks<GJUrcQk=pljA<$[eR4Z2Y#f'O:)hY@gP72]?RP.583O;sL[;e;c^[3((t`V#X?1]n&kj]LR!S8OngAGoA`WKuR,
%@JuLZdO;)P\@k%T(hMdZ=r^_R:NTKu\[eI0M&X,m&jAu=,I7[#g'#o_NoBQ>=\m9Kao/<%.epdLHH/BS\@&s\g"4Wds,.8Rp[-"i
%,B!c39"ncWUmiPg<q[EU.OabXh?h+Z(-IjB>1@rX7AHrD[a]S0<#:X4!`oOL]fQ/eWrr<E[*\YbnsKIP!CC'+i\APVLZ/VIZ5Sr8
%6u@_mQX(V4EE&6[WS:`b&*n4hak':giNu?MJ6-r"diM!:18?]Z"03#TPY?2Z(#k&"g1X,Nd>38:m$tB&fR'%0UR<^rs">a>%c\?l
%/7nAYB$Dn"g1@GeRA0U<[R"h`SEeiPS>ODK=S.h/`u:jflmAG5VpC-)+,g`UZIB`Ukg7E/@1TJOm#K6t*]g;kOaB[.;QGX8Cs0oV
%XKF[YFi+<V$2a41B`lV0V^Mo5#8-1tkZsm_Y@ff"&#.`cL8^.a;O6-H,4`X"N;W/d"rK$C/E(b?iPmR$',(F&dd7)tP@38fM8h*6
%'2L#YpM+SnH.0AK_Vrh$Wj\Rt"j$a3j%Yo/iR'-J6d]Hkg'"$,hG'95b?A0%_j?7ukjjZ+!#b`CgN+-"+:DOE)tYGE@dM(XST'<h
%j3WE@imIU^aV('o@]ijMfkYn4e?C&%]$4/c`[$p#4'XT%U>6hb^a.H!W!OmuDUj8PG!cTZ<(0*[fR_!7OD'Bg8I_bQ%POFtR(f&Z
%N:$&:nG.&>1AN*2l?M2-H$+ZdZ5`29.ZL"Vo6/[mOVh+^^_DYuCm;f!o`P*)ZFmRaq7pHo/cg%Ee/W@Eh7Gph`NXSn`PS#Ua8u2[
%S.SL1PRHpf?5eQ-Q5U>DE^R[)#D<)8]V;Qj;4SWuf.+"XXjpBbl&M*d&$ZOFP\<1<\e7a46$B6DaFGpbD\r6pGmt'm$PG;u79>ul
%?^RAdWmPUrG@tHUHR4gONCZ/#*t6aZ5XR=4gq"r-;$bBDQSt'o@')0R)2Bt1$Z#ti!&[&TV-u,*;k#9*@hC=l3mCq@H"1u[V$H6U
%[mpQI_&?N1#.>")rYI(,*?^Tl7nI3MTE^>5&HPaWn2?3B0h]H+77`T,[?rB)UsM^CM%SZ$_3Dm'9`uUP=K(D><%729DN1X6T"o]g
%\"H-UcqD2S=>35IaXlu+.lGn)%&lU+eOC@#F]K:$P.OJ+0r7$?2F)7M8`-81d0EQ)XoGtJ*0?a^>sBkFeL2V[aCaCV\CMOC[\9.;
%SC/VW5^asR#B4@VnM0<4fjbe(*jZWLkk0b`CU%mQ6$<>:EA<OtPlZ^]KIHoT?!`/MA5dR1;F5T&1`0E`U-ro1cj!IIO>6)>ZUu(j
%H(I#0dr)ImL3T>UD'mZ@7L7K'7^%o"E12\\fjeY2`R'/i(.iO:;g-ra>:#ANi/i0d&O#,p+K8N].5#=sr5/<(GK5o7!2ejm5QXQ/
%*.n;/@]CrHFI0]u.]g1W-B<GA;Zh#PUuOtp)3(FS;oAmNVRfV./ErrgL'@e4&E=8]`C(NA)Aj`iJq-$M)6eX,^bj(]ld=/kgPCfH
%:^5GV>/UWUoMA&MS;S.i3fC^bIB)&gj5g*2;"i%>qN621861P6j`\<b$.Ja4o(R!!9b=Ti1HXJ)!F#OK#gRHb4K',GJ/7O0RPoAX
%LS$sm.VQFl>g(2.+cORBPQiCh"n!tnaP&6O("\588M&Gj40n0T-`:-p&g;G7PT("XS(j,V7u7,'LRY)>ATtc=#HCB9$GH^GOI1bC
%f'`'2X.K\gZ0FZ^-[Se_m3*($<q`P-?2j(o?CC:<aH_kP&AUh'YaXKGicXPLhfj9#--FN=&f?-0Ec<Gm-INS>F<G4GPC#^](i-4N
%FV$$Yi<#)B;l2ZZ=k_!sUKA1jS"co(k7#<l"r<cr!0iS5n8kl)l%kGuVjT'_02W_9('QpC.ND7&Wj7"1(&C:\c:A`N-C&.N2?c.7
%>M1.[-C=lDia,EaNnpjb'9tEX>c74Z@'J#J@iq^glD0p;;c<Z%Ysoj5?F\`;6\%k<9AS*)&N/>"ha8/-G\aeFMrj5XoYfPQ<R$sP
%`3N#:>Wk\[R1(!s.)6(EG&9<6Qglod<7!@Zbq),t7IDDS?!0ZsDLALf)FKQ[d7)dt880:Sn6I"OP$`lqG=@)"j0ItAl&_hs/K)-7
%F!e0<n68=9#R-Nb(RAdc?,fW8QI$XCQ?t,,9Z`jUPC+,u%jGeOa4OTKY`OhuN,j98\:gbXa)'Q[ZP1h?QmSt)7LK"p:I=$C:<ZB`
%Ck<pGR_^_6^u%IDh9A0^M)]=63LolAk+Jab;X)AmC*/G2rfqg_E7I)"W>O!8&dUi%Wd#*&isjQgLQIm8"C@08oSY+Q9V-7V2WWXD
%P-En+j--:n79-FW\i;g.4+%0R#VRD>"cTCJ^DIG26B=Lt.Ln];:c5WcUFro'X525p+<$:j:/s2BUlm`W[^eDs%',faXB1n$*H)!n
%aCYVO'8]o%l-?6[L?a5A'E^?H[KUe*Q:][.$Aj^2f(:Yr<>MWEl,(tjEbt;9"]P]r^#Z>lqd&U3OX"l2[N;<a*pQ;r&PU4rMkl45
%\Pf]@=(s=dRW9BT^cN!:`XU`<XG:EuNKS!>(.`I2q#FnM"_i%<OB*-b!_EOCQ;QjGPJs'/?!ppj/nf^%L[$+;$ET6tU4e-2%VY*@
%@e'cF]t+CL&qR;QrA0+tQ:_8nP7KfuY+SjH`B[Jfkllgl^547-OW#ZGaM_hSL:G*,C_4sV.)tr<^h,%o1kRq%D"lO->-dCs@]-V(
%KcB@f+V(8>!Kq>%&*QB@+3n[FciCr5M:kmQ:)XNY+I:f:>U@\dERf*%&4e:mOLGm50G&PJJTu<Z(L2XQ\mYItG_24j3`VYnLR8K+
%&E9k!4,n8ldWKE;!$1FQN&n>J,KUFblmZUL^mrIa65BYW727h/N;N-YMK.mYnoec%9dA-66$bGMG)WF/6?Nsc`2Yiu<fCGVq:V&O
%Brefr!jYk_jNNK)]\17K-aqN:QQr]T`X3+>6$jgdlP;0SK[r\Q_RV$#HW27ublm=7X2KMmcDYWXXh\S51!+'(/O"p:meT85NOQ]3
%K=m%1#:Xo0]QG+1eMW!Y5`pMGoa.Mr$QDXX<#oM(F$b<o3c*:7r8I<9@<N5.#Gt0t!0=-NOASFm%>>Wr@*'$(-DO'PG"1N4Athu'
%**$M5LXU[-b:kE]&_1Hc9QU,!pgj5u`hFY>.U%M-_Ge+!3)uK:s+[89jcKm.n(uN)7.E'Ga^PPVHI_4e.RrJ<]=LU/';Whbgk6mh
%3D4<YS*@trNhE;k1a7[r^oV8/b_n1AO<^"2Fl<c\cn%4,E$oN*Qp3Lf+<k;lO9.hPH^2D6\Ai'hm8aMt2R"U,V2.8l'5![a@.u@n
%.B6cbiSQIl8XnCU)u7]$+`/EAM`)g1%?6:VDjVY6I.7eLJ;orGf`WH#D7ZSg'':b8hVc7G[/,F.Q?3^aa*htgaUKuSSZN$U4qeDt
%pXV,(_49tpD0/"iQ>ENL")EdRfF=HPf*AKGkA0fLFN3R"WQq;r!5f<,<&$qm185-_G>AkC];V+u,f(.!`2j(ZBdN#j%9n8AX:rZu
%-tO'up1P;!YdrsoMS"VYf;C+<_[3dV1+81<m=&g^MLL%&%6SQ>YKc-%4_)5:(+ccs_&*=p&Hjo6;b$YU,[Ju_mlQ6!<5F33!$Mh"
%Rjl<=oV[L@pjUPUI=K\O+?eQT&Fs5c/fMQaWp(QMdo/dm&a))E#0eV[W^2`11Yb$-plRTuMDs;TB,_bD&tU_V.Xkh9*],RWJPcY5
%p8AQ3<&f)h^4P=[(6oi,I9I3Y)(G_6LtXf9fAsffY(/pf![nd/Z*0)_bbD<_$Ut]=S\UJ/)5_Er,E%&0F^b]9,rM;-8=]2hf)U,G
%Q,(?&7Q)uC3@)?T;4G:^pj5P(C?L1Hc]^Pf8:UO&JVEDiE:"h[Hp4i=W0_(G"12W-POBAN,["]TA/IG1O&C!dD+U8?g_aiAFrEu1
%8nUj`2LR$$^?cog'#@$]4U6h2/4YTsKA!VNK_kolpN@G10\hGJ;,CBY4i</qf==]`omP]g5CCh]4hUUjp2C!0s88MhTE"P5rZ?Xe
%&-)/arX\c#5JI,ps6DoLYIO@S6M#^&Vhg3pRmY(bVMJnd)4*_'$324qRHV]fdi`)Y(QeuXj1*`24`NI,X1PAF&r0AKnl(Vu1P7r+
%hWKkJ2sM_GAl(j';FetTdAp^`?(/qB7Ir(Y_%l`f8hu-1na[dB"&fN"lJT7I49S)-Xps\5fa14!c]0O:&]@M6$m(Hr91W$+JJH%(
%I!,T'/s5FD*F=@V!!]h?JZ]^!"T]]]h!8eSoh4O^ee-/$;H7m]EIHLi`KlXjX("Z>45V=99d.#.j1b)nqhhqu5dO',Z:!%SJ3iq5
%0S>8bW!l/%[E^1@=<O$4kXO"N1#%D6'*"[L]Ygi7,MJ7<7RhraHY^HGl#':K;jl;PA3>.1iG>>R_gGi-s/B\e+GoAjUkr6HN`:Gh
%-a(2hJ@BAsLH,IGcX$mQf?AseaMf'KjN$iJ2H)E"`^@T^&J@^tqdhPA.@D[.VH)U#_nJir4Dp`OSR4q)5P*eWJmhj"_DL-uGX8f9
%.sJ?MG0(dbf0saF3s.QIJ23q[dk/Qe8mnWd23/).VoTs5`!=;,Q;KngNKRHSlL@b],>oU#,)4-9)GL\-U_WDgW(q!s]&bT>bC9J0
%gk0^j]4F/AQa(0=5?"FI$(sb7Z3Z?b[(mWPH9A`X).(=\ZKF=@nT;=$p?+`m[9Lp$;%3_c'o<,26`Z2T\slGQn[V!-$o6+9d]8K8
%R:k>P.h1'ZjE0+X/&5t5W!Q]W)4=c"UZ9!I7snAjLM\:Rf`8hh,tph5aJ2A%S03F%Z^q:.?(q#!fWD3.$m]S]!;=P"ORN\!T<Q&+
%?e"Y#M(Qd*D>p]=m2jWNms++^f*qG$W(0rI_I<[M*5V];%S2W/Hq750:JU8L&fQLY[:N6N,hQ'f,G5l_=f:1TMpe+.D8uB,]#<P]
%B`gF#1EOgi<GN1H4<]6T=ICBr]PbY2K4)uJ;%gUI!+tD*bP8_prcMmld=1mN4;5a)0ZL?T0[e"N6#u1W:?K%N;sC)"o054uQQXJ<
%&/_]1&-?18??S&#OC+!_;q@k_4,Ym[fH)#</kpXAn&eLooVabW(_n7!1WYHNUWKFP37[Z:W?TY_n"L"T"H+/(ISil*10ZSF7d$u\
%N4GPO<DEA?PdjP/2)bbAT8;]aW,:\l3?e1bI"gR](PAdejB66CLPjaK>AU]9Cc+Xt2(DSN7G>/Z(%$q`6fe7D"aO7Zf9Q;m%IgYt
%XuklL)c"McD"\u6IT]s7.//'j[QT=U?/n;rjeLCb@9H\1Lu+"tfiHD&X>QbBVMEY!/Lm6[0T6TT3&9[;&YZ.>/rn)oH7-oD;;(_2
%7V-X/AQqQ6dr89PP,LZS<44raZC9G)Jh'6#@m`&J_I"9;X8,VFBV]_da+L+l\NI!_^>i)XM0M2+Wu./iY>JFeaYd#a5t'7o,!$[I
%+=sQ6]g\4\/h6af0\5dGnMpIlB\NGfM4O\^C?2X"e*dM5d9er(c7%$el;K-g#Y3N\0>"n>$Eb+97A*Gi&HCYAY%>#$,DbasrWd;I
%1ec6fF.!jM!Z."gp-C)C-P4Bc$46P*kWGkXXK+c`jIIaGB^Tt<=&i=o3i@[b.#+>3eTL.^j4L;j\R%_<K3NUb7o#&j\L*_%arFkg
%cT_;JW[tuYc#m#mVao[hM,!hWO5TJWY0gGI`RhuL1aIkrV$@MW$/JqcN-,u:!MFVF/jS[k(/Q:/Y'+)-'/TI3gEPi#HucG:@j;6R
%@:-F%YQR=9I^2[&'1b^ahJETC%1uI$VV<l]i'hUWqW7(8?7ToVL(h=O)";PnUF84V&&;&#%5RaDP.ubr"`f-/=&37?:Aq-r7TG9C
%_DShR%]6BScss5BASFD0.=hdh_9%hBk)7]23NFf,rP^_d?JCf$T.1.0!k#M)rDd&F^H\;n]LqH'@8ERSL'sgkPDj-;gq3@<fPX9P
%CH6dq,`0RG;oF?B-QGj2QHT9,'6OX,&,8p-Y9MHtK0e&IoGj<VMGqdG%1o;5UL)1El#jL#H#gKqI=amlq]i)7j)`B:8%K,R42dBV
%711b^,j^M8]#%mSQ?5diZUJ'ho%RF[_SnJt+&,P4(>LTaO%mR*D)9j,l%N[+dWP8]gTX<p$kXj[7++E$%`4'h"*=@YEMn2<(=N5n
%j`s%GGH^p91<jAq,#LFWee/-/'P6cr)B`s7LVHk0[RQoY8=>/L(gc"p]'Jq=&Q&*+=@.so7#Y9A9hVqm\)mF>':cg4J'?c2nN)q#
%L,;@G1kTV.A)"[1RgTO-jD*c2huKc\kGgC!p6%Z#Nhf/Wg8ejH=YI<i6QHQ4XhK[>.t9EW,(YLRI2,J&0&k!Wf(*^9I^#TT8lh$#
%Bk4>KMjck!Z4`6M*<C?ng_Vj<oE/S:Qrs*jaeUu>b&Fh@s/6^D+S%l_L&@a8-m.R9;!I%]fVWniWZ>26^.JZm@;7[n'Cm\rj;eC(
%&'R2`aMAh)(t&jh8k<^+VCc(mW)u;bKFSQ9(/eh.I=]Zr8Wnnu/X"F4fSn^MqMV/rU=(!BiaS'e-3s[9.=1,g7gaLY`4a\IX@&>t
%.AfF`&*56c$7D>Gkg3dP2H>p.6o+EBl9n`VQ(k,*flokS;80LXFbZTo,6tpDY[@MP(A9Bn/U.O$:Gb`l]h#h_nI^:B_IaRFa%dXU
%6T9]`o&S5;Dq65^T^gBklN!Tjgp@#ip:"9R5,<rd_]$aolnXJ&,@"*RbU_9eOZC]Y/?-:N_*Z7:FrD[g0QJWQ>IqZ*4E)Cn[*gm?
%MrASJk5i9:<Efr)pcN/^g\SA67W_Lg$,]@QDJd7k<2m:-BI6PDO^sa*Kc*=I7BRs1.70B/?r&k_Irf%t1MU6Pc&c<ZfecRk>`_YB
%`eH3"#OJ@UbsPU<=ZjaI>Ypt>gfl(sJT-s>?&e5MeqI.FT-a);I;U7U9VurlH\X97TgrIf3;WuE1#OaQ=@,P4+DO&C$D;<(;%`Ah
%2SL_MN,4$UnE@=d@S^MePi6H0>Fa]d-MsNL410Ejpb<Yk=VtC;O1,;tOX-'6Q(CZ=MQs'`J8,]_3(WqV)+)c**D9oJKIRJV2;oas
%D&eN.9Bs.N<f)X$a7mcOF)Ge[a3k.M)k.?0]WT4<b?f-D1D9Eg09'`Djd=gu`Os+"`lZ8lXh,*/S2n^=ESjK'_*V'EFgAO*V5W%J
%2+hM!J3RI>E*b4:h3@_<+@CE<*p#'sBN_)(S!UNRAB]PI?q4`@/88h'5uS<MkgiGGqO8'jZC(Cel5KQ:RV*H[H<W+$e(['ES4.eI
%6\p`S"09uH<"%23Z30eiG2(RXOe%(`cMm0ri!i6qN`#+"9LKNAX"W=@VSaH?e/<q4%pdf>PU=fF/8+`oU>MHoELh^U?.m)cf5L5#
%2?"f181r`E78'8NF>Ds.oV<nWKN4m+:"&Y@!E*(e1bAF8\U.SY&uIL(/[>rL'G%U]B@gU'-86]sLE+FGj3`WF^$.+[N,"C4Hk/c'
%`:BAPX&.M,75X8s)Ng0>j#I#q*i%.?T8IWmA(c>Q1J<%[m!!+]iT3$Cc)R"UC:J%;qpP@G"):g>X[Uhi/<es2cE=eA,t9>.]oj@-
%p;A=?ArIU]Wm7&9)UgUA#/bQnS2Gnj.Rc%V155&tAOP<!i@@7dE-6)_r[%sc`?Bl=brLr,QOkndij#Jt8_UZSno6$%;-9&Z6A>TU
%@VaIsUeom!d[suo9@lA>eArT/FW,ImWl'O@)cl,ACdGnl.Qc\QTStau&'raJ+^q8gj2EA(09Ieh6#`bqe/sCT[C;r0,eiUV2.![,
%@4dPq$7O]+8FTd-is5_c:Q\XRJILd"2N("20)+*:M'A#\5(3=8;>]MQo(.Y6?VWQ[S0-V$HSSk+Gk:J'e&0FK^RlV)^A7PKo@Ng'
%k5HDUO7OGhs)n#)iV`K6Vhaloj0,*SL'9N\)m6A/r:&Os2u`r7aYZ!~>
%AI9_PrivateDataEnd
