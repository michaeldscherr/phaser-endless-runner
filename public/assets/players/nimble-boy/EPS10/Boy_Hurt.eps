%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Boy_Hurt.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: WINDOWS
%%CreationDate: 12/15/2014
%%BoundingBox: 0 0 177 167
%%HiResBoundingBox: 0 0 176.3936 166.8213
%%CropBox: 0 0 176.3936 166.8213
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.1 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 124 8%%BeginData: 18702 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD5FFFA82752FD7DFFA820522076A8FD7AFFA8274B76522752FD70
%FF7DA8A8FD06FFA8204B4B6F7652F852A8FD6DFF4B2027204B527DA8FFFF
%274B764B764BA1762727A8FD29FFA8A8A1A8A87D52A8A8A8A1A8FD36FF27
%FD054B20272052274B4B6F4B4B4B767D7D204BA8FD21FFA87D764B27204B
%4B524B7D7D7D76524B522727204B4B7DA1FD30FF7D20764B6F4B764B4B27
%27206F4B764B6F4B7676A876274BFD1DFFA84B27204B4B7DFD0B76A17DA1
%A8CAA8A8524BF82752FD2DFFA8204B6F4B4B4B6FFD074B6F4B4B4B6F4B76
%7D7D2052A8FD19FF52204B4B764B764B764B764B764B764B764B764B764B
%764B7676A1A8FF7D7620527DFD2BFF20FD07764B764B764B764B764B764B
%764B7676A8522776FD18FFA8204B6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B
%6F4B4B4B6F4B4B4B6F4B767DCA7D2720A8FD29FFA1207676766F7676766F
%764B4B4B6F4B4B4B6F4B4B4B6F4B7DA85227A8FD17FF7D274B764B6F4B76
%4B6F4B764B6F4B764B6F4B764B6F4B764B6F4B764B6F4BA1A8A12752A8FD
%24FFA8A8A8FF5220FD0B764B764B6F4B764B6F4B764B76A8A1207DFD17FF
%52204B6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B
%4B6F76A852277DFD1DFFF820F820F82720272027F820206F4B764B766F76
%6F766F764B6F4B4B4B6F4B4B4B6F4B4B76A82727A8FD15FFA827274B764B
%764B764B764B764B764B764B764B764B764B764B764B764B764B7676CAA1
%277DFD1CFF4B4B764B764B764B764B764B764B764B766FFD09764B764B76
%4B764B764B764BCA5227A8FD10FFA87D2020202720FD044B6F4B4B4B6F4B
%4B4B6F4B6F4B764B6F4B764B6F4B764B766F7676766FA1A827A1FD1BFF27
%FD044B6F4B4B4B6F4B4B4B6F4B4B4B6F4B6F6F7676766F7676764B6F4B4B
%4B6F4B4B4B6F4BA17D277DFD0DFFA84B27274B4B764B6F4B764B764B766F
%766FFD1876A87D27A8FD1AFF52274B4B6F4B764B6F4B764B6F4B764B6F4B
%764B6F4BFD09764B6F4B764B6F4B764BA1A8277DFD0AFFA852204B4B6F4B
%4B4B6F4B764B766F766F766F766F766F766F766F766F766F766F766F766F
%766F766F766F766FFF277DFD1AFF764B20FD044B6F4B4B4B6F4B4B4B6F4B
%4B4B6F4B4B4B766F766F766F766F764B4B4B6F4B4B4B6F4B7DA8277DFD08
%FFA827206F4B764B764BFD25767DA827FD1AFFCA20FD044B764B764B764B
%764B764B764B764B764B764B766FFD09764B764B764B764BA17D27A8FD07
%FF7620FD044B766F766F7676766F7676766F7676766F7676766F7676766F
%7676766F7676766F7676766F766F764B6FA827A8FD1AFF27204B27FD054B
%27FD044B6F4B4B4B6F4B4B4B6F4B4B4B7676766F7676766F764B4B4B6F4B
%4B4BA17D27A8FD07FF7D204B6FFD05766F766F764B764B6F4B764B764B76
%4B764B766F766F7676766F7676766F766F764B764B6F4BFF524BA8FD19FF
%524B274B4B4B274B4B4B274B4B6F4B764B6F4B764B6F4B764B6F4BFD0976
%6F6F4B764B6F4BA8524BFD08FFA820274B764B764B4B4B6F4B4B4B6F4B4B
%4B6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4BCA
%4B52FD19FFA8204B204B274B204B274B4B6F4B4B4B6F4B4B4B6F4B4B4B6F
%4B4B4B6F6F766F766F766F766F6F4B6F4B4B4BA8207DFD09FF7D4B204B4B
%764B764B764B764B764B764B764B764B764B764B764B764B764B764B764B
%764B764B764B764B764BFF20FD15FF767D527D5227FD094B764B764B764B
%764B764B764B764B764B764B766FFD09766F764B7676A820FD09FFA12027
%206F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B6F
%4B4B4B6F4B4B4B6F4B4B4B6F7D5252FD14FF27274B204B274B204B274B20
%4B4B4B274B4B4B27FD044B6F4B4B4B6F4B4B4B6F4B4B4B7676766F767676
%6F7676764B76A1524BFD06FFA127204B4B6F4B764B6F4B764B6F4B764B6F
%4B764B6F4B764B6F4B764B6F4B764B6F4B764B6F4B764B6F4B76274B4B76
%A14BFD14FF204B4B4B274B4B4B274B4B4B274B4B4B274B4B4B27FD044B76
%4B6F4B764B6F4B764B6F4BFD0D76A827A8FFFFFFCA2727274B4B6F4B4B4B
%6F4B4B4B6F4B4B4B6F4B4B206F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B6F4B
%4B4B6F4B4B4B20264B4BA8F8FD14FF20204B274B204B274B204B274B204B
%274B204B274B204B274B20FD044B6F4B4B4B6F4B4B4B6F4B766F766F766F
%766F766FA84B7DFFFFA8204B4B764B764B764B764B4B4B764B6FFD044B20
%4B4B764B764B764B764B764B764B764B764B764B764B764B2751274B76A1
%27FD14FF27FD154B20FD044B764B764B764B764B764B764B764BFD0A76A8
%27FF7D204B4B6F4B4B4B6F4B4B27FD054B274B204B204B4B6F4B4B4B6F4B
%4B4B6F20204B6F4B4B4B6F4B4B4B6F4B2075C9A0274BA1F8FD14FF76204B
%274B204B274B204B274B204B274B204B272720FD044B6F4B4B4B6F4B4B4B
%6F4B4B4B6F4B4B4B6F4B766F7676766F76A8207D204B4B6F4B764B6FFD05
%4B764B4B274B4B4B206F4B6F4B764B6F4B764B6F20274B6F4B764B6F4B76
%4B6F264BA0C9C9CE524B7D27FD14FFA84B274B4B4B274B4B4B274B4B4B27
%4B4B4B27274B6F4B764B6F4B764B6F4B764B6F4B764B6F4B764B6F4B764B
%766FFD0476FF20204B4B6F4B4B4B6F4B4B204B274B4B4B274B204B204B4B
%6F4B4B4B6F4B4B4B6F20204B6F4B4B4B6FFD044B2051A0FD04C9CA207620
%FD15FF204B204B204B204B274B204B274B204B27204B6F4B4B4B6F4B4B4B
%6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B6F4B4B4B6F4B6FA8207627FD044B
%6FFD0C4B206F4B764B764B764B764B764B274B764B764B764B6F4B4B4BA0
%A0C9C9CEC9CECF27527DFD15FFA1204B26A0A0A127FD0A4B764B764B764B
%764B764B764B764B764B764B764B764B764B764B764B764B766FFF20FF52
%204B274B204B274B204B274B204B274B20FD044B6F4B4B4B6F4B4B20204B
%4B4B6FFD044B204B75C2A0FD06C9FFF827A1FD16FF2720FD05C94B4B204B
%274B204B2020204B264B4B6F4B4B4B6FFD044B20204B6F4B4B4B6F4B4B4B
%6F4B4B4B6F4B7D7D4BFFFF52204B4B4B274B4B4B274B4B4B274B4B274B76
%4B6F4B764B4B27274B7526764B4B274B204B75A0A0C3A0CEC9C9C9CEC9C9
%CF2727FD17FF20C9C9CEFD04C9204B274B4B4B274B27A075764B27204B27
%4B204B2727204B4B6F4B764B6F4B764B6F4B764B6F4B764BA820FFFFFF52
%204B274B204B274B204B274B204B204B4B4B274B20204B75A0C24B20F820
%204B4BA0A0C2A0FD0AC9FFF8A8FD16FF7651C9A0202726C9C927274B204B
%27274BA0A0C2A0C2A0C275A0759A4B26204B4B6F4B4B4B6F4B4B4B6F4B4B
%4B6F4B4B4B6FA820FD04FF7D27FD0B4B27272027202751A0A0C9A0C9A0C9
%A0C9A0C9A0C9A0C9C2CEC9CEC9CEC9CEC9CEC9C9A827FD17FF7D76CEA0C3
%A04B4BCEFD044B274BA0FD05C9C2C9A0C34BC275274B764B764B764B764B
%764B764B764B764B6F27764BCA27FD04FFA852204B204B274B204B274B20
%4B2727204B26C2A0C9C8C9A0C2A0C2A0C2A0C9A0FD0CC9A0F82027FD17FF
%527CC9C2A0C2754BC976202727A0FD0AC97C204B204B6F4B4B4B6F4B4B4B
%6F4B4B4B6FFD044B20274B6FA820FFFFFF7627274B4B4B274B4B4B274B4B
%4B274B274B2076C9C9C9CEA77526274B7CA6CEC9C9C9CEC9C9C9CEC9C9C9
%CEC9A020A0A152FD17FF7D51CEA0C3A0A04BC9A0A0C9C9C9CEC9C9C9CEC9
%C9C9CEC9C92027262726FD044B764B6F4B764B6F4B764B4B204B4B6F4BA8
%20FFA8204B274B204B274B204B274B204B274B204B2727A0C9C9C976204B
%A07C7C20267CFD0DC9F84BA0A827FD17FFA127C9C9A0C2754BFD10C9A04B
%F8A0A09A4B4B2020204B264B204B2627F84B75C976274B6F7D52FF27FD13
%4B75CEC9CEC9C9A0CEC9CEC9C927277CCEC9CEC9CEC9CEC9CE7CC9272720
%76A852FD18FF27A1C9C9A0C9C9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9C9
%762775C9A0C9A0C9A0A075765176757676C3C2C9C9C9207676527DFFA820
%4B274B204B274B20767551204B274B204B20FD0BC94B5227204BC9A0A0FD
%05C9752027762020A84BFD18FFA820A7FD16C9F84BC9C9A6C9A0C9A0C2A0
%C2A0C3A0C9C8C9C9C9CA204BA120FFFFFFA1204B4B4B274B27C9C9CEC9A1
%204B4B4B20FD04C9CEC9C9C9CEC9C9A052FFFF2027272751CEC9C9C9CEC9
%767DFF5227767DFD19FF7D20A7C9C9C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9
%C9C9CEC95120FD04C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9FF20A127A8FD04
%FF7D204B274B20FD06C97C204B207CFD0BC9A0F8FF7D20F84B75FD07C9A0
%4B7D20277D52FD1AFFA1204B7576FD12C9752075FD10C9CF274B2752FD06
%FFA8204B4B76C9CE762727C9C95120A0C9CEC9CEC9CEC9CEC9CEC9CEA027
%27272027C9CEC9CEC9CEC9CEC9C92027207652A8FD1CFFA87D20CEC9CEC9
%CEC9CEC9CEC9CEC9CEC9CEC9CEC9C92051C9CEC9CEC9CEC9CEC9CEC9CEC9
%CEC9CFA827274BFD08FFA8272751C97527A07620A7A0A0FD0EC92020F820
%20FD0AC975F820A74BA1FD1EFF4B76FD0BC920274BA0C9C9C94BF8FD0FC9
%CA52F852A8FD0AFF5276C9C9A0C3A0764BC9C9CEC9C9C9CEC9C9C9CEC9C9
%C9CEC9A0202720A7C9CEC9C9C9CEC9C9C9CEC9A1A0FF20FD1FFF7D4BC9CE
%C9C9C9CEC9C9C9CEC976202720274BA0762776CEC9C9C9CEC9C9C9CEC9C9
%4B76C9A120A8FD0DFF20C9A0C2A0C2A020FD11C9A175FD0FC9A14BFD20FF
%207CFD0CC9A0762020F820F84BFD08C9A076202026FF20A8FD0EFF7676CE
%C8C9A0C9A0CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CE
%C9CEC9CEC9CEC9CEC9A152FD1CFF522027274B26C9C9CEC9CEC9CEC9CEC9
%CEC9CEC9CEA0A027274BCEC9CEC9CEC9CE7627202775CF7D52FD05FFAFFD
%09FFA827A0C9C8C9A0FD0FC9A6514BFD10C9CF27A8FD1BFF4B272F0C2EF8
%2751FD11C9A0FD06C9A020202076A7C9A827A8FFFFFF853D1561FD09FF7D
%2776CEC9C9C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9A1274BA0C9C9CEC9C9C9
%CEC9C9C9CEC9C9C9CEA827FD1CFF20352E352E2E202776CEC9C9C9CEC9C9
%C9CEA7764B76A0C9C9CEC9C9C9CEC94B202751C9C9CECF5252FFFFFF613D
%1B3D3DFD0AFFA1272676A0A04B2076FD0DC951204BA0A0C9C9C97C7675FD
%05C9CA5276FD1BFFA8270C2F2E2F0C2FF820A0FD07C97520F87D522751FD
%07C920204BFD04C9A820FD05FF85AFA9FD0DFFA876524B7DA12775CEC9CE
%C9CEC9CEC9CEC9CEC9CEA77C4B272027204B75C9C9CEC9CECAA127FD1CFF
%A8202F272E2E352E2F2027A0CEC9CEC9CEA627274B27FFA84B4BFD04C9CE
%C9C927274BC9C9FF20A8FD1BFFA84B27FD1AC97D20A8FD1CFF20270628F8
%20F8272E2E2027A0FD04C951204B272720A8FF762076A0C97CC9C9C92720
%4BCF4B76FD1BFF524C2027207CC9C9C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9
%C9C9CEC9C9CAA820A8FD1CFFA8272E352727272E20272E2E2027A0C9C9CE
%2727204B4B4B204BA1A8524B2027A0CEC9C9757C7D4BA8FD1AFF2027052E
%0520202775FD13C9A87620A8FD1DFFCAF82F0527F8353535F82705272027
%76C9C94B444B2020204B2027F8272051A6FD05C9A720A8FD05FF853D6185
%FD11FF7D272E352E352E2E202720767CC9C9CEC9CEC9CEC9CEC9CEC9CEC9
%CF7D274BFD20FF27272720353536352FFD04274B2751C9756FB5B5934B20
%4B4B4B204BC9CEC9CEC9CEA8277DFD07FF3D3D158BFD10FF7DF82F0C352E
%2F0C352720204BF8274B7CA0A7FD05C9A77D522052A8FD21FF52272E27FD
%0535272F28F820754B207C20FD04B54B204B2720A0FD04C9CFA8277DFFFF
%FFAFFD05FF3D3D61FD10FF7D272E2E282E272E2E352E2720A076764B4B27
%272027202727527DFD23FFA8272E2E2E36355A3536272E352F2027752720
%4B2093B5B5B54B202751C9C9CEC9FF7D277DFD04FFAF37FD18FFF82EF827
%F8270527F8270527F84BA0C2262E2E27A8FD27FFA8272E35002FFD05352E
%00353535F820F8272027204B6893682020C9C9CFA8A120277DFD05FF613D
%61FD16FFA127202E2E5A352E205A2E2E2027202776272E2752FD28FF5252
%6035273536355A35362F273536355A2E352727A87D204B2027207D7D7D4B
%2752A8FD07FF8B153DFD15FF522027FD0635272E3535352E282020F82721
%76FD27FFA120FFFF84F8FD0735F8FD0635270527FFFFA8A1767D527D76A8
%A8FD09FFA93D15FD13FFA827273536355A3536355A2735355A3536355A2E
%2E352E52FD27FF20A8FFFFFF27355A3536355A35272E5A3536355A202F27
%7DFD14FFAFAFFD12FF7DF82EFD08352E27FD0A352852FD26FF2776FFFFFF
%A827FD0735272EFD04352E272E2EF8A8FD27FF2035355A3536355A353635
%272E36355A3536355A3536353527FD25FF7D4BFD04FFA827355A3536355A
%352E285A3536352E27352E2E27FD27FF5227FD08352EF8FD0B352E27FD24
%FFA8277DFD04FFA8202F2E352E2E2727202EFD0435F82E2E2EF852FD26FF
%7D20272E36355A353635352035355A3536355A3536355A353527FD24FF7D
%2760A8FD04FF7D272720272027204B845A355A35272E2E202720FD25FF7D
%F82720272EFD0535F82EFD0C352E27FD23FFCAF835353584FD04FFA82027
%2027202720FFFFAF84590527F827202076FD0DFFA1A8FD14FF76204B204B
%27272F5A3535207D8484595A3536355A3536355A353627FD23FF272E3536
%355A60FFFFFFA827204B274B274BFD04FF2727204B274B2027FD08FFA87D
%524B204B20FD13FF52204B2727202720202E35207DFD06FFA8FD0784A820
%FD22FFA8272FFD063584FFA8204B204B274BF8FFFFFFA827202720272027
%207DFD06FF4B274B7575A0207DFD12FF52204B274B4B4B204B202720A8FD
%10FF20FD22FF272E36355A3536355A355A7E274B4B274B4B27FFFFFF7D4C
%27204B204B27272052527DA8FF524BA0C9A0A02076A8FD11FF7DF84B274B
%204B274BF82752A8FD11FF20FD21FF7DF8FD0B35F84B274B204B20CAFFFF
%27A84B2720272020202720272020F820A0C2A0C24B4B264B207DFD0FFF20
%4B4B4B204B4B4B20764BA8FD12FF20FD21FF20353536355A3536355A3536
%35274B4B274B27277DFFA827FFFF204B204B204B204B274B204B20C9A0C9
%A027A0C9A0A0264BFD0DFF5227204B274B20272076FF20AFFD12FF20FD20
%FF5227FD0C35204B274B204B2020527D52FFFF7D20272027202720272027
%204B7575262775C2A0C275A04B4BFD0CFF7D204B274B4B4B204BFFA8275A
%84AFFD10FF20FD1FFFA8273536355A3536355A3536355A352E204B4B4B27
%4B4B2720A1FFFFA827204B204B274B204B274B26A075A0A0C9A0C3A02720
%75267DFD0BFFA820204B204B274BF87D7628FD0435598484AFFD0AFFA820
%FD1FFF5205FD0D352E20204B274B204B2727F8A8A87D2020F82020272027
%2027202775C2A0C2A0C2A0C2752027204BFD0CFFFD084B20522E5A353635
%5A3536355A35605A845A605A84353620FF76514BA1FD1AFF4B2E3536355A
%3536355A3536355A353620FD094B204B4BA1C9CEC9C9A07C514B274B20C9
%A0C9A0C9A0C9A0C9757DFD0FFF2027204B274B204B202E282E2EFD103520
%20519AA0267DFD1AFF27272EFD0D35F827274B204B274B204B75FD05C976
%4B27202020F8264BC2A0C2A0C2A0C2A0A027FD0FFFA8204B274B4B4B204B
%4B767551202E355A3536355A3536355A3536355A20A0A076A0A0204B76FD
%18FF7D20272735355A3536355A3536355A35352727274B274B4B4B20FD04
%C9CEA0277DA8FD04FFA852205175A0A0C9A0A020A1FD10FF52204B204B20
%4BFD06C92627FD0C352F27A0A0F8C24B51754B27FD17FF76202027F8272E
%FD0B352720204B204B2076FD05C9A027FD08FFCA7D52F827A051F87DFD12
%FF4B204B2051C9CEC9CEC9CEC9C926353536355A3536355A3536353527C9
%7527A04B75C9A04BFD17FF7D204B274B2027272E355A3536355A3536355A
%3527204B2751C9CEC9CEC9CEC94B52FD0BFF522727FD14FFA827F876FD08
%C94B7527FD0B352E27A07520A020C2A0A027FD17FFA82020272027202720
%2027FD0935274C2720A7FD07C9A7512076A8FD09FFA8FD17FF4BA0CEC9C9
%C9CEC9C9C9762035355A3536355A3536355A353527C94B2720A0A0C37576
%FD18FF204B204B274B204B20272027272F355A35363527A8FF4B7CC9C9C9
%CEC9C9C9CEC9C94B27A8FD20FF5176FD08C9A0272EFD0B352E27A020A0A0
%A0C2A07552FD18FF272027204B204B204B2027F8272020F8FD0427FFFFA8
%F8A7FD09C9A120FD21FFA84BCEC9CEC9CEC9CEC9CEA027355A3536355A35
%36355A352F4BC326C9A0C9A0C9517DFD18FF5227FD0A4B204B204B202720
%4BFFFFFFA820C9C9CEC9CEC9CEC9C9517DFD21FFA820A0FD08C9A720FD0B
%35274B754BA0C2A0C2A04B7DFD19FF204B204B274B204B274B2027202720
%2720272027A8FFFFA1207CC9C94B76A0A1204BA8FD22FF5276C9CEC9C9C9
%CEC97620523536355A3536355A35352E27202727C9A0C3A07627FD1AFF4B
%274B274B4B4B274B4B4B2027274B204B274B204BFFFFFFA8274BA0A02027
%4B7DFD25FF207CFD04C9A04B2020F827F827F827F827F8202027F8275220
%75C2A07520A8FD1AFF7D27274B204B274B204B274BF827202720272027F8
%27A8FFFFFF7627202720FD27FFA8207CA0A04B27274B204B202720272027
%204B274B204B204B7D4B202727A8FD1CFF27FD0A4B27204B204B274B204B
%204BFD06FF7DCAFD28FF2720272027202720272027202720272027202720
%2720272052FD21FFA8204B204B274B204B274B2027202720272027202720
%27A8FD2EFF2727204B274B204B274B20272727204B274B204B274B204B20
%A8FD21FF4B274B274B4B4B274B4B4B204B274B204B274B204B20A8FD2EFF
%27204B204B274B202720202027F8272027202720272027202720FD21FF7D
%27274B204B274B204B27272027202720272027202020A8FD2DFF20FD094B
%20272027204B274B204B274B204B272776FD21FF27FD094B2727274B204B
%274B2027757620FD2DFF20274B204B274B204B2052FFFF76202027202720
%27202720272020A8FD20FF7D204B204B274B204B274BF827202720272020
%20C2A07620A8FD2BFF204B4B4B274B4B4B274B76FFFFFF7D27204B274B20
%4B274B204B207DFD20FFA8274B4B274B4B4B274B4B27204B274B202720C2
%A0C9A07527FD2BFF20204B274B204B274B207DFD04FF7620202720272027
%2027202720FD21FF4B27274B204B274B204B2020F827202020A0A0C2A0C2
%A04B27FD29FFCA20FD084B27A8FD05FF4B27274B204B274B204B27277DFD
%21FF20FD094B207620272076A0C9A0C9A0C9A04B76FD28FFA827204B274B
%204B274B20A8FD06FF202720272027202720272027FD21FF27204B204B27
%4B204B2720A8A8A8CA2751A0C2A0C2A0C2A0277DFD27FFA8204B274B4B4B
%274B4B27A8FD06FFA8204B274B204B274B204B20A8FD20FF7D274B4B274B
%4B4B202720FD05FF2775A0C3A0C9A0C37527A8FD09FFA8A8FD1BFF7D2727
%4B204B274B204BF8FD08FF52F827202720272027202776FD20FFCAF84B27
%4B204B2027754B7DFD05FF2076A0C2A0C2A0C24B4BA8FD05FF7D4B204BF8
%277DFD19FF7D27FD084B27FD09FF27274B204B274B204B2052FD21FF5227
%4B20274B76A0C9757CFD06FF20A0A0C9A0C9A04B2776FD04FF4B277DAFA8
%FF4B27A8FD18FF5227274B204B274B204B20FD09FF522720272027202020
%27A8FD23FF524BA0C2A0C2A0A127FD06FFA120A0A0C2A0274BA8207DA87D
%202752A8A8A87D27277DFD18FFA820272727204B274B2052FD0AFF524B4B
%7575A0A0C327A8FD24FF20C9C9CEC9C9C927FD07FF7D27C3752751AFA8A8
%2027272F277DA8AF7D275227A8FD19FF524B764B4B204B4B20A8FD0BFF27
%A0A0C2A0C2A04B7DFD24FF4BA0FD05C926A8FD07FF4B20277DFD04A8272E
%2F0C2E27A87E27522776FD1AFF27A1A0C9A0C9A0A04BFD0CFF27A0C9A0C9
%A0C920FD25FF527CC9CEC9CEC976A1FD08FF277DFFA8AFA87D27352E352E
%277D4B524B52FD1AFFA827FD04C9A6C97576FD0CFFF8C2A0C2A0C2A027FD
%25FF7D4BFD05C9517DFD08FF7D2784A8A8A8202E2E2F0C3528204B5227FD
%1BFF7D51C9C9CEC9C9C94BA1FD0BFFA14BA0C9A0C3A07652FD25FFA851C9
%C9C9CEC9A052FD09FF52527D52202E2E352E352E27525227FD1CFF20A7FD
%05C9A120FD0CFF524BC2A0C2A0C220A1FD25FFCA20FD05C9A04BFD0AFF20
%20272E2E2F0C2F2E27275227FD1CFF7D27C9CEC9CEC9CE517DFD0CFF2027
%75A0A0C9A027FD27FF27C9CEC9CEC97C20FD0AFF7D27352E352E352E2752
%5227FD1DFF272727517CA0A17520A8FD0BFF52527D522020F8204BFD27FF
%F87675764B272720FD0AFFA8270C352E2F272052274BFD1DFFA84BFFA87D
%51524B4B52FD0CFF277DAFA8AFA8AF27A8FD27FF4B527D76A1A8FF27FD0B
%FF76272E352727774B52FD1EFF20A8FD06FF20FD0CFF7D4BFD05A87D27FD
%28FF27A8FD05FF52A1FD0BFF2028204B7D2752FD1EFF7D52FD06FF7D76FD
%0CFF2076A8FFA8AFA85276FD28FF52A8FD05FF274B527D767D7DA8FD05FF
%A1207D52277DFD1FFF27F87DA8FFFFFFA8277DFD0BFF4B272027527D5252
%F876A8FD27FF4BA8FD04FF52272E2E2727205227204BA8FFFFFF52F84BA8
%FD1FFFCA27352727274B272720A8FD0AFFA8272E352E2E2727272E272752
%A8FD25FF527DA8A87D2028355A3536277DFFFFA87D20A8FFFFFFA8FD21FF
%4B2EFD04352E35352E4CFD0AFF76052F0C2F2E2F0C2F2E2F0C27F8274BFD
%23FFFD0527FD063520A8FD04FF5220FD25FF272F36355A35352E352E27A8
%FD09FF202F2E352E352E352E352E2E27A8847620A8FD21FF273536355A35
%36355A353527FD05FF5227A8FD23FFA8F83535352727274B2727F84BFD08
%FF7D272E2F0C352E2F0C352E2EF8FD05A8F8CAFD20FFF8FD09352E4BFFFF
%7D4B207D4B7DFD23FF762E35352052A8FD04FF7D20A8FD07FF7D272E2E35
%2E352E352E35284BA8AFA8AFA8527DFD20FF27355A3536355A3536352F20
%4B20527DA12752A8FD23FF522E35F87DFD07FF524CFD07FF4B522727F820
%F827F827052727527D7D5252277DFD20FF272FFD04352E2E272020767D7D
%4B204BA8FD25FF272E2752FD08FFA84BFD07FF52277D76A87D7D7DA8527D
%527D527D527D525276FD20FF522752272727527DA87D7D272752A8FD28FF
%2720207DFD07FFA87DF8FD07FFA8A85276274B2020F820F820274B274B27
%20F87DFD20FF5252A1A1A87D4B27F84B52A8FD2BFF207D7D4B204B4B524B
%5220275227FD14FFA8A8A8FD24FFA82027275276A1A8FD2FFFA8204B7DCA
%7DA8A1A87DA87D4B27FD74FF7D52272727524B2720527DFD79FFA8A8A8FD
%FCFFFD73FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2014-12-15T11:36:16+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2014-12-15T11:36:16+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2014-12-15T11:36:16+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>244</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA9AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqhr3VNMsDEL67htTO3pwCeRI+b0rxTkRyNOwxWkSCCK&#xA;jpiqD1p7lNGv3ta/Wlt5TBTY+oEPHfbvikPjj8sfzF85eVLC1GkapysXUNJpeoBp7MsacuJX99Ae&#xA;prHUE9VykTouylpRKNh9CeWfz98s3ot4PMsD+Wby4IWGa5dZtPlcipEV/H+527h+JHzywScGeIh6&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:FADA86E81384E411BCEDA968A3005EC0</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FADA86E81384E411BCEDA968A3005EC0</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:0047D21B1384E411BCEDA968A3005EC0</stRef:instanceID>
            <stRef:documentID>xmp.did:0047D21B1384E411BCEDA968A3005EC0</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0047D21B1384E411BCEDA968A3005EC0</stEvt:instanceID>
                  <stEvt:when>2014-12-15T11:36:05+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FADA86E81384E411BCEDA968A3005EC0</stEvt:instanceID>
                  <stEvt:when>2014-12-15T11:36:16+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>200.000000</stDim:w>
            <stDim:h>200.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Web Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -166.821 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 166.821 li
176.394 166.821 li
176.394 0 li
cp
clp
[1 0 0 1 0 0 ]ct
55.1138 159.922 mo
59.0737 160.092 62.7935 160.063 64.9038 159.672 cv
64.9736 160.662 64.9038 161.522 64.8237 161.842 cv
60.6636 162.513 42.3037 161.922 39.6338 160.592 cv
39.6636 159.772 39.7534 159.002 39.8735 158.272 cv
40.0337 158.302 li
42.3638 158.902 49.0337 159.652 55.1138 159.922 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.181369 .0870985 .113436 0 cmyk
f
59.0034 153.492 mo
61.2339 154.183 63.2437 154.882 64.1636 156.513 cv
64.6436 157.372 64.8535 158.603 64.9038 159.672 cv
62.7935 160.063 59.0737 160.092 55.1138 159.922 cv
55.1338 159.592 li
55.1338 156.263 57.4937 153.842 58.9937 153.513 cv
59.0034 153.492 li
cp
f
55.4038 145.082 mo
54.4336 147.723 53.4136 150.162 53.2036 150.842 cv
53.1836 150.832 li
50.4336 152.582 44.4136 151.952 43.6636 149.452 cv
43.5234 149.382 li
44.6035 147.202 45.6738 145.302 46.4639 143.302 cv
46.6235 143.362 li
47.9536 145.362 53.1235 145.862 55.2036 145.013 cv
55.4038 145.082 li
cp
f
28.2236 162.002 mo
28.3135 163.052 28.2837 163.862 28.2437 164.013 cv
26.9136 167.013 13.7437 167.433 10.4136 163.183 cv
10.4336 162.482 10.4839 161.792 10.5537 161.143 cv
10.9136 161.183 li
11.5835 161.712 12.3535 162.152 13.1836 162.502 cv
18.3936 164.723 26.1738 163.742 28.0737 162.013 cv
28.2236 162.002 li
cp
0 0 0 0 cmyk
f
27.9136 160.183 mo
27.9536 160.172 li
28.0938 160.802 28.1738 161.442 28.2236 162.002 cv
28.0737 162.013 li
26.1738 163.742 18.3936 164.723 13.1836 162.502 cv
13.2437 162.353 li
14.2437 155.433 26.4136 153.263 27.9136 160.183 cv
cp
f
26.6538 145.802 mo
25.6538 147.902 24.5635 150.162 24.3335 151.412 cv
24.2437 151.393 li
22.3037 153.202 15.9336 153.082 13.9136 150.183 cv
13.7734 150.112 li
14.5435 148.502 15.6738 146.452 16.7236 144.202 cv
16.8936 144.282 li
18.3936 146.452 24.2236 147.013 26.5537 145.763 cv
26.6538 145.802 li
cp
f
58.9937 153.513 mo
57.4937 153.842 55.1338 156.263 55.1338 159.592 cv
55.1138 159.922 li
49.0337 159.652 42.3638 158.902 40.0337 158.302 cv
39.8735 158.272 li
40.5034 154.702 42.1738 152.122 43.4937 149.452 cv
43.5034 149.433 43.5137 149.402 43.5234 149.382 cv
43.6636 149.452 li
44.4136 151.952 50.4336 152.582 53.1836 150.832 cv
53.2036 150.842 li
53.1738 150.922 53.1636 150.982 53.1636 151.013 cv
54.8735 152.263 57.0234 152.872 59.0034 153.492 cv
58.9937 153.513 li
cp
.823453 .403418 .425788 .104005 cmyk
f
24.2837 151.842 mo
24.6738 153.942 25.4136 154.763 27.0737 157.683 cv
27.4937 158.412 27.7734 159.292 27.9536 160.172 cv
27.9136 160.183 li
26.4136 153.263 14.2437 155.433 13.2437 162.353 cv
13.1836 162.502 li
12.3535 162.152 11.5835 161.712 10.9136 161.183 cv
10.5537 161.143 li
10.9639 157.272 12.1035 154.143 13.2437 151.302 cv
13.3838 150.942 13.5635 150.542 13.7734 150.112 cv
13.9136 150.183 li
15.9336 153.082 22.3037 153.202 24.2437 151.393 cv
24.3335 151.412 li
24.3037 151.572 24.2837 151.712 24.2837 151.842 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
47.7437 135.162 mo
50.4937 135.052 55.2437 134.563 57.2935 133.552 cv
57.3237 133.612 li
57.6636 135.862 57.5737 138.052 56.6636 141.282 cv
56.3237 142.482 55.8735 143.802 55.4038 145.082 cv
55.2036 145.013 li
53.1235 145.862 47.9536 145.362 46.6235 143.362 cv
46.4639 143.302 li
47.4136 140.942 47.9839 138.442 47.7437 135.183 cv
47.7437 135.162 li
cp
.0797436 .400244 .584497 0 cmyk
f
29.5234 136.232 mo
29.5537 136.332 li
29.3037 139.582 28.8638 140.973 27.3037 144.393 cv
27.0938 144.842 26.8735 145.322 26.6538 145.802 cv
26.5537 145.763 li
24.2236 147.013 18.3936 146.452 16.8936 144.282 cv
16.7236 144.202 li
17.9639 141.552 19.0835 138.632 19.3237 135.853 cv
19.3335 135.822 li
21.9639 136.592 26.2534 137.202 29.5234 136.232 cv
cp
0 .167361 .439734 0 cmyk
f
37.9937 108.922 mo
37.9937 111.692 37.2437 119.672 35.9136 121.893 cv
35.9136 122.063 li
34.1338 122.063 31.9937 122.052 31.9937 122.052 cv
33.3638 119.433 34.2437 111.382 34.1636 109.002 cv
34.1636 108.802 li
35.4839 108.802 36.7637 108.802 37.9937 108.802 cv
37.9937 108.922 li
cp
.498634 .76672 .682032 .673518 cmyk
f
58.1338 132.922 mo
57.9639 133.152 57.6738 133.362 57.2935 133.552 cv
55.2437 134.563 50.4937 135.052 47.7437 135.162 cv
46.7935 135.192 46.0835 135.183 45.8037 135.132 cv
44.3438 131.063 38.9736 123.683 36.1738 122.063 cv
36.0835 122.063 36.0034 122.063 35.9136 122.063 cv
35.9136 121.893 li
37.2437 119.672 37.9937 111.692 37.9937 108.922 cv
37.9937 108.802 li
42.1738 108.792 45.6235 108.752 46.9136 108.683 cv
47.3237 113.532 li
48.8335 115.412 55.6938 122.822 58.1338 132.922 cv
cp
f
34.1636 109.002 mo
34.2437 111.382 33.3638 119.433 31.9937 122.052 cv
31.2437 126.882 31.4937 131.292 30.4937 135.893 cv
30.1836 136.022 29.8638 136.143 29.5234 136.232 cv
26.2534 137.202 21.9639 136.592 19.3335 135.822 cv
18.6938 135.643 18.1538 135.442 17.7437 135.252 cv
18.9136 125.272 18.2437 116.933 20.7437 108.683 cv
24.5234 108.752 29.5137 108.792 34.1636 108.802 cv
34.1636 109.002 li
cp
.433509 .775906 .674159 .526574 cmyk
f
31.9937 122.052 mo
31.9839 122.122 31.9736 122.202 31.9639 122.272 cv
31.8535 122.252 li
27.7837 119.092 21.7139 119.563 18.8838 120.032 cv
19.1836 116.563 19.6738 112.212 20.7437 108.683 cv
24.5234 108.752 29.5137 108.792 34.1636 108.802 cv
34.1636 109.002 li
34.2437 111.382 33.3638 119.433 31.9937 122.052 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
29.5234 136.232 mo
29.5537 136.332 li
29.4839 137.202 29.4038 137.933 29.2935 138.612 cv
26.7534 139.862 22.1938 139.672 18.9736 138.052 cv
19.1436 137.313 19.2637 136.572 19.3237 135.853 cv
19.3335 135.822 li
21.9639 136.592 26.2534 137.202 29.5234 136.232 cv
cp
.0797436 .400244 .584497 0 cmyk
f
64.3911 161.399 mo
59.6582 161.991 43.3618 161.358 40.1509 160.264 cv
40.1772 159.782 40.2251 159.32 40.2886 158.872 cv
43.6138 159.629 52.8057 160.521 59.4404 160.521 cv
61.4033 160.521 63.1392 160.441 64.4326 160.259 cv
64.4375 160.718 64.4204 161.123 64.3911 161.399 cv
cp
43.1104 151.285 mo
43.2729 150.975 43.4287 150.667 43.5879 150.357 cv
44.0122 150.93 44.688 151.408 45.6138 151.752 cv
46.5864 152.114 47.8252 152.322 49.0879 152.322 cv
50.4697 152.322 51.8628 152.054 52.9834 151.485 cv
54.3936 152.491 56.0293 153.079 57.6616 153.594 cv
56.187 154.604 54.7124 156.761 54.644 159.404 cv
49 159.134 42.9639 158.47 40.4658 157.891 cv
40.9937 155.337 42.062 153.282 43.1104 151.285 cv
cp
46.6484 144.157 mo
47.9126 145.342 50.4058 145.914 52.5615 145.914 cv
53.3218 145.914 54.0313 145.838 54.6377 145.698 cv
54.2251 146.798 53.8169 147.837 53.4814 148.688 cv
53.1191 149.608 52.9136 150.137 52.7979 150.466 cv
51.1338 151.449 48.1104 151.614 45.9629 150.815 cv
44.9678 150.445 44.3203 149.909 44.1396 149.306 cv
44.1382 149.301 44.1343 149.298 44.1328 149.293 cv
44.3857 148.79 44.6382 148.292 44.8843 147.813 cv
45.5229 146.568 46.1245 145.375 46.6484 144.157 cv
cp
48.2549 135.628 mo
50.5601 135.509 54.5605 135.141 56.8999 134.249 cv
57.1494 136.439 56.9355 138.485 56.1797 141.146 cv
55.8765 142.215 55.48 143.386 55.0649 144.536 cv
55.0474 144.542 55.0298 144.54 55.0122 144.547 cv
53.1147 145.325 48.2808 144.843 47.0664 143.127 cv
47.8994 140.936 48.3994 138.577 48.2549 135.628 cv
cp
46.1675 134.664 mo
44.5039 130.379 39.3931 123.485 36.562 121.721 cv
37.7612 119.18 38.4336 112.231 38.4878 109.298 cv
42.1851 109.287 45.0303 109.253 46.4536 109.203 cv
46.8291 113.576 li
46.8374 113.675 46.875 113.769 46.9365 113.846 cv
47.1563 114.12 47.4868 114.489 47.9004 114.95 cv
50.3691 117.7 55.479 124.395 57.5811 132.786 cv
56.2559 133.964 49.9595 134.678 46.751 134.678 cv
46.4863 134.678 46.2983 134.672 46.1675 134.664 cv
cp
30.894 128.201 mo
30.7266 130.708 30.5684 133.08 30.0596 135.528 cv
28.856 135.996 27.3706 136.232 25.6396 136.232 cv
22.8721 136.232 19.897 135.59 18.2822 134.939 cv
18.6636 131.574 18.8389 128.541 19.0088 125.604 cv
19.3271 120.11 19.603 114.348 21.1143 109.189 cv
24.5269 109.25 29.0669 109.289 33.6636 109.299 cv
33.6816 111.964 32.8008 119.439 31.5513 121.816 cv
31.5435 121.831 31.5444 121.847 31.5381 121.861 cv
31.5229 121.897 31.5059 121.933 31.4995 121.973 cv
31.1665 124.121 31.0278 126.195 30.894 128.201 cv
cp
26.8516 144.183 mo
26.6846 144.549 26.498 144.94 26.3159 145.327 cv
24.1948 146.46 18.728 145.9 17.3472 144.053 cv
18.4634 141.623 19.4253 139.017 19.7461 136.454 cv
21.4385 136.897 23.5708 137.232 25.6396 137.232 cv
26.8809 137.232 27.9966 137.103 29.0039 136.872 cv
28.7446 139.679 28.2671 141.084 26.8516 144.183 cv
cp
23.9326 151.007 mo
23.9233 151.015 23.9111 151.017 23.9019 151.025 cv
23.0356 151.836 20.9727 152.246 18.8804 152.029 cv
16.8291 151.813 15.2061 151.067 14.3916 149.983 cv
14.6802 149.395 15.0103 148.752 15.3677 148.058 cv
15.8584 147.104 16.3794 146.086 16.8887 145.028 cv
18.1782 146.271 20.7754 146.926 23.1382 146.926 cv
24.0718 146.926 24.9536 146.813 25.7144 146.606 cv
24.9224 148.285 24.2163 149.852 23.9326 151.007 cv
cp
25.6616 156.257 mo
25.6953 156.313 25.7354 156.381 25.77 156.439 cv
24.6343 155.768 23.2153 155.409 21.5859 155.459 cv
17.9121 155.587 13.7212 157.845 12.8501 161.787 cv
12.2642 161.501 11.7095 161.178 11.2217 160.791 cv
11.189 160.765 11.1509 160.753 11.1143 160.735 cv
11.5571 157.141 12.6216 154.201 13.708 151.486 cv
13.771 151.329 13.8496 151.154 13.9258 150.982 cv
14.9697 152.071 16.6934 152.805 18.7759 153.023 cv
19.1997 153.068 19.6187 153.09 20.0278 153.09 cv
21.5366 153.09 22.9033 152.792 23.8643 152.262 cv
24.188 153.772 24.728 154.69 25.6616 156.257 cv
cp
27.4224 160.288 mo
27.438 160.36 27.4712 160.425 27.5132 160.48 cv
27.5942 160.894 27.6538 161.298 27.6968 161.678 cv
26.021 163.119 18.812 164.111 13.7861 162.192 cv
14.4502 158.624 18.2729 156.575 21.6206 156.459 cv
24.7085 156.329 26.8789 157.781 27.4224 160.288 cv
cp
27.7871 163.807 mo
27.4185 164.638 25.6479 165.346 23.1655 165.655 cv
18.6929 166.214 12.958 165.372 10.918 163.013 cv
10.9341 162.614 10.9692 162.233 11.0005 161.851 cv
13.4697 163.597 17.0513 164.299 20.377 164.299 cv
23.4419 164.299 26.2715 163.712 27.7876 162.829 cv
27.8101 163.342 27.8013 163.707 27.7871 163.807 cv
cp
37.4878 109.3 mo
37.4277 112.314 36.6768 119.523 35.5205 121.559 cv
34.5078 121.558 33.4531 121.554 32.7622 121.552 cv
33.9341 118.612 34.6753 111.822 34.6631 109.301 cv
35.0645 109.301 35.4658 109.302 35.8662 109.302 cv
36.4229 109.302 36.9604 109.301 37.4878 109.3 cv
cp
63.7251 156.756 mo
64.1104 157.435 64.3013 158.372 64.3833 159.256 cv
62.3501 159.561 59.1235 159.587 55.6484 159.448 cv
55.7168 156.417 57.8276 154.349 59.0317 154.024 cv
61.0679 154.661 62.9185 155.334 63.7251 156.756 cv
cp
64.5952 156.262 mo
63.5142 154.357 61.1914 153.642 58.7324 152.883 cv
56.9985 152.349 55.209 151.797 53.7378 150.805 cv
53.8721 150.427 54.1455 149.732 54.4121 149.056 cv
55.2129 147.022 56.4233 143.949 57.1416 141.42 cv
57.9751 138.484 58.1816 136.252 57.8521 133.791 cv
58.1406 133.614 58.3838 133.427 58.5352 133.217 cv
58.6206 133.099 58.6504 132.948 58.6157 132.807 cv
56.4951 124.029 50.9941 116.899 48.645 114.282 cv
48.3027 113.901 48.019 113.585 47.812 113.337 cv
47.4087 108.64 li
47.3857 108.371 47.1563 108.155 46.8843 108.184 cv
45.4795 108.258 41.3604 108.302 35.8662 108.302 cv
30.3794 108.302 24.7295 108.257 20.7529 108.183 cv
20.5249 108.169 20.3301 108.323 20.2651 108.537 cv
18.624 113.949 18.3398 119.86 18.0107 125.547 cv
17.8354 128.576 17.6538 131.709 17.2466 135.194 cv
17.2212 135.409 17.3374 135.615 17.5342 135.706 cv
17.8774 135.864 18.3062 136.021 18.7769 136.173 cv
18.3301 140.093 16.207 144.243 14.4785 147.6 cv
13.7739 148.969 13.1655 150.15 12.7793 151.115 cv
11.4209 154.509 10.0806 158.235 9.91162 163.166 cv
9.90723 163.284 9.94482 163.399 10.0176 163.492 cv
11.8193 165.789 16.2529 166.821 20.4033 166.821 cv
21.3945 166.821 22.3701 166.762 23.2891 166.647 cv
25.0015 166.435 27.9824 165.834 28.729 164.13 cv
28.8252 163.747 28.9048 159.873 27.5117 157.435 cv
27.1367 156.778 26.8086 156.228 26.5205 155.745 cv
25.5479 154.114 25.0596 153.296 24.7861 151.841 cv
24.7861 150.901 25.9243 148.497 26.9287 146.376 cv
27.2168 145.768 27.5015 145.166 27.7607 144.599 cv
29.2725 141.289 29.772 139.777 30.0347 136.583 cv
30.2554 136.509 30.4839 136.439 30.6899 136.352 cv
30.8389 136.288 30.9478 136.156 30.9824 135.998 cv
31.5503 133.386 31.7163 130.899 31.8921 128.268 cv
32.0151 126.417 32.1426 124.507 32.4243 122.551 cv
33.1611 122.553 34.7085 122.559 36.0308 122.559 cv
38.7295 124.232 43.8857 131.272 45.3374 135.299 cv
45.397 135.465 45.5405 135.587 45.7139 135.62 cv
45.9165 135.658 46.2559 135.678 46.751 135.678 cv
46.877 135.678 47.0557 135.674 47.2573 135.669 cv
47.498 140.484 45.9541 143.539 43.9946 147.356 cv
43.6836 147.962 43.3652 148.582 43.0454 149.228 cv
42.7822 149.759 42.5049 150.287 42.2246 150.82 cv
40.7764 153.579 39.2793 156.432 39.1362 160.575 cv
39.1294 160.771 39.2373 160.952 39.4121 161.04 cv
41.4443 162.057 51.3613 162.624 58.4297 162.624 cv
61.2935 162.624 63.6909 162.531 64.9053 162.337 cv
65.1025 162.305 65.2622 162.159 65.311 161.965 cv
65.4912 161.249 65.6211 158.07 64.5952 156.262 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
56.8037 103.152 mo
56.2139 105.252 55.2236 108.822 53.6738 108.342 cv
53.3936 108.252 53.1636 108.103 52.9937 107.893 cv
52.8936 107.992 li
51.8936 108.132 50.8438 110.263 51.4336 111.952 cv
51.1138 112.433 50.8735 113.563 51.3135 114.572 cv
51.2534 114.592 li
49.1138 113.942 46.5737 111.952 46.1338 110.582 cv
47.0835 108.362 47.9536 104.473 48.0234 103.353 cv
48.1938 103.362 li
50.2437 100.982 53.0034 99.7422 54.4038 100.132 cv
55.6538 100.492 57.0537 100.933 56.9238 102.522 cv
56.9136 102.712 56.8735 102.922 56.8037 103.152 cv
cp
.0797436 .400244 .584497 0 cmyk
f
57.1138 102.532 mo
59.4839 102.982 61.0234 103.752 61.6138 104.912 cv
62.1235 105.912 61.8438 107.702 60.5835 108.422 cv
61.3438 109.772 60.0537 116.473 55.2637 116.482 cv
52.8638 116.492 51.7437 115.592 51.3135 114.572 cv
50.8735 113.563 51.1138 112.433 51.4336 111.952 cv
50.8438 110.263 51.8936 108.132 52.8936 107.992 cv
52.9937 107.893 li
53.1636 108.103 53.3936 108.252 53.6738 108.342 cv
55.2236 108.822 56.2139 105.252 56.8037 103.152 cv
56.8735 102.922 56.9136 102.712 56.9238 102.522 cv
57.1138 102.532 li
cp
f
44.9639 76.1426 mo
49.9438 76.5625 47.8135 87.042 46.2036 92.9326 cv
45.7534 92.9619 45.2534 92.9727 44.7236 92.9424 cv
42.4136 92.8018 39.4136 92.0723 36.7437 90.9424 cv
35.9736 90.6221 35.2236 90.2627 34.5337 89.8721 cv
36.1538 84.8018 40.4937 75.7725 44.9639 76.1426 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
42.3735 100.902 mo
44.3335 101.502 46.4038 102.513 48.0337 103.143 cv
48.0337 103.192 48.0337 103.263 48.0234 103.353 cv
47.9536 104.473 47.0835 108.362 46.1338 110.582 cv
46.0835 110.702 46.0337 110.813 45.9839 110.922 cv
43.6338 110.622 34.9736 107.563 34.0234 105.742 cv
32.5537 102.922 35.6235 94.1025 36.6836 91.082 cv
36.7437 90.9424 li
39.4136 92.0723 42.4136 92.8018 44.7236 92.9424 cv
44.7036 93.1318 li
43.9136 95.4023 42.9736 98.8418 42.4136 100.763 cv
42.3735 100.902 li
cp
.498634 .76672 .682032 .673518 cmyk
f
60.3325 107.993 mo
60.0957 108.13 60.0132 108.432 60.147 108.671 cv
60.4561 109.222 60.3154 111.528 59.168 113.493 cv
58.5059 114.627 57.2905 115.979 55.2637 115.983 cv
55.2573 115.983 55.2515 115.983 55.2456 115.983 cv
53.5254 115.983 52.3511 115.485 51.8491 114.543 cv
51.3701 113.644 51.6196 112.579 51.8525 112.234 cv
51.9414 112.103 51.9629 111.938 51.9102 111.788 cv
51.5903 110.88 51.8501 109.809 52.2495 109.149 cv
52.5039 108.729 52.7622 108.545 52.9263 108.502 cv
53.1055 108.635 53.2993 108.747 53.5215 108.816 cv
53.6641 108.86 53.8076 108.883 53.9507 108.883 cv
54.1924 108.883 54.4321 108.82 54.6592 108.696 cv
55.8623 108.041 56.5776 105.794 57.2822 103.285 cv
57.3013 103.217 57.3013 103.157 57.3164 103.09 cv
59.3901 103.522 60.6914 104.209 61.1685 105.142 cv
61.541 105.868 61.3979 107.377 60.3325 107.993 cv
cp
46.6777 110.571 mo
47.5264 108.481 48.3003 105.231 48.4897 103.751 cv
48.5166 103.729 48.5469 103.715 48.5698 103.688 cv
50.5083 101.438 53.0771 100.28 54.2666 100.618 cv
54.9585 100.813 55.6128 101.017 56.019 101.376 cv
56.3027 101.627 56.5933 102.04 56.3008 103.081 cv
55.8857 104.559 55.1133 107.31 54.1807 107.818 cv
54.0542 107.886 53.9414 107.899 53.8174 107.861 cv
53.5063 107.765 53.2856 107.551 53.1426 107.206 cv
52.7759 106.323 53.0103 104.812 53.7266 103.444 cv
53.855 103.199 53.7603 102.897 53.5156 102.769 cv
53.269 102.643 52.9692 102.735 52.8408 102.979 cv
51.9814 104.621 51.7373 106.43 52.2188 107.59 cv
52.2368 107.633 52.2627 107.668 52.2827 107.709 cv
51.958 107.901 51.6519 108.206 51.394 108.632 cv
50.9385 109.383 50.5557 110.663 50.8965 111.896 cv
50.667 112.36 50.5161 113.071 50.6045 113.822 cv
48.8257 113.044 47.1113 111.546 46.6777 110.571 cv
cp
34.4644 105.507 mo
33.5679 103.792 34.4341 99.1104 37.0303 91.5996 cv
39.353 92.5322 41.9028 93.1826 44.0884 93.3857 cv
43.5093 95.1064 42.8789 97.3135 42.3647 99.1191 cv
42.0322 100.278 li
40.5781 99.8809 39.187 99.7354 38.02 100.144 cv
37.7593 100.234 37.6221 100.52 37.7134 100.78 cv
37.8047 101.041 38.0908 101.182 38.3501 101.087 cv
40.3032 100.403 43.4443 101.747 45.9697 102.827 cv
46.5112 103.059 47.0327 103.282 47.522 103.478 cv
47.3979 104.584 46.6138 108.121 45.7148 110.286 cv
45.6973 110.313 45.6812 110.337 45.6685 110.366 cv
42.8413 109.835 35.2222 106.956 34.4644 105.507 cv
cp
44.9209 76.6416 mo
45.668 76.7041 46.2373 77.0293 46.6621 77.6367 cv
48.1094 79.709 47.7983 85.0977 45.8125 92.4502 cv
42.8877 92.5518 38.373 91.3457 35.1421 89.6279 cv
36.8994 84.3379 40.9971 76.3193 44.9209 76.6416 cv
cp
62.0586 104.686 mo
61.418 103.434 59.8857 102.584 57.3936 102.085 cv
57.3408 101.509 57.1191 101.014 56.6816 100.627 cv
56.1167 100.127 55.3447 99.8818 54.5371 99.6553 cv
52.9165 99.2021 50.1978 100.508 48.1719 102.658 cv
47.6113 102.441 47.002 102.181 46.3628 101.908 cv
45.27 101.44 44.1206 100.953 42.9878 100.573 cv
43.3262 99.3936 li
43.8652 97.5029 44.5313 95.1689 45.126 93.4404 cv
45.2349 93.4434 45.353 93.4561 45.459 93.4561 cv
45.7314 93.4561 45.9922 93.4463 46.2393 93.4268 cv
46.4492 93.4111 46.6265 93.2646 46.6821 93.0615 cv
48.2251 87.4502 49.6162 80.1191 47.4814 77.0645 cv
46.8848 76.21 46.0508 75.7324 45.0039 75.6455 cv
39.8364 75.2158 35.334 85.7178 34.0615 89.7168 cv
33.9897 89.9424 34.0864 90.1885 34.2935 90.3047 cv
34.8623 90.624 35.478 90.918 36.1094 91.2002 cv
34.3242 96.3467 32.1934 103.321 33.5781 105.97 cv
34.6763 108.07 43.71 111.141 45.9199 111.419 cv
45.9409 111.422 45.9619 111.423 45.9824 111.423 cv
45.9888 111.423 45.9937 111.418 46 111.418 cv
46.8906 112.81 49.0264 114.395 50.9746 115.026 cv
51.4575 115.923 52.5894 116.983 55.2451 116.983 cv
55.252 116.983 55.2588 116.983 55.2656 116.983 cv
57.7661 116.979 59.2373 115.356 60.0317 113.997 cv
61.1206 112.133 61.4883 109.825 61.1846 108.617 cv
62.3765 107.659 62.6504 105.84 62.0586 104.686 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
47.876 78.2256 mo
46.8965 78.9492 45.6001 79.4941 44.479 79.9248 cv
44.7637 78.5723 45.6357 74.9355 46.1396 72.3398 cv
46.3687 72.3887 li
47.0757 72.4609 49.498 73.6758 49.438 75.7646 cv
49.4165 76.7568 48.7822 77.5625 47.876 78.2256 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
36.9478 74.5508 mo
36.8643 74.6738 li
32.5313 71.9395 28.9136 70.1963 26.7056 69.9316 cv
26.5713 69.9092 26.4395 69.9082 26.3169 69.8955 cv
26.3223 69.8643 li
29.0073 68.3457 33.8521 69.5527 37.7578 70.3975 cv
37.9766 70.4473 li
37.7065 71.6865 37.4199 72.9502 36.9478 74.5508 cv
cp
.826932 .410346 .420874 .105837 cmyk
f
26.7056 69.9316 mo
28.9136 70.1963 32.5313 71.9395 36.8643 74.6738 cv
39.2339 76.1582 41.8066 77.9375 44.479 79.9248 cv
37.8315 77.6777 33.1934 75.7148 28.7109 75.8701 cv
28.7178 76.1318 li
27.4219 77.4756 26.1748 79.8818 25.0151 82.9844 cv
24.877 82.9326 li
22.9712 81.9473 21.5635 79.1162 23.0493 76.252 cv
20.8291 73.5342 22.2539 69.6582 26.3169 69.8955 cv
26.4395 69.9082 26.5713 69.9092 26.7056 69.9316 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
47.8867 78.2344 mo
49.1089 83.2637 49.168 104.017 48.1865 113.707 cv
43.9468 116.232 25.2275 115.965 18.2158 112.779 cv
19.751 102.577 22.1367 90.6689 25.0151 82.9844 cv
26.1748 79.8818 27.4219 77.4756 28.7178 76.1318 cv
28.7109 75.8701 li
33.1934 75.7148 37.8315 77.6777 44.479 79.9248 cv
45.6001 79.4941 46.8965 78.9492 47.876 78.2256 cv
47.8867 78.2344 li
cp
.74789 .241123 .31931 .00552377 cmyk
f
48.791 89.9121 mo
48.8613 92.6387 48.8813 95.585 48.8594 98.5156 cv
41.4648 100.656 28.144 98.9229 21.3989 95.6201 cv
22.0698 92.708 22.7891 89.9209 23.5444 87.3906 cv
29.2944 89.3594 42.0464 91.7891 48.791 89.9121 cv
cp
0 0 0 0 cmyk
f
46.5142 69.7627 mo
46.5249 70.1953 46.3672 71.1572 46.1396 72.3398 cv
45.6357 74.9355 44.7637 78.5723 44.479 79.9248 cv
41.8066 77.9375 39.2339 76.1582 36.8643 74.6738 cv
36.9478 74.5508 li
37.4199 72.9502 37.7065 71.6865 37.9766 70.4473 cv
38.1567 69.6445 38.3398 68.8613 38.5537 68.0137 cv
41.5449 68.6035 43.3291 68.7256 46.5142 69.7627 cv
cp
.0797436 .400244 .584497 0 cmyk
f
48.9424 75.752 mo
48.9043 77.2461 47.0566 78.3174 45.1743 79.1104 cv
45.2437 78.8018 45.3223 78.4551 45.4067 78.082 cv
45.832 76.2041 46.2354 74.4023 46.5322 72.9326 cv
47.2744 73.1699 48.9819 74.1826 48.9424 75.752 cv
cp
47.7183 113.396 mo
43.3965 115.604 25.8218 115.419 18.7676 112.475 cv
19.9175 104.923 23.792 81.9424 29.0767 76.4766 cv
29.1104 76.4414 29.1309 76.3994 29.1519 76.3584 cv
32.6382 76.3477 36.2773 77.6084 41.1108 79.293 cv
42.1299 79.6475 43.1973 80.0205 44.3228 80.4004 cv
44.3271 80.4023 44.332 80.4014 44.3364 80.4023 cv
44.3535 80.4082 44.3711 80.4063 44.3882 80.4102 cv
44.4341 80.418 44.4805 80.4238 44.5259 80.4189 cv
44.5347 80.4189 44.5439 80.4229 44.5522 80.4219 cv
44.5898 80.416 44.6265 80.4072 44.6621 80.3936 cv
45.6641 80.0088 46.6738 79.5732 47.5396 79.0498 cv
48.625 85.0547 48.5967 104.359 47.7183 113.396 cv
cp
23.165 80.1328 mo
22.8823 79.3008 22.7104 77.9912 23.4976 76.4824 cv
23.5903 76.3047 23.5679 76.0879 23.4404 75.9336 cv
22.4463 74.7236 22.2236 73.1758 22.8735 71.9883 cv
23.5303 70.7881 24.9082 70.2197 26.6509 70.4268 cv
29.4268 70.7588 34.855 73.6787 41.4731 78.3604 cv
41.4619 78.3564 41.4512 78.3525 41.4395 78.3486 cv
34.8564 76.0547 30.1001 74.3936 24.9565 75.9902 cv
24.6929 76.0723 24.5454 76.3516 24.6265 76.6152 cv
24.7085 76.8779 24.9849 77.0322 25.2524 76.9453 cv
26.1104 76.6797 26.9551 76.5146 27.8008 76.4268 cv
26.7212 77.7998 25.707 79.8369 24.7656 82.2646 cv
24.0547 81.7764 23.4653 81.0176 23.165 80.1328 cv
cp
36.8218 70.7061 mo
37.3813 70.8271 li
37.1675 71.7705 36.9316 72.7666 36.6099 73.9189 cv
33.2031 71.8086 30.3398 70.3809 28.2383 69.7559 cv
30.6689 69.3691 34.0161 70.0947 36.8218 70.7061 cv
cp
38.458 70.6006 mo
38.6074 69.9346 38.7549 69.2813 38.9263 68.5938 cv
39.5723 68.7168 40.1641 68.8193 40.7319 68.9189 cv
42.4365 69.2158 43.9219 69.4736 46 70.124 cv
45.8579 71.5654 44.9771 75.4521 44.4316 77.8604 cv
44.3296 78.3105 44.2383 78.7158 44.1592 79.0684 cv
41.7852 77.3223 39.5479 75.7813 37.4932 74.4736 cv
37.9189 72.9854 38.1953 71.7695 38.458 70.6006 cv
cp
46.7241 71.9502 mo
46.9141 70.9355 47.0254 70.1621 47.0195 69.7578 cv
47.0161 69.543 46.8774 69.3555 46.6738 69.2891 cv
44.3335 68.5303 42.7437 68.2539 40.9033 67.9326 cv
40.209 67.8125 39.478 67.6846 38.6553 67.5225 cv
38.396 67.4727 38.1416 67.6299 38.0747 67.8867 cv
37.897 68.5693 37.748 69.2109 37.603 69.8525 cv
37.0352 69.7285 li
33.1758 68.8877 28.8066 67.9395 26.1328 69.3955 cv
24.2827 69.3525 22.7612 70.1113 21.9961 71.5078 cv
21.1963 72.9697 21.3872 74.8223 22.4683 76.3105 cv
21.1597 79.1602 22.3931 82.0205 24.3994 83.2354 cv
20.9277 92.7529 18.5273 107.353 17.7212 112.705 cv
17.6885 112.927 17.8062 113.143 18.0093 113.234 cv
23.6885 115.812 36.4102 116.451 43.7632 115.418 cv
45.8521 115.124 47.5078 114.695 48.4458 114.138 cv
48.5815 114.057 48.6714 113.916 48.688 113.759 cv
49.6182 104.569 49.6274 84.0635 48.4355 78.4258 cv
49.3198 77.7129 49.9146 76.8525 49.9419 75.7764 cv
49.998 73.5645 47.7944 72.2529 46.7241 71.9502 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
70.8472 24.4541 mo
77.2388 30.0479 75.4355 39.6113 72.5029 43.3818 cv
72.2417 43.374 li
72.2808 41.1826 72.2769 39.3057 72.2842 38.0098 cv
71.7949 36.2061 70.3501 34.0332 68.2124 32.5439 cv
68.1265 32.4814 li
62.9507 39.1787 48.6533 44.1934 42.5688 43.4912 cv
42.8364 42.0723 43.3687 40.8115 44.0752 39.7148 cv
42.186 41.0645 36.6997 43.3018 31.0913 44.3643 cv
31.1123 44.4932 li
29.9282 50.1182 26.4756 53.6826 23.6323 56.5205 cv
21.5479 51.8545 18.2007 49.9697 14.9707 51.2559 cv
12.6426 52.1816 10.7764 54.835 11.0762 58.0313 cv
10.9272 58.0537 li
8.14355 56.4102 5.06689 54.1699 2.32959 50.1934 cv
3.83057 48.7568 6.71094 47.2607 9.5249 46.3818 cv
6.71875 44.3691 2.79736 41.1982 .5 37.8857 cv
2.63281 35.0693 7.95703 31.3311 14.2583 28.7725 cv
11.3013 27.9063 7.47803 25.8525 5.29004 23.7949 cv
7.84424 21.4336 13.4341 18.4346 20.5767 17.8096 cv
18.9805 16.7754 16.4561 14.1953 14.9097 11.7813 cv
24.1851 7.87793 41.374 7.45801 52.019 10.04 cv
63.6079 12.8506 70.8774 19.0605 70.8472 24.4541 cv
cp
.373144 .782101 .665248 .350225 cmyk
f
72.2417 43.374 mo
72.1177 50.2217 71.5879 60.1152 69.0386 64.9355 cv
65.7466 71.1357 59.1094 74.3271 54.3521 74.9131 cv
49.7148 75.4902 34.4868 75.4873 24.064 65.3564 cv
21.6533 67.4043 15.707 66.791 12.5117 61.9307 cv
11.6416 60.5908 11.1953 59.2754 11.0762 58.0313 cv
10.7764 54.835 12.6426 52.1816 14.9707 51.2559 cv
18.2007 49.9697 21.5479 51.8545 23.6323 56.5205 cv
26.4756 53.6826 29.9282 50.1182 31.1123 44.4932 cv
31.0913 44.3643 li
36.6997 43.3018 42.186 41.0645 44.0752 39.7148 cv
43.3687 40.8115 42.8364 42.0723 42.5688 43.4912 cv
48.6533 44.1934 62.9507 39.1787 68.1265 32.4814 cv
68.2124 32.5439 li
70.3501 34.0332 71.7949 36.2061 72.2842 38.0098 cv
72.2769 39.3057 72.2808 41.1826 72.2417 43.374 cv
cp
0 .167361 .439734 0 cmyk
f
51.0244 54.9404 mo
50.9165 57.5957 49.2349 59.6836 47.2695 59.6035 cv
45.3042 59.5234 43.7974 57.3057 43.9053 54.6494 cv
44.0137 51.9941 45.6953 49.9063 47.6611 49.9854 cv
49.3423 52.0908 49.5186 52.2383 50.8208 53.0566 cv
50.978 53.6396 51.0518 54.2764 51.0244 54.9404 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
48.1704 53.8037 mo
47.8799 54.9072 46.981 55.6279 46.1646 55.4121 cv
45.3472 55.1973 44.9189 54.127 45.2104 53.0225 cv
45.502 51.9199 46.3999 51.1992 47.2173 51.415 cv
48.0342 51.6289 48.4619 52.6992 48.1704 53.8037 cv
cp
0 0 0 0 cmyk
f
70.2222 53.2393 mo
70.3384 55.8945 69.1445 58.1025 67.5571 58.1729 cv
65.9692 58.2422 64.5869 56.1436 64.4707 53.4893 cv
64.4507 53.0264 64.4702 52.5762 64.5249 52.1494 cv
65.9224 50.3955 65.8486 50.4834 67.1367 48.5557 cv
68.7241 48.4863 70.1064 50.583 70.2222 53.2393 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
67.9067 53.1191 mo
67.9487 54.083 67.4204 54.8887 66.7261 54.9199 cv
66.0317 54.9502 65.4336 54.1924 65.3916 53.2285 cv
65.3496 52.2646 65.8789 51.458 66.5732 51.4277 cv
67.2671 51.3975 67.8647 52.1553 67.9067 53.1191 cv
cp
0 0 0 0 cmyk
f
62.7656 16.1865 mo
65.7866 18.1309 67.4287 20.1455 68.2915 21.8574 cv
64.1216 28.124 42.1704 25.0547 31.3472 24.6875 cv
21.9941 24.3711 15.8643 25.791 12.2271 28.0459 cv
11.2378 27.6416 10.2212 27.1484 9.25 26.5996 cv
21.1636 17.5176 49.8647 19.7246 57.1245 18.5977 cv
60.4028 18.0898 62.0933 17.2197 62.7656 16.1865 cv
cp
.341833 .684718 .553277 .151247 cmyk
f
70.8472 24.4541 mo
70.856 22.8369 70.2056 21.1367 68.9771 19.4873 cv
67.6563 17.6963 65.6465 15.9551 63.0615 14.4033 cv
60.0845 12.6162 56.3579 11.0957 52.019 10.04 cv
42.1938 7.65625 26.7905 7.83008 17.1855 10.9395 cv
28.0244 8.9668 46.2471 9.11914 56.8247 13.2227 cv
59.2456 14.1563 61.1904 15.1602 62.7656 16.1865 cv
65.7866 18.1309 67.4287 20.1455 68.2915 21.8574 cv
69.0322 23.3271 69.2114 24.5771 69.2222 25.3887 cv
72.6675 27.8174 75.5815 33.4756 73.0288 42.623 cv
75.6255 38.4512 76.8472 29.7012 70.8472 24.4541 cv
cp
0 0 0 0 cmyk
f
68.3208 32.6348 mo
63.3657 44.3818 46.3867 47.6641 39.2397 47.5469 cv
39.3799 46.2793 39.5303 45.1318 40.1694 43.8311 cv
38.1616 45.3223 33.7529 47.0225 30.0273 47.9209 cv
30.4868 46.8662 30.8491 45.7305 31.1123 44.4932 cv
31.0913 44.3643 li
36.6997 43.3018 42.186 41.0645 44.0752 39.7148 cv
43.3687 40.8115 42.8364 42.0723 42.5688 43.4912 cv
48.6533 44.1934 62.9507 39.1787 68.1265 32.4814 cv
68.2124 32.5439 li
68.2549 32.5713 68.2876 32.5977 68.3208 32.6348 cv
cp
.0797436 .400244 .584497 0 cmyk
f
72.2417 43.374 mo
72.1177 50.2217 71.5879 60.1152 69.0386 64.9355 cv
65.7466 71.1357 59.1094 74.3271 54.3521 74.9131 cv
53.7759 74.9834 53.0288 75.0488 52.1382 75.0771 cv
57.395 73.7832 63.0581 71.04 67.2871 65.1094 cv
70.3726 60.7939 70.8569 51.1846 70.6221 34.8428 cv
71.4468 35.8955 72.0156 37.0098 72.2842 38.0098 cv
72.2769 39.3057 72.2808 41.1826 72.2417 43.374 cv
cp
0 0 0 0 cmyk
f
15.5942 56.4746 mo
13.9302 57.9443 14.5767 61.127 17.626 62.4873 cv
19.9766 63.5361 22.0737 62.4629 21.2271 59.6621 cv
20.1675 56.1582 17.3804 54.8965 15.5942 56.4746 cv
cp
.0797436 .400244 .584497 0 cmyk
f
58.7163 60.7744 mo
59.4297 59.7031 60.8706 59.582 60.709 60.5996 cv
60.5469 61.6182 58.2729 61.4404 58.7163 60.7744 cv
cp
f
72.7656 37.873 mo
72.2202 35.8789 70.7192 33.8115 68.8164 32.3818 cv
69.1416 31.9316 69.4346 31.4756 69.6714 31.0137 cv
69.7974 30.7686 69.6997 30.4668 69.4546 30.3408 cv
69.2061 30.2148 68.9072 30.3125 68.7817 30.5586 cv
65.1719 37.6035 50.145 43.4453 43.1743 43.042 cv
44.0967 39.3076 47.064 36.7051 49.4111 35.582 cv
49.6602 35.4629 49.7656 35.165 49.6465 34.916 cv
49.5273 34.667 49.229 34.5596 48.9795 34.6807 cv
47.1509 35.5557 45.127 37.1494 43.7056 39.3652 cv
40.9165 41.2969 31.7383 44.624 24.9004 44.4473 cv
25.9414 40.2539 30.415 34.7168 34.1191 33.165 cv
34.3735 33.0566 34.4937 32.7646 34.3867 32.5098 cv
34.2798 32.2568 33.9893 32.1367 33.7324 32.2412 cv
29.5332 34.002 24.6113 40.2402 23.7949 44.835 cv
23.77 44.9756 23.8066 45.1201 23.895 45.2324 cv
23.9839 45.3457 24.1162 45.4141 24.2593 45.4219 cv
25.3345 45.4834 26.4756 45.4541 27.6479 45.3516 cv
28.5723 45.2705 29.5161 45.1406 30.4629 44.9785 cv
29.2471 49.9121 26.2183 53.2158 23.7788 55.668 cv
21.6016 51.2969 18.2007 49.4365 14.7861 50.7949 cv
12.9727 51.5156 11.5146 53.1348 10.8853 55.125 cv
10.6675 55.8145 10.5679 56.5264 10.5596 57.248 cv
8.27637 55.8457 5.49951 53.7949 2.99316 50.2676 cv
4.4917 48.9971 7.10449 47.6582 9.67334 46.8594 cv
9.85449 46.8027 9.98828 46.6494 10.0186 46.4609 cv
10.0488 46.2744 9.9707 46.0859 9.81592 45.9746 cv
7.58496 44.3779 3.55029 41.2441 1.12451 37.9023 cv
3.14893 35.4307 7.9458 31.8799 14.4468 29.2402 cv
14.6436 29.1602 14.7686 28.9648 14.7578 28.752 cv
14.7471 28.5391 14.604 28.3574 14.3994 28.2969 cv
11.5566 27.4619 8.1416 25.6113 6.04053 23.7949 cv
8.70117 21.5498 13.9307 18.8936 20.6206 18.3076 cv
20.833 18.2891 21.0107 18.1377 21.0625 17.9297 cv
21.1138 17.7227 21.0278 17.5059 20.8481 17.3896 cv
19.5078 16.5234 17.2295 14.2842 15.6602 12.0127 cv
25.353 8.2002 42.0688 8.13965 51.9014 10.5254 cv
64.0454 13.4727 70.373 19.7617 70.3472 24.4512 cv
70.3467 24.5967 70.4087 24.7344 70.5181 24.8301 cv
76.1733 29.7793 75.0781 38.0439 72.7578 42.0801 cv
72.771 40.9521 72.7759 39.9277 72.7788 39.0781 cv
72.7842 38.0088 li
72.7837 37.9619 72.7778 37.917 72.7656 37.873 cv
cp
68.5938 64.6973 mo
65.4727 70.5771 59.1597 73.8174 54.2881 74.4199 cv
48.0933 75.1846 33.8882 74.2012 24.4155 64.9941 cv
24.2314 64.8154 23.9404 64.8037 23.7432 64.9717 cv
22.7769 65.793 21.1499 66.1328 19.3901 65.8779 cv
16.8003 65.5049 14.4473 63.9658 12.9346 61.6563 cv
11.6016 59.6201 11.2124 57.4072 11.8394 55.4268 cv
12.3784 53.7197 13.6187 52.335 15.1553 51.7227 cv
18.1875 50.5225 21.2593 52.4346 23.1729 56.7275 cv
23.2397 56.8779 23.3765 56.9854 23.5381 57.0156 cv
23.6978 57.0469 23.8657 56.9941 23.9829 56.8779 cv
26.6445 54.2207 30.2749 50.5869 31.5547 44.7793 cv
35.9629 43.9053 40.2773 42.3398 42.8291 41.0283 cv
42.5068 41.7705 42.2334 42.5508 42.0737 43.3984 cv
42.0483 43.5352 42.0806 43.6758 42.1631 43.7881 cv
42.2451 43.8994 42.3701 43.9717 42.5078 43.9883 cv
43.3252 44.082 44.2734 44.0791 45.3164 43.9873 cv
52.2695 43.3789 63.418 38.8477 68.1948 33.166 cv
70.2261 34.6797 71.3784 36.6572 71.7832 38.0723 cv
71.7788 39.0742 li
71.7725 40.8252 71.7617 43.2783 71.6714 46.0068 cv
71.3364 45.4482 70.9009 45.2656 70.5679 45.2373 cv
69.0903 45.1211 67.333 47.3223 65.1396 50.6797 cv
64.5903 51.5215 64.1934 51.7158 64.0581 51.6904 cv
63.9253 51.6719 63.708 51.415 63.5435 50.8945 cv
63.4429 50.5771 63.1069 50.4023 62.79 50.502 cv
62.4741 50.6025 62.2988 50.9395 62.3984 51.2549 cv
62.7861 52.4805 63.4258 52.8145 63.895 52.8789 cv
63.998 52.8936 64.1011 52.8965 64.2046 52.8867 cv
64.8569 52.8301 65.5083 52.3105 66.144 51.3369 cv
68.9805 46.9922 70.0728 46.3975 70.4663 46.4326 cv
70.5752 46.4424 70.6719 46.6289 70.7197 46.7393 cv
70.8521 47.0439 71.2056 47.1826 71.5093 47.0518 cv
71.5586 47.0303 71.5957 46.9951 71.6362 46.9629 cv
71.3872 53.2686 70.6787 60.7676 68.5938 64.6973 cv
cp
71.3442 24.2266 mo
71.1792 18.2803 63.3369 12.2715 52.1372 9.55371 cv
41.957 7.08398 24.4893 7.20313 14.7104 11.3213 cv
14.5747 11.3779 14.4712 11.4922 14.4272 11.6328 cv
14.3838 11.7734 14.4043 11.9268 14.4839 12.0518 cv
15.8096 14.1182 17.7427 16.1875 19.2612 17.4482 cv
12.5732 18.3086 7.41895 21.1455 4.95068 23.4229 cv
4.84863 23.5166 4.79053 23.6484 4.78955 23.7871 cv
4.78906 23.9258 4.8457 24.0586 4.94678 24.1533 cv
6.81104 25.9141 9.96924 27.7666 12.8442 28.832 cv
7.31543 31.2588 2.29395 34.6895 .101563 37.584 cv
-.0288086 37.7568 -.0341797 37.9932 .0893555 38.1709 cv
2.31445 41.3789 6.01172 44.4092 8.44629 46.2148 cv
5.83691 47.1436 3.37061 48.5146 1.98535 49.8271 cv
1.80713 49.9971 1.77832 50.2695 1.91699 50.4736 cv
4.81445 54.6973 8.09521 56.9639 10.6382 58.4668 cv
10.8232 59.7295 11.3081 60.9971 12.0981 62.2041 cv
13.7681 64.7539 16.3735 66.4541 19.2476 66.8682 cv
21.0884 67.1357 22.8364 66.8145 24.0283 66.0078 cv
35.1074 76.4854 50.5815 75.7559 53.8247 75.4727 cv
54.1436 75.4443 54.3442 75.4209 54.4111 75.4131 cv
59.54 74.7783 66.1875 71.3633 69.4766 65.167 cv
72.0225 60.3701 72.5913 50.6582 72.7295 43.8232 cv
72.793 43.791 72.8511 43.748 72.8975 43.6885 cv
75.8794 39.8555 77.8677 30.1289 71.3442 24.2266 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
58.022 65.2549 mo
52.4209 67.79 46.0654 65.8184 44.2671 63.2236 cv
44.3569 63.21 44.439 63.2061 44.5034 63.2158 cv
44.7754 63.2559 45.0327 63.0732 45.0762 62.7998 cv
45.1196 62.5273 44.9336 62.2715 44.6611 62.2275 cv
44.0806 62.1357 43.3057 62.3984 42.8169 62.8545 cv
42.48 63.167 42.3125 63.5469 42.3457 63.9209 cv
42.3696 64.1963 42.6118 64.3994 42.8872 64.376 cv
43.1626 64.3516 43.3657 64.1094 43.3418 63.834 cv
43.3394 63.8086 43.3564 63.7666 43.3867 63.7178 cv
44.9907 66.1563 49.2988 67.7578 53.7715 67.3662 cv
55.3428 67.2285 56.9346 66.8457 58.4346 66.166 cv
58.686 66.0518 58.7979 65.7559 58.6836 65.5039 cv
58.5703 65.2529 58.2754 65.1406 58.022 65.2549 cv
cp
f
17.0093 55.3164 mo
16.9751 55.3174 16.9409 55.3203 16.9077 55.3232 cv
15.5679 55.4404 14.5435 56.333 14.4004 57.5215 cv
14.3667 57.7949 14.5625 58.0449 14.8364 58.0771 cv
15.1099 58.1162 15.3599 57.916 15.3931 57.6406 cv
15.481 56.9111 16.1689 56.3379 17.0664 56.3145 cv
18.376 56.2383 20.1699 57.2607 20.9194 60.3906 cv
20.9785 60.6348 21.2065 60.7939 21.4492 60.7725 cv
21.4736 60.7705 21.498 60.7656 21.5225 60.7598 cv
21.791 60.6963 21.9565 60.4258 21.8926 60.1582 cv
20.999 56.4277 18.7031 55.2178 17.0093 55.3164 cv
cp
f
47.4541 51.1416 mo
49.9736 53.7148 51.356 54.6572 52.4863 54.5586 cv
52.5166 54.5557 52.5469 54.5518 52.5767 54.5488 cv
53.5322 54.417 54.0674 53.5732 54.5747 52.6455 cv
54.7344 52.3545 54.6274 51.9902 54.3369 51.8311 cv
54.0454 51.6719 53.6816 51.7793 53.5225 52.0684 cv
53.1069 52.8291 52.7759 53.3096 52.4126 53.3604 cv
51.4058 53.457 49.0845 51.0918 48.311 50.3027 cv
43.9492 45.8496 39.4077 46.8291 36.8438 49.0225 cv
36.5918 49.2373 36.5625 49.6172 36.7778 49.8682 cv
36.9932 50.1201 37.3726 50.1484 37.6235 49.9346 cv
39.7949 48.0791 43.6719 47.2803 47.4541 51.1416 cv
cp
f
30.4624 44.9814 mo
30.188 46.0898 29.8169 47.126 29.3887 48.0771 cv
27.6841 48.4463 26.1641 48.6309 25.1514 48.5283 cv
25.2207 47.8291 25.5601 46.6553 26.1958 45.4346 cv
26.6768 45.4229 27.1558 45.3916 27.644 45.3486 cv
28.5703 45.2676 29.5132 45.1445 30.4624 44.9814 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
1.12402 37.9023 mo
4.9502 39.4141 9.05273 39.6074 11.9473 39.6455 cv
13.7329 37.1094 16.2651 34.499 21.04 33.1982 cv
18.3882 35.8193 17.9351 37.8662 17.6221 41.4072 cv
21.3638 35.2979 26.769 33.6299 32.4653 32.8809 cv
28.5947 35.2178 24.5269 40.7031 23.7944 44.832 cv
23.7666 44.9746 23.8096 45.1221 23.8994 45.2354 cv
23.98 45.3486 24.1162 45.416 24.2573 45.4238 cv
24.8828 45.46 25.5356 45.4629 26.1958 45.4346 cv
25.5601 46.6553 25.2207 47.8291 25.1514 48.5283 cv
26.1641 48.6309 27.6841 48.4463 29.3887 48.0771 cv
27.9087 51.3584 25.6597 53.7637 23.7783 55.665 cv
21.5996 51.2979 18.2041 49.4365 14.7891 50.7891 cv
12.9761 51.5205 11.5112 53.1348 10.8823 55.127 cv
10.6714 55.8174 10.5635 56.5303 10.5566 57.2529 cv
8.27539 55.8467 5.49512 53.791 2.98877 50.2656 cv
4.49365 49 7.10693 47.6572 9.67725 46.8604 cv
9.85303 46.8047 9.99023 46.6514 10.0137 46.46 cv
10.0474 46.2764 9.9707 46.082 9.8208 45.9746 cv
7.58301 44.373 3.5542 41.2432 1.12402 37.9023 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
29.2339 108.434 mo
30.2842 109.523 31.2939 110.614 31.104 111.544 cv
30.854 112.794 30.2739 114.044 28.354 114.214 cv
27.354 115.714 22.604 118.344 19.854 117.214 cv
17.104 116.084 15.104 111.464 14.4839 106.964 cv
14.4839 106.954 li
16.2441 105.714 18.644 103.364 19.5942 102.233 cv
19.7241 102.344 li
22.2241 102.214 25.7241 101.584 27.4839 102.964 cv
29.2241 104.344 31.604 106.584 29.854 108.344 cv
29.2339 108.434 li
cp
0 .167361 .439734 0 cmyk
f
14.4839 106.954 mo
14.354 107.044 14.2241 107.134 14.104 107.214 cv
12.2739 105.714 6.56396 98.5137 6.72412 96.4639 cv
6.98389 93.2939 14.2739 87.4639 16.7739 85.4639 cv
16.9038 85.374 li
18.564 87.7637 20.7139 89.9736 22.604 91.3037 cv
22.4839 91.4639 li
20.604 92.9639 17.9839 95.3838 16.4839 96.7139 cv
16.374 96.8037 li
17.7139 98.3535 18.9238 100.313 19.9839 101.714 cv
19.9341 101.824 19.7939 102.004 19.5942 102.233 cv
18.644 103.364 16.2441 105.714 14.4839 106.954 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
22.604 91.3037 mo
22.4839 91.4639 li
21.8242 91.9941 21.0742 92.624 20.314 93.2939 cv
17.814 92.1641 15.2539 90.0635 13.7939 87.9043 cv
14.9941 86.8838 16.0742 86.0234 16.7739 85.4639 cv
16.9038 85.374 li
18.564 87.7637 20.7139 89.9736 22.604 91.3037 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
31.7241 77.2139 mo
35.7241 80.2139 28.354 87.9639 23.854 92.084 cv
23.4541 91.874 23.0342 91.6143 22.604 91.3037 cv
20.7139 89.9736 18.564 87.7637 16.9038 85.374 cv
16.4238 84.6943 15.9839 83.9941 15.604 83.2939 cv
19.6641 79.8643 28.144 74.5234 31.7241 77.2139 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
28.3105 113.716 mo
28.1592 113.729 28.022 113.811 27.938 113.937 cv
27.0513 115.267 22.5225 117.764 20.0435 116.751 cv
17.7793 115.825 15.7358 111.911 15.0195 107.183 cv
16.6509 105.979 18.6685 104.033 19.73 102.835 cv
19.7383 102.835 19.7456 102.839 19.7539 102.838 cv
20.2188 102.815 20.7178 102.774 21.2339 102.733 cv
23.4214 102.556 25.8975 102.356 27.1699 103.357 cv
28.9692 104.771 29.9092 105.958 29.9648 106.886 cv
29.9888 107.289 29.8369 107.648 29.5005 107.985 cv
29.4985 107.987 29.498 107.99 29.4961 107.992 cv
29.4839 107.979 29.4722 107.968 29.4604 107.955 cv
29.0737 107.556 28.6875 107.158 28.3633 106.769 cv
28.187 106.559 27.8721 106.527 27.6587 106.705 cv
27.4468 106.882 27.418 107.197 27.5947 107.409 cv
27.9341 107.816 28.3374 108.233 28.7422 108.651 cv
29.6865 109.627 30.7568 110.732 30.6138 111.449 cv
30.3149 112.942 29.6479 113.6 28.3105 113.716 cv
cp
7.22754 96.5029 mo
7.37939 94.5752 10.6035 91.0684 16.7983 86.085 cv
18.2827 88.127 20.1025 90.0264 21.833 91.3486 cv
20.4287 92.4971 18.7266 94.0234 17.3286 95.2803 cv
16.417 96.0977 li
15.397 94.9883 14.2954 94.126 13.0898 93.8516 cv
12.8218 93.7852 12.5522 93.958 12.4912 94.2285 cv
12.4302 94.4971 12.5991 94.7656 12.8682 94.8262 cv
14.8843 95.2842 16.8315 98.0928 18.396 100.349 cv
18.7319 100.833 19.0557 101.3 19.3662 101.726 cv
18.665 102.607 16.063 105.244 14.1436 106.585 cv
12.0356 104.643 7.09863 98.1357 7.22754 96.5029 cv
cp
29.2197 76.9814 mo
30.126 76.9814 30.8691 77.1943 31.4292 77.6143 cv
32.0288 78.0635 32.3379 78.6426 32.3745 79.3828 cv
32.499 81.9082 29.3706 86.3057 23.7798 91.4775 cv
21.2754 90.0313 18.084 86.6182 16.2432 83.415 cv
19.126 81.0459 25.124 76.9814 29.2197 76.9814 cv
cp
30.2075 108.692 mo
30.7505 108.149 31.0044 107.521 30.9629 106.826 cv
30.8887 105.583 29.8501 104.191 27.7881 102.57 cv
26.2051 101.327 23.5215 101.544 21.1533 101.736 cv
20.9097 101.756 20.689 101.769 20.4546 101.786 cv
20.4741 101.656 20.4604 101.522 20.3789 101.414 cv
20.0112 100.923 19.6235 100.364 19.2178 99.7793 cv
18.5405 98.8027 17.8271 97.7793 17.0698 96.8555 cv
17.9976 96.0244 li
19.4541 94.7139 21.2515 93.0986 22.6694 91.9551 cv
22.9932 92.1699 23.314 92.3711 23.6221 92.5322 cv
23.6953 92.5703 23.7749 92.5889 23.854 92.5889 cv
23.9761 92.5889 24.0977 92.5439 24.1919 92.457 cv
28.4814 88.5254 33.5566 83.0566 33.373 79.333 cv
33.3218 78.292 32.8696 77.4443 32.0288 76.8135 cv
31.2925 76.2617 30.3472 75.9814 29.2197 75.9814 cv
24.6777 75.9814 18.1162 80.5166 15.2813 82.915 cv
15.1001 83.0684 15.0513 83.3281 15.165 83.5361 cv
15.4775 84.1094 15.8418 84.6855 16.2266 85.2598 cv
11.9785 88.6709 6.46582 93.4463 6.23047 96.4248 cv
6.04395 98.7871 12.0635 106.19 13.7871 107.601 cv
13.8755 107.673 13.9824 107.709 14.0908 107.712 cv
14.8032 111.926 16.7446 116.481 19.6646 117.677 cv
20.2021 117.896 20.7944 117.992 21.4116 117.992 cv
24.2246 117.992 27.5605 116.002 28.6255 114.687 cv
31.0518 114.357 31.458 112.326 31.5942 111.645 cv
31.7896 110.669 31.0669 109.682 30.1777 108.712 cv
30.187 108.704 30.1987 108.701 30.2075 108.692 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
137.063 83.8359 mo
136.783 84.1963 136.453 84.5654 136.063 84.9355 cv
134.412 86.5557 131.854 88.2861 129.223 89.4961 cv
128.463 89.8457 127.703 90.1563 126.953 90.4063 cv
124.293 85.8057 120.523 76.5156 123.813 73.4561 cv
127.473 70.0459 133.793 78.6758 137.063 83.8359 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
140.093 92.0859 mo
141.652 91.9756 143.912 92.2959 147.742 93.1758 cv
147.773 93.2256 147.813 93.2754 147.833 93.3262 cv
148.693 94.7656 148.572 98.9961 147.893 100.876 cv
147.863 100.956 147.833 101.036 147.803 101.105 cv
143.783 101.426 138.313 100.726 136.363 100.046 cv
133.732 99.1357 130.783 92.8154 129.293 89.6357 cv
129.223 89.4961 li
131.854 88.2861 134.412 86.5557 136.063 84.9355 cv
136.203 85.0762 li
137.354 87.1855 139.133 90.2754 140.093 92.0859 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
155.933 92.4258 mo
156.283 92.5059 li
159.123 92.3662 160.943 93.1758 162.533 94.3359 cv
164.373 95.6963 166.293 98.2754 165.513 98.8457 cv
164.033 99.9258 162.863 96.3359 160.193 96.7559 cv
161.283 97.4258 162.783 99.3359 163.113 101.086 cv
163.363 102.426 162.492 102.896 161.443 102.426 cv
161.943 103.556 160.822 104.565 159.443 104.336 cv
159.533 105.836 158.083 106.296 157.313 105.355 cv
155.763 103.466 153.973 103.556 152.273 103.126 cv
150.563 102.696 148.742 101.996 148.033 100.926 cv
147.893 100.876 li
148.572 98.9961 148.693 94.7656 147.833 93.3262 cv
147.943 93.2559 li
148.533 91.6758 149.963 89.7256 152.943 89.6455 cv
155.923 89.5762 158.982 87.126 159.423 88.7861 cv
159.713 89.8662 158.423 90.0361 156.343 91.4756 cv
156.183 91.5859 156.083 91.9463 155.933 92.4258 cv
cp
.0797436 .400244 .584497 0 cmyk
f
163.716 97.748 mo
162.879 97.0156 161.734 96.0049 160.119 96.2617 cv
159.912 96.2939 159.747 96.4521 159.706 96.6572 cv
159.665 96.8623 159.756 97.0723 159.935 97.1816 cv
160.849 97.7441 162.313 99.5371 162.621 101.181 cv
162.697 101.587 162.648 101.892 162.488 102.019 cv
162.326 102.146 162.004 102.127 161.652 101.967 cv
161.463 101.882 161.242 101.921 161.096 102.066 cv
160.948 102.212 160.905 102.433 160.988 102.622 cv
161.146 102.988 161.029 103.257 160.904 103.419 cv
160.631 103.771 160.09 103.938 159.527 103.846 cv
159.378 103.818 159.225 103.865 159.111 103.967 cv
159 104.068 158.938 104.215 158.947 104.366 cv
158.973 104.833 158.807 105.183 158.5 105.302 cv
158.229 105.407 157.92 105.307 157.695 105.034 cv
156.356 103.405 154.808 103.116 153.441 102.862 cv
153.09 102.797 152.74 102.732 152.395 102.646 cv
150.396 102.143 149.01 101.444 148.473 100.679 cv
149.023 98.7373 149.159 95.1328 148.428 93.4004 cv
148.877 92.2061 150.055 90.2256 152.957 90.1504 cv
154.307 90.1152 155.665 89.627 156.756 89.2344 cv
157.596 88.9326 158.547 88.5908 158.842 88.7451 cv
158.858 88.7539 158.903 88.7773 158.938 88.9111 cv
159.025 89.2383 158.885 89.3701 157.785 89.9971 cv
157.314 90.2656 156.727 90.6006 156.063 91.0605 cv
155.767 91.2656 155.649 91.6436 155.473 92.2148 cv
155.019 93.6807 154.353 95.9131 150.704 95.8389 cv
150.391 95.8672 150.201 96.0557 150.196 96.3311 cv
150.191 96.6074 150.412 96.834 150.688 96.8389 cv
150.739 96.8398 150.789 96.8398 150.84 96.8398 cv
154.643 96.8398 155.764 94.5029 156.271 93.001 cv
156.282 93.001 156.293 93.0059 156.305 93.0049 cv
159.239 92.8594 160.953 93.7998 162.233 94.7412 cv
164.028 96.0635 165.316 98.0576 165.221 98.4375 cv
164.882 98.6855 164.578 98.5029 163.716 97.748 cv
cp
136.529 99.5732 mo
134.179 98.7588 131.342 92.8271 129.889 89.7334 cv
132.158 88.6348 134.367 87.1777 135.979 85.709 cv
136.453 86.5752 137.008 87.5625 137.564 88.5537 cv
138.195 89.6768 138.816 90.7832 139.312 91.6953 cv
137.916 91.96 137.026 92.6396 135.863 93.6621 cv
135.656 93.8447 135.635 94.1602 135.818 94.3682 cv
136 94.5752 136.316 94.5957 136.523 94.4141 cv
137.663 93.4121 138.438 92.7461 140.092 92.6064 cv
140.096 92.6064 140.099 92.6094 140.102 92.6094 cv
140.109 92.6094 140.117 92.6045 140.124 92.6035 cv
141.587 92.4873 143.732 92.7754 147.436 93.6172 cv
148.152 94.8896 148.064 98.8252 147.447 100.633 cv
143.443 100.895 138.277 100.183 136.529 99.5732 cv
cp
124.151 73.8242 mo
124.615 73.3926 125.127 73.1836 125.717 73.1836 cv
128.225 73.1836 132.127 77.0488 136.446 83.8018 cv
134.58 86.0117 130.658 88.5498 127.18 89.7959 cv
124.232 84.5557 121.428 76.3613 124.151 73.8242 cv
cp
162.826 93.9365 mo
161.535 92.9844 159.662 91.9238 156.588 92.0049 cv
156.607 91.9453 156.625 91.8975 156.633 91.8828 cv
157.261 91.4473 157.826 91.125 158.281 90.8662 cv
159.354 90.2549 160.201 89.7715 159.905 88.6553 cv
159.783 88.1934 159.512 87.9678 159.307 87.8604 cv
158.622 87.5 157.648 87.8496 156.418 88.2939 cv
155.341 88.6807 154.12 89.1201 152.931 89.1504 cv
149.692 89.2354 148.242 91.3623 147.66 92.6445 cv
144.176 91.8516 141.965 91.5166 140.383 91.5752 cv
139.86 90.6006 139.155 89.3438 138.436 88.0635 cv
137.828 86.9824 137.221 85.9014 136.721 84.9844 cv
136.992 84.7021 137.242 84.4199 137.457 84.1436 cv
137.586 83.9775 137.597 83.7471 137.484 83.5693 cv
134.194 78.375 129.482 72.1836 125.717 72.1836 cv
124.873 72.1836 124.117 72.4893 123.47 73.0918 cv
119.678 76.626 124.385 86.9678 126.519 90.6543 cv
126.609 90.8125 126.777 90.9043 126.951 90.9043 cv
127.004 90.9043 127.057 90.8965 127.109 90.8789 cv
127.725 90.6738 128.352 90.4268 128.979 90.1514 cv
130.588 93.5752 133.455 99.5654 136.201 100.519 cv
137.794 101.073 141.852 101.689 145.607 101.689 cv
146.372 101.689 147.125 101.663 147.84 101.606 cv
147.868 101.604 147.889 101.586 147.916 101.579 cv
148.694 102.418 150.114 103.102 152.15 103.615 cv
152.518 103.707 152.887 103.776 153.258 103.845 cv
154.573 104.09 155.815 104.321 156.924 105.669 cv
157.283 106.106 157.777 106.344 158.281 106.344 cv
158.477 106.344 158.674 106.308 158.863 106.233 cv
159.427 106.014 159.803 105.513 159.915 104.87 cv
160.639 104.85 161.291 104.55 161.693 104.033 cv
161.912 103.752 162.035 103.432 162.061 103.098 cv
162.455 103.134 162.821 103.028 163.105 102.805 cv
163.379 102.591 163.806 102.071 163.604 100.997 cv
163.381 99.8047 162.652 98.5254 161.83 97.5635 cv
162.268 97.8096 162.666 98.1582 163.057 98.501 cv
163.859 99.2051 164.77 100.003 165.809 99.2461 cv
166.056 99.0664 166.191 98.7813 166.193 98.4424 cv
166.195 97.25 164.422 95.1104 162.826 93.9365 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
111.264 152.865 mo
113.834 153.961 118.675 153.228 121.07 149.863 cv
123.49 150.198 125.887 150.172 128.056 150.327 cv
126.342 151.479 125.196 155.445 126.099 158.537 cv
126.107 158.548 li
119.95 160.215 113.932 160.992 111.594 161.028 cv
111.414 161.066 li
111.404 161.064 li
110.824 157.565 111.096 154.777 111.144 153.016 cv
111.143 152.965 111.143 152.914 111.142 152.863 cv
111.264 152.865 li
cp
.74789 .241123 .31931 .00552377 cmyk
f
142.904 136.206 mo
145.251 135.469 147.186 134.176 148.999 133.084 cv
149.005 133.105 li
148.297 134.325 148.645 137.82 150.994 140.035 cv
151.156 140.197 li
146.672 144.704 141.784 148.278 139.736 149.531 cv
139.629 149.612 li
137.548 146.838 136.855 144.143 135.96 142.69 cv
138.824 142.987 142.524 140.318 142.904 136.206 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
158.584 134.17 mo
157.057 138.482 143.731 150.417 141.109 151.316 cv
140.544 150.752 140.063 150.172 139.629 149.612 cv
139.736 149.531 li
141.784 148.278 146.672 144.704 151.156 140.197 cv
153.492 137.851 155.721 135.269 157.381 132.62 cv
157.408 132.585 li
158.062 133.217 158.4 133.902 158.584 134.17 cv
cp
.181369 .0870985 .113436 0 cmyk
f
157.381 132.62 mo
155.721 135.269 153.492 137.851 151.156 140.197 cv
150.994 140.035 li
148.645 137.82 148.297 134.325 149.005 133.105 cv
148.999 133.084 li
150.801 131.999 152.482 131.126 154.343 131.243 cv
155.781 131.332 156.747 131.932 157.408 132.585 cv
157.381 132.62 li
cp
f
139.338 131.433 mo
140.545 133.015 141.763 134.648 142.904 136.206 cv
142.524 140.318 138.824 142.987 135.96 142.69 cv
134.852 140.904 133.691 139.179 132.41 137.451 cv
132.48 137.403 li
134.809 137.151 139.086 133.949 139.268 131.48 cv
139.338 131.433 li
cp
f
126.107 158.548 mo
129.539 157.619 133.013 156.413 135.913 154.904 cv
135.979 154.876 li
136.314 155.795 136.381 156.58 136.401 156.899 cv
132.914 159.844 114.588 163.823 111.873 163.27 cv
111.671 162.509 111.525 161.769 111.414 161.066 cv
111.594 161.028 li
113.932 160.992 119.95 160.215 126.107 158.548 cv
cp
0 0 0 0 cmyk
f
133.691 151.849 mo
134.938 152.685 135.623 153.853 135.979 154.876 cv
135.913 154.904 li
133.013 156.413 129.539 157.619 126.107 158.548 cv
126.099 158.537 li
125.196 155.445 126.342 151.479 128.056 150.327 cv
130.205 150.479 132.146 150.814 133.691 151.849 cv
cp
f
111.088 145.658 mo
113.228 146.611 118.932 146.101 120.326 144.054 cv
120.43 144.043 li
120.657 145.907 120.867 147.871 121.07 149.863 cv
118.675 153.228 113.834 153.961 111.264 152.865 cv
111.142 152.863 li
111.201 150.441 111.214 148.113 111.057 145.662 cv
111.088 145.658 li
cp
f
120.43 144.043 mo
120.326 144.054 li
118.932 146.101 113.228 146.611 111.088 145.658 cv
111.057 145.662 li
110.934 143.776 110.725 141.813 110.353 139.688 cv
109.791 136.519 109.174 134.724 108.596 133.312 cv
108.584 133.207 li
111.789 132.998 115.077 131.695 117.64 129.768 cv
117.682 129.816 li
118.299 131.612 118.649 133.205 119.011 134.901 cv
119.516 137.296 120.001 140.491 120.43 144.043 cv
cp
0 .167361 .439734 0 cmyk
f
139.338 131.433 mo
139.268 131.48 li
139.086 133.949 134.809 137.151 132.48 137.403 cv
132.41 137.451 li
131.043 135.585 129.554 133.717 127.871 131.74 cv
125.789 129.291 124.344 128.052 123.135 127.131 cv
123.037 127.001 li
125.723 125.279 127.838 122.595 129.107 119.589 cv
130.617 121.023 131.66 122.126 132.834 123.406 cv
134.521 125.251 136.916 128.247 139.338 131.433 cv
cp
.0797436 .400244 .584497 0 cmyk
f
114.379 104.025 mo
113.861 105.525 112.42 108.205 111.336 109.577 cv
111.168 109.658 li
110.715 108.717 110.282 107.831 109.863 107.029 cv
110.742 105.771 111.36 104.545 112.064 102.917 cv
112.134 102.768 li
112.93 103.132 113.705 103.501 114.461 103.857 cv
114.379 104.025 li
cp
.498634 .76672 .682032 .673518 cmyk
f
129.107 119.589 mo
127.838 122.595 125.723 125.279 123.037 127.001 cv
122.377 127.426 121.676 127.792 120.947 128.093 cv
120.203 127.402 118.801 126.201 117.124 124.846 cv
116.982 124.892 li
115.539 119.764 113.26 114.052 111.168 109.658 cv
111.336 109.577 li
112.42 108.205 113.861 105.525 114.379 104.025 cv
114.461 103.857 li
116.658 104.894 118.69 105.878 120.428 106.756 cv
120.24 107.26 119.707 108.686 119.482 109.232 cv
122.825 112.113 126.212 115.357 129.336 119.021 cv
129.26 119.21 129.184 119.399 129.107 119.589 cv
cp
f
108.584 133.207 mo
107.665 133.277 106.755 133.249 105.873 133.122 cv
104.992 130.188 101.086 120.261 99.3115 117.047 cv
93.7168 106.901 94.5898 101.632 97.0811 95.874 cv
101.684 97.9648 107.168 100.445 112.134 102.768 cv
112.064 102.917 li
111.36 104.545 110.742 105.771 109.863 107.029 cv
110.282 107.831 110.715 108.717 111.168 109.658 cv
113.26 114.052 115.539 119.764 116.982 124.892 cv
117.434 126.493 117.793 128.035 118.044 129.457 cv
117.912 129.564 117.779 129.672 117.64 129.768 cv
115.077 131.695 111.789 132.998 108.584 133.207 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
108.584 133.207 mo
111.789 132.998 115.077 131.695 117.64 129.768 cv
117.682 129.816 li
118.037 130.84 118.295 131.795 118.523 132.743 cv
116.279 134.437 113.054 135.567 109.268 135.138 cv
109.045 134.434 108.818 133.853 108.596 133.312 cv
108.584 133.207 li
cp
.0797436 .400244 .584497 0 cmyk
f
111.168 109.658 mo
111.293 109.915 111.417 110.173 111.53 110.438 cv
107.418 108.013 98.8438 108.419 96.4766 110.934 cv
94.1855 104.527 95.1465 100.353 97.0811 95.874 cv
101.684 97.9648 107.168 100.445 112.134 102.768 cv
112.064 102.917 li
111.36 104.545 110.742 105.771 109.863 107.029 cv
110.282 107.831 110.715 108.717 111.168 109.658 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
141.232 150.722 mo
140.916 150.39 140.631 150.057 140.362 149.724 cv
144.096 147.357 152.778 140.527 157.469 133.398 cv
157.709 133.706 157.893 134.001 158.025 134.225 cv
156.227 138.52 144.18 149.258 141.232 150.722 cv
cp
137.363 144.451 mo
137.162 143.989 136.975 143.576 136.789 143.194 cv
138.066 143.1 139.4 142.544 140.557 141.591 cv
142.115 140.309 143.095 138.532 143.354 136.566 cv
145.189 135.948 146.791 135.012 148.216 134.141 cv
148.041 135.851 148.674 138.364 150.464 140.188 cv
146.408 144.202 142.066 147.472 139.755 148.925 cv
138.621 147.329 137.939 145.776 137.363 144.451 cv
cp
133.247 137.751 mo
135.453 137.12 138.625 134.779 139.523 132.504 cv
140.521 133.824 141.492 135.128 142.377 136.337 cv
142.172 138.09 141.309 139.677 139.922 140.82 cv
138.791 141.751 137.435 142.254 136.241 142.205 cv
135.303 140.698 134.316 139.231 133.247 137.751 cv
cp
123.851 127.053 mo
126.111 125.461 127.983 123.167 129.263 120.433 cv
130.469 121.601 131.412 122.593 132.461 123.74 cv
134.136 125.576 136.475 128.507 138.76 131.497 cv
138.543 133.682 134.728 136.504 132.61 136.878 cv
131.311 135.126 129.883 133.339 128.251 131.417 cv
126.338 129.165 124.955 127.926 123.851 127.053 cv
cp
121.045 127.501 mo
120.209 126.741 118.863 125.604 117.439 124.453 cv
117.414 124.433 117.383 124.425 117.355 124.41 cv
115.97 119.576 113.853 114.188 111.793 109.809 cv
112.796 108.498 114.107 106.125 114.722 104.535 cv
116.563 105.408 118.289 106.243 119.803 107.001 cv
119.795 107.022 li
119.555 107.658 119.193 108.618 119.02 109.047 cv
119.016 109.052 119.018 109.059 119.016 109.064 cv
119.002 109.1 119 109.136 118.995 109.172 cv
118.991 109.201 118.983 109.229 118.984 109.257 cv
118.986 109.29 118.997 109.32 119.006 109.353 cv
119.012 109.383 119.016 109.413 119.029 109.441 cv
119.041 109.468 119.062 109.491 119.079 109.516 cv
119.1 109.546 119.117 109.575 119.144 109.599 cv
119.148 109.604 119.15 109.61 119.155 109.614 cv
122.882 112.825 126.026 115.936 128.759 119.117 cv
128.721 119.214 128.671 119.304 128.631 119.399 cv
128.63 119.4 128.629 119.401 128.629 119.402 cv
127.066 123.083 124.285 126.068 121.045 127.501 cv
cp
106.258 132.668 mo
105.176 129.249 101.462 119.906 99.748 116.801 cv
94.6191 107.504 94.8926 102.419 97.3408 96.5381 cv
98.5615 97.0928 li
102.607 98.9297 107.215 101.021 111.48 103.011 cv
110.877 104.381 110.284 105.557 109.453 106.743 cv
109.346 106.897 109.332 107.097 109.419 107.262 cv
112.52 113.19 116.26 122.583 117.498 129.245 cv
114.238 131.757 109.893 133.079 106.258 132.668 cv
cp
118.522 135.002 mo
118.982 137.163 119.441 140.12 119.895 143.8 cv
118.666 145.526 113.627 146.017 111.529 145.285 cv
111.406 143.501 111.195 141.618 110.842 139.599 cv
110.335 136.717 109.773 134.952 109.266 133.644 cv
112.063 133.337 114.93 132.251 117.389 130.542 cv
117.877 132.077 118.199 133.483 118.522 135.002 cv
cp
125.668 150.7 mo
126.09 150.718 126.502 150.736 126.908 150.755 cv
125.562 152.477 124.929 155.612 125.5 158.185 cv
119.78 159.691 114.252 160.44 111.836 160.522 cv
111.449 157.888 111.535 155.662 111.604 154.063 cv
111.611 153.868 111.616 153.705 111.623 153.527 cv
111.859 153.6 112.103 153.664 112.355 153.712 cv
115.238 154.256 119.117 153.175 121.281 150.387 cv
122.775 150.573 124.246 150.643 125.668 150.7 cv
cp
133.418 152.263 mo
134.395 152.917 134.988 153.799 135.349 154.626 cv
132.703 155.959 129.588 157.05 126.465 157.918 cv
125.87 155.172 126.856 151.904 128.215 150.838 cv
130.233 150.993 132.002 151.316 133.418 152.263 cv
cp
112.275 162.816 mo
112.168 162.374 112.076 161.94 111.996 161.516 cv
116.143 161.35 127.75 159.533 135.676 155.579 cv
135.795 156.023 135.858 156.414 135.885 156.671 cv
132.067 159.518 115.575 163.019 112.275 162.816 cv
cp
111.592 146.346 mo
111.736 146.384 111.879 146.422 112.037 146.451 cv
114.411 146.899 118.203 146.466 120.047 145.05 cv
120.217 146.501 120.387 148.056 120.555 149.714 cv
118.295 152.707 113.977 153.327 111.651 152.478 cv
111.692 150.54 111.703 148.516 111.592 146.346 cv
cp
113.816 104.105 mo
113.313 105.441 112.215 107.477 111.303 108.785 cv
111.014 108.189 110.727 107.61 110.444 107.065 cv
111.229 105.905 111.804 104.754 112.388 103.434 cv
112.872 103.66 113.344 103.883 113.816 104.105 cv
cp
154.318 131.742 mo
155.404 131.808 156.182 132.197 156.755 132.666 cv
155.234 135.017 153.263 137.337 151.166 139.478 cv
149.174 137.44 148.883 134.447 149.412 133.418 cv
151.103 132.412 152.645 131.643 154.318 131.742 cv
cp
159 133.901 mo
158.885 133.713 li
158.428 132.947 157.218 130.919 154.377 130.743 cv
152.082 130.607 150.068 131.838 147.938 133.141 cv
146.441 134.056 144.896 135.001 143.09 135.615 cv
139.971 131.358 135.801 125.916 133.199 123.066 cv
132.061 121.819 131.051 120.757 129.689 119.454 cv
129.725 119.367 129.768 119.287 129.801 119.199 cv
129.866 119.028 129.834 118.835 129.715 118.695 cv
126.971 115.475 123.812 112.33 120.076 109.092 cv
120.269 108.601 120.537 107.889 120.73 107.375 cv
120.896 106.935 li
120.988 106.695 120.883 106.426 120.654 106.311 cv
114.962 103.439 106.098 99.415 98.9746 96.1826 cv
97.2871 95.416 li
97.165 95.3604 97.0254 95.3564 96.9004 95.4053 cv
96.7754 95.4531 96.6748 95.5498 96.6211 95.6729 cv
93.9307 101.898 93.4365 107.43 98.873 117.283 cv
100.579 120.377 104.493 130.256 105.396 133.267 cv
105.449 133.446 105.6 133.58 105.781 133.615 cv
105.789 133.616 105.797 133.617 105.805 133.618 cv
106.586 133.729 107.396 133.744 108.217 133.712 cv
108.734 135.003 109.324 136.746 109.857 139.771 cv
110.748 144.854 110.732 149.094 110.642 153 cv
110.635 153.311 110.619 153.651 110.604 154.022 cv
110.513 156.188 110.375 159.459 111.389 163.396 cv
111.438 163.581 111.586 163.723 111.773 163.761 cv
111.783 163.763 111.791 163.764 111.799 163.766 cv
114.891 164.349 133.2 160.254 136.727 157.279 cv
136.846 157.178 136.911 157.027 136.903 156.872 cv
136.873 156.271 136.589 153.184 133.974 151.432 cv
131.756 149.947 128.818 149.829 125.708 149.701 cv
124.347 149.646 122.943 149.589 121.53 149.419 cv
120.869 142.936 120.187 138.017 119.501 134.793 cv
119.15 133.146 118.805 131.628 118.242 129.925 cv
118.279 129.896 118.32 129.872 118.357 129.843 cv
118.5 129.729 118.568 129.546 118.537 129.365 cv
118.352 128.32 118.098 127.199 117.799 126.038 cv
118.961 126.997 119.988 127.88 120.604 128.453 cv
120.674 128.519 120.761 128.562 120.852 128.578 cv
120.945 128.596 121.043 128.587 121.135 128.549 cv
121.762 128.292 122.361 127.97 122.949 127.619 cv
124.059 128.471 125.463 129.679 127.488 132.064 cv
130.816 135.981 133.297 139.341 135.533 142.956 cv
135.832 143.44 136.117 144.093 136.446 144.85 cv
137.255 146.711 138.363 149.259 140.759 151.669 cv
140.831 151.742 140.924 151.789 141.021 151.808 cv
141.104 151.823 141.191 151.818 141.275 151.789 cv
143.951 150.872 157.459 138.849 159.053 134.342 cv
159.104 134.194 159.084 134.031 159 133.901 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
132.457 76.5156 mo
131.295 76.8828 129.893 76.9785 128.692 77.0225 cv
129.399 75.835 131.403 72.6768 132.721 70.3848 cv
132.922 70.5049 li
133.568 70.8018 135.466 72.7363 134.732 74.6934 cv
134.391 75.626 133.528 76.1826 132.457 76.5156 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
123.309 69.498 mo
123.189 69.5879 li
119.977 65.5967 117.119 62.7754 115.117 61.8086 cv
114.996 61.7441 114.872 61.7012 114.76 61.6484 cv
114.775 61.6201 li
117.808 61.0537 122 63.7666 125.421 65.832 cv
125.612 65.9492 li
124.955 67.0342 124.273 68.1367 123.309 69.498 cv
cp
.826932 .410346 .420874 .105837 cmyk
f
115.117 61.8086 mo
117.119 62.7754 119.977 65.5967 123.189 69.5879 cv
124.951 71.7598 126.809 74.2764 128.692 77.0225 cv
123.132 72.7432 119.381 69.3818 115.09 68.0781 cv
115.011 68.3262 li
113.35 69.1777 111.39 71.0508 109.287 73.6094 cv
109.174 73.5156 li
107.689 71.9668 107.275 68.8311 109.609 66.6025 cv
108.39 63.3125 110.993 60.1084 114.76 61.6484 cv
114.872 61.7012 114.996 61.7441 115.117 61.8086 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
132.465 76.5264 mo
131.99 81.6816 125.321 101.334 121.253 110.183 cv
116.424 111.198 98.8008 104.879 93.2002 99.5938 cv
97.958 90.4385 104.074 79.9473 109.287 73.6094 cv
111.39 71.0508 113.35 69.1777 115.011 68.3262 cv
115.09 68.0781 li
119.381 69.3818 123.132 72.7432 128.692 77.0225 cv
129.893 76.9785 131.295 76.8828 132.457 76.5156 cv
132.465 76.5264 li
cp
.74789 .241123 .31931 .00552377 cmyk
f
129.535 87.8682 mo
128.719 90.4697 127.782 93.2646 126.813 96.0293 cv
119.123 95.6582 107.082 89.7021 101.771 84.3916 cv
103.35 81.8545 104.934 79.4502 106.469 77.3018 cv
111.27 81.0273 122.547 87.458 129.535 87.8682 cv
cp
0 0 0 0 cmyk
f
133.911 68.0674 mo
133.781 68.4805 133.32 69.3398 132.721 70.3848 cv
131.403 72.6768 129.399 75.835 128.692 77.0225 cv
126.809 74.2764 124.951 71.7598 123.189 69.5879 cv
123.309 69.498 li
124.273 68.1367 124.955 67.0342 125.612 65.9492 cv
126.043 65.248 126.47 64.5654 126.947 63.834 cv
129.586 65.3613 131.233 66.0547 133.911 68.0674 cv
cp
.0797436 .400244 .584497 0 cmyk
f
134.268 74.5205 mo
133.747 75.9219 131.652 76.3359 129.614 76.4775 cv
129.779 76.208 129.967 75.9053 130.168 75.5801 cv
131.178 73.9414 132.145 72.3662 132.9 71.0732 cv
133.525 71.5371 134.813 73.0488 134.268 74.5205 cv
cp
120.91 109.737 mo
116.106 110.427 99.541 104.555 93.8213 99.4834 cv
97.3555 92.7119 108.468 72.2275 115.239 68.7686 cv
115.282 68.7461 115.314 68.7148 115.348 68.6816 cv
118.649 69.8018 121.684 72.1729 125.711 75.333 cv
126.561 75.999 127.449 76.6973 128.391 77.4229 cv
128.395 77.4248 128.399 77.4258 128.402 77.4277 cv
128.416 77.4385 128.434 77.4424 128.449 77.4531 cv
128.49 77.4756 128.531 77.4951 128.576 77.5059 cv
128.585 77.5078 128.592 77.5146 128.602 77.5166 cv
128.638 77.5234 128.676 77.5264 128.713 77.5244 cv
129.786 77.4854 130.883 77.4014 131.871 77.1865 cv
130.952 83.2197 124.67 101.474 120.91 109.737 cv
cp
108.461 70.3125 mo
108.464 69.4336 108.725 68.1396 109.959 66.9668 cv
110.104 66.8281 110.152 66.6172 110.083 66.4287 cv
109.533 64.9629 109.825 63.4248 110.824 62.5127 cv
111.835 61.5908 113.322 61.499 114.904 62.2598 cv
117.422 63.4736 121.611 67.9951 126.355 74.5684 cv
126.347 74.5615 126.338 74.5537 126.328 74.5459 cv
120.844 70.2422 116.881 67.1299 111.498 66.9746 cv
111.223 66.9658 110.992 67.1826 110.984 67.459 cv
110.977 67.7334 111.188 67.9688 111.469 67.9727 cv
112.367 68 113.219 68.1172 114.048 68.3086 cv
112.581 69.2578 110.962 70.8555 109.285 72.8477 cv
108.77 72.1563 108.459 71.2461 108.461 70.3125 cv
cp
124.436 65.8193 mo
124.926 66.1162 li
124.418 66.9385 123.871 67.8047 123.193 68.791 cv
120.654 65.6914 118.41 63.4111 116.623 62.1387 cv
119.049 62.5615 121.979 64.332 124.436 65.8193 cv
cp
126.018 66.25 mo
126.375 65.6689 126.727 65.0977 127.111 64.5029 cv
127.683 64.8281 128.209 65.1191 128.714 65.3955 cv
130.23 66.2295 131.553 66.9551 133.308 68.2432 cv
132.705 69.5615 130.613 72.9531 129.316 75.0547 cv
129.074 75.4482 128.855 75.8018 128.668 76.1084 cv
126.986 73.6875 125.37 71.5049 123.85 69.6016 cv
124.734 68.332 125.391 67.2705 126.018 66.25 cv
cp
133.4 70.2041 mo
133.909 69.3066 134.266 68.6113 134.391 68.2266 cv
134.457 68.0225 134.387 67.7998 134.215 67.6729 cv
132.247 66.1963 130.832 65.4189 129.195 64.5186 cv
128.578 64.1797 127.928 63.8223 127.201 63.4023 cv
126.973 63.2705 126.681 63.3369 126.535 63.5586 cv
126.145 64.1465 125.797 64.7051 125.451 65.2646 cv
124.954 64.9648 li
121.576 62.918 117.75 60.6045 114.748 61.1162 cv
113.012 60.4766 111.326 60.7021 110.15 61.7744 cv
108.92 62.8975 108.5 64.7129 109.041 66.4707 cv
106.879 68.7422 107.119 71.8477 108.623 73.6475 cv
102.255 81.5264 95.2529 94.5615 92.7559 99.3633 cv
92.6533 99.5625 92.6943 99.8057 92.8574 99.957 cv
97.3945 104.235 109.223 108.963 116.514 110.368 cv
118.585 110.768 120.29 110.898 121.358 110.675 cv
121.514 110.642 121.645 110.538 121.711 110.394 cv
125.568 102.003 132.223 82.6064 132.922 76.8857 cv
133.989 76.499 134.83 75.8779 135.205 74.8682 cv
135.975 72.7949 134.314 70.8389 133.4 70.2041 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
167.453 57.9746 mo
164.152 63.9629 159.075 72.4697 154.564 75.5303 cv
148.76 79.4775 141.406 79.2148 136.916 77.5098 cv
132.545 75.8555 119.092 68.7402 114.603 54.917 cv
111.501 55.6074 106.528 52.29 105.979 46.5039 cv
105.749 44.0625 106.393 42.1201 107.475 40.7314 cv
108.928 38.8799 111.156 37.9941 113.127 38.207 cv
116.594 38.5801 118.665 41.8066 118.331 46.9053 cv
121.823 45.8252 126.032 44.4609 129.527 40.8984 cv
129.529 40.8672 li
134.484 41.3135 140.422 43.3447 147.045 42.1719 cv
147.075 42.2285 li
145.125 43.3809 143.104 45.0918 141.615 47.3408 cv
145.573 47.0859 159.203 53.3203 168.904 46.4561 cv
168.948 46.5068 li
170.145 48.8213 170.408 51.418 170.002 53.2324 cv
169.387 54.3838 168.515 56.0459 167.453 57.9746 cv
cp
0 .167361 .439734 0 cmyk
f
175.054 40.582 mo
178.1 48.5029 172.038 56.1289 167.686 58.0938 cv
167.453 57.9746 li
168.515 56.0459 169.387 54.3838 170.002 53.2324 cv
170.408 51.418 170.145 48.8213 168.948 46.5068 cv
168.904 46.4561 li
159.203 53.3203 145.573 47.0859 141.615 47.3408 cv
143.104 45.0918 145.125 43.3809 147.075 42.2285 cv
147.045 42.1719 li
140.422 43.3447 134.484 41.3135 129.529 40.8672 cv
129.527 40.8984 li
126.032 44.4609 121.823 45.8252 118.331 46.9053 cv
118.665 41.8066 116.594 38.5801 113.127 38.207 cv
111.156 37.9941 108.928 38.8799 107.475 40.7314 cv
107.191 40.5039 li
105.469 38.1514 103.639 33.041 103.963 28.8398 cv
106.158 29.2197 108.583 28.6123 111.811 28.8857 cv
109.564 25.4033 108.348 19.6064 108.253 15.6289 cv
111.673 16.5254 116.57 14.7891 124.127 16.168 cv
121.169 13.2949 119.596 9.73633 119.396 5.49609 cv
122.688 6.69824 128.622 6.43848 134.59 9.35254 cv
132.994 7.23828 132.015 3.42969 132.89 .5 cv
135.506 2.86914 155.074 9.66113 165.129 19.0469 cv
173.859 27.1787 177.602 35.8164 175.054 40.582 cv
cp
.373144 .782101 .665248 .350225 cmyk
f
171.796 29.4775 mo
173.549 32.5811 174.057 35.1162 174.02 37.0322 cv
167.503 40.375 149.778 26.7549 140.379 21.3779 cv
132.556 16.8916 126.71 14.4121 122.49 14.3066 cv
121.801 13.4209 121.23 12.4531 120.775 11.4482 cv
135.317 8.62695 158.621 26.5713 165.66 29.001 cv
168.824 30.0938 170.725 30.0908 171.796 29.4775 cv
cp
.341833 .684718 .553277 .151247 cmyk
f
175.054 40.582 mo
175.816 39.1553 176.016 37.3945 175.688 35.3906 cv
175.34 33.2256 174.359 30.7842 172.809 28.2324 cv
171.013 25.2529 168.428 22.1152 165.129 19.0469 cv
155.074 9.66113 135.506 2.86914 132.89 .5 cv
132.85 .644531 132.813 .783203 132.783 .932617 cv
143.004 8.09766 157.162 11.9404 167.895 24.1045 cv
169.613 26.0537 170.878 27.8438 171.796 29.4775 cv
173.549 32.5811 174.057 35.1162 174.02 37.0322 cv
173.99 38.7012 173.559 39.9082 173.186 40.6396 cv
175.107 44.4014 175.035 50.7598 168.504 57.6689 cv
172.747 55.1904 177.916 48.0127 175.054 40.582 cv
cp
0 0 0 0 cmyk
f
111.249 43.1104 mo
109.092 43.6328 108.178 46.75 110.24 49.376 cv
111.828 51.4014 114.186 51.4297 114.742 48.5586 cv
115.441 44.9648 113.564 42.5479 111.249 43.1104 cv
cp
.0797436 .400244 .584497 0 cmyk
f
167.453 57.9746 mo
164.152 63.9629 159.075 72.4697 154.564 75.5303 cv
148.76 79.4775 141.406 79.2148 136.916 77.5098 cv
136.363 77.2988 135.664 77.0039 134.863 76.6123 cv
140.125 77.9268 146.424 78.1465 152.94 74.8789 cv
157.678 72.4893 162.6 64.2217 170.006 49.665 cv
170.248 50.9707 170.232 52.2217 170.002 53.2324 cv
169.387 54.3838 168.515 56.0459 167.453 57.9746 cv
cp
0 0 0 0 cmyk
f
141.615 47.3408 mo
145.573 47.0859 159.203 53.3203 168.904 46.4561 cv
168.948 46.5068 li
168.994 46.6025 169.041 46.6973 169.084 46.8027 cv
160.707 56.9365 145.035 49.8867 137.447 49.6123 cv
138.165 48.1133 139.328 46.4326 140.504 45.5713 cv
136.084 45.9688 130.578 43.3789 126.644 44.3506 cv
127.242 43.4404 127.705 42.7021 128.314 42.0264 cv
128.723 41.6758 129.129 41.3047 129.527 40.8984 cv
129.525 40.876 li
129.525 40.876 129.525 40.876 129.539 40.8711 cv
134.494 41.3174 140.422 43.3447 147.045 42.1719 cv
147.075 42.2285 li
145.125 43.3809 143.104 45.0918 141.615 47.3408 cv
cp
.0797436 .400244 .584497 0 cmyk
f
129.539 40.8711 mo
129.525 40.876 129.525 40.876 129.525 40.876 cv
129.529 40.8672 li
129.539 40.8711 li
cp
f
168.523 57.0586 mo
169.061 56.0674 169.544 55.1631 169.943 54.4141 cv
170.447 53.4707 li
170.468 53.4287 170.484 53.3857 170.494 53.3408 cv
170.945 51.3096 170.575 48.7617 169.544 46.6006 cv
169.984 46.2715 170.419 45.9258 170.842 45.541 cv
171.046 45.3555 171.061 45.0391 170.875 44.834 cv
170.687 44.6279 170.373 44.6152 170.168 44.8018 cv
163.034 51.2959 153.135 49.0938 146.584 47.6367 cv
144.969 47.2783 143.606 46.9756 142.557 46.8721 cv
144.964 43.708 148.621 41.5977 151.18 41.1064 cv
151.451 41.0537 151.629 40.792 151.576 40.5215 cv
151.523 40.249 151.262 40.0723 150.99 40.125 cv
149.84 40.3457 148.46 40.8789 147.051 41.6787 cv
147.018 41.6787 146.986 41.6699 146.953 41.6758 cv
142.382 42.4922 138.075 41.7344 134.275 41.0645 cv
131.908 40.6465 129.656 40.25 127.584 40.2725 cv
129.957 36.2744 135.51 32.8584 139.318 33.1963 cv
139.594 33.2207 139.837 33.0186 139.86 32.7441 cv
139.885 32.4688 139.684 32.2275 139.406 32.2002 cv
134.932 31.8027 128.551 35.8809 126.277 40.5918 cv
126.2 40.7529 126.214 40.9434 126.315 41.0908 cv
126.37 41.1709 126.447 41.2334 126.535 41.2695 cv
126.606 41.2988 126.686 41.3135 126.766 41.3076 cv
127.283 41.2676 127.822 41.2676 128.374 41.29 cv
125.279 44.0693 121.699 45.3311 118.863 46.2168 cv
118.979 41.335 116.838 38.0996 113.186 37.71 cv
111.245 37.501 109.199 38.252 107.715 39.7188 cv
107.625 39.8066 107.549 39.9053 107.464 39.998 cv
105.848 37.6621 104.315 33.1533 104.436 29.4033 cv
105.449 29.5107 106.511 29.4531 107.625 29.3916 cv
108.846 29.3252 110.23 29.249 111.77 29.3799 cv
111.959 29.3955 112.143 29.3018 112.24 29.1396 cv
112.339 28.9756 112.336 28.7695 112.232 28.6104 cv
110.184 25.4375 108.979 20.1367 108.779 16.2559 cv
110.207 16.4961 111.848 16.3945 113.709 16.2764 cv
116.44 16.1055 119.839 15.8916 124.037 16.6543 cv
124.253 16.6943 124.469 16.5879 124.57 16.3916 cv
124.671 16.1963 124.633 15.958 124.474 15.8047 cv
121.801 13.2031 120.277 9.97266 119.943 6.19434 cv
121.078 6.5166 122.426 6.72461 123.943 6.95898 cv
126.948 7.4248 130.683 8.00391 134.367 9.80176 cv
134.563 9.90137 134.824 9.84961 134.973 9.66992 cv
135.119 9.49316 135.124 9.23633 134.986 9.05176 cv
133.652 7.28125 132.697 4.04102 133.197 1.34863 cv
134.449 2.16016 136.814 3.26074 139.881 4.68848 cv
147.143 8.07031 158.118 13.1807 164.795 19.4092 cv
173.051 27.1113 177.092 35.7197 174.619 40.3428 cv
174.551 40.4707 174.541 40.6221 174.594 40.7568 cv
177.285 47.7744 172.459 54.5723 168.523 57.0586 cv
cp
169.061 53.9443 mo
168.264 55.4395 167.156 57.5166 165.857 59.7998 cv
165.815 59.875 165.185 60.9697 165.15 61.0283 cv
162.001 66.4482 157.923 72.6426 154.285 75.1172 cv
148.779 78.8623 141.684 78.7822 137.095 77.04 cv
131.26 74.8223 119.155 67.3252 115.074 54.7617 cv
114.995 54.5176 114.742 54.3721 114.49 54.4287 cv
113.252 54.7041 111.654 54.2461 110.217 53.1992 cv
108.101 51.6602 106.738 49.2012 106.479 46.4521 cv
106.25 44.0293 106.938 41.8906 108.418 40.4307 cv
109.691 39.1729 111.434 38.5264 113.078 38.7031 cv
116.324 39.0547 118.145 42.1807 117.833 46.8711 cv
117.823 47.0352 117.893 47.1953 118.021 47.2959 cv
118.149 47.3984 118.321 47.4307 118.479 47.3818 cv
121.695 46.3906 126.078 45.0273 129.73 41.3955 cv
131.121 41.5371 132.583 41.7813 134.103 42.0488 cv
137.443 42.6377 141.17 43.2881 145.169 42.918 cv
143.705 44.0156 142.302 45.3926 141.193 47.0654 cv
141.087 47.2246 141.082 47.4277 141.177 47.5928 cv
141.232 47.6875 141.317 47.7607 141.416 47.8027 cv
141.486 47.832 141.563 47.8457 141.643 47.8408 cv
142.609 47.7773 144.351 48.1641 146.365 48.6133 cv
152.13 49.8945 161.414 51.9385 168.705 47.1689 cv
169.739 49.415 169.828 51.6455 169.531 53.0605 cv
169.061 53.9443 li
cp
175.605 40.6094 mo
178.121 35.4775 174.086 26.708 165.477 18.6777 cv
158.684 12.3408 147.623 7.19043 140.303 3.78223 cv
136.8 2.15137 134.032 .863281 133.221 .129883 cv
133.096 .0126953 132.918 -.0273438 132.752 .0185547 cv
132.586 .0654297 132.456 .193359 132.407 .357422 cv
131.633 2.95996 132.237 6.04492 133.328 8.24219 cv
130.014 6.88672 126.771 6.38477 124.096 5.97168 cv
122.296 5.69336 120.741 5.45215 119.565 5.02344 cv
119.408 4.96484 119.232 4.99023 119.099 5.08887 cv
118.963 5.18848 118.887 5.34863 118.895 5.51563 cv
119.078 9.35254 120.375 12.6826 122.756 15.4375 cv
119.107 14.9355 116.11 15.125 113.646 15.2783 cv
111.497 15.4121 109.799 15.5195 108.383 15.1475 cv
108.23 15.1094 108.068 15.1426 107.945 15.2393 cv
107.822 15.3379 107.752 15.4863 107.756 15.6436 cv
107.84 19.2939 108.859 24.6426 110.896 28.3242 cv
109.676 28.2783 108.569 28.3389 107.57 28.3926 cv
106.254 28.4648 105.119 28.5273 104.051 28.3428 cv
103.912 28.3184 103.77 28.3535 103.658 28.4414 cv
103.548 28.5264 103.479 28.6553 103.467 28.7959 cv
103.144 33.0234 104.902 38.2178 106.79 40.7959 cv
106.798 40.8057 106.81 40.8076 106.817 40.8164 cv
105.753 42.3828 105.276 44.3643 105.483 46.5449 cv
105.77 49.5801 107.281 52.2998 109.629 54.0078 cv
111.133 55.1025 112.828 55.6348 114.259 55.4785 cv
119.167 69.916 133.193 76.4922 136.193 77.7549 cv
136.488 77.8789 136.677 77.9521 136.74 77.9766 cv
141.572 79.8086 149.045 79.8906 154.846 75.9453 cv
159.336 72.8916 164.372 64.5674 167.684 58.5879 cv
167.756 58.5898 167.827 58.5781 167.896 58.5459 cv
172.322 56.5479 178.619 48.875 175.605 40.6094 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
113.041 42.7461 mo
111.773 42.1328 110.402 42.4697 109.704 43.4795 cv
109.547 43.7061 109.604 44.0166 109.83 44.1738 cv
110.057 44.335 110.369 44.2764 110.526 44.0479 cv
110.945 43.4434 111.824 43.2725 112.626 43.6553 cv
113.819 44.2002 114.929 45.9414 114.131 49.0586 cv
114.068 49.3027 114.197 49.5488 114.422 49.6436 cv
114.443 49.6533 114.467 49.6611 114.492 49.667 cv
114.76 49.7363 115.031 49.5742 115.101 49.3066 cv
116.051 45.5918 114.585 43.4502 113.041 42.7461 cv
cp
f
107.719 39.7158 mo
107.626 39.8076 107.552 39.9063 107.459 39.998 cv
105.85 37.6602 104.318 33.1543 104.432 29.4043 cv
105.451 29.5078 106.514 29.4561 107.625 29.3926 cv
108.85 29.3213 110.233 29.2539 111.766 29.377 cv
111.965 29.3955 112.143 29.3066 112.244 29.1436 cv
112.336 28.9766 112.336 28.7695 112.23 28.6074 cv
110.207 25.4766 109.02 20.2783 108.789 16.418 cv
110.729 19.8496 113.956 23.3984 116.586 24.8311 cv
120.467 23.5781 123.104 23.9619 126.933 25.0723 cv
124.093 25.918 122.008 27.752 120.068 30.7334 cv
127.357 27.8545 134.424 29.9609 138.615 32.1689 cv
134.207 32.2773 128.414 36.1445 126.281 40.5947 cv
126.202 40.7568 126.21 40.9443 126.313 41.0859 cv
126.373 41.1758 126.447 41.2305 126.54 41.2686 cv
126.604 41.2959 126.686 41.3076 126.762 41.3066 cv
127.289 41.2686 127.822 41.2656 128.375 41.292 cv
125.275 44.0664 121.697 45.3271 118.859 46.2158 cv
118.984 41.333 116.84 38.0986 113.186 37.709 cv
111.244 37.501 109.201 38.2568 107.719 39.7158 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
147.381 67.0381 mo
148.511 66.4248 149.842 66.9893 149.224 67.8145 cv
148.605 68.6387 146.676 67.4209 147.381 67.0381 cv
cp
.0797436 .400244 .584497 0 cmyk
f
140.85 45.3301 mo
140.686 44.8027 140.123 44.5107 139.598 44.6729 cv
139.07 44.8379 138.775 45.3984 138.94 45.9258 cv
143.204 59.5996 li
133.529 56.5488 li
133.004 56.3848 132.441 56.6748 132.275 57.2021 cv
132.109 57.7285 132.4 58.291 132.928 58.457 cv
144.428 62.083 li
144.527 62.1143 144.628 62.1289 144.729 62.1289 cv
144.989 62.1289 145.244 62.0264 145.435 61.8369 cv
145.698 61.5742 145.794 61.1865 145.684 60.8311 cv
140.85 45.3301 li
cp
.57763 .759823 .688411 .808469 cmyk
f
163.806 58.8467 mo
163.545 58.3594 162.938 58.1768 162.452 58.4365 cv
152.043 64.0049 li
151.749 64.1621 151.553 64.457 151.52 64.7891 cv
151.487 65.1211 151.623 65.4482 151.881 65.6602 cv
156.602 69.5332 li
156.787 69.6855 157.012 69.7598 157.234 69.7598 cv
157.523 69.7598 157.811 69.6348 158.008 69.3945 cv
158.359 68.9668 158.297 68.3369 157.869 67.9863 cv
154.307 65.0625 li
163.396 60.2002 li
163.883 59.9395 164.066 59.334 163.806 58.8467 cv
cp
f
122.753 84.1963 mo
122.343 84.3857 121.883 84.5654 121.373 84.7256 cv
121.373 84.7363 li
119.173 85.4355 116.113 85.8359 113.213 85.7461 cv
112.383 85.7061 111.563 85.6357 110.773 85.5254 cv
110.453 80.2256 111.263 70.2363 115.572 68.9756 cv
120.363 67.5762 122.152 78.126 122.753 84.1963 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
122.343 95.2754 mo
124.033 95.9961 126.133 97.5957 129.713 100.556 cv
129.703 100.576 129.703 100.605 129.693 100.626 cv
129.383 101.726 127.412 105.065 125.732 106.626 cv
125.703 106.656 125.683 106.686 125.652 106.706 cv
121.912 105.186 117.543 101.886 115.992 100.525 cv
113.604 98.4258 113.313 89.0957 113.203 85.8955 cv
113.213 85.7461 li
116.113 85.8359 119.173 85.4355 121.373 84.7363 cv
121.433 84.916 li
121.503 87.3262 122.173 93.2656 122.343 95.2656 cv
122.343 95.2754 li
cp
.433509 .775906 .674159 .526574 cmyk
f
136.423 115.506 mo
135.033 115.236 128.463 112.966 125.783 106.676 cv
125.732 106.626 li
127.412 105.065 129.383 101.726 129.693 100.626 cv
132.373 98.5059 134.503 98.3154 137.482 98.6455 cv
140.482 98.9658 143.813 98.8457 143.873 99.876 cv
143.923 100.906 143.083 101.546 140.923 101.516 cv
138.763 101.476 138.143 102.616 138.053 103.586 cv
137.943 104.836 139.613 106.496 142.643 107.426 cv
145.613 108.336 144.193 110.256 143.283 110.336 cv
143.943 111.086 143.033 112.426 141.533 112.256 cv
141.593 112.906 141.063 113.406 140.033 113.446 cv
138.533 113.506 136.303 113.006 135.553 112.446 cv
136.553 113.946 138.533 114.086 138.423 115.006 cv
138.343 115.716 137.533 115.716 136.423 115.506 cv
cp
0 .167361 .439734 0 cmyk
f
121.433 84.916 mo
121.453 85.626 121.523 86.626 121.623 87.7461 cv
119.223 89.0654 116.003 89.8662 113.383 89.7363 cv
113.283 88.166 113.232 86.7959 113.203 85.8955 cv
113.213 85.7461 li
116.113 85.8359 119.173 85.4355 121.373 84.7363 cv
121.433 84.916 li
cp
.498634 .76672 .682032 .673518 cmyk
f
143.234 109.841 mo
143.047 109.858 142.885 109.979 142.814 110.155 cv
142.746 110.33 142.781 110.53 142.906 110.671 cv
143.055 110.839 143.002 111.037 142.931 111.174 cv
142.752 111.52 142.27 111.836 141.586 111.759 cv
141.438 111.743 141.285 111.794 141.178 111.9 cv
141.07 112.007 141.018 112.155 141.032 112.306 cv
141.045 112.435 141.014 112.54 140.936 112.63 cv
140.778 112.813 140.44 112.927 140.009 112.944 cv
138.525 113.012 136.449 112.492 135.85 112.043 cv
135.655 111.897 135.385 111.912 135.207 112.08 cv
135.029 112.247 134.999 112.518 135.135 112.721 cv
135.697 113.564 136.498 114.012 137.143 114.371 cv
137.48 114.56 137.943 114.817 137.929 114.949 cv
137.92 115.029 137.898 115.045 137.887 115.053 cv
137.814 115.106 137.535 115.212 136.521 115.015 cv
135.014 114.723 128.944 112.457 126.351 106.708 cv
127.912 105.106 129.672 102.226 130.111 100.934 cv
132.582 99.0273 134.532 98.8262 137.434 99.1396 cv
138.197 99.2227 138.984 99.2764 139.733 99.3281 cv
141.095 99.4219 143.152 99.5645 143.369 99.9043 cv
143.383 100.161 143.32 100.353 143.173 100.506 cv
142.938 100.75 142.357 101.048 140.929 101.014 cv
138.119 100.932 137.629 102.769 137.559 103.547 cv
137.414 105.175 139.446 106.968 142.5 107.905 cv
143.456 108.199 143.978 108.627 143.93 109.079 cv
143.89 109.469 143.48 109.818 143.234 109.841 cv
cp
113.721 86.2402 mo
113.844 86.2412 113.959 86.252 114.084 86.252 cv
116.543 86.252 118.994 85.9277 120.951 85.377 cv
121.039 87.1523 121.336 90.1445 121.58 92.5996 cv
121.655 93.3477 121.722 94.0166 121.773 94.5674 cv
120.652 94.2422 119.619 94.2783 118.408 94.5947 cv
118.141 94.6641 117.98 94.9375 118.051 95.2041 cv
118.12 95.4727 118.396 95.6338 118.661 95.5615 cv
121.388 94.8506 122.889 95.5723 129.137 100.723 cv
128.693 101.877 127.012 104.665 125.542 106.121 cv
121.969 104.591 117.815 101.463 116.322 100.148 cv
114.867 98.8701 113.994 94.1865 113.721 86.2402 cv
cp
115.709 69.4551 mo
115.951 69.3848 116.189 69.3486 116.417 69.3486 cv
119.109 69.3486 121.271 74.7744 122.221 83.8877 cv
120.266 84.7217 117.129 85.252 114.084 85.252 cv
113.09 85.252 112.139 85.1963 111.25 85.0869 cv
110.966 79.0811 112.135 70.501 115.709 69.4551 cv
cp
142.794 106.95 mo
140.031 106.102 138.47 104.598 138.555 103.635 cv
138.653 102.534 139.469 101.973 140.912 102.014 cv
142.359 102.033 143.342 101.771 143.893 101.2 cv
144.232 100.848 144.396 100.382 144.368 99.8506 cv
144.303 98.6406 142.414 98.5107 139.803 98.3311 cv
139.065 98.2803 138.293 98.2266 137.541 98.1455 cv
134.547 97.8213 132.371 98.0361 129.77 99.9482 cv
126.582 97.3213 124.521 95.7461 122.814 94.9629 cv
122.76 94.3496 122.675 93.4922 122.576 92.5 cv
122.333 90.0635 122.005 86.7656 121.938 85.0645 cv
122.307 84.9336 122.658 84.7959 122.971 84.6465 cv
123.16 84.5557 123.273 84.3555 123.252 84.1455 cv
122.534 76.9395 120.766 68.3486 116.417 68.3486 cv
116.095 68.3486 115.762 68.3975 115.428 68.4961 cv
110.451 69.9512 110.02 81.3047 110.273 85.5566 cv
110.288 85.7939 110.467 85.9883 110.701 86.0225 cv
111.34 86.1152 112.021 86.1699 112.719 86.207 cv
112.899 91.6514 113.416 98.9258 115.662 100.899 cv
116.914 102.002 121.404 105.521 125.461 107.171 cv
125.463 107.172 125.463 107.171 125.465 107.172 cv
128.198 113.168 134.352 115.613 136.33 115.997 cv
136.716 116.071 137.104 116.131 137.461 116.131 cv
137.852 116.131 138.205 116.06 138.479 115.858 cv
138.73 115.674 138.884 115.398 138.922 115.063 cv
138.988 114.481 138.629 114.116 138.166 113.813 cv
138.818 113.917 139.479 113.97 140.051 113.944 cv
140.777 113.914 141.344 113.686 141.691 113.285 cv
141.827 113.129 141.924 112.953 141.979 112.764 cv
142.875 112.698 143.533 112.185 143.818 111.634 cv
143.992 111.299 144.039 110.941 143.967 110.614 cv
144.443 110.331 144.859 109.806 144.925 109.183 cv
144.984 108.611 144.787 107.563 142.794 106.95 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
172.737 65.0332 mo
171.146 64.9551 170.216 64.582 170.092 64.4092 cv
170.18 64.0205 172.299 62.3516 173.929 61.9541 cv
174.195 61.8887 174.455 61.8623 174.701 61.874 cv
175.641 61.9199 176.205 62.5234 176.305 62.9375 cv
176.359 63.1592 176.328 63.5625 176.062 63.9736 cv
175.855 64.291 175.443 64.7119 174.648 64.9043 cv
174.16 65.0234 173.482 65.0693 172.737 65.0332 cv
cp
.626825 .102937 0 0 cmyk
f
172.945 74.3906 mo
172.559 74.3721 172.169 74.2441 171.785 74.0107 cv
170.354 73.1387 168.837 70.9063 168.915 70.4385 cv
168.916 70.4434 168.922 70.4473 168.936 70.4473 cv
169.006 70.4512 169.269 70.3916 169.779 70.416 cv
170.962 70.4736 172.535 70.9131 173.362 71.416 cv
174.087 71.8564 174.35 72.4023 174.442 72.7832 cv
174.552 73.2324 174.465 73.5996 174.349 73.791 cv
174.152 74.1133 173.607 74.4229 172.945 74.3906 cv
cp
f
165.337 80.3066 mo
164.85 80.2822 163.943 79.9023 163.633 78.6289 cv
163.236 76.998 163.743 74.3486 164.129 74.0732 cv
164.517 74.1602 166.186 76.2793 166.582 77.9082 cv
166.783 78.7324 166.584 79.3027 166.38 79.6377 cv
166.139 80.0332 165.818 80.2305 165.6 80.2852 cv
165.522 80.3037 165.432 80.3105 165.337 80.3066 cv
cp
f
132.056 70.5088 mo
135.658 69.4443 141.838 72.5928 142.396 77.2861 cv
142.456 77.5947 li
141.762 77.7646 140.835 77.7627 139.538 77.5654 cv
134.104 76.7441 131.971 73.5332 131.938 70.5078 cv
132.056 70.5088 li
cp
0 .919585 .825986 0 cmyk
f
149.838 69.1963 mo
148.561 69.8975 147.641 70.6377 146.941 71.374 cv
146.855 71.2871 li
142.083 71.3428 136 67.9033 135.914 64.8467 cv
135.869 64.7246 li
141.084 63.1455 142.556 70.8281 149.838 69.1963 cv
cp
0 0 0 0 cmyk
f
142.396 77.2861 mo
141.838 72.5928 135.658 69.4443 132.056 70.5088 cv
131.938 70.5078 li
131.902 68.1152 133.181 65.8486 135.184 64.9766 cv
135.424 64.876 135.649 64.7939 135.869 64.7246 cv
135.914 64.8467 li
136 67.9033 142.083 71.3428 146.855 71.2871 cv
146.941 71.374 li
144.326 74.1826 145.02 76.9756 142.456 77.5947 cv
142.396 77.2861 li
cp
.433509 .775906 .674159 .526574 cmyk
f
146.836 70.7852 mo
142.388 70.835 136.884 67.7725 136.451 65.1025 cv
138.395 64.7061 139.744 65.7637 141.398 67.0791 cv
143.088 68.4199 144.961 69.9072 147.801 69.9248 cv
147.436 70.21 147.125 70.4971 146.836 70.7852 cv
cp
144.378 74.7217 mo
143.934 75.8066 143.621 76.5449 142.84 76.9229 cv
142.49 74.8857 141.121 72.9453 139.021 71.5596 cv
136.916 70.1709 134.415 69.5615 132.467 69.9121 cv
132.629 67.9287 133.732 66.1543 135.385 65.4385 cv
135.419 65.4229 135.451 65.4111 135.484 65.3984 cv
136.139 68.5557 141.542 71.4512 145.975 71.7578 cv
145.163 72.8203 144.736 73.8535 144.378 74.7217 cv
cp
132.481 71.1953 mo
132.471 71.1064 132.475 71.0186 132.467 70.9316 cv
134.186 70.5449 136.501 71.0947 138.471 72.3955 cv
140.369 73.6465 141.594 75.3789 141.87 77.1729 cv
141.271 77.2383 140.534 77.2119 139.611 77.0713 cv
133.75 76.1826 132.672 72.667 132.481 71.1953 cv
cp
149.726 68.7061 mo
146.086 69.5254 144.02 67.8838 142.021 66.2939 cv
140.09 64.7627 138.104 63.1563 134.988 64.5195 cv
132.584 65.5625 131.112 68.4229 131.489 71.3232 cv
131.947 74.8545 134.93 77.373 139.462 78.0596 cv
141.021 78.2959 142.139 78.2627 142.985 77.9521 cv
142.985 77.9521 li
144.336 77.458 144.784 76.3672 145.305 75.1006 cv
145.979 73.4619 146.814 71.4238 150.076 69.6328 cv
150.295 69.5117 150.391 69.251 150.303 69.0166 cv
150.215 68.7832 149.969 68.6504 149.726 68.7061 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.1
%%For: (WINDOWS) ()
%%Title: (Boy_Hurt.eps)
%%CreationDate: 12/15/2014 11:36 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Blb4`[NPEP&c<17iX#:k(:r(u.f74R'FI*$ccAa]mX%*:j+[UZ+cFqdWSu9CpTK'Zc(u2[-rL77(K1lq6rd:MacgA`P@&^B
%\@T:742:]=EV7Y]AoTYS)40#-/dqG^:0r><`W&"!@=-J7BPsQsi0EOh13C'p=&g=%4nBpL@_?]+FaEdjH[5Mep!r=#k,,]#\@TEM
%C=`<k\X\)Sq&+Y7bl7))io97Tg#?I^q?u(Ws"/`,5/5aQYHC*+DJ*Q&;.]TYDZ9MBg]\/FB;tpcjlsb?g%Kd&Is^mu&+KH*rDL;%
%0<_jo\'So8.eTb9k5YE&^GfNEU3Vkk8IY'bW(`W-LF>_,pe\dDZe:]Fq8;pho:+M#c0b>Wja[48gSt3b\4<a3+#j*"4:*&1j\,Ag
%[bSUOgg/]U=(gqNpiu\6))h$bc+a(22)fWDR723RF@6IcMb@9JjWsu]]<(l95:<dZQLT%1s*fgN8GE6"c*A=<:?7/>o)PlfOueF"
%rc.hoj2L/(.ha#LF*Kg\q-Wc'Qo_hJAR#skA"mN-1/@n5AsR1#9&J_7LEbK&S8WoUCA,ENS$VLi?p]9iqtg4t0]P_=iCg2#\@^C"
%s8DNd(1>/l<BM5X>b,^bGcKm!ou.+_hhMdBY?1Y3\c-l$$g<"]EJKbJeZ?,Rq=a6oX3GS;lPj]FHLot5mH'C1s%XS_$+OGVah0)'
%&7l#a2*+r]3fE%@Rmh0,n&N&Jh#\tfHU-'KY0VS]^\mA.$KHN%8Jd7CJ%\$1Eu8.-Z]b?`J]pdU<U!/&$KJk6h-OjJj5`r+NGAi4
%m$lVtN$$s7I<^+L3CgS*cubGq9'k+1OT':2\_VXeZlmM!B)Xepr,ta!.tYMm`W'@=iNK9Ns/+2t1r]2G`F%(.In`l@FhO[,q)2aP
%11TgC0mK*@GaU;P[5M2gGYM2s2&6&:m8\k,<>AhpTC@?CXD.10VSQK+#(L>*]Onjs?e9('kk=Zf03GFR-LN^7R<ulujBqFXrB3m6
%G'q3NE*W0&?A@LgdIM38./Y0j_*R&[1j0$-hi-U4s7%$<$NJ/D(g,QM%LW66Z/Z(j`c9s9)5c0k]F9RMs5Q!&2:h"C;<JhF$qgd>
%rm/(Ek]m0`II8+?T/s/SV3gZn?A;t.s04#E800ek-52.Vn1kuYc8:0.DoONks7d$.aEW789BWPes2W<%N;,V5-DLqNQ[=8/<*Z*A
%.jjN1E>KMdGSpTZ@Del'!DqsiC]%^\>GmH6d6G8J#H0V>"/O[sjSUfo&c]np(tWbd$l?Vqs2SnoJ8i,0\ZR1^+$YB4?-uf;7e)L"
%cR?\%To2>%QD)Y'A(^C:)0jYVSJW@hG98KekB$7M!<:>odWo/tN7g>f$m9Fs9n/,EDY<TaE4`8Z\'>[iDB1F.lPa`08@LZsdZs95
%>@Ho2"8enPUtZn\[(G%'I53b*\&NDUJ+tXl17#[#iLemes(*'tGOPG7\*#bQ\Te$'$NBJMq6)@FHWf(#Qh"50r0)Kj^Vtf>]6F7,
%gQtR9Eprq8>4Hh2c@:uT'0;1qM#[)Enot&Pml8<4CU/?$bi*>C-:ON-Qc5+O7leAb0Qd[Z2?0*s$3R\`<C@L"/F*p%M%&:+/[C(5
%j(7O3:[f/&c"2eY8dbJR:[ej>3k*263\ChG;W',uKoJBTnc*'T%I*W[15/4EaM6]5\[IIQib.<OfOP!b_'`-50fB:pn0%-(gl@qV
%$^Xg$I`=kPB<8:HGZKJb6o]/7pl8'FkEAH;p`4p>K?+hoAP>A=VdXYn>IXll#n<X0:c:1k$(ngFa<sUaU(.9[\r7!r4$EpfkKu#;
%@fR<?(6A@l(Z'&*_[+XINZT4X:*p@!DM1e+F*i`d.h)'Dlup)B*P"bf:H2cW%>+_4=WE50nlQI"pg'IToE<)blk@43TZJ_^3MLd0
%Veu/iiF%W9K2(@<B7cX"6_3DJ^B'!!%:[GmTbTKj8H&#*Gmj?miu+Lc,d2f$6W2idLS"u?JinN&H3-",X"_hEeLLXe]Kc$g(dRb]
%Q4.oH=g.9a<Pn[VIAa@IQSc+@kD31uNgRit[q=UGk]Zqb1tt3[iN,E,5QTkuUGgfn#r6;J!5Guic<Z<<J>!Q86;].1>`ZBr"F1+U
%VuqcDb2]W2""i=J6=H9Ar2;;d?cM-&rXc25Emb#["4R%3FP_Kj6jXOb=[\F"-EQCp%%d/+qItHgVBdKW=<.-5"o=B,`PGok+&/lN
%kbWE3:t.6UR@gEc(27$sg?F]r%DC6>LG$tc9Sb1N^t]-LKUe0*ghsLd2VWeq59=Ek_No5W+'l8H(@9DH_cm_@R9_%)A)Ut7f\M#6
%L$^uM7-an8cC>YHJf0h,HONg+:Ee.WR7+XEOYC##M/i!rRM!Uk71!<n_J!gZjt0Ga1W,2:Jl(pSGnpdL.H&'/@0('Q55Q"ZN6XQU
%Rtq<"N05KfkYiWHJ?Jj2*Mtj=BV?-r3CtEA]>M+5/0NoU9_qVt&tCa7]#)kEIcRn0jrjd59:W<IlBm6#*+@@+E;JFV2@YO5aJ;ol
%@*+sqAYBOu*k;cS3bJ4lF<48p0SZc(*Dgskgq.55h4KG"Dh(D&1I`,#kqd05G&3Td[qPAp<<a(IbVVjY,=P:2A$4k(RQtJEo>7sE
%C$n5nR"9r`k8F_RL2\65JBHqI<>3a_Th&bu);>YBqsXJMfab@q)$SL"p@?%Nfd5ZeFOVu*1!L6p"m6KLlDU\TXB6q$q-_TdB^'d&
%U>,D?moHTLZGJ#EGF),#A2f@YTPI>tU1bV"1]oGM)RV%]>,LJK4nZ$.RD'`T(gQMs_D+cZ;0kU=_oG4oXFH@ch_!_11VHI!^"0-U
%O\D0!-\7a]*C5PHM=gt<e.1Vp4:oFF@T'i-I>II`m+<&NP67rM9gTM(RYip_<^$r8FGT0UV:a_0\4F]8$/quqO-ho6,Tq;T2M<64
%kLg-nKOR+Fhmc\-"%)31.D/\<:HVQd&LI.o)K?sbaJde.oqDZ5_jJ6SdF0+1g!*=gSKs.O&+I;io>]+l"54DG#u,&(985*nZ13Lt
%4CKME)C12c9V`:9;1jLBZ3FNm$?nSH&6)))eMrP:'OX0S(!.n7,6sY\'Is$t'p!,u?a=5?=-L_r$"&sr70T08RMARCh2Y:na^QCC
%Jst$t2OM@bZk,`!Pm5c(KCUc2"k)C)58E1'QT5;\-Ii!WSsjo-ML*e!4%]7>iIseG&;R/apae1Da>=Zl5'uIUZ"pDEZTs"V^[,/a
%dWlj+@<=fb"YLbr=&YT-Tt#;O1+U?nUh:sjdaS8oXa#iabhs4&'8%Y$G$Dq!M(^5`ZknZS,d;A&=Y44gVq4+7nGof*6.c6qBMb"J
%"]NhfYZQWJRda)7#&QErNGaNZ"lmJ]&^iai7oL4dc\_m7QLdP,8m+9t4j8rABC'H^FB8Il<K([G[&?!jJJ3mG1fC`"l<?`"4$4b^
%<uk5H49jIc-eha\MhgI"^CqP2E'(F`*9n5`*eu!K=$AAEZ<g`t+Bp-E9u*t=f,4W"V&<pHXV!sUB7kqMCd/TmYd@M1?"m8Q19&<O
%o?:nh\Q65E9WLCWi"=mi*T8i;e3geM,'/:AW+N>dMa!7UNC%#YoIlC/S4@Pk4[4>7INTDhSKeg"7_m3,,7oOJ$`5Y+*TJ928?eDb
%DFneS'(XNZ.\(STT('DN/VrZ4&P49>n3Lfq''4aBP%Y5H(5G75dYi6jUqR.E!I[M\liHX8=B;3*;nYMrbqN1n/33X?hJQ'.f&X\h
%N8mC1DK$d;;54m!b&LN,a8)0cPZ3ZS]NPto@`U@u<D%lb'W>C1dqe,nMTA-,oTi@BprsrP0\WTZs(5O%\[4h?RLLHV2SEM3@U3rP
%E#Imod=VHl0=hS#c9;fH%4@:aj62=J?c7V7C]$TO9_S;hC(gF((!h=0Scr2bOL@H9=HPbeE9Bke!:HV!SX0MNrt8qoY\Yb?OKg%u
%5o[Z"=tX\)k*uGY"I5rKa<#k8CSl5jC+Gf^+92IHWuM;p).EJqI$-q(#,n]UX?l$S^fFK_c0b`,JJKdLWVN=5;p[<oXG/ZWD%-"(
%&90hN%Jb?qWA)?s-S!B)'u$>/h$48ICN8!\D<!\c/$rt]<?a49rL#XacGtibRB#Wrm8Rbc,FJU'cRbQrNfu/IV&R?=iA.q.LpAUW
%('(LQkUs`=r)3aJJuRV<AD87/*,dKTq%Jp'"R1_T[`n&[?)`m<IC/3%,n(X13eBf<3Wl]VjM:K`RT74l"!kr']Rn=-!b5\1rX,Sm
%Y!X-91/RA9?13BFQ#Mj`Ttn[7(eNCYl5Sl0O\*^'86.$$S"IhT.u+pJ-lH35@SntE7l$EFKIFiV5&Z+c2tpfk+;U\)g3&O62*up4
%1\]/eOmfS\7X9A.^/r<4<Vq=(2+SdjLB9sV?m`6hG9&ES'^)$S6HN!IV?Y,Cd4)a]di8`^.M<(Ri^#r-5Kc0oO?K3>R6(hX-FGgt
%)55KTM9DD`+#.P+4R[09Od+Dg&Lj>SM.`5JY5g&HNg^ZK(JLXoFQ.RX]uV"8Q!.H_JJOo\\ubt]E(.cl\R>.Ye06`<PX-Z=$X#A#
%RSf8:a((t]-Lh*RrBS6Y$Ls6$:H,Hh#uLt:R>/\V7IH*uemc"PSoNBeP?`bgFqVn>G>XHt%$hPa;cr&[UQ$rq[Flh)iZ-bY!6f3]
%Us.)PZ,GXL&lgAIF-3p[)[hH16I[@6Bu/4M%!.,!,&Mq:aLr6I:-b#YVfVc-iRU7.d:DA@q'`PikkWt!m3o$bOO'KoZ=^kdoHgu2
%eqd1Y]`Imr*%BlQ?9A'0ELitbU-^9TJ8?#+=[Bk`-6QL(n%*%4T$&B7L'(]!p`O#XN3?L)Gq/MCB$SKjW.>ZoOesms@E,\6">h>%
%QPkWc"[YRp-BODX*!:N>:F%i5H878?$8ELO]S_FBJ7p'-j*rGH-[[+g'LHHs%ki*mnc6=,UP.ItUd5Pi+S*O/X=:MfP`2Q^s54Q)
%HR'_B@#G4]0g!C[@f(sgK&%rq/4CJS!.JkUST0)nNfi5(3V5bH%&l^XE(Fq0:PMp/F+mj6r*8d1d6M@t(-86:ZQ=(t/4ou$;ERtp
%A4Qt<*g/j@5fX;+ea_M$dQ7shZ_ERj!\BWeDuBd$Q5SPR';m?G@3Q)FT?k\W-EXNt9UT$;dK31T6*`:DT1*E"8=N\lr`QfGq1<)!
%S6Nn;f-P2M's+5e_ZkEWD6u7-KFCR[?5qF[9/U2LM`YZj>(s16;3tt_bY;4@`T=rP=q?8u9dBOc.0:$"[*6I7!8U6-\SGNEA_-QF
%Y=lWSm`!n5Zn&TB*%dEgc'5`p3+aL0'*h.KU*1h>J><@Q]Im71Yfu[gR^K+afS"2.72!\HK+oXT[M00JA7iOkDiJDljk)W-K_cp[
%nhSTspgJ\D)OdVPHNIgbRY^'.<lq<#A;h^7OZarIn,1ISBEjt"_2/OC)Y&,,S5FuC02\D8%W@>Fk%-Q4!5smaZ)%/^7_"M4FRAaZ
%UH4+#i#2up^d3RR4U>&DHI.CD-"58h20"Q8h"[0MKp"ir,-:t6?*cqml896n54Y\sZfR5m,`I@5f="Zt1rEJnGY7fZRJY?n6*ZkF
%6\;.$JW_=Cb.L&E5a"r\m<.2mJ/W1c9C?'>5.W@,W`;nF!1d,/IA:u&2EXj!0E<#I"?$PW[.:_c%i,6["k$G#-h7tVG=#P-2(e,o
%^h%h*>/V!oiq?3d%pBSae>mk&^!6es!P9V)bTfMb0l_m\NCZNKcf;#pK[nF'<^%@^CU#5^c&`6b%);'JL]jSgj9Yh-('X,cZXeCm
%22^H;djfsFT>%Wo5o*_C["icWUiiM>&B-91W1'N#(fgO*Ud\jZ*.jNt%S=e?0=&#_hT0FFCp?Ni?++G15l&)]&r"Sd10QA]Z\m1g
%OI"s]_S^P/MrO>@QA!)bBN`6-6$"]I$P9kqRlY^YkYXR(@q`*7QgB:)UXt1XE=j*r)%ZRo.\r4\D*OR9YbHhJ53pS9OjielJil%H
%$R[_R@7U[X%W12lWI[k4AAR7,+bJOS`DEYO(uHL\M+pq(%'ct^f[u"dA/F6e'rPI+CJqM`1USYpL>Z+!BNN=028n&rF>OFDSZi-X
%@hHIb"q]*FX[*=8mK9Ze"G,[I,BfVJXsY]3&\lRi3FK<+JWA!G)Pc1Jq<?$-+bK<gj<)CkUks.u<7(FepINq=*VN$jN/Bc(B9"gb
%4VBW^A4ltj_D5e0<K=pmfFW<WqH]IPg/on8/V[`Q)kI5-/So5R=a1PeG%`JgM#CXj=m>iGUUN_']&8.JUGD,_=!nijiD5gTO#*KF
%&Mc:X]PpkPCqVC%6)$g6S^Bo#4gcaC?')0m,,s4/<Uh:S=g\E9TLC)KbG)<]S8dJ7q`/CHd?+*W*J];'*Pk$ZB9=$T/$NpJ'nZ9h
%hRo%m'b?"Qm^Sfa@b'$J!^bR=05Nsl5q5sE0qdtnI:,\j\".W2Upnf&D4bM&6X(Dm\LiuB/nH8"-'7lb92@ocS;:bQ.V[\!]AP:d
%jeQcGf+JW1N`Taqj4!kOAu4=A/<eeI[`g'(kJb*U>AUm%!buW29eb:7kQN:j6i?IC])dhsG(,mu$>.NDpt8pqWc9.$H!>p0kgK^*
%22;Kj@&eIg5pQ$_ap-Ocb%o?Zf%V214G5Vt6N`?QA'H<a2H^Sab#$7kf":?J)d8nl5&Ntg]NCqb\,9X4$HCWkOsP<P.?L#2_)aYY
%j'U0>as,ZDA34]9ZhQm!IFTRg@Xp9eqrQH>^uX#2]MS3_jZ&Rbg7p%b7;PO%a%hPIBn!uWhtZ4Z[6UTe6dUN`HVXH)B:V-=LHnHF
%O_N"feZ@#5"J%_@WX0Ue;'f^?!WcK#Mm^E-"bH(T\M($"qp`Y`g=.#[</][J6FPfU4=:>)+f]"\_7"I7,#<uO,]&eSqa+b,c&^jL
%WEc4]U`Z!4PZ.V.>.7uUN!FluKEJendC`9O6qnKN]i#S0a,fhS[@nP1r89EjobkrTX:cdJD9.;L6oo)5-J54g<p18_Qi'c>LX5a8
%0WNBtZ,17<CB$Z3f84&U.Es9B#*G?A(CKim#hJOc:)eDnQJ7AY><)V6FQbJb`(Y$<,rSgZ0Oijub\D9'Au*,C`!&L9RcR4`Ue4aT
%2cUj35k]k5m8bd&&]W9H41rK&a46+](#/]?Q(ng(QLD'7q1n:QqI*NmNZ+L#2aZ(9nS(=BXgStp@^@8c=fKl9/]7!*KP@$F/?f_A
%-6]KD9XRLi2i)fPUcf`S%YdZJoVA<Ee"D,Rj^Jr==c]o9+Nk)%h`/1X<B;'J>3N<F'.n+X6?`aJh7:hX)Y;r5\2T@T[:!+MG$Z?K
%^o[EF=`$9`9jZC^=qlR:.iW&.KS_Pr]bkl0lSu=HW$i2e5o:GOa[.J(K!7OtHS?G.an+?p=Y=hoYV2Rg8(qcWB]mbbUp[_lBS3>@
%:eE>T<:=VK19;h-9MD0C%lA:lP*K8VO4l8*h^Imr2*G]<aFbbHOIt0ecc=1ElM7lP(jIP<`D)V3R8b`>=flc]H/6Rc*dAP6EuO0r
%esXFe;q;5C)I.rE(k]I;lu(pA94_EclTU4h#RD;8>3r;&N:ic4/@#2A?ssTY/Men8`bWoR(Y\3-K#+TPbIVZ]N4AF@^iD7CU.o?m
%[VK.oo$1"+*#g"P#L-kWfK!!BC`)?%/3+'$88/em(rc(t/t^5>4\/Zu/hQN\kYOA5?)hDJCD'4i.bBe?g25,IG)abOFXek#-:4,c
%R"8MtKoIK'HtJ<QBo\b\C[:1oSJiO%9Cdlnmo8XHXL"4`2mgH@0?=&fp;5h9k]U8sqNBs_L:opZ&/:)O[*cXm6Y+k>3[8.QMq4_R
%k1)+7JF3f+<9"WtL&o4g7!aLXN!;`7+jV>>`6Mj.'WCU+a2kOj[i9daA59kT5-R[3YpNNR*L[R#P66l+Ku,$t/-I_KVDF/9Kk>sF
%Ej6tgGEIcXk)7dO)<OPSO3Q2[9PT9LOuSNNpX`I_=$Om3mL0!eH@(#5nUqQD;8o#CYMb0,92*oYo&<mQXaKa=`?"mOfB]KLO+4ch
%GBNK9bPLSjm<83`p#ZskS:1/*^UL,MJ!td7(%0Q:]CXeEHuo;W:\Q]R^=Z\/BDa:8:1)uY*PRTFJ%9uOFoB-6^pU5dIr$d@5'd[m
%Ra'sIlp!D[+3-5;rPdo>F$69?Ctl/=rrKlN!*HCH=#[/4mIe^o!$'f_f<cU(ir\\I;30Gd^7Qu0[[1Vc[WVT'l9&..C%Cq8+5U=0
%SDS^u%JhsUo>oeEDQb_.]B!j9hqbr;rHNI-i;g\1aA6]:YAa6.K6`9d\F0Ifj5DoQCb@?cJ%jceI"-V!f7)'7p-AfTNl%MhJpQ;f
%_k6;5\p#.6EtH^ec7dN%(8?*bE`X>H@LC<3lh?m0=H-Cb]dmC#q&:I)4qW8>E]89(X4cL\^Z;TMS$R0D!+,a9h4+M&^7)1LIbo+2
%96a!7m4=^&Zc1V>MuPnb&^:c%,b\!;gEPQS>(TA,T8L"uo*R_$Bp%IU(FO3?\1YlZplNb7GdFo/il8XVc*Y$L[PlUSB%kg0S!loA
%ZXf@lQoPf6_\@cBSuB3=c'.cNJ'sA=:Y)]sm2#G2Z#nX$#WmRTheoVMB0TelaP">#s*VA2-&GaZ=,m#.$\ubk<2=6F+G_MkBEk*7
%]Z:?bbLFHJTik?*Gt];8&;I_&qAU^jp&5E3$tA,2/BUDhW#*XrWem1S8Xlg'S"]p0Tij3Fg>%rEdq,u38_bnaob&msXC]TJ.RFN_
%.U2!bZ[tBBMH.3eTg3*ai"F.B[K\<BJeD!RUngiVs,9-Q;KDRThG7J1g<@/YQ'0M;0A&<L"h-b49,":%:R9W\kTfe;6%,i6<7#8/
%"Vh+cVinm;Yb7j)6]"hU8?Q&qPdLsNK9/'<!>)41/g\?S5fj%1fb+C$'.>S#0L@Pr4rA449R[A"Dr'?S#2Da^!9Q:,4p1SX-SLnk
%Ag2+X4,3kXKu^t<MZq='%C9%e$7LYgA[=h:8>*b?s%f6:#YIcZh\3^*Y2jBoSrDN)C*TM)Z:-6[)YjmC6]8MRh8n-WpFVYr\5dn`
%4LneAs6p(4UZ#bj"3++:Z+>\9F^<CqX:'@9F[iR!?F\At?Ic&Z_eWC,WWlcE]o!.4D3\1*PuK3FU6?Bn>X^?'96`=e<@lLs<u+V+
%R?`&cQ:VsZEIeJ=!WZOCcp3/Od'=iKdNU:tJ:EQBB,X\f:rQ._)u$"9-8CX>!?kl\@@HI$)MB4%&+mq*b+id,'+SEK1CPCXeOKoN
%P:Y!g5h$NB.UX:t]1VCr9Ng?#dNhQ93/u"B[7m$bL<6EX1;U'm-HSN2bB-bc18$-j+ls3lJrj-?]:\"Z<@&+_TOS6g#TkZ25\H')
%$ID*6_"^Iti]eXk4-,Iqb*ZSE-?p,S$H+F:MMP:n(aQmK!Q`6I^W(g'%nigo!q=)[E2j.p+:Ql?:a-RhdUG0[&htpFJS%C@N,qf\
%!M[pb/;Q^peM^Z6YfIB4COn!&2P\d-#ZikO/-W=:6M9CC5o*mu;Q@fo#gs>$)_R?^LE0:uiY4pHquP3>Ko_-!GH=8F"@P5D8V[@_
%Q.u`Xr6ndp8s(lg+Sr;fb.pt"-Ye_S'u9KLe%3kFIF2e5d+U4Y=q\UR>TlArBjIMg&=i,V=htG1m#Q_)nJi='mtC!7R%k:+LbKh2
%"m;\5fatfN3<6,apf@HD")q$:nkk9+"<)j#+_W5)lNZjf(@24["o-(?iKZYFO>_hR!(?<b**F+;(<QnqKJXj2^`"7G-*\c9!cnnX
%jjAS)i[<R$ZO5`5,oJ*uIo3[?M\/7S^T7X^ZF;Ym@!k\H/-\^0:b'4FMsae0:l9g5q?jTs&!Un'U]X&i7Fl5%`h/jN1TLL!K\m-T
%$bRa^=\JjS&XNsR%4%AW>292-)o24pi&qE/&R:-A.BEfNl"gn]JJM6RQPQfC)PBtY&r@f!)rqF3gk\`C=D&q!%ceW<j<Uu/ORfM^
%aRFFf'JI]di7+u'%F@\BQ;pDDl[aX?Od:SaKqO?4?)',5,C4-5XX!eHOL`0\Dhp0Pnhj-,C]Ip0),b,^q4JmW?38A:qS"(E^BC!d
%q91&BTF"G\N&[irm((%hC>u`4E"W_c:0nWMjMXk-TM$/BBB22Zn0)1H`4Hi$UR!0iXU1\1iq"VgZ^c8EJJSBsX+BDa1]cAB">H&S
%3&qBKQ)"[*Q6GLe,[$lHRb7]&>h1DeX$!#ZSP,Qrb0K"hc<tC"YG@RjkcE1%nVk:(f_OO[>2#B:Ga;lpG^am\eokX\4"HTAaN4gX
%Ok@s5Z1G3H3KP+L/bD[DH%\8sS08Aj[.(4MXOe65%->>m\?W8t/R00nPsQ2GP825d,\s9O<tqB3/:_qqG-P/5IZ]G@@7\G;8BY[s
%n#].0LfN%,hIoI7W(>fZXM,;D)@)p+-/&Q<)JbdA?c-;$fTEJI'G:9M(V#PdNoIIBENY,0U0NSpE$74mUZ,ghK]OqO<`LJN&OnBE
%/mD^^,b('"2Ikt[A66S'"Q1>ZKXN'B(1jiVafp"g8WkX-OZ\`POJ&abDHT;1&9im;@>1\6QAU>2O_hWRfbR#'QHi)u3_N:-!t!T$
%Ai4[n,r6CG-_!OURfVA(,ahXXR2(8&\OZu\aTu[Fbo0l#7/QTe8T2h[0j[EpKnn3DQiI0f/SH`!i#$*)R-Fb!Vb]pfOl*8mO2Ir7
%Lds%M,LlcFa-dJ]phiKc,:UP$)s&C6J*&:"FPH>L1uKL5jW!W;-^R5eVmuKI-'uP5s&0GA-6i<\Dq%NUUW@-H"i7)`\1Kq!-Gg2[
%TSf@.'*7EB:rQ5(M6JaY:rQ5(M*MSp:rV6Id;!hqLP.8dSas2^KQM=eZ!$P@W?jp6("=ED+uKbTm)VelIgq[>PSFq?.]fc1a%MJH
%O=$6U;9>fQqId3r'u>XGP=1g?9K!i8N1<d2V@g+W?s.!%V&==Tl;!3Sfgo#HQ=ON7_Epli;KB:2?):d53>H#JK9=2n$@QTMNBD$N
%=c3j8`$LP_p)G8`@cKa,@WWsD9')B_J_QK8G<'rrZ;.f#H;DZ:V.C0I/(nkrpCq!Wcsj8TPWMOg=.i"VXhL\a_U@T(8h54d7@RV*
%V5Q;k!1EpFV4VKVh=)kKdLKWY.U1=Pcju57R"f^Zfhe8W9=-G,AQ"ZnEaPsQM4c&L@3K`IA_Rr&_H7/'7E/'''Z)UsY&]Cj/M-Ws
%A8buBG9M!ePC$7A$7V(56WQql\QJb/ccO91/f*YaIU-EnD;t(ujk%Yk]:</L9"$R\2C^H`[)he>9+IulZ:<(7Z:Z+4L"ic8Ia>U?
%at4mXJCIJ[<)\^6_k`kqYS&Il8YP5kYpZ!5oG$k7Ym.NdfN:4SD!e>68[</<2.BW]6q1I=A6Oo1&0t/h3g*"TNk,uTPU0.l5')iK
%@o)AhRFB9I,]0ig$+aUkZK@7E)9S@a))IL2%I(@9KLt_\g&<J+7HJ!<Eje3?8<qaQQ24N1Qk-StiOkP<<JkWkCA0M0*Mt+L=hB4I
%1!#'X35:%@%Uq07XK;_9-!l8$j^ZNbC@Wb%QK+7]Z_6.Y,CED"AnjI<M=Oa6EPMWT:H7mmH64'KZ"rksE+.U0LeiUqDLE1dap7"$
%8An.5>6E=-qC>TIib68O_1/k;0IjqE/gSC97N:kYjPjHAs$UTJU"JUN^*]a6dH2eMEh?\;'l^J7r,3D7`7!VScsg+`Rt#YWJ#g@/
%J/3?#&A.%b+fWG/]12p;92%MFG@IE+>U3@9J8:9AQR\,T,aqj21D_Qmg'L$e"M@\/E[;KR8?<#PPpCE$5F0lLYcs;Mb**?E?,HI2
%,ss0rMDpV[K9\.4L%T8^GB7I]N,/,I')\K>bGhdR'$,3$q+bQbpZE@m-TTVI9fk9:Fm%^_cXncc9I!lfKI@AZ)ko#ZO>.#)l?toi
%Yp<N2r!qq=`)Y#DL,b-ib9J<%9,N#VON+$GLB4TWocXdiL`W>BL\.#%QDjJ]`A/YuN\-MRq&")9<lBkmJn+*lg*UTth:CXM9#MKJ
%L_[3=Jr&t9Eh8N*&8QT.Gsi^]"??pn,q,H1(Gk+g/B(97Yh+tIZ:OnM.$:cqYnEZRBP[,;P.d"ER=nWkhFdKH(?3H;`3\-Y`.\h)
%,Q?"(qa45dWn6=2AT)9,hGa*Bi_%<D("@0AY+eTH5lPZi&<FP?Mqk=IOE$25>$>Ye]SHJ4@R"6<Wpjg1-l9#([MjL9KO!jL$aCq\
%F^/eD7P*S9'lSo%W>u$>@!mW)N)MU=#.9-]=Cq"pm,+l``1CjS/`333eAQ5m57kGN9`E2Yg:SqoD-0hJo8]qq_-+E$&+`mr?o9DD
%F9M9Gb!C&G=@ZJNL7k-mN$L40&(gqL(eI0(Jlo)c>[UC#4KJ5SNGc#IX5a%0lC#aJ<J"V?&N`r@(;#:.7^_V\Cm""h8!,Zd]Y&!;
%@LQ^-PS)\:XV*K`egCo@P(Y9Mq@k';,$(e4k(#!u85EJ%[:)[+a?6Y6DNV4=+=f*YraMNE\PS>5bYA63_%:0CH@V+i.7I5Z0<C!8
%,54aCfUHWs.c)t^6U%T[YH&+ZY<\"@5O+OX5?tDLNdZ6#@b8pbj;4m%9&OW@(>ZGC?Y.iiaedT*8ee;?$lOGIJ1Z8D:UL.Vr4eha
%fWt]5Xl`Ygs+;IZ<[PNb8cUM*SF\CehM$p$AI1lG"F^O3X3gPh`)a>TI1!(7OcB[r:#eE:do4!_l[#SuZ+d+S?QtUSTmqVM5G5f#
%r.es9/O+mQJZK0XYCUg^eHT.uj>`Wtr2$J0Z<jJu+mXl_*O:-m)PZMQ)BH\@,&h:S@*f_peeV7m</iV@hn<]_bGas4MCXk7((tEF
%b@RrDbSlYg.an"65[4T6Mh);\nR<IY_GOb^+nga.!Pjn*S%tq+"9K[0B+t&^MZChS]f(F;[g5MU:raoegEI2B31h?:';l8h>7-T.
%2e53?4rGsPLdL*CnMau,`:^3L7E#(j_LL,_THHp2,lq>bbYqj10P)aAma=\-D/`Q/_-O^leTnYOYm67L]%@fWbcA*D?5J#ZiY+!C
%`!1[mBp+_a1rNd;'#?&dEh%5l3!qBRPCkbZ5W#FXq<3qD!,5+B5"5f"-$CM%.:IG""GX#]'`_5>'c7O-M6g>51^Z[s-tM-t.\)jD
%l9f0U>:%m'a%Ae%ImFG`R6T,jPhb4W=d9eJ)d-fu9#Mtg`O5>)E0hPj/'\Q(8k"^R_h#"=MG$560>tf4LAn@'*j&*55C%LH`?g$!
%Pd[-596a1WS^aD6].67'Sj#N%B<!,!8)*guX4sU'fY)j&'R#?"f5pWV8mFt"-9M+XiNGpXK/,/<c\OR,mXJiuW=<B4a=Rs%^o">R
%H*)l*]@Tr4?/\5QHq@';IBdP1YDPko9o;DS_[6*LX:W0#%[@2I7Z'f)e:Ia7-.kJ:K-dKT*([[a0t8Lo;3Di^gTXifXMo7W$04_d
%&R?%B5aA@Fn3]PW,I([c*,&!UPl^YN'9EtT2Uloh.2?Oh)[]9_,Tr>7(J?Gq8ZY-L1G@BYfd[q5_iX5=21u`U":5qs>##ja(kSc3
%9'.^;Y)Nn1b_`;CQ!R?ZAkb(R&QRrnAIVAZ$,SF5Zlo^Lfchfd)\]o%Ck-+mCbd3U1dj!Z:*P*c@sMS%1c\AG)<)"P',1&>JmcjU
%;EYbB&@cR(Lr`mppdO>4+L&"k?lIX99b$1,D88PHOPODG8jC,^#su%):]cK4:CsPfJeA(@T-RCZ"XUsQI$.;X(R+ppq]qk=/l2r,
%fZ6l@0;u0P6//B!orDDj!]Huj&`/0e%uLZ#M*JrU$OK6/9,3[P.#V,?>Tp#o1+92(#qYX!rB2,ArIHB_rmIHM6-3?M"Jp'kK]B@<
%Wh>.Qg'a]]g"B6A=!=`N/SpejAYIW+@+gecD2c$Im:`lig.1N<#L@/[m#pt1cl1LYg4Toj[+[Msdte$%")?MJa?d4C9I(OLTsYeD
%bD&Gq6P#8.i'tH7RMd&&@3^c9_6u(LR0.?Wn7[WQES.AthC_>??:qHbMM*]A74&_MO:mW80O,(*/ZiH%@Dd)Oei_%t$iid(bZ."V
%*De'@\Jh-!e>Et-1"*!Z`oKPUGR;,[4m.1,EG<4ajI).A60E\n\o/_FD(=ht)rDpjBAO4jA'A0$7($+:bJJ-DdqrW`3.bX[rT_D-
%:t8)#ISekh<VBGCD_([ck1:=<iM;UgDP=(Ao2M>E@RQcJ8A\T86pd%VWphRUX[I^nBkpZpWr!.nQ6@KBRWM3OMDd;bAn=NU^a2R'
%%7JlM[.;bC_P*R2r?`h)""=LI)\h/>-@(5TN^i0=VR]alU\*UX`ZkEC#B6PNDGIn7O@6<2p-*1mM8T1:Ulp(9(67'MFoRd%P\+"%
%HPu9&of]/"!\IFTV7a8OI>.BJ(>dojTNI97'?6"Ui<;"5KQ3bX-@q+>@GE7<BWsmKLhI,5J+!O)jDODh5<ZLT9^Y7g7[ltVljaA!
%5P*/QMH]pLb>sj1,-b^i7$b6);G\>Na8Uunko2d+M,>id*rk>pa.H$K-SNCP;N&Vq*e0%lD6p50cDdAHTm#mH>%$VK]BcH@=T$V(
%c.$<.QD&RcRJa`jR8oBt*K7=kd0;\h#1Y!hBZB$h7m(E8?\ufcAT'T%:JH</Q$CD,_<IEd=mR)?ggQh"XhJbjO^,P'2.LPPk#k]B
%Nab;_ls6V[hUr&V&KHAl9-Z=piJE0:7.o=FFDLl%!j?:Y(0p37a?k7YPM4]50o)/N./d\0JZ8+E,&c(",4ZPeqC'W#%?M96(^m+_
%aZ*F\7hg[B,t/J.@2dg:0)"^rPl:h(!'";;U,@<VeKNE?UtmO_)$@7e5rA>$qq.-EB[G`MX4t`M]s+&.JJR(NcC_KJISsk@YT!af
%qG.I#*-S)bJFf[l<Xu`=5c3:E1UjeM%Q<ZHDbs%SThTIP8oCm",W@,g31qTX80r4$P)qoaYgmo]3`i:sP';(Q+C8fXmGEqhat3'F
%Kj1fsEI2Cl!G&fY-1r:VJa9[ERgM+0nD[crE_\&S(o:WKB<<F=-C%E.1),mZ?J8kO0.<fuUr&:P9<>m/,VlbcLn]g0[7PIBB5O0a
%g7tpYes_F1m$%'Bc>G$K.tuQIVWs"H(g=8?pjne60O/9#$:6^jCC8%:BkCB/_-+hSDfjGVi!#ZG9#cgK!]:<?i(NPT8I!,W!q"<N
%he6rIn2=>NI["^^T*;USh?X_i3kG<T@@miTV9n4>?]0E;o;MG5Q-c:(;CJX88MN-=[I$8"iJpZ+?3a6p>.B15OZbj1_PB1oZ'$f[
%Pe?HU?Q'8N>hEHG_GV1XE$SD9.2-Hj-RPK2Of,<nA.pF=U^Yl">/JB:$4Sbt<cFV2Cj9DU.t\Hq;jbp`!u,fY5n]u\&Cqd-)CgSA
%0.:q@+mQ13c68)a[$VN/0+$*#UAbP;G7J%lN-@lZ,U&.%;4rlP?c*i5S&=)'kNs^PkHHUqrB^n<=4DIYUnn8bat**JXdj#rPHT5F
%.h/4Phj//#ab\L`2NUWJONRFDGfr`)[!Lse,k?gAm.+l.gj1MR?9hJ-/Pr9V?'9&f6!tULngK?Hf56QOLgQA\<'1dca5\:!X\q$C
%k]SEmBZ&<;qganK-o1;g9#>)iKQS_@=UnA?+[7:lRZ!!ZOQm_t^>q?YHku1;65?&9^Rt]nCC+5,,XL]S=GgJ?$25:XL8nM?.<9mq
%G&5()1U_l5:Gn:t@B^15i(8Q4E7="!#0W+cmn&.CLmL>?YRGd[7L%%\7\*_7X8LE>.MP/T4VE=TJlY_3cNnq>mD%"H&o,s4$1(PC
%9A9O^qIc7i[!b$-hZm>d>CN9Sf;JsIk]$sC;8e3^7H^c[I9F/qb(OY6c[SD*gtg(])GLlTNDM5sW3kN6`l8@^2C,LA0@V'q"FRKo
%0;O/N6a8rr1>!Np"LO8#Kd_@K.pcm\hAJOiW3f,(N(ke@iIhh?R%\o@[UFk(=D/@B<Ap.6_[A?;0I9,_+@@)[W%"YFRcLU!'iE\H
%6cO2dB>n+g-!sdp>Zbc%iKa0b'lt'V'H;/N=._]n/[IOIFOu-4jsm1rShJn'VVBErrDWZcA5?m$=\3/uQmLVgFLP%/nTLsgn,06#
%l[H7/=b&7/DpOk%U<FGmDl6bf!i/u/Cj2+\:NiG219-51Z#5n]PYVc"Orun@4A>A:jUqfYclkBqb"J]-)2YdJZ-S.+_No?uI8'O/
%OS'J1*`h"]N4doE+_J8oG<ENIfb'jt/%*7'HY(-5EtZg\F7Ab83RM+9pf(F/5sD1/Y'@]+oMKfol9;#tmVm9[)oKmVIMeA_>L=#'
%`kb[-Df")[B=Zd5I"eM!/L-1G04ej#E%_kOa4Eq>;iQ]FLU!\Q*-OLZei[[TRn53@f`4$r>"(G/%(XWEiGqai,qcKVm+b7G3u+lS
%'SP,.>L"%BfV(jqOEDmNS]l*X5oa0c$tTiPF*Zk>EYg'c:Q`!+@0X[cAcM@Cb.3IOR+6+(@7ge/,U*i^7]\%@MoIDqj>;dbk)`f(
%UQG*=q14o+an.n3C-\HAWp46rC@T17?P$86JOLJ\'P-eJH`HL9b&*6&L)HtA`gLLL)h]o8bA/-Zo#a!R%b/+u,dGW4Bfc-Z`6Y9O
%/h`ET\"bCnGsK!K_`V8]>tq.)&eHoW#iAJa\f^jt+9'Y0!9/]_:o(c4H&4,S;_NNp0+;AF&-V-g2]0KY7MlQ^)\*JbKYSR@84[Yq
%875W-5p91@Z%qMn#n<h$jXJq7d3,=TIb;Nk$X7"R*Xa"_""A*6!r9lA0P+!&VG+<8aZ6Bn3mhoh5[dQ5.?a&"$d.\r1(B2p;da=I
%)Riu>:K1J&n7`a/+m*__H<SK=J_]#-Z*NM0<`(H(o[M@41MCD8m+YQ9$Pi5`?`&u2[pM!m&`0OcSk&$BesW,E6YOm47Sa^.TYUUN
%l3p*tIU]Z2#epK3RR>Jk3joVlFh4AX#I0rh@iBi??e"E?:b6FgSDhQ@_8$BaF3m/W%<_/m*Gbct)tIBh*].Gg:"P*H[!o#-(]I7`
%jBS.>X7=%L1_:k:C5raXJ9f>O`*9f77+5uVM%Ec<kR!6YT?[.)L09Ji0Umj!"dmP,=GpZ?bZ5ERPbG$edLST^[`PB(KOTTB6!+@8
%#SgL=GtW6G?6%u12gDj1I\qS\;b"a-Wf))6kJ>2#LNVrLifjG>h0Qc!1]V84/M*3iBS3M.=,-efc:4fL;VgV2H[Yl9,kJ8fh6oTc
%!'Ol@rPX(S'IEDpKC4a2Jbu(K_gi//g#g`#JHGQbOb$Sd`4t&ggsKN#PM`tII7M',39**]JeJTp*@LF(1r)I7]_k$`)+\fM\GuUo
%&!1>(YZY4:-icN&17_E2mT(,<OBDrXCj/bN8X\ohB(sbX*5ea0"c[t0-D1binM5;*g$VoGfbbYO!&j[J$,7bmOk?S!#q.#h4Gst@
%'A.oCFJYQ\bZVu6X'&t#/R31jQ"</_IEEn6)'dg0VcGl"O)N\b>G%*b>PWJJp.!<^W&Yf`?5=Tf$<aEoZV.-ZOXCSh9A,sA8meH*
%PO`&,U9f-aeh4@r**b#!Pr5!N8*j)5=eg!U=);ju)/_feLhb)!K:&7X4=)hR%,FP>:bMQG&4?@h.i8PT;l2S#FKqW\o0f=`.Wun+
%lrHkY>Era*cjW"Hc"=5B4Gb\cKk&C##`Z$]PXgih`_jI.0\<erg$-\<=HTq9B65]8SJuT!CIG00Ek:*URu%Tn+:%?FpMSm."3i9X
%gCTiPEqM#:0UnR@kG?,>XfNXU,]?3uY$$K7B+.oTF:ktJNa5OX)4N,Z[:[NVAB<liQk]oKS0rtYRtS_Kd`W84AF+)PCZcs48<+5n
%*t#<BF6mEggP/QJoE>*+$mBe`VE/U2%L<$pNh-XhQ-UtN<X0J8)'"lN.*lS!hr3a:=B[(_4&^5jFqg:X5ol+_Dt\oBaPO/,c:N.S
%P1D3;Ft\2pe\B#W%>E?L4a6"\Z`)bee8Z<sE\H`4P-(&YYq,K-NI'DM?,r)=NQ@sMk;qmN*Y#W?L)`b_/u6:>Uom!ZKpo;:loAj7
%G:_B?S"",-1MpqTD9]GeRC4qFAjnmB;4PsiF:P*/nW$(cg33;Y[`>eD8$fLg!sMGlXIEO[HFb*c:kNDnAPlEkZ\Zf[PR1_%I&Qfs
%352eja*EsRkK/.hmJLM)^u,qU+(Vq;=6S=Y<>8L=a&&$=E&$)IXLc8qrZ`?WPjqiHUkl<P*l$M0<4GfA*D-(&\04R1;%G1eYQF;V
%@1Tb;l64#'"4Du=JFa:R9m+BcE)JqVN:=lHVh830k9-pQPPD(W(fCrBl3.!SR[hC</L^Gr/PkSh`A5`tZa>h<PIU+5o9`Q"!KUbt
%!0)IZ4J\7?_OP]hK1Pj7Qm5<h<=cE]R[;!Wp/%4=*p+c)'m)7q(PZVX**%Om*s(.[N_;d*-ne5>.*P+XfnMcgn58KX)LDUa")e<6
%iN\b&XZRXcAr\Y"'1#,,HO?iHTIl8XYg"q`SrRWqgO6(::sD;uIF8;7/O&ZWg$d6?J!p68?T/dGZE4(K(.5ucTWD(p]8+3nN,pM`
%fbu6>g8t0MCh,>Xa;WeQ;^,UMU,C\WV?,i7$>QTf)!@`_.q4@A8+i=7"M/(_eomZW.Q^;Y&It>(F`"8[WV&47;.L%E@$"LSE%A'*
%NAfQ[bAlneq]Ngj;3Bi_4%ZMDanI*hrCC`c$p@.-e4[i+7!kR`FKQ*98..(qc9KOLI?7+QH]UnJF-'&l5SnX?M]V0C%X.B&GHn./
%gKR_TnnlCaV.8_/Af[581lM2C`VM=bRP*.qUY'rJYlph@-qZ+3qA#uG*3J*h(s7^M3q\ND5R_k`ObTIkNi[p;SWN$YL1`4.Vih=T
%NHL["]-`6<+k:X&@8LjF<ars=32iXW!@>-Z+%oRKaeT`8U79l4fr+o2H7;B*f'FU[0!2jX,40e]\mK"t;7sEFAM)<C\h>SA40o@7
%"P9qlARUcEY@O!N=qYdEHF,5l!,2+3/uu/EdNSJoOnFY53<_]ljfN4:Jh%II:&@araeRujem%_(U0b?sGC-H+pJaM,U+4msA8'!s
%mr40NcDKEE(9EG[jFq_s[G>)]UW[k(=_F)1J&/_.J5/(j<u1.f>Zk^hU9dY$DjR8qPbhpRR__bT;lr3G?<UKu=LMk/,\N[$g%GrY
%oCL$\USH"bpi=JHiaU,;Pe"t0aa#>gR-A))fr1=mD$FhVMQDYUD55E;r`is[2%Eo%d;'\`?J2i1/_#&LLDm/[QbL4N\Cd@-6b(df
%`\83'LlL!E)B<%#K'[`E\!sjdO3[Rdp="ipQ/#[E!Te0W<;5TqP2d<QdU'.44*M?rQ/,pa"2(FK1_2Ms<>pdb+a.H3`R)IuD\#5T
%6[]sA_c"?M^r6jdgXmEkGpYk:os*)c>eicMJ%Kr1pYp:m"K'EC,Rp589I6+'nJl)8FI#oTr#/pthKbZ,lbJ`fV1AB@P)Sf/70Dau
%N4#VuNT2Do2"ZRZq*9f5n!BB1&)4GDcVcWY;6]JfKnlNT?iM'^RVKf[HI84hmE^YR/mj9h40;Ibp<*BlF8O+n5a%^8MH1jR%Ei]n
%XD46q8(70ngXX`Gn9CFo4K=s)gkqXgWr6A+.kdnNo:2+(\_G!bZQt>jA#H.FH_u/3#:%QN6hr@X0`#VI*CS-"6X`oef].bS"LY,E
%k+cD-<HjWB2X*_'+oIN"_r`Ufa>)IH8t)Rc[+8W#5N(8W.HA>h*.4jhfI=?UN;^MaK?.:GG"GU$_TU!O8.(J%,9Jp.]Nfi-ZlF%'
%]TF-$POW1,h+?pFFpm2%E--Ul1d!n1eN]?/CTHCF6L*p@EfaL6?c*,2]4=+.:(Do_9BmrbPG6Dm-Wo9h6[R0OCr28Tj[$4`+g\e-
%m*6Z!L=t"5SETD)dBh!n4["WiN9lEJl:)H[`=gj;,)ZEk'8_CI7/bM$X]Qc?g=k_%opg`tj]1NjjlV`Npo/"Snu_Rs:NL5o*(S=k
%_.].aQGaQJGLc*FFP.^?kN'#"()*=\5h)NkN-nVkG&Eru;9jp2&rh6O]W-JrUP5]lF!NP?NsS%N'lefDBi0s(/1sW7++P!Em)@s'
%aPXf<a9nDq\I"KKikYKi"HA72%/=th5-9]t"j8PKW1?mWj".RUKmI9oa#3I%JRq)U!Ke[K+q%>Z+QV4H'']]a4/8'&Qe9sKoLegQ
%MQ)IWrV?Se>9V=`FSMP4C=+R`dj],PL34%fV5\NFCRD3E5dQWHAj)?:,GmGb=jJ3pq<8VB[>1AXJ^5<O`3bnofq[[cT)97P6M&#Q
%"X;_ch6V[d.^u&f35r_k7,?Zg*H%\@Co+QPX&#&,MNaKm@HWK1=nto.e6,?]OF"lI]8]3tCI5tJ77lmX>$s?ngX7i:g"<bd%9\mb
%;H1.m3tg?+_CJ9_-jS+)#[.kE8E:=UOZVP]Z[3Cn'OId6\6iZUrK[Jm$^fcnC^tqG..GXK$qgqN/8Z_n;"W.P8X\Bug;o!oab<N[
%TQqK>Tp#s1g7VYK/fJ6+i%OKKXd&D6058lNk*acDpUHL<co/"^[Z]4+mlmMjs.&2bTHiGUs6PnhcPEl"/#$:TFg-"ScL2#TX(8=%
%kM&eoi+IQ3cN3^&h(?=WkHAQ%Gf@_Dat*Hu@>f,ZFt'qaH,X,(IY&"nq1L+XCN:mI;/5^LZLgcLQ%dHqrGT>Go@(#4pMWu`Q2\nY
%pA;<J!ic+YD#=1CN[-j7k\U,Z[Ls"U.1<FZ^n=Qk?n2D=*q5j'.)c&gNX+F@():=gJ36FCB`\uNDTajVa,p1\mP=;Pp\Y1*IJDXp
%>`](shFPqM9j5Z03VO.sTGTn9AB9P_ph6o\Xnq-'W,MK(mCud'mBD4om$O5%M/Yg/0^fX*=n$JK"8[Iqo_>c"J,E.3O5Dt\S?(:&
%MlT)])qoJtD`g\_6usLj?(qpoN0%GCS]te>.M>>Uj)74fG[&NmRg$:74_t@[#W?qmq43OB"JimI$YLaUZRl!qc$\+BOR7h^#"4Tp
%3>[Os8!LC9ahDk7A7%i@2^MLrZu4^CZm3M+;cLkej`[g!3,I,JlR,CWK7mqWL$sd2KK-9!__M'o$ffm_+G55Fg>3PVZBqqR]n?fk
%`F;@BYALe#T0'm0U3>CHQ,P"5k^Z'%@-\;l(30oOapOkKS17^ao+lLRU>QfA,M;CcYpW:Y!L=T8*6T,#eK2_%+\a+2bHO)7-f!sh
%8hk^^&PrqP#tHq%N6qJ5]*+.#Ob<?KZn\:,DKH&B[`IE&#i:OSiV(aKdMFEe"F.`s7^FH:VW^Gdk&jbWGG<dH^"i$E#<S728o#pu
%MB?+4aZVb+\Dgp**AaC6'B2ch=L713LnCE\^*?DLK2Mc.7qVWV`Tu37m;9dbBms?.8.D1pGT3kIE2o.aOL;K"k]uE.3l@D'(@<o9
%)bQSMp'O\pd(,ht(,rT*Mbbntc7?=bOd;6*.\YWsh-ES91*`,a?\3i(H@aJ;'dJo.;AQ>=mN(/$^RnDQ&#Fo+fH(l$3N,Hf<NUm0
%A%+CE_MJRH-CgHB@OFq;:qK:LSca@alcjO*"F]GF`SDIiYHUS#e*_;H]uf>QNOQs\Cd5Z2iAWu)@F#/mG,Y-u3Kq<D.I<884t5i^
%_EKF8PJTL4m$#:M$0%.h2W;T-',+.-94>l9&)+#H<*rN$ARP[co`taR/ss,P#;UhZA^f)<,_:g&XeHq@@$iQCG9F<A"k$f]m=^%Q
%4%[fe7T.H,ged?6r3.#)aj6t0J31+7NpalM5"q+;5oR\TU?F!iQ$"QR;@Yp=lj.T`dN270EQ3qi?9#%UEFN"lUErK1$h&I\Q^C"b
%,lBP'Z)*e/oThbGnK_-oGGRj@VDX!oaN0hDYs"<M>j@?i;Y2hb:-fL'pQt]f*o5'*qY*d>>^<[A-"8r]d@peQ)R_he&;KNF"RP.l
%$ThsK=2M"ERNMpW3`I8q$Z-lf=C;YQ;!Lm#:(2>AHY*e&YfAM$S7p5km:e.)I*U>_SDN:J+c?F:7@Er85<V,28Q9:@'8h?hL(k(&
%3"bR:<,CdQ!?7UC]!OO,2(4j/JLMPDL&qnGKV*;@ho*q('[U<I>E$OY_*hsYMNOd0o<Db\1AJ5m-:AN;=?I!>4=QsWD(s-<IE.mh
%F=&:(Rc(+XU-*\QM#eSfkZF5Wk.RF?"uo5_U7gW_3k0c%X*Wf);]+G]%hkU0'o$,Aa.5%"V4%eB749t2jTA9kHfPK"'j$hc3e1U`
%nm[Et#*>o<pJjaF=Ls,]P1JUNT3i93Cb9sVMJhjF\mqcZIFn`E](=$@XF2h)J.n!"@dT(^"Zl10.+\C82MRu/]b:\L6f%2kKAbh0
%c@asA4bJ8[($D@I)a;1\oSSH"hG*7A>sg"*<ciM&6RUco-_-QC@`!s.-V!&_QpLBGIb\TX8(FLuJ`Z$FG]+8?Za:WGRc%KB@-;\)
%Bg$os#]ir<405-i'k&^BGqC-#*#`']bK^\Xrke6TM%),>L(C-lNj*60SJQ<+[p*0ea4PLicD_epS9p/G81EK-Rkn2d]&]mL5aiF[
%e]r&D3f57uV\AYAal5LmUbO4U(l>lC3DT3N@UFT3*#)fsMA5Y]Znkd.B`\.6osuU0V*>6L+K/eI-<%d51:_1h00^V3,XXg@%PLP.
%i1E<5-dbN^"%n)?8cf,iISc6^_C,:*Ko'IZBd>^H'6<lDP&8r<K<Aad-,iDNTB#P+o\@!qSiTqtq*&6qEu)^K:94(>`1@O48u<0_
%fLdQEL_KI[.l)%?r&Mke8PjOQpI^0C7-nP"r0Fgpcg89h2.M7<8MZY94\38uZCWH)Xl!-PiU6mU_R7>";]h<fHrbA5dK;!@D*R`r
%a0].K.5oLUlg`)TVm%9?emg`krmCFLh^1UD>E5p0>MX^AZ_T1c1^G`,J^#qpkpD"8'<RK4T_H>d2E'efha+PsiX't%X;l0G-_@QA
%-U8=/-D0M!T*Pq5nW1$@,bVqh=R?3-FrY5F3n2/2f#Cn.fRN@+?+ujj382Au@bB=>H_n$eD.,$/@QJd_]\G]t@O<NZ_DE.DM)#95
%AM!dZ)3T270k4IoN1K2gTZ'sSN3N[F##]'sdD\bJm\KB9T"*8tF\c0MPE_<V+c9Yr`V^l2B9KI@:pQ$P;cNQQfn6XMO(^uC`&*J`
%-G)h./<=;_/e%)$2jAD.OW:`>5*0.;P?W:5oU,8@4!k[.kf\ueEQN#fNA")\,Y_d$puj9.^*(.tUi#K0g@N5Ur1L`,P2j+FX^S`2
%+0l[cm^^\-0-DjO8mF;\<AP2Ded69uR.UTV0mo?T$jNNh]`Di4QT;tp7VfVW3l,KQKR0)K+)L$DiVCTASTO8[CCS4GnY:rt$b14K
%)\>4`)s$6+i!!>-7SaSWA.1(26T=?]#e8;J4WU4*K<)\%E-g"X-\bp[]Hi5p^Z&B`.n]FPjs?^2($VM@s1G%!cPn'qnTdL0S2Z]*
%Si>/LmMsU\ApA2r9qe@U3c0]!)Y2F"<6eW(mjR=A%Ng+69.6)+7GT8WN&\/?/X1eP5N9nQY#AOpppB))J>quShoKkQ_D)+`NB3E'
%4[qMg:N6#f5=udO':cbrNtFi@o'DodN4l*\1h'rcM&Dp6jZuLa(<Q^0->0Rr-6$rrHi2e7+1)mHPI)\dr=/6ob_2'X8R>9ZI5F\u
%PX6jP=dkI1.&!G7RHE*&!5eoN@`23Pp/lLpccnPqgo>8@c@ouq_R+Amg:8p)>aT[e9KO&fSI<olKde3kMGg'c@`!s.-[tM`!tP^-
%kh$"ZEoTE,aNe%@:S=-ekiSEuJ7CJ<n.pPZ)ZW?]OOr>Gh&@h+1&uT9MrH`<'88h/87SFC%_fp/RtVF`A1i``;t,R4/4n.We,@(5
%:O$hiQ2==Ya#CHAXI35[;TX70=E1M^bF'isi5:Kt<!Ipb@I;lhTO;-D;#"HL<XNHKn%b2fO'X)U8N-cl7h?kj!6-%i&d0D5Tnn.O
%,&Y-:L&qtiZ^-=kC/CWo86O90R'%'ZO93eaX"q\cDfM[#JZ;3>9.Wj8/>%LBH<S]Qm=SjT[TiJI'k8Ja`5p=;?#0:sMda1e&Q5DM
%!f[U!Mt)jeao'%c8<#Ga?E0/5'7&n>,N`%b#4,Era2Rg.;_DP%G_[ZtA3Xm$"dR.X!ggo$JV$BaBte)K>a1;hr$8DT$00T7qoWTD
%S8.FTKeqh"O'Ip4+0D?d;><B$PCMX&Is+?=GfST]U>Xf]2EJl8gX'DSb`2WO49VRfFl@="mbf$Eb/PKT@pD4eem2\jJ+\lD+UHGn
%_fM_&8c#Y;Bi!bl;h3/VAui3,67t_uUOmN5U4C8_8@4Eohm9+LYJ-4=b2+PM`/jKS*%OE32C-an%i4FO/JRY9=D6Z&]-ugsO6u3R
%/u4V80".g/Zqq=c7D"Wdijo>;+5</8J+'Y#kgKEe_*"i*30akNnrDOK0dHG4HZ`)'l](WWM"^*s'FAB#=0,KP'BaMaO\!jYa?u)5
%`cl\??@Y\$LE[0sG<*-b42A`Tnj%:'8rpCtV$2-I'9It^G5IR3T7mDJAO_QM\lh\Pc.Z&:+4\YcFNM0s50hpRnT6>?F=a(492*A-
%:<*E2`r[=1Z%.UMnD0kbo(.5!W+I*o'hp>_1i<-T`"aZ&3,uoo.o'@>5e5mJn=mhZc]@%B75%^nVNB^b,^9Y&SjJ%,OPhQ5GR=bK
%6@u+si'3N[EXMi:E+6\@#q$2m-iQ@S_>T5FasRO;1n?<j&[/<Orm2e.PmZ.g_YWoT%I<<aoZ8IP2Ur<&F,@9XB'bg4HW1iOIdVrq
%Bs6N^&EnnSq1<#ld+/\9o>90E8(a+QAHloD-sAPZ9Za+bC547GK9Xr%I$D!*m3!]f;JZRe[>_YC$-O1uPga-DbRJ,,Lm"i+\jAkU
%__t!/hGY1e?BU:&bG2*(UK<LkAj=eGlD7h;"/o9[6Yohd\j&`tma/0:*3jop@`_#'kqbZD;(GT3!u0QDc&4WI0CGNY*kh)qRDU^]
%T-!-$=KL]4U/97G>L.NXeOkgM[lDf+Ac`,*lQ5##-P<tON-,DoMmr>alA^Y0lk$LMZKbG<ri$[l$]/44)=3O(5/OhnbuN@AQ<g6<
%T>aPsWTbjtTQZ/<aI4E%@a_PM[g*L)UKLbmNO#Sn#2]%#a\Qd4G9N+KZ+8[s,?<e8cp7"26;"_'BX1:!r*$0MCe%Xe4OU+$=>gqk
%KN8j;KI!Ps_tS[@s+b6`'FSJQfG5%MM$,RGbf*23G1)Oo@3H5YgqL9RL^Z$^FF-#qiQ+ISX+dYGK[M3SOEk;3bCdH#%;I=YpAC*0
%C=j"BXE.iK-'"*W>Tmn)U)fGA2l0d5)0pW>RDhcjfql]nL-3JG<uVO'#io2bajZcj'i"Ub2g2-&O;qi_e@grsAI5ogfJ'66Z5"j&
%iZ@+dj/kb0SL?"R#=_5oUKDj$'+&6ojhM2bTPT^#ror3ZQ@Atae@q(Dac4$O*PHMMLd-4L,/FXN)t9c_7f\;G^+Sgu!Z`k&20.-e
%mH2.R@CCfD=q98bkBS>R*`(5_=U8*#%gar/gW=#15(Z7IFKK(T=7#>>lM!s"+(]0Y4d03<7S]s%pa#_l26'_Ur/rb'JTnCg=*t1Q
%s#odu%i%(KfBb7N[hZB\dam8"(@E_',.Fbr`VZ<)<QdS2L!?:87H,A!O6o!Z5M<V:.QT!;,jKCNl=QBe`_e%FBfi3\mV].&D.HX]
%>@mK"F)pHVhcHDEK!de+1NrM@cb+1AlW<oe/b18644s1l_LC\B;YCA4G,O*1og+N."M=T(1/fut`dj18e2VVI,!F:E*b?8U9;L0X
%0"%rV)R&5m/9BU0gQ/\F^>)=Q.A_!oQVUq4]6$$8a^nrDpa-g;jQC%p4CaJi$hUWNb$Z*W10@WkTd1ijc5Mqr#&-/uGN,9T#4'8Z
%[A0&AYtOHiVI4n3(X82O9&(nY?TQ'6T@p`f"/`aBVOQm2g_8/j)$;Gp4(R%rAV[]WA1QG\*m:K6d:%Pp?WaGnORLT*;8hfcQUM!6
%3aip>k!O\`-SN')50q)'4o?*$s+cA&,U,e`eqTa(dB7mAp+3OA@$_-X>3?T-XB#UV>HS>eG0]^-1=.LYUB)m!(,b;X[pD":qmD`D
%,cu$:a@ct.ZHL[N8.n:L4B<H@dH@aU*k;NU@n'UHL5"!=;?\BJVt=Ub)d$T20W;C=[E#LL#@XR)V7:Ya!>+P7&`S?)#$Y:n`u"LU
%(q=NmQm\9-c8O9?)g&h03\\#O(fpuXd,KZf"W4U;gON[Fnc!#!qLaA)NWfCg=7+AmXuQa6/0hJoQ<0`1E\qQCd+sGRJ=PD20'B@/
%@\fN\KulHpcK![=OPM\:F3=HNik[1u@$6)B74+eNO=u]5O5n)RnmKZMbRG<+4GU?&GO"^XaT2FXQ:`,r<0i9%"@m$<E]%3(R'E$%
%QPL1?:(?7j4KM)$TB<%1_S#rrAheKN>+uZ@J>5^ZE`SH&8iF%92s>RT"#2DQZ(^:L*6<gu@8G8&B/.Opc'rXT0#,.b^Uu_Er;#GI
%hcT(AEq85EO7ZZ!^O<l-^"m"%IPq"CH+s)nFa5l\mbVi"d%2%Sbfi0SAiGY.3Ij>^Q2*P%ic8(!o,LRB4+>5`QZF-Y5Q/UZs#5?)
%DlEVWQHd.3rTAZ!Za1=Hs60dd^")HSY>1OX]u%A3o>4,5qc-FM<-R$I`.nRT0tL;M4RDM^,uKe+.6>"K"54D/Focne;/o2P4lN,c
%'qXHH+O#DP3;[EBGA$`a_AN.)b`Q7PLXQSk<Q-ch0uF9HH=gUtj]e!a1,!(Pg=p!-[7QYPr*Rlg%]$!.T9^bo,)+t\:CAZFBmTZW
%^,Ffr9Kku:f![k?bH#oQ"1/-FCE#PcXE!1i8_A`?S)'tkI"J7nkDHtpCSa3H!,oJDpTui+k\5#?lT[3",?gV_j!5WGnTTC;+$;%j
%KKLc`P@r^49*'bY\sFb^&6$m7$4(b#7Sp'$U:7o&CU6*8e4,m\F*9cCl^S,aBXd5tVFrpOCIL6:Z=qIp(C@28U=HGjS)'tGCJCFE
%5>LOnJn<JMZhq+;hXkO"nBjjV=tiD42S0g*D$1[nJ3kqFW"Y-&+.M*n7kR_N^OUs0,,9A_KJ]U?9bD(1W=tcZSI[HlYUH<Y9Ol-;
%G!(a)mdL+T<@;ZHN?)?/j6;Y3)26E$]r"GT`cI11[!\6^N9?)YC&'GaoVn\t/SZlbO[Qk4<9G.8J>*h,)+hL<Q;iAB'qX]UQ6@j`
%Mg.AODR]EjS74VJ*m#jo?(>@dmI$g(,@q1Ph!qau=I'dW-g?mnpmg2V\ncOQ8*ZA,X*@s>/FC2mQm:G5D1a_\oCZh2=8&_()0LK,
%$Guk7`q-rgS"IQ7H[Di(lb0S/pH>p[0M4DnVEU0f[[M6_q"r0keHmacTP05*Gk.i&B?@n?Y4$8bgU:ol*ECFYr_Foh$kMTnrUfEt
%M`^jp/!g-K,qG66b6Y$Tr<M8*=]BpN#/J5YY?FqONbTC?=)[H)iYsPM-e+RQd'aKST^^DB7j^fAgN?M^<R1DPX$V"j_aP8n*O@a+
%"cm?j"7<M!$Jpn^MEKi..7US;-C@go)-ua)V]9L=_2'g'r)6>13R*"9Jak!#:9MFYRsA!&P(Ls]ma=p:rMt*i3<tO"(V"_W%+Vt5
%hR8k&@h?\D8tbTidJA#b\0tfm^-OhJoj0^ugI;k[C@A[dE:=eglHBeZ#2f]VJL+4=^AQIHVuLu]?GN?-(tN4`fF$6KCoBU`:$-D)
%k1'hhBCd[R&qj%@:TH77HK:D-__%hU[P(SD5JdCT..b_X8p)(B5XnFE's9nQ%(fa$DLHIFqqC7U-"qW2fnP#2"LKGDUV@9.Tn7FL
%?f)mQgIKOHbs3&`<GS`<\RIBQk,l1k`FnbIBQ]fY,tXMKlFZH@[rqi*IaH*`1s9)WV\KlaERKHhE+andn"/jk?!i)Q"Qj$s%`s,q
%Gt>YZn9pknCYdF\m[S_C*r]rIbrgkV[#%CGUqM'c"j0f$8t+)t`)N<#e8=@Tk+o1"mI#ZbDeQ\BkdDGmgB$g$ZNP-Y%l'I>![(f\
%40Z4(Yt%T*ha?.h%m0%+#G(5KI#G,75*I5sdU+ECNL0*G=k4AYi`Z5"S=g\!TN;1h0gr2q'mVoe9tuqsdMj4.]4\)!QhDWfPWl;Q
%A<%9lM_m;Z'$14;e"g=KX&_C-6t?p'=)9rcoj0_H%Q7*L&01IMmsp'm<RMaZM(?gb1SO,"`4`<nAXTF+=*^h+a@r,3/p;m@Re821
%&#W\=jTT<^6*gp,TFY4OC)IV-fY?(2&DM"+%a`))c[bUU=06a-c@_&gRI"?ADsnRD%rknt<R.Wrb.?6nQ:cu#DJ=f,D;,r.s';kb
%oe+1+^YY\rJ\Jb'Ktt[?N7+M[mH$H'j.s"<FO7iJEg8hsq[g&HBq#PD=SgC]G2$I*@Xg^\ZQ2#Q->Y>"*SYp@H-Gh6O#)hd#?>=j
%cc+1?=$a;F7._kCY]O3?["rAPS?O+Rk@NX9r.EER;oW!JB"?8E&=fR0PMKmu4D[JsbL.SY'J[_1Pj:U]M</31js3rZNY4i]M1(3/
%;CYO`3E74]YG,"];]$?Q<[A,Dd&bWpWmVrQM;idqK?0Z1>TZC[-5UG.&u6l.BF>0+@pcnE97;6#4?pMB^Ui3*s#0`]lb7`a"*T8;
%@K&+\bNmpKo?3b=?S3,el07#Z+0KK?Gk%D<J&Y-r`rC-7Yrig`8L!3kkoSb9L-,8p[M],8b.,[.M(NtN:_0VM:2EUcc9VNTCo(QC
%0ZUtsfUl8X56f+1D<]!9;OOGnYnP;k!\1O^oHq!t[,/a3S_1$,Au-"p[7/;f!/T^me4,^F3(`MU-9C'Ab@eLbpcK4Z8ls)"n[hJ3
%OtqBC1/n!IRqmG@-$FR";OPLdXY`KaDcmj05IG2O8hZ8@41.]I$POlpfVm0>,0Tn`c%L`dAJ*[r<B3VI5Z:<F$KsjB-H;Z];bDgd
%Mb,7p.N)Dr>.P<_iNl4\I;Xa%s#h\fj!P1Bod2U0<h/)#F.M)k.Z(7kj<hi>$#Ag%mS'LV;@s]Iiasr7-FHdA$.n`[2<HBaWJ+)T
%;6%nj&#WQ1fn*n;2lhcD$TO'6eO%;UVA?L)!.:A@eR9+krnOi;MJ\plf-54SW@il:->E$-'q$L".cG^S1g:8FEb17=`!TDRA2BUi
%Uf%XFN@Les.@Mlb%rdY1<gfk1jCKt:=i<j]&mgtsV<n@a<giY):HYqV9,9Ps;MeY[A0]&ZWf5S^_imkK5!khKS]%-"*g8)kS'T8-
%MZ(Xk[([q=41Rh*+3A%S\L]$G&E9bo6^&IInt3i][BaBO/&0H\k&R#LmCK-n9sd*lEdC_bg8O]FV`$0'#=XdO;k"+q:8:?acp$O^
%.SB'WL/@Xr;k'`@:ghV!Q`2Rd1_i+B(r0i8@?a/3F_VShbf\"-@a$EV(hI;<[94qn9pTC/Ec]du;JRrd`hSf%<d9g4YhfBQH"#75
%K#n-PbC#K(E`p[u2Nu:UgK<".`9Mn#;$INW[eLShiUb9q5.<"%Gi82=/c#Yb+gXV-=:$uX'gO$TQt0g/+;\,G%`m>".$Z)/F)XpH
%>4i`t$`7t6N)UQ%?4oh@QB[(O[o$%ZfUQNX?2,NY8%E#RQ4%jQ9T:?6&]h&^5g#Aa]/$OC$F!AqqBT&E)chq0l67t:C^U_K5Ip9>
%4;&Ml(PhHlT3P;$Zn]1i5IlX%"6[%TX+GC2`O<'G77Jm:X1Zg?W]6O0KjL9^.Lqq19C:eP64]#(F+83D]st"_*m:RH9%sT@gt7FQ
%T&b_m\Z'a3'.",9f*H\%3QpYm3..%6c'0H<f^mEQ\KGIZWSfZ_Z\c#ti1[8NDo=i%K#gdqD^?k[Q"#J&9QEq2GpZP,`Y"-.fPDP,
%$<<AF!YAA2bi@>RjUAMC`MG[/&e<'^M++>II=THadlr$?!VN;:%TcLR(K3dP*a4hCAIAuD5Ip7h)8!-s$D2$QG?OH"-$CYrprD"d
%rn$i="Z1Ami\1!]G5*^TIIlaYX0XC+%`bm8Vls`?rq"%H-2dNN3d?)Pp?i^*SA;'',hJOZ25foh0@$`04RQbRQbQh_\f^IWgYY24
%l,PHP00HK7Qi(?7E@9B9F5RZfB@7OiB^X-=%cOl/6hkMJ6\qKlKD>-;m.UC6J]Mth4dbuuo:OptNYma^\?Fl@IsY+$I!i\S'Al$Q
%o<T#2_Me+FR&d^r]fj&7>hr\W5p$nE6VH/QdlX:0J%n+\]brQ7i9EOf)p4l%`7qoi[s&YCbL>kWd,DV)"cI5FDZdS#.+d4C]8JBo
%;D6hWE%\>#hk&_s%Zs(r82kYHO67>60t80-]s#6upQ+V1m_a7H\!ql+)O,aAhDd?j@eUE!mH/#m^>Ak(4'6c<piYp!Oi1jF"S&W,
%geT3)5Meme]WU^pLV6C/l`7Y`e*UMG2]pqLT8m<$QX^lgje7mNo?3ih(60Wmh`qAhm1&+@j7[e?HZ_J\/FLqLYF"D:_oJgIo@n9.
%jYQR]KU)Ern<`81h<aH!PrjdF9WHmA%HdFb\SP1*rYVZj]B]n3^DGd6S_m,`>jl&IAaV>aD?QLj6=k%f+`,Tg-=(N;jX+8NdcEY%
%;dLfs5ar]OLdTeWZKJ%0N>g"ql#VdM5IMB3hf$fCIXPr9h(e1VbkaoQI0PZ1mD[lm76a7AB7r0^F*k@Nro77X<^nJtroJKm!rfdA
%]=BrZ>V:bDmBG^7&bC'%L?5#oOlq`B_\eD\[RZWFDV6*oot#JDmUggX@l6B3L@'&aIn+!1b#NnA1(-SCSR,T,?%;P5qdI/a+O%T+
%N3Ni7Fjncae1bc(DGS$Z)oAdgjS^=_+)^MLhec,tY>7+;0J0e^D]6TNEPZ2B?#6[5X37!ec/k>GlJAhUnO;IC\GGC/X39m_#3]qb
%;MF.B*^q;=FQf"t3]-$`D&"^fEPqS'Lgg3smkVoW=6GpZYJutSrquT'nQM7D/!1d2;Wo"C:_-khGbBcNi-b[Q:XkfF*/@&c7^.SR
%L5ZB:FPoRm/8Y<KNYt31fOGac[!p[Qbo24-6fSTp&FZ*L4<GsH"$$4po>HRYg[@)aK8S/51<%N2q<e%igY4Hmp4m7?a/B,*`7"Mo
%6F+oDrFUETo+iKpPg[j%$M$=Bj0SGgMXl$Jj4P6hD`SgP;KC]MZT+P.I"k+3!'rfne^_XuHFs.-#Y3^XDrWkEgPG#;p-I^N^NX01
%U)36!f6f2J=_#Hjk_jDu(lh(n4?L=1N!WoP7^_fVX6Yi8Y:cu,*[*cgTGmC6aOkPV?=PmV*'3V9:>>dqicVKDlfGI/-%-7[lT&Js
%)`*:!$?k,?s-]4q_6<MD!or7CoeBA5Yt-:h3^LT<YiI$&:bVtLV?@'LA3N@83rW;$)[4"6nFo-WcT1p%OgcR^lL7s>Ld<!ilhk1E
%GI)S0\\-^(]\Zt2:WM_oh-9S1^3YImoAS`qhQgd3ZTQ"uGd09bIb7u`I^AipPUu"8#+?LiC-)bs7o-%DB!]e'3;@auJEc)2d7u>W
%ABK/lXS+Yb*ZQtl@l*4'\/G(2>t!\Vl.[W)3r%5[66/5eeM1ME7jGj0g"uTfUb"O5eb3lk0[dT)Mi2Qe3u@d`it;'4HSn8>]%Z$Y
%2Aa,GIN+GZ_M*3G\K8<Ppr^9EbD>,INQJQF=7&^_*ANM^G\#AB,91'7^r5`up!ngP$_B!*f/PD.0=RD_>89ml(T6.qNJTXh0&>-P
%0!?lt&EF9A$[9')jM2k%J+:7-FhK*OHc4"NcH^@Ss"S7np<nAKC4sgh%o"/F/Ig_=nV,T`<O:=_SpqT2D1DOi4a70ffj9tC,g&D$
%BW'0"&nT90Nm2r+7A:cbI<O*q3V^#]*$S8"%,trZ1!_lnAPAi+,7I#/%R*!op+o%B4H`g257Z:*r)f34k7EP,Ae7JM4Ju;G.2M#1
%=O-Mu7>_$EYpcBgqn]Vmk7EP,Ae<!pbW5B!PYm6Zn>kS0`1i2.`6h+p#82r8$soB4N2[]&i#Y-@p,SJ[SNLgi(u@(_a-Uf+GUDFV
%p0sXWGZOVJlbC,9;Z;\8:MfG[7fG9b=EZ6`I\'balm^-%7+XVZY*k-LN<$d_f-\'edC#aBCTD6LRDcL)>WZK%[RDI4W7jYi*_+[,
%@;QY.-E8t$[HBm,I#lXD-[+&_,B4Y'Jj5J%E*>^A?Ui#AN(/>*>"6srC+l@Nci:Phq#4aogRIB1#r%EPq1shpT#Dd@"XSKHmV>eN
%fg6p6FM7Wl27QH]fTN^+_o*qmR$8amk*+\F8nRVF8Ml?Hpck4`lYH8(mpEsCZY(!(I=?IMI<U-#I#MpHU-<HR\'%WnkZtg(U"t+7
%ZnM.aCJ+FY-%5SOUUj6eq?(>W3Af.IGo]lZG2.Z(LT[Y9)og9YnPA;&_kmGZ=3[ElrWde2%Y%:MeVB2e2^"T=G;nMdqkKhiK:$cA
%5-[STlR8aJ#i!ub6iIpP3q/lWBrrW"0GF^*N$1@N0oVf2^[.)%NPVHbE<]p/O+m?M$$R@@kT:OXr(QARp1)sm5/2OG@=((*K_[tk
%a^]E\4:l5)SUT$_^Ou%U5)7(<PQ*QYiT1%+L!8WXSc$6ds&Z-FH@V4Cl]IEQo(h_2k;s^V1&62ETC;6AoLqI+6SWCO52QC/DY!Tu
%52YPko0#0bp[2qC.3]#3r^W%1BLopPX8M:Gg%L'!pGJu.[MK`]^YV2^Mt<RuhnfOM:GK?ELs`VK38eKa>]$VrDf.M#@rS\oa56IB
%&U`j2qAmZ=A$If%HmE&[1j1QUa:?ul2Ot;(BGN@8"CM1V^"m"D%H>n2lgr<+o:N5#rl=ib`V0#klg<BW=4`qb6(cY;3h&fUPNcm=
%STu&36=cVQB6tG\ic9]2AFm"r%sPKM-hdenU0$ajn'$UHCbO`$85"qdm@MQZbB$Q??K&cTCM_.Voq,<k_N,>sT8C\Rk2Z.Lf[off
%MQ$hpo/YPNIL!9/:QZ/4"ssWQ!-:g-Q@kbhl0[c.+$j.[ciDlRPMp(.]R1LmSI@1=JaD(Z,%_TK]SI;Wln=R]AMUnlL6p$O1)XCF
%_okmo?7pER-&sEt@58tY-1eZ.nlca!UUD:.aRjNBL8="@U\8sO`hm8[LI_`C6aDP'@lX*k'4]%$kfG0k,g87?A/!;VjGWPJ\VJKI
%0@"LNhjb4GV2p`f:.ZcZk.#o8I-Adob/AB=b],`G5'Xg:5RmL%GiP$>kmtiTO3uka!/-oK02:,dp4]C:hql"p^H&q&oiW9J1F4Ig
%D$'KBmE.X3R:&DaZtVW!*Z*.YK-JWrW(mo!p!<TqfU+CP3,Op53p^F-nC6dhh7K0D/ZsiomFb$nr$f!hT54Ef)WMo:#PaP:I@eTs
%U!:eoFFtRZUeD]\0kb5Rj8=i40m&AuYt'pdg`XTB*IF#2i[c!&LgSKS7Kit<FaG'$3bC)7\)RP<m"P<TNjE4XLD81#*FlBb*4Hs+
%9QlAI(4aS@@)j*?L<5HqYaXuja#Fi044u=uQ&JL^N6.*",^'UGcu(e;JmB`%loF9Bn#eUI\!r:oYKk2,BCgQG!ld.5QQ_n`EAZ!j
%#4WZa,\%$u1s5CNea(u]gX@=H@A#F:F[)I)N63FY>eR>WNQF;)H2$8ZTG@JD2(JXcI17ZpO%;5%G&suq?Z5u%h=gD]N#p]ar^b01
%ZV!%gbt"9WEI0QtEF%sM'[JI=dW<Nr1kq%']>"+qAu3jcq\mS@2e^>Q2!#2C9VWLN8c/V<#(8,Ac]<;%Dso:Yf#MJ=*2VR6\sE3J
%P+GA35sF=dI9)*N0l]2Y*ptmt#_sJf'g8I&Y>Kp4VI2'tU>HCHmQW%>k2]>U!MnKI`3Nlo-fBM%1\PgUYt"p9*MF303Z'[HUrtoQ
%6ql=iUs2Wfgn`1hg>&LK*P"'e66M]'\`]X14i?cn8Y8'cI;VFcN$Hj87Z;([k9b=h;Wkpe9^:E/cAbP/n-g#BEJ$5mPqIP].c%&>
%*0X"h+'2NV5@8?K:tA41HOfo-F$!N6jNd*Za5(Bo=(6i71ZamhnmbGj0qVBNM.]).VZ[kB9t&naJ@Nb"np^9*@WVChf/'S@qRAOK
%^]!Q#;5UajgYXX'=K1DnIGs2,_hSbO9oU.5Yq;_.,2Q2"U9TMs**h[#q/-]!b'?>\&t<O>qL:/Y3Z4afAro25qY!U9lLAM!*]a`I
%4d)RCpnQ.oH[WIC-#3]dmqYn;^)sa9r'J]!J%846n-@RZiIGQ8:pmjF]Xci,*\eM!&))6oCNLdfZ>T*5hec,tA!&OZHmDKK1i<l&
%,65(GfD136;'%-4jh@U[(=R?G%:r">*84`7[uhG8n(Kp_:Wmf'"g>qV!WW'X4$p==Q-eD[RbOT<pQ1SFO%'V*mLmG+^f(bD&lOC2
%J1/p\AT-TJ_-=:UX+,T2]%fJ_JF8^p-or?ABTe3!RHXX1]TtF&e3_Obc](/.g$#uc.6gU2D_cJX+se)B0Rao1M>PbQ([VU:`f+=S
%I7u>LoWZ@iL2d*s8%LQE/,3]>RU?Qo^3RilM/OF'"Zh%FG]A30rT8K(dlKsq\@Ff<IK*_;lF`(43?BAA5'5pHL+"-)EuZuj6YDEh
%E9Y`;j*1WQn9jbW)XtZa-f0*P]^ZgjaO=RMLFVqD*[6(roC5t1EKh=1%!22+Y>`F/9p]mZm/L5O-$kltV+l5I&"Sl5fKaL&nerJO
%%?G.aPeKr%k5NcVa"`KG00BG"J+-.tYAj6\Ni8j#hV1PiYJ/\tede0C4>5s_R;O(8Eb$0`,'s&)P%;3F+jh<XQAj.&A_P=H^719Z
%*:g[jJ6_[s;=+XZ-"qSE62gSk1-&,BG)&U!*enJ9:D3TaN7^UE1lE_&F%5mL:f!&Ca]?ebn$^j6oBSQn57VObD`;UTbjJ>1-^33h
%'0cs$hoD0-K<+`?:"FNTV`u.I)0ntJ2D8[im(&nE?RI\b2k%_3T9q5()B;'n%W2UPnTo8%o5;cD$3uCY&!L`<?:]G4?BCp9I.4'u
%TAV_t4sna6oUeJ,lALQl_thdc3/(I`Se0)ke:RuIK(MM1[lA]?\id<S+]2O*<H#Ub])3UQTenY\V1,]Jq>A\@jlFCi+13-cnb$fB
%hHjK\dqa$rbP(X*-df"ZGnJ;MqXrpgh8tTTEJJ%/@a0,dhn7%*"GFCt.4S8noH?g>cs>g7'Uqd*BR\[n%2rIBdr5$KJ&A2aL:U`)
%g$G3]J,WM+4+h2EoY\e/QXq-Qo/)?R=W*WL*_0i96*'#iafl[*:_bdfbiag3$rlB>4H>Vg.arZRMTi,;Y_C/_o.!K5MdLJ;R29S+
%"cYnsS!Q\a#EQdF,)R#b2/,%@Vb)WnANnEj;fKWo>QRIeZ<Q3-+]Q3D\1FVi_T]?\bi.`ZR$WNK)$57MN2/-3]2[k_1.hqUXS?8+
%bi!]Z;CYJQKkqgnC"g-Xm;"UspOS+bl4#j8.?)'hWs9IfKm#g)#NMV<K>)&roZ[la^Y&09CYF2M#2mL?KqCt&T"IZV+SG$UfLonU
%bd.jQ0S;it$p[ttStpYtg8qL.XPJS")j'n-U0bMP\p^"P,M075TPbVG`C4.77CrrP!7WPb/#^O`Z3*q,h@1JT@q.hB<G%iFK`O:d
%==J7H^,YFo2/@DeHgU)cJ9pm+kjEF3OBg[0LtZkDf+re:(@<_2"&MpH`_ebBP7E1jeTTkjKWPq[!$\M'Oq)d>ELFj4SQj_.4cSU+
%k;Re'<X5l$WpQIm7lg(KD?Z-oL>ZECp,#s]T&90-MrFFqriS4k9T$3h/E^0-)b&$Z.!^R>W(Q3L.T.9]UarAF17#a(XGl=-eYk7@
%7cIGp66NCP4KdN@V9c[Uf5*0#;&moh%ghp&S>Wnd>$r(bKjBE@9Nidk[A9]M!M0o!oiNXp(+F33qn:qF).liJ<mX!;CTkB#J5Jao
%e$TT7T.\S6k]aYUd]tF:HFLc^1?3Zl$8Pam#lt'u'-Zo2SY/FYMt%$!I'9',EL!s5&QR4@MR#iY8WBcHM>bm:'7OCI7n0[fb:BTO
%kC?H5B7)&o$k4J7ZDt211f3Fh:VKkY92qb:nB.f;1Zc%2VDEl,_o>;UN%J0I$#[be)AL#oH'/msGG?u`Tb%73#(5T[GYrZn%D[9a
%>F"_@Mp'7YThu[Vb)ncLa9C"Pb"fKt0TP+L32.RAQ,Pk:ANL9(J8$a#PpdilNrko/ka/"H+;+i1.9K,sV9loC=[-/S'h,/9KW)h6
%%5_oE)%c]qKgc.h@qiG62Ki)8-/^K:Ft])L5Y_E[->Ae9%)ZnY3XZ8B]\KQ#^d]2+1lJ(XW649/EoA`VR0%(<DW9ACk#I[fO57^M
%nl/I/b=pX$31jgi/Qfbj<uH+q<I8"oXa3A"N;qC*@JKT9)c.Pn6fn*$2n:>.TQR'fK;uJq^AJ"RO.4m>noXo1qU-0u@Pc3M=U#!m
%"jdA*<>d?-<$M>4_fg+;+jtUDcrfu;ig`qPJqimKlgqI_Zi*T:9Y-;)A;]!JhF"",`RWL-GgRh+S,[eYIO6Q7(N3.MH?8YORXP"0
%fh_Y,.q>;?okIKN(Dki\fur&XF8F(`S*RDhJp!ukeY'Jf7pUNl,'gClJH>P(@5Wn,+d-=9K2Q<er*@kZIDZ7qH/GCu^Ff@PSqJ1s
%i>2>cQE*,7Y/R=9D9;P-WaabA=5Gmj8(SN;JY%N:Rp`mJn)>pNLWe[?d`4$@IYkZ,g$Infc.Vn.VVD"TIg5NKl@_344?#i@&cj`e
%^AqP!!QJE0r;EI@T`mG$,$!\H9.rI7"^!=C,"$b^bsB8='Qgo[ZsMsGSlAg]j#_"taN$R>5]t]\:FQJV3%pEZ@MJs?@c1fPP:-?I
%JQE#jX(JL8^FfB&!j;r]=/k+&O-"-edRd_Ko%bK_)B_Zko[1(c@h<0B"(WR+C[Lm6f32<9kASd4^lH0nSj/DWrM%Z3D\a8^/X?dD
%M9$Ae47^8S:LlRo@kYe#D%lKZEl#VF!.U2-8JA@J,T0YsN:N60*GKYgS\-XK66^2J8V6&rc+Z281^$q`,cL#.BCARLg;pORiV2qK
%=8rN'Z]PDiP,b=X!!uscOH>+uZEM7bDucB[VL*VQ4MUhXMkj8(`].0uHL=J('DkntdFffd3B[HKUe9VHcBc#`P(XR[ehO:d+=.6C
%:6mAb2Ha-Uq?F&I=_>orqFJBrV3-H<3J.OdD]B'b(3l\&QMmDUqd:hAc>V<s/rUVU7JNgF_VC#.W%n0F@X3"s3=pg?aNGIk][H=0
%cd/?i).>pG?5]uj_<dVOFX`)L\L#Us"Om&*8R;XZb.%iq9es8>MTZn.6acUKrD[Fu#MCuci6##'JS6NJ&C_Uh6Rf,m#Zn7R*7(=D
%`Qj&kF]7TpAuSf3aB..Z+7W5@ju'Gs7=A.\,fj:`GXl-S-gUu^a/OTcPdD&)D.FcPI+&!-aPo`;Yr1!h;(V]kI(1A?$AP&`b#Xgl
%.jlcJ&7C%nPn@S7gMqAuNWFLB+;B#.48*GIfhS!*#D$>l*HVi*Y#['Tf%J0ohCq/0#h?i(V1hFQiR;tNfAD4GYr9jPQle,[C6ac9
%]9k\W^&El#LW2do=@ISMh=cWH7eQk;]T$hDI`OT(g.'^F$94grq1Z12b,:1H0.I,C9O9<\fTS4Era<jM$[SN9c'I^f[f@VV"I#t5
%^Y?e5mJ_RH2.V&O^"M4'DAT3uY0hS^>AR[gGsh64Ch-ZM_Lhdqq4fNOnTS*Tp"l=s?WQ^S?knS=.'$;c-^hhI15TK0[STtUR0N&;
%Z=&VdW%`$/].[tLk_r@AG,("Z?T.I.)u76e,DRVOc:qhf+e*N^jRaVu3W>$CE]hl;:.#,oB[X5<S0[(;$M0m-*i#:#6jdP$1QZ)k
%PW@>\L+^<6NK?.J)m5@aRA0tl#*V^!k8;8oR98[)JNR^4UB^:RIP?/N':$jR+B-ocqTV<hC+aD&8&&J(.jJ"r7Tf`-G]T1]hYg1O
%IPWDVBRNJ(kJ_&@8HgYi<+8Klck[AA@ihNlJ='a+;\7s[63>%RE&&iEJO*-iYoL1R[,F3U1j3@rdXX&CJu^<HJAm)oid,&sM'"O;
%E';//=*.N7\NANLb,!.k]?lGDbs^I.MEW-25Ck+DM*-5)d^'k?U'0Hd-(t%*0VfZ$riZV!Y6a_QlhQn?r%#Y^/&M4.7@7dT$P@!.
%,YMSN+(<I#Ym>EEi\s8mSV<B*AUu4&$:3g"%edmUN70Ic$`##20O.8/_SKRF`W^_0.i[[hbh,=D`-T2,j6E]d'<A"PIlGAp0(+2j
%j7l]Cq,`qD[uNE%qdZPYJ!n<k_T]b'j^3c5Y;#RO0_:>81K17)?gFuS2Y1jd^B?=kNC(_3PX]@XZ-i(=#"^4CQ66FLMVQ0P`0f`D
%EX=>fPV5WSCG:$$e4+k7X>WS;AahOn3-\%g7m@n/*Af/F*iJOR2=V'Z'.dXZ!+@*u^S9KJQZ^IgUsnG3f[8U$N1Q!nT>5pT'jU`-
%oD*kb\GVR4df*fBs0A8Hg!@G"k?mrS0DkS6[@d7IT]\0If['K?>Kkdq[t=R;;.r"^&Or\KR/NQ:?$qA)I/[k@qfRK&b"Nj[bsAb5
%S8+1X?S.+[#G\e@1\XrKU>C?XV/.`J?Uj,Vl3W/WVnXe(?P_]U$hBVfq=e!Q9)h9(.3sTZs0<bsL]tnU5ofE6\s`%QDXgrr^7k(a
%K`Jcg+5,CgA0!Z\'[0'M/?/TWY<(i.c^2/;2J!cF(a5[p,RO*7$V8iS)I>];9Xt!'/_PA,V[ou*d$Ud8jH6`*9GC:$RmmI5>"j_%
%Cg<9,oP6LjIR2$Gf"s7Erm"tb+sRHAGi.Ib_\Bc`MTbuSWIG8=H8t860s:^,'-&s2^Ws"5![KIhbK_FhBYe\k3E!((#&FmaibFE$
%!]-=0,Qq]?<(\p&Ht+@pHG2WAc5KT4\Z2uh5tmUH'Nf19Ws*sM/J9l\!aSuo*0^skDiEkCpP7XAj&hZm\l1MnZT&QNX',Z.9i!h`
%(b;g"@MfKI.+TS`8r`1d:apSa+F1ea.%Upel3>&GKsacu`E=sB:@Ln<YC94/R+?1TB!\NL-e]u[mpT0>;K<ER?2QrX!=V"M/n^,:
%if$f.Am.0T!EKP<?-6\si[?$C.?BRg%"j>s;H,EU%TrggMVB"X3=ojK99cZf@3hg8G00m?d,VLlntKPJ,EjTY$ZRCSLY/I+?p9Ad
%(^r?ADAnR\p'?&&J9.5n*7R^Sd=MCb1'kXm_&0P8<<62=D&UVkEPA6]3@c-X]JIFPQCSl?,1/CaK!%&(;f0ta0O-OA%#161a)`_>
%@SEl!(\f.dTe#,-D*`Z=&js#e9cCD--Rh(;'nL>fi0l(**sR`u@PVeW1R/s)6k0bOI:AG/Z^<1b!>+HL,&FWs!/),.iKkc=MYX3W
%-ZI6^"^tUSSXUKCE(c<<A4pQ47gL(D`E&,@H-FF;Lh0/JSSLIj4ZH-F%!LhUC%BU_CFP#]F]QfI.!DO@/kCt&GLFVt$aa`C,7tMA
%[YPnU!sW\6\@;[oUF)+C!!f.u92ecL0MK_O$6s$A2$e^](oN=5f-2-C8Rd7RHOo0A"D/fNP@EK!.n<0q(0V/TH1s<Q+/a$3SC%&t
%CU;oM5nT]n.f_tSmjDR^3B=5HTd*/1agY^F(T'Qr@V-A!=sq'lS>h%m#Z5j+:hqJAR>3T<&rT6'1!-\u!#Wd#%nr1mO;rQ:D:1`E
%8]].-Eg[JJj"dFA_Fam;8$^c`%L`OQ!:uo\2T&+GA"ZlP)u8rBL`r/fE\e<CRA@5<ku_r8+ohfLoK](`6uug.h^71E*61ko@L1=0
%N6$m10ajp-C=d83%$r@Ik!SfYL6EOr5j]Q8>c9Xiaoe-;WU_6l@!KhPFm94DR?tg-24;cr>Gujf"C]=!mdgM(.&69b(Pn;<OU[q7
%'%2h8Qba#e$g+A(gCE=5`#$r.'VkB\K3M^<AbBiM`72g>338=fc4hO'KUZ(IV(j8H#MV+5oYCOnO<'f_Q!i@`aUq@R#24-=`$TLu
%9]VE?B#PIJ(K(@OH2ki9jJ]V$QT%r/Og63`7*"/?!./@!+0Om>cp]B$^Yg#d%o/(!e*kh1W0fSE@In=CCYY6sMB_/rDu/pi?JL6T
%.8i+qh3\-Z,8^CY"I0fpOP`3a+>Fb<h5A@>#tik;"LdYpRmCD4)4Kb50TRL?TTo+bfU/uF?%7.$*ILt'S\`,1Lp]fAP?`(4rk.J,
%k`'9eb(lEE(>6c\lS%-L.UZ\B#gYJD028>78-3IrC$,ca-(#g^dg/>$K<5;q>hL9q8S(e]H6_Bq,oD#,F_+YrNC<?P[.iieoo?X/
%;IgGn#tCZ,%DGE&Um\ONT\tn4#^3F.m(3rG<j6&G5SQD<?t*\6U<oJ[^fVY/\MVVm#\YE=ALVG1G*9*/<K^l9@joY?gi<C9!sh21
%S9\&^fYV\tTT'#c\ApO[\j<9I]i>3?cfTr^^4qU,&YR2I*H"?PS=(oWKoOcq8Uq[Ab/-?r6GC1Une_g<Ao8K6dfD.0XrQMXRQ&7X
%.:Q^ZMWbGl^Lt2\3<g!NRb`l7/;%2fHM1n*%&79R.38A!9E'mm/=*ro!i,pJ84k**-camZbs-N&HqnH^1#DPknHZabK>N[iRq"d6
%Ib2K/QG?449HW`^o47L3MOYCaWr/D(b(#75AM:R>j1\8kW.\>D6-?nRAu/9:52oJc3%T\IH6*'W7tP^_3>h[6%)HjC0\FdkkS\?G
%b4l5CKlgId42.Oc<;Y/TR.i5I$9_#s(!G#E"icorX7VF'n!tt%'o\=o#-/)YF<[(cIS;U"o@_Ua&t(JLW$:8a?5<n;MXOl%Jk6;"
%J?"WR4$A[F7H-<>`T>6OQ<#H3``Ga%KLirBN&9sbf'Ijm9a2]*-/Ci3<_*@''N=YsoA@q'bpb-%^m6-lmGRR]:p&pp\@#&("FV]9
%#@@Jt_Q+Y'OGllBpK^g'.:4pHoj:2G4D5Hc6RBm26LOq5*RLqo[$sP<87A0(l)'/+lPYup4!g`:/co\8D.hj:"O.V]*$m!5,m5<+
%7%b!bkZ%E$g-qU^HtTf;im\/l_7PXXI@*!fm0*o[V^!Gt#`8Kf7Z#Un<0Y;;)MgV?M//>sn)J0jNot'UQBua>Tc2FZgW]m7:"+J^
%9HTqspcqnEH'B;QYh:G%&>%V9D%<O)=tO<*W?tGAm2TlQ:k=)e!s0<+alj$3pfE_i0L$ks,QR,Nr+Jgs,9=2bp@6f"ad^8_MBA[M
%1e8YI"G)k&b6OD6Oq54a4%"ji)>:_-Zqk*!a-Pb6O_4SoA5Qq5fUlrqG*1mWYnnfGE&cNB!]+>j$Eu5D*2M>n3fdJ+Nt65+&X]!'
%^(96n'*X5#')*`-T8ENscSfIQ,Grg*3,Zr"_72TY)#lR%>OFp"i7#msjgLd4atXl,-6Z!;.!;H,9Zk]4`I8ltZ/r?R'GNuI;$Vhp
%QLXQ=^'PL2&ID+fT>c-;SgXY^OEj\'Af:K#Xp&OgbtqU[nZFqdPaQKI96a.'codT'.Qedtr3(Rt@1s\L`Vq&5XEk-V(BF&@9YbWu
%Hr)<3&>hUk^u=;e2nD\hc[]pA$MSpQ-=_E%=1_U):.%+9>nNS1Bst6bML%a5ZT;Ph8'&3A6T$9*m?+Ek;64RJ4-'(r./:kY(6Y')
%+?'B3q[djQ1@iaOTd#Qa91@9a.KQW0YY.VkAQ'n7q;`oj$%a`0!(P-(7ZRZ)aarcLOMr*2l,CT%YM%RFOs?oa*k,9jJTgiFR&\Af
%Ki>5$,0$J?k9&A0U7DgdZ1del1I=0V^pF9g/!OZ"mYB4N]b!`?+Gnl!!dIn/'(("oP&F?9:2e('AO@A5#@eMEP<PN-'<F$]nd6mC
%RCG&SSJ_^.e?%luAK=u>B'Yf1'MFHQi9J7c[=]-T\L2glqilm]j^V=/^:e(DlW6Z@\l\<1b_7e(4otcl(["TZKlGt_4Ei7,#lKM2
%(gL_n_,eu:RrNAB6%@$(gk(U&=GB=8ZI!+;4roK@GY-lN?j,6'5#*D5kp2iom.N1(Gfs6pWMDpUJDo/5oV(Ka$i?YsPSofd1q!^j
%d$I?Fg-O5%S_5ltGQ@nXWbe=S&fgiXJ/PPkDh6kX%Vt%71GQpUTJuaUjHt>bdN<>?P[E[lbmWRXX9-7;SHNnIB@AWr;:sNaRYTi0
%8t!mp_L_f<Z/]]U,egsWGXL$Tmsl1gG`@TP.16K\R\)SL>7Fto!<hn>Y^*;.XN")`EngHJl&@,G$NJL,9<Iq``hF)qcYL3:&Db0L
%H7hn&%5AeQ"<R*bn$IN(/]uDOV\:3TbUnpe_%CJKFA),_S?F5)eq&Wt*@l?4#rD/CCM=n:khM[#brF$i3B6;B8fYM5^$B2QKPL="
%3%uHfakMb_#88er=a\dZ,.iaO\)r=e+e(J;<B11=e3li0M_?rH6h'3V<9Iq*q^Bq9?Wr?,8ss/Kecb!2V$gD:\+]BL,^OPQ'0Uq=
%W\k7mCAj)WbV,&'W!^AA9jg/plO`+0Sk.>BF[Ba@AEiZp^O+7lTI<f8Xah!j,W%1pUTFJ@<DH%*Stp1BbgR:XH4;cD6eJt^rde;3
%5n5;HLVs?MJgLPlld*.!3?0RiARe0C7@it$db^%jhlV(risNp41\31nQu6]J1K@''aNkj#`KT#X/W#8[k4&KpL1sWoN&t"50H/^`
%<%'@ECUA@Lr#>/<5>"OD:+hMN;oPM3P<%d")\OrelgMD8&YaBq]nle_VdG[-)r=9K'<`"qRc4ua>36Vt"f7Z1@#@DEFmP>73?JFa
%S"/\6=djGO<.g>+gh``&jY38Im5Ih#Br25K>TV1`V&WP&21XjWbhEOQ;k3H<B*3kMoC3D6etZ`%i2S6OPoYe4N:1U6oI'"5N-Y0:
%)?UlE*WjfALSKbQI--Lc`(&.JEqE4giN"^N$]=<HEk=2F^pO1,Cj1OQ<de^8KdRdu"#?HW_)N/pi_`_VHDK+3;D"D4?Tt.LgS@An
%/0^@ngXpZVWg^ge^)RbUOuc4@/I'!WpGk>QCYl.b;Ej@)rW'i1:=mq@)+hQ*-1aAV=@_VSn/WC'LXQ_tD]&?eESDim+MrT2j`6Xq
%]qAU_;Y(Y+i5dr=GVI^]=e:_IDQPVg$\QqBG'I.rj;1q7e.-#E^VX0?I(oY%?W:>ZcJ!F1M"b!'=c7FH-gR>PLd#CIPR`4M,K=oe
%3%li0T9m.9C^@CXBXs*]$ce?_iDTu,Z^>K0fDqWfK*-GgdLJ5i*)%r&Foi^se;YZD,0:"B>Y',/7lT"H[X'4N5-@g&X:s2V'Ahlf
%]83`TKcH]B$#U\e'6_hZ0#ngj[/3mO"P:M<!1FD''[*@i6kgQa@<MW&-Q=$faE?NI`A<f"D9GH-?p53=7iRc=V\QR"L4es"4r@)9
%6f*4cgO=.[p%(mOEJ\p"Obmp#MIL*DUN"%>`-@T1jJ4Gs3u:W=;rpcf'@>d(G2*FYEJ#s>=Er2/!/uOi>mT&t5^#W2=U`D`R4aN9
%!WB=V!JcC#W<LP,iSf,7$Z>ck/'Z8s^A.60c:20?huHgEP^ua3!@7t>fjWp,i6%q0],G*?d"Vb@A?cPOJNj"4V(%]6JWZc]<JQWi
%HCu:/O1[MmiiR4X.(F(bVUFH(*7/Ugf[5G-rFCOM7hG/Q<WcOW,%d$MhL2Y]Q#u9GFuCPb6;*U(Y)/,)G+%nkcNA.)GO7Ei(>2q=
%p@K1(Fl[_X$0YG\A4DOmc7m+G7[hSQ4G8*-4ZJCpgK#Vf:[A/f6a/ftKll>a$AT;gc&Q8l];QU?8eX9TA&#P49&Vg0A,LpKq.%AE
%@k_5Zs-nX>5)_DGEFup3Ol<Dj5+Vl,kic^jZiU@=hCL8p`\GDG>&6)"g*,)a*1Tb>.%-C<Anc>*?:FBon3Fb1kjF<2L$d*9<l^?l
%I5D>!'3[KB_I&0;Zb9Y;r@q>aKeumf+D`%XjD^nD]86OE52Enbq^UY'.>G!/,lu@c'foMq.%K8p]2TT9c%0a@(<6oF.RWh$\o/>.
%rC$LG?p"Q&Cq13&4Pm<HT39P+3#949j!;FB<rLe!"aj`cmV00RPm:LDPN3Z/FQ;1D1lJI,Q?!qW/!DBN_?NOTZDL\9fgBHj=*EY!
%q`"4*%Cp52iH-Q+JaS+=OLK?Z!%@71=DK9d1n1f,$;NS,*089K</u@,-o(LU:W+i1?IE"\9!OkHFT7C\kV9Rk&o$U":Ldi*f#6";
%5em\31^1+,&N%9nXDQWMQ0sKEO`EDh28A[1W3e5U;/['06H%V)-K7EB/=@k<7-jb\mNUVj9$e7uS!k.t5^57;UD.d;[TPmmK^h84
%"S4DM#<KcS())ZHHbuXE;0X]goCFmQ4fj?5h;GPYr&<Z,,RiM,G)I/H#Q1f!P#@=1&q/14cNT?Z24ADgiauMKj`RHklmEMEK+B\#
%@l$cmSGiX<PbRt?B<j4$d"Ij0_EdW??nPcVH-EXj7ltUuNrcY$bgAA1fC!(In[E.,q4`$0Dl-I$8ra_+#uPob,;KR$PpZ2?,e6hP
%Ch8h:c<J(3gunLY-[TpE)'\Em"qXQI@AD`em8)>=bB,2)iK:N3@s<e5JBBiR,kuaebQf%j:+Y,:%h`q71%S=M,JH"\pOq_sd2V1b
%Em!0PK<cK+0mK9[$QGc^b`OSR;en9^GEN6n9Q4MGoWk0'`;iXb1GFjFNgLP1#h3s,Q[j<GX6'hefPkBLL6b/IP(I2\TlFTd^/cRh
%H4QPY'uQj3?ZPM[ScOefZ:Rl'L^lZoYT)(arMrjD`A<jLj?8`-APG]bG>Di!)YKMSlk1X;g#PgF4<+cY._I!si\_$)DDp@%d!5""
%ZNNf-nUl3bN.$!Z\/A'`bq"dQlm>`(e2rL)E&nC[)bpEGVC0rK[EqK[,<-Pf(T`)-aDG<3Yo>-6/pkUIX71SEOl)aPs(b[/T.I';
%;-;cX)4Lg8c_a*Z.g,]CUMZ/)Sac%amW581h>MMU0!m\^M<EQR#Mfu+O>VE[.4K><2M>X`Ul3MUn_#%$2%k"6.Z4C9!meC*fcApb
%ceLf`3Y,"][lrK#F"m%='`9MPW=@`_[U+pP/)^"M9C-6\Qu+Qn_K!^VHEf*mLBoVSK<Q[>h&ijd55tdOA^=[,0M:^M<3e*X)%#XH
%BcF#$Gd>OrV^0sBlBO7E3jo[Y+KZ:3I\*GN1Sf,L(%D8Apfq4Ei780+!sA<%HUdSW@02lc-\AF?0RY6%WhKohG[6mW$YI5Y<eGOa
%)>d`^L2UgWi<;Z5=Q.4,F>QL'9;@a6CYCII--?irG9XdPe4,8M$tBTa6JVr2e'l^U9Wrb-H0@65-<-f<?nphr"9fT_aCN:6oANe8
%0FTuSXQa98<6$K*-XjcFI/;j1r9&qb0d`De,B.`^e+ob!5b9m7.[qmRD(/'U)I:(A%)cYWHm\u6U%fn7#Z',4e,F$[:,n,AKjWtn
%HtOfn)r-u*5dE(cRZJ"1#sQ00",kfL_ZS'0mTM)&'OpD5PX"8#=&fBY9(;2Gh3B]Y\<#TA^.9\0+09&*3,tk[&MDM]8m[u'K7MB6
%.g1+$\b#>"W&pQ=`'+J[^tG!J_n1bRitYCUA?dut"eT$>>DfV.mnuT75_@[-k3]o!$KMWhWWM=S=+[/K.>t)!"?7lnls[kb9H)-#
%UZkB@,4+i;4E*o*cS7Qs?Mbj,$H*@ePmND0GGS+;N)p5$4L;RNF_[+9OpM;$.\bNl2+elO9/0Acm,_*'=CW("6#lN1lI,X0aJNgi
%Hq2^ia3=&m5">pZ1DZ`g0@%%uTZ9HMLR16?GVT5tZAGut97j9*?'[Y@R$JCu&u@3'#jcEAUf\LY"Z,.JLENV<kKC?EKshR6OehF;
%781NB\f6e<QQ'2Jg.#S(j3D&\8<^Re)"s3*f(S_u7[;be'R56sAp0r4_GC0,4E*F)W0HndZ>#n,?qeRf;ieDuXGhgakW7eZ?TN>=
%(m?L*[P0l!`Rbj4Od9N(^/.Kg&r/BpK]F0FPorb0j,O8?.Grt1?p2I]L,Q=Ihd@kO(a9ajW&4eLEE<cR#pcU:)Da#i]&s)iGY95U
%IC(Fjdl"soqTt\Lk$X/PDV]>0&X/L-&1R=)G6'_Y/dQPm<!COeGd&&khQbd<@S/#lq#D$Ha9T0h>dOeWlE$d8Lk9KfdP&ce'^hWR
%:`]WH:9'-o`5isD#;UI:H=n*M.g=2?=7X7?1W^d_ndP<Q]3%X3[ZLMo0neiFji7ITaO8jPe&Jo`88,<uL/+2Ij3qO!bk%N8OoZ3K
%8"'9%:neS:iV'tq-LHV*=ZQPu$7isrCpp"^o#OQqgRuX'2F1]'8'@\cEbHE63cW+'1kS2Q^`m7.$L$,[kg@p$S&O83"6%n0bo6sS
%Pst+M!Zh65].."SM%p50QEQ0uBah?B4qMCTejGdRPD#s_R="R4Vol`W*Q;nt]XS=+?k5\_@/F7VUcU#bS]T6`N)LQ`7e'uFQR;2Q
%4E!DUK.k\]=:$5UPU+)i8f/+K''E2nR.%=j;@R?R28&L4c?lEfb3nN4lB8S2nJj@W+Sa4j5J[V;#\MqgYS)4/Zh;TS0e-]&"rG7D
%&=JaJ$;QT&(R/Cf]XA]5:.L3damWn^QMjr3&g]8s;=ZjYUG#m&J#Yo*&5u1MTd.Nc,<dAmiZnp]G4qqph9[p)KT@[MKY7gM-TFtV
%%>rZ*Q&untTB;5t;`tHEKZ2]8I+O;#'ZiW^iF=;fNpOk*NB,a&GFQlaOOL]iiQlct5.[NZ4B.L)RsO^u!SMP6?Kk1$`XTY__4E"Y
%(D<2;6g'rJg>2sEHP+`B1,*2MPst&VceDs<`a3O-ql](iT]n-;+&K3t)7Scg@53Mum6QE1AbZHk.801,,[P#X"F;f9]IM:&"c#Kt
%Ba,%Y38u,Td6,3m%#QHAJ.0m;Jm/V#B*hN.8W;)*,gk`_a4rb]Z0+Kj>N4R"aBhsX""TV3a<FGu6>`,e":b<,beSu^B,=+t&-_HV
%-$W'q[Z3qt`-?o9Q8"Vm!jPM!M'5'ELa8L8Z_9GOLl([N=1LE=4PQV8!rGjSgE/<JWjVc&$E)gNb+p9[`a6(7+HA\H)8PcIAR_!r
%DjfX&cIhQ3M;Z!16'JjS9"#QD,JL8A>73^!A+)lIGfi=>YYEK=WE);G"oI+_HK>_C`I\Emp*S"0MHhi_Nl1"dQ[F&iP76q`HA/9M
%5pI>/N@!4f9M[M^PMP94"M2YnKA`Wm.7*As%?`D:j'_(rME6&X#;"$!9`*W.<X1h6Pa6]AAgH(.(Ns-`im(I=Rr^7=G]%sg)V(@"
%N'+^+n&\X:h0QZG4aL`kb3s0FW(WhSGDUD7iQ3hAd`CNh4FcG@o`-:AHTd6aA`[s&.2)\5F!Of,Kk8a'7WXq9JDX.CE8"rF$%K&9
%9IC7a!PNtl7iN-PVOP%UNWUVcF)G-oI(8ugUCQ:0Y1;dG5ZZ#<2bK!MT.`M3$9o;;-LY^=M/RQQHtEr6.?KuLJ8[J.n:2I@f$5"h
%E3G-^S&CpGb%rP5HiYkomm&ZY]@@ihR6st`e(%ng-RJ-]:^27JJt_Ur-@%RmJM)Tp>07`\m=D+X-'3s^g()$,D)'rG(nYp;*+Wls
%47l&p6B1"3ml,7_Jg-fU*A>Co<Jm-"S[TH6mW#J\\678M.?<:5WQAdeiCIqec8'6#$#O68W&!Hm*`L@HW-J>iifIs=9P*h-h1^X@
%0hW.Jd%FV4?T\igi.TEGr^/?CDRZ,6f&>\;[Qcfm+('!L>X@:,R+,CcOgJb3_n.NPJkg@'JI5ouG)sE?b@5pF!$.X.W%N%l@W'+3
%>(Jhs*KpOP\-iD$4%NjWJtZHg.sHi#*kA*O0K#02]]4%7j/W3cD&4KeXC@Z*!dl9V3RQ4[5+q%KMRL-<Pd=BPi`CCH73;fZD'#s$
%$"OTb0::]&FQ?jZk6]+%/;Dj-CoqbtHp#lq&!MIWqVfZu7?i@pr9Uckf(D%=mXFtt<Mq`%Xul[S/Lul69O<)FjkEh.`]%o9q3Q#n
%J9,[)D3Mtf`f%qhIJ#t3emH,-."*C+/;iUXZsR6&-gE=k\Mp<%KD6p;ADb^+$pOaWAoI;7TP#pSs'`R0$\$dl,R8dIPe:G-dd;0M
%WJS8Xo],P.VI1/.N>NdK3qVDjmbJqFa:H1%cBgpaRFl.j@s`"r;gQC1GSMWPc[iR.(#SgXZq\VppeR_A2Q!5E)C$:_bb'hoS2cbW
%$=Vg$1=@3W^r<Pt<BLR&^hW<852En(QGm*np4ZI>p>bSCfJAb:l8so'*b/5uq)al0";9njiob;8/!t?i-s[$.bTghLdOmWm(#)q`
%=i:n&9VWn=*`*mKX/"]*;7u(]s,Mgf<]Y6?8h<X9AeIkufNp!2:XEq_(q620!O%qJkp.o3h?4J.h#d\OB72)&>_XFp+N3H8')u&J
%7ef^Ebcm?#pu3Ma)/U@$r_]6^gg,$kK.a*:s#:e^qX>hJar:>nGY6XG.q@o3@!5c*T+_UTikDHf6A<b>fc('=1*EiWg8'o2kSLHc
%'*Y7<M\6j)i@L[E][bm&!MSWC)IPDS-YJ)"f^m..-K?'>J29fu-I=;=Kk2ES,6W]ligu'?Ga:>!nVME_E&CB:m)]<MZ6BY-I%3B8
%kKqK9/8n6*jXVL\n,LtW(M*e.);*6>_'f*gAd6M!df<6rai+2#[dLBQ5Q:b>n1h7&Gf#$8jT?qXGlGoM:^q0[5-<)tk,-l7["f.T
%m'W/YM/5@Uao&=4oM-hVi3jU<MmSSK#l#Xn4uj8Dm#@@]5+l8!fOQn(E,d"b9Np+n^4UtQkI<PDlfs^S'$Uk.Cgj-t2m:#;S+*kt
%UjI4WI]`Lao#kS;m;A5DhsJZ=Ij#52V%`3?U*+N59XIFtKsEKmp@;UKBB),2NV%1+dH0sd3G+>?kq%^5`9St^%p-aGj6RVR1pOGm
%UY*?"J`glK\dj7W*\_f)(K#0AWVoLYVhaY#i@4VjZi5$q03g`Sg@&7]isL$)@\bF0r?<+#[S6E1"IZcRJabNpC8N\(Ie-^<UD'Jk
%C;QAp$]%*.BOj#UaGeu,bJk*SLV[LX^/0M@h&K5E+Va+]n5#h"_Q"`i+^bOhn(H**&j%2960\<gVW763c<B8E,brchXqTZ.o5#`J
%:0F9da[Y%G[tP2Q;Z_#a6T#rqEAj"H?h=I;=s@Ynfj,OX1iVGT30L835+T+P.j+Ac*2[Dn[&:=M]gPBt20f962hI!nM7Su.f/#V0
%/cmj/Q@trehc$s#ZHQ6+DWjs=$d[bhR8VA#0!u#B[.-^kE>j3])(d@$[H/jp-3DNgd)Mr(m5\bPBQ8YB^pC<.n\VLn8K&(o2C\!f
%NT'*c8n>l^p[AT+T!E5Jm@+p*=q<NUiA\tW,h"idcm:$M*>PRsD7%-S4Ya\NJgW*Zgss<S<Kp&.RPm`F"d=jq)[mT)c,51!oLQs^
%Wi:Cu+;K-P#CT:)msf2`eQKN'9g[mC'4gM:=LbIefaNaY$R@40H7,W(ZgM.6E7d9iQVMjR,FS*ThO=3\]q!j$J(n5^BqC[GmOP@a
%HX+D#i0LU$09XO62hSK`7k;t9[#)*Y]>AVWMA',s:GL."L'%E12^N^Oa[fK+,c8qgrGF^Z<p8>J$&;s(S]?Bi0d/aC),%a=-SfeG
%VS-W%-fslGZqu40N*f@-D["ZoVT)rI`Y^dT92;RaX`HJuGkF`nNBUK.XXA4k^iC@H]K7'8"TR76/J[A&cenF`HRRlJ?>A$))*nb9
%ruU_--*.9GG"\)RNm0*8dYVJ7MU.Q#V..Ku(l^r/_FZ#B]XF+sMQPV$[UVrTiUA`-OIlQ]ar@2TqJQBf[0oDaB"(P+S`D'>cDN!]
%,=n`tjsa56\6?/NiIU/p7U@h`Z-@2MZ'*TV1`:SRCo35m?dKC%DQ2"cB,>Ih:DQ%!&01&\`=%<'(3I]#^,ZNr3'!<MLGUB6!l`Z0
%JlXWL+soI<PFbHq&`7[9[,\BdNGu>_-chjN=[!V+4[ho]Hn^.ZkbIY?q6ElV8b^Yhi":h5UaQjAeP@`p`/#8#hIq%t7O\A*bd&s$
%'dFSn`e`/.AN!/\S:N4jJo5.W">G^Tj%KB1R=N*[![Iefs6s"%5Oo+:0R(fhhXbZlGLQm_a't""/RaD3XOWB?GOVn'L/0618#+1c
%O(_=!BnLV@cXX^FHMSk6*RU#:F-p1[_i5lLIW61SRCb^k0[8TK"qDqK$<2pPW/bE)'$,-SP!UlJ$H70$.MU1.;c"ln/L-1Uk2m4u
%S6JPAW^6W-MY$W@V**%#*]>lj-uEd0<1>#[#o2ia8C4D6S"no[-Ue.&U3oXZ7&RQG;*)/:;4:_3p:3,rhNfG$Li5<Wi\9.J+$/n^
%\bNNNq1Z'_4KP,W4.$Y47r"J5X>!j.*nLSPi=idkHdbo8Jks4B4mjg,*+)f2`\X;L*Arkl[.iieohO\on0E1.P):bjE4pL%"4t`Q
%4g_AYc1%Q_M=^1f_n.e@=qpN"Tf7]OI!FU3dSli>qd$L]R?J5DcFq,'6%/mjC?-aE7*C:Uf,#&>h2kRJjMg5$M<&WP7QiDYM.>U,
%Q%08e(HMBPSjm"hBg'j,GVL*fRq/S2k:HU&%9A_\GVEA%UFat!^OLLXlYcAWh'%_hIbqr`O:?^8m9boLl*ln,gH%NN^E;on!gJ57
%9@j\Hec+7[Yk50QD'$(]V8rPJG5oQN5F2)r>4_O!",q>JfP0$54#"j3Ot<.6bGE7/1u\%N;.)A",HQu#XY?Fs\'[0Q%POoVW5;Jl
%^)"n4)\ZtRo4j5N[;ur%GSM@Ja'Dg5_a<,.B"-O_].ub]Fr]<EV(;LnmnX=jdAc:0FBQ&1$A;5\d]XpWmnH^C+:BVG6kk'I8$CnO
%;8iL^2nQ%OIAU@3Jt+a0Iu/Ys$'^83>Pt_>e`c'/r,GXGrqql')=tp)gilXgS:-t,*BiR6a.<J-3Y/B_@[r>ue@?I9\UctPN:ZM_
%,*RZ^%ZeR2%s4N+N"mtOKu2.6+b`o?=r#mdq3ra?("pN^9TWNBcDhT!ZU%_l:8s@NKUN(]&>;`WM%--Q7j0JEhqY?J_/K?WGgPjV
%fqiV#Ws%T[(EUD3;>i.I^mb(omE7'1m%.X\Esu`ZC:1rkVd&.)$t^T,_3VoLWm*i-("D3M+pKIGH@6nh0K2D)dbMk4nJN>Llh/Hg
%ItL?s?pm8B[N"/[8/hpuS`):6IHkrIad,q@%Sc@I[WN?Y<2Tj7%s6@g&#ks'1Ys02>=W$[j6^9iGLW3j8^`sca*h1e_HAF/6+]7U
%08K]kf7'FMhCgIH@)d7R>>rm'3j2_j]6DgDSi<M1Q#X5Ki,S&[r>tR:6$r9cG5(O`*Y"[epjKC+><3iRe)sgrD?GH=_^$%sKs-k<
%0T3T#WRHAYX8d(Hc>YK8,;h2A<:p(4^Imh*Icir/mL]0Wm@6Hek3\-M+?Y*mi%GT<((OkdZdWi9#C,9W>g`>=8up4f@Cb&OSZHUY
%->(da*^<"nf,?'=E[%E9:3qDsT7>K3H8*t9\+bqLl+\Dj)Mbcr!1\KhhsRu-h-mPurO1DD[R[pmj$E)+LO/ijhmU;=2GA&s``0,t
%g5t_"-$MQ$FedUk]hCY%[[$:68Zd3jZ#(:-XG7N[L\):&E78:7a:KZ`'2[-Dme'=9s(P9Iaa*t8ZSBi,UkISiS%Z1P$jJAr3krW(
%0<tFRMWL@'a5q?Th`EE,+#`k>J"A<X_Zj_<b/-cPKAg18POS-&^I'.-ch*-;'@8$pd<3esB&T(9H*r!H`Xirfh*(2s.cL%a=/pJu
%D#I_-AWK.>+1+\kp)i\^rsR+dntVc)mu"'aqtl$>&>L/!j(JdK4J.<8/^0*Jf\6_QSJ*n%4O<@)L'>m!e/b-0!>GE+d[-e(3JgYX
%IhL.5%4YkZ_e2C,<Y$L[a+ma1>lr7nY^a#>)*LOd?,apMC&G7k^)ti(S]pWCjF1Db1/:4al#h-Bn5otaV;ln\k@Gk77`JlafJrcS
%J,Uo\C^uK>;Lp[Y+;5@+1Kuco*I<$_me@sDnOk,)A40d^kgfnX#9/0>mqYJms*EmmrK1IdoIjMESINF(l>D'ac3g*0YOomD/UXNj
%hAZ#jkM`?j'7<om/5qNWDpha]JK3XXUMiTR_#*;$KC1Vo7g,:$Zcru+f^&RX"ZUdI:R`Bja9T]`B_PZikd&B8+1V7.lWsKso!dH4
%"l#]uD]Q\Cf/j4ma7.t^*9$g68?V2I:r`;,S:]qqpiqLSe\>A(X?GG=oFr)=:+8:=<4Z`a$fTJ=9Y>(p!_m9uO"9#g973>Ml5c5t
%+nBf\*C0k$2uB..ToHf@NB]RC_k;OaG'`2`e_?uekC^h2@ZqK,lF$q6Ll\N4<fm)+#\FskjBW@(mGnh/&B[O;5qh4#+"r"E3D[_i
%A4/<qiBhOhmO_i$VtR*6#,fMd^\DSa64S(#dH%2eL(=(5<PA`A`Q%pNO\a1>n37np5gh/u77[6OaC8kE3+=c`4JRpT%nT.7Z/>fV
%2#\Zj2fi*mJ&!"o(M3EU*7A3bI?JuE5Grl>/c/m1r9k%QA$W8P7>CgE*R:jG1HB3ie7oZSHr/K*[TJ40--hjFU-XF`?LcQ+p\mFJ
%VFnpJMF@DVo#^lX-GWDQ#8>]qg^%HHGE+NZhf*Jj!5*T#4F@rkZeM%7e)T5Q4Z?^>oXEKe".uWK-I,`'Gf^_WZsdAIFL$;%],-tf
%^\E?U<qEga*4C,2>J%5&HgXUq)t_qq_SF@p+QePGr:[=reg)fk]f>?eg[=5X8>?Sd%A&(+/uCJA9Q9er#:fCgX]g&)hX_aU>-RoL
%-P,+:EnoW3^M4kNi>#DrN,BYK^=>Qt[=5aDod(8[n6$!4>KB3DR@gO`;#@;]QNrAJ0p>DdkY,[!peb.b;bYj7;H&T8W!K>XPTNXs
%raGBu35=^Yi)<5lj"q146%iju8:K#bS!ZBIY$-_?$((Nen6S&_\h#U:>$G$1WOa&s3?f]H9s85C,,V8QTmc0C[q@GoK^I`K"h;`Q
%9R6uRcX"_]@!ZZmVU2Ws_,?_\*l,Q;8e"3+n]E>F!P@2#]j]-;/N*p>[:QR2_^9)E;:FjB;5>Z<B9jk_LX2N)H9Q;r(-a[5UD3L9
%e?XtK2Pm'7U2_*LfQ_.aM@se?A"i[m#.i(K8#_.sb.!es0^3S\jWr%("?!=JW5''?A(t*8l05fRiW"_H#dM)uM.fkA8!U9+R_mPk
%Gq,S&#.-a.K6[S+MjPEDK!lmU$<e9ooe^J>M$.FN`"m&B\G21YRH0R!M:4F8>//Tb;&nPR1E<49S&D4q3)qZ>AKmHD.`7RJUkbs)
%8YRLQak3sp-F>D)J/1kLF-TcT\]_i8kU"]&(!Jf#@2]rhL=(RbY\heG@U'D60*b1,Qq++mo*cfE%8i29O\U.tA'PaG5!/=4TtLa%
%QfL8=J/8k?#*?5aGqF\R<Bj1s?K.8Mlt7b8crQ#7k[<-".&F1Wb&</?+^l91S<"NNn\JpMBT\Zect.rV(!,&l6\lUJ&;;Ba&QpNg
%1cB4jMOB?ACf9E^QC:2RSeA$_`!a"o*$Z-T9JMWp'S[hH%OXtljC^eJ/-M-'"q`:Zqho[lUPJtk+=DtE6mb?3o&Y#Se'N21'91i;
%8D:rg9$B5O<16?m<8\/kUQ-]92sPX>=98YaLn]EK.CUi7'OeO(@k*e38KT:M$WIrab8SD7&Mbsi&<8DNg,M_<)@<&:OFW;kg*3-!
%^pf"b=ln^P@Y7"-h2E$$,0njNA/2ODZNL)sBL>1PBa'>=dh19bAQV,0H$[<YNn0M9l<,69n3phVAt2_#1l>1Y"9Y:[[,N6!-'-K4
%([5n,7A1&IPaVRf-&N_<j>qsJ1;2,)LnY5RZn,,9W`!<K$"S(&bo#%fMcoEd7l)'k%)pb;9pZGTVo0GRej,bG`0eoQ@`!j+&[?"q
%],M\4.#F6,.4JV]"SF,h\3g`aJM^B>P^k>@!s&/@JfseC')5ed3=VVgapt`gK<iB`:4m^!]6M\//>uiVN0Kb5<?>(c?3]-VOY"1_
%]."5W\6:6\8h#Z_%Yh:&A%S1h1e^Fa6IDuVPglH:(CR'(?ij]$"PV2`X:bhOi^Z<J.8,$lqN#;>9='EiaeBtk!JGNEL2us]OjsVL
%XAn=6CT3[_nEj+i-]K?ua-l(B1,)d7b3<`CG7'4coN!(c<CUmF8,.gQ7+_Lh@Y/9hon9PXW;s>l,r@?^H:YVX!X,A-/=E6tcoe'@
%\:Q:j^eR3$'9uY(Q=DWoG`Lnp;8GfKE?#q8_UF#je'+XX&Dq6H_Elu:7P#P.74b]\_h;MgK%dJuofX8=]ln+f='FFtF2;CT?f66*
%Wff;$'%V<W#!_K(\1N?]o?KY29aMCaBR`pN_O+[e]oP4N)(p("aL4.cUCuCL3PM_sYUh_(_7La08NtnJCH>mHrpqIMlWrasXNFU(
%:98D3@KpR@-Hr\tCQcKk)eFVG)Oq8QqGH/i7H5J[,Y$dT89KJ0TX1"S&asLKi)sOT"C*#mYl$^ue=fHrT^56jENTsd8>.;rei[G2
%C.ON(J8'8NNGA*<D:]?*TaboA;$lfZ9T):]c^-'#O.l8X6oih#J+J-nXc7h*'[(%skl7$g2i<_K#sUg)Z23>eDY/Qs>EXXbQO*T9
%\Q<N79FK(6ZM4O0Og*C?e&,8sU^QIH'i1PneJYlG,YKGtY<^A>LkLGP%H@XNqS>%(=@\Nc@<2/FW^YAB"kmRC4s\:^_l<[^&PEh%
%"b>SNrluOW1eu+t!^Bs&rILZ%mor:UaZQ<F&)J(Xa:CVcQD(2\`Y3]]11=b]5%#%)qA92)XreN20eP?]S^ZU8D:;YHWP$b5"(O"C
%[tCZ)OpLAQ35'-uig8H!-PJD284B#`JsuZ)3r+cW"NRr-oCdC\$DpX)<oHl*0CeuB7)&lB^buhcHrrRd<ZI/g&uD$:cP$":+ek-S
%Q*h1WBPY\o2RScLE3D^!jl@^mHX##_(?QiJ?^@NsZSNF6_LhRa`6iod^Q%.HqebUem:g3I`oDA-P-<(m;9W^2:&TRgqg.]6<TMq]
%qtQEIN!ta#1hudW,AQU1@-j[]q,prNG'4;(/BrgQje:guHLK0t!O1860:$j+>528)1Z6SkJ$/igo_K'k\=Y.;`tH95./?_j$m8tj
%qN8^u,Hq$(-IT2%R=\j?)tdP'm%iGXesf$Qf5AD*m$kAG*iXS;gM<GQo3uG%h^?HM-nsNu%f;gQZ_>_D[D:kp2`C8uH3qa%%Qh^X
%rO.'Fb3c[MTCK*nSeQ&0>'KJpO(NmG(i6%'AcHH'lIj&L_r.&:\2iPHW0LW0g]'pFlLqgV=g3#'CE9hWAjV\3HMaV-i,5I)#6PaJ
%9G2#N]01O0Z^G6r@I`eX']4ob0c_^LTq[0R"D?_Q=]YC6:'b2Z'^klR]3)kS56o$b4BlHN@IN8)&:Zp/7.1PQ\>b?H'_lWj9)UjH
%"pX_+NTYeLPm@29rWMll&!5iS9JH?.Zh=GfeAC)L4Fc$s>OnCSB[;T9iO2"!iOo/YBjQ;f,kD(E]<(MTR#@j7B4m:Nj^(&,>OpsE
%T!kgE?SoI6[_:L;nbcY>T4<K@#hlgFg[0RdI"F!Ij*h4QgR71`?Kn@B.S*`\pWiW;Fqr>TrZ"rB.(c*\*%1,^Et?KsmkC-qRg4"[
%cc/XjU:HpR=+BhG^"58+.6VMYHH0[l.%5(QZ6;WX#A(\s3]j1Ufu#_&kI15(]M&mHI_e[6=m<;=$AA\TPI'<==`&qD/CNkqGC.U6
%?E)I:[MdUB0Y$[T&PnmCH_Xl;:elTdCiJ)INl%7**QLXh1&TmBVefcoJK0WETAuuX;6$,qH_mXb_6Da>WS122iTk5r+q?uJB(qAK
%?op$=P=-_[cF5&k]D5&G17%2#AS#!;_KPhD0g*ie]&bSf@(DcE2Dj-baFKa]IV0ALIFoS\qRP'!#)"bFK;3=fFjrJlQ4Ec)ZVt(/
%7>9kGT++Si`!%/dLmWRq1+5V+$;[/,CTY?Z&=ks,`W+/@liT;@3$YlL_P2Pj@ZgX3mF"c,ho!n-?>%pGm2U>)rfMld[l_lLS'CB;
%=nA:lg?P5T'RBm_O5'%be/lp<EDZRUVg!IdNtcXFJ+cqNf8b3ic/Y_he$J(#^'o"3!@n7K7Q`\Hid=@fSC2/2,bi`$(DoCIa.7+[
%1^%>K<m2.[.,$&;R/`q@W>8,\S7]5fl+)R@bn'#=al%d!Vf$3pJ$f*N(n\O@7dIR*8l*\Q\,Qn*G6#-m<KbiVGH9OAS@7\90"tld
%!LIKmhnr^]:+8hO;CFXTic8"Y!h"F8fk?lr+$3YO%Sa`(i7Egd>U:U>>ip$=VJ&qF[u].16YLqTf4lA%E$%o-aX2fs%?&m,Dq#/+
%_r#[bs2M5?D[YM9p5s?S*H;V_#&q`Meop<JZuqQY&D`C!6#7>C,!)p[:/7*@B3\uSYDYm9mMIP:2Vc0IhJO3!#0PbaDFR8r=3Y6q
%:\j"2'uZG+E9lkB"p[Yhdp:n*5Z:E/f*<qr&)'0mMIa.M3b^R`E3QKU38d4Y..K:rrSHs3GJ@2dkbP.`B\b$g=)N5(HT=`c3aI1S
%HI*O)&g+Kj2<=(ljm/fJ^:r5`U)'WZ7%o:/_Q</@T!N+2(.DH+J%>?C]9Lb1mTG6+WZ_abQ"sgZ>^Qa,C6A')X!Pb>3s?5VKdSZX
%3*S!oD7['@T@h.?r"`/LjhDXF>\s\@I1>)+T(^>IMk7d`=D3ci`gr^BP&_U#(bH[r!7Fu6ZZAbTI-J1fHQQk1=5*VR<:>Irl/.lP
%YZS59YjBD7DiG7fr)/579L9AW,+Isd3DpjJGY?*UEps/.j>$?%b.[d?H2><n+h+E_A8!#97N%\DCDRcaA(pFOeELu=Y:7u<Kj*<K
%<0T_C@HTVZmO&Y1_9#Q"i9u(g.C>$,`'oA`rSHe'EUS+,jh9^6l:``c38=+I;j06]P`Gp)F!=*`b.A[)e7iD6Pe6;b\gfkV<3+Uk
%dO+Lk6H9.M9li9H@R^\7%\',!6PFTO0f2&lNU/p=L;j.?=rt#1-P\u.FirpA7.7M5];WYU)@!.YhUu_NIAGj+4:Oa^T]<-.ROT;U
%<3t?PcMs,<(CK6S8LR$iSs?e.V&/N)d#VSLm?QPRD81>.p%Cl>%scI%TRkR@Dnk<m92=mYb`m:K4,oA"kj<PJ-Va59`k:bs!YFQ1
%o/:#"A8jh3D_1;Hl/Sc6Ut8,Mg:V)%:i[W`c=`LgmrDkl1<g0.SKir!PfM%t)'lXB3).DUW+schJU:<eKk20b9!FCUb/.$c0t2i%
%*)e"S@W!_)l5hOU&Ht4@Y\<6E^bid(>X,_[HD.F[nAT:O5F@2R>kIdapHds0%qdOYm#=Fcc7ds+)@.,okNKI7d%">>UtIsNN/W.=
%deUss-le7pL>moL:K1SQM4P11i'*>\5E1k0Z_$mbHekY@:V,lq"j,[(&cjl?*fd0A;JD<tIt(-IO^1/MkeTqZ$rn(dYi3)r5.MfV
%I4iql7CJheH<K!)T49RBdQ,EoN[(r,rgG<!o9)73KPRuk4V3O_A`7oIYMEE-f\6R4F.T\U#XY#.OO+<&d,SMYloYUfn%R,im:('>
%/l9Pdb+A$pIQ[&D5)RhR_A8'8XNaC5Q3?+qFA>(F?7_.badf-(qc-l^AEi@8'pgTCoFtZ38,8K(p6J1k9f*1Mg4R[:2\bqK/.<W$
%fsNne;qn+2U!YX'?us+qai%R^`DnlNS<N"7n*i>G7nd80)@q%X7`q>]]A?Wa)Ag-:4ZXVm6-u.`OkI3@FIq`0M[s"irVksljD8q!
%8pEZ``6(M9R]'5j[B4c8"6];koQqsNrp\6?s/:7+JoN[(mR.5k[b^(bZh[\75@`bi;KMZ:!(U`UOAE%5_d9h(3eZJ$n^'@iAp_nh
%:6u\4kG$)I()#c+,V*nF&(\D"hjGCrFEP(F3oB/0NmCN>DY9#OhWpc0>E!iOLUNV/B1k*tBQVcq@?'q?Xkl'$c;K.h4d(^Q:>,Q4
%ka-bOIa5LBZ.<jm<QjbE]A)DbSNNf_?T"a[%@#>,h;04eieGG+ZYb%a2K'r:4Xp#LDH0=Pk=k]AR)84%WVR"6%_-I=Wi=uH\=U,%
%fT>-m[8D<FkrPD-nk>YIQ\jPCg_Q;o-;P;"PLet+qL3aQ$Z^.0*H)b=]a5a#-jAk)B!t%(9mR2uAKuD,cf'BkM`Q&p-:r$;-2ePe
%@rCH@e5*'sDjS8f/m7MH"S3\_V<0uQgYL;Nq$4@]m$;VA2lN=;3ssS;F+?L/VjQcZJ$PbQH8_FNiU6g!.l@0*n#UU<iiN@=f1)kF
%^#1TSd0%UgfBI=h;Ln8k-0Wu?d"U_NL-9@OeLkuX+0/O*DK<G*n6AERoFs\XF8=aqFbg.Vkgmj&bT#T6D1=ebi(]M`qtYb'K@3os
%#ZGr4ce%T<BP=s,n!m_B[^jgJI2H>TAY!$<g'&JD4:95)-IY?t$J6Ad5]GB<M[Y=(;n1c4_R/QD&"DB<]Q6$TTRs^]bXPP6BTK7\
%SM732*E=@k7rWS_C+%3BM\PhPqs?^U2mLpj;:5FR#N#%C:A`@?#)922*4C&$cVAYqc-Gk/E0mWe:Y/:nK?.\V62s^=@*cfOkCWH@
%+JC="e*iehD"`orKR7C]VTa\]ptbr69>E&`ktcFp$V`jVE?+u-`!hRh-9:tg']#:Y)L)'p(U[SQ4+)q02T'K!Xc/5$Hu`apYnNWd
%S"UU[I^K`7S`6PE=9]#;;`L(jTk>/iQrV^+[H8n[60id]+$<K#_`h;Llh,7QICo;Fq]TY$%^9\ZjOD4TXsgh(N.gpr>7<t39\f+(
%Q6,WniC<f5[Gr7bb'%W3,>II]"Rf4MaK+jEa4K2'>'dH$IBiV=p3h)NnU,JU^NOXBkFd1dIcJlD\a-XuZTPalT<5<^bBI!YXkeCB
%hn-5jpA2[lr`RE$<oq6kWef]Y;)G5$WZU#VY,j1g0Ag#;\pZVA)*Eugd*9_mk,#dBFamLV=F[WeZ4sdWCRsS!Xa7O*rEu_1c+R3*
%TrBuRhD)4cL@n@2Wq#ENgQduZjoCK$4M5f<?Tr8Tj!ud_T8p+iJ8XZLdJ_mXX^*[7^3T_=c.gB9Xo/+p?Ggf-hQ8=L2;YIj)3dp7
%eSeeXCWrpJm6`gcYJs)ZIJ*P_022%`jnRr.rT`@GG%b3?!_,@[X1-%0kEVljf3`Ja0^(girPA@PI(K$^^9P.eWB-Z#\l.4Q^YIp:
%]PR#,5r[Jp\Qc2d<q9e(Fr5^2>cM%/f5=S1h>VY7V0;f?UXhW@H2%.5bD2"X<q?S]F`+>LD]WrN,$JZKIcnko4.Z-?pSu88mp2RS
%hg0WMg"a=8)(0B5Ab#bnJo:5?o62^MDX7/@XlY=r$g-O;ElXQ$_7lrA>8uSQd2h28Ct7tbSce-!osT.>U:iXZg-QGg=Zfr\S%md^
%*h08FT#7VRX"1T;V9:MmDeBBRr2ahLd?j<j>4;ElV<<2Dm`=5-n#5'Sh5`6+]DCZ$>a@>FKmqH=<8FYth9bbZ5bIL^7cN7cL\6A`
%d^@)k>HdqVNQ*'s;_(fM\qtT[hh^O?Xh0Q=qe><6l2rYG]=n''>Ec8O##Og4kgnS%X1)[=hSHL7kf*,@ingS'mqFZXLnVN&e\lS4
%V5j:g&DlM9&9H#jYuEe3=E:BEs$5cPS)dnW?gCLib"hoaXnr%6K?pUCk4L6)^&.0<dX(l0h9+#OCKT9$dX#$KOU=[Q@c"f0%$gNm
%YJ0pZn'#9uM75aPmuR%jdc5@th(@?]?@@<MFcT?+m5An<\pJ_m"g8QI%,J"6&@\64j-TKZ/,fJ+ZhVh`(\_U.d\P@DY_"fPhl?CU
%pS6@l:-D"Y6PV7,2?hnfhHE+4CXeD627fF8J\Td1%QAK2n+KctGD<k6G4#me`j%P0RK;^0lG)[m6J)dj[*Ri/AJA-W:U>4Smb6ob
%g7`ulH?D/M\litGqmW?of(,OW$"LoK@rndCiP$G'>FPTE5aHgpY&A\C9e-Bl<R^?]-P%\fhcCmXCA[bS83GP\CXi&Q?BHM(YRYI!
%A%hdaDd3f3QX<hGG:kP0$j+"kEO6h>f8d#BTs#h:-u;kiJ*07=I(Z69>4CeME:*;lh(61G(dAqTal:=5[pSG03grJ"r0o9`j7:39
%5-Ms!SSKUgdnam)OZg@bI/ikffB^7WOD,&N]t/K1D>7Q.UpBshIXRn's1ZVblsF,OQ(<]DK9bU])pQB;qW&rEF6DL6)74t\O>p83
%[*eYfj3jX'*druJ>Ku1<8^4*dYO8Mmbkk%c8p'gOjQ0Ed(Z&DrCu)i"L51Ro)S.(`*>Y#,I^jLsEp%"FBBS"95T>PnpMBMKGO(5q
%S!.'WcX3h:"`s9=ID;N1JKjTu+plm'X,$BFrL4nLX5AB(?^)Y"qYj5sfC.UA\\30/m=$$4hQA:)[0Ok@i2fdi^"EWchtmgN*kqap
%\ek:%Zaj"[qE$t]F.'bI3e)K@Y#c]OS+?^Iet%Nol6Z&oh-L;m]WqTgeQ22nA?n\DI5:S5m4Q7V$Es^]U+'($U:t6Ak%iDC/ZRm4
%qf3/G=07%'4iP2$Y)(30S&T3:0.I\n7,?A5gW5/Bf3#2fiUE4Le;EXjl=YFp%r9q9\@%doAnqI6.d-K97+eb8_^90n$Ir4^^bWcm
%o/8)4n;9`sP6)@6V2p!SQ!cN/C/%pifb\./-#>O9@]Xj&eNE3$7o^-G4KnZuePE\01'lWo?dOqgbciWtQTm?b]`qiSS&s`20l:_B
%k*=E=)!,cskMhD>?7fP1R.^/uGV-46XUu-:fM#QsroDfN),=[p[-ncWV=msVg>j)bN%ZcXYNA?c)GOf]7QjdVp:S5Kfa(-!gRT5<
%1D1.*rN>O"b?+88+&ps;28=_[M6ncV$.O@kO8Ytn57nh5,IUD9*=g@s&Ip`Y*j>3k=.`O%c`[7Re/ph-o*9@5ouZJ*RY+ugh-W/.
%?.I@$e^$+;r&<rD>3uGDo'-hNi_C,2+!LgUj$?[P#6XD6PJC)L\UScQe:D&=B4qc5S&o2".^Yq9?O'3L]18ZVa?`(0nM]V$f1UfH
%7@.)I?_9\o;r9[nI+P;EYN8;6B(>P+UQV]04KG[3FY?f;]\;chIVlgLr?ppc.nfKrp\OhmQ]m#"#S&9:>pI?@\;h_MWk/N/p<D.4
%_H[0Nj;.M@4.e$-)`QX)GJR.IciEsaA5,EM4>uiAP!ShVQ*&?jC&,lQHdA1RSXGs*^W"DCX4(7`f\/79,`c`Ye^o.L&*1d-HZcbJ
%d+ht(\C@I,V<(J.GiRTn.S\4B\mkVT^"H\<JHkR?@o\&c\?.P)M;GY]*+!Lb>-u$.c)+@YK:7C0ChoNOg/qO,>P@baH+F)9X7q<B
%)<f(&He3^Chg[E6?Kc4=WESH#M(AE!S*<,u9Fg0B:ZtASb'8+&aG)4&*lP20`K-"hr<MFV[']F.hRN-*a]X3=Wp0i\2srDc4Ah_t
%Pm8sK?3)sq75VB/ZO,2k]$CtI"FPhkV;Conrm\(VU%H=pI*MuM;>WY=K[%EJ>E+[cmUl.Wk,Y6`6U`rri(`7Of'srhE?5S!F'm5=
%NO51e)nE.\h5CM3E@#q;\sKk^8,&(5lgj)qbq8iN]!HU$*.d;fpIU08j0'K0ZM<A.n)3dW?Lf@lQg-7+o!l!=[eC(VD7M<$SmBL+
%;/T`DGdBMV-JRI/?/+Na4O'';/T/nbZD(tkl6n;TpD,tk2r3Z)BKrP7fI4YjX/hN+Vq(HTHrc6Fm:QOI]^Nuc7,PY\A;^u\r=;!8
%H+j+&R%9`6kl1GIMh(<fXi9*XLPEC[GhRi-^N\;*f!oosRA0d#q>0;qmI9M>41FX\IJ?WP]_nFKo^LFs>BdRMF&or+Mt"H,,aU1G
%5<q.k80[Be92?U/O5!Z3lWeaW*<^3O8NjY*=BTJ]ID/0$P'uV.NQ1koea&4;P7<WJCJWRnMPRC[Za0Ghr@3%`]@k'=Vf+*<Z786I
%a6BHF>gZ>^6>JB_nN*OUoNLbd:<nk=^&;*d3#mctnZa#T%1m<_#KNT6DQP!F%lnO$g8Q+,W<('*LEFRk*H'tTI-^4$G;n@37.Td/
%'+b<PQW?<-CUMu%?9bKd];GmFZ2XYZ'#P3jo<7HVj\#oTFSUB8&8f'_>Oi,:p!3NuDOJK.?2Z1'^34Cr0>EKX0gI;Ahd3MQe/iP[
%b>7lp=7/13lJsEGV`kU-?<_pU&maZZX1*EdcRRVbn]e]q)`C)#J*q<#LOptYk<FRXg3j0b[q)YfD:*)/W+9+\X?UsV>HE68WlAFV
%kf<@Ueu^;"gC`"#Yl3I^*?7!"_/,V<4l'F,ID*5(&07FcZ+KM:F6Cre@V9h-kM#*nH)!C*[WCiYG2pL%CJPlk[OOWQEplaErk[,0
%=MsKLN0pb8H`Ka2fK?]u&j!LJ=?l&H\X!/AG#im/ZbBe;^XG@el1L'-00O(*GdTC3UIsnK+#\$h5BsP:h`Jqtk?Yt6kN7lS)O5(k
%J=W%d_Je$:(Co3g5Irc,_6:(tCR9Q7pYN*$Y)5Z09^;36r2$\?SX_?g,QL:%hV#(pG]7OL/@(s60.b8N,0/G>)]t)j.C\0hJ%OFG
%G:fdYfXS;ZD-d+i=;foOr8]'2<nNA[;Q]Qf'lEd:c706sH?sq&5jT9,_VrZ/rF],8k0q[nZq]N5XM$DK(+RH&]8`Q\C0*Xe<1BrW
%)tI.nal85ZJUqVR17P?%+)Ko@"'o6F](YhbV7ZH&fiVDkF*U^8:4$JbYIq?-*PSWq"$>*V<hA`\Hk+DA415<sCH$04bhL+jb+0?@
%46D5pmE/2#2b&$I3VluTDJ6DN/)BlfT,UF_efZ*']?=C2G-S\94mD:e!iau0QqSh&o'\8gp;)XS?,>`4ouYaUT'tOmnRg@XWpDj_
%GI4Ytp[h>EftrB<e_TQ5\OE*B?FV^Tj]M&9$*h$i\P]E?4+P*.5@?UU^@b<_[kYD+d[T,s#Nf/O*+b1PkNXu?_H,OChdSN;X2uSO
%pYE`7iB]dpfVol<_l`dPa4$O.:W&Akf_CBd(_k!=_<S.lH9\dliNN(+&(UD)c`[b4q7r'pQ61K:bI6iRIM^3G7C'MY3mft!I40Q.
%`,B46pnh!I^UAT]-N1n"[%4PUI_U"bJS:.n:nqlXppk[P;6+:fd=uuN#%+4AgAL_X/mQrXb$"]$o%R7(S'89@>Pc?;-+\I'A:t+%
%gWsE2IfJB5QQTD^kCL"tX<H"!S90P'[qpAu?9[(uOfo51l?rE4IXbMBeb>,KhpqIF]&gS1ge#%H%OgOp488.A))r8>Zul9V[.Z5T
%4RTUPZU`,mqlhX-VdP1\mSlmRoUs9iT@c2V:P[fp_?MV7<RgMM^%/Q-YeI]\s'^1^2c(uqb8u:RM4UfW?EBrtbSCY*^XfT\hJ@dh
%F8b2GKqX!74M6E,:oiKgZlbjj:%J/InbI%WI29"eP'd(qNO]:0=l<IX@9H8%^7/gFi8aO7gU5>t]p(EK_G.6091Q_c9e\(%oC\(P
%[#,X!a7]/Sqqk9'Cd!(B#`PVF_b^eSPnUA=?<jb,L>C@,?.n'th<-pI\_O=lEt)Rnams4qpWheEp[cER/PtQUq!E^VcHarV_+Kpb
%j<'tA6I5;d)*4!I0.WYQ)]sg$pN$G:YT]G#)sRX+p$G8J^4$E"s1(1&Ja@1p!NP-0+GJYn2;\'KAZNH7Q1M*ZIJ7go741cGj76/:
%@se1Fe%7%GJU?"GQJ4]S'Gss9Y(;j@cF\6FOS>>0I\C'l5rZH-518/SS,l.CM@-6SBJoZhkoDt%H0anVFlm6R$<&Xlau>XLT%nQj
%IBp9OBVBMCc;O)A;j#(TiromhS3C760+V)6l.TO$]BSpH\bl!ECZ=$h+Q(*E]*>$r?/2/[CFu"fj*&mT\5/RZYeIeaEW<,r[i=R<
%3;7=A(P3Qs/aR;\r[b?lE2U/aNKo-]A"^3"4c:9Xpj#V2GNSXdqRPZ55FX@C)dIU[$OLU^oWYWLHNhWNK:C[`2n5W+IC44kqhId)
%?iI`fJ*r%4=du7qj)2II+78I[kKi!J:X-T,3g.JN<ZZ.]Y6.)*Rr;8t?L$"UJDq'N]$XM3XLMD)?M0ao<'=,<@6A0uT"]kHHZkn?
%;6Zf#7>P<f5hG:l]tMu,(KEiqHKk.(O3alIo3uA"eVDV777lWpR$V/d\$F)\i>Q$_20'&-Y=I,=8)5]Jc%GlkQeO$EB]@TYZh&0Z
%DX$lJgQ'#Fq<$[OlcG.J6:d;tX=lEqB,04Qr:C+#hWse+lK6pc\Jqr!mFH=>nb%+,o@e`ONGe_jZ6F^C<dP+EmTfi<XD?(H@["T#
%0Ab5$gjf'd,\/MFD53Zr20>6@b-<l&]XKt'TYL5sJA)9=8pYho\UL2dla^M"BSL6PpJu2qH?'I"dE8$kkn:^:K)2[t3LbXhs%\_q
%`Vb2Uim,GGl4*0_?Fg.6IY$:BO!h]G[U-B!/2gl-51LHM5@&--VGDJ2/u4@ZJ6(e%KCpS%R(tZ,,T&%)BmoGdja!\(g"4%[W:8AL
%rS2+CQ)j/pQ*)0Bg_F/OK5T&2s4$g_\+0_*9l#pohcB="#<-'&V`+#`P/%_br>ml"Y?c!qH&>k7eD/r"A#)7<cGheRdO2`q&QN.N
%B`@\Id_4pKj$nN./Jtj5!#TVljO*M*1(_P)X0Jeq>SM;J[$NG<GSJp>Sa@eC0*;GZe'N$E^OOU4XXC!GDp-,4lc&h_[0,p9C9LHU
%5'ZVcNWl%lI0-NQHS_DD,'c)Z>^oRU]s@M680"f)cPkF$NUDRgolgZ0,!W[)eB1Z@HZ]C=p=pY6#36d"SdR2q(:Z49*Or,AlKs=p
%/+,C0>&6%!4j;5E26O&uT&-JP^2tdh)sX,u?[6]?C1#[u:+k(7$F%t1#E>33DT<lC?_Y$<Z?1Gs]/mU5Z&C14>s*pi0,sTClRS6u
%4`EHCk2(O!UAj'+hu%o/ib?"cAZb#d4!o*l-c_)J#DIT_T@$VLgYLfAhtW2=i'$1a=$EeH4!Ahtn$h5W'tS_202.+]J=3Kl002[N
%0f22[k3d0fR\S:WEMKnoV1XDcrbtbik%>Y+d[_#;rW&c4,LH`E%R8dj#PnJYh4]%g?iKlU^WtX7q0D828;3cSFJ@:S96rq'fKM3_
%\joFmpP;]3TD856B;p#O2Yc(W4QZtd)O:TW^<XmT31s.L1odX__ucZ,QV::PU*N3!;U4e%T%\,_66O"R9#WQ5&N2%LnBL"s+gL+:
%;j`rS.*>F8Jq<\4@O[GdJ1F+L9'DDVQlAg9=%&^`W68QM-Wj%g$'.a!<%U"5+tb6FJu`V)XTL7Pdh:k]lr#Vn.>p0D91e9(-06rc
%a>gb7^\qr?0c"3$n,XUt6nH3N;EJ96%4j;k`AD3)LpFh*7\P0=a"M_tN(+[@:uMeSJrl;.8Ykmep`Ee<nV%sT5`LUc\]+o_Rg#H9
%'5;/_Y`+>Zn^9`##t&[gG5,RWfOP\1Hit5>e"Wohbj'jBM%hnA!;h9k*Q'qd<1uX;1^(Rh&XP5D@K:(>%lDWO%U&SXdW14N,`-FK
%a=)\lP1WV?oW8^WoFU'Sh\IPar_QTa>Yp^G(our-1i<Lc22T/ic4C&Q64dtWPbk1583cmV/@Lk1PD"]<(l1!+@Tqc,gI,:aU;.9L
%Rq$,AFH4,ZY&M\!4=QEl$,JA_'Tq@DQ>$X5V6p59`4[@JM)('<YK?jKd,7g@5T,oR/Z/$Z6;s&ai>*=ZqM'mU0*-+!"DU=qb&ddY
%UL4-'_2%/T-igYh>LE-M5\^bj.026("6/pX!6>d#..Df?P4XEX*QCJe&n[^)kTcrSV9=U[%`Xs65a3s>`u8YUm84QQXo[n/VKm!:
%>.^L7'ML@9C?DB/`JecfZRH!k-)IkA\Dr_!?t3]!*hV*'l/uL[`g?dU&X@>YHYE@cN?)qJbi%OQXRZ4>U(aCiag4%%d5bUYi_k?[
%e4IHd.P>@kH[rXSb\P?3"G)G#VnBNpYn465>u$Ut/O]=gG,*O^k`@?Tm8G=TCD+U1_?3/iaII/pZb/-iSh;lAEHg'"_.T8A!u&e.
%/'#0#MrU.!AC49UH7V3(H6U[$,<3#W$akPJkipkn`UkQ%-q$EuFc.ZVY@P9.s87e^_5!4S;AUYD\8WK*i+$fA2TZ"cEAaWh->:FS
%--D[!7,;<f!h\c?Tk,K@V5%iD2V9tj`NgN`Lff\-=@SHBJFKCK&>PDXX,Vp[(?Zp2?sHop.i$Vl,O/p*eW68O@AG&74'It!pkfV1
%c4bsTk`cke\3O5?.8\]Yl-J(Z-$RjL@RI?"b#mS3N;,/L7dj.T+XR&P0gFl\:T*4<QMt<)dM];g#MN?kaOuF1(P>1*MCe-`]jM0P
%nob(-iIg%-8hihg1%RIlQp&i'6.nIT2/AE:lR"@5Lj0gS@H3N2`EuIfZ6C1:)e5mZ9EDD!)GsM(XK#Cg_q^*gTeXHnJr.!>4u-5I
%`uG*';GT0+=I>6fRBV\sjGNMeA_`+"_a07'a)MtX/o"PgNX4`@#26YcS-mc,3Fsmn`_!"=8J!l#n6>3U,j@[Z6N<qX!\EssKeBnP
%dZOCA.'b`78-mW\-Z$_4%S/Jcg-rFeqE8ND_B?tINI`$(7P517*=DkE<Y`DHXXH`1OTjOdKSs;kRQ%s>@Cb8>ZcfeC=??_,Dk)+r
%JNdt?0nYN(EE6<YD7sq9E858?>B7ZtA6[K&7UjIF>@YO%8SJP=:i!%U*8fV=">VfkegXXf;6bQH20Fhs0,2HhQ*u4ffK_AC$tC%R
%?t(^-PrX-l\P'4C+>N0mS>]im_pM_R;l=U>'[d"[)*f1uOmeAga&FQj*)XRHeg%bP>b@(XIC9;K$j=!B/Dn>ZM!QCg'FPMgH]!Cl
%+HC>I(eu8dNo^hNfs1U$Ffe59`ZShkEa9@EE/^LFEEo$1)V56/N2H?MFXeV)+$d[66cY#m)9@IP;W`IC&Q>T#cqq##IfP.55qauO
%NpDr&0OsM2&.!)\(T[T^V\A2.a3N%N^f\2A!CCVs$Ap9F;^e^)@kY*_@=92D%p:7)=t[U\D$:$HIYIsA%$YoKAOne'7lfW)YRYI6
%-341eLIOB8!0@m$MAY@rm+G*r:?+*G9[8X(-VFI5kn/ZB^^G9AB/r%>F.6kRjH/n$:_pAs1j00\(S*k[`/:gD0\eGRK%fqsg1b>a
%"FuUl+!h%umJ7,W1eq^op`Ee+.$)a-nKJOh$$=9lBS)DkZ4*S.*<cM7h".NH37/T*57jbJ1Sk_c#=4r6TT9sV`2;Q?i&OU_?ngY,
%Yf7m3Y@@rt_^1sM9M>u3oD@V*R("/n#tN,6KOCRn5L(B]I"]QRXs-i<\5FjuEPW!Di>(P:-?J=/S>cWVM;^IF3&*#<P*mSK`['*E
%0H6@(/-mh^JPoFPP;(kV+JcPYJIAd-f!DCq$YsbXW.fgPP<1:"]jTsL-)JF^o"`?Q:KE.80j-7]@.H:mZPeA/n7eZs5t'kQ3H<sS
%W>HdNQ0tkT3US^/SaO>3p@,;q=,[W%V7@PAQS1<Jr/G08N,hZ1R!K'hNYk*A/&kc6Y:\Gl9E>.#&P4O>\_r68*OSeP&]d9FY*uTE
%K9_C4LZk"MZERjF'r[LWS5=onNm[_$_5mI`]_?7YnB;):*'*C%(^JXg6m%dU+L?A!N=kJ<J6BhLE0-;(mK4>A=jTcOl1KY7M!^@E
%$l\t8&mi+J4'=j%_V\efHjS!\n%s+PD6aBbgTfV[1Ya(Pqe_b>(laP6]&D^ilSJe.S+^C@Qo8c6Q2Hd!S$=&SaYA1+l*P!=1<bN.
%!ZS")%]#-EU]`;&EX+UGBpoqK$Rc`G!;%,q4J2oq74t$j5m(e5fU)ti$",Gp5[CA53h6jT#rG.]5dJfaE[a;!Ua:n`)&kESDuhXN
%09fn$MPQpeZ$d+b.Fo?g.P_U(atPW*&/-S9FtuT<WX%Q?g+\X,--0sZWNu/L&k!tBe!Rp=MH%ad'Y<d3Z3F(3+J!>>BXG6^k^X45
%D9(jN-q4ZE)X/`'kTC#68WUG&I1-7/$dTA<TSu;g#U!jjAWVr":a=JqWWDLCqa*'h3)UK:NtJJ&$kU]L&Z=^MBc1VC4)h2"LkW,7
%O:]tjMaX@CLo%'tk8k(ue6&@ZWC4A<,UR(n*!+jr"=0t!W/*#G1kLE=J!(*3^BB?IO]_r-_-em1f+^MS,[[iV">CJIGtX#`E"ZAp
%lWd&9)d1kq"\J,U$#SuGQl/.e9c+%i8RmVUTd>6BUDR3+2<^II_J0;%T.rYh`jA;&"#J<8U-9]o7#<JrWA8VQ@#TXDOL,X[cI?"<
%fOg%(\l?i%)B&p*8G8sh7C8j&J?1[<!<Nk95Ef6V8I-AMA;mj_$qWpm\ug(47HX=e(_6pj]qObk;*\f,'G:tUPL@Ni0nJO2!osWK
%%;AE8.uXK\D/B+T]^l7L$M5V8[)0)W.)lunBu@%!!_@L?&8X$Y`],_=&j]3HHT&`90k*.25a]!S@^3@'%iS"\S&4)/5q"5)4iWY>
%O[@qB5/906NOTdI'a>(<4?,liW$Xm&(_i/VFG-n1*"=T+RM#9Zj!jaY<"W(a0akd=MWC'9,Ol&$neI$RXp,ZO@3W\h.;^F<4r]bZ
%,41!=18;Q0XKE"G;U[5GSd+(V,[^bP'La67,[#H6-Irn0QdWlCZV2!W,72DY%A>6c><$XT>W=MdJ4bZY.%Y$+CXG,7@3G\(,r20j
%7L>&a7uKR:OUf"s$DVdD$]0\,&Aqr\`"t!^)0jSa>>c/k/](1rCd]Ma"cO%-ar1\!bJ\)(BW(T),cp$f-JGa/d9>nGq%?pN+IO)&
%>%(DlkXr^*N#W_g@MHUGMa#Ff'bNs?":0#66lY):Z8[=b1Fr,50QN,\-#mO5==g4ARQ9&_+;22Y(+dejPE*c%,s7?D2rG[LW>@:L
%EORR\V219"UiAY-i#!5"7+UKpUP'V#(lJ_D=>=l[':gT%U^;(6Z+`2#ctIbdfor(WgS,\qkf(.07_iQ^ArEK#A18pV'ICWn:Zqnf
%8EPP*\"tLIQ66t^>:bsmD,^V?P5s#T/JFU1.2E$C<B<Z=r\Q#@446f9Vm=\',8q_2N^H?>EhY"dBg2i]7N6UTQ6krfqpOo9^aEq=
%D/<ZT*SV$M-llN]K@gR4TsR`IbJ+>M."HiY(Gd=61$pBc;S-3QnAV@NL-pbbd"oQ2d>22H$1&$lclg7TdY<"J6o$h9cu'"Tn,q3>
%KEctr3J,=T7f\[N+Y#pE2^Ul.D2&=Feu4%oKg7*@hMG(Kk)^@N(#b>q(1to-QPO&G:uW-1/AtZQ[E+Xj;/E^!'"%%F]1sk\.Rk"?
%k<l%WLd\PcML`d,Zls=1TI;]88Ki,0Y(<k;d^Z")ZI.\3T=]=!OX3Z/`,l(T+%dd_3/.<[Ln#G>,m$Ga+q\jI'W1o&^)lDK)'6bs
%djL%/GGMCJ4$59G5AZf@>INn5d:'/2`sS+eQ#/1?qt=np-h7W@43^`j@q>*ni!U83=-0#IouHMsPKXadk"Jc5Jhp.I&KhiHU<;[o
%+)SNLa0`tTarcAGOBI?#Qb2KO@t]!]l#<hfaDk[g02;Jqlfm4E9_C:Fe`#j&4&(DEN!ODMG$=$Klo5O-+-sdQ"AEr?MQW>jK8oZh
%&_"uA8IMu+C-h/Jd6uWr.dtKQ?:3"u#5S$'%(e36>i"pKD:EM44cTP#*V4ZPn*XW!]8'=O_8F;'9/arQ2dN<C,KLN5nI%!\HJ'K<
%,Z@Hui+_/94(8Kl%Ige6YCAVs$WbM)%e-7Ulb8A=+;[PGr"q@p0g[/2MpngGe:ce2iBG9&9Q<mh'u@s^`J5o0)>o(CF]o:hd#Ne[
%51$j:=-Ds*b:>Xm,<)J@NbI?j&0^N72_h"\M:qUAN]ga>$9_k?Tu#%P#L7;qkG:,njPOVBSEXOT[S.S-<mPmL"AQ\APD#PbM_3d?
%`EU%eGMOu/bO#3Sa#)L<**4"`$@CJ?3R,PKb?dr)ncf[c3(i]ke8`-&fb*to-\Lf<P:Jj&ZX4I8_]=I@'?^hc&1HG34#r4XoAM&X
%X92l`NGPfF(GdTWAeK"8''8%RLU,"qH(#_DB^EB/93Aa9KA3\eYDEbY]>BDcOi&d/En74TZGRpeXjh6X.6m0<A$[4ugej2Z<`2&P
%Y5lc)lU4f;AuLCE9KP$=BJu#UdjEL8!@m,FBH@OXi"hkdC^ajn8\3+W<o8-Ck19IgL<F+K:%/<?_LLY7/[>sJkYE4/[Y\8&iti_O
%ij<nk!Y#(n`8(V/!-gq#1rY)P*lNq!qmLC_4H\DtVUNec:M<+;*Bqh<@-WfjG8L>;khI]t^8>n4!`LU2EPtjH:ZsM6:b4'Dj]KW7
%jLCT3_oRg&e`"Z!qcHi<XhRC66N]`jIPZ\qkspE83bCrO<,B\i,9'5QlW3TmD";".'_)sWKJ\I/AK34RO^)LW</m\gBVujE-"#W@
%HL!Di-"5uSdPVOT%^OC?i]YQIeVF3n."\&.ShIg9'kII>+jS4h^i`m\XAW3S52-&AE/Yd1Nnl_rZcBk$SF$#N>]_n[(jJ1a%V"gM
%C)DO^65Wt\9['BTU]V',=FGF99:tKgbpo8HIEsXQ>d5M=I2nA0*g;&gq6>B\i2b_Dd_"B4mY06X3mh5V@pk^^=;;0*i/T"a\Luf1
%nE*oX:+`*N6+DijK9I+f%"J+u;4<7"Qg?7AL_nBAC_+R2o2qut@u#V8d!uKD<k.[U*oC8s%Oh)@Q0H.-5/fpkHYh*(kcK1Z+^5\S
%`pjZ>6$T`N&Y_E4WfG[nAhGe$.:,hb4NB1N=Hlq*_oDaP/q_7\o]8]*POW"cSeS'RVF\#q=Vb4an9kk`^ogt@e;bDe7D.Ohhh\/n
%Mh=Nqa@L-'s)X,=kLa3R4o@U#[u/?@Fa9;S0^-uZCB9_-ZGJ/D<^+3D\\EJ#>kS"3dl%]A(+]eF22*jE`VJMDB;:t";Pk`R?$E*'
%I)S-Q")NUkOlNLR+:<_iS0DcV7"$b3W<G>n)cL6)kJol)ot7:7?d\jVgQS;O&WCjl#Rrb]FS+gDAD`;q><m+^!t-39OJGc#9;-Tr
%PD":,./^tjEum?d`CN,WLVi#MN9R[='uCaoE\LVT3Gq6DV!3h;G&$/Y!$%Gk>p?@YNo`O=N^^%c2BQ&;EBX;Eh)F%`Lhq3#%ca*9
%am'o73]AYMrkbUQDnQ,P7XQ6/J6[S?(q@u9A_3WtkQ7K/2iG=;Gk%/BN')@2i]5pJY1$ZhR![%qc/G1VJ)2F/eW+=cfkqaL>_BQ_
%5<ZM6[S(4?he$9Kl%nDg3j5&+N5,Z77UY!h-3Auj-i9rYjOid`lm(4uJAHSi56[Z=))OSO?mT#l&X^Iu__hHEetQNeq5D7u?!nI?
%]*ktcg.O!9':=n'_$kp/%j)`uY+BF=Lo5W-<13"2pTHa^<LMYo[);SIRfrds"6>+8A*Ep-Rn;;JK0f,7o*7)"?T\\j<1W.WEKcLM
%QVE16]+,M")Wqu0!W_qa07CGEYJK/!qrV"P0AO*R`ut/Pg`n[GVFIikP]Quki2#I3j,PQna0j(3^"U>UL]DOA=cooOl/\EVX*=JK
%8jOWd=;j->pZ_<$:Bg6lgW5S+l+;!-%F8DeIlL/4Ri-AefCc*<@77kYQhp)Z9lhQ[F>8,BlLrD_$)=lZ;HSuA+/]O(Ye3XFLV_sL
%<4abRSU.;.ZA5arY5uE':<=b@"YXJ+6W,]Jf/Wc:q'3u1D4MD/,[^p%&-[58PYhO',q&+?kG5[<5BgpV!,=X**6F!]Yaok:%Ce19
%cZ,"_s&@#"*0IjJbJFi\d2WJ$OFgD3j@iV"'RrsnKB*kh_?k::TNg?LNAGr/GhP,fAXKY[J9a8\]_=dAQjGfS?Q=1'a"SX"nst__
%_^T>R(:1e3bRJThH@a`.'0Mc'(K_9,N%S5>jHJ#l$n?J+I<jiE3.B!bOQpti!KNfPSk![-WLfdi#6tfs(7]P52qTD!n%s^\*>n^l
%V;),YU*^*^'d+eoX49MWC+8Fu%O]'N">>78A[>O\$,l8J\hSZp3:Ou1il&X]arY*A#RPq.Q\!asWcEVTa?r%'dW;W5VXSgI1u3#i
%?i]]-/tjmn@!oRG-tW5\i1R-/KL=bDM>l'SNPWlndi!f?e94S#,cg$7PX$09F@PG4:*s`gekUr-_k.(eSBiA`J;WhpVTJ!7WB15u
%m;_&R0[^i>o2E\V[UabrXMl[/<9(fdHB^WL5ZH6\=Clr_3:sBC]WX,d_sh%44/i^NF<?j$rq"nXL=UbNCoZK]Y#f0GMV(q5B]\=!
%E$MiUHdcMj5@ebXnETf(=l$m9Yg(i1b$I.IAsi/\\`.?h*0kT,KLI/c`)[#ESRiDp_*uL!#T5X;<KJ/Sj+dk^h_O=1Y>SLNjINX#
%-aMDP(oq;+Mnc=(aoSqY`jZ?:+(;pHfJLJbQf<m05JE>lbHY.-I5:KQ2>'h5!7NU`9to3_.Mmk1o=\s.Cs1U6oEC.(U/)i!/\)8/
%ipoo02QRn5M,#c8A^P.VMJqUKpuXUA&Uf\'?_,G]]P\^+;OB2`=C._!l<$.:Qa^9$3*3aSXR'quHjj.PZ&9-\nU88H-l"At(9"5G
%6BUV_U;pCd][*-8TEU8l]f<MrR!n>c&UZ?spN;=^fndHoMeu3lc.Wr"]d$1"h-nXAn..GCF\b6jqoeNVR<^ha/g7`p\#1JHo&*j#
%pVd9J>47g4ij*W3m]WN_o!Z+g3^rgjgXO_+St@5[eJK*X*#gG;Wjr(#&U$H0g,^#lFB_.k43!YDlo#FM2\0kg!WY?j>W,o`nDY91
%Rugc<N@\+:O`[a#Q0.lb\C%&'V;p0hApH"%o&`1m8EFs686fS2B^;%`m(XB"hHaCUr]D^?G8(@Vgs=/.7:l7WQWR`/PuS+$d^]H^
%\%eXc&:8,^QL@!c')U\pJ&EF2b\+P6[Cn4foZ:MHW9DrPs1pJP]Ya,\]tcb@h/F8"hr]X`d\3Ipm.]XLH5n"FkSqVFk%r%OBdY]"
%-_4<a"]t&L-l9I4QVVoi:V5o2c?m)f6.CfY)OO=7;k2V/U<+>BPe2fhmbaZ"=i,L@"$]S6mdHu<5Pdop?KNn>1?$n5n$@H;i4R]i
%^3!Ya_u2rc6UB/*gDA4-`XuVl"2Fm@9-4q)UruLoI)I$i&oVALBR,\iUDnVn7\79T.0m*3n,QViJ06>H555?-M)#bkCi^#J9$8?,
%qn\+&%G,)jT2SWUFLk'k2;oCJ=,YOmR'Y"mJgO,`[XsrXKKEGTku-Xoj#BdH>c+fIGf.EpjVAN$Kf;-\NpZ!^e%^ATV5We7">]&u
%MPE>XMWAh*U[T+.:6M)m(f8"dW!!tl\5OWKVA"nM7V8[-r(4%jN$r'K+5l*VI5>p)2i2+`W(S@CQl9>sk?o)P;[L$gl@_jkFKFd"
%kt<3_!=_o-Ea2-;kSTug%&deLV+8/g1d?.PlE1@LB4:0dGkPBt_kFo]ZcKZW!f9?`0Lq$"'Zs;hLDi-"XUDu'jhZ0EVFt;h6:OF0
%&BFu9a2J-RJr_YE3X-M:!F/8="^G*<3c:`+ODCmY%G=p(#ppm7fWmfk_orO+O+@KH;"-3ErF:86AfcUV-1t[C_$4^f[*q)f#Z:7"
%O3M1k.N'_LBu4Q#$-?U198nDcTG?ptS7BD:ql&]!f#VS:"+G-cqXgbnFpU\ZQ:8Wt#7S@bScpBGqB/,EN%s-\+eMn_:jS]:-hDsf
%d:&-B*)pN!J:2:[?`cr0Z&EMCLQS'2][#,Sr7GDSi7l=(:CdNuR.5$dj,T>dKVBmI!dN<X0ZYbp2g;#1mdlHRSLGqYLnWUETS`H&
%nm!:q&)f\pqIg0G;a>M(2(9L2e`4OFm:qPtGLd@R*E$/$m=>?/`FU5(*Fg$[j_f>dS0oXB]@3Sn@-0nu;Hn3dObPs`_RC"J4Z4h6
%l>lJJb`aOjeeW+<>,(&a_kPH=>u0b.Yu.DYb,GUGg88<-PR%U.>lgJ%5qj-4?f,58GqD#CbXjQU?_^FKMn`5SlWgB`1LsXV"_ohK
%"_h_tI#uqq2U]l2=I?)@NiJP0'u\j]%[L4GdG`-u-s(4C:5%WV.Z+?D,'717))h:%a7`ZI#8f$p%mn=+2]Kh*44#QK]u["b+4MS=
%dW6%h',rk*gY0gJ==McBRlKs59U7O:Bh@QFAhol/-m[:2rB%1HL("t9;Z)D7IlDKNM1WY$dasPOBQHl;b>VYT=9V!A)*Au1gOUY]
%h.!l%\m3k@_W<)&F^1oBg;B;SNMok4['_4%a^Df(G;0*H=JUKXH`>hM#L:.l5(VN2DHR+3MTd"CN:bEsY-[kDUD&0!M\I$1'5h-\
%4)dJl\)?WVoMqUe?Q&2=62F`m%V5UFkir8Hdc8Po+_.`d_ORFi&AK@X!b5/0P6>QY+<uK#R:@MHH"`-&*R9JFGqqIpjX(SA2-.4k
%6eibkh]miuMtmFOP$8;Y%ID=O'cd#>E[h0ic6H-]D?-39p;dj[PTM=d";OdOOPk+Q7hPocat(`fYiDS\`Hr=ir[du^&MbCj$9dSk
%!Kh<W&7dsTMr@g"]I@B:;Chu35,^5=e$0=,c9N,_KdOF17Wub8RSm,%JLM>-"):SZnWu;E%e"Z*pku6bDs.D_'d"CJa+1^)r2Mlm
%d*+T:0<V:"?E+Be="AS<4B<:%Wc44:B[Y]H'$,qj`=e@rU6u"tG7\kis/?"D4J0GF[,sYZ?l0b5i2=JH^q_u9]!H`0k_>URjGO?^
%*sQ"1K)h$u;D&^gco-m#jalDCCg/Wr&YYqn!-"&Q:h7,[0SEC0bp&5rUqH5&Ske^:&r"Z-&SYGcg7l*f9KOEY<DOp;kc)qu?V[di
%5*D17+Asd+K7(<3%9tV%)Ia+!%``9Nbt2,:N%#PT@PN9lJ)0$\inJ0VnLK,iJ`f+*mSInjMJK[F^RsMA*DWbC,Hgu(M!pfX,k%Sb
%h4DF[mLI`oIL[PgoC5au-(())Fb2VXpu0A.,J*H/\mtu[+DrUoKp(g=O`/Oc1n.,SQ8`Y:Hmg8D6jaK@IpCPEankEOBMm+;S\9dQ
%_>O"CMk32L-ZLT)YYk-#jO:aF/.HF]3(_)ndaHc0/7f6s;dqD*M2rU>q5g-M%19:&:0dbBfOBi^/>IR>\Vr3MBh*`(&Q7;/GoY4a
%;ah;]a5GM30'^SU+iQ=u8*s>%Ecr^[/W7fC3PZYQA`J;$2n47+WC!DPif<.[Hlmp)a%4i9nc:tb4h#TSp?mW`jgH%A0GSPUVp&_[
%1H15P[1I8@.C3>OHiL=Ra!SEi^"]/jLOL7C"T\eSogVMdO\7iKMKW'8*rLbG(Z&FHkMFJF3'u7+#-kE\T#f`@S`?\1'sicH0V#@R
%-t(D,!aqBe@fs\oii3tqM8jK>5];GU\-;:m+X9CFAn%F$Xt@X!K5>'c/%l*dNU1s]L;1F$-MKB^otMgtmq"WROT2NaomaU0rpfZr
%s53k:s*Em-+(`>Ln=/o^4$rnc>[0jY8eB&5"#,8%0[b8L"lW;h97[q2Pu'R,G5gKgaJM%u+Ql[2,8$*H`#l$'O0FY.J4"mfmkcn`
%@@]V.O9=>aa2gW>4<"(jZ%kk2KEY`C]RV\:0SpW6oqSmB%NcZte/[p6([eHo6E)9u.QfSW'(cb-!9]8Ma3!G$+ApE=P[[\imYTp"
%g0t\#VW?dnC\E\,k;(LnS=o>oEETNhWnnS^8M1d?&$*50^InfhQboe%LVTcfD0rR[:prhIA\7FJXNKnFP+L9\R$N"*?4*'%"Sp&U
%R]$@`r$8"qD>4_(5*jXa_l'H-(P'oQg5#(VasTcBSHT3:afm,345@[^'61r2TI>!gh^&t#C,TdCD3:Td"9GA/2AHhIQeV+W$bt?S
%Q\4eQrUXgiHa$&!aBt-PnE%#6TUWX6JEV1f.4H_IG-R>hP,npdK\kIhX!?c+Q+,i*J>WFO,g3IM?iXsG;m>NEH\9,Qr9,mYLml*%
%_VZn>qJCF]p<W=WMiIJ@).h+-n(>gTIX0aSm\K#=le1'C]U837GA`1c]Mdk127.Yr"'t<B\:].2Wk_"c?ES<Q!opVo!k&H+Ne+&o
%<1taT%&<),[Bc`*D#sPG1^%SU$(,^lkQe*B6_SR)@RAZr<(4RfLm)R0))ngN+:>#8Th9j)LH%OKLJLPXhq.ULlOj#^>Z:NHoKOo(
%n^"6U:2>3XU"#Mn/BK7.MC;2U(8*U%b43,(91#GH4K==cp$/>8h]nJWk&MJj]Pp>(?0M(NH@BjbJ%t)f784!N$W=9u+-P'il2iIY
%aMI6-C3&e9WsNWND"ZhRO?Cr#JKUg$;#<G[s0@Vcs"bo\4!b?6S.I6C[UBCDKD!]J!mIJiA]Vl@kNk3H6(&^G+R&6M8A=o'O\-Fo
%d'^G9,.KcI#EH3]F#'AiZo<BRPR3,/F17\8&b[\'Rq90F:X1Vq.W(0"!`,U%=4J<?Uj):,&!8Vtm70%&"f-qR*gfLtWN'b7DB'F+
%@']l:D2uj1&r543R$ffHQj9r2Lp.E7_k):p?&&+6eugE;h*-5]C\6/4ag[Y@E+>?1-;5;k*QFK^")FiA&ct[pF$>l:^!UEN_8L%u
%NXVp+CFK9T+K2$=M0C.OX#]N[blPFsglj!N6@"2P%!tRkUim?]pJr;q*pO)O'D8)Ei=!*L&ohup,#h?aM2K=4JqK"%.KGQP,$3?E
%)bMTY+K`1NWu/Yrd+DTqaH>LoW8M$Z&V(jd+:dIIU`IBoYfqJie5dqCj8h?O5aCVTf`9),e`[l$p*&i[MmIQ%Smt1??qo&k\1uhc
%;+T%Yp'aE4Vo&s;_R[edhn[=O#k'=ZOI$+2#C7r=;=!oUbD$V_(?6?*du8ueaEKC@20:_RFue1CF`Ci:.$(aCq\RDn^,SUH(HBu=
%B<dWmO$/GR>KBMO;SnhWM7G#$"kmnq0&ZF9/6Z>N%;ID.Q.qp$a?QnFQ"L\8'3nghRP6uL<h*mV273-#h@X^r(SjocGZ'_C[k-Li
%hGn[7HSJYX!er1?N$efu%@'G^8]Up3#9ltMB!U+]?sX9g(e#<<Q@IjC/mabKPut[nMf(N0PpPZQ/QF7'af=A)9rPlgrBB[g74`ED
%Z\W'"W>u:_fQ9L4<%:NZT(Dk[P:)MR-i@jS@"?mo\Yg+mm"9JCH3Sa&^a/QKFQX1$:G5KpD\a?'.)sK,`BOEa66_#aRU]b<T3m'=
%>;nW$#DTl=B!oBQdC6+g`N5tfD>"G_M]INN)e%=3F%tUd'<.hec#TtB2[$QJeH&(tbFfX,pkKJ8dd>I37)7$+07`jJC_\7;/[<h'
%Q^HpSJcR5g]k[,NP#k#YjPlRdR0D;qKeD&C5m*O-R2\J/Sc*bmoq/NqBsohoW81sK);g+Y':otAW%PGWs-CMudfml1:KYGdqGNje
%;Lhl)]/5$0DJq#"Vp5C9U)H%<%SY+p.rMu/2b96i"B($Ulq/QiI.%uu1]Vq/q0r,=Onj,2S%VS/BX4"]j'o=XHF^D&(X8OJ#@2Nm
%X#M@.5\7,^=@7b66F+R:K(4!(ZhbbR2!iir"6XDp$$BKrhcim'-^2oDm6DI:Q.p,8<>UnNiU`nX<SD%p4+T,EhZ^KT1V/H(S*JX^
%pon0,Lf:AL:oM5?23K]IUmjg#,R9cWbfO*.#*?*O,uGZqQbH=<M+KSa\j2(MQGft82:G9BP:V^H?-6S(<+0Zl&,A2dVLljrJPaWg
%-W26Ba4+=F6&c)7#M/hUIY^%`(h8\jUD")9%BLQPQ>?o>#0',6fN.Xj.6;K%ZhaVCIO%jHb<qgp::gJ=oh:ERkK[$DgH!!GWiE,p
%1WVjNrO6)^"^ak.SBVt)IJ;q[SOfTo[mK/,!U=4:Z!h*:r#)#H\5msEaWpH9Z3T9%^+#1O%4'&A@gMc;Rt]8q<4Hs&ba]X)KsSt:
%P;o=:L5Ia05KU?c_2kK@1h&^%9EpYNjg>W!m8B`t5pFb02Kb2XB>hX]3LK#oV+EN7RGR*=.sF0%3mQ2I^""OD:+T6D/ed5(c7j&a
%C?.I<3+.FS)2,<KiLc<%IU"tHh>[Snk!JG;cB?C75qb3,%>f=+UB1/Kk,3]&pAK!F((unRK9@r:`":pX%2Oe1R:<ZCA"dX]V[a,3
%J[)g"P+R8'$plm>7"#_)U-AX6^ir$S-)OI8BtTI5#&PKQ(-5ps/_J!VB`qt4:Gu?Sm]s0_*VVRX3^;7H+H^!$-QlYZ[r;r'ZbafY
%4/#l(0Ch^O/J@:TpfaDb+0PX`k(&MbV(5QFCD,GG:scq7rq8U+7UFTg<Fa7O90W,QS)`7#XpW)QaSEd0%r9!+m](L=PrZae@^-l1
%8o6Q?!0C@17]OZtK1(t7s'RFcUc-"-,,^*/>`3>PP$nG7!$X/]h?'kj,%jjG"$*4[$Ou2L'Mfc73\P7[K+eO6$.^d6$GaSD(+pDM
%lc9'9k)V1<&46V$J7V["$\?Mja;I!U+RgZpH_Yt_Fr<J3OpL7@0XDYd-uKo=0r0VGeeDL^A[CAOmO#FmLft>kAeZf3&V,oN*3;u.
%lhDB[W%=KFZBNM*n_o5DbIC$JN,ggQL=;>3rW,>Dr?sMDJB%pj&$HO((0&-RW=G4'N^Y$5`_9kIh\)iQ[1Cnd:o-ENN:kA]6-p$t
%Q@`!mYiJ6dPp#u0GiK$"6g/R.Glu-D``cEWRhYKV-5DpP+;M*\=EF7(&<XM*KKh3iC!G[!q<MJS?gM0@0dg<JRsB?"!JFat'uoI+
%#ksK3W:2C*J_(heoP-2U=]_:*YplM@ROtK2,q&f(G*q!H9\nGGQ;#H.8PXg=NIKhpCchY4]ke]WR2GSQ6Xam>O)m<@0%KNhBU:^o
%.Mcfdr*[FdaVIAR0W3$iQ]l[SpABAC0?<n=R=@+'(Xqp&^-!@.Mj_0/1>0/*2GZ'mGJeY[SM0Br`<]hQo[T*hS,:B_n9es6*dPD$
%E/-S`51f,boc<bcU3jT]^MWI)E>X/mSG`jG?J^Tt+!:H2h>i1,P[JHSkI]<#.VRJ,[I?XeE='!.O`R1Z#)="Kj?82a^(W'g[)=2.
%8R<:g&7e[3YnIlLk$h2c!3RW*r0s3E8^1,`U!gJ(`8E)L<MG;!F(9g,O-:!OFf6)I:a2nCHa"UuJqu[T,Ts,rE3E))I]uqC+UNT/
%&[^`Cq#B,"5;8.4bl/8Fq)K<"ep663B/.Yt;mJA$p^IX'-LRt\!S/$Kf:Da+iTajq4YN"U>=EOjYVaEQ:U94$*J:KR!4h9\`D*R-
%A#a\aaXgE&JudV)TtE?=L-Y*C<YED[:&sMgIgM%>T&8bXB!<9,Df:,r@.9)dI3l51d1Qom7:3>_FitD1<22_+]5`R2=c>Fq8q2p3
%cT;hN7ED<ipnk31??F2E1<C(hd(QZ[$ZqRX!c91$q.eB6Z?A"2M=<Cn`g5uKL]/&Hf>,-jNWa2".5?K"3=n#[#]kXPSWk+Lg*D5g
%&.-21?]"D04@J#jb@LO=BfmTh<rVpN4t.#@$"6!8Qc=@"&Zkb)cuR&-@JaQ45q/O%T1LKK6Zdo+37I^rd(s,#q+N99Kq4qj+5Ugk
%;iNMH/.R;/QpatkTH4\o*-==e)9E=PPn0;3MJF%2FUS&9XQgWl_Cfd"ela8R6A?P3Dq1.lPME7r/'8+E+!m73l-r"a$E_\Ds1t\<
%7c6OdW<0]iYUqrXoPc4RM7!>4#7^iRC!_'Q:jl$M2/&d^j0CNiQASFb1X+7PD,DO);c$P8b6UXETr`fKLU\nnimV6:\B@F:r>n,b
%5l?/U"RmD,;'_H`ehm*nm_@j8PRcR`,sBK8+\3f)fU+tQJt_3?prP'O`URP%880`_N@,ndbXH[-'oNn/1'9GKbi$,3or#^u&i%In
%iBoi4`<3fpjoPSlDC78]RF?`217[MH:KX<")26+=EZil@p`]mo%CE*;"Bgp\H>Xq:j*T_)Jt[o+%VCbu=9t8O<QrpePn&`*Wn:pZ
%WDb[!Z4dBF\F;ALoS6Jn\8rg_$.kKnVFq"R:UlGm((aWrTj0R2J@HLh)Yn1[K7@NFEA,LXqkl@MNFl-)>G*\pN.LIQ>\e$P(]Tt:
%'TRF'P4`9?)"-Mh</k$HSsh5d(]p$r:O5Tb&eC[(T(l)[Af'5=m/c)4j_kVIJ&[o$Ih0$P+2:Q(3nA9!o4puUr@aVS4f71sU5IPs
%iYslT:qd#:W+?F"FoS0#5e:F'4odYUBhTk?LAM<UMCJ.4.H"l_&&kQC4"'A?>C]+oT]Y-^HT@.#=Jqg93,F9W,KhT><&+:M`.?eS
%Gs&/El>@qASr*_[T.__kGFRH=,pr3!_@P1d*FgS6$"JMe.a8[.g2/7L[SpgI1L6;WeR7#+(.X*+)SQW&dT72Ci?m`3!mR+,%eGQ\
%NWR!F3X/P[g9#q)W&p,GgKh^JmP?D'lW'YSJ+cu-rHhEiO3:QBoTY9V,b@9UW+H2\9Q$P-LqkB,f%;m\:bMmjd7s]tQK0>9ecEIM
%K\.oi%+;W<mMNV!U`^>)?:/-6=cs=tVJ8$EE$VV>^[A5I8*+dNE)Wi2Meu>FPKnSc#uRHKnMJpGAoWlfq7377IkN](Sbl056)cD1
%lZZV5em%%m+7H![0'[p<\ce7$QCg,Q,/%_+H/*laVjapfCWM#K[\p"5icLF!'<F\_/S[p#Z0B9[YSL:<\X6\O;mI)rMOeCc#MCGe
%)X2"6!*9^->o6rn!tE;@`CI$KW<YiEV6!GG"U7ATlW-k5mOWXI5!#k3+&q+a7@d:[pit%8)2hbUBSlj6QpDbT!mI/#^\L7R.C0Dn
%[]&r%?^NDeN3S4m0M;-)b,VFOf)U7/EY;A@mMnmB;m>\A$8b\q,)b<!G?$uiiTCoLhOY0jR^HAID2a$,]LNNj0`P<dbcW^@W4'aG
%Vi\bMFh-^[!C,D%[*D6h0!NI!S&_-nY!bS+5*J9(HBGS`E%<[n>B)rOQ;I1H_P2f-jLu\aj^NL]*FNjID5%LT5NP^,Ndr'dQr]i[
%otg`!%-=K[j2Qck+p"+UCdWWdfQ.Yr!s9QC.QiF`9AlS$."k13mmFK*YV2sLYYPe:1e?!;VG'hD;na8emhl;FEhEQ"=X\`4l>IL4
%6_C`A9ODSq*l6gn%15iYC6cb'Z:[6&?irOpWS=L0eXA'4Z)X=EC?LJfhD32KXF\C#d%gF[9k_*^8G0FE!<a6]82?ioPYi%`,Sp/e
%7l6A^Z>.`VZZ3dr=DD8IVZ3b,bY1@:aHD6""]R\;QIA0Kok!S-DbUCs)_Z83BYpkAk$KAGBr+q'Ztr.k)b]W*A"0X*)d4j2(2SC!
%\e'n=!+qt_"Uu64/WM"4Q%t&r!+>"3Jeg`ZjgtP@ZZl3%(]q!/k)\UU-M2uGQ<Zhf@'&-1&M>Np!u+7o/EdSTGlXHL<Ic>,);>9)
%`VuUc3c&]*RVUpA2pn>@n]T?JL*bkecGEZqcF,(7Y%/DCYk%!od9!+&I:oC.:K31>?21\Q=>"DQZM?@S6]2GjG\[XrJ_jXeHpu'L
%cDf469FL+c[39p'`Mc'u`0TI1"PrJ_@o@*CgDPlqfo$!Sgu9EIUp7h6FheNr'fY4kU:.s,U%HH/cM)p*%L@iY3l[_jUUk.L>a=(S
%/-AXI[@SWKL.YiF\DDP/+;/47PN`*!$0H`b?)TK%+;G5=:?iSuE*s<u*Gf*#"os;co3#eY6KoEA$`I3ZiD1q)GE!!J0SG!C3Duru
%,*<u'r):$Im//g<mlao9GgT6@Lil<R=B*eC)E[AnmM]QQM/86lZRO)J%BK"(ZI*H0V'Oe7d:G29I&)sX8Q@Q!?P4.\SDi0"mm3[&
%CWQ<F$OHeZPj%qL:R]5a^]`DL!S-P3\PMCD_0h!G8Uh>L?nj.)+pms(B^J$_M^;2^@nAsW/W,sA-CTNn!;?3^E#:ou*nY%%i$E7a
%*_mLF%4NOS#5%.P9K6UkV-2Ic=/;RVYrHKNC]Og'kJ0ZhS96WaVlTQ*7uN&7fQ`EPJU+mf4/rkQ!BGTGR`R;6_a'ane95:t.bX!?
%e;GaG3=$Ij69X0*U+N0q6SrW0+SD7*GNrTmaKK[jE"H#o!PRmRF_reo9<\D`jC+EoT%S+5?HoVqq2NIK4fP;$FP_hpWA'WLDs-n,
%,5l!Wbe-O4=U\7>X>C(V7j6(B&^G8;OE4MF#IXid&);=Z(rYlIYtAP`N%,.f"bfd7,6<*7#=(XmO(Ys`#KohD"_.N:QBf[CE,Y?>
%ieG@c\$IZF[]>]9-ft-4!*tDm3$O[6'L*_hN\N#8@1:+4(n_cR#1+?9OZDd+EpQhm_MkT(-iCQp]ZX8]Y0.j[erXMJ*"01d'"*<j
%%L]*(MFHY1iE]=4KKt2BGm,8n08Z[=.Vsq6bOA5N-\7OY?o@b]2JYqmjA71l`A;c9A<`%1I)geMj1$81U+bc!!7teo-[#JPc6)``
%qZ8\a8kho-k\I,)U`Cgs8\!SIN>&N8no<0iTUK;g3h!!J-K6OlUe)SbXI!6m5t!j@\8Gt(@>6':kf=[3r.l^<I[Zk%NsgB@;<&6'
%/$\2+bKB3"):@L>$o'AKMNcO=DuZN6-Uks+VAH3tM0"Bf2.S.E@["?\Cf:3T`I.4^OMV37'.ms%irGA5W<cF:b]HlUU;&A,)H=Wf
%)\fRLK>.U*12-YSnPENpb">#fO`#DbZ6+'!KaCU2Jm9B]6+iQ'Qe"s.N/P^.I>l%(8K3]S'L9--\0K1mD^5guNf>l\7L]?SL3CaC
%Oo!=\?Z[H:'^CV^Bd-T02]'=#)OU.FD"$r.F],Oemt_I8LgHs^*5m^'$fqHOPMqHG=4J*A0mol5AOS$2#K4oN,G.\dX%Ul_GG1fY
%=]K1G[0r9dY"G!6ieNDbRq"/g3hrBY[U[@p,eQ)igF405%l(QW0+RH-4&ZKgOt)rtq0&,NqqW+,X(*)%^gdGF(h6KOJI!Kj>E&B.
%ba7PX=,^5N;CQT/".m@AjZjU-KrX/Tj:s;P]o%.85`q+uPh[/Xl@,g>@Rqu.3iE7$L;_nflVo)rVAG&R_(+upG,O19gPf&Mk6H@;
%C_AHa2'[*NCc<4JX/.LkYD8L?;beN\JH\Ko$G46=$7[rH0aO*tZ_@"]s"-/gO/>C^Ypj^:8egEu8ar88ZbT/D8T>koZ<jb4e'@JL
%,q?a500"b.W]>er***a;/IY0kTj%o$[GYt5W&aTFM+i:il5F%tPN!5!f!K./d=&8R)2q*H7p.?hJK5PP-<DC@,E9Q&^kT.;/6\+F
%L#!9jdj1)GeP;<AO`J@(ib2ee1B'R):RNTun&@[m[bLbsNc;9V2+6sHF!-:<d;',@9#p0]1(R,!3ts/07#<5gBkU7l6j;)A)Y?oX
%qI,j(AB`k7CInCjEXd7,6NHHcp(\Ut_'1`Kl.YCALi=9;OWcOc!(!T7_/(M]cI3GG[ZS%_o*(-&T%*`S^(;6a,MeF%%usI5HT0.?
%.#+ALrfG&eoRh`R.UE1#g5Pp:/!+^:%b,.mgLPK:QsQK(#:KS>*W_PTRI;Gn\n<'Flh!&820S=$IaJqrQ*G9EpZ/I%&#osJV,H&G
%E<9it-6]^eRk9@!E<:m]coUO<g_2Y6dkUpE(Qi:9-%q4ER,[#'BZ]f5;53?0*?j[^Pc^fs\7<Vl8n<jJp:=8>V2$D*gXpGV8WZpt
%)e6sjPplpYU,@4;=G_La^q('cZGk$B^gIj"D>"@!#cibYXhErg20)=QS1m*W(`WV\;HN_No#HVV$\tZ1K\TL<)/N4H'I?lk@(7Vf
%P8'aHGl.0T%'pW9i4"doJUt02RrXJ,]h-bD)!Lg*!jq_]h$^S8*btS1q:`%cB[$sm"HbU;,-5udY:ZbUJ.%GBVblEdBoKtV2A-o0
%'R:e*lfo&Ba?]O?e4<Ha9Mq$.gp_l>M.kkVeip@0G_h4oglY3[3&Sc`DGU0&XTtRo(V6B*''OsT*';$Bl*3_$-^e]Z9_Q'bBoD[R
%'i*inI&CUgDG!u(MiP(nA_e>[=$/i_B-.<o91>b'K[s?jk'pl:869+34!7?H-*#Ju%BtDa#O#?$J>rX6R\J3V22SkHF]ZucVYG:]
%74Q!WWNrg'&.G4(&$g"ENI'd3q@]*0:jX;mH*&l?.)%6r>]>GuN_tSM=^?miE5JMlQ(,@QZKVD1TQB%+$Omdcgp2qOs%^;YMUcRj
%d>?"\`RV!TSR!YQdrs1?dtC3+'4MBSWn<P]X6VA5W]2Yu*V%_Zem3A,s05`S)^5?2rF%Qh0J,huRRuu\ln^^Oc?)O"jCbRRYsJb"
%k7WtN.bRSKT3sT^iUX!i"0H</-^"s$RE2VJ,LU6bLR,,65I9&I<Nqu8hIY*L=W#ACHqRF9!qc=f][R&U):=rgT>AcFM+Z;AY[%3?
%@ET<0)-"B#716Jq9-5sp1#^btoeY[^P<k\+'M4HDL.R-\/;0%Of7Kn/s&Sk]k=3D=)m!Nt88M]Nr7fKh7J*ED_ZUGLTp./XNGV+R
%MOLJA$ebu,FMoBK]-&mFSiUe6'_@OSJ-"`R.$i[H5gb<*,oI];25?EgE1Eq=l=DofFg!uo+9#a()T?P'gD1689CC$KJDn$)OZ1CE
%X$[#Je3GLT!V]cPOu#t@VOe?t'H\B(^]_Yc04Hf0D1fHhe74Gq>DKhH!WrOM(14DGINVMc%q4^D<JRuOrLdeq*^IIN`iskNL@$//
%V<a'pCi^$>*5bZdl"Md,RjS9\&/p"Si(da8eZmepY4#qDl<[L=nkTQ\rs+jI0j#Ol)!m03-05bqWZY8p\?t0+(@QH8_PDHs?qW\]
%&@O8P".t=]H\Q9NaD?VtB$Lo0ML0p6k$]_h7+K'fW5Ch*r^dE5Gnpi.Y(9%_?0eS(R['HBo[Q>>Wlt5^C/nlEhGKGr5S_NCfm=UL
%4Lc=s;$<UQiE\&/Y4Y`nGOY]iU8SYeHO:='[nmT#Phb^hjZA8r"eng<)$<f@?e&aXTF$l*1L%r,e(O%]HeI)=^&RAJ>Y`].S@q+F
%SKZU(S&ia>crCn/80m3%[t,>]^dMLL1%NbO][2[%+>9ND!-thI'qpsS%)!Y\60P/H-g7CE6SH^+F^_M-?CIRSDWKn=a_Z@6jHfI#
%lseJ@&p<1+^c+TWR'6tUGpp?=YY-X(?)D$H>;BODKO*.am,B*WYutN'$&8loMXjVp?&i1rN(#Tql79&ne5_m?95WQp(IYM&=qr"p
%GPNr\ig^p<*!.c!*!j2&"##^jriJZSY;>&/qYMPmrXhbaJ#sp&L)M/1e5=r#91sY!-stGY#0aD"i]YdN(_kXKU$W`jlK$?-Css&0
%?8bto@biO,+"_(nKh5Q90aRZBW&5ej.T`C`pp`Oep#(g,N.1plAH4[a^%Yl&3_F@\fMNjY07G"]3W3IgZ!+VS2Lbq\lRd%c`VB[H
%[+.?RWLi3=)Q#(a_'"6p-OmjP#Pj!<HhW>)-A[uE]2rUX'NRUDj&&D7:up:ph$+p:kA1jYcc<)_N8B?)H<FRP92%m[>#@<ie`Qki
%<P<jTk+:QWZ.aF-m>74mb^N8L`(#e0T'&+67E]p##Kn^jd.44$&*fW^ojZrBN1Ns((7UhrVSNg`J1dAkAnnd6=Y;b36jo/!pK`U3
%3o.,I@kNpgfI-.LpnS]=f=@5+X2?]mh`Xm0hB1NoWbt<K)[;:ooF:^kE`4Afp=\bPW810BkP*<ogPB%ugQiaG@r(AbU,rX6='oh&
%lTTf<(+sr!`q.fqk3FjRrR!G<1#8i/.WPgML_s!P$^nG:VJ124_QKD7T;!-#ge"&p:!+s@\/cM4]6uPobumVl*L=6nj8=NuEaeu4
%m(&bRHFV#Qb,5.qc"Z5aH*Fae_AA%h*ZI#%k9Z7Z:(s-nO";/pH(0["0pj]9K_@:_p@b\Nn7C1S.s"u]X_Q9=9GWjCB,f0]Zm1\f
%i*Y:&p;>]&P"(\@5@p%Pa2dN=H!5)M]BF2$FSS,?1gGR<h,RpZ>kEr767&_QN\1;3:gK94;\2!+q<U]TXJ-&4aE$?TQ<7/1RkX`J
%,RLn3l$H$"4O9*mA%J5nP1e(ubsSel(NT5DES"OF^')qUJJ&mNUbl!&aTe$sL71hKi/$,r@;s4lYNe6u$2sThWC$k[h_Z'c.O-h+
%\8,:'/=i>:LMcXKg+l0S1>QJFR"&UE<TZ4lR)*![*s:lm%TZTr:>*W^!C9s`"k_ucItj"b:A2c7>M5[[,]3gV/7c>+MN`[aaO\MZ
%njE:2]IZJThbP9AU'KJu,et"DjB+0l<5T5!i,[^K!(WQeB>!m31!4:C6QRJtj0/6ILn)T-8s5Q[9$gEDLVd<4BrFeQ6.Tm%7ti\?
%dm:[*IIE7U+:5H5!Sg;3%TPCde=Kss?6l/>7@k$IK1/+KMc?Mi&@"M!O^\`Xb\5a&MEGd\756[P0'D/>W#KVW3:qR_r_PPse1,sN
%6nrXE\H>_j&IdfHAEV;COkl!GqOb'(-03/S#febGVF)jio%VK&VW`9%::$18QQJ/NS'k=@R31L./iMpo+Oi-.]'N%Dp*e@k,Zgp7
%elG*tg1[`](*$\he`03qqFs]V=RK#H,rYG2/0`Zl6E?#EQ.DDLi_&S;6ZMtFUL(F)&ouM&ib,u4N+c.qqpNC&QBk(T&/r/iW:lJH
%^ohTnTo[#ZSOg].@Kfg1oF;fG@]S9CUoLmh<88O!D3ra,Tk,`S+b$2d+CIb7gM/GtKI5<,Z""m)<i>^,'$jYFICo6k]PlU%%I[j'
%;iJP'Z]Pp([\bjD.R7\r.,p9<)u/2FH"3u?Y>JIEef4d58G$i1AJ5uO0[[/]*>n8Tb9#T3Z071;!Hja"B9P^81.jjmq?Q^#.;1YJ
%0<.mDs4_XYaPN/JlrTZ-RKpc!1a-2u1*;r87!g42X>F:/`FPB<i`:a67+UhVd@Fo?ck=ToJK_!A>\ZZVOKM2j&it]87raRdJbH%j
%=62;V+NlA1fg%3]DX=O=>&tJMDMKU?0kM$`rK@J$;m%+4,RkWBf_0._9Y8psEZgeDKFgu>SeqS@"N<]5D6]71^GtW'OcYaA@*S[s
%rH`^2C2'6(4C`cLA&R4*:B".mP>15-md5QeOlX"bK'eMuX;[#MWRY'k@UaCO"&Agt]H0oGa7N*>h;JHee/7.k&2=C4JEm6s%d]f#
%AL!)pM_41ldpeTtmf_7L*)4!BkA@$><L4guF^kFUiJW?;IEK"Xb8L\!MMQnA$Ws`iXE\%e8Y*RK1-M8P)k73cfJ8.3^ui4%fiFOJ
%n`i^iRgtqu!b#*2?C$e[h,=6*!fGJT98E\Vd;kB-CU#Zc_CX]ub)XWCHWh`R(@iAR$j5m5lF8mGVQ0,\,C[k-(bs%QNpIN9*!*_\
%Q9c&hq`^mM#,W$(b*e!;:@7`T7FI8RRIN(gV$s;1+G'?)mHULE3dP.LG`8St8o^2pS)b3+oSb%;U"Qp*IE5q;W(Z)8ZarI6AhphP
%Lt#]e0@L1@hi\]E4<g@\#$4&[>R6;4)BV>=:lOmE_a#^18#c97^FQ;N%U$5DB6I$R,&,,\GK\7BcF]t[(PgN1X<&Mg#3c!31mCqj
%+-;m/%:R,Jo1tB1G*HLRFj#FC454n?^U`5(18B^>ITZ70,8,V%5V;gF&t@IB(:QBjlitSa7:+#22fo=\]1)-U0jIOVGEu16h:FcW
%$d+KhW:[S@hV656HS<#"]r(m<7N[K7m/=aLrmIHS3A=!*&4<G?[ni0ocY]25\d0B+4LHNdJ%B;h*.\EDG<:[]DpQ'H)mANZ.NtC;
%?S:Z-L'aOZk>Lng9kI1u9QgilA`C$jC<QOe'F'=)MfqlAZ=YGgfWo:n>SHNR2GhnhiEjhQ,4h:s\rW&)SYV<3<dt;Jb2#I%_]#!@
%m]%'l<Zj)/jRGC0MgXn#ih!SnZ913)1h_Y^k_i050G7[0[mV#mA.N+lWT9gYWjqdR2>?#X_b[1p,G-:<K]/nTk8_tP8)n(&lGMLe
%_s;R>Cg>2M?[T<$7RIa2,$qWQd8*5u.DA4i@7%8c#g4!*EVB:l"c8H-?#'hoD<=ROGfe_,C%FXZou/P3[?k6=qVdG:e=SA`NRRIR
%J.EUYW!l+`g5J1?6(W9dCp&7k\0*#5=.>sm:@"69Qfi!14,P+?h#5t^3Y'eaG58ka1.YEQfe_r'k9#8$1nW)s"JlN%PU8LO^E8>`
%Z<"^*:k.]^;.E=#^("P]QW]<51KclpQ1aLmJ=l$!aOQc778D*S<KG^EDp<arrk\9_8F-7#F.hq5NAX%+<3IC9ia48l.1jAU?3$Ut
%ke[Up8DZBl<A[L!1s-Zf&/N$@AX(HK*D\L@7-_LTe]R*Q-*&9E[^1[.7e^)TX8D?nc',gOpFsZ:@FdVr/&SdZkP^-G5TJui"ZJ)n
%'E.<cJ'()_beX[^n_1RULCH[QCj`#Wp^sRJd"3W'ik4RGK*^ONqoRFK%PKk5>uH.(aL[_%Qo/-,o.resDH`!fj,P;3!`-f@LWpP@
%!a@_g8#O."Ksu0,-EDeSie7L@/]csmpjO!q?iMQYHL\Y6l+i6$`0\b@An*=Q_U&Ph;_FVj:(ljt=KAq@bF)%a6$DqK>aEBjKs(GR
%#Bp[2JhAoqp7lHC_3L]Sbu>+Cc3CLH"[`@90U0f``q"nQ*i.]Ui#BfL5m3,iaf,p>8u8,KaX4DeQALBfM@I^7[)N!O=b4NHP+2DX
%1n`3Q[#0<>M(Ac8)0d_p\%%V)?=qWO))gHOi"]Z7Vuaf<:AQ!W9eF*?lCKm^8S-Hm-#X$DF4ll[_e!USAIl^ZG91a,X1]A)0-[KQ
%Zf:``a$e>r^pTYe#]>%2eR;H"B9\2nYJRF[m7Lht8=KGZ33qNsGQ`sB3DfrSDK)q>mt6OdPYh4X*m/,JfM#IX[3p=RWhO-1%"Y@2
%5JRn&+eW$H],8dJX2s\dMWE,B9[":5HuuWE_c@j3]-\euZ;jW8`aaPLfK4j7jr%][r&@#=[#<Z<n1bKQ8?-#p2.[bfbV!.&&jQ2"
%]#2Lc%Do#For9J$-:E(3P.\sKmm0/QoY7I`2[)*OEls]'QjK%u?09%dT,m4`rqJc:\DRoP;[gqB0=\Z^?G/$jr"pFMbcG1En"Y%,
%r%o-Y1/!OUN(]U8e$6:g0]<_:kM:4a-U,E#ZnJUsjMS+1T0r*O5Rt2,f\L[7N8RS,$ErLEkGW586TNiED:s41eZ5<J-Tj74U8^44
%),]BnJkIjpIiB!\dkU=MN8Un6`&2ac/1fn7"$h#e>lkgLA?r*:(qEKsL=Cbih?j&Z@;)n]LdTo@1h9-9HT'rei`^,[BVQU\N0@BN
%+:2RcbVPcq_m?>0!*D*s-oa:Nk]]B66ahf65'cq]G4ud_+mR7PGDs;`%+=@F?UbE\80fWN%S4p@HAbgo"g2Y_jF5VJj!_qmUkXU?
%5,K7AQDEe'>\s+W!hHpU/Q@OV=l0"F3\qBW6J42NPQ9X)20fjS4hYX?&2[[l`D.aeS;qFV[uirmNpMW[,h;SH:pU@f6aSG5D%X@g
%2G5@BB8akWr'h)Tk0-SVi?qP[KhaNf@G2#oC<2WfjS8)g[V\?Y1=\p]_+RGuo(T\k0Ot5m'k`l3Xl;Bq$8(R?FEPgdPN)dQ+c04l
%6)?AXf<T1fq%Y:ai()==!,lk1:AUaN'Fgt*4a13l1(RLtg0dfM+Z0ANq^#1c:'32fUXEsJOZ%OM4PBN.@,mT[6g)LYP>Fpli2@<)
%EM)8:<>YfgUs8MV/*MEa;okt,,r3#(@;_Y+(f3F\Z'!,j.:`EV>C9oh>YWi%FS5e&ru12m"SKr>ge+gQPf.<s!>U&.7)?9D,6rGL
%Ca6[`q5[XaK<J2U@ReKgUX.Eo8.N"ph=H%90N8A=Dm+l@/nf.lSfT5?K]$#t)]\Fh+E#BIRKpM'O<MH]cIIagH<D>9e>AYem\rES
%U(oQIm5'G(!e(Cm5E&2G=LjNp2_0#1'>cQKB<r^ldp`3V3_Q&i,!mI+ho9O7>TYh":FD,%5IcXX_l-cmheG5_:VCWh&(Rg>0<:.!
%V8CL;.#+7O8Ce=%:sBM<2a&+HrSn.S$At/;^?!M+L6CB9@S(d\'6*IJ&"Pd3d&ZXI[u+$&?V]@ZXQY;!D0Q3-8aoT?pL.neNb>7J
%Jpe$5@.GQOKFcN&HuTE9[g,-?RSuLLXY3162U@[MK&os[&U>-t6&)`]#^<)PiZ=$TUsS.7N6rgU7re]ede"*]f7#Q^:DO;s#CHA2
%-9Lu-=OKa(=B&-b.&4uVi]U,750F8NFbRN9oqg<%BpPgXk[#cERHFB72c6`j!3>0S"[.MtL;.-.]@=]Y2e<?5@\n'.nPD?:l]+Jp
%']X*S&&9^mKK!;.1#ebJ/()WZdB30qXm8R!Fp*3$mf.b8?s\,-<*g/SkK;Q4lqS%5FaV@"qSrD^N-LLg)S'"T-!1Fc8^S1Yq.I^-
%DJksIPsp']PrM=7<R.[V)bq65LdrF<QZ,`0Sle=FmDgoc9Us%NPp)P"QCY_Z&/?-sJl;eF9[?@O/-Z!\S?_GLch\D@]>Vu-R+34:
%;aE\km"c>fmE-OrrOm4\A7p[A4$)9#Wu\_JUd<Y0rLO'+j%d)$)eis3c`n66ZBBnH$AM-*YIsT`0QtL#P'^&<e&UBkPAV[[)W-IH
%AE[m/;5l_N;2f`To#6FVYAc4(C%uB6YZB(?5MB_:4@UJSF<6_93"[j"VrJq`D^VJk9k6qg%7!go$Jr;=5JqmSDSs/V3QbBQ>fX:3
%.EJ4$CAU2MGXO!c/Xl]+nt&\HFH->i4#\"j]W^q3;.f_9Do:]K[7f&3J\i>AbQr]`aJe!f`@-*aZ]P;_(jB)2au5j\BnW71G5PZu
%BX+M$)3U@jKFoK+DD`!^joMbAN2"k!-koKY.ZJJ)5eom+VIJ6mZ#:%>3*ISc_)RGqe7n/Q;6&$D5r&`82k5QB<CQHq.Y3J\^'!l,
%/Zfk$aHg+@oPH#9;\/\8eRe(*KC4:Z^LD?rXB@Y/790(S.7>57DVI,a!#Xrh?Zl:(H4K2]XhNR1Udtk&VgLS99$K*BWci:R\u-RE
%i5rMtBEG*gDGa?D0[H[';`nIP(atWj'?4Hl7V;K&-s5`K]suKtB4W:mqeM.(10HK^3.pu1GS%qf=5JS>eI`+O)F:<]D,pX,Oo8$O
%NJ4l[6-,A=S.%;&6pLsnK&V5KnOmhZK.>g0dul;*KF^;+D(r-?2W]&g`"7WEEX*`q\*hR?6oBa-hPZGaePn<4j)n:j>s!e<(^LE#
%-&9J`Qg6A/P3F;[>8u2gVakmC:2B3GC)1(n!(d/75ioZWd;O](#rmIF2f-`L<1fp;7PfPSit,d[1fVeDnml*/n+0>$0]b/]q<NHW
%hN6ac2&qdp\sR,"#mB]KlBrZ67m)\=6O;:!+bRst*';(L_7\AJpEE)s/YDUNadV/J>sA"k;CDG0_(-s)9a+o_W+1:tH;0)bOS2$'
%L#4jq%8N)oMIL2,HTmHX(uQe>27=h.!BW3qdM&C?oB.MFY"s\]ljT713$9VPPqEVij3:Ar:qA,)Wjfbg@n#c=]Tg9s8jJTT\^N4D
%:A)Ys[mN@W,c52%RO/di-iS(U'D"*qr'5picI].QV!s\:WR[9(4c[(H)PHuGeerS_<q&l7#3!r6j>S8XbjGL+"&C9l`?fo#RHl>I
%D4Xep;ZYffBs/K6\l7r)3K8rV[d=\e+[BbS5*TRmoS"-#)#f.i".Rk_e@Bp:B\B;=$U:X2,$DUN[#(qaqVKbOnU$hI^V&3Wf>#On
%ce6e3F!gVVR(bc.:T+3!"lClLVuD];f+X%WGO*'7l)FS3os3i$2](\4cR*=mD/=E^^S_>sKIF$>p@317hJ8(,%[!&Nr!-QG<u_?@
%^"QNDN*BG1HO)c,_>]^6G[WpFfU4rX83IS%4jl!$kOg&i:RDPVJ5"V0=36?idAi5q*/),`VnZ$c.qL&oI`kOp$sOds2@LH(V?Z8?
%3'L'\S$0Y$gR,%R6!,m6=\`i7qH;c_LZg*RiKMVHMH8([Lg!"DN^TWsC=Y`k%R*DjdBh\>n4c4.-RMEq2mQuJkV:-6hTJ`.#;?FS
%\QY;5B*q!?)X)ld2,7`jA+FMl*a!'mJO15>NmK;&i?%gB-WfS3mc:_#otiMs9^1rha!\;C:+r]qQaU09/r?`s2<t;rU*NJ)=0IMq
%/,"B35;htt"i"r5bIa>ulo2uY;cs&-&,>-3^N?DYMS_1C:r'XCr[*GSj?AUsF^Eoemj0J/ncNKl$CM;WC(SP(+/4Q9lAW,F+LJr"
%\u*:,i#ee+#$lC&(_I*39j(U*50RW=(i"Zq+bYOFY<RhG?3E2?,+sjtI<tA>r,Tg[Njm-W=c*HMb!)Ne0p:MsHU"$f?/cfqVX*Wh
%m&u7%>c.<i&_5?^Hti_T=74W8?J[6ip\QLd#,OS@^S>$gRWAjZ"I>)E2B[ao7%c@)#*d%EPs(tj4a'!`CJ*Z>+G,P!Yr`,&D%#=>
%YK<\<KprY2mAS?-7b\P=Kf*FbQ$3^:25iE@&ag0sL(ns=(f_:h7RtCZb6!5?KYTD*0'qQf0ggf/NuY;<!A`+UQojG)WK!Lfg#G6@
%Q>MtrHZpV%ca,uGHSO-1rDTI-&)`/6nE`r(PO[K%i"p")\oU>4[=`Jeh:mI[e!\/T-'m+s\'1ar&)ba+:(:F1nCaZa"=j2DZ>6SB
%nK\QEQ'`:V!E=LD$cN3;[4t9aq3Nrt8CSj?"q*jY"[n*F+hm+$+$[i>5lh_e\k,h.\%ogKIAfgV$7397Fl[NMJM`ZK.u!0Y,!(sE
%=*.T?GOM/2UTUr&<,t`c^.P&!UDVApNrVTj`r0*]W[oMu,o)_KiY,fldA!`q9hlb49[W!1M,]^RO>!>-7b!gp,4RT]4\%5bO(oH`
%8J8Bac)a&c#D7\44&N>=0FR9hV_62r'2>(c&scNr4H<Vd5<^M::t"%:pVh6f3AS-];I1(k2Y2hYs*QYJ?;PR^bX;i!2/62]rr_'a
%/fUk0PW<K]Vu)R$1`7@\2I"`<#E)dS:nU<M?qA6?/\Fc@GersfYN!K]E8Me(N!_%@DBlbq<X8Z9J\2;\2Og'(Z7B;Kh92hg)_W`>
%W?6"-#+.jS[Cf8%[OUS=_^e$5??r3MA%Io"_?N@K&jnOIV7D8YWu6Tco+\=9<GQFMK%isO%;"Kul'GD-L:uOp!,DaCSIb+TR))N#
%N-gAd[2>U7mn;F0?7YZk3dqlh!BZoVk$`Ib6ueK_"FAI74#4LQi![oNE2tos&-to0.g%C5210KRU1"*GHtJ(#'WLM*"PZ]*C6YNP
%Q^YK(74LAoWr\gZ.Sel6Mi3Z5T]seI0Q^ts0]AtOj(b$!YeF<rgWjGApVJ,g2OuL;ljHI63H7!u(!fDA`;tEOkVr<JC+ZV3$)&:r
%[dm#"i;m%ha8uG0gD2\o"`^8f",aVR?C9HX"BtiH6[[ib?6.>W<dX:Lq!/(bLTgX4$A!^)RRd2M&H47FHX'S"GtQT)Dh2h"#S$&N
%M[-3Cpn93KBe'1Z#/sBWU#!H]6:m!sZh/g\CWRQY%,lP\etJ#t>!3FST87+YSc$"@&cQhCX@#M"DdJJNU]?:_C:r,t0!6>uKb'U.
%W5ibd&m7XM0-(*7!)(,:1Xd.o+Hh-uM,F'r(bG#B($M'l`K!pt'-#8ISMb\RHIPA=ls=HQmBBqL34b<AR"8C<mCa0)(dCJeUHL17
%iGKIa=Z2+_ek2BaO#pl$R"$Ni%idG/,=rgLLW_j!eJDm*cbTt\^u84Bro//&LSn)'Zfi#"j=%k.N-f]+oM%bdmAaO'Hd!2;LGqp_
%/&TJmcIPa.3=;0ON5HLEo3!mq+t9WcJ!5oJ[!EeuNT\+9,>SJ1,<j1(2Ni=X9Ah5,i@*9Z(ZeVZWD8_1DEeeZ!5D7_Sq22JlULf\
%&D]\+Op\P[9i:-ZW&c&d3A!S?8saL_B1O"uqGZcHE%'>@+b=(+nO<"#"=(D%.Z)XZ/^<m>a8dlhl4/CcEp/_;h8E;!Af!`RE7@^4
%5g(6PRVf&cQUQ%Y_doE:^**;D$:idtaIaBA2FUcsmkf574pS1r;OKkML!+kmPBH_3KWm1?8/4MQL1@1#QVg&j5-#(1^mg!e`VQpP
%XPtq\@n.j,blXu[](uGLgI8!oiRjhmX_N4ur!ep;@S#98>`<XLpuHCX"@>d5S4!rSOsdK)>06MLi'V'K*Y4:M+sAYP5fc;e6S4!t
%+E5P_@Ra@!ZSi/KGN/@RqF]kZpbp;A1$BF+(Pc/M_KMfZQr-Sg@t)@=K=AW>.)LP0>So.).=KR^g*-^kKX%M[lpjbbB6/U&7uM&u
%TMTLC\utWI"k^3nXDj"YLuK8E[?LIqNUtLQMt`_iqIl5K9S^Oq-i8Y4HtCD#nAMU!$:oegn7JK&&/G"<QUGj.pOA#`(*&M7?dt4m
%6Y48oC*Ls.@gnAQNF&E[HHIl4j5u#dFbuR!l/pm'k%Fdr.;+Ci\Z&-HCrPZ(W-Hlb\0<2YGJm7=OAMK;Et8YA-Dj-GLi8,YM0oMG
%RX.#MU_Z#GUi)hThD?[e>%L@f#kFVR=m\<kE<CEiRfuQ]1P@Vr[9,l2N"AZ3Q(Ws8CGFN#.QBW[Ih!?smR&>H28P^>gBUAFVn,;&
%9VHt5jS#9%b2PU8kU"7\k*&0g,NO7LO.%DS8;sI,R[`'Jfd$rALEUSRCZq/4Fb*WpEYAugaN=Qm`JoNon#'bnctT=/W.rZ"e$WY;
%&'[>>K_Y24W$U++^o6f=(hF$V[u+pZdEE0s%%#rNENAa'=_^?=PZ8XpKY<jiEHq3qVf$/9&dhdJ)_U#K+BssdN$;XBgTaCf4IseT
%nW2p0I3[5C)/b?ZO*N)tJ>1N/S03=L-9PKL<4Cd.^Y&aOXtH8M@hn?_RLo<E6qQSrFXIPP)gs4)B<e=hR\o$^4.j/3:^4:C&f+6Q
%T[?2q?n=4!PH@\pLh6jV2MJ4CllWH?<0)ht.ai)L)T(2_j;)gt1MOh]b9cE+H)=t<jU.9_pbG%dU(A(Dm+h'IWA)U2Za]R*HT6V*
%XcnXG2MECaJV;2WT)9a(dCo$hh[I'#V@B]39N:WMR94!7Ab0_0nN_*h&rT;NnmRj/G'E0!>j6F-og*;k8MKg]2$qKACV[If3BkmQ
%SJnTd5Tn(i#7GYgAg*0&C_jklD,::YBNrY@-ar+Wc=9F=mJ=9[:9Z[L*[Epr,X^jlU5)Xn77H5.X(J?V8@V3u9,90YZ>>Dk2#-90
%^4oFl=LX+'%(R<R>gIsskHjrXW7/:pg[7[9de;?.5.&X*"Q3,'EfKZk-TSnpA+q7ZL$RL-RIs#V9=7W)1Y+gTbS_t3\N/u*2)LVR
%N"BF=D%o"<ncX[b3kW\$Ud4H,PuT5L7uKldrO>?;ncaf))pH*e:#-fP+U1fo#4?]YYs2VpTXM(l$Ubs8+&QB4Z4@<r1HT^95m[oV
%n-DdkRAI,1pV<f7lVtQI/S#%4XO,5P#bq[:5bGlUp"LIg:!4l^L0I#_,\nOJbj#LK#*eBr?.s@EV(8OhdCCT'F[[lEPeo;MZUE5a
%r#Ulf>4u>hBE7AM<`GTh!uV'TTIW.[5oag_MR;]]^3M>n2A7j#@OQK@Y,$2'dP1U;oX:o9apG>_[]<C=LXrPh@J>MlI*eES10k;!
%<opk93(]ltmIPWXSW4OsC4]_'!$_'`YHs\8$?J(:a=*5!`1Ro5/;34A].&IO&\iS@2d9NFiRpL\L?&<1;55YZP$sTgn;eO:od9Y\
%mcYd70.%s&n&nX3<VaufRu0p2L.E?Da.f*;=r7G-\tp7?X%=;YM9\>DlLd+I:#Q_bd`4QIHB*W_3jgR"Wl&U>50g,Dq*X^Aei^aH
%9)^5"e,;St6qc(MaK=-;n3@Nhq<tm7Ioq\la#ZZ:_p1Hs@LE^c_)A0k`pQfZc_e.oJ$kOmaM\Dr+CLlbT+dNB.8V?Zq2K,+7mjql
%YA=%'lZudbPc1*mjX&EOfJ42r)AuV%0CEMoSi&^3/l2oCR[b:@,EkNp-7>6o=j@Qp2;/#sk<3/d37E'eIiq7HHCmMU=PG%*+_io=
%T>@e,$Am,b?q+g^JZQdV@4!gC5UniY!8buaV2/PCW"!_;(phQ("lRV.I4!WPY__52[,R!#J/i_u^Wc/9QOi34Ot<:/W]LMEb%<$n
%8FI=^EIq-"'.-<P`Lt$QiXmAB4WkKLA]RfD8o]W4>%B08\chib#V],f-ED^oC7GXHGUWEK@W>^09`<+s6A]2'ds%.:>,`'@hp(c9
%DWEV;0%#Q1K&eHb<hUMYB)pP&fn=l0p[!:Y<bM[B&J;^0?]sMKc`2&DWFdZCdRp'iSjXX!8YNiJA=J,gF'EGk&2b_O6r+mi#$g';
%7=4XfaoHcJeAk/W$K$gr$iP&>Cj\IdQY]s!"_'HG8GDnoXC,,)+#dtGE?l6_E/8XGe+O@uI@e!h5(cu]D*"srRK_T.`K`u16\)rG
%dfX6:0-1(lS7sbaK5b$l(6of%b"Y;2<J`W),'<PDjCkjCTN\#=]-tr,gF(]oEY,\2[<m(3&Hkq`"btkP3%_5\5*_]9SHqO@U_KqX
%O8puArBXK/IfIoS7:9(r2LEsbJ'_chU%SeFc),VO%J)X\DO5r77R]/fD#\;5N1m/`'K:.LmDl!g5V$V0ZiA&9T/H?'Su`jIBfKJ/
%3f4l6OriLT1is/j%`$FppXa9$ItX8U*0OI@;"_OC6JC,1+TTunClUsoUA68kY(5Vq'uqEb&)_sZl_Z0=)!$M1eI$.1Z;s1]8#i7O
%QT%qL&cA8%!&kh,"15%5[4ipJ\TA.g,W>[S@^Kkji,?FHifM(kJr&K#.I6-Dg&8b:@u)luhhUo2Wbb)cN4'.DLMG(bi)1EN@RApg
%U.dEX)S,88UZOg:**_\7U!nauDU:#=((W!/g2'UVk%8Y&c^K/+5S>"&m0XtET\tA)QPKj8eTI9sUO^]?;2,%V1M_e8bXR=)[dig(
%>qa?\5X>PI5ui@GK^Z'S-.D?J<8uEf(L-AIR,1fVd6LM!U#[k.@;<k9h_\%nLrF@h)<?5aVTh_"p,^1]NoA?GKGFSokTba"E?BfF
%9ihpc(J2LFGqTrM3I*'@U(8E0VO(M/$1esuI$rh2h)kE8:g::4*i<(oOY#*(Jk<FsfqE<epeb3rh5sgt>/+J./+^`<>FI6:CaXqa
%"Kjc%.HUF!!3;cIa3sP0>^;B0pC-!TgD%>J$0I'U-UBk\/>(?-"l5bJM6%du\\c)LEG#c40XcAO439N[+a6Jqd\WQ#,/f1USa;S)
%`m(QGLMJG&mVjKIH"g//PIP]DIF2@hcK#?+he/Gr<c$`a@pN>3_^\>o&V*aZFFoRV\1tKtVSp':XuQD3F\@Os%h4rIaCf-":(ErD
%>:%gGIC(?I9Dc^?080Css5BOZ'TFnA@BAT('@hnD=6Iib5Ka8V&:^f1_)-e9d3b4L<89c.BaSS&;4UtHDDoZE'6+B]11\V72tqJ:
%=%&k*'F9/*-9JK9HO<\"!LH_I)45l:fV)4<_#7n0V1dZ%$2]B!#6%!<D+o@7Sa#Srqqe[O>12D9SHZ#n<C;689/hADd9V_Y[tkdO
%25eW?&G3O#N#HkKCPuIl/OAG+:NW]MF0#!d(:HINJ(5>((kd,)WOkroa#0\!-B@&L)QPP9>\J@u6T$b/=tG<t@qVdB14tB9g*LjX
%T&9?>2uc'bk56)SLp9P>CH:?E@p.5(:&<LtLLK2JR-/[H*+Di0/dm$3_7$Hu\+!%C1e*C+S5ZtN8G09kQ5KL<6"d.$d:%a8M5&KU
%K^$L)k;8`]N]4gON6!C8FtDcTH*eZpIP-MeQ.JI)(H&@PhGJ8@Yac86OqU(Ca!ta%Ee6gn_87>\Q<_N\O'u#p:=0N()naORTIRAG
%I<tnb`;T<8rp%>2bkd[#^Sf&]0&Y2.hdT&_S/,T.+i%(=?/*ZBlgr1QX6Lq9*SmYLH6EE#18Z"N`U&?K:N:7oK+s,c4U0FWn>s\M
%jJ?euh6m<:!6ZQtC2G8V:!-?$&03oQi/#-!Okl<,j2AU&r:[I)8@$:VmT9IB54k6A,YG<jKo?p@P*tH/6_Qa"\C^\-4Th%Go%&6^
%M_[[/'6*&OH^8$]S#BKeSp'aAQVp&!/669pl0SL^S-6<JY>d@7U8s[,+s9^G&1"-:g]L]uk2Ki,3DnPCA6puJSCi"/#Kc,6)bbO'
%g,(H@f(8m!:&/Y(\u,186XMeN+5Kpm=5&RJn+ijUGdRg,8f%H+:%F@364-7$=g5XiMsqIDHEn%:'^K;O7]MA6-?!rpIi3D?*G77=
%>DcsX),imuXBLF`dd;^4QUL&#Ejd'A::4Elksq`nb&LMsK$Jl8e(BnEY1Tm,5DuU%[=lquNuhN-VkdT5hrD\V^@r?@%-P5#X_jMV
%TfT]O22@rWWX't$`PYqT[DA9U:_DS<,V-oaiI@7:p["b?3HD<AQg5r>]r8[&Afn4(RnpjQ:KRJE$[?h1lp6H5[6P_Op-C$*gAB:c
%"fXm*5f+CAY!l_.G3VA-/%;UMks>U3HH4njq-UTAs)[fN5sdT27ot=kpkkW2FKJ25'\kaH]2l8t_<J;0VE=W$(dk`U2/P@&N0K@Q
%X?;<B@`E$14&rj,6Q<'o>I85;)qK<`GZ"HXV0gsJ\ud]sOpX+(nZb=[)eWu023VJQH+<a&.c9TUOI1oGF!1H%=it@"VLb_9%.40r
%,RJ33P<<UlUfVSC(iHZT<0fEA#_0'oOSBhlcuCO+m[3@)Y/34T2ULk`3L&sM)Z96dQ>@\)',=$Sqd_cc]ODB.!m"cb]#-*L:&mOO
%QdrWfh\0-QS:28Y#m"0t9Lmq[dr_85bQuGO'Z4V"O^k\V=4;2&0KrU_6JU#r>j/*.Vod%[:NR>WPVP?,ZY@fn_em<'`Q(n?4#V><
%.;BnK`BC/f;,fFkkq]\Va_,*=A5+gHY&#03\EeaQUS-$m;e8YHF@iD:O-%:e;8K%UBrQ#Wan,Dn5H,s6I`>2nP9a*nQ2%E)rD:Rs
%LpiX=Jd;.[4*8?cBR@@\V8Hp=EhH>u,qpIOln,GI(laDIQI50&hffa6.emmu9.r/:0s)nTdu.(JZV)nCs5C$oN]\3c(pb$>I];i@
%H_qLt>3t^N[O9%;^patl)VJech;O7u2G#hrPq8%ZGLN,d)kW@aU7Zs#bE<t\9Q>]],.O1;&_acDH6b_25I5\M;mrF"D*^a:@--?[
%>tm4Yp9pZ=e4jY4<PYG*`!!P-3?#LX1@hQL%,0F`Jml/SRaJBPHK1m!i_O;AP!k%\gekZD>L:+/Fq)(X]FOC!<`lXq@<mA/nA3rB
%JZY#ZEPndo6kHhA<QfRGV5A0P2:S:;dc;FRP31dhrg.sH&U'.96JE,%Ykd+T#dR6I8IX#G1f[O0B\n$>*#@fb@`H.^rq@IgZY;$%
%)l'aC)!m9EU+fUoAb<Eca9nL9B^F92-&:"u(]"uu;;aTF(JOK`?pLs(g+(g:IS^`#hG7T!:]USQ3%`r9rB*]MmB\3p/6[eq2$-/=
%mK5J3<iMI)NX%#N&2XAj[(1=EcsH!F+3m5(.deDc?mc7Sfm-P2a,^&W9OMicM4D?6f4mtMq5-<L;H_X/hI-\^'nqN,7H+SU(mn-!
%cT1Q]/`nUND<q<W\D2%k,><HfWnI-!7Z#nuL(#?9nAPc5(D_L_!>e9"N%%cM%aG0_jjbB;Z1_A<-<Gp,qgmbB'J\E%U>5MQ,jMJ1
%H5/mC6d\%MDIYhE(PDE`libN1Qh2ET`E]n:]?Q"W,us=VF%Pk<r9d>+dCK[EA6SU9,0%G/EJ@6"Lf,>g!kLIqZ2"dbJ=b^,,rB*V
%1a[+5bWuHnE->3-epT\><A&?cq+`&Y'5TPeU=KTC*gP4LH`ZOFh\u45c"b((:R$Rk0_j)f6m5.r]hTSD[dXnp?<&\+e#auV#D5.4
%kjk3PTYu@J^_-Ns0Z]Ig#%_DUeKHoX4eeQF+"DKCorg*krjd!_iJheE7s<X^`CMZZo[9'lRL,mP,MW4AUp+KSiJU01b=Kpp(*G>'
%9.$WH`eZo[[@QAL<8BO5a$CuO(f)h-Nd"H0]Ah"F=+qPfUbh!rgUT4sK%f3"j>/@;AZriD:11R89*#,!$=lC*c+m@,-bi(TO6sBY
%-q7eR1O+R=Gir<W-W@V()E&Mo2mJAD">+m>=TtNYc,EZR];,Wd&e>j8'^B?>a#")=,cYFj<$D$YG7tSs\pU8is76'a^"8YLJY;pJ
%<X5-IdeSGX?c@WBZc,(rGX8'qLcfm'&1!3iPcfFO1+&F1%\h!e>n/[6A>\d4FjO'`N5rj1@rjd:f8-<9\=?Vt)"9T)1*kMsr(UWn
%V2<[jZ$OY=^&V`W])#K7c4Ht.Yp#3RAFQRIaB3D[(ZQ%5^F&aX&ep9EfX#KZ"I7Ud]rUS)KKq<8-!OEPM`Pj#e+IS[Z6cI'Ru<G$
%pr*Y."d-:sC(sg0L@UMqUAe>L39/WJBi8>*j0t6:e"Y_mGL.,p&QrQ[bZ7%8AAPmi:UsE`Q!g3\(.aM9^A(@fqX&l[%!);$#kf51
%T">pXZ?HW1Tl,\Y#C8j=.X)\Q3((!$=[oS*pB<s>goYWt7Y>^s''+R9d#Go:-!,k1ON$s!aXUBnOV*Z=J>*fq*<IIK'2W*FTOB-F
%!@\CkE"M]_"Dc@MLP8"/#r39d4o3OdkkSoifu^@CeXZVb[\_9eRT"??Q(3Z,NfMWoF+X3HjSDef?EY?Xeo(6^i9>s=9_k)?Usk1L
%MaL*#hbYs5\A"64$Gc5K(Ft_@6'mI"QsAMA;mZ*Q-^SOo3P2KGi+\T3Wu4S.D;D>3n[(G346Z?$]5G[TQ@7WCZ/*0c!H.YT;7RaG
%bGgDpq!EH42=gVn^)lp5p>CYX\=/_M(?f5+0"1+UnVi7n?3H&&=?$j@HLbI';*+bu3UD/#Fq;a9fsmS1_jhtg3M;3Yjm@"Ydc$k)
%&]-?ZP*/Tm,3Ii?-i/IG%51FM&d[!l*BCc1OJ@XN6#D0\)`!9A5lhpR:b<j12oS2]6"/:e$E#3Y$]o_Rf^ut.J@aLRGEscnI@r&j
%/*.g=37s(?_O-*.+@\KCSJfBZF?`t8\HVL^pa,Ri;*)h57];($\]_^4=es?E,UO+cdYH2O/0;(B.BE?&\kinC@)-lSJ>kSteLUK0
%ibM]ENANSBddD^BX)7Yga7&38hd9/4bkGYY^?_#72Go`,3+`g.p39Z3b2B<B1$>?j"<e_k_mo`%b\f/O^=h!2d[XnN/Ee$<[>SN_
%R`I$DLRl9fH1&AGfs31_'d,6YlLYLoK[d7rM+@<Xjs!Ro#n*qn>2dP"Z9_f>0:O%36=h/n$<.k^:oM(Qe#-R\SIBN&$4n+,bH`c4
%.6p9uVP(O33=f*(qZ5.E<8G*PI"61d.X"q,[WRbaDR/Im;G_R/OcgF\ckmpbEgb5Im^*eplIYdm:e<E5W0eY8Lj]dt-G)=Ai?Jh,
%J83'#Kb,,7)X;-T[`7O!a(n;^3A22%_9h_<]]k`Ha?1Y$hMBUL6B7SLfNt0*lOgn#J_/JI)E(#%%2!630\e`OQe'MhR7]C5*`Y9j
%#h9QS*l4$l;5ZLBX4e,9Fiu9hHGI"@*M:"<I!\P>g)4/Hrq=YZ,sNf\8[g/V^P[=Qn/5?S!oSsm&(Vfsd"g26oeFAGgY<srLp=UV
%N?F?I_DIq[Z&:L@V_Lq8!A')Y/%WBR&?bp)Z(l6_df'S>!)Omb0EdBVL`$M"e-E!24!#HP]#&JG>b&ZG-$7>eHM%DQM1NOujQ`!A
%!?Ch%PZss$ea==#U@-$?&DaXmajD5@gSj-+htc+Gi&-qb?QG?b[1EM2r0T+q(7)IoA'piudmqQiY"Wl@2p*SL,"e!-G&nQ>:3mQW
%2Fm)WV*iJ9+n6VMkDWl3mKQ.^8-<H6`9Zc)!jF)?1I`ZNj_?K$9`tt!rOIEuq!Xh>5*pNWleQP<#3h<]P8d;30:kU![54%[d$:S5
%\9hi2:.$"Z)QEZlV3(\U/eoPijftEo.U!\CS=MN>)79&U<'?'F$JOF#j`>[IqI^N*)B]8YWW_?E'-:8h2Ng%bc88.dlBE:*`LD8S
%`@M#YS2J)'@NYVY<ZC`c.US(<BAM$m"IZn!6Vmss'?6b(d.a5\P8QiO`s)0d(q8I-0[OY9,2D=?>Q=Pg?[jaG&-)Vnrt*b-rj"a5
%4T916D#&GAGf"R[/VFI<(:4je-/H+H=C:psOL!kg!B5p!1_`.f;+Du`-MsGu(N)Eg!@E=>]h+bJS/<TH&_*fb/\1A/jl?'e+Ie^"
%OL_(r82E((+#G?f#&tU5nU!7OkR-7")uEe)PpOBS,oGmk8j?h@qh682Op%I7<+=7TmcX>qr!-/`'SVEibhHSS20deJN?IYgN/.fu
%qF,%Mfg2J.g*ceC'df_-C&JU?YmE%*L7%4dl6.Wq\=EO(dhY)Vn=B?\&=0SmNa55cJI,FZLc8':H;lCAE_p)eer<3DaQ[/?P$TO[
%g$bc\KPZbJY$EHg3kc@gr8S(=HjUDAl\B2F:J?E#7\mIhg(-hRKD:,rfP%'bg_^%.8$)GR$8`]nEKti[,`)QEZJ"&,/?$R4Fn<?n
%g]unp$p"AV9S)/l[T>/`b9+d/j/'r'rV%]ZP*]2C.,\j.>-rNeR\)pM!h6R%W4uE'8,Rh;QB12G(kMh;,lV]6-!@+@=AP6oOLYSL
%V7^/n%[Mq:3)^Y;CC)Jk"L<8U>X2&0KWaNR9"qm+]7pn1RR)P'X=q?2bQa__XSAVQ@b8Yb-HGkU1F"Wgm[nfkSKELLKZ`beHB<R3
%0sVZc@tY^Z>\!3/RB*C1!>mTFR9`3Vd#t+bkd@(qGM\t0)#bSraGL(,0/F$,<h&-*YMN)`;T>X!H;nTAW-2k@_iTqeNkdN=g^%S9
%8"tgg!(TIeZI=sn_`NRq`QK@7WP.[4DPaV*enq67)N=i><=o"hqE`PBfYo,]`#q-`g_H;I"%&`G?2#J=U(MCsCe(>C#f!uBI$A)j
%*2'Q%h'tdih#pC-j@Rco7o;ZPnS'E%UJ-8MOjPb=MYu8<!:u#$+NoY3Leou[=NG;rh2)=K1YYL)SoIXf`r=aQ?;#`*jY)<7/.S24
%I0loJEG1(8/,/aV0;QdNp1I,n>>W693@Z+u?;_W5Q38K-9CJ[REp2m\%;-6(#e*U-pt6dP`1S8o0Yt$1L9DHC)c4-Tp(\S`):W)j
%X)s?/\U:Kg;&D&MUt/s1,(`)TFNP>UquTXMB_Q1:l1&9+'&`I)`/S8[G;ALG=aQ)]Dr&n&dW*sn9]K(&!TZ<'.fu&(VsI=qVH[G<
%VU/"p5TG?A`*U&A8rT8[X_R7()*N<qEQ8qjk38+,eO*`rm`'R)c%pmHl@Uc/e<UuGjoN,Q7Z.%kpTmU51(45b:fs8V!TV(2kTj!p
%IiGDYo+Y&Z4Nc@+5TGt/<fmaA$qQg4fSi!bqRLf+q>nAe9*TmZ9I5BqFj21.?Djl`F%,cYbs]N;"'W/$Ld@H^U#pBECj(5][Drp:
%"doW@F6\3M8sWOY/(kN.#TRK8dguQn"AYbLS0XEG0Vk6:&j):)3MJRjKBuT@Wd^4<(u3(A#@huaqhE8d7E,-T^'isA9J*"Vk%OTT
%p#p]Yd_Z>hg(:Op+F2q$nsYe4CXYAorOXMfa"*.u2mWQ[Po:+<M=_IIAsB#,ISa-62-6(>$+PB09US%mJ@>Y(a<9/:2j*0Y6"pE8
%$h(;-F4#V>)s53KZ%2,.6O^7H&U.4%a*87q<e7[R_\Wa+2(fF7+pc&BA^>&g$E639V[hJDq#`63!ad*e:V;ZjoIN3\g9r+]J.YYR
%#/7mp[u6sXZ`*6RX>/\&+uGTH5[WFJAe@mt5E0N/W)/<*#0<t&>d--(eMbKM$]s!j"o.^48T_jLAr\S*M\3TV7g,#XprBnYS4H0g
%U.>P7&rK*R3uO:2%jSet6it,?)4p)/%YF/IdMCQ1P398?a:1IUaL+Ja!FdtBk@DrDPb]_)0=Xo5]lS>&%_3Zl_A5Xr&.!"q-tA8<
%-6ZFZV1p@S<tP5AF_q1<Y8kqEnJ%`g1`kil=b\kd&"U7@fHkZQDf!Wi>=P>-Ug=?"&$)a\pc4LjqfWh1,Q.`s%:pikV%95Md9W6#
%FF*]%P_/s.'OZn]d#BGJ6'?RsE.=gf!+SoY"6;jMD+OJr$&JGN1YXStY4+I;11RQS+E+[O'p(/'e^+OKJCN2-eW?7AK,>16*[<L6
%fM6;?JL?p"VPK&Ob<9*]qESi?/\T7;m.3NE]3)i]h@a7"0^;%<(h1MfrR)><?1PZ_Q(<bn.;"9nAD8j/bpa8LG8*\>8dr?)->6LT
%"UpD?M3%oO42V'@Vdb<"F.2EnrLi4R!>,t&K.7)]Q59DLmd:)qC%L\SWJ7jo;79(,ZDO4qYXMN&6T*.VN@SqWVRYs#;pX?=4b&Wt
%Zfa,T>Zf;16$5c+0E_VOME\)BY`OD#DaGVXs"R!5S]+_f5L<"&(pG292LqF[h5DuBC*'K2ol5XGq&HA/"+i;5SEjWo'pe,]I;tXp
%I2BC4;#%,i7O=J8r&3.EW&5hQ?:h5h\[D;2mWV]Wj',.fMnEm*3J;_(nu0G61l$f+5h$#FVAs3Z+Qd69OJt?sQI]3Z8?pGA>BZ)I
%dTt.M#aEMdI@$,oMm1J-4T_A.m+G&8R7NhMOpP:Qbnb:jUd4l,4;\Oj&CiR!_KM+nlrolW7?XZtfmg5rgiq:*@&t*Bq+9-S?US3X
%e:\^F5tY[I4))DT"k5;q(o^9)-FP5;K=.+KA'$(_r:/,NK-:DS.gi^Cb?AsT#Ug1>k*!^F#NX:>.UQG%$m?(+'?CWh$4.4YT6O>$
%21:?#h\6R]:M2nLV5?E(g.$i!!.iq[/]^%CWHD7=nD4-p#'NW+_;m'>PotReR*=#anLMth>5VFYeFfS=B4DbPUdVS-M*m\b&nk_`
%a+5m^eL,Ma-h^O[kCIYNN9/G0i,/C"Q,'\dYECLa)!r`P@V$?[Sn41eYrJJ:qo&pE&cG,+6X3NW&]4YlUD>c^+ht!tj81h[6-t^T
%ic983<%(Oq?B$S-OB^duc,=BgIEH3+qL=(VMX<ig@L9=d;#'"NKg^bpBe]cV1mSqqpV6't=o:Q+g2:QY.WM7'j=/cXR5rCD@F5Z%
%95>1:I,0qBWW?r;Ch+0.7RB,Y,t9Z("@d@I?cSfmL#J=6(h'QTQNGgo*"gH@h6?\4FHB48**4:UObU[pFpbkVWUC!:rlZBq-^<h^
%a6iX8M2jC$c\PRWYZ)MRo(c3,)Ylti"Afi4.1$IZi7+$<A"(N*7k+j/"KntOOqVle2GUF<*0_[/9>![i5i-B-jJV,U#GRhQ062Nj
%^;Fm[^]A';asKWO/(mEoL+9$2.Y8pDaTn=73.F@QnQZ.PE!VeA\QNQ2=8/L'1dfBHh3.PQo:[",X]YpO0Pe^(4mB&a;6Yt[2K,L&
%MQB:K"=$&oB"ioF)(IE%,UIV&,sj,gI_<K.=19,mcoHYI>HP0*U(pE>hthWohjaNBn#s'&c><H*5Mp&.&NUV;TC%$6hBS-A,t2H,
%'K$kfe?9>cGuJf5AiLL`hVutH8)YtJo_dWEP\H2QD0lu1fV?5Jq!Lu^OMC`1@?JZt/f)[OJ6Qs5-)<nJWj-aT^V"_<\eW.4hF`R_
%6-B(H+,W\W?TSt@%Ri3"&&3Wc:N]5l8Qf_H*2s=&-/tL;B602=r@-Q)k\.dH>hss*7>j#1Phq=*FY]V$8u/sdl5IK3P5!1\K6WDR
%g5#S4p4)nS2Mg2c?d)_>?.*ROG^R>S=m7J+Adpq]Hmg4lfcZO`>Su$uD!/nPFVlii^.oMDf4\3YF[\u(V;B*m"PbZT133jblF^IY
%MEE)'gc6R>Q5t:A)C#UB&SQu]n/-Jql-Q1cRF8E_%1GCS*Vrg/6BCOAFL@:k8A,ZaG'`qhVpM24LE7[,O*qO%k&fZ][174'(jWX]
%Y#8eh4N^%P&PW(eUhSa8)kfd:KHBm)<,MAJYt#B;bC%dh<rCVSrHGLO`qoG'k7K^n]eBQU04bY.%^D<</h8TslAq(8eU9,S`BF\f
%F=#-[W3X!b$tVEWZ40)?huDQfYFG"ImpG0OTQ(eX2#"*U*?Z+IdU>&f5VekG1kh145dhZ$]-<3Wc@sIK4sBqEBO3Kd6H39'J00Ap
%8S%`R])q>\V'J?]BsK?D<so)u%)N#N%^:_%Do5<hc#%7CpTQY$JdP%XbojYsoA"G0jQ1]qj0'Aag$VSa]2M:c++R+p=[sZ(@;o&=
%(mb]Y",oqD`;&j>#eZ81*tKIAM4S<iYtHEdLV_SHL73jMRouae:C%NfmOI(+"Y;mES6A!mR*3>R[:Z<P>lC%+\mhOIWbuf#8Id!L
%bp8]3_WRmt265(3IV-.](5Wa)632+j:u!J%8Hcb&fOC?P*D)GF9JT6ajD61KKG3b3V#R^lT_3"cH3;/dk:=`0iNJV$q,m'PoVoYV
%8\D4s,;uQt!"Z*Cab0lf0<#DAn7O;k3VQ<$=7SVQK*cI0f^dSs-+`3%q'iI/68Js#Nod-h?un!?J*Kr=Q%3Tb*r<.HpVm/:h3I?J
%EEp>l!<!!Q"FQo)94_/d;'*i0JH>+imfq/\ciu=k5oMZZp[2-ip-qq"ED47T60)NUG?<o"Q?X!dlt"4Mbgab[[P%=QhIB&,#g06K
%c>FgVhOEa7Dh_?jcUZd?PGe82I#181O<H#t-[erLK(qs%g(egeM;^QKf!+L>+/ZT<r9r&p`;[edmB53MK[0h0+jrS`rlF26eXdT)
%k7?Hh`3#'UU/V<FOH)Z9BM?S6['H/Kr9We<Mnj=+$@3=`0P'F&*t7><QlAW:*fk'Ym:p/]0uSlDDVptEm:Q\G:9QkaFCZOYk,BUM
%?R2pMIOkN:Ej\4][Al[keE(@'@r@,T=N)G4@:F+jF8RN:^9eCJqB7Q*gTrXu56^"+(V5l^WBRc'6@V@B&X3]H6d/BGM]4"W=K++p
%&W@^dq?e]_U/l*EIRHo#P`R:*b<3@0G1TWS]opMPq)4.F;FL#ARLj;*D#/:pl'J/SHohN#'sCq>e_BnI47W7lM9u;Ubb:,XjC?Wi
%<7,o1K)$'mGd&"U+ICV@FYu7&6@=7&4ch_CC9Z$g3BCaHa+kr2b\Rg@>t*ACe-13kk?tfW4b;qXk;.QpQJBc^&'d0X4nU;rVB<m\
%UYZh,4#pShg=!hnYj:7+2ZI7IpeC20U9M=b;KD3_KgIHjnIe&]_)R-2Fe+st--dDF/c6aq-8[![aZ<6Hg-U*Wini2YgalJd*'04.
%?;`U_;l`@5P(I>jNFpjN$^jN@Xfi*k0iA#=@9o@!/VfDLn`md.0ST;Mh<iBC"s:&YXr5`eQ>'pi8b4UoSJc>pLCP+<SuSA*50b0+
%ISG)j4fj(rL/-u'ZBhE?7"JmP,:H^<b#[.EE5"OH_EWFco5%n-e,5*:@)sY7mhkBAA\)"YlNI42n7f906C6o`MsloOqAn6)`!Jr#
%M1=/nA(t\UEDBXHntk[PEKXSo5!IgToT;fJ?X7EdrY>^=mA5,P'JEo[Cnk7``V<sVlt3Pf@'fNWh+ent=VDAU6FiP!WLDKuD=rCj
%-U2=D>CE*J^@CT^)e'=((Bto@X-sfkD"d->`jLq,DjhA@rGBWg@!tU+M`b$+Kf^)Nj:L$2W\5W#7P6F-9uc?T9Llj=+U+[m#V.3!
%OXlPD+>TQWS?OEBX`H^,dbEp+!pCUq0S)<S55[ic%83>eBrEH>42&\mTGY9P*gT7T!>C`kFVS]=&K$^G)9/st(EYFC,''r/2\A[u
%5g+-[iPaI0HkPHBcaDbn.jNh'en'+@7B85-A`B+A3d/Z\U>/julAI*l<Yr(t8`]=+c:dCMVi[aW_@k;#&3L'^g/>IU6d<0E5S?B&
%Q-;k#P*A+1B_Wj10<o[+jTqJH14WJ(UsR$R'!2TV=*HMs;^'(9r3r,Y8lj%F=&BtoqB2*&"r7lLonM.ChS^k>Y_q0.B$PP6^oghJ
%/5^m>_XqqQGEris-KJo1/Q:0-Rnhp0";GBN_I0noUjVcm`iG9^f3@IcAL+!Z[9HKp3AS^\PhK)-U(4M'h*'J.^<"#b?.ioGd#0H.
%mo")M2!7;d)r<On'suGmGSZ<kTRbI4UheacrfZ#gA:j.0bmS&Yr0!PH<7TZI@4jf\EWK?maruPd=@88Gb%+-nLp(EqMOrF6s'X"s
%1i?9S6W\nDnj#I]BjV<F4NK[a;A^VDl]?d\'([p\BMX]:,%<GNj<&4;P-YP8j=4\4pBF3bJt.%OMW+A._@S((e,Li;N+P<6PWP(X
%<HY1S[osi`-8C$iDmek7Eg&M1&ijFbWbK<$0a7372ak&bCr61"aiJ=8o;sR9aj:5!EfG3[Q7Q"6UJHYV9eE<N;!6C+[rCoB.N)8d
%AWd!>VMJ\PLNl,6C>g!&O-j9pPI0`$_.;Y-^A>3H8rQSkjpL]P5a7pb[&"lPAl07DBgII8B;>U<jUr51e66MiQXD^@P-8O_2IT6'
%ok/ip+Q>kFE9Ia1'.)NWYm8<Z5A7)0.V6+$C8+/'^c//YiQ[_nrd*I:BD^8%5'1(2jhMHCcgj<I.4$lT^>:s51G#1,5DVJE:g27O
%93EAc'Te0Z$d1h_Lpa25AOZ(t=Z0?s"^L5a&.W&Jb:eDEA/46t6tep+B[]me^)XgH6@$`-i.eo\<5pdgBcU[F'S;1=X+r+$LY*ho
%YV(jr@X=L@0kd\(`EmO`1qA@)rEqP_E2>YHe>&Cc_RuIi-kl"N[7GKS&NsD8lm@lXc%.pS7Pp4$gDp%s?^MPLaTSVGePc.\dE]l]
%esAeOZ8i6dYX@c=Zs*KUHmdIRS-=CTB[stj@(nX=/NerP<WZU;>+*]iM(;I4:rQM@d!0NdDbPYTeD/uT8:29k&rXUjj\b.-crY:K
%.?X[`R`e[AZk@(NX$)<O2lQcnV3rQ*,i=dhC3&;Dos?CicS*f0&6U20<J)+?S?J\!,V,BZRM7bB7=RB4Q/uL\?!D+hWr_(!Qa@*U
%MN)OFI^Z<(/o>KIRW!cS^c!A?EGebNi@miN*8:S<<A69ZD<%TXiqQP)g]jZ9),heE].<!_>:\k?8sb*IBraT9)hJ4JMD[pq)a$N+
%k)NGD;HpZg,Zc[![b6W_3DumiX(c!'Ra46Tq[?B9$!,>nR]NPOb^Mp:Ri30#k%%+hqPKXu,Br#q55:fi/-?Fb/?']'n#)pVa32t@
%b']<aOu(`7P'HM.MGk2);";XT;*uT;KJ"e8e.u\G)a'G"M]TJq,VVf#j=(--a"4*J+$Lb3iWO*kC"M`01o97@e^"@D7u`S!J2PCA
%$5&&l4k#nS6hhRh8N_[T<59SDHOhoJ7E-M>B;MS`JCp*8'.aG:b)Q0sM&pUH@hTMLrqhr4U3_,s0`oYi"h@05i?+b6K7%3.MM=i?
%]!J#JKcYVRmAK/bS!47N.(*Wm>P$_22KF/7V_k`p2Q<^s]kE<DV6t1!,*0*1NZpr.d=]ru@'*BQe%4$Sjfcj?!*XVi1H(kb^H$sW
%BbIWYqNY<SYjBpS^g*3]-NkF19FGNb:Q+A/7Td>O8&@:E5]((EJ1)VGX+^N`BhG9D)WssgQWMa-iP:LJV7SdCX:VXPs442C:5#dS
%+&D3t$`$Nbktuf=g!CFnGLpO0nWA._`)7^E7W_Ue>E\,3*A1qhfs+som7g,Dqi,KoVsD^kF#N9J#)O0J<Jcb`=tniKqC3td2'n6i
%.'V[:7JZWcOT4k`7U-LU$rUhP7$bGuGOWKRK/eTqUd[+#65:.<.H6I>+Zi#fj$[*l/!Q8unV8l20l_'YWITOirH;<6V]_L;2et/d
%5K1I\>fEs8>s$^a5k)tB4&Ej=eclO?;0IbkEDo8*$<ppfdFQc8.o.D\&>M=_!hharXp9!^R)us#(k&#S7%eD7^XAjbj_9bpXD$)u
%+81P=,HLD!?m7@VeDQh[M?nZ!JZnV"EC%P'1&3Ls?N:K"#H6mm2;r-eIL2R/NXiiE?]<;+bpsLtO7U"JKk9ZsGfHZ,4@*%];Rbb_
%N*;c.RV&6r_u@]EZrY8DVN,$XnJjCY,TAkCU``4La.Ab4FV`+$Fg[agHcMWcXWSO=T\UiQVT&Ht3p"8"d#DLKU6,kK@.R")N1g1_
%1u0mQ%U*-bnF,K\a&DR<_GBQ8hQ%FL"gWL2BL2bW5Nc!'N@`^@U`I6nZgl$aW]T(iN;jkEL>ldgN'Q'O*A,/<]6L@jiJ<>kEca':
%&Wd=@K*E=Sm4a!sM2TO2EGFU=4`U3C5n]FZ#o.iP;*GkV@b$A$([)#^2PAZ2*IVh$DWNFL$7FJ[^,82583TR%2b)]?**"YC7EE2%
%ogs41&?H8q.)N:**)@1>4n?4X7K>:f^N"I3Fb7V@2ID2HFp=`]Jl??]K8&D$hUij2cgIkqg\U(in:C4fh.1,B%?\tFfDk"-Q1XSJ
%&^s(Dk3I6f'kboVDB*0cl<3af8SHDM(W=%=8Hm-]cTd];$ia.j]H#8D?+N]kgAW23S"E$*0JC;5(gG?PHr-`pVA1k=\?<Dbeq2mo
%<e]i5MP-2V#)u)qf=)H#8??5&?RBtTDN&aY2Q_2J-jd5SR?G[7.*-E=Clt^[n)%_Veh8-1P<I<(!M>uKRNGoMlmZ7:45l+M0jjS%
%'G@,8T'c[8"?"sB&^5[3\4ITHihkP!&8T$Jlg*o[Vim#k=[If/HIUlI'?OkN](cGgkt5]S1<6iO8*E?RCO$;N>Ng3,j6,Qe5.Mr1
%r!pI]5BJ[^+.^$WS>Wi;q.=epb$<5eHQ1X]6]mn5SueK?ISaqAmYJAPOt9b/I_U"+f\qRMl<dsb+TpNc@I[Wi"*cKZeMuI3L$KW:
%=`cC)mTh'5U>If:!'(-]fK!^T^KeX"+*uPb\tGXFh4Em263.b8qm&k\M5;6a7Z-17H!o'r\)>gXL(eWE%K-c+H":Y8GAOR77[gFS
%0R@.*Uq+W7&qPMO^t'2-.&9-.8G7FsqZP#BidNV)G5H'Bp2"LEEG.1>."$]r9h?tUd#4D@",WtIWJe<dd@iuE*<pBQ<=6*k0$2/R
%V(j;IF2g!MJQ\;CZ5j7B@8UtIp73f+?eqQH+l5"-%r2c#)F-a!>@X0+\-J"]A=kS=9H+!o/n)@]Sg54V4\(SKJjQtCihOcbcKLZ(
%#qf-!h9Leno,^FeBXlO<JgWG#UMW%FpIP3]M[r'q]*HuY'rBlr`LW(HiK.P.WKe`:L=r\^V'sm>IfRrlDig-Q<I%V&F@)VH2)fQj
%:a6;7gRVs%YQU/Wq8#<7<H$F)P,6rG<U%sRK!\7MWJT:b]8,ZqhLqH7GV@D>l8_L]/&edSo]T2E`35&FlG:2#(6'ck1M4[1mm^<l
%cdccl6Jt_ncPG;"@/lZaGd-TJ*O5#JZ`pFZF0q.%M+OjImRkJ[\Yo?>p)c&ni.^ah'fXpM/FKagE/<Q!;OH<2cLbfsNjs4Q\-s10
%IDT\_^rf2[%T9um4iGRp/Lf'j3GK?iR0I8..;b4p:'`=@OZDlB.%Y^[GO]Is77(g!Im`lOlC>H[RY>aW=P3YbmAF#QMRkkqr$8Yh
%`'Mq.>'5W;eWZEg7:'S;l`?nZh:qVXd*KnhDd?>8"f2I<]+JeA8fk8/]/UD=]_Lm#4fbp`M<8Ln=3%lDCH@F"s*Xk$j1g*DqtB1p
%hu;a:otMU*]m=fX]_pgU2\1Cap\Jem4hU[cRlBeCs7>3glaLg&aU`kcrmQcamiL?cj6(Us0Aca%kC:="S(8$%?iKhUhgPCHIfOE-G)u~>
%AI9_PrivateDataEnd
