%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Boy_Idle.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: WINDOWS
%%CreationDate: 12/15/2014
%%BoundingBox: 0 0 383 162
%%HiResBoundingBox: 0 0 382.9722 161.4927
%%CropBox: 0 0 382.9722 161.4927
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.1 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 56 8%%BeginData: 10239 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD09FFFD06A8FD18FF76524B76527D76767652765276CAFD15FF7D
%527D76764B524B52527D7DCAFD14FFA17D767D52764B524B7D767DA1FD0C
%FFA87D4B524B765276767D5276275276CAFD13FF4B4B6F4B4B4B6F4B4B4B
%76767D764B76FD13FF524BFD09767D764B4BA8FD11FF7D20FD0876A1767D
%4B527DFD09FFCA20764B6F4B764B6F4B764B7676A15252A8FD12FF274B76
%4B6F4B764B6F4B764B6F76A14BA8FD12FF274B4B764B6F4B764B6F4B7676
%A15252A8FD10FF5227764B6F4B764B6F4B764B76767D4BA8FD08FFA1206F
%4B4B4B6F4B4B4B6F4B4B4B767D5276FD0EFF7D274B204B4B6F4B6F4B6F4B
%6F4B6F4B6F4BA14B7DFD0EFF7D4B204B274B4B6F4B6F4B6F4B4B4B6F4B76
%764BA8FD0CFFA84B4B204B4B6F4B6F4B6F4B4B4B6F4B4B4BA14B7DFD05FF
%7D52274B4B764B764B766F766F766FFD05767DFD0CFF4B4B766F766FFD0E
%76A127FD0DFF274B4B766FFD0F767D52FD0BFF4B27764B766FFD0E76A152
%A8FFFFA8274B4B6F4B7676766F7676766F7676766F7676767D4BFD0CFF27
%4B4B7676766F7676766F7676766F7676766F764B7D7DFD0CFF7D20766F76
%76766F7676766F7676766F7676766F767D7DFD0AFFA8274B7676766F7676
%766F7676766F7676766F7676A14BFFFFA14B4B7676766F766F766FFD0976
%6F7676A8FD0CFF7D274B764B6F4B764B6F4B764B764B764B764B767652A8
%FD0CFFA8204B4B764B6F4B764B6F4B764B764B766F764BA14BFD0BFFA827
%4B764B6F4B764B6F4B764B764B766F764B7676527DFFFFA84B206F4B4B4B
%6F4B4B4B6F4B4B4B6F4B4B4B6F4B7D27FD0BFF764B204B4B6F4B4B4B6F4B
%4B4B6F4B4B4B6FFD044B7676FD0BFFA120FD044B6F4B4B4B6F4B4B4B6F4B
%4B4B6F4B4B4B7D4BFD09FFA14B204B4B6F4B4B4B6F4B4B4B6F4B4B4B6FFD
%044B764BFFFF7D274B4B764B764B764B764B764B764B764B764B4B4B7DA1
%FD08FFA8274B4B764B764B764B764B6F4B764B764B764B764B4B27764BFD
%09FFA84B27764B764B764B764B764B764B764B764B764B764B4B7676FD08
%FF4B4B4B764B764B764B764B764B764B764B764B764B76207652A84B27FD
%074B204B4B6F4B4B4B6F4B4B4B6F264B7676FD08FF274B4B6F4B4B276F4B
%4B20FD054B204B4B6F4B4B26524B4BFD09FF524B4B4B6F4B4B4B6F4B4B20
%FD084B6F4B4B265227FD07FF764B4B6F4B4B27FD054B204B4B6F4B4B4B6F
%4B4B264B27764B4B764B4B274B4B4B204B4B6F4B76274B4B764B4B4BC976
%767DFD08FFA8FD0B4B764B6F204B4B6F4B4B4BC9C92752FD09FFA8FD074B
%27FD044B764B4B206F4B6F4B4B75C94B52FD08FFFD0A4B20764B6F4B4B4B
%6F4B764B51C97627204B204B274B204B274B4B6F4B4B20FD054B75C9C9A7
%F8A8FD09FF7D204B204B274B20FD054B204B4B4B202775C9C9CAF8A8FD0A
%FFA14B274B204B274B20FD054B20FD054B75C9C9524BFD09FF204B204B27
%4B204B204B4B6F4B274B6F4B4B2076A0C9524BFF27FD084B764B51754B4B
%514BA0C2C9C9CEA151FD0BFF76FD064B274B264B7676204B4B76C8CEC9CE
%7C52FD0CFF7DFD0A4B759AFD044BA0C2CEC9CE4BFD0AFFA827FD0A4B76FD
%044B75C9C9CEC97D7DFFFF204B274B204B272726FD04A0C2A0C9C8C9C9C9
%A04B76FD09FFA84B274B204B274B204B20C2A0514B75A0FD05C9517627FD
%0BFF274B274B204B274B202775C275764BA0A0FD05C94B27FD09FF76274B
%204B274B204B2075A0A0514B75C9A0FD04C94B20FFA84B4B274B4B4B274B
%4BA0C976517527FD04C9CEC9277DA1FD0AFF274B4B4B274B4B4B27A1C9C9
%A7CE764BA0C9C9C94B52767DFD0BFF52274B4B4B27FD044BC9A076A0764B
%C9C9CEC9A7267651FD09FF764B4B4B274B4B4B274BC9C94BA0764BA0CEC9
%C9A076767DFF7D4B274B2075264B204BFD05C97D20A0A0C9A02652A17DFD
%0AFFA8204B20C9A04B2751FD04C9A0A8522776C9C9A0A84B76FD0BFFA84B
%204B4BA0204B20FD05C97CA12051C9C976A8277DFD0AFF274B274B7C4B27
%4BA0FD05C9A04B26C9C9A151C952FFFF7D4B4BA0A0A04B4BC9CEC9CEC9A0
%7D4B51C9C9CE7C7D7DA8FD0CFF27764B517675C9CEC9CEC9CE4B27A6CEC9
%CEC9767C7DFD0DFF5227A14BA127A7C9CEC9CEC9762776C9CEC9CE515151
%FD0BFF5227A0517C4B76CEC9CEC9C9A0A7A0A7C9CEA6A7A076FFFFFF7D27
%76764BA0A6FD06C94B51FD05C9517CA8FD0DFF4BC2A051FD07C9A7A0FD06
%C97DA1FD0EFF5275A026FD07C9A04BFD06C9A17DFD0CFF4BA0A051A7FD05
%C9A051204B75C9C9A0517C52FD04FF7D76A0C3A0C9C9CEC9C9C9CEA7C9C9
%CEC9C9C9CE52FD0EFF7C76C9C9CEC9C9C9CEC97676CEC9C9C9CEC9CE52FD
%0FFF51A1C2A7C9CEC9C9C9CEC9A0C9CEC9C9C9CEC9A77DFD0CFFA176C9A0
%FD04C9CEC9C976CEFD06C9A77DFD05FF7675A0C9A6FD05C920A0FD06C9A7
%52FD0FFFA127514BFD05C9A04B4B767575C9C9A176FD10FF51517676A0FD
%04C9A0277CA0C97CC9C9CF4BFD0EFFA14BA051A7FD04C9A04B51C9C9A0A0
%C9C976A8FD06FFA8767652A0CEC9CEC9C976764B767CCEC976A8FD12FFA7
%27A0C9CEC9CEC9C9A0C9C9CEA752FD12FFA8A87D52A0CEC9CEC9CE7C7C76
%A0C9CF7DA1FD10FFA1CF4BA0C9CEC9CEC9A1767C7CC9C9A152FD09FFA827
%274BFD09C9A7527DFD12FF7D052E274B75FD07C97652A8FD13FFA827274B
%4BA7FD08C9527DFD12FF2727264B7CFD08C97D52FD0AFF272F2E2727517C
%A1C9CEC9C97C52A8FD13FF522E272E27274B514B4B4B7651A8FD15FFA828
%352E2E274B4B7CA0A77C7C51A8FD13FF2E2E35274B275176A0A0A776527D
%FD0BFF270527272720754B4B277C76A1FD15FF7D002E052E27204B2727FD
%19FFA827F8272727207520277DA8A8FD15FF2027002727204B4BF8527DFD
%0DFFA8272F2F2E2E2E27272053FD17FF7D273535352E3635532E27FD19FF
%522E363527352F274B21FD17FF522E355A27362F522627FD0EFF52273535
%35273535352F2F27FD16FF7D2735353505FD053527FD18FF522E35353528
%FD04352EFD16FF272E35352F28FD043528A8FD0DFF273535362E28353635
%5A3552FD16FF5227355A2E2E355A3536352EFD17FFA82736355A2735355A
%353627FD15FFA827355A352E2E5A353635357DFD0CFF202705352F272FFD
%05352EFD15FFA82720272E27FD0484596027FD17FF5227F8352E52595A35
%35352EFD15FFA8F8272E352760FD04352E7EFD0BFF274B274B2752FFFFAF
%AFA8FFA97DFD15FF524B4B2027A8FD06FF52FD16FFA84B27272052FD06FF
%76A8FD14FF274B202727FD06FFA87EFD0AFF274B204B204BA8FD07FF52FD
%14FF7D274B2727A8FD07FF27FD16FF27204B2052FD07FF7DA1FD13FF274B
%272720FD07FFA1A8FD0AFF4B274B207D52FD08FF7DFD14FF274B2027275A
%5AAFA8FFFFFFA852FD15FF7D274B202784AFAFFD05FF7DA8A87DA1FD0FFF
%A84B2727208484FD06FFA87DFF7C7DFD07FF5227204B2735355A59FD0584
%52A176FD12FF4B204B2027FD083528FD15FF7D4B274BF8FD043560596059
%2E52FD044BA8FD0DFFA8204B202727FD04356059602E52274B4B4B7CFD06
%FF274B27274B522E36355A353635524B764BFD11FFA8274B4B272E2F5A35
%36355A352EA8A14B7CFD12FF7D4B4B4B2076754B3536355A2E27A0764BC2
%76FD0EFF7D204B4B27517C2735355A353527A04B75A052FD06FFA8204BA7
%C9C94B2EFD053527754BA04BFD11FF7D2720277576272EFD043527277551
%274B7DFD11FF522720C9C9C94B2E3535352E20C220A07576FD0FFF7D2027
%A0C9C976273535352E27A04B75C24BFD07FF7DA0CEC9C94B523536355A35
%522676A076FD12FF7D27A0CEC9C9275A353635274BC3267676A1FD12FF27
%7CC9CEC9C9275A3536274BA076A0A07DFD10FF524BCEC9C9A7513536352E
%20A051C9A076FD07FFA875C9C9C9A027FD05352775A0A076FD13FF27FD04
%C9272E2F2E2EF8757575A075A8FD12FF4B26C9C9C9A05235352F27A85220
%7526FD11FF524BA0C9C9C92735353505A85227754BA7FD08FF4BC9A07627
%2E2E2E2727274B4BA04BFD14FF4B7CCEC9C9274B272720274B4B76C94BFD
%13FF764B4BC94B4BFD05277DFFFFA1FD12FFCA2051A776FD06274BFFFFCA
%FD0BFF204B2027202720272027207D7CFD15FF274B764B20272027202720
%27764B26A1FD13FF52204B262720272027202720A8FD14FF7D27204B2020
%2027202720277DFD0DFF4B274B27272027274B204B27FD16FF524B4BFD04
%27204B274B2052FD16FF524B4B4BFD0427204B272727FD14FFA1274B274B
%204B204B274B2027FD0DFF204B204B207D2027202720274BFD15FF204B27
%4B20A8A8272027202720A8FD15FF52204B274B52FF27272027202752FD13
%FF524B274B2052FF76202720272052FD0BFFA8FD054BFFFF274B204B2727
%FD15FFFD054BFFFFA827274B204B52FD15FF274B4B4B27A8FFFF274B274B
%204BFD13FF7DFD044B52FFFF52274B204B27FD0BFFA8204B204B27FFFFA8
%202720272076FD14FF204B274B20FFFFFF522720272027FD15FF4B204B27
%27A1FFFFA82027202720FD13FF4B4B274B207DFFFFA827202720277DFD0A
%FFA14B4B4B2752FFFFFF76204B202727FD14FF27204B4B4BFD04FF204B27
%4B26FD15FF274B274B20FD04FF52274B4B27A8FD12FF4B274B4B4B7DFFFF
%FF524B274B20A8FD0AFFA8204B204B4BFFFFFFA827204B4B7CFD14FF2675
%4B4B76FD05FF4BC2A04BFD15FF764B754B4BFD05FF76A0C24BFD13FFA151
%4B7526FD05FF27C2A075FD0CFF76A0A04BFD05FF7DA0A0A0A1FD14FF76A0
%C94BFD05FFA776A0A052FD15FF51C9C9A17DFD05FF4BC9A076FD13FF7DA0
%C9C976FD05FF76A0C94BFD0BFF7DA0C9C951FD05FF52A0C24BA8FD13FFA8
%76C9C976FD05FF7C75C275A8FD14FFA851C9C94BFD05FFA875A0A052FD13
%FF27C9C9A07DFD05FF4BC2A04BFD0BFF2751757676FD05FF274B4B4BFD14
%FF4B524B517CFD05FF4B52204BFD15FFA1207C7652FD05FF7D4B4B26A8FD
%12FFA84B76764BFD05FF7D4B274B7CFD0AFF7DA1A87D20FD05FF527DA8A8
%52FD13FFA87DFFA827CAFD04FF7D7DA8A827FD15FF27FF7D527DFD05FF4B
%A8A852FD13FF52A8A85252FD05FF4BA8A852FD0BFF52527D5976FD05FF27
%2752277DFD13FF5227847D52FD05FF52274B2752A8FD13FF7D4B7DA84BFD
%05FF524B525227FD13FF20A2A87D7DFD04FFA82752524BA8FD09FFA82735
%272E27FD04FF52282E062F27277DFD11FF27352E2F27FD04FFA805352E2F
%0C2752FD12FF522F2E272E7DFFFFFFA8270C2E2E2E2152A8FD0FFF52352E
%2E277DFD04FF272F2E2E0C2727A8FD07FF523528522727A8FFFFFF27352E
%352E2E7D7D52FD0FFF7D2F2E52525253FFFFFF4C2E2E352E597DA84BFD11
%FF275952524B52FFFFFFA828352E352E52A852A8FD0EFF5235524B7D27FF
%FFFFA8272E352E3552A8527DFD06FF27277DFFFFA852FFFFFF2720522727
%20765227FD0FFF522776FFFFFF52FFFFFF5227274B52204B274BA8FD0FFF
%A12727FFFFFF52FFFFFF524B275227274B52277DFD0EFF274BA8FFFF7D84
%FFFFA827275252274B525252FD06FF4B4B76A87D7D52FFFFFFA87D767627
%524B5252FD0FFF764B767D7D7D27FFFFFFA8A1767D5252275276FD10FFA8
%20527DA87652A8FFFFFF7D7D52524B522752A8FD0EFF27277DA87D4BA8FF
%FFFFA1767D525227524BA1FD06FFA84B4B274B4BA8FD1CFF52524B4B27A1
%FD1CFFA87627524B4B52FD1BFF5252274B207DA8FDFCFFFD12FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2014-12-15T11:28:01+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2014-12-15T11:28:01+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2014-12-15T11:28:01+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>108</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAbAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q8K/Nr82/zF8s+apt&#xA;FhtrbTtOljEumX4QzS3CUHNleSsSsjbNGYyRsa0IJrnIhzNPgjPru8/f85fzFct6mszTKy0IcRRk&#xA;b1qDbR29PDK/ELl/koIi2/OfzlEEB1G9TgKVilhYkmtSfrVvdg9dq1ph8QoOiiyjQv8AnILWYnC3&#xA;ksdypP8AdX0Xpn/pMs1oP+kM/MZIZWieiPT8fj3vX/KX5gaJ5k/cQ8rTUhGJWsZyhZo+nqwSRs8U&#xA;8ddi0bHidmCttlgNuHOBjzZNhYOxV2KsJ/NHzX5Z0/y9f6TeeZl8v6rdwEWc0Du13Gx3SRYYOU/G&#xA;ooSo6VoQcBLZjiSdhb5RGs3d2fWu1iu50an1i7t453YqTR1e5j9XfqC1G8d8xzIu3hiiRypW/SNy&#xA;5UtaWUvE8lD2Fo4r40aIjBxFl4Me5NdN846/p5Bt1MNOn1V7iwH/AANjJbK3+yBGETLCWlgXpHk/&#xA;87fMaTJDdFr6KoBgv/TRyPCK9iSFFP8AKs8Rr+1KvXLI5HEy6IjcPbvLvmLTdf0769YMwCO0Nzby&#xA;rwmgnSnOGZD9h1r07ihFQQctcEikzxQ7FXYq8Y/PXz7oqaLHDoPm36tr9hOJH0/Tp5medCCjwSm0&#xA;qY2FQ68yBtQ0BqISLkYIEncWHi8fn3zawMn6Y1M+qvxRyajqBFG6jg1wVH3ZTxl2Q00O5Ut/O/mS&#xA;35Fby7BccSy32oRmnWgaK4jb8ceMqdLBOtN/ODzZZNVL68jA6Bbl7lT/AK41EXzH/Ysp9++SGQtc&#xA;tFE8nqXk/wDPiK7HDW4VeBATNqNpE8bRAftz2haZhGB1eKWSnVlRd8sjMFw8ullF65BPDcQxzwSL&#xA;LBKoeKVCGRkYVVlYbEEbgjJuKvxV2KsY89+avK+k6NeWWreYItDub22lit5lkH1tDIhQTQRL+8Zk&#xA;J5DiOuAllCJJ2FvlVPP3nGQlH17U5mt3ZBcJf6nCkwB2kVWlhbi3UBkB8RlBmXbQ08CNxS8edPMr&#xA;Tes99dyvXkWa7vSSR4kTV/HBxll+Vh3JnZ/ml5ptn5LeXgapYyDUL+Vqk12W6nuoPoMRHth8QsTo&#xA;4Fn3lX8/tXE0cF+q6jGdmjnEdvdfNbiMR2sjf5Lwwr/l5MZHFyaIjk9q8veZNK8wWH13TpCyqxju&#xA;IJFMc0EoALRTRtRkcVBoeooRUEHLXCIp57+eerfmhp9lAfK6NFobRt+lNQs1Mt7E1aU4UYxxcdzJ&#xA;GrMO/ACphO+jfpxAn1PnNhpd1ML+7vJNTun3+tu7TyHsf30hdj/wWUEl28IRHJXW40ZdvQb5nf8A&#xA;42yLYrLd6P8A76A+aA/1xVeL3SF3VFB9o/7MVTjy75rNvfRxW831eaNjcadcytwSK9jUmL4uipP/&#xA;AHEpPw8HPLptOEqLjanFxR831VoGt2et6Rb6paB1huA1YpV4yRyRsY5YpF/ZeORWRh4g5kumIpH4&#xA;oaYclIqRUUqNjir4286aNoflvzXdWlrq6eZ0nld3u45GluYnrUrfSU9N5ATTkshY03Rcx5h2+lyE&#xA;iqS9dXjTaO2VR7Gn6hlbmLxrp7w/8N/Ziq8a5H3iP3jFWm11afDCa+5/sxV6f+TP5gxQ61Hb3FP9&#xA;MEGnX5BNVcSMtjP0NfinW1eu+8XVQeN+OTq9Zi3sPobLXAdiqTecdD0XXfK+paTrcnpaVdQst1Nz&#xA;EfpqvxCTm3wrwZQ3xbbb7YlMSQdnx3Muk6VqVxp1pNDrVtbkiHVrZWjt5VDECiSKtG8eHNPBzmLI&#xA;U7vDMyG4pUXWuIosCgeANP4ZFvXjXf5ofub+zFV36btz9qJvwOKrk8wmCRJbZWSaMho3B4lWBqCC&#xA;PDCg7vffyS842V5byaJH8ETq97pyAAJH/d/XbUKAOIhuJucYG3pyKF+wyrkQlbpdRiMS9VybjuxV&#xA;8lfmz5b8peWPOd0+j30Oo/Xpmlu9IhJa4spZDycSSKDHw5GoV3V1rQBh0oyRdppMhqqY0urxptHb&#xA;Ko9j/QZU568a63eEf8F/Ziq8a5EftRH7wcVb/TduB8MTfLYYq9A/Kr8w4tP1uCW6qI+BstQHL/j0&#xA;d4/q02/2/qkpk5dCI5Cdwm12OTrtZh6hjH5lfmz5k826hd2F08mk6LDI0I0PeOQ+mSrfXTsXevWP&#xA;7C9KEjkROZZafBACzuWAi9jWoRQsabKo2r/QZCnK43W811cvyDCOBG3IFSxHVd+3icSmJJVrm6EV&#xA;FVfUnfaOIGhPufADucCTKl6O1I0ehnegEcYLFm8EUfE33YCm65s70D8ndf1nSLrUb120xo4zJpts&#xA;9A8sq7j16V4RkbU+1U1NKUOMdUOMRG9lrySIF9z2z8g55rnyM14zcoLm6Z4G6glYYo5zXvW6SUn3&#xA;rmzjydPnI4npGSannX57aL5s1XyNMvl2eYGB/V1GwtzxkurUKQ8asvxmn2igPxiq77AxkDWzdglE&#xA;S9T5J+voIVWBAgp8NKcQPamY9O38TbZbJfusdEqSBu3Uk+AGNIM0TCrQRNLczfEQC5Y0RadhX9ff&#xA;A2Dbm1DcyTXDhUMcMWzNIpVmYgMOINPhoa174qJWfJOPL3l/WvMt6LPRLf196TXjVFvCO5d/2iP5&#xA;V3+XXK8mWMBuvF3PQrv8t7Tyv5u8l2GkPNcXWs3CR6iWJIeSzuLe5kugKnjxjDsVG1EXwrg0eU5L&#xA;J73D1BoEPpvNg6t2KvCP+cmfLvmie2tdbt55rvy3bIE1DSlZvShlViUumRdnBB4ksDwoCNmNK5gu&#xA;XpZxB3D58e/JoIxxr1Y9spp2ZyNTaiVU8BUDudyfkBjSDkRMTSRQmS6kUHq3QKo8K/xwMxsN1ttd&#xA;G4aRkFLdCUVjUFmU0bY9h0xWMr9ydeWvLWs+Z75bPSIuSFgs98w/cQr+0S3RmA/ZH0065VlyxgN1&#xA;Mu561+Xnko+VfzatNCsZ3uLNbf8AS8ZfeRLUw3Nm6yMAAf8ASXWniKdxlulmZxEi63VS2rufQGZb&#xA;gsR/NTQfM2t+TLuz8t301lqqlZY1gk9FrhUrytzKCrJ6gOxDLuBU8a4CNmeOQEt+T41a4Nrztmt2&#xA;t5oWKSQOpQo6mjKykBgwPUHfMYh3UcgrZaL9lQV+OQ7nsBjS8a+zluZyZWYLCCVVQPtEbE79gcSy&#xA;iSd1xvA86wQUdusj78VUGh3HU9qYE8W9BF28VxdXS2dlC91eSf3dtCOTn3PZRv8AaagyMpACyklm&#xA;Wv8A5Y3/AJY8t2esPO02tatJJplzYL9it7bypbxRMBy5Bqox78+1Blenz+JIgcg42aVc+q//AJyF&#xA;17QtT873FtZaO9hqmnP6GpahIeDXXFfg/cAUoFKlJS1WSgpTjmZMuPpokC72ebS6bqUNpFezWc8V&#xA;lOaQXbxOsMh32SQgIx27HKhIE1e7k2zf8nvy6fzRdXc+pySHQ7JRCqqTGZJ2Ibjzj4N8KbtvX4hm&#xA;Lq8/AABzZQPfyZb5i8i2lnFDd3HlJF0qCb0YLezvJm1WUyMF5ehbKqTswQEIZ2IX6cx8U5SNRl6j&#xA;5bfj4JlMAWR9rNfIulflrJaxXflprS59eIShoyvrFK8f3in97sdiH6HbMfKcl+q2QmOiA89/mSlj&#xA;qVv5d0mRoLqS4S11PVJLWWa3sTMjNAjj90rPcFaJ8VKAntmRpNOSRM8mjNkFEPVPy902DTfInl6x&#xA;giSFIdPtgUjFF5mJWc/7JyST3zdjk6qR3LIMLFIPPknmuLylqMvlQRtryR8rRZFD1oRzCKfhMnCv&#xA;Dl8PKldsBZQq9+T4v0/R/MfmjzBPbWtvJeaxcySz3atxjYPz/fPJy4KlHbfpvt1zFyZBEXJ2sQK2&#xA;U9S8p+YrPW00C5sZYtZlZBb2oKlnLmsbIykoVqv2uVBQ1pQ4I5YmPFeyS930r8l7HS9Nsjam2l8w&#xA;J6f1rVL2OS7VGCkyPBE8i8W5/Z3Ap1B6Zq56oyJv6e5t6ebFLzSfJmgeapn83WseqafdXjWg1dVb&#xA;a+9JLh4prL1JwyiOVT6iIKE0498yBHJLGJRNeTWcw4qL1767p+keWP0lYadL9Tht0uBYwxrFOIqB&#xA;iPTlMdGRCSUYg7U65gcJMqJbDLZh/wCUutarr/5myza0zx6lYwagy2kU0dzYxW8g09oFhaPYScLk&#xA;823JIPyXe6fCMewdbnnxC3vOZTiOxV5t+fV554sfJT3fliUxQRlhrJijDzi1ZSC6Ma8VX9sqOQB5&#xA;VUKcjK62bsIiZep8paH5b1zWmkh0awmvTbIHlEK1CL2qx2qaGgrU02zGnkjHmXZrtD8t6rruuW+i&#xA;WcbpfSTcH5LQw+m37x5Aw+H06HkCOu3XBkyCMeJXu0f5RJpc0B0W2spp1UvJqOpmWeRZBsgjjFAv&#xA;uystPA5qjqDL6ifg3XR2HzYn5S0P8u7W+Fl5uiKatccrjT5Ll3mtdQhedolltVIVW5yKaI0XIihX&#xA;ku+ZOYZQAR9P3NUMsTs9a13UrbytpEf6O0yS6uJ3S006ytkor3Ep4QRySfZiRnIXk2w/DMLFjOSV&#xA;MsmShZQX5C6jca5Lq3mK9ma4v7u2s4bj1YY4Wt5IZrpZrVAig+kj/Z5MzHuc3+DHwRp1eolZeu5c&#xA;46C1waudGvhozRLq3oSfo9pwTF6/A+nzp+zypXFI57vh3WW80a15puhqqXF35luZzFdQtH+/MyDg&#xA;U9NAAvEL0UUAHhmNOVbl2sAANuSF1jRdW0W8Nnq1pJZXKqH9OUUqp6MpFQw9wcjCYkLBZvYPKn5J&#xA;tD5WtrvUbVL3XZEVksb6V47eIO1AJURWBKR7spRqttUdc12XVEyoGo+TYOXeXa75CtdO1aLVvONu&#xA;kmhCKO1NzpZmjt7RY2ZkM9uDzWIlzVw7KP2lANcEMpIqB38+qmXUvRvLWn+UNP0Q6h5ctY5LELI6&#xA;SWcYYzGIsrGMKB6hJUhSPtdia5jTMialzTxbbcku01tb1vzX5b1PUVe30SXV2Gm6LLCivxg069li&#xA;vrguvrLIZYwUjqvEEchy6bLQRAJA59XC1RNMl/Nb8pNE876dLcBPq/mK3hdbC+jIUuQCUhm/mj5n&#xA;5r2Iqa7KUbcPHlMWCvpEvmdA1tcyNos5FnqehzlYorSFE4SQeiE5QXFs45q3XkOvGlNCScZoj1Dq&#xA;7cCMo2CzzRdH0vR9Mg07S4VgsoFpEid67lierMx3LHcnMacjI2eaQGN/mbaxX+m6fpkOtyaBrVzd&#xA;q2iX8aybXMaMOJdKcOUbsoJYbnap2N+mmYS4gLpryRBFFFfl75E07yZ5eh023CT3pBa/1ARqktxI&#xA;WZ6udyQvMhanYZDNmOSVllCNBKfzN8lW+qhNYF7cwX0Ua2lrZRSEQXF3MXgsGkTarRT3ZII7E9sy&#xA;tDklfCOTTniKt7VbwRwQRwRCkcSqiDwVRQZu3VL8VdirzH8yPKNpDqsmvx6eZbDU7Y2PmI2kbmcB&#xA;XWSG4kWEepLHRGimAqeJWoKBsw9XhlIAx5hzNLlETUuTH/JMnkK0vlt7LVNOvL13kTS4YHjke1id&#xA;FMlrEw3jDNG0np7ftUFBtqcgyVuD5uwJjezP8xkvKzoP5cTfmTL5n1pptF8wWk37myv5o4Le4MaC&#xA;OO7iBHGSqgfYk2p8QBzM48nh8I3j+NmuhdvRdO1rRdW9ZdOvbe/SGizmB1lQFhspZSVrTtmLKBjz&#xA;FMwQUv8Ayt8neW9F8za1J5esks9Os40tG4F3DXs7etdrykLGiRpbCgNAajYjN/pOIwuXN1mpIug9&#xA;OzKcZ2KuIBFD0xV4l5o8raToGtahpbKdH0TWruPUNNktpDZWrzC3jgltGkjMfpuskPrRpyAbn8NS&#xA;pprNbjkJcQDs9HkiRUky8k6NodlJcTrPbXvmZkjj1i9ikEk7KvwwmUBm4M6IpegAdgW3zW5ZyPlH&#xA;o5IAZRcTLBBJMys6xKzlY1LuQorRVWrMfADKgEvM/wAsvIflO11y781adqc99JLE0Ftp12V9TTka&#xA;T1Ht3SrMjIwpQ0479a1zL1GeZAiR+1qhAA2Geapp2keZtGutOlkFxY3P7p5LeQcldGBBV1rxeN1B&#xA;HgRmPCUoSBHNsIBDf5KeWtL0Ly7fx6UrDS5b+VLBnbkzQ2yJbM/LYMJLiKWQMBQ8qjamdHivhF83&#xA;UZjctnoWWNTsVedfmb5ctYdQsfN0FpxntUns9UvraOt1HbXMXBLkcQzN9XcDseKMx7Zi6vGZQ2cn&#xA;S5BGVHkxHy/oflU6jZ3F7qNpqUAkWXy0k939ZkW5KsZjA7yOZFdVRwm/Fl5Dfpp5TnRFV3u0kI3s&#xA;9EzGVgUkmr3HmXUdHs/Nk9hLz9VLO/srZyyS/ERZOwiaSJPs1ZXp0qcydhEExv4/ew682WQRRJZL&#xA;o36QaS9jtgjzholuuPHh63BFCA13+xxr2yk87pklnk7y7NaeeLW1fV77WBp9rNf3MmoSRSNDJMfq&#xA;1qqCOOIL6iNcVNP2Rm50IsGVAOBqj0ep5nuEwb80tI8tWnlnWPNFx5fsNU1SytGdWuoFfmEpxExA&#xA;5SRp14k9OlMHCCkTI5Pnjy/+cet+XrmRI5rHUdJZyw0hG+riAsfs2sjNNxSvSNjxHRaZRqezYT3i&#xA;Ra6btKfKcJAfN6Tbfm/5C13Q5ZNXsriLTnIhuorq1+txcmIAR1t/rH2iRQOoPtmnOlyRlQ+p2/ix&#xA;MeI/T3o/TrfyNcx2l3pOhajqkZ4zacEsb97YlTVWie6VLRKMPhJdd965bHTZzsdmBzYx1ZtoXlfV&#xA;bzU7fWvMSLbizJfS9FjcSrDKwKm4uJAOMk3BiqqvwR1NCxPLNlp9MMY25uDmzmbMsyWh2KuxV2Kv&#xA;nT/nJTzBqj+aLTy0tzctpz2EF6un2YHM3H1iYeqxA5fD6ScatQfTlmOEZWDu4+oyzgAYkDzLDdB/&#xA;O3zloKJFqQ/SumRt6Tz6gksNxEV2pJcRJKrU7koz+xzXansyPONhz9J2gZERlV+R/Bej6D+bMHmX&#xA;V10LT9CfU9QZPWMdrPbTQCMIsnMyyGIAAOoqwG5A67ZgR0EyLBc+eojE0WcW2hedNSQQNFD5asdg&#xA;0qSJdX3HusSKv1eFv8stJ/q9DmXh0AibluXGyaq9gzHRtH0/RtNg03T4vStLcEIpJZiWJZnd2JZ3&#xA;diWZmNSTU5sXDJtG4odirsVU7i3t7mF4LiJJoZBR4pFDqw8CpqDir5R/M7zPqGnfmHe2Ok3MehnQ&#xA;pjFpkGmWUNFhaKN29YxRs8iOzVZHbhUfZqMJ0+PJGpNU9Vlxy9IBj5mk38rf85B3M1xDp2t6fFNc&#xA;SAehdWkywety+yBFcmNVYj+aRQTsuafU9n8G4O34/HJ22m1XidKP4+DKLLzF5G86X0wTylNrGo2d&#xA;Bcetp9vO8R5NGoaVmZBUxtx+PtlcNJmA2Ox82yWfHZB5hl9l5Z8xarAtibP/AAroIHGWON4vr8iE&#xA;bxRC2MkNsrd5A7PToENGzM0+i4TxS3k42XU2KDPrOztbK0hs7SFLe0tkWK3gjAVEjQcVVVGwAAoM&#xA;z3DVsVdirsVeD/8AOSF9aaHFpdnZw2mnproum1G8jtIJLuRrdrf0lR2jkIPOYtyUcgwUqRkowiTR&#xA;5MMuXJEXAWbYB5e/PbzHoSJa6tx1yxiIjNzOJLW8jrQ/GzIyy8VI/Z5nvmv1PZkecC5Wl7QMqExR&#xA;99/cz5/zQ8l69JaaVqOh3F/LfLG9paNBa38colZkUp6UkympjbqB0NaZr8ekybmJ5fB2GTNGJAl1&#xA;ZTo+iapCptvK/lKDQY5QC97eR29rAK71+r2rNPKwr9lhGP8ALGZOPQykbyG2ieqiB6WceWPLNtoN&#xA;nJGs0l3fXcnr6jqE1PVuJioXkQPhVVVQqIvwqoAGbOMQBQcGUiSnBIAqemSYvmj8xvzPg84+a9R8&#xA;s2mqLN5as+AhgtapHesqq0pll2Mqxy1AVfgIHL4u2Rpoxkd3A7Ty5cUAYigeZ7mIy29vcahbWdpA&#xA;iW2nuZLiRUCorGMqsC0FOTB6sOy9ftZmEAkAdHSCUowM5E3PYfPn+rz9zdx5S0CaRpBaiF3+36DP&#xA;CGpuOSxlVbffcYy08CbpOPtHPEcPFt57/e+oPy0cyflx5UdhQvo+nsR4E2sZzVvVS5skxQ7FXYq7&#xA;FWPfmD5oj8r+TNX1szwwT2ltIbNripja5KkQIVX4m5SUFBgLKIs0+W9N8xWWo29xq7XMl/qVwwe/&#xA;eQcruSdzRUKL3LHjGq/D0C7ZssM4CFh5rW4c883DMbnl3fD9P2p/Z+TPNenWh/SOlXUdzOzzXH7p&#xA;2QM5rwDAcSEFF+jJ45iuYto1WKfFtE8I2G3d+vmnv5YaVcaR+ZWiyR6d9UhvlvLe4l9H0wxNuZhU&#xA;8RU1gGY+qEaFU7LsueQmXFxchzt9E5hu4dirsVdirsVYT+cPni48meSbjVbWSGK8klitbeSb4ijT&#xA;NRpI4v8Adrxpyfh7VOwIx26rRo0LL54EqpaNc2HLUtQ1J+UcoPqzXl1N0ZmG7ljuT2FewzaDhhDZ&#xA;5aQyZ81Tvbn5D3Kg8vwQ6Zb6XqFsJlgjVCk8fUqKFuLDauSEBwgHdqnnmMhmLiSXpn/OOun2mn6t&#xA;5ot7OFYLb6vpjhE6Fy96GJ96KuYGogIyodzv+zs0smMmRs8R+4Pbcoc92KuxV2KqdzcQ21tLczOk&#xA;UMKNJJJIwRFVBUszHZQANycVfJr+c5POt7J5h1K6Wa6j5LFbVIisYm39OJW6Ahfik6v8qAZ+ljGr&#xA;6uh7VyZePgIqPTz/AB3dFmn2F5JHPqd1ayRW+olWtRLGyhrZVpG/xDcSVLj2Iy7GRKz3uFqYyx8M&#xA;f5v3n9XJMfI2maVpX5heXNQsrOOG4a/WFniUKeM8MsLDwA/e1NOuUanFERsBz+zNVknk4ZSJFF9U&#xA;Zgu8dirxb/nKDzH5h0zyzpunaeXg0zWJpYNVu46hiEQNHbcuyzAuW8QnHoTkJnZyNNEGW7508qaP&#xA;pF9qkTapeNbfVrm04WtqCJ7mFpf9IMT1UR+lCh71qV7VxwxJlQ5stdljDGTIXF9e+WPM/wCWVpot&#xA;vpOm3ENpYwrxFtcKyGp3ZpGkFHdiSWYsanqcyTgmOjqIa7BIVY9xTFr/APLYVcz6OSNyQ1sTX6N8&#xA;eHJ5pM9P3w+xB/l35n8tSeWvLmix6rZtq40qyJ05Z4jcAC1Rv7oNz+zv06ZRbnEHmzLCxdirsVdi&#xA;r5Z/5yg8x6vdedINAkVo9L022jubaAmizzT8g0/vxA9Na9CG/myuZc3SxFX1Sb8h7/yvo1/d63q2&#xA;jrf6jFOqWchZS9oqLy5pGw483L/artQce+ZOn0/HG73dX2l2j4OQRMfTT6It/wA4fJsorI9xbnwk&#xA;iJP/ACTL5M6WbiR7VwnvHwQM3nPQ/MXnfypbaVLJI1rc3c8zMhRSn1CaOnxUJ+KQdsrnhlEWXJwa&#xA;zHlJEXouVuS7FXYq7FXYq+Nfz584al5k8/ajbTI36P0KaTT7GzYleJjPGaah25yutQdvg4/TVM7u&#xA;wwYwI33ss/5x/wBS/Lfy9psWs6pFMdfd5gLxmMkNurngY0i5AI/BfibgWNTvxNMyoYCYggul1Ovh&#xA;DKYyiQe+nuy/mR5Enj31OMoRXi8co6ezJh8Cfcw/P4D/ABfexhvzJ8mWfnjVL8X6yQLpFjBDbQq3&#xA;rTTfWrnjHBCQrSN+8H2RQV3IFcpyjg+rZzNPOOYejfdOfLv5weT9avEsHebS7+V40t7a+EYEpmA9&#xA;L054Hnt2MhNFX1ORPbKoZoy5FvyaeceYZtlrS7FXYq8H/wCcpPOOpWWnab5Vs+UNvqyyXGoTCq+p&#xA;FCyqtuG8GZuUlOwA6MchMuTpoAm3jP5SWfkyXzRPN5ttZZrO3g/dWMMhUSs7fE70aMvEgFClaGvx&#xA;Cmxs0+Mzui4/aepGHhuNg9e49H1hZfmn5DnhBj1ERKBQI0UgoB2+FSv3HLTp59zgjtHD1NfApH5x&#xA;88eS5ZNAittRgUrrNnJI1DGgVC1WZ2CoAK9zkZ45AWW3DqcUzwxNlEj88fJQ1BbeRbuOzlf07fVP&#xA;SV7eUlGkUokTyXPF1jcq7QhSFJBpvmL48Lq3YflZ1dM6sb6zv7OC9spkuLS5RZbeeMhkdHFVZSOo&#xA;Iy5x0B5r8r6T5o0C80PVozJZ3icWKmjo4PJJI23o6MAy/wBMSExkQbDwv8vvyY8v6df6ymvhNZ1L&#xA;Trt7FFmj4xRxBEljkWMlvjmikRiT0rxHcnT63NOMuEbO1xVONlLPOeiW2g+cVtLGCO002+tDPBbx&#xA;yclMkTKkhERFYvtitDxbqKHlm17F1EpgxJunnPaHTQjETAo3SXkgAkmgG5JzevKobyfo15qUencm&#xA;FtoWm21i84ikaFzeLZGZ3jMXHiWa9DSSqwYlKZxeXJwkkfWSfv8A2PquPGJAD+Gh937X0r+Xc97c&#xA;+RNAur6d7m5urC3uHmlJaQiaMSKHYgFmVWAJO56nfNzHk6SdcRpkOFg7FXYq8/8Azh/Ky2896Gv1&#xA;dlt/MGnhn0y6fZG5U5wTUBPpyU6jdTQ77gxkLbcWQwLx/wDKr8n4rzSX1rW7m5trm6LwLYWz+k0Q&#xA;glaNxOStTKJEYcf2enUmmsza+eKRjDZzMmlx5wDMX3ITWLUaL5m1HRXllaC2WKW1muxGsjRzcuhQ&#xA;8ZFUps9B/KRyUnN72bq5ZYXKrDyfbOghhmPDBqXRj2o+ZNTtfMegp5a1QWury3JhEsBSRkSakbFk&#xA;YOtOLH7Qw6/KBGweTf2DppGZ4gaNMq0y78xWHmXVb7Sbq60+204TtNq4/fvd+nDF+7nNx6i3B9X1&#xA;ixZarQcWFa5z8dRKNG7ken4+D2EtPGVivSH0rod1d3eiafdXiot5cW0MtysdeAkeMM4WpJ48jtvm&#xA;3DpDzRuKHYq7FXjf5/flNpGsaNf+cbJhZa5pdrJPdEL+7vIoELcJQOkgC0ST6G+GnGMo234cxia6&#xA;Jb+U/kbyUnkzTdSjs7XU7zUIRPc388UcknqOKSRKWD8FjI9PiD233rmh1OafGRdU7OABFsJvNNj0&#xA;nX9W0qGaCa3t5w8AtaiKFJRX6uVLPweMqSV5UAIpQHiOn7KzGeLe9u94vt/BGGYEV6gl+k6Vqc3n&#xA;+LX4bWW50nRLZE1Ga3T1mhe5W4VC0UfKXjQVZgpC96ZR2tAyFDu/S7T2ckIQuW3qP3BPvy8tbf6j&#xA;5Yt7O5+uaxqd9pV1NB8JaKOzlhluE4KKrHBFC+7b8upqc1OISOblsLegzEDCd9y+ns2zpXYq7FWN&#xA;ef8A8v8AQfO+hnS9WVkaNvVs7yKgmglpTmhOxBGzKdiPowEWyhMxNh4H+U35b+Xl8y+ZLXXvq+ra&#xA;loN01jFaSxBohGGNLoxycvikK0UH7IHU8gc1WuyShQGwdnhkJi0y/MzQrHSPMemXtgLS1i1BJLaf&#xA;T7dBFM7oOa3DIp4uiBeBbiCpKipBoMrsXPLjMTZdR7QYInDxbXEsH816Lqmu2ltomkQfWtTvp+Nr&#xA;bBkUuY43lbdyo2VD3zeaz6HQdij99fQAsnsX0GLzRqGq3t1LYNp0UCmwvENsyUhZPUeOVVl5AM6b&#xA;bfPOSyQmIiNbl9ChOBPEDs9+/Lq0ubTyJoNvdRPDcJYwerDLtIhKA8XG3xCu/vm7iKAdDkNyLIsk&#xA;weDf85E+YdY8oa9ouqeXZVtL7Wre6h1JmQSJKtmYfQYo23NPrLgN4bHYDMbUYYzq3M0sjuA+e5H8&#xA;8+ZfMSvbT3up69fVX/R3cSukYMjKFQoAqgE8RsO2SxegVHZnnxQkPWBL3pVc3OuRtLZajcXYnhZo&#xA;rq2uJJeSSKeLo6OdiDsQRlpyyPMlqhpcI3EY/IPaf+cdrDyv5njvPLmqzXVvd2wFz9St5RFbX1ts&#xA;j+qoUsHT4Vk9N15qRUE8yavBhI2RuzyZZwFA7F9TxxxxxrHGoSNAFRFAAAAoAAOgGXuEuxV2KuxV&#xA;2Kvj7Q/zl8weXrzXoUgjv7e+1G6vLZbh3DQvNM7PuK8lPWm29d9812o0oySvk7bFYiEm8z+TPzL8&#xA;1eW2/NDUWhv9MLyI0MDP6tvBBI8RdYCvBYUdTXi7H9pv2jmTixCEaDRLIDKiwC3me3uI7iKnqRMH&#xA;Tdl3Br1Qqw+akHwIOSO7On1P5A/L+z82+U7bULHXpB5b1V3l1DTpIOd8ru5+t2rXgkReJk5Ly9Dl&#xA;wOx3Byr8pAyEmEtZMAxe4qqqoVQFVRQAbAAZluA3irsVdirHfzIleH8u/NM0dfUj0i/dKdarbSEU&#xA;wFlHmHxfofnDzd5e0y407RtWms7OerSRKEajUoWQsrNGSO6EfqzDnhhI2Q7UCuRb80/lt558uaHp&#xA;uv6ypk0vWUSaO4jleQLLcL6wWcMAVkYN99d8ydwPJxBwSly3X/lZ+YeoeQvNMOqW5Z9Nm4w6tZL9&#xA;ma3ruQvT1I6lkPjt0Y4AWWTGCH2/pUWiTxLq+mRQFdSjScXsKKpnjkAdHLgAsGBrvlrhG0fih2Ku&#xA;xV2Kvi/z55m1rTvzh8y61pN89pepey2vqIAwMcIWHg6OGVh+6GxHUVHbMbNAT2LssEfSCgF8lfmh&#xA;560zVvO8M7aqthL9XukWQrct6MaTOsMCKF4qswbitO/EVyWKHAPTs15jEyqW7CNOv7zTr631LTp2&#xA;tr62dZre6jNHV13Ug5K2XCKfbX5W+b9F/MTyrY6/c2du2s2TfV75WjVmguowGYxFgWVXBEi0O1aV&#xA;qDlg3cKcTE0zzCwdir5r/wCcsbphr3luB+Swpa3LI7VEZeSSMEKTtyAjFfoyvI5mk6se/wCcZ7Vb&#xA;v80EmQ8lstPuZ2KnYcmjhFfn6hwQ5s9UfSzX/nJz8rPrtmvnbRrZn1C24xazDChZpYPspPxXctFs&#xA;rGn2OuyZKQcfDOti8b/K2281aR5+8t6xbafdRQfX7WB7mSF44mhvZVtXXm4VTzWag96ZVHJG6sW5&#xA;WXGeEmtn3JmQ652KuxV2KuxV8Df4f8xxJL62lXlbcyLcPHBJLGHicpLSWMOjcXU9DmJLJEGiRbuI&#xA;A8INF9e/kho89h+U2g2V9DxeaGaeSGQV+C8nkuFDA16pKNsyo8nV5Tci+cPzQ/JTX9D89TWGhWPr&#xA;6PqIlvNIIlhXjDGY/WiId1YejJcKq16qR1+KlGWcYbnk5enuew5vX/8AnGDSNf0XSfMOlaoUWOG7&#xA;hlihRufCWWAGSrjbdRHt/XJYcgmLHJp1UOGVHm9sy5xnYq7FXYqxL83IryX8svM0dpH6kzafOOPJ&#xA;UonH943Jio+FKtgPJnj+oPjOfy55kK+l+ib0PKUiiJt5QjSTMI41DkBKs7gD4sxY5Ik0CHaysCyH&#xA;2/e+U9J1LyifK+pQifTZLRLOWP8AyUQKrKSNmUqGVuxAOZdOove3xnqn5O+d7HzHqOiJarMdPlCf&#xA;WjLCiSRPUwy8ebMPUQcuNKjocxMuaOM0XZ4YnILD6m/IaLUoPyt0m11GQS3FnJe2gYEsOFtezQoA&#xA;xpVQI6Lt9mmZGOVxBcDNGpkPQMm1OxV2KuxV8See9A8xv568yyDS7uYPq14waCFp1pLO0qAtCJF/&#xA;u3Wvh33zFnkiDRIdrgBMBQfQn/ONGkXmn/lsZrmNojqV/PdxIwo3AKkAJHavoZfDk4OoNzeS/np+&#xA;TGqaf50Go+W7JX0rXnLJCskMYivSryTRqjurcGWMyAgcQTx2+HIZZCAs8m7Tky9PVln/ADjH5b8y&#xA;eXvMGvWepGOKG4s7a4e1VvUbmJZUjao+EbBwaVrt4YMGUTukavGY1b6Fy9w3Yq8r8y6kdV853F1J&#xA;pF5qOh6NDJpdvc2kH1pGvJWSS8rHGTL8AjijDBKcvUFdjmDrcc5gCLm6WYhuTumf5T2drdNq/ma1&#xA;tWtLPUZI7LToXQxsbewMitKUO6mS4ll69VVcs0mIwhvzYarLxyTX80dSuLXybfWViA+rayjaZpkR&#xA;bjWa5RlL1odoo+cp9lzJLjx52858v2Oqah5t8vaLcaVPp0VtJ+krkySWzr6Gn09ML6EsrfFcvDTk&#xA;oqtc1+n0coT4pOy1GthPHUXuWbF1bsVdirsVSXzjrVzo/l66urKMTanJxttLtz0kvLhhFbof8n1H&#xA;BY9lqe2ApiLLy2fTrk6PpPkx9CvbG51NodLlvLpYDSIIZLyT1opZQzm3ilYMp+1Tpmqho5+JxS5W&#xA;7I6kCFRL2tESNFRFCIgCqqigAGwAAzbOseOecr7W9X863l5penDUdN0eL9FIyTxxyG55Ca6ZFk4o&#xA;yAmOM/GCGjbY5iarTyyAUeTm6TUxxfV1Zb+T1m6+TU1aVDHPr88mqMpIb91LSO23FQf9Fii6Zdgx&#xA;8EAGnU5OOZLN8taHYq7FXYqwn81r24fQodAs7aW9u9dmWCW1t+HqmxjIkvmAdkUj0QY+vVx16ZDJ&#xA;fCa5tmKuKzySKzuV8xectJ0kWN3aRaex1fUPrltJbFltzwtkX1FXlW5dZAR/vs5rdHpZRncnN1Gc&#xA;GNAvUyQBU9M2rrnz5qvmDWGm8webBo891pd/I15p93BLblWtYIkt7cmOWWKUeqsIkAVWrz8ds1+q&#xA;0s8krHJ2el1cMceE83tXk3Q20LyrpekyENcWlui3Ui9HuCOU7/7OVmb6cz4ihTrpyskpzhYuxV2K&#xA;oLWtWtNH0i91W7JFtYwvPLx3YiNS3FR3ZqUA7nFIFvHl1bXNJ8rvbXmiX8HmnUJX3lti9t+k9TuD&#xA;x/0mMyQemJ5wF+OvAdB0zUZdLknls8rdlDPGMaBewaFpFroui2GkWlfq2n28VtEW+0ViQIC3iTSp&#xA;9824daTZea/mbf6nf+b7Cx0ywk1K30KFp79IXhR1ub0cIAvrvEhMcKOWHKtJFzG1WKWSNRcrSZo4&#xA;5XJM/wAnrWaeLXNeuIHt5L27+oQRSFGIg03lEamNpEr9aknGzHHS4TjjR5rrMwySscnouZLiJT5t&#xA;1z9A+V9W1riJG060muUjP7bxxlkT/ZMAMVDwPyJp/wCb9/pE0XlfUbxNLLy/Wb25nhjhmumYm5Nu&#xA;80NzOCZmZmaMKvOtDWuXzEAa3cLBLPMcRMQDy2s106h7B+U17eN5Pt9F1K0NjrHlvhpGo21VYcre&#xA;JDFKrKaMs0DxyVHckdsoc6Tx388/MGoah+Yxsrf64kPlqGNIJbRJ/wB3dXUQnmk9WEbH0WjWhPTl&#xA;2OW4uD+JxdV4oA8Me/kxfyp5r8xxeb7aaz8zPp13cKI7+91F1liFrGfU9No7n4QWY0UJxNTWvXDl&#xA;EK25sNLLMSeMen3Por8u/O8vmJtUsbma0u7vSXiDX+nmttPFcKzRsFLylHBRldebdK13oKXNIZli&#xA;h2KuxV4p+fGsXs/mTy95fsTcG5hB1CGGzYpcPdysbe09JlKkFQs9TWnc7DLMYjuZcnH1EsgAjj+o&#xA;n4V1/QpW2nfmv5b1zSfNvmmVdR0ayY297EbsTTWttd0jecxCCGOsTcSzK7tw5ZGRj0DdjjP+KQPu&#xA;FfpL1bztr7+X/KGsa1GoeewtJZreNvstMFPpKadmegyLMCy+SLSbW7a3lIm1WEXjtJeOPrkCzzSG&#xA;skjqOCs0h3Y9x7ZlRGL8W6uZ1Vnb/clnfkL8y9c0Dyu93J5ltry1sua2flq+UNMba3PHhHcgrKsj&#xA;hD6XPmoHHbfbGnVmuTssQkYjiHq6vpK1uIrm2iuYTyinRZI28VccgdvY4EqmKuxV2KvAvPGs+atT&#xA;/OC4tfLUl1+lNKhSxsYrR0UemUjubuWb1f3IjLzRK3qDqi0+KlbYCPDcnGyzymYjCqqzfny8+hZH&#xA;5JX8wPL/AJ5B86/6YnmWCOytdUEkUnpXNkJp0gZYo7dUWWN5WFEpyXxOVmujkwEq3IPuFfpKc/nr&#xA;5hu9H8gTw2XqfXNZmTTImhVnkCzKzzFFQFi3oRSceO4O/bEVe6DdHh5vm6fU9UtNNSxkvtRtrGAo&#xA;0Fq0lxGqFCHjCBqfZKgqvQbbZk1idYJ6oHl9ge1eSfzQ1u1j0CHX9f03XH1eaC1nhi9KO9t5rtgs&#xA;I/ct6coVmVH/AHSHvU9MxXbV5PaMWLsVdiryb/nIbXPq+i6VogkliGp3LXFwYCwkaGx4sET0/j5G&#xA;5lgpx37d8sxxBO/Jo1E5xh6PrJofj3Wx2Sx/O20t9M8x6sk+o6Zoc6ahJo881qbkwRqyykpFEvOV&#xA;YnZlDTMeVO+2Rlw9LbMQyfxGPwB++/0PcZNUsk0ptVEnOxWA3QlTflEE9TkB7rkWdPj9PMnmW4u7&#xA;3zA9xqFld6zIbm9eIXMURLiqIKgKVijoiN14gb5kQGOt+bgZ5agSND09ORZl+V3njzHpumXaw+aL&#xA;CHTbKRls9I1gq7Ss376ZxNzjuVVmkoGPqfFy+HxqycN7cnLwGZgOMep9C+WNdg1/y7pmtwIYotSt&#xA;orpYmNWT1UDFCRsSpNKjINpFFAfmJ/h7/BGs/wCIuf6F+rN9d9KnqcNqca/DXlSnL4fHauApjd7P&#xA;AtG/5WN+jv8AnS/W/wAO8D9T9T9M+LV/3j/0Tj/zB7cumBt26vV/yR4fonWPrH1z9NfXh+mPr3r8&#xA;vV+rxcPT+tf6Tw9LjT1vi/2PHCGuae+bf+VV+v8A87f+gvX4j/jrfU+fCop/vRvSvTFAvoxub/oX&#xA;b1DX9Af88/Q4f7Hh8NPljsn1Mo8kf8q89O7/AMG/UONU+u/UOFa/F6fqcd/5uNfenfFEr6snwsXY&#xA;q7FXiP53f4f/AMZaV9Q+sf49+qp9S9D1f95uU/D/AHk/0+tfWr9V/Zr6vw8ciW2F15MS1X/HHoQ/&#xA;41+vf4c9NP0j9R/xB6lOR5/72/6Lx4/79+Lw+LjgZCun6H0vc/V/q8n1nh9X4n1fUpw4035ctqfP&#xA;JtDArv8A6F/+uf6V/hT69v8A3n6O9au/Klfjr1wbM/V5oGP/AKF35j/jgdf92ejw/wBlz+Gnz2x2&#xA;X1PTYvS9JPS4+lxHp8KceNNqU2pTCwXYq7FXYq+dfOH1f/lZWsf8q/8AX/xN6g/TFfrvo+p8HOv6&#xA;L/0nj0/3o/d8vsZEt8eW6v5Y/wAV/wCO9C/xz+kKfW/9xXofpP0PrHotw+s/Xf8ARvs8/wDef4vH&#xA;4eWKDVbPdNc/QP6Ok/Tv1X9G/wC7fr3p+h/svV+D78k1Bgc//QuvxU/wxXmfV+q/UuXPvz9Dev8A&#xA;rYNmXq81XSP+VDfpWz/Rn6E/SXrR/UuHpc/X5D0uFf2+dOPetKb47KeJ6NhYOxV2KvI/z9/wvy8v&#xA;fX/rH+IfUn/QH1ev2ucHqV4f6Ry9T0eH1b99y+ztywFsx28/1D/lb36M/wBzf1v9E8X+ufVP8Qev&#xA;6dP91+p8Nf5vrHwf7GuR3Z+n8U+h/K/6N/wrpH1Dn+jPqNv9U9enP0PRX0/Upty4U5ZNpPNiV/8A&#xA;8qA+sv8AXP8AC/12jcq/UPrFN+VKfvPuwbMvV5pf/wBY6/8Aaj/5J47J9T0XRf0P+iLP9C+h+ifS&#xA;T6j9U4+h6NPg9Ph8PGnSmFgX/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:AD5151251284E411BCEDA968A3005EC0</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:AD5151251284E411BCEDA968A3005EC0</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:AC5151251284E411BCEDA968A3005EC0</stRef:instanceID>
            <stRef:documentID>xmp.did:AC5151251284E411BCEDA968A3005EC0</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AC5151251284E411BCEDA968A3005EC0</stEvt:instanceID>
                  <stEvt:when>2014-12-15T11:27:49+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AD5151251284E411BCEDA968A3005EC0</stEvt:instanceID>
                  <stEvt:when>2014-12-15T11:28:01+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>400.000000</stDim:w>
            <stDim:h>200.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Web Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -161.493 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 161.493 li
382.972 161.493 li
382.972 0 li
cp
clp
[1 0 0 1 0 0 ]ct
55.1138 154.593 mo
59.0737 154.763 62.7935 154.734 64.9038 154.343 cv
64.9736 155.333 64.9038 156.194 64.8237 156.513 cv
60.6636 157.184 42.3037 156.593 39.6338 155.263 cv
39.6636 154.444 39.7534 153.673 39.8735 152.944 cv
40.0337 152.973 li
42.3638 153.574 49.0337 154.324 55.1138 154.593 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.181369 .0870985 .113436 0 cmyk
f
59.0034 148.164 mo
61.2339 148.854 63.2437 149.553 64.1636 151.184 cv
64.6436 152.043 64.8535 153.274 64.9038 154.343 cv
62.7935 154.734 59.0737 154.763 55.1138 154.593 cv
55.1338 154.263 li
55.1338 150.934 57.4937 148.513 58.9937 148.184 cv
59.0034 148.164 li
cp
f
55.4038 139.753 mo
54.4336 142.394 53.4136 144.833 53.2036 145.513 cv
53.1836 145.503 li
50.4336 147.253 44.4136 146.624 43.6636 144.124 cv
43.5234 144.053 li
44.6035 141.874 45.6738 139.973 46.4639 137.973 cv
46.6235 138.034 li
47.9536 140.034 53.1235 140.534 55.2036 139.684 cv
55.4038 139.753 li
cp
f
28.2236 156.673 mo
28.3135 157.723 28.2837 158.534 28.2437 158.684 cv
26.9136 161.684 13.7437 162.104 10.4136 157.854 cv
10.4336 157.154 10.4839 156.463 10.5537 155.814 cv
10.9136 155.854 li
11.5835 156.383 12.3535 156.824 13.1836 157.173 cv
18.3936 159.394 26.1738 158.414 28.0737 156.684 cv
28.2236 156.673 li
cp
0 0 0 0 cmyk
f
27.9136 154.854 mo
27.9536 154.843 li
28.0938 155.473 28.1738 156.114 28.2236 156.673 cv
28.0737 156.684 li
26.1738 158.414 18.3936 159.394 13.1836 157.173 cv
13.2437 157.024 li
14.2437 150.104 26.4136 147.934 27.9136 154.854 cv
cp
f
26.6538 140.473 mo
25.6538 142.574 24.5635 144.833 24.3335 146.083 cv
24.2437 146.064 li
22.3037 147.874 15.9336 147.753 13.9136 144.854 cv
13.7734 144.784 li
14.5435 143.173 15.6738 141.124 16.7236 138.874 cv
16.8936 138.954 li
18.3936 141.124 24.2236 141.684 26.5537 140.434 cv
26.6538 140.473 li
cp
f
58.9937 148.184 mo
57.4937 148.513 55.1338 150.934 55.1338 154.263 cv
55.1138 154.593 li
49.0337 154.324 42.3638 153.574 40.0337 152.973 cv
39.8735 152.944 li
40.5034 149.374 42.1738 146.793 43.4937 144.124 cv
43.5034 144.104 43.5137 144.074 43.5234 144.053 cv
43.6636 144.124 li
44.4136 146.624 50.4336 147.253 53.1836 145.503 cv
53.2036 145.513 li
53.1738 145.593 53.1636 145.654 53.1636 145.684 cv
54.8735 146.934 57.0234 147.543 59.0034 148.164 cv
58.9937 148.184 li
cp
.823453 .403418 .425788 .104005 cmyk
f
24.2837 146.513 mo
24.6738 148.614 25.4136 149.434 27.0737 152.354 cv
27.4937 153.083 27.7734 153.963 27.9536 154.843 cv
27.9136 154.854 li
26.4136 147.934 14.2437 150.104 13.2437 157.024 cv
13.1836 157.173 li
12.3535 156.824 11.5835 156.383 10.9136 155.854 cv
10.5537 155.814 li
10.9639 151.944 12.1035 148.814 13.2437 145.973 cv
13.3838 145.614 13.5635 145.213 13.7734 144.784 cv
13.9136 144.854 li
15.9336 147.753 22.3037 147.874 24.2437 146.064 cv
24.3335 146.083 li
24.3037 146.244 24.2837 146.383 24.2837 146.513 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
47.7437 129.833 mo
50.4937 129.723 55.2437 129.234 57.2935 128.223 cv
57.3237 128.284 li
57.6636 130.534 57.5737 132.723 56.6636 135.954 cv
56.3237 137.154 55.8735 138.473 55.4038 139.753 cv
55.2036 139.684 li
53.1235 140.534 47.9536 140.034 46.6235 138.034 cv
46.4639 137.973 li
47.4136 135.614 47.9839 133.114 47.7437 129.854 cv
47.7437 129.833 li
cp
.0797436 .400244 .584497 0 cmyk
f
29.5234 130.904 mo
29.5537 131.003 li
29.3037 134.253 28.8638 135.644 27.3037 139.064 cv
27.0938 139.513 26.8735 139.994 26.6538 140.473 cv
26.5537 140.434 li
24.2236 141.684 18.3936 141.124 16.8936 138.954 cv
16.7236 138.874 li
17.9639 136.223 19.0835 133.303 19.3237 130.524 cv
19.3335 130.494 li
21.9639 131.263 26.2534 131.874 29.5234 130.904 cv
cp
0 .167361 .439734 0 cmyk
f
37.9937 103.593 mo
37.9937 106.364 37.2437 114.343 35.9136 116.564 cv
35.9136 116.734 li
34.1338 116.734 31.9937 116.723 31.9937 116.723 cv
33.3638 114.104 34.2437 106.053 34.1636 103.673 cv
34.1636 103.473 li
35.4839 103.473 36.7637 103.473 37.9937 103.473 cv
37.9937 103.593 li
cp
.498634 .76672 .682032 .673518 cmyk
f
58.1338 127.593 mo
57.9639 127.824 57.6738 128.034 57.2935 128.223 cv
55.2437 129.234 50.4937 129.723 47.7437 129.833 cv
46.7935 129.864 46.0835 129.854 45.8037 129.803 cv
44.3438 125.734 38.9736 118.354 36.1738 116.734 cv
36.0835 116.734 36.0034 116.734 35.9136 116.734 cv
35.9136 116.564 li
37.2437 114.343 37.9937 106.364 37.9937 103.593 cv
37.9937 103.473 li
42.1738 103.463 45.6235 103.423 46.9136 103.354 cv
47.3237 108.204 li
48.8335 110.083 55.6938 117.494 58.1338 127.593 cv
cp
f
34.1636 103.673 mo
34.2437 106.053 33.3638 114.104 31.9937 116.723 cv
31.2437 121.553 31.4937 125.963 30.4937 130.564 cv
30.1836 130.694 29.8638 130.814 29.5234 130.904 cv
26.2534 131.874 21.9639 131.263 19.3335 130.494 cv
18.6938 130.314 18.1538 130.114 17.7437 129.923 cv
18.9136 119.944 18.2437 111.604 20.7437 103.354 cv
24.5234 103.423 29.5137 103.463 34.1636 103.473 cv
34.1636 103.673 li
cp
.433509 .775906 .674159 .526574 cmyk
f
31.9937 116.723 mo
31.9839 116.793 31.9736 116.874 31.9639 116.944 cv
31.8535 116.923 li
27.7837 113.763 21.7139 114.234 18.8838 114.704 cv
19.1836 111.234 19.6738 106.883 20.7437 103.354 cv
24.5234 103.423 29.5137 103.463 34.1636 103.473 cv
34.1636 103.673 li
34.2437 106.053 33.3638 114.104 31.9937 116.723 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
29.5234 130.904 mo
29.5537 131.003 li
29.4839 131.874 29.4038 132.604 29.2935 133.284 cv
26.7534 134.534 22.1938 134.343 18.9736 132.723 cv
19.1436 131.984 19.2637 131.244 19.3237 130.524 cv
19.3335 130.494 li
21.9639 131.263 26.2534 131.874 29.5234 130.904 cv
cp
.0797436 .400244 .584497 0 cmyk
f
64.3911 156.071 mo
59.6582 156.663 43.3618 156.03 40.1509 154.935 cv
40.1772 154.454 40.2251 153.992 40.2886 153.543 cv
43.6138 154.3 52.8057 155.192 59.4404 155.192 cv
61.4033 155.192 63.1392 155.113 64.4326 154.93 cv
64.4375 155.389 64.4204 155.794 64.3911 156.071 cv
cp
43.1104 145.957 mo
43.2729 145.646 43.4287 145.338 43.5879 145.029 cv
44.0122 145.601 44.688 146.08 45.6138 146.423 cv
46.5864 146.786 47.8252 146.994 49.0879 146.994 cv
50.4697 146.994 51.8628 146.725 52.9834 146.157 cv
54.3936 147.163 56.0293 147.75 57.6616 148.265 cv
56.187 149.276 54.7124 151.432 54.644 154.076 cv
49 153.805 42.9639 153.141 40.4658 152.562 cv
40.9937 150.008 42.062 147.954 43.1104 145.957 cv
cp
46.6484 138.829 mo
47.9126 140.013 50.4058 140.585 52.5615 140.585 cv
53.3218 140.585 54.0313 140.509 54.6377 140.37 cv
54.2251 141.469 53.8169 142.508 53.4814 143.36 cv
53.1191 144.28 52.9136 144.808 52.7979 145.137 cv
51.1338 146.121 48.1104 146.286 45.9629 145.487 cv
44.9678 145.117 44.3203 144.581 44.1396 143.977 cv
44.1382 143.972 44.1343 143.969 44.1328 143.964 cv
44.3857 143.461 44.6382 142.963 44.8843 142.484 cv
45.5229 141.24 46.1245 140.046 46.6484 138.829 cv
cp
48.2549 130.299 mo
50.5601 130.18 54.5605 129.812 56.8999 128.92 cv
57.1494 131.111 56.9355 133.157 56.1797 135.818 cv
55.8765 136.886 55.48 138.057 55.0649 139.208 cv
55.0474 139.213 55.0298 139.211 55.0122 139.218 cv
53.1147 139.997 48.2808 139.514 47.0664 137.798 cv
47.8994 135.607 48.3994 133.249 48.2549 130.299 cv
cp
46.1675 129.335 mo
44.5039 125.05 39.3931 118.157 36.562 116.392 cv
37.7612 113.851 38.4336 106.903 38.4878 103.969 cv
42.1851 103.958 45.0303 103.924 46.4536 103.875 cv
46.8291 108.248 li
46.8374 108.346 46.875 108.44 46.9365 108.517 cv
47.1563 108.792 47.4868 109.161 47.9004 109.622 cv
50.3691 112.372 55.479 119.066 57.5811 127.458 cv
56.2559 128.635 49.9595 129.349 46.751 129.349 cv
46.4863 129.349 46.2983 129.343 46.1675 129.335 cv
cp
30.894 122.873 mo
30.7266 125.379 30.5684 127.751 30.0596 130.2 cv
28.856 130.667 27.3706 130.904 25.6396 130.904 cv
22.8721 130.904 19.897 130.261 18.2822 129.611 cv
18.6636 126.246 18.8389 123.212 19.0088 120.276 cv
19.3271 114.782 19.603 109.019 21.1143 103.861 cv
24.5269 103.921 29.0669 103.96 33.6636 103.97 cv
33.6816 106.635 32.8008 114.111 31.5513 116.488 cv
31.5435 116.502 31.5444 116.518 31.5381 116.533 cv
31.5229 116.569 31.5059 116.604 31.4995 116.644 cv
31.1665 118.792 31.0278 120.867 30.894 122.873 cv
cp
26.8516 138.854 mo
26.6846 139.22 26.498 139.612 26.3159 139.999 cv
24.1948 141.131 18.728 140.572 17.3472 138.724 cv
18.4634 136.294 19.4253 133.688 19.7461 131.125 cv
21.4385 131.569 23.5708 131.904 25.6396 131.904 cv
26.8809 131.904 27.9966 131.774 29.0039 131.543 cv
28.7446 134.35 28.2671 135.755 26.8516 138.854 cv
cp
23.9326 145.678 mo
23.9233 145.686 23.9111 145.688 23.9019 145.697 cv
23.0356 146.507 20.9727 146.917 18.8804 146.701 cv
16.8291 146.485 15.2061 145.739 14.3916 144.655 cv
14.6802 144.066 15.0103 143.423 15.3677 142.729 cv
15.8584 141.776 16.3794 140.757 16.8887 139.7 cv
18.1782 140.942 20.7754 141.597 23.1382 141.597 cv
24.0718 141.597 24.9536 141.485 25.7144 141.278 cv
24.9224 142.957 24.2163 144.523 23.9326 145.678 cv
cp
25.6616 150.928 mo
25.6953 150.985 25.7354 151.052 25.77 151.111 cv
24.6343 150.439 23.2153 150.081 21.5859 150.13 cv
17.9121 150.258 13.7212 152.516 12.8501 156.458 cv
12.2642 156.172 11.7095 155.849 11.2217 155.462 cv
11.189 155.436 11.1509 155.424 11.1143 155.407 cv
11.5571 151.812 12.6216 148.873 13.708 146.158 cv
13.771 146 13.8496 145.826 13.9258 145.654 cv
14.9697 146.743 16.6934 147.476 18.7759 147.695 cv
19.1997 147.74 19.6187 147.761 20.0278 147.761 cv
21.5366 147.761 22.9033 147.463 23.8643 146.933 cv
24.188 148.444 24.728 149.362 25.6616 150.928 cv
cp
27.4224 154.959 mo
27.438 155.032 27.4712 155.096 27.5132 155.152 cv
27.5942 155.565 27.6538 155.969 27.6968 156.349 cv
26.021 157.791 18.812 158.783 13.7861 156.864 cv
14.4502 153.295 18.2729 151.247 21.6206 151.13 cv
24.7085 151 26.8789 152.453 27.4224 154.959 cv
cp
27.7871 158.478 mo
27.4185 159.309 25.6479 160.017 23.1655 160.327 cv
18.6929 160.885 12.958 160.043 10.918 157.684 cv
10.9341 157.286 10.9692 156.905 11.0005 156.522 cv
13.4697 158.268 17.0513 158.97 20.377 158.97 cv
23.4419 158.97 26.2715 158.383 27.7876 157.5 cv
27.8101 158.013 27.8013 158.378 27.7871 158.478 cv
cp
37.4878 103.971 mo
37.4277 106.986 36.6768 114.195 35.5205 116.23 cv
34.5078 116.229 33.4531 116.225 32.7622 116.223 cv
33.9341 113.284 34.6753 106.494 34.6631 103.972 cv
35.0645 103.972 35.4658 103.973 35.8662 103.973 cv
36.4229 103.973 36.9604 103.972 37.4878 103.971 cv
cp
63.7251 151.427 mo
64.1104 152.106 64.3013 153.043 64.3833 153.927 cv
62.3501 154.232 59.1235 154.258 55.6484 154.12 cv
55.7168 151.088 57.8276 149.02 59.0317 148.696 cv
61.0679 149.333 62.9185 150.005 63.7251 151.427 cv
cp
64.5952 150.933 mo
63.5142 149.029 61.1914 148.313 58.7324 147.554 cv
56.9985 147.02 55.209 146.468 53.7378 145.476 cv
53.8721 145.098 54.1455 144.404 54.4121 143.727 cv
55.2129 141.694 56.4233 138.621 57.1416 136.091 cv
57.9751 133.156 58.1816 130.923 57.8521 128.462 cv
58.1406 128.286 58.3838 128.098 58.5352 127.888 cv
58.6206 127.77 58.6504 127.62 58.6157 127.478 cv
56.4951 118.701 50.9941 111.571 48.645 108.954 cv
48.3027 108.573 48.019 108.256 47.812 108.008 cv
47.4087 103.311 li
47.3857 103.042 47.1563 102.827 46.8843 102.855 cv
45.4795 102.929 41.3604 102.973 35.8662 102.973 cv
30.3794 102.973 24.7295 102.928 20.7529 102.854 cv
20.5249 102.84 20.3301 102.995 20.2651 103.208 cv
18.624 108.621 18.3398 114.532 18.0107 120.218 cv
17.8354 123.248 17.6538 126.38 17.2466 129.866 cv
17.2212 130.081 17.3374 130.287 17.5342 130.377 cv
17.8774 130.536 18.3062 130.692 18.7769 130.844 cv
18.3301 134.764 16.207 138.915 14.4785 142.271 cv
13.7739 143.64 13.1655 144.822 12.7793 145.787 cv
11.4209 149.18 10.0806 152.907 9.91162 157.837 cv
9.90723 157.956 9.94482 158.071 10.0176 158.164 cv
11.8193 160.46 16.2529 161.493 20.4033 161.493 cv
21.3945 161.493 22.3701 161.433 23.2891 161.319 cv
25.0015 161.106 27.9824 160.505 28.729 158.801 cv
28.8252 158.418 28.9048 154.544 27.5117 152.106 cv
27.1367 151.45 26.8086 150.899 26.5205 150.417 cv
25.5479 148.786 25.0596 147.967 24.7861 146.512 cv
24.7861 145.573 25.9243 143.168 26.9287 141.047 cv
27.2168 140.439 27.5015 139.837 27.7607 139.27 cv
29.2725 135.96 29.772 134.449 30.0347 131.254 cv
30.2554 131.18 30.4839 131.111 30.6899 131.023 cv
30.8389 130.959 30.9478 130.828 30.9824 130.669 cv
31.5503 128.057 31.7163 125.571 31.8921 122.939 cv
32.0151 121.088 32.1426 119.178 32.4243 117.222 cv
33.1611 117.224 34.7085 117.23 36.0308 117.23 cv
38.7295 118.904 43.8857 125.944 45.3374 129.97 cv
45.397 130.136 45.5405 130.258 45.7139 130.292 cv
45.9165 130.33 46.2559 130.349 46.751 130.349 cv
46.877 130.349 47.0557 130.345 47.2573 130.34 cv
47.498 135.156 45.9541 138.21 43.9946 142.028 cv
43.6836 142.633 43.3652 143.253 43.0454 143.899 cv
42.7822 144.43 42.5049 144.958 42.2246 145.492 cv
40.7764 148.25 39.2793 151.103 39.1362 155.247 cv
39.1294 155.442 39.2373 155.624 39.4121 155.711 cv
41.4443 156.728 51.3613 157.295 58.4297 157.295 cv
61.2935 157.295 63.6909 157.203 64.9053 157.008 cv
65.1025 156.976 65.2622 156.831 65.311 156.636 cv
65.4912 155.92 65.6211 152.742 64.5952 150.933 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
56.8037 97.8237 mo
56.2139 99.9233 55.2236 103.494 53.6738 103.013 cv
53.3936 102.923 53.1636 102.774 52.9937 102.564 cv
52.8936 102.664 li
51.8936 102.803 50.8438 104.934 51.4336 106.624 cv
51.1138 107.104 50.8735 108.234 51.3135 109.244 cv
51.2534 109.263 li
49.1138 108.614 46.5737 106.624 46.1338 105.253 cv
47.0835 103.034 47.9536 99.144 48.0234 98.0239 cv
48.1938 98.0337 li
50.2437 95.6538 53.0034 94.4136 54.4038 94.8032 cv
55.6538 95.1636 57.0537 95.604 56.9238 97.1938 cv
56.9136 97.3833 56.8735 97.5933 56.8037 97.8237 cv
cp
.0797436 .400244 .584497 0 cmyk
f
57.1138 97.2036 mo
59.4839 97.6538 61.0234 98.4233 61.6138 99.5835 cv
62.1235 100.583 61.8438 102.374 60.5835 103.093 cv
61.3438 104.444 60.0537 111.144 55.2637 111.154 cv
52.8638 111.164 51.7437 110.263 51.3135 109.244 cv
50.8735 108.234 51.1138 107.104 51.4336 106.624 cv
50.8438 104.934 51.8936 102.803 52.8936 102.664 cv
52.9937 102.564 li
53.1636 102.774 53.3936 102.923 53.6738 103.013 cv
55.2236 103.494 56.2139 99.9233 56.8037 97.8237 cv
56.8735 97.5933 56.9136 97.3833 56.9238 97.1938 cv
57.1138 97.2036 li
cp
f
44.9639 70.814 mo
49.9438 71.2339 47.8135 81.7134 46.2036 87.604 cv
45.7534 87.6333 45.2534 87.644 44.7236 87.6138 cv
42.4136 87.4731 39.4136 86.7437 36.7437 85.6138 cv
35.9736 85.2935 35.2236 84.9341 34.5337 84.5435 cv
36.1538 79.4731 40.4937 70.4438 44.9639 70.814 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
42.3735 95.5737 mo
44.3335 96.1733 46.4038 97.1841 48.0337 97.814 cv
48.0337 97.8638 48.0337 97.9341 48.0234 98.0239 cv
47.9536 99.144 47.0835 103.034 46.1338 105.253 cv
46.0835 105.374 46.0337 105.484 45.9839 105.593 cv
43.6338 105.293 34.9736 102.234 34.0234 100.414 cv
32.5537 97.5933 35.6235 88.7739 36.6836 85.7534 cv
36.7437 85.6138 li
39.4136 86.7437 42.4136 87.4731 44.7236 87.6138 cv
44.7036 87.8032 li
43.9136 90.0737 42.9736 93.5132 42.4136 95.4341 cv
42.3735 95.5737 li
cp
.498634 .76672 .682032 .673518 cmyk
f
60.3325 102.665 mo
60.0957 102.801 60.0132 103.103 60.147 103.342 cv
60.4561 103.893 60.3154 106.2 59.168 108.165 cv
58.5059 109.298 57.2905 110.651 55.2637 110.655 cv
55.2573 110.655 55.2515 110.655 55.2456 110.655 cv
53.5254 110.655 52.3511 110.157 51.8491 109.214 cv
51.3701 108.315 51.6196 107.25 51.8525 106.906 cv
51.9414 106.774 51.9629 106.609 51.9102 106.459 cv
51.5903 105.551 51.8501 104.48 52.2495 103.821 cv
52.5039 103.401 52.7622 103.216 52.9263 103.173 cv
53.1055 103.306 53.2993 103.418 53.5215 103.488 cv
53.6641 103.532 53.8076 103.554 53.9507 103.554 cv
54.1924 103.554 54.4321 103.492 54.6592 103.368 cv
55.8623 102.712 56.5776 100.465 57.2822 97.9565 cv
57.3013 97.8882 57.3013 97.8286 57.3164 97.7612 cv
59.3901 98.1938 60.6914 98.8804 61.1685 99.813 cv
61.541 100.54 61.3979 102.048 60.3325 102.665 cv
cp
46.6777 105.243 mo
47.5264 103.153 48.3003 99.9028 48.4897 98.4224 cv
48.5166 98.4009 48.5469 98.3862 48.5698 98.3599 cv
50.5083 96.1099 53.0771 94.9517 54.2666 95.2896 cv
54.9585 95.4839 55.6128 95.688 56.019 96.0474 cv
56.3027 96.2983 56.5933 96.7114 56.3008 97.7524 cv
55.8857 99.23 55.1133 101.981 54.1807 102.49 cv
54.0542 102.557 53.9414 102.571 53.8174 102.533 cv
53.5063 102.436 53.2856 102.222 53.1426 101.877 cv
52.7759 100.995 53.0103 99.4829 53.7266 98.1157 cv
53.855 97.8706 53.7603 97.5688 53.5156 97.4399 cv
53.269 97.314 52.9692 97.4067 52.8408 97.6509 cv
51.9814 99.2925 51.7373 101.101 52.2188 102.261 cv
52.2368 102.304 52.2627 102.339 52.2827 102.38 cv
51.958 102.573 51.6519 102.877 51.394 103.303 cv
50.9385 104.054 50.5557 105.334 50.8965 106.567 cv
50.667 107.032 50.5161 107.743 50.6045 108.494 cv
48.8257 107.715 47.1113 106.217 46.6777 105.243 cv
cp
34.4644 100.178 mo
33.5679 98.4634 34.4341 93.7817 37.0303 86.271 cv
39.353 87.2036 41.9028 87.854 44.0884 88.0571 cv
43.5093 89.7778 42.8789 91.9849 42.3647 93.7905 cv
42.0322 94.9497 li
40.5781 94.5522 39.187 94.4067 38.02 94.8149 cv
37.7593 94.9058 37.6221 95.1909 37.7134 95.4517 cv
37.8047 95.7124 38.0908 95.853 38.3501 95.7583 cv
40.3032 95.0747 43.4443 96.4185 45.9697 97.4985 cv
46.5112 97.73 47.0327 97.9536 47.522 98.1489 cv
47.3979 99.2554 46.6138 102.792 45.7148 104.958 cv
45.6973 104.984 45.6812 105.008 45.6685 105.038 cv
42.8413 104.506 35.2222 101.627 34.4644 100.178 cv
cp
44.9209 71.313 mo
45.668 71.3755 46.2373 71.7007 46.6621 72.3081 cv
48.1094 74.3804 47.7983 79.769 45.8125 87.1216 cv
42.8877 87.2231 38.373 86.0171 35.1421 84.2993 cv
36.8994 79.0093 40.9971 70.9907 44.9209 71.313 cv
cp
62.0586 99.3569 mo
61.418 98.105 59.8857 97.2554 57.3936 96.7563 cv
57.3408 96.1802 57.1191 95.6851 56.6816 95.2983 cv
56.1167 94.7983 55.3447 94.5532 54.5371 94.3267 cv
52.9165 93.8735 50.1978 95.1792 48.1719 97.3296 cv
47.6113 97.1128 47.002 96.8521 46.3628 96.5796 cv
45.27 96.1118 44.1206 95.6245 42.9878 95.2446 cv
43.3262 94.0649 li
43.8652 92.1743 44.5313 89.8403 45.126 88.1118 cv
45.2349 88.1147 45.353 88.1274 45.459 88.1274 cv
45.7314 88.1274 45.9922 88.1177 46.2393 88.0981 cv
46.4492 88.0825 46.6265 87.936 46.6821 87.7329 cv
48.2251 82.1216 49.6162 74.7905 47.4814 71.7358 cv
46.8848 70.8813 46.0508 70.4038 45.0039 70.3169 cv
39.8364 69.8872 35.334 80.3892 34.0615 84.3882 cv
33.9897 84.6138 34.0864 84.8599 34.2935 84.9761 cv
34.8623 85.2954 35.478 85.5894 36.1094 85.8716 cv
34.3242 91.0181 32.1934 97.9927 33.5781 100.641 cv
34.6763 102.742 43.71 105.812 45.9199 106.09 cv
45.9409 106.093 45.9619 106.094 45.9824 106.094 cv
45.9888 106.094 45.9937 106.089 46 106.089 cv
46.8906 107.481 49.0264 109.066 50.9746 109.698 cv
51.4575 110.594 52.5894 111.655 55.2451 111.655 cv
55.252 111.655 55.2588 111.655 55.2656 111.655 cv
57.7661 111.65 59.2373 110.028 60.0317 108.668 cv
61.1206 106.804 61.4883 104.497 61.1846 103.289 cv
62.3765 102.331 62.6504 100.511 62.0586 99.3569 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
47.876 72.897 mo
46.8965 73.6206 45.6001 74.1655 44.479 74.5962 cv
44.7637 73.2437 45.6357 69.6069 46.1396 67.0112 cv
46.3687 67.0601 li
47.0757 67.1323 49.498 68.3472 49.438 70.436 cv
49.4165 71.4282 48.7822 72.2339 47.876 72.897 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
36.9478 69.2222 mo
36.8643 69.3452 li
32.5313 66.6108 28.9136 64.8677 26.7056 64.603 cv
26.5713 64.5806 26.4395 64.5796 26.3169 64.5669 cv
26.3223 64.5356 li
29.0073 63.0171 33.8521 64.2241 37.7578 65.0688 cv
37.9766 65.1187 li
37.7065 66.3579 37.4199 67.6216 36.9478 69.2222 cv
cp
.826932 .410346 .420874 .105837 cmyk
f
26.7056 64.603 mo
28.9136 64.8677 32.5313 66.6108 36.8643 69.3452 cv
39.2339 70.8296 41.8066 72.6089 44.479 74.5962 cv
37.8315 72.3491 33.1934 70.3862 28.7109 70.5415 cv
28.7178 70.8032 li
27.4219 72.147 26.1748 74.5532 25.0151 77.6558 cv
24.877 77.604 li
22.9712 76.6187 21.5635 73.7876 23.0493 70.9233 cv
20.8291 68.2056 22.2539 64.3296 26.3169 64.5669 cv
26.4395 64.5796 26.5713 64.5806 26.7056 64.603 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
47.8867 72.9058 mo
49.1089 77.9351 49.168 98.688 48.1865 108.378 cv
43.9468 110.904 25.2275 110.636 18.2158 107.451 cv
19.751 97.2485 22.1367 85.3403 25.0151 77.6558 cv
26.1748 74.5532 27.4219 72.147 28.7178 70.8032 cv
28.7109 70.5415 li
33.1934 70.3862 37.8315 72.3491 44.479 74.5962 cv
45.6001 74.1655 46.8965 73.6206 47.876 72.897 cv
47.8867 72.9058 li
cp
.74789 .241123 .31931 .00552377 cmyk
f
48.791 84.5835 mo
48.8613 87.3101 48.8813 90.2563 48.8594 93.187 cv
41.4648 95.3276 28.144 93.5942 21.3989 90.2915 cv
22.0698 87.3794 22.7891 84.5923 23.5444 82.062 cv
29.2944 84.0308 42.0464 86.4604 48.791 84.5835 cv
cp
0 0 0 0 cmyk
f
46.5142 64.4341 mo
46.5249 64.8667 46.3672 65.8286 46.1396 67.0112 cv
45.6357 69.6069 44.7637 73.2437 44.479 74.5962 cv
41.8066 72.6089 39.2339 70.8296 36.8643 69.3452 cv
36.9478 69.2222 li
37.4199 67.6216 37.7065 66.3579 37.9766 65.1187 cv
38.1567 64.3159 38.3398 63.5327 38.5537 62.6851 cv
41.5449 63.2749 43.3291 63.397 46.5142 64.4341 cv
cp
.0797436 .400244 .584497 0 cmyk
f
48.9424 70.4233 mo
48.9043 71.9175 47.0566 72.9888 45.1743 73.7817 cv
45.2437 73.4731 45.3223 73.1265 45.4067 72.7534 cv
45.832 70.8755 46.2354 69.0737 46.5322 67.604 cv
47.2744 67.8413 48.9819 68.854 48.9424 70.4233 cv
cp
47.7183 108.068 mo
43.3965 110.276 25.8218 110.09 18.7676 107.146 cv
19.9175 99.5942 23.792 76.6138 29.0767 71.1479 cv
29.1104 71.1128 29.1309 71.0708 29.1519 71.0298 cv
32.6382 71.019 36.2773 72.2798 41.1108 73.9644 cv
42.1299 74.3188 43.1973 74.6919 44.3228 75.0718 cv
44.3271 75.0737 44.332 75.0728 44.3364 75.0737 cv
44.3535 75.0796 44.3711 75.0776 44.3882 75.0815 cv
44.4341 75.0894 44.4805 75.0952 44.5259 75.0903 cv
44.5347 75.0903 44.5439 75.0942 44.5522 75.0933 cv
44.5898 75.0874 44.6265 75.0786 44.6621 75.0649 cv
45.6641 74.6802 46.6738 74.2446 47.5396 73.7212 cv
48.625 79.7261 48.5967 99.0308 47.7183 108.068 cv
cp
23.165 74.8042 mo
22.8823 73.9722 22.7104 72.6626 23.4976 71.1538 cv
23.5903 70.9761 23.5679 70.7593 23.4404 70.605 cv
22.4463 69.395 22.2236 67.8472 22.8735 66.6597 cv
23.5303 65.4595 24.9082 64.8911 26.6509 65.0981 cv
29.4268 65.4302 34.855 68.3501 41.4731 73.0317 cv
41.4619 73.0278 41.4512 73.0239 41.4395 73.02 cv
34.8564 70.7261 30.1001 69.0649 24.9565 70.6616 cv
24.6929 70.7437 24.5454 71.0229 24.6265 71.2866 cv
24.7085 71.5493 24.9849 71.7036 25.2524 71.6167 cv
26.1104 71.3511 26.9551 71.186 27.8008 71.0981 cv
26.7212 72.4712 25.707 74.5083 24.7656 76.936 cv
24.0547 76.4478 23.4653 75.689 23.165 74.8042 cv
cp
36.8218 65.3774 mo
37.3813 65.4985 li
37.1675 66.4419 36.9316 67.438 36.6099 68.5903 cv
33.2031 66.48 30.3398 65.0522 28.2383 64.4272 cv
30.6689 64.0405 34.0161 64.7661 36.8218 65.3774 cv
cp
38.458 65.272 mo
38.6074 64.606 38.7549 63.9526 38.9263 63.2651 cv
39.5723 63.3882 40.1641 63.4907 40.7319 63.5903 cv
42.4365 63.8872 43.9219 64.145 46 64.7954 cv
45.8579 66.2368 44.9771 70.1235 44.4316 72.5317 cv
44.3296 72.9819 44.2383 73.3872 44.1592 73.7397 cv
41.7852 71.9937 39.5479 70.4526 37.4932 69.145 cv
37.9189 67.6567 38.1953 66.4409 38.458 65.272 cv
cp
46.7241 66.6216 mo
46.9141 65.6069 47.0254 64.8335 47.0195 64.4292 cv
47.0161 64.2144 46.8774 64.0269 46.6738 63.9604 cv
44.3335 63.2017 42.7437 62.9253 40.9033 62.604 cv
40.209 62.4839 39.478 62.356 38.6553 62.1938 cv
38.396 62.144 38.1416 62.3013 38.0747 62.5581 cv
37.897 63.2407 37.748 63.8823 37.603 64.5239 cv
37.0352 64.3999 li
33.1758 63.5591 28.8066 62.6108 26.1328 64.0669 cv
24.2827 64.0239 22.7612 64.7827 21.9961 66.1792 cv
21.1963 67.6411 21.3872 69.4937 22.4683 70.9819 cv
21.1597 73.8315 22.3931 76.6919 24.3994 77.9067 cv
20.9277 87.4243 18.5273 102.024 17.7212 107.376 cv
17.6885 107.598 17.8062 107.814 18.0093 107.906 cv
23.6885 110.483 36.4102 111.123 43.7632 110.089 cv
45.8521 109.795 47.5078 109.367 48.4458 108.809 cv
48.5815 108.728 48.6714 108.587 48.688 108.43 cv
49.6182 99.2407 49.6274 78.7349 48.4355 73.0972 cv
49.3198 72.3843 49.9146 71.5239 49.9419 70.4478 cv
49.998 68.2358 47.7944 66.9243 46.7241 66.6216 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
70.8472 19.1255 mo
77.2388 24.7192 75.4355 34.2827 72.5029 38.0532 cv
72.2417 38.0454 li
72.2808 35.854 72.2769 33.9771 72.2842 32.6812 cv
71.7949 30.8774 70.3501 28.7046 68.2124 27.2153 cv
68.1265 27.1528 li
62.9507 33.8501 48.6533 38.8647 42.5688 38.1626 cv
42.8364 36.7437 43.3687 35.4829 44.0752 34.3862 cv
42.186 35.7358 36.6997 37.9731 31.0913 39.0356 cv
31.1123 39.1646 li
29.9282 44.7896 26.4756 48.354 23.6323 51.1919 cv
21.5479 46.5259 18.2007 44.6411 14.9707 45.9272 cv
12.6426 46.853 10.7764 49.5063 11.0762 52.7026 cv
10.9272 52.7251 li
8.14355 51.0815 5.06689 48.8413 2.32959 44.8647 cv
3.83057 43.4282 6.71094 41.9321 9.5249 41.0532 cv
6.71875 39.0405 2.79736 35.8696 .5 32.5571 cv
2.63281 29.7407 7.95703 26.0024 14.2583 23.4438 cv
11.3013 22.5776 7.47803 20.5239 5.29004 18.4663 cv
7.84424 16.105 13.4341 13.106 20.5767 12.481 cv
18.9805 11.4468 16.4561 8.8667 14.9097 6.45264 cv
24.1851 2.54932 41.374 2.12939 52.019 4.71143 cv
63.6079 7.52197 70.8774 13.7319 70.8472 19.1255 cv
cp
.373144 .782101 .665248 .350225 cmyk
f
72.2417 38.0454 mo
72.1177 44.8931 71.5879 54.7866 69.0386 59.6069 cv
65.7466 65.8071 59.1094 68.9985 54.3521 69.5845 cv
49.7148 70.1616 34.4868 70.1587 24.064 60.0278 cv
21.6533 62.0757 15.707 61.4624 12.5117 56.6021 cv
11.6416 55.2622 11.1953 53.9468 11.0762 52.7026 cv
10.7764 49.5063 12.6426 46.853 14.9707 45.9272 cv
18.2007 44.6411 21.5479 46.5259 23.6323 51.1919 cv
26.4756 48.354 29.9282 44.7896 31.1123 39.1646 cv
31.0913 39.0356 li
36.6997 37.9731 42.186 35.7358 44.0752 34.3862 cv
43.3687 35.4829 42.8364 36.7437 42.5688 38.1626 cv
48.6533 38.8647 62.9507 33.8501 68.1265 27.1528 cv
68.2124 27.2153 li
70.3501 28.7046 71.7949 30.8774 72.2842 32.6812 cv
72.2769 33.9771 72.2808 35.854 72.2417 38.0454 cv
cp
0 .167361 .439734 0 cmyk
f
51.0244 49.6118 mo
50.9165 52.2671 49.2349 54.355 47.2695 54.2749 cv
45.3042 54.1948 43.7974 51.9771 43.9053 49.3208 cv
44.0137 46.6655 45.6953 44.5776 47.6611 44.6567 cv
49.3423 46.7622 49.5186 46.9097 50.8208 47.728 cv
50.978 48.311 51.0518 48.9478 51.0244 49.6118 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
48.1704 48.4751 mo
47.8799 49.5786 46.981 50.2993 46.1646 50.0835 cv
45.3472 49.8687 44.9189 48.7983 45.2104 47.6938 cv
45.502 46.5913 46.3999 45.8706 47.2173 46.0864 cv
48.0342 46.3003 48.4619 47.3706 48.1704 48.4751 cv
cp
0 0 0 0 cmyk
f
70.2222 47.9106 mo
70.3384 50.5659 69.1445 52.7739 67.5571 52.8442 cv
65.9692 52.9136 64.5869 50.8149 64.4707 48.1606 cv
64.4507 47.6978 64.4702 47.2476 64.5249 46.8208 cv
65.9224 45.0669 65.8486 45.1548 67.1367 43.2271 cv
68.7241 43.1577 70.1064 45.2544 70.2222 47.9106 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
67.9067 47.7905 mo
67.9487 48.7544 67.4204 49.5601 66.7261 49.5913 cv
66.0317 49.6216 65.4336 48.8638 65.3916 47.8999 cv
65.3496 46.936 65.8789 46.1294 66.5732 46.0991 cv
67.2671 46.0688 67.8647 46.8267 67.9067 47.7905 cv
cp
0 0 0 0 cmyk
f
62.7656 10.8579 mo
65.7866 12.8022 67.4287 14.8169 68.2915 16.5288 cv
64.1216 22.7954 42.1704 19.7261 31.3472 19.3589 cv
21.9941 19.0425 15.8643 20.4624 12.2271 22.7173 cv
11.2378 22.313 10.2212 21.8198 9.25 21.271 cv
21.1636 12.189 49.8647 14.396 57.1245 13.269 cv
60.4028 12.7612 62.0933 11.8911 62.7656 10.8579 cv
cp
.341833 .684718 .553277 .151247 cmyk
f
70.8472 19.1255 mo
70.856 17.5083 70.2056 15.8081 68.9771 14.1587 cv
67.6563 12.3677 65.6465 10.6265 63.0615 9.07471 cv
60.0845 7.2876 56.3579 5.76709 52.019 4.71143 cv
42.1938 2.32764 26.7905 2.50146 17.1855 5.61084 cv
28.0244 3.63818 46.2471 3.79053 56.8247 7.89404 cv
59.2456 8.82764 61.1904 9.83154 62.7656 10.8579 cv
65.7866 12.8022 67.4287 14.8169 68.2915 16.5288 cv
69.0322 17.9985 69.2114 19.2485 69.2222 20.0601 cv
72.6675 22.4888 75.5815 28.147 73.0288 37.2944 cv
75.6255 33.1226 76.8472 24.3726 70.8472 19.1255 cv
cp
0 0 0 0 cmyk
f
68.3208 27.3062 mo
63.3657 39.0532 46.3867 42.3354 39.2397 42.2183 cv
39.3799 40.9507 39.5303 39.8032 40.1694 38.5024 cv
38.1616 39.9937 33.7529 41.6938 30.0273 42.5923 cv
30.4868 41.5376 30.8491 40.4019 31.1123 39.1646 cv
31.0913 39.0356 li
36.6997 37.9731 42.186 35.7358 44.0752 34.3862 cv
43.3687 35.4829 42.8364 36.7437 42.5688 38.1626 cv
48.6533 38.8647 62.9507 33.8501 68.1265 27.1528 cv
68.2124 27.2153 li
68.2549 27.2427 68.2876 27.269 68.3208 27.3062 cv
cp
.0797436 .400244 .584497 0 cmyk
f
72.2417 38.0454 mo
72.1177 44.8931 71.5879 54.7866 69.0386 59.6069 cv
65.7466 65.8071 59.1094 68.9985 54.3521 69.5845 cv
53.7759 69.6548 53.0288 69.7202 52.1382 69.7485 cv
57.395 68.4546 63.0581 65.7114 67.2871 59.7808 cv
70.3726 55.4653 70.8569 45.856 70.6221 29.5142 cv
71.4468 30.5669 72.0156 31.6812 72.2842 32.6812 cv
72.2769 33.9771 72.2808 35.854 72.2417 38.0454 cv
cp
0 0 0 0 cmyk
f
15.5942 51.146 mo
13.9302 52.6157 14.5767 55.7983 17.626 57.1587 cv
19.9766 58.2075 22.0737 57.1343 21.2271 54.3335 cv
20.1675 50.8296 17.3804 49.5679 15.5942 51.146 cv
cp
.0797436 .400244 .584497 0 cmyk
f
58.7163 55.4458 mo
59.4297 54.3745 60.8706 54.2534 60.709 55.271 cv
60.5469 56.2896 58.2729 56.1118 58.7163 55.4458 cv
cp
f
72.7656 32.5444 mo
72.2202 30.5503 70.7192 28.4829 68.8164 27.0532 cv
69.1416 26.603 69.4346 26.147 69.6714 25.6851 cv
69.7974 25.4399 69.6997 25.1382 69.4546 25.0122 cv
69.2061 24.8862 68.9072 24.9839 68.7817 25.23 cv
65.1719 32.2749 50.145 38.1167 43.1743 37.7134 cv
44.0967 33.979 47.064 31.3765 49.4111 30.2534 cv
49.6602 30.1343 49.7656 29.8364 49.6465 29.5874 cv
49.5273 29.3384 49.229 29.231 48.9795 29.3521 cv
47.1509 30.2271 45.127 31.8208 43.7056 34.0366 cv
40.9165 35.9683 31.7383 39.2954 24.9004 39.1187 cv
25.9414 34.9253 30.415 29.3882 34.1191 27.8364 cv
34.3735 27.728 34.4937 27.436 34.3867 27.1812 cv
34.2798 26.9282 33.9893 26.8081 33.7324 26.9126 cv
29.5332 28.6733 24.6113 34.9116 23.7949 39.5063 cv
23.77 39.647 23.8066 39.7915 23.895 39.9038 cv
23.9839 40.0171 24.1162 40.0854 24.2593 40.0933 cv
25.3345 40.1548 26.4756 40.1255 27.6479 40.0229 cv
28.5723 39.9419 29.5161 39.812 30.4629 39.6499 cv
29.2471 44.5835 26.2183 47.8872 23.7788 50.3394 cv
21.6016 45.9683 18.2007 44.1079 14.7861 45.4663 cv
12.9727 46.187 11.5146 47.8062 10.8853 49.7964 cv
10.6675 50.4858 10.5679 51.1978 10.5596 51.9194 cv
8.27637 50.5171 5.49951 48.4663 2.99316 44.939 cv
4.4917 43.6685 7.10449 42.3296 9.67334 41.5308 cv
9.85449 41.4741 9.98828 41.3208 10.0186 41.1323 cv
10.0488 40.9458 9.9707 40.7573 9.81592 40.646 cv
7.58496 39.0493 3.55029 35.9155 1.12451 32.5737 cv
3.14893 30.1021 7.9458 26.5513 14.4468 23.9116 cv
14.6436 23.8315 14.7686 23.6362 14.7578 23.4233 cv
14.7471 23.2104 14.604 23.0288 14.3994 22.9683 cv
11.5566 22.1333 8.1416 20.2827 6.04053 18.4663 cv
8.70117 16.2212 13.9307 13.5649 20.6206 12.979 cv
20.833 12.9604 21.0107 12.8091 21.0625 12.6011 cv
21.1138 12.394 21.0278 12.1772 20.8481 12.061 cv
19.5078 11.1948 17.2295 8.95557 15.6602 6.68408 cv
25.353 2.87158 42.0688 2.81104 51.9014 5.19678 cv
64.0454 8.14404 70.373 14.4331 70.3472 19.1226 cv
70.3467 19.2681 70.4087 19.4058 70.5181 19.5015 cv
76.1733 24.4507 75.0781 32.7153 72.7578 36.7515 cv
72.771 35.6235 72.7759 34.5991 72.7788 33.7495 cv
72.7842 32.6802 li
72.7837 32.6333 72.7778 32.5884 72.7656 32.5444 cv
cp
68.5938 59.3687 mo
65.4727 65.2485 59.1597 68.4888 54.2881 69.0913 cv
48.0933 69.856 33.8882 68.8726 24.4155 59.6655 cv
24.2314 59.4868 23.9404 59.4751 23.7432 59.6431 cv
22.7769 60.4644 21.1499 60.8042 19.3901 60.5493 cv
16.8003 60.1763 14.4473 58.6372 12.9346 56.3276 cv
11.6016 54.2915 11.2124 52.0786 11.8394 50.0981 cv
12.3784 48.3911 13.6187 47.0063 15.1553 46.394 cv
18.1875 45.1938 21.2593 47.106 23.1729 51.3989 cv
23.2397 51.5493 23.3765 51.6567 23.5381 51.687 cv
23.6978 51.7183 23.8657 51.6655 23.9829 51.5493 cv
26.6445 48.8921 30.2749 45.2583 31.5547 39.4507 cv
35.9629 38.5767 40.2773 37.0112 42.8291 35.6997 cv
42.5068 36.4419 42.2334 37.2222 42.0737 38.0698 cv
42.0483 38.2065 42.0806 38.3472 42.1631 38.4595 cv
42.2451 38.5708 42.3701 38.6431 42.5078 38.6597 cv
43.3252 38.7534 44.2734 38.7505 45.3164 38.6587 cv
52.2695 38.0503 63.418 33.519 68.1948 27.8374 cv
70.2261 29.3511 71.3784 31.3286 71.7832 32.7437 cv
71.7788 33.7456 li
71.7725 35.4966 71.7617 37.9497 71.6714 40.6782 cv
71.3364 40.1196 70.9009 39.937 70.5679 39.9087 cv
69.0903 39.7925 67.333 41.9937 65.1396 45.3511 cv
64.5903 46.1929 64.1934 46.3872 64.0581 46.3618 cv
63.9253 46.3433 63.708 46.0864 63.5435 45.5659 cv
63.4429 45.2485 63.1069 45.0737 62.79 45.1733 cv
62.4741 45.2739 62.2988 45.6108 62.3984 45.9263 cv
62.7861 47.1519 63.4258 47.4858 63.895 47.5503 cv
63.998 47.5649 64.1011 47.5679 64.2046 47.5581 cv
64.8569 47.5015 65.5083 46.9819 66.144 46.0083 cv
68.9805 41.6636 70.0728 41.0688 70.4663 41.104 cv
70.5752 41.1138 70.6719 41.3003 70.7197 41.4106 cv
70.8521 41.7153 71.2056 41.854 71.5093 41.7231 cv
71.5586 41.7017 71.5957 41.6665 71.6362 41.6343 cv
71.3872 47.9399 70.6787 55.439 68.5938 59.3687 cv
cp
71.3442 18.8979 mo
71.1792 12.9517 63.3369 6.94287 52.1372 4.2251 cv
41.957 1.75537 24.4893 1.87451 14.7104 5.99268 cv
14.5747 6.04932 14.4712 6.16357 14.4272 6.3042 cv
14.3838 6.44482 14.4043 6.59814 14.4839 6.72314 cv
15.8096 8.78955 17.7427 10.8589 19.2612 12.1196 cv
12.5732 12.98 7.41895 15.8169 4.95068 18.0942 cv
4.84863 18.188 4.79053 18.3198 4.78955 18.4585 cv
4.78906 18.5972 4.8457 18.73 4.94678 18.8247 cv
6.81104 20.5854 9.96924 22.438 12.8442 23.5034 cv
7.31543 25.9302 2.29395 29.3608 .101563 32.2554 cv
-.0288086 32.4282 -.0341797 32.6646 .0893555 32.8423 cv
2.31445 36.0503 6.01172 39.0806 8.44629 40.8862 cv
5.83691 41.8149 3.37061 43.186 1.98535 44.4985 cv
1.80713 44.6685 1.77832 44.9409 1.91699 45.145 cv
4.81445 49.3687 8.09521 51.6353 10.6382 53.1382 cv
10.8232 54.4009 11.3081 55.6685 12.0981 56.8755 cv
13.7681 59.4253 16.3735 61.1255 19.2476 61.5396 cv
21.0884 61.8071 22.8364 61.4858 24.0283 60.6792 cv
35.1074 71.1567 50.5815 70.4272 53.8247 70.144 cv
54.1436 70.1157 54.3442 70.0923 54.4111 70.0845 cv
59.54 69.4497 66.1875 66.0347 69.4766 59.8384 cv
72.0225 55.0415 72.5913 45.3296 72.7295 38.4946 cv
72.793 38.4624 72.8511 38.4194 72.8975 38.3599 cv
75.8794 34.5269 77.8677 24.8003 71.3442 18.8979 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
58.022 59.9263 mo
52.4209 62.4614 46.0654 60.4897 44.2671 57.895 cv
44.3569 57.8813 44.439 57.8774 44.5034 57.8872 cv
44.7754 57.9272 45.0327 57.7446 45.0762 57.4712 cv
45.1196 57.1987 44.9336 56.9429 44.6611 56.8989 cv
44.0806 56.8071 43.3057 57.0698 42.8169 57.5259 cv
42.48 57.8384 42.3125 58.2183 42.3457 58.5923 cv
42.3696 58.8677 42.6118 59.0708 42.8872 59.0474 cv
43.1626 59.0229 43.3657 58.7808 43.3418 58.5054 cv
43.3394 58.48 43.3564 58.438 43.3867 58.3892 cv
44.9907 60.8276 49.2988 62.4292 53.7715 62.0376 cv
55.3428 61.8999 56.9346 61.5171 58.4346 60.8374 cv
58.686 60.7231 58.7979 60.4272 58.6836 60.1753 cv
58.5703 59.9243 58.2754 59.812 58.022 59.9263 cv
cp
f
17.0093 49.9878 mo
16.9751 49.9888 16.9409 49.9917 16.9077 49.9946 cv
15.5679 50.1118 14.5435 51.0044 14.4004 52.1929 cv
14.3667 52.4663 14.5625 52.7163 14.8364 52.7485 cv
15.1099 52.7876 15.3599 52.5874 15.3931 52.312 cv
15.481 51.5825 16.1689 51.0093 17.0664 50.9858 cv
18.376 50.9097 20.1699 51.9321 20.9194 55.062 cv
20.9785 55.3062 21.2065 55.4653 21.4492 55.4438 cv
21.4736 55.4419 21.498 55.437 21.5225 55.4312 cv
21.791 55.3677 21.9565 55.0972 21.8926 54.8296 cv
20.999 51.0991 18.7031 49.8892 17.0093 49.9878 cv
cp
f
47.4541 45.813 mo
49.9736 48.3862 51.356 49.3286 52.4863 49.23 cv
52.5166 49.2271 52.5469 49.2231 52.5767 49.2202 cv
53.5322 49.0884 54.0674 48.2446 54.5747 47.3169 cv
54.7344 47.0259 54.6274 46.6616 54.3369 46.5024 cv
54.0454 46.3433 53.6816 46.4507 53.5225 46.7397 cv
53.1069 47.5005 52.7759 47.981 52.4126 48.0317 cv
51.4058 48.1284 49.0845 45.7632 48.311 44.9741 cv
43.9492 40.521 39.4077 41.5005 36.8438 43.6938 cv
36.5918 43.9087 36.5625 44.2886 36.7778 44.5396 cv
36.9932 44.7915 37.3726 44.8198 37.6235 44.606 cv
39.7949 42.7505 43.6719 41.9517 47.4541 45.813 cv
cp
f
30.4624 39.6528 mo
30.188 40.7612 29.8169 41.7974 29.3887 42.7485 cv
27.6841 43.1177 26.1641 43.3022 25.1514 43.1997 cv
25.2207 42.5005 25.5601 41.3267 26.1958 40.106 cv
26.6768 40.0942 27.1558 40.063 27.644 40.02 cv
28.5703 39.939 29.5132 39.8159 30.4624 39.6528 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
1.12402 32.5737 mo
4.9502 34.0854 9.05273 34.2788 11.9473 34.3169 cv
13.7329 31.7808 16.2651 29.1704 21.04 27.8696 cv
18.3882 30.4907 17.9351 32.5376 17.6221 36.0786 cv
21.3638 29.9692 26.769 28.3013 32.4653 27.5522 cv
28.5947 29.8892 24.5269 35.3745 23.7944 39.5034 cv
23.7666 39.646 23.8096 39.7935 23.8994 39.9067 cv
23.98 40.02 24.1162 40.0874 24.2573 40.0952 cv
24.8828 40.1313 25.5356 40.1343 26.1958 40.106 cv
25.5601 41.3267 25.2207 42.5005 25.1514 43.1997 cv
26.1641 43.3022 27.6841 43.1177 29.3887 42.7485 cv
27.9087 46.0298 25.6597 48.4351 23.7783 50.3364 cv
21.5996 45.9692 18.2041 44.1079 14.7891 45.4604 cv
12.9761 46.1919 11.5112 47.8062 10.8823 49.7983 cv
10.6714 50.4888 10.5635 51.2017 10.5566 51.9243 cv
8.27539 50.5181 5.49512 48.4624 2.98877 44.937 cv
4.49365 43.6714 7.10693 42.3286 9.67725 41.5317 cv
9.85303 41.4761 9.99023 41.3228 10.0137 41.1313 cv
10.0474 40.9478 9.9707 40.7534 9.8208 40.646 cv
7.58301 39.0444 3.5542 35.9146 1.12402 32.5737 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
29.2339 103.105 mo
30.2842 104.195 31.2939 105.286 31.104 106.215 cv
30.854 107.465 30.2739 108.715 28.354 108.885 cv
27.354 110.385 22.604 113.015 19.854 111.885 cv
17.104 110.755 15.104 106.135 14.4839 101.635 cv
14.4839 101.625 li
16.2441 100.385 18.644 98.0356 19.5942 96.9048 cv
19.7241 97.0151 li
22.2241 96.8853 25.7241 96.2554 27.4839 97.6353 cv
29.2241 99.0151 31.604 101.255 29.854 103.015 cv
29.2339 103.105 li
cp
0 .167361 .439734 0 cmyk
f
14.4839 101.625 mo
14.354 101.715 14.2241 101.805 14.104 101.885 cv
12.2739 100.385 6.56396 93.1851 6.72412 91.1353 cv
6.98389 87.9653 14.2739 82.1353 16.7739 80.1353 cv
16.9038 80.0454 li
18.564 82.4351 20.7139 84.645 22.604 85.9751 cv
22.4839 86.1353 li
20.604 87.6353 17.9839 90.0552 16.4839 91.3853 cv
16.374 91.4751 li
17.7139 93.0249 18.9238 94.9849 19.9839 96.3853 cv
19.9341 96.4956 19.7939 96.6753 19.5942 96.9048 cv
18.644 98.0356 16.2441 100.385 14.4839 101.625 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
22.604 85.9751 mo
22.4839 86.1353 li
21.8242 86.6655 21.0742 87.2954 20.314 87.9653 cv
17.814 86.8354 15.2539 84.7349 13.7939 82.5757 cv
14.9941 81.5552 16.0742 80.6948 16.7739 80.1353 cv
16.9038 80.0454 li
18.564 82.4351 20.7139 84.645 22.604 85.9751 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
31.7241 71.8853 mo
35.7241 74.8853 28.354 82.6353 23.854 86.7554 cv
23.4541 86.5454 23.0342 86.2856 22.604 85.9751 cv
20.7139 84.645 18.564 82.4351 16.9038 80.0454 cv
16.4238 79.3657 15.9839 78.6655 15.604 77.9653 cv
19.6641 74.5356 28.144 69.1948 31.7241 71.8853 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
28.3105 108.387 mo
28.1592 108.4 28.022 108.482 27.938 108.608 cv
27.0513 109.938 22.5225 112.435 20.0435 111.422 cv
17.7793 110.497 15.7358 106.583 15.0195 101.854 cv
16.6509 100.651 18.6685 98.7046 19.73 97.5063 cv
19.7383 97.5063 19.7456 97.5103 19.7539 97.5093 cv
20.2188 97.4868 20.7178 97.4458 21.2339 97.4048 cv
23.4214 97.2271 25.8975 97.0278 27.1699 98.0288 cv
28.9692 99.4419 29.9092 100.629 29.9648 101.557 cv
29.9888 101.96 29.8369 102.32 29.5005 102.657 cv
29.4985 102.659 29.498 102.662 29.4961 102.664 cv
29.4839 102.651 29.4722 102.639 29.4604 102.626 cv
29.0737 102.227 28.6875 101.83 28.3633 101.44 cv
28.187 101.23 27.8721 101.199 27.6587 101.376 cv
27.4468 101.553 27.418 101.869 27.5947 102.081 cv
27.9341 102.488 28.3374 102.905 28.7422 103.323 cv
29.6865 104.298 30.7568 105.404 30.6138 106.121 cv
30.3149 107.614 29.6479 108.271 28.3105 108.387 cv
cp
7.22754 91.1743 mo
7.37939 89.2466 10.6035 85.7397 16.7983 80.7563 cv
18.2827 82.7983 20.1025 84.6978 21.833 86.02 cv
20.4287 87.1685 18.7266 88.6948 17.3286 89.9517 cv
16.417 90.769 li
15.397 89.6597 14.2954 88.7974 13.0898 88.5229 cv
12.8218 88.4565 12.5522 88.6294 12.4912 88.8999 cv
12.4302 89.1685 12.5991 89.437 12.8682 89.4976 cv
14.8843 89.9556 16.8315 92.7642 18.396 95.02 cv
18.7319 95.5044 19.0557 95.9712 19.3662 96.397 cv
18.665 97.2788 16.063 99.9155 14.1436 101.256 cv
12.0356 99.314 7.09863 92.8071 7.22754 91.1743 cv
cp
29.2197 71.6528 mo
30.126 71.6528 30.8691 71.8657 31.4292 72.2856 cv
32.0288 72.7349 32.3379 73.314 32.3745 74.0542 cv
32.499 76.5796 29.3706 80.9771 23.7798 86.1489 cv
21.2754 84.7026 18.084 81.2896 16.2432 78.0864 cv
19.126 75.7173 25.124 71.6528 29.2197 71.6528 cv
cp
30.2075 103.364 mo
30.7505 102.821 31.0044 102.193 30.9629 101.498 cv
30.8887 100.254 29.8501 98.8628 27.7881 97.2417 cv
26.2051 95.9985 23.5215 96.2153 21.1533 96.4077 cv
20.9097 96.4272 20.689 96.4399 20.4546 96.4575 cv
20.4741 96.3276 20.4604 96.1938 20.3789 96.0854 cv
20.0112 95.5942 19.6235 95.0356 19.2178 94.4507 cv
18.5405 93.4741 17.8271 92.4507 17.0698 91.5269 cv
17.9976 90.6958 li
19.4541 89.3853 21.2515 87.77 22.6694 86.6265 cv
22.9932 86.8413 23.314 87.0425 23.6221 87.2036 cv
23.6953 87.2417 23.7749 87.2603 23.854 87.2603 cv
23.9761 87.2603 24.0977 87.2153 24.1919 87.1284 cv
28.4814 83.1968 33.5566 77.728 33.373 74.0044 cv
33.3218 72.9634 32.8696 72.1157 32.0288 71.4849 cv
31.2925 70.9331 30.3472 70.6528 29.2197 70.6528 cv
24.6777 70.6528 18.1162 75.188 15.2813 77.5864 cv
15.1001 77.7397 15.0513 77.9995 15.165 78.2075 cv
15.4775 78.7808 15.8418 79.3569 16.2266 79.9312 cv
11.9785 83.3423 6.46582 88.1177 6.23047 91.0962 cv
6.04395 93.4585 12.0635 100.862 13.7871 102.272 cv
13.8755 102.344 13.9824 102.38 14.0908 102.383 cv
14.8032 106.597 16.7446 111.153 19.6646 112.348 cv
20.2021 112.568 20.7944 112.664 21.4116 112.664 cv
24.2246 112.664 27.5605 110.673 28.6255 109.358 cv
31.0518 109.029 31.458 106.998 31.5942 106.316 cv
31.7896 105.34 31.0669 104.353 30.1777 103.383 cv
30.187 103.375 30.1987 103.373 30.2075 103.364 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
235.074 152.354 mo
235.494 153.083 235.773 153.963 235.954 154.843 cv
235.914 154.854 li
234.414 147.934 222.244 150.104 221.244 157.024 cv
221.183 157.173 li
220.353 156.824 219.583 156.383 218.914 155.854 cv
218.554 155.814 li
218.964 151.944 220.103 148.814 221.244 145.973 cv
221.384 145.624 221.554 145.223 221.744 144.774 cv
221.914 144.854 li
223.933 147.753 230.304 147.874 232.244 146.064 cv
232.324 146.074 li
232.304 146.244 232.284 146.394 232.284 146.513 cv
232.673 148.614 233.414 149.434 235.074 152.354 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
266.994 148.184 mo
265.494 148.513 263.134 150.934 263.134 154.263 cv
263.114 154.593 li
257.034 154.324 250.364 153.574 248.034 152.973 cv
247.884 152.954 li
248.534 149.394 250.273 146.843 251.494 144.124 cv
251.503 144.104 251.513 144.083 251.523 144.064 cv
251.664 144.124 li
252.414 146.624 258.433 147.253 261.183 145.503 cv
261.204 145.503 li
261.173 145.593 261.164 145.654 261.164 145.684 cv
262.874 146.934 265.023 147.543 267.003 148.164 cv
266.994 148.184 li
cp
.823453 .403418 .425788 .104005 cmyk
f
263.114 154.593 mo
267.074 154.763 270.793 154.734 272.904 154.343 cv
272.974 155.333 272.904 156.194 272.824 156.513 cv
268.664 157.184 250.304 156.593 247.634 155.263 cv
247.664 154.444 247.753 153.673 247.884 152.954 cv
248.034 152.973 li
250.364 153.574 257.034 154.324 263.114 154.593 cv
cp
.181369 .0870985 .113436 0 cmyk
f
267.003 148.164 mo
269.234 148.854 271.244 149.553 272.164 151.184 cv
272.644 152.043 272.853 153.274 272.904 154.343 cv
270.793 154.734 267.074 154.763 263.114 154.593 cv
263.134 154.263 li
263.134 150.934 265.494 148.513 266.994 148.184 cv
267.003 148.164 li
cp
f
262.933 139.713 mo
262.124 142.374 261.364 144.814 261.204 145.503 cv
261.183 145.503 li
258.433 147.253 252.414 146.624 251.664 144.124 cv
251.523 144.064 li
252.484 141.914 253.394 139.954 254.134 137.994 cv
254.244 138.034 li
255.574 140.034 260.744 140.534 262.824 139.684 cv
262.933 139.713 li
cp
f
236.224 156.673 mo
236.314 157.723 236.284 158.534 236.244 158.684 cv
234.914 161.684 221.744 162.104 218.414 157.854 cv
218.433 157.154 218.484 156.463 218.554 155.814 cv
218.914 155.854 li
219.583 156.383 220.353 156.824 221.183 157.173 cv
226.394 159.394 234.173 158.414 236.074 156.684 cv
236.224 156.673 li
cp
0 0 0 0 cmyk
f
235.914 154.854 mo
235.954 154.843 li
236.093 155.473 236.173 156.114 236.224 156.673 cv
236.074 156.684 li
234.173 158.414 226.394 159.394 221.183 157.173 cv
221.244 157.024 li
222.244 150.104 234.414 147.934 235.914 154.854 cv
cp
f
233.994 140.434 mo
234.103 140.473 li
233.333 142.644 232.523 144.934 232.324 146.074 cv
232.244 146.064 li
230.304 147.874 223.933 147.753 221.914 144.854 cv
221.744 144.774 li
222.404 143.244 223.353 141.194 224.273 138.934 cv
224.324 138.954 li
225.824 141.124 231.664 141.684 233.994 140.434 cv
cp
f
255.744 127.854 mo
255.744 127.833 li
258.494 127.723 263.234 127.234 265.293 126.223 cv
265.324 126.284 li
265.664 128.534 265.574 130.723 264.664 133.954 cv
264.214 135.553 263.554 137.694 262.933 139.713 cv
262.824 139.684 li
260.744 140.534 255.574 140.034 254.244 138.034 cv
254.134 137.994 li
255.293 134.883 256.003 131.774 255.744 127.854 cv
cp
.0797436 .400244 .584497 0 cmyk
f
237.523 128.904 mo
237.554 129.003 li
237.304 132.253 236.494 133.503 235.304 137.064 cv
234.994 138.003 234.554 139.213 234.103 140.473 cv
233.994 140.434 li
231.664 141.684 225.824 141.124 224.324 138.954 cv
224.273 138.934 li
225.683 135.513 227.054 131.633 227.324 128.524 cv
227.333 128.494 li
229.964 129.263 234.253 129.874 237.523 128.904 cv
cp
0 .167361 .439734 0 cmyk
f
245.994 102.593 mo
245.994 105.364 245.244 112.343 243.914 114.564 cv
243.914 114.734 li
242.134 114.734 239.994 114.723 239.994 114.723 cv
241.364 112.104 242.244 105.053 242.164 102.673 cv
242.164 102.473 li
243.484 102.473 244.763 102.473 245.994 102.473 cv
245.994 102.593 li
cp
.498634 .76672 .682032 .673518 cmyk
f
266.134 125.593 mo
265.964 125.824 265.673 126.034 265.293 126.223 cv
263.234 127.234 258.494 127.723 255.744 127.833 cv
254.793 127.864 254.083 127.854 253.804 127.803 cv
252.343 123.734 246.974 116.354 244.173 114.734 cv
244.083 114.734 244.003 114.734 243.914 114.734 cv
243.914 114.564 li
245.244 112.343 245.994 105.364 245.994 102.593 cv
245.994 102.473 li
250.173 102.463 253.624 102.423 254.914 102.354 cv
255.324 107.204 li
256.833 109.083 263.694 115.494 266.134 125.593 cv
cp
f
242.164 102.673 mo
242.244 105.053 241.364 112.104 239.994 114.723 cv
239.244 119.553 239.494 123.963 238.494 128.564 cv
238.183 128.694 237.864 128.814 237.523 128.904 cv
234.253 129.874 229.964 129.263 227.333 128.494 cv
226.694 128.314 226.154 128.114 225.744 127.923 cv
226.914 117.944 226.244 110.604 228.744 102.354 cv
232.523 102.423 237.513 102.463 242.164 102.473 cv
242.164 102.673 li
cp
.433509 .775906 .674159 .526574 cmyk
f
239.994 114.723 mo
239.984 114.793 239.974 114.874 239.964 114.944 cv
239.853 114.923 li
235.784 111.763 229.714 112.234 226.884 112.704 cv
227.183 109.234 227.673 105.883 228.744 102.354 cv
232.523 102.423 237.513 102.463 242.164 102.473 cv
242.164 102.673 li
242.244 105.053 241.364 112.104 239.994 114.723 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
237.554 129.003 mo
237.484 129.894 237.374 130.633 237.224 131.314 cv
234.673 132.524 230.173 132.333 226.984 130.734 cv
227.144 129.963 227.263 129.223 227.324 128.524 cv
227.333 128.494 li
229.964 129.263 234.253 129.874 237.523 128.904 cv
237.554 129.003 li
cp
.0797436 .400244 .584497 0 cmyk
f
272.391 156.071 mo
267.66 156.663 251.363 156.03 248.152 154.935 cv
248.179 154.453 248.232 153.994 248.298 153.545 cv
251.63 154.302 260.812 155.192 267.441 155.192 cv
269.404 155.192 271.139 155.113 272.433 154.93 cv
272.437 155.389 272.42 155.794 272.391 156.071 cv
cp
250.849 146.579 mo
251.11 146.067 251.363 145.559 251.607 145.05 cv
252.033 145.613 252.701 146.083 253.614 146.423 cv
254.586 146.786 255.826 146.994 257.087 146.994 cv
258.47 146.994 259.863 146.725 260.984 146.157 cv
262.394 147.163 264.029 147.75 265.662 148.265 cv
264.187 149.276 262.712 151.433 262.644 154.076 cv
257.005 153.805 250.976 153.143 248.473 152.564 cv
248.968 150.277 249.919 148.405 250.849 146.579 cv
cp
254.316 138.869 mo
255.593 140.026 258.055 140.585 260.187 140.585 cv
260.923 140.585 261.611 140.513 262.205 140.381 cv
262.181 140.46 262.156 140.542 262.131 140.622 cv
261.303 143.315 260.928 144.552 260.769 145.152 cv
259.099 146.121 256.098 146.282 253.962 145.487 cv
252.968 145.117 252.32 144.581 252.14 143.977 cv
252.136 143.964 252.126 143.956 252.122 143.944 cv
252.457 143.201 li
253.125 141.719 253.755 140.296 254.316 138.869 cv
cp
256.251 128.299 mo
258.557 128.18 262.56 127.813 264.9 126.92 cv
265.15 129.111 264.935 131.157 264.179 133.818 cv
263.751 135.326 263.145 137.319 262.554 139.247 cv
260.617 139.976 255.951 139.497 254.717 137.829 cv
255.767 134.926 256.416 131.922 256.251 128.299 cv
cp
254.167 127.335 mo
252.503 123.05 247.393 116.157 244.562 114.392 cv
245.761 111.851 246.433 105.903 246.488 102.969 cv
250.185 102.958 253.031 102.924 254.454 102.875 cv
254.83 107.248 li
254.837 107.346 254.875 107.44 254.937 107.517 cv
255.156 107.792 255.487 108.161 255.9 108.622 cv
258.369 111.372 263.479 117.066 265.582 125.458 cv
264.255 126.635 257.959 127.349 254.751 127.349 cv
254.486 127.349 254.298 127.343 254.167 127.335 cv
cp
238.894 120.873 mo
238.726 123.379 238.568 125.751 238.06 128.2 cv
236.856 128.667 235.371 128.904 233.64 128.904 cv
230.873 128.904 227.897 128.261 226.283 127.611 cv
226.664 124.246 226.839 121.212 227.009 118.276 cv
227.328 112.782 227.603 108.019 229.115 102.861 cv
232.527 102.921 237.067 102.96 241.664 102.97 cv
241.681 105.635 240.8 112.111 239.551 114.488 cv
239.543 114.502 239.544 114.518 239.539 114.533 cv
239.523 114.569 239.505 114.604 239.5 114.644 cv
239.167 116.792 239.028 118.867 238.894 120.873 cv
cp
235.711 134.429 mo
235.448 135.142 235.154 135.939 234.832 136.904 cv
234.575 137.674 234.23 138.637 233.867 139.654 cv
233.823 139.775 233.784 139.885 233.742 140.003 cv
231.65 141.11 226.355 140.586 224.865 138.816 cv
226.166 135.621 227.38 132.105 227.746 129.125 cv
229.438 129.569 231.57 129.904 233.64 129.904 cv
234.879 129.904 235.994 129.774 237 129.544 cv
236.792 131.487 236.353 132.695 235.711 134.429 cv
cp
231.917 145.688 mo
231.912 145.692 231.906 145.693 231.902 145.697 cv
231.037 146.507 228.972 146.917 226.88 146.701 cv
224.806 146.483 223.167 145.723 222.363 144.619 cv
222.517 144.265 222.681 143.895 222.858 143.497 cv
223.343 142.4 223.896 141.148 224.452 139.822 cv
225.781 140.985 228.291 141.597 230.576 141.597 cv
231.57 141.597 232.512 141.474 233.303 141.239 cv
232.632 143.141 232.132 144.662 231.917 145.688 cv
cp
233.662 150.928 mo
233.695 150.985 233.735 151.051 233.769 151.11 cv
232.634 150.439 231.216 150.081 229.585 150.13 cv
225.912 150.258 221.721 152.515 220.85 156.458 cv
220.264 156.172 219.709 155.849 219.222 155.462 cv
219.189 155.436 219.151 155.424 219.115 155.407 cv
219.557 151.812 220.622 148.873 221.708 146.158 cv
221.771 146 221.843 145.828 221.918 145.647 cv
222.962 146.74 224.689 147.475 226.776 147.695 cv
227.2 147.74 227.619 147.761 228.028 147.761 cv
229.537 147.761 230.904 147.463 231.865 146.933 cv
232.188 148.444 232.728 149.362 233.662 150.928 cv
cp
235.422 154.959 mo
235.438 155.033 235.471 155.096 235.513 155.152 cv
235.594 155.565 235.654 155.969 235.697 156.349 cv
234.021 157.791 226.812 158.783 221.787 156.864 cv
222.451 153.295 226.273 151.247 229.621 151.13 cv
232.71 151 234.879 152.453 235.422 154.959 cv
cp
235.787 158.478 mo
235.418 159.309 233.648 160.017 231.166 160.327 cv
226.693 160.885 220.958 160.043 218.917 157.684 cv
218.934 157.286 218.969 156.905 219 156.522 cv
221.47 158.268 225.051 158.97 228.376 158.97 cv
231.442 158.97 234.271 158.383 235.788 157.5 cv
235.81 158.013 235.801 158.378 235.787 158.478 cv
cp
245.488 102.971 mo
245.427 105.986 244.677 112.195 243.521 114.23 cv
242.507 114.229 241.453 114.225 240.762 114.223 cv
241.934 111.284 242.675 105.494 242.664 102.972 cv
243.064 102.972 243.466 102.973 243.867 102.973 cv
244.423 102.973 244.96 102.972 245.488 102.971 cv
cp
271.725 151.427 mo
272.111 152.106 272.301 153.043 272.383 153.927 cv
270.35 154.232 267.124 154.258 263.648 154.12 cv
263.716 151.088 265.828 149.02 267.032 148.696 cv
269.068 149.333 270.918 150.005 271.725 151.427 cv
cp
272.595 150.933 mo
271.514 149.029 269.191 148.313 266.732 147.554 cv
264.991 147.017 263.193 146.463 261.718 145.462 cv
261.91 144.745 262.507 142.803 263.087 140.916 cv
263.8 138.598 264.607 135.972 265.142 134.091 cv
265.975 131.156 266.181 128.923 265.852 126.462 cv
266.14 126.286 266.384 126.098 266.535 125.888 cv
266.621 125.77 266.65 125.62 266.616 125.478 cv
264.496 116.701 258.994 110.571 256.645 107.954 cv
256.302 107.573 256.019 107.256 255.812 107.008 cv
255.409 102.311 li
255.386 102.042 255.152 101.812 254.884 101.855 cv
253.48 101.929 249.361 101.973 243.867 101.973 cv
238.379 101.973 232.73 101.928 228.753 101.854 cv
228.544 101.836 228.33 101.995 228.265 102.208 cv
226.625 107.621 226.339 112.532 226.011 118.218 cv
225.835 121.248 225.654 124.38 225.247 127.866 cv
225.221 128.081 225.337 128.287 225.535 128.377 cv
225.876 128.536 226.306 128.692 226.777 128.844 cv
226.283 133.274 223.687 139.156 221.943 143.091 cv
221.468 144.164 221.06 145.085 220.779 145.787 cv
219.421 149.18 218.081 152.907 217.912 157.837 cv
217.908 157.956 217.945 158.071 218.017 158.164 cv
219.82 160.46 224.253 161.493 228.404 161.493 cv
229.394 161.493 230.371 161.433 231.289 161.319 cv
233.001 161.106 235.982 160.505 236.729 158.801 cv
236.826 158.418 236.905 154.544 235.511 152.106 cv
235.136 151.45 234.808 150.899 234.521 150.417 cv
233.548 148.786 233.06 147.967 232.787 146.512 cv
232.787 145.634 233.907 142.505 234.808 139.991 cv
235.174 138.966 235.521 137.997 235.781 137.22 cv
236.098 136.267 236.389 135.48 236.65 134.776 cv
237.333 132.923 237.832 131.56 238.033 129.255 cv
238.255 129.18 238.484 129.111 238.69 129.023 cv
238.839 128.959 238.948 128.828 238.982 128.669 cv
239.55 126.057 239.716 123.571 239.892 120.939 cv
240.015 119.088 240.142 117.178 240.424 115.222 cv
241.162 115.224 242.708 115.23 244.031 115.23 cv
246.73 116.904 251.886 123.944 253.337 127.97 cv
253.397 128.136 253.541 128.258 253.714 128.292 cv
253.917 128.33 254.255 128.349 254.751 128.349 cv
254.876 128.349 255.054 128.345 255.253 128.34 cv
255.511 133.942 253.763 137.87 251.544 142.79 cv
251.037 143.917 li
250.706 144.657 250.334 145.385 249.958 146.125 cv
248.636 148.721 247.269 151.406 247.136 155.247 cv
247.129 155.442 247.238 155.624 247.412 155.711 cv
249.445 156.728 259.361 157.295 266.429 157.295 cv
269.293 157.295 271.691 157.203 272.906 157.008 cv
273.103 156.976 273.262 156.831 273.311 156.636 cv
273.492 155.92 273.621 152.742 272.595 150.933 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
268.005 94.3921 mo
267.761 96.5591 267.359 100.243 265.751 100.018 cv
265.46 99.9741 265.21 99.8638 265.008 99.6841 cv
264.925 99.7983 li
263.96 100.097 263.268 102.37 264.123 103.942 cv
263.884 104.467 263.83 105.622 264.426 106.547 cv
264.371 106.577 li
262.154 106.28 259.326 104.725 258.671 103.444 cv
259.251 101.1 259.483 97.1206 259.372 96.0044 cv
259.541 95.9868 li
261.181 93.3071 263.705 91.6382 265.15 91.7974 cv
266.441 91.9517 267.894 92.1606 268.022 93.7505 cv
268.042 93.9399 268.037 94.1528 268.005 94.3921 cv
cp
.0797436 .400244 .584497 0 cmyk
f
268.21 93.73 mo
270.623 93.7925 272.266 94.3042 273.036 95.354 cv
273.7 96.2583 273.712 98.0698 272.583 98.9839 cv
273.552 100.194 273.359 107.014 268.632 107.796 cv
266.265 108.192 265.015 107.484 264.426 106.547 cv
263.83 105.622 263.884 104.467 264.123 103.942 cv
263.268 102.37 263.96 100.097 264.925 99.7983 cv
265.008 99.6841 li
265.21 99.8638 265.46 99.9741 265.751 100.018 cv
267.359 100.243 267.761 96.5591 268.005 94.3921 cv
268.037 94.1528 268.042 93.9399 268.022 93.7505 cv
268.21 93.73 li
cp
f
251.967 69.6431 mo
256.951 69.2544 256.537 79.9409 255.896 86.0142 cv
255.457 86.1147 254.964 86.2065 254.437 86.2622 cv
252.134 86.4956 249.056 86.2583 246.24 85.5737 cv
245.427 85.3813 244.63 85.1479 243.886 84.8735 cv
244.667 79.6079 247.496 69.9976 251.967 69.6431 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
253.4 94.4966 mo
255.431 94.772 257.638 95.436 259.347 95.7954 cv
259.355 95.8442 259.367 95.9136 259.372 96.0044 cv
259.483 97.1206 259.251 101.1 258.671 103.444 cv
258.641 103.571 258.61 103.687 258.578 103.803 cv
256.21 103.886 247.17 102.262 245.939 100.619 cv
244.035 98.0718 245.643 88.8735 246.203 85.7212 cv
246.24 85.5737 li
249.056 86.2583 252.134 86.4956 254.437 86.2622 cv
254.449 86.4517 li
254.035 88.8198 253.661 92.3657 253.417 94.3521 cv
253.4 94.4966 li
cp
.498634 .76672 .682032 .673518 cmyk
f
272.267 98.6011 mo
272.056 98.7739 272.023 99.0854 272.193 99.2993 cv
272.587 99.7935 272.82 102.092 272.004 104.216 cv
271.534 105.442 270.552 106.973 268.552 107.303 cv
268.546 107.304 268.541 107.305 268.535 107.306 cv
266.836 107.583 265.597 107.281 264.951 106.432 cv
264.333 105.622 264.408 104.531 264.582 104.153 cv
264.648 104.008 264.642 103.842 264.566 103.704 cv
264.105 102.859 264.189 101.759 264.476 101.044 cv
264.66 100.589 264.884 100.366 265.041 100.296 cv
265.238 100.399 265.448 100.478 265.678 100.511 cv
265.826 100.531 265.971 100.531 266.113 100.507 cv
266.351 100.468 266.578 100.368 266.781 100.208 cv
267.863 99.3687 268.207 97.0356 268.499 94.4458 cv
268.506 94.3755 268.497 94.3169 268.5 94.2476 cv
270.617 94.3403 272.011 94.8081 272.632 95.6519 cv
273.118 96.3091 273.22 97.8208 272.267 98.6011 cv
cp
259.207 103.345 mo
259.707 101.146 259.947 97.814 259.896 96.3228 cv
259.919 96.2964 259.947 96.2778 259.964 96.2476 cv
261.515 93.7144 263.865 92.1577 265.092 92.2993 cv
265.806 92.3804 266.486 92.4761 266.944 92.7651 cv
267.265 92.9673 267.618 93.3276 267.498 94.4028 cv
267.326 95.9272 267.006 98.7671 266.167 99.4194 cv
266.054 99.5063 265.945 99.5386 265.816 99.521 cv
265.494 99.4751 265.242 99.2993 265.044 98.9829 cv
264.541 98.1704 264.529 96.6411 265.015 95.1763 cv
265.102 94.9136 264.96 94.6304 264.698 94.5425 cv
264.434 94.4585 264.154 94.5981 264.066 94.8599 cv
263.482 96.6187 263.533 98.4429 264.195 99.5103 cv
264.219 99.5493 264.25 99.5806 264.277 99.6177 cv
263.988 99.8599 263.734 100.209 263.548 100.671 cv
263.22 101.486 263.048 102.811 263.583 103.973 cv
263.431 104.468 263.398 105.195 263.605 105.921 cv
261.724 105.44 259.792 104.238 259.207 103.345 cv
cp
246.336 100.315 mo
245.175 98.7671 245.276 94.0073 246.628 86.1763 cv
249.071 86.7222 251.692 86.9536 253.882 86.8013 cv
253.587 88.5933 253.321 90.8726 253.105 92.7378 cv
252.962 93.936 li
251.464 93.7778 250.068 93.8579 248.982 94.4487 cv
248.739 94.5806 248.65 94.8843 248.782 95.1265 cv
248.914 95.3696 249.218 95.4624 249.459 95.3267 cv
251.277 94.3374 254.593 95.1577 257.259 95.8169 cv
257.832 95.9575 258.382 96.0942 258.896 96.2085 cv
258.953 97.3208 258.749 100.938 258.21 103.219 cv
258.197 103.249 258.185 103.275 258.177 103.306 cv
255.301 103.237 247.318 101.624 246.336 100.315 cv
cp
252.005 70.1421 mo
252.753 70.0835 253.367 70.313 253.884 70.8442 cv
255.646 72.6558 256.208 78.0239 255.433 85.6011 cv
252.562 86.1724 247.913 85.7095 244.447 84.5347 cv
245.33 79.0308 248.082 70.4565 252.005 70.1421 cv
cp
273.438 95.0581 mo
272.604 93.9263 270.955 93.3345 268.416 93.2437 cv
268.27 92.6831 267.971 92.23 267.478 91.9194 cv
266.839 91.5171 266.038 91.3989 265.205 91.3062 cv
263.532 91.1196 261.059 92.8462 259.406 95.2954 cv
258.818 95.1714 258.174 95.0122 257.5 94.8462 cv
256.345 94.561 255.132 94.2651 253.954 94.0728 cv
254.097 92.854 li
254.326 90.9009 254.607 88.4907 254.915 86.689 cv
255.023 86.6743 255.141 86.6675 255.246 86.6499 cv
255.515 86.606 255.771 86.5552 256.011 86.4956 cv
256.216 86.4468 256.367 86.2729 256.39 86.064 cv
257.008 80.2769 257.2 72.8179 254.601 70.147 cv
253.875 69.3999 252.974 69.063 251.927 69.146 cv
246.757 69.5542 244.006 80.645 243.395 84.7964 cv
243.361 85.0308 243.496 85.2583 243.718 85.3394 cv
244.332 85.563 244.986 85.7534 245.655 85.9302 cv
244.722 91.2974 243.744 98.5239 245.537 100.915 cv
246.958 102.811 256.369 104.385 258.595 104.304 cv
258.617 104.303 258.637 104.301 258.658 104.298 cv
258.664 104.297 258.667 104.292 258.673 104.291 cv
259.777 105.52 262.14 106.741 264.166 107.05 cv
264.787 107.857 266.074 108.721 268.695 108.293 cv
268.702 108.292 268.708 108.292 268.715 108.291 cv
271.182 107.882 272.373 106.044 272.938 104.575 cv
273.712 102.559 273.703 100.223 273.208 99.0796 cv
274.231 97.9419 274.208 96.1021 273.438 95.0581 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
255.876 71.897 mo
254.896 72.6206 253.6 73.1655 252.479 73.5962 cv
252.763 72.2437 253.636 68.6069 254.14 66.0112 cv
254.369 66.0601 li
255.076 66.1323 257.498 67.3472 257.438 69.436 cv
257.417 70.4282 256.783 71.2339 255.876 71.897 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
244.948 68.2222 mo
244.865 68.3452 li
240.531 65.6108 236.914 63.8677 234.706 63.603 cv
234.572 63.5806 234.439 63.5796 234.317 63.5669 cv
234.322 63.5356 li
237.007 62.0171 241.852 63.2241 245.757 64.0688 cv
245.976 64.1187 li
245.707 65.3579 245.419 66.6216 244.948 68.2222 cv
cp
.826932 .410346 .420874 .105837 cmyk
f
234.706 63.603 mo
236.914 63.8677 240.531 65.6108 244.865 68.3452 cv
247.234 69.8296 249.806 71.6089 252.479 73.5962 cv
245.832 71.3491 241.193 69.3862 236.71 69.5415 cv
236.718 69.8032 li
235.421 71.147 234.175 73.5532 233.015 76.6558 cv
232.876 76.604 li
230.971 75.6187 229.564 72.7876 231.049 69.9233 cv
228.83 67.2056 230.253 63.3296 234.317 63.5669 cv
234.439 63.5796 234.572 63.5806 234.706 63.603 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
255.886 71.9058 mo
257.109 76.9351 257.167 97.688 256.187 107.378 cv
251.947 109.904 233.228 109.636 226.216 106.451 cv
227.751 96.2485 230.136 84.3403 233.015 76.6558 cv
234.175 73.5532 235.421 71.147 236.718 69.8032 cv
236.71 69.5415 li
241.193 69.3862 245.832 71.3491 252.479 73.5962 cv
253.6 73.1655 254.896 72.6206 255.876 71.897 cv
255.886 71.9058 li
cp
.74789 .241123 .31931 .00552377 cmyk
f
256.791 83.5835 mo
256.861 86.3101 256.881 89.2563 256.859 92.187 cv
249.464 94.3276 236.144 92.5942 229.399 89.2915 cv
230.07 86.3794 230.789 83.5923 231.544 81.062 cv
237.294 83.0308 250.046 85.4604 256.791 83.5835 cv
cp
0 0 0 0 cmyk
f
254.514 63.4341 mo
254.525 63.8667 254.367 64.8286 254.14 66.0112 cv
253.636 68.6069 252.763 72.2437 252.479 73.5962 cv
249.806 71.6089 247.234 69.8296 244.865 68.3452 cv
244.948 68.2222 li
245.419 66.6216 245.707 65.3579 245.976 64.1187 cv
246.157 63.3159 246.339 62.5327 246.554 61.6851 cv
249.544 62.2749 251.33 62.397 254.514 63.4341 cv
cp
.0797436 .400244 .584497 0 cmyk
f
256.943 69.4233 mo
256.904 70.9175 255.056 71.9888 253.174 72.7817 cv
253.244 72.4731 253.322 72.1265 253.407 71.7534 cv
253.832 69.8755 254.236 68.0737 254.533 66.604 cv
255.275 66.8413 256.982 67.854 256.943 69.4233 cv
cp
255.718 107.068 mo
251.396 109.276 233.822 109.09 226.767 106.146 cv
227.917 98.5942 231.792 75.6138 237.077 70.1479 cv
237.111 70.1128 237.13 70.0708 237.152 70.0298 cv
240.638 70.019 244.277 71.2798 249.111 72.9644 cv
250.13 73.3188 251.197 73.6919 252.323 74.0718 cv
252.328 74.0737 252.332 74.0728 252.336 74.0737 cv
252.353 74.0796 252.371 74.0776 252.388 74.0815 cv
252.434 74.0894 252.48 74.0952 252.526 74.0903 cv
252.535 74.0903 252.544 74.0942 252.552 74.0933 cv
252.589 74.0874 252.626 74.0786 252.662 74.0649 cv
253.664 73.6802 254.673 73.2446 255.54 72.7212 cv
256.625 78.7261 256.597 98.0308 255.718 107.068 cv
cp
231.166 73.8042 mo
230.882 72.9722 230.71 71.6626 231.498 70.1538 cv
231.59 69.9761 231.568 69.7593 231.441 69.605 cv
230.447 68.395 230.224 66.8472 230.874 65.6597 cv
231.531 64.4595 232.908 63.8911 234.651 64.0981 cv
237.427 64.4302 242.855 67.3501 249.473 72.0317 cv
249.462 72.0278 249.451 72.0239 249.439 72.02 cv
242.857 69.7261 238.1 68.0649 232.957 69.6616 cv
232.693 69.7437 232.545 70.0229 232.626 70.2866 cv
232.708 70.5493 232.985 70.7036 233.252 70.6167 cv
234.111 70.3511 234.955 70.186 235.8 70.0981 cv
234.721 71.4712 233.707 73.5083 232.765 75.936 cv
232.054 75.4478 231.465 74.689 231.166 73.8042 cv
cp
244.822 64.3774 mo
245.381 64.4985 li
245.167 65.4419 244.931 66.438 244.61 67.5903 cv
241.203 65.48 238.339 64.0522 236.238 63.4272 cv
238.669 63.0405 242.016 63.7661 244.822 64.3774 cv
cp
246.458 64.272 mo
246.607 63.606 246.755 62.9526 246.926 62.2651 cv
247.572 62.3882 248.164 62.4907 248.732 62.5903 cv
250.437 62.8872 251.921 63.145 254 63.7954 cv
253.858 65.2368 252.977 69.1235 252.431 71.5317 cv
252.33 71.9819 252.238 72.3872 252.16 72.7397 cv
249.785 70.9937 247.548 69.4526 245.494 68.145 cv
245.919 66.6567 246.195 65.4409 246.458 64.272 cv
cp
254.724 65.6216 mo
254.914 64.6069 255.025 63.8335 255.019 63.4292 cv
255.016 63.2144 254.877 63.0269 254.673 62.9604 cv
252.333 62.2017 250.744 61.9253 248.904 61.604 cv
248.208 61.4839 247.478 61.356 246.656 61.1938 cv
246.396 61.144 246.142 61.3013 246.075 61.5581 cv
245.897 62.2407 245.748 62.8823 245.603 63.5239 cv
245.035 63.3999 li
241.175 62.5591 236.806 61.6108 234.132 63.0669 cv
232.283 63.0239 230.761 63.7827 229.996 65.1792 cv
229.197 66.6411 229.387 68.4937 230.468 69.9819 cv
229.16 72.8315 230.393 75.6919 232.4 76.9067 cv
228.927 86.4243 226.527 101.024 225.721 106.376 cv
225.689 106.598 225.806 106.814 226.009 106.906 cv
231.689 109.483 244.41 110.123 251.763 109.089 cv
253.852 108.795 255.507 108.367 256.446 107.809 cv
256.582 107.728 256.671 107.587 256.688 107.43 cv
257.619 98.2407 257.627 77.7349 256.435 72.0972 cv
257.32 71.3843 257.915 70.5239 257.942 69.4478 cv
257.998 67.2358 255.794 65.9243 254.724 65.6216 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
242.075 101.34 mo
243.302 102.224 244.492 103.117 244.47 104.066 cv
244.449 105.34 244.101 106.673 242.243 107.184 cv
241.527 108.839 237.324 112.276 234.416 111.656 cv
231.508 111.037 228.714 106.848 227.3 102.532 cv
227.298 102.522 li
228.808 100.987 230.75 98.2456 231.482 96.9634 cv
231.628 97.0493 li
234.066 96.4741 237.396 95.228 239.375 96.271 cv
241.333 97.3179 244.076 99.0962 242.668 101.14 cv
242.075 101.34 li
cp
0 .167361 .439734 0 cmyk
f
227.298 102.522 mo
227.186 102.633 227.074 102.746 226.97 102.845 cv
224.902 101.697 217.996 95.6343 217.787 93.5884 cv
217.476 90.4233 223.606 83.3833 225.708 80.9683 cv
225.82 80.8569 li
227.88 82.9116 230.39 84.7007 232.488 85.6714 cv
232.399 85.8511 li
230.818 87.6626 228.672 90.5122 227.434 92.0894 cv
227.342 92.1968 li
228.937 93.4829 230.478 95.1948 231.772 96.3823 cv
231.743 96.5005 231.637 96.7017 231.482 96.9634 cv
230.75 98.2456 228.808 100.987 227.298 102.522 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
232.488 85.6714 mo
232.399 85.8511 li
231.845 86.4907 231.219 87.2446 230.591 88.0396 cv
227.929 87.3745 225.035 85.7661 223.212 83.9028 cv
224.21 82.6841 225.12 81.644 225.708 80.9683 cv
225.82 80.8569 li
227.88 82.9116 230.39 84.7007 232.488 85.6714 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
238.942 70.1782 mo
243.414 72.4146 237.548 81.3579 233.857 86.2163 cv
233.427 86.0806 232.967 85.8999 232.488 85.6714 cv
230.39 84.7007 227.88 82.9116 225.82 80.8569 cv
225.226 80.2739 224.667 79.6636 224.169 79.0425 cv
227.55 74.9429 234.938 68.1714 238.942 70.1782 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
242.111 106.702 mo
241.964 106.742 241.843 106.847 241.784 106.986 cv
241.149 108.453 237.14 111.72 234.519 111.167 cv
232.126 110.661 229.416 107.175 227.866 102.651 cv
229.255 101.175 230.892 98.8999 231.722 97.5308 cv
231.731 97.5298 231.739 97.5317 231.747 97.5298 cv
232.201 97.4243 232.683 97.2944 233.184 97.1626 cv
235.304 96.5962 237.705 95.9575 239.136 96.7144 cv
241.16 97.7827 242.296 98.7837 242.517 99.686 cv
242.613 100.079 242.527 100.459 242.257 100.851 cv
242.255 100.853 242.255 100.856 242.253 100.859 cv
242.24 100.848 242.226 100.839 242.212 100.829 cv
241.76 100.504 241.309 100.183 240.92 99.8569 cv
240.709 99.6821 240.394 99.7075 240.216 99.9214 cv
240.039 100.132 240.067 100.448 240.279 100.625 cv
240.685 100.965 241.157 101.303 241.63 101.642 cv
242.734 102.433 243.984 103.33 243.972 104.06 cv
243.945 105.583 243.406 106.348 242.111 106.702 cv
cp
218.29 93.5366 mo
218.094 91.6128 220.639 87.5864 225.843 81.5757 cv
227.668 83.3188 229.798 84.8628 231.738 85.854 cv
230.562 87.2349 229.16 89.0415 228.009 90.5278 cv
227.258 91.4946 li
226.056 90.5854 224.818 89.9341 223.583 89.8804 cv
223.308 89.8628 223.074 90.0806 223.062 90.3579 cv
223.049 90.6333 223.263 90.8667 223.539 90.8784 cv
225.605 90.9683 228.023 93.3833 229.966 95.3237 cv
230.382 95.7397 230.785 96.1411 231.167 96.5044 cv
230.634 97.4976 228.546 100.557 226.897 102.219 cv
224.476 100.686 218.455 95.1665 218.29 93.5366 cv
cp
236.436 70.397 mo
237.328 70.2349 238.097 70.312 238.723 70.6245 cv
239.394 70.9595 239.801 71.4741 239.969 72.1958 cv
240.543 74.6577 238.251 79.5444 233.676 85.6323 cv
230.954 84.6577 227.203 81.8696 224.82 79.0474 cv
227.232 76.2017 232.406 71.1294 236.436 70.397 cv
cp
243.079 101.42 mo
243.516 100.79 243.654 100.125 243.488 99.4487 cv
243.193 98.2397 241.922 97.0562 239.603 95.8296 cv
237.824 94.8892 235.222 95.5825 232.927 96.1958 cv
232.691 96.2583 232.476 96.3101 232.248 96.3696 cv
232.244 96.2388 232.207 96.1089 232.107 96.0171 cv
231.658 95.5991 231.176 95.1196 230.672 94.6167 cv
229.832 93.7769 228.947 92.897 228.037 92.1235 cv
228.8 91.1401 li
230 89.5903 231.478 87.6792 232.669 86.3013 cv
233.026 86.4546 233.377 86.5952 233.709 86.6987 cv
233.789 86.7231 233.871 86.7271 233.948 86.7124 cv
234.068 86.6909 234.179 86.6245 234.257 86.5229 cv
237.774 81.8872 241.79 75.5991 240.943 71.9683 cv
240.707 70.9536 240.11 70.1997 239.169 69.73 cv
238.347 69.3188 237.367 69.2114 236.257 69.4136 cv
231.789 70.2261 226.144 75.8608 223.783 78.728 cv
223.632 78.9106 223.63 79.1753 223.781 79.3599 cv
224.19 79.8677 224.652 80.3696 225.132 80.8657 cv
221.564 84.9819 216.994 90.6655 217.294 93.6382 cv
217.533 95.9956 224.78 102.204 226.728 103.283 cv
226.828 103.338 226.939 103.354 227.046 103.337 cv
228.501 107.356 231.226 111.492 234.312 112.145 cv
234.88 112.265 235.48 112.253 236.087 112.143 cv
238.855 111.64 241.782 109.085 242.594 107.601 cv
244.922 106.843 244.958 104.772 244.971 104.077 cv
244.989 103.083 244.101 102.24 243.053 101.445 cv
243.06 101.436 243.072 101.43 243.079 101.42 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
280.24 37.061 mo
280.115 43.8979 279.595 53.7905 277.035 58.603 cv
273.743 64.8032 267.117 68.0034 262.349 68.5903 cv
257.712 69.1665 242.494 69.1538 232.071 59.0229 cv
229.65 61.0815 223.705 60.4683 220.519 55.6069 cv
219.175 53.5562 218.837 51.5376 219.148 49.8042 cv
219.568 47.4888 221.125 45.6655 222.968 44.9331 cv
226.208 43.646 229.544 45.5317 231.629 50.1978 cv
234.214 47.6128 237.3 44.4419 238.728 39.6597 cv
238.715 39.6304 li
243.306 37.7134 249.504 36.7388 254.815 32.6099 cv
254.869 32.646 li
253.681 34.5757 252.693 37.0317 252.425 39.7153 cv
255.807 37.6431 270.771 36.7954 276.147 26.1968 cv
276.209 26.2212 li
278.347 27.7104 279.792 29.8833 280.281 31.6772 cv
280.274 32.9829 280.278 34.8599 280.24 37.061 cv
cp
0 .167361 .439734 0 cmyk
f
278.844 18.1313 mo
285.236 23.7153 283.433 33.2886 280.5 37.0581 cv
280.24 37.061 li
280.278 34.8599 280.274 32.9829 280.281 31.6772 cv
279.792 29.8833 278.347 27.7104 276.209 26.2212 cv
276.147 26.1968 li
270.771 36.7954 255.807 37.6431 252.425 39.7153 cv
252.693 37.0317 253.681 34.5757 254.869 32.646 cv
254.815 32.6099 li
249.504 36.7388 243.306 37.7134 238.715 39.6304 cv
238.728 39.6597 li
237.3 44.4419 234.214 47.6128 231.629 50.1978 cv
229.544 45.5317 226.208 43.646 222.968 44.9331 cv
221.125 45.6655 219.568 47.4888 219.148 49.8042 cv
218.791 49.7349 li
216.169 48.4585 212.165 44.7935 210.491 40.9253 cv
212.609 40.2378 214.47 38.5688 217.452 37.3042 cv
213.841 35.272 210.059 30.7134 208.119 27.2397 cv
211.562 26.437 215.083 22.6157 222.41 20.3081 cv
218.453 19.1479 215.401 16.7349 213.245 13.0786 cv
216.716 12.605 221.844 9.60596 228.482 9.39697 cv
226.084 8.27197 223.441 5.36084 222.847 2.36182 cv
226.266 3.23682 246.742 .109863 260.016 3.71729 cv
271.533 6.83447 278.874 12.728 278.844 18.1313 cv
cp
.373144 .782101 .665248 .350225 cmyk
f
270.781 9.83154 mo
273.78 11.7583 275.411 13.7632 276.273 15.4751 cv
272.07 21.4731 250.037 17.6997 239.214 17.3315 cv
230.203 17.0151 223.875 17.5493 220.093 19.4263 cv
219.07 18.9644 218.115 18.3745 217.242 17.6987 cv
228.787 8.4165 257.773 13.4097 265.132 12.2739 cv
268.439 11.7632 270.119 10.8735 270.781 9.83154 cv
cp
.341833 .684718 .553277 .151247 cmyk
f
278.844 18.1313 mo
278.853 16.5132 278.207 14.8638 276.982 13.2446 cv
275.664 11.4927 273.658 9.79053 271.094 8.2583 cv
268.117 6.46045 264.365 4.89209 260.016 3.71729 cv
246.742 .109863 226.266 3.23682 222.847 2.36182 cv
222.879 2.5083 222.912 2.64697 222.955 2.79346 cv
235.338 4.35986 249.654 1.15088 264.822 6.8999 cv
267.251 7.82178 269.206 8.81494 270.781 9.83154 cv
273.78 11.7583 275.411 13.7632 276.273 15.4751 cv
277.026 16.9644 277.207 18.2339 277.218 19.0552 cv
280.673 21.4839 283.578 27.1421 281.027 36.3003 cv
283.623 32.1274 284.843 23.3677 278.844 18.1313 cv
cp
0 0 0 0 cmyk
f
223.595 50.146 mo
221.931 51.6157 222.578 54.7983 225.626 56.1587 cv
227.977 57.2085 230.074 56.1343 229.228 53.3345 cv
228.167 49.8306 225.38 48.5688 223.595 50.146 cv
cp
.0797436 .400244 .584497 0 cmyk
f
280.24 37.061 mo
280.115 43.8979 279.595 53.7905 277.035 58.603 cv
273.743 64.8032 267.117 68.0034 262.349 68.5903 cv
261.763 68.6616 261.006 68.728 260.115 68.7554 cv
265.382 67.4614 271.055 64.7163 275.294 58.7847 cv
278.369 54.4604 278.863 44.8511 278.619 28.52 cv
279.443 29.562 280.012 30.6763 280.281 31.6772 cv
280.274 32.9829 280.278 34.8599 280.24 37.061 cv
cp
0 0 0 0 cmyk
f
252.425 39.7153 mo
255.807 37.6431 270.771 36.7954 276.147 26.1968 cv
276.209 26.2212 li
276.294 26.2837 276.38 26.3462 276.468 26.4194 cv
273.79 39.2915 256.638 40.3706 249.8 43.6694 cv
249.734 42.0093 249.979 39.98 250.617 38.6694 cv
246.893 41.0835 240.815 41.3638 237.789 44.0581 cv
237.894 42.9741 237.958 42.105 238.182 41.2231 cv
238.379 40.7231 238.565 40.2046 238.728 39.6597 cv
238.716 39.6401 li
238.716 39.6401 238.716 39.6401 238.726 39.6294 cv
243.316 37.7124 249.504 36.7388 254.815 32.6099 cv
254.869 32.646 li
253.681 34.5757 252.693 37.0317 252.425 39.7153 cv
cp
.0797436 .400244 .584497 0 cmyk
f
238.726 39.6294 mo
238.716 39.6401 238.716 39.6401 238.716 39.6401 cv
238.715 39.6304 li
238.726 39.6294 li
cp
f
280.766 31.5444 mo
280.217 29.5366 278.701 27.4556 276.78 26.0259 cv
277.016 25.5298 277.24 25.021 277.433 24.4829 cv
277.527 24.2241 277.393 23.937 277.133 23.8423 cv
276.871 23.7485 276.586 23.8833 276.494 24.144 cv
273.214 33.2173 263.431 35.8901 256.958 37.6587 cv
255.362 38.0942 254.015 38.4624 253.039 38.8608 cv
253.691 34.9399 255.941 31.3667 257.974 29.7378 cv
258.19 29.5649 258.224 29.2505 258.052 29.0356 cv
257.878 28.8188 257.565 28.7847 257.349 28.9575 cv
256.435 29.6899 255.462 30.8062 254.589 32.1714 cv
254.56 32.186 254.529 32.1929 254.502 32.2144 cv
250.841 35.0698 246.677 36.4097 243.005 37.5903 cv
240.716 38.3257 238.54 39.0259 236.717 40.0132 cv
236.951 35.3696 240.266 29.7573 243.792 28.2788 cv
244.048 28.1714 244.167 27.8784 244.06 27.6245 cv
243.954 27.3696 243.664 27.2505 243.406 27.356 cv
239.262 29.0933 235.523 35.6772 235.71 40.9048 cv
235.718 41.0835 235.818 41.2456 235.977 41.3286 cv
236.063 41.3735 236.16 41.3931 236.254 41.3843 cv
236.332 41.3774 236.408 41.3521 236.476 41.3101 cv
236.917 41.0337 237.392 40.7817 237.89 40.5435 cv
236.451 44.4458 233.873 47.2339 231.779 49.3403 cv
229.603 44.9692 226.199 43.106 222.787 44.4663 cv
220.974 45.188 219.515 46.8062 218.886 48.7964 cv
218.847 48.9165 218.826 49.0386 218.794 49.1606 cv
216.275 47.8481 212.816 44.5757 211.171 41.2046 cv
212.119 40.8257 213.03 40.2788 213.986 39.7046 cv
215.036 39.0757 216.224 38.3628 217.647 37.7603 cv
217.822 37.686 217.941 37.5181 217.951 37.3276 cv
217.961 37.1372 217.863 36.9565 217.697 36.8638 cv
214.404 35.0132 210.864 30.8882 208.876 27.5483 cv
210.251 27.0952 211.656 26.2388 213.248 25.2661 cv
215.583 23.8403 218.488 22.0649 222.556 20.7808 cv
222.767 20.7144 222.908 20.519 222.906 20.2993 cv
222.904 20.0796 222.758 19.8862 222.546 19.8247 cv
218.968 18.772 216.114 16.6255 214.054 13.4399 cv
215.208 13.1958 216.498 12.7505 217.95 12.2495 cv
220.824 11.2583 224.398 10.0288 228.494 9.89893 cv
228.714 9.89502 228.921 9.72705 228.968 9.50049 cv
229.015 9.2749 228.901 9.04541 228.692 8.94678 cv
226.687 8.00342 224.33 5.5835 223.515 2.96924 cv
225.001 3.10107 227.607 2.97119 230.985 2.80322 cv
238.986 2.40479 251.078 1.80225 259.889 4.19482 cv
270.787 7.15283 278.376 12.8804 278.347 18.1235 cv
278.347 18.2681 278.41 18.4058 278.519 18.5015 cv
284.173 23.4517 283.079 31.7163 280.758 35.7515 cv
280.771 34.6245 280.777 33.5991 280.78 32.7505 cv
280.785 31.6802 li
280.785 31.6343 280.779 31.5884 280.766 31.5444 cv
cp
276.594 58.3687 mo
273.473 64.2495 267.16 67.4897 262.289 68.0923 cv
256.093 68.853 241.888 67.8726 232.416 58.6655 cv
232.232 58.4868 231.941 58.4761 231.744 58.644 cv
230.778 59.4653 229.15 59.8052 227.39 59.5503 cv
224.8 59.1772 222.448 57.6382 220.935 55.3286 cv
219.602 53.2925 219.212 51.0796 219.839 49.0981 cv
220.378 47.3911 221.619 46.0063 223.156 45.395 cv
226.191 44.1909 229.259 46.106 231.173 50.3999 cv
231.241 50.5493 231.376 50.6577 231.539 50.687 cv
231.699 50.7183 231.867 50.6665 231.984 50.5493 cv
234.365 48.1724 237.605 44.9204 239.139 40.0044 cv
240.435 39.481 241.842 39.0142 243.311 38.5415 cv
246.541 37.5034 250.14 36.3394 253.504 34.146 cv
252.722 35.7993 252.123 37.6714 251.923 39.6694 cv
251.904 39.8589 251.994 40.0415 252.156 40.1431 cv
252.25 40.2017 252.358 40.2261 252.464 40.2173 cv
252.541 40.2104 252.615 40.186 252.683 40.145 cv
253.508 39.6372 255.229 39.1675 257.22 38.6235 cv
262.917 37.0669 272.082 34.5405 276.302 26.9204 cv
278.267 28.4233 279.386 30.355 279.784 31.7446 cv
279.779 32.7466 li
279.773 34.4966 279.761 36.9507 279.672 39.6792 cv
279.337 39.1196 278.902 38.937 278.569 38.9087 cv
277.097 38.7935 275.333 40.9946 273.14 44.3521 cv
272.591 45.1929 272.196 45.3843 272.058 45.3618 cv
271.926 45.3442 271.708 45.0864 271.544 44.5659 cv
271.443 44.2495 271.107 44.0728 270.791 44.1743 cv
270.474 44.2739 270.299 44.6108 270.399 44.9272 cv
270.787 46.1528 271.427 46.4868 271.896 46.5503 cv
271.999 46.5649 272.101 46.5679 272.206 46.5591 cv
272.857 46.5015 273.509 45.9819 274.144 45.0093 cv
276.982 40.6655 278.078 40.063 278.466 40.105 cv
278.576 40.1138 278.672 40.3003 278.72 40.4106 cv
278.853 40.7163 279.207 40.853 279.509 40.7231 cv
279.559 40.7026 279.596 40.6665 279.636 40.6343 cv
279.388 46.9399 278.679 54.4399 276.594 58.3687 cv
cp
279.345 17.8989 mo
279.174 12.1851 271.513 6.31396 260.15 3.229 cv
251.186 .79541 239 1.40283 230.935 1.80518 cv
227.076 1.99756 224.027 2.1499 222.968 1.87939 cv
222.802 1.83447 222.625 1.88232 222.5 2.00049 cv
222.376 2.11963 222.32 2.29248 222.354 2.46143 cv
222.883 5.12354 224.857 7.56982 226.847 9.00439 cv
223.285 9.35205 220.181 10.4224 217.623 11.3052 cv
215.902 11.8989 214.414 12.4116 213.173 12.5806 cv
213.008 12.603 212.865 12.7065 212.792 12.8569 cv
212.718 13.0083 212.726 13.1851 212.81 13.3296 cv
214.763 16.6372 217.465 18.9771 220.855 20.3022 cv
217.395 21.561 214.833 23.1265 212.726 24.4126 cv
210.887 25.5347 209.435 26.4214 208.009 26.7544 cv
207.857 26.7905 207.729 26.896 207.666 27.0396 cv
207.603 27.1831 207.61 27.3481 207.687 27.4849 cv
209.464 30.6743 212.862 34.9292 216.382 37.2339 cv
215.281 37.7632 214.331 38.3325 213.472 38.8472 cv
212.342 39.5249 211.367 40.1099 210.336 40.4448 cv
210.203 40.4888 210.093 40.5864 210.035 40.7153 cv
209.977 40.8423 209.976 40.9897 210.033 41.1187 cv
211.718 45.0093 215.699 48.7808 218.572 50.1802 cv
218.582 50.1851 218.593 50.1821 218.605 50.186 cv
218.394 52.0679 218.898 54.0425 220.099 55.8755 cv
221.769 58.4253 224.375 60.1255 227.248 60.5405 cv
229.088 60.8071 230.837 60.4858 232.029 59.6802 cv
243.108 70.1577 258.582 69.4282 261.826 69.144 cv
262.144 69.1167 262.345 69.0933 262.412 69.0854 cv
267.541 68.4497 274.188 65.0356 277.477 58.8384 cv
280.023 54.0415 280.591 44.3306 280.73 37.4956 cv
280.793 37.4634 280.852 37.4204 280.898 37.3599 cv
283.88 33.5269 285.869 23.8013 279.345 17.8989 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
266.023 58.9272 mo
260.421 61.4634 254.066 59.4907 252.267 56.895 cv
252.357 56.8813 252.439 56.8774 252.504 56.8872 cv
252.779 56.9292 253.033 56.7456 253.077 56.4722 cv
253.121 56.1997 252.934 55.9429 252.662 55.8989 cv
252.082 55.8071 251.306 56.0698 250.818 56.5259 cv
250.48 56.8394 250.314 57.2183 250.346 57.5933 cv
250.371 57.8687 250.613 58.0718 250.888 58.0474 cv
251.164 58.0229 251.367 57.7808 251.342 57.5054 cv
251.339 57.481 251.357 57.439 251.388 57.3901 cv
252.992 59.8276 257.299 61.4292 261.772 61.0376 cv
263.343 60.9009 264.935 60.5171 266.435 59.8384 cv
266.687 59.7241 266.798 59.4282 266.685 59.1763 cv
266.57 58.9253 266.277 58.812 266.023 58.9272 cv
cp
f
225.009 48.9878 mo
223.603 49.0376 222.547 49.9751 222.401 51.1938 cv
222.367 51.4673 222.563 51.7163 222.837 51.7495 cv
223.113 51.7866 223.361 51.5884 223.394 51.313 cv
223.482 50.5825 224.179 50.022 225.067 49.9858 cv
226.376 49.9106 228.17 50.9331 228.919 54.062 cv
228.979 54.3071 229.207 54.4653 229.45 54.4438 cv
229.474 54.4419 229.499 54.438 229.523 54.4321 cv
229.792 54.3687 229.957 54.0981 229.893 53.8296 cv
229 50.1001 226.704 48.8901 225.009 48.9878 cv
cp
f
255.455 44.814 mo
257.974 47.3862 259.357 48.3286 260.487 48.23 cv
260.517 48.2271 260.547 48.2241 260.578 48.2202 cv
261.533 48.0884 262.068 47.2446 262.576 46.3169 cv
262.735 46.0269 262.628 45.6616 262.337 45.5024 cv
262.046 45.3442 261.682 45.4517 261.523 45.7407 cv
261.107 46.5005 260.777 46.981 260.414 47.0317 cv
260.404 47.0327 260.394 47.0337 260.385 47.0347 cv
259.394 47.1206 257.078 44.7563 256.312 43.9741 cv
251.95 39.521 247.408 40.4995 244.844 42.6948 cv
244.592 42.9097 244.563 43.2886 244.779 43.5405 cv
244.994 43.7935 245.373 43.8208 245.625 43.6069 cv
247.794 41.7515 251.671 40.9526 255.455 44.814 cv
cp
f
259.025 48.6118 mo
258.917 51.2671 257.236 53.355 255.27 53.2749 cv
253.304 53.1958 251.798 50.9771 251.906 48.3208 cv
252.014 45.6655 253.696 43.5776 255.662 43.6577 cv
257.343 45.7622 257.519 45.9106 258.822 46.729 cv
258.978 47.311 259.052 47.9478 259.025 48.6118 cv
cp
f
256.171 47.4751 mo
255.88 48.5796 254.982 49.3003 254.166 49.0845 cv
253.347 48.8696 252.919 47.7993 253.21 46.6948 cv
253.502 45.5913 254.4 44.8706 255.218 45.0864 cv
256.035 45.3003 256.462 46.3706 256.171 47.4751 cv
cp
0 0 0 0 cmyk
f
278.222 46.9106 mo
278.339 49.5659 277.145 51.7739 275.558 51.8442 cv
273.97 51.9136 272.587 49.8149 272.471 47.1606 cv
272.451 46.6978 272.47 46.2485 272.525 45.8208 cv
273.923 44.0679 273.849 44.1558 275.137 42.2271 cv
276.724 42.1577 278.107 44.2544 278.222 46.9106 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
275.908 46.7905 mo
275.949 47.7544 275.421 48.561 274.726 48.5923 cv
274.033 48.6226 273.434 47.8638 273.392 46.8999 cv
273.35 45.936 273.88 45.1304 274.574 45.1001 cv
275.268 45.0698 275.865 45.8267 275.908 46.7905 cv
cp
0 0 0 0 cmyk
f
218.888 48.7925 mo
218.849 48.9165 218.83 49.0386 218.791 49.1626 cv
216.276 47.8462 212.818 44.5757 211.168 41.2065 cv
212.119 40.8228 213.035 40.2808 213.988 39.7056 cv
215.037 39.0718 216.23 38.3657 217.642 37.7593 cv
217.827 37.6831 217.943 37.522 217.956 37.3296 cv
217.958 37.1392 217.863 36.9565 217.695 36.8618 cv
214.443 35.0376 210.967 30.9946 208.961 27.688 cv
212.279 29.8169 216.789 31.4497 219.784 31.4897 cv
222.63 28.5698 225.142 27.6782 229.046 26.8745 cv
226.929 28.9468 225.942 31.5425 225.619 35.0845 cv
230.72 29.1362 237.953 27.7007 242.691 27.6978 cv
238.843 29.8511 235.525 35.9741 235.715 40.9058 cv
235.72 41.0864 235.816 41.2485 235.972 41.3257 cv
236.068 41.3774 236.16 41.3901 236.259 41.3813 cv
236.329 41.3755 236.406 41.3472 236.473 41.311 cv
236.921 41.0317 237.39 40.7798 237.892 40.5454 cv
236.447 44.4458 233.87 47.231 231.775 49.3413 cv
229.605 44.9644 226.201 43.104 222.787 44.4663 cv
220.972 45.188 219.518 46.8101 218.888 48.7925 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
266.717 54.4458 mo
267.43 53.3755 268.872 53.2534 268.709 54.272 cv
268.547 55.2896 266.273 55.1128 266.717 54.4458 cv
cp
.0797436 .400244 .584497 0 cmyk
f
334.358 152.354 mo
334.778 153.083 335.058 153.963 335.238 154.843 cv
335.198 154.854 li
333.698 147.934 321.528 150.104 320.528 157.024 cv
320.468 157.173 li
319.638 156.824 318.868 156.383 318.198 155.854 cv
317.837 155.814 li
318.248 151.944 319.388 148.814 320.528 145.973 cv
320.667 145.624 320.837 145.223 321.028 144.774 cv
321.198 144.854 li
323.218 147.753 329.587 147.874 331.528 146.064 cv
331.608 146.074 li
331.587 146.244 331.568 146.394 331.568 146.513 cv
331.958 148.614 332.698 149.434 334.358 152.354 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
366.278 148.184 mo
364.778 148.513 362.417 150.934 362.417 154.263 cv
362.398 154.593 li
356.318 154.324 349.648 153.574 347.318 152.973 cv
347.167 152.954 li
347.818 149.394 349.558 146.843 350.778 144.124 cv
350.788 144.104 350.798 144.083 350.808 144.064 cv
350.948 144.124 li
351.698 146.624 357.718 147.253 360.468 145.503 cv
360.488 145.503 li
360.458 145.593 360.448 145.654 360.448 145.684 cv
362.158 146.934 364.308 147.543 366.288 148.164 cv
366.278 148.184 li
cp
.823453 .403418 .425788 .104005 cmyk
f
362.398 154.593 mo
366.358 154.763 370.078 154.734 372.188 154.343 cv
372.257 155.333 372.188 156.194 372.108 156.513 cv
367.948 157.184 349.587 156.593 346.917 155.263 cv
346.948 154.444 347.038 153.673 347.167 152.954 cv
347.318 152.973 li
349.648 153.574 356.318 154.324 362.398 154.593 cv
cp
.181369 .0870985 .113436 0 cmyk
f
366.288 148.164 mo
368.518 148.854 370.528 149.553 371.448 151.184 cv
371.927 152.043 372.138 153.274 372.188 154.343 cv
370.078 154.734 366.358 154.763 362.398 154.593 cv
362.417 154.263 li
362.417 150.934 364.778 148.513 366.278 148.184 cv
366.288 148.164 li
cp
f
362.218 139.713 mo
361.408 142.374 360.648 144.814 360.488 145.503 cv
360.468 145.503 li
357.718 147.253 351.698 146.624 350.948 144.124 cv
350.808 144.064 li
351.768 141.914 352.677 139.954 353.417 137.994 cv
353.528 138.034 li
354.858 140.034 360.028 140.534 362.108 139.684 cv
362.218 139.713 li
cp
f
335.507 156.673 mo
335.597 157.723 335.568 158.534 335.528 158.684 cv
334.198 161.684 321.028 162.104 317.698 157.854 cv
317.718 157.154 317.768 156.463 317.837 155.814 cv
318.198 155.854 li
318.868 156.383 319.638 156.824 320.468 157.173 cv
325.677 159.394 333.458 158.414 335.358 156.684 cv
335.507 156.673 li
cp
0 0 0 0 cmyk
f
335.198 154.854 mo
335.238 154.843 li
335.378 155.473 335.458 156.114 335.507 156.673 cv
335.358 156.684 li
333.458 158.414 325.677 159.394 320.468 157.173 cv
320.528 157.024 li
321.528 150.104 333.698 147.934 335.198 154.854 cv
cp
f
333.278 140.434 mo
333.388 140.473 li
332.618 142.644 331.808 144.934 331.608 146.074 cv
331.528 146.064 li
329.587 147.874 323.218 147.753 321.198 144.854 cv
321.028 144.774 li
321.688 143.244 322.638 141.194 323.558 138.934 cv
323.608 138.954 li
325.108 141.124 330.948 141.684 333.278 140.434 cv
cp
f
355.028 127.854 mo
355.028 127.833 li
357.778 127.723 362.518 127.234 364.578 126.223 cv
364.608 126.284 li
364.948 128.534 364.858 130.723 363.948 133.954 cv
363.498 135.553 362.837 137.694 362.218 139.713 cv
362.108 139.684 li
360.028 140.534 354.858 140.034 353.528 138.034 cv
353.417 137.994 li
354.578 134.883 355.288 131.774 355.028 127.854 cv
cp
.0797436 .400244 .584497 0 cmyk
f
336.808 128.904 mo
336.837 129.003 li
336.587 132.253 335.778 133.503 334.587 137.064 cv
334.278 138.003 333.837 139.213 333.388 140.473 cv
333.278 140.434 li
330.948 141.684 325.108 141.124 323.608 138.954 cv
323.558 138.934 li
324.968 135.513 326.337 131.633 326.608 128.524 cv
326.618 128.494 li
329.248 129.263 333.538 129.874 336.808 128.904 cv
cp
0 .167361 .439734 0 cmyk
f
345.278 102.593 mo
345.278 105.364 344.528 112.343 343.198 114.564 cv
343.198 114.734 li
341.417 114.734 339.278 114.723 339.278 114.723 cv
340.648 112.104 341.528 105.053 341.448 102.673 cv
341.448 102.473 li
342.768 102.473 344.048 102.473 345.278 102.473 cv
345.278 102.593 li
cp
.498634 .76672 .682032 .673518 cmyk
f
365.417 125.593 mo
365.248 125.824 364.958 126.034 364.578 126.223 cv
362.518 127.234 357.778 127.723 355.028 127.833 cv
354.078 127.864 353.368 127.854 353.087 127.803 cv
351.628 123.734 346.257 116.354 343.458 114.734 cv
343.368 114.734 343.288 114.734 343.198 114.734 cv
343.198 114.564 li
344.528 112.343 345.278 105.364 345.278 102.593 cv
345.278 102.473 li
349.458 102.463 352.908 102.423 354.198 102.354 cv
354.608 107.204 li
356.118 109.083 362.978 115.494 365.417 125.593 cv
cp
f
341.448 102.673 mo
341.528 105.053 340.648 112.104 339.278 114.723 cv
338.528 119.553 338.778 123.963 337.778 128.564 cv
337.468 128.694 337.148 128.814 336.808 128.904 cv
333.538 129.874 329.248 129.263 326.618 128.494 cv
325.978 128.314 325.438 128.114 325.028 127.923 cv
326.198 117.944 325.528 110.604 328.028 102.354 cv
331.808 102.423 336.798 102.463 341.448 102.473 cv
341.448 102.673 li
cp
.433509 .775906 .674159 .526574 cmyk
f
339.278 114.723 mo
339.268 114.793 339.257 114.874 339.248 114.944 cv
339.138 114.923 li
335.068 111.763 328.998 112.234 326.167 112.704 cv
326.468 109.234 326.958 105.883 328.028 102.354 cv
331.808 102.423 336.798 102.463 341.448 102.473 cv
341.448 102.673 li
341.528 105.053 340.648 112.104 339.278 114.723 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
336.837 129.003 mo
336.768 129.894 336.658 130.633 336.507 131.314 cv
333.958 132.524 329.458 132.333 326.268 130.734 cv
326.427 129.963 326.548 129.223 326.608 128.524 cv
326.618 128.494 li
329.248 129.263 333.538 129.874 336.808 128.904 cv
336.837 129.003 li
cp
.0797436 .400244 .584497 0 cmyk
f
371.675 156.071 mo
366.943 156.663 350.647 156.03 347.435 154.935 cv
347.462 154.453 347.515 153.994 347.582 153.545 cv
350.916 154.302 360.095 155.192 366.724 155.192 cv
368.687 155.192 370.423 155.113 371.716 154.93 cv
371.722 155.389 371.705 155.794 371.675 156.071 cv
cp
350.133 146.579 mo
350.394 146.067 350.646 145.559 350.891 145.05 cv
351.317 145.613 351.984 146.083 352.898 146.423 cv
353.871 146.786 355.109 146.994 356.373 146.994 cv
357.753 146.994 359.147 146.725 360.267 146.157 cv
361.677 147.163 363.314 147.75 364.946 148.265 cv
363.471 149.276 361.997 151.433 361.928 154.076 cv
356.291 153.805 350.26 153.143 347.757 152.564 cv
348.251 150.277 349.204 148.405 350.133 146.579 cv
cp
353.599 138.869 mo
354.876 140.026 357.339 140.585 359.47 140.585 cv
360.208 140.585 360.895 140.513 361.49 140.381 cv
361.464 140.46 361.44 140.542 361.416 140.622 cv
360.587 143.315 360.212 144.552 360.052 145.152 cv
358.383 146.121 355.382 146.282 353.248 145.487 cv
352.251 145.117 351.605 144.581 351.423 143.977 cv
351.419 143.964 351.411 143.956 351.406 143.944 cv
351.74 143.201 li
352.409 141.719 353.04 140.296 353.599 138.869 cv
cp
355.537 128.299 mo
357.841 128.18 361.843 127.813 364.184 126.92 cv
364.433 129.111 364.22 131.157 363.464 133.818 cv
363.036 135.326 362.429 137.319 361.837 139.247 cv
359.902 139.976 355.236 139.497 354.001 137.829 cv
355.05 134.926 355.7 131.922 355.537 128.299 cv
cp
353.452 127.335 mo
351.789 123.05 346.677 116.157 343.846 114.392 cv
345.045 111.851 345.718 105.903 345.772 102.969 cv
349.469 102.958 352.314 102.924 353.738 102.875 cv
354.113 107.248 li
354.122 107.346 354.16 107.44 354.22 107.517 cv
354.441 107.792 354.771 108.161 355.185 108.622 cv
357.654 111.372 362.763 117.066 364.865 125.458 cv
363.541 126.635 357.244 127.349 354.035 127.349 cv
353.771 127.349 353.583 127.343 353.452 127.335 cv
cp
338.178 120.873 mo
338.011 123.379 337.853 125.751 337.343 128.2 cv
336.14 128.667 334.655 128.904 332.923 128.904 cv
330.156 128.904 327.181 128.261 325.566 127.611 cv
325.948 124.246 326.123 121.212 326.292 118.276 cv
326.611 112.782 326.887 108.019 328.398 102.861 cv
331.811 102.921 336.351 102.96 340.948 102.97 cv
340.966 105.635 340.085 112.111 338.835 114.488 cv
338.828 114.502 338.829 114.518 338.822 114.533 cv
338.807 114.569 338.791 114.604 338.784 114.644 cv
338.451 116.792 338.312 118.867 338.178 120.873 cv
cp
334.996 134.429 mo
334.732 135.142 334.437 135.939 334.117 136.904 cv
333.859 137.674 333.515 138.637 333.15 139.654 cv
333.107 139.775 333.068 139.885 333.026 140.003 cv
330.933 141.11 325.639 140.586 324.149 138.816 cv
325.449 135.621 326.666 132.105 327.029 129.125 cv
328.722 129.569 330.855 129.904 332.923 129.904 cv
334.164 129.904 335.278 129.774 336.285 129.544 cv
336.078 131.487 335.636 132.695 334.996 134.429 cv
cp
331.201 145.688 mo
331.196 145.692 331.191 145.693 331.186 145.697 cv
330.32 146.507 328.255 146.917 326.165 146.701 cv
324.09 146.483 322.452 145.723 321.646 144.619 cv
321.802 144.265 321.964 143.895 322.142 143.497 cv
322.628 142.4 323.179 141.148 323.736 139.822 cv
325.065 140.985 327.574 141.597 329.86 141.597 cv
330.855 141.597 331.796 141.474 332.587 141.239 cv
331.917 143.141 331.416 144.662 331.201 145.688 cv
cp
332.946 150.928 mo
332.98 150.985 333.019 151.051 333.054 151.11 cv
331.918 150.439 330.5 150.081 328.871 150.13 cv
325.197 150.258 321.005 152.515 320.134 156.458 cv
319.548 156.172 318.994 155.849 318.505 155.462 cv
318.473 155.436 318.435 155.424 318.398 155.407 cv
318.841 151.812 319.906 148.873 320.992 146.158 cv
321.055 146 321.126 145.828 321.203 145.647 cv
322.246 146.74 323.973 147.475 326.06 147.695 cv
326.484 147.74 326.903 147.761 327.312 147.761 cv
328.821 147.761 330.187 147.463 331.148 146.933 cv
331.472 148.444 332.012 149.362 332.946 150.928 cv
cp
334.707 154.959 mo
334.722 155.033 334.755 155.096 334.797 155.152 cv
334.878 155.565 334.938 155.969 334.981 156.349 cv
333.304 157.791 326.096 158.783 321.07 156.864 cv
321.734 153.295 325.557 151.247 328.905 151.13 cv
331.996 151 334.164 152.453 334.707 154.959 cv
cp
335.072 158.478 mo
334.703 159.309 332.932 160.017 330.45 160.327 cv
325.976 160.885 320.242 160.043 318.203 157.684 cv
318.218 157.286 318.253 156.905 318.285 156.522 cv
320.753 158.268 324.335 158.97 327.662 158.97 cv
330.726 158.97 333.556 158.383 335.072 157.5 cv
335.094 158.013 335.085 158.378 335.072 158.478 cv
cp
344.772 102.971 mo
344.712 105.986 343.96 112.195 342.804 114.23 cv
341.792 114.229 340.738 114.225 340.046 114.223 cv
341.218 111.284 341.959 105.494 341.947 102.972 cv
342.349 102.972 342.75 102.973 343.15 102.973 cv
343.707 102.973 344.245 102.972 344.772 102.971 cv
cp
371.009 151.427 mo
371.394 152.106 371.585 153.043 371.667 153.927 cv
369.634 154.232 366.408 154.258 362.933 154.12 cv
363.001 151.088 365.112 149.02 366.316 148.696 cv
368.352 149.333 370.203 150.005 371.009 151.427 cv
cp
371.879 150.933 mo
370.798 149.029 368.476 148.313 366.017 147.554 cv
364.275 147.017 362.478 146.463 361.003 145.462 cv
361.194 144.745 361.791 142.803 362.372 140.916 cv
363.083 138.598 363.892 135.972 364.425 134.091 cv
365.259 131.156 365.466 128.923 365.136 126.462 cv
365.425 126.286 365.667 126.098 365.82 125.888 cv
365.905 125.77 365.935 125.62 365.9 125.478 cv
363.779 116.701 358.279 110.571 355.929 107.954 cv
355.587 107.573 355.303 107.256 355.096 107.008 cv
354.693 102.311 li
354.67 102.042 354.436 101.812 354.168 101.855 cv
352.763 101.929 348.644 101.973 343.15 101.973 cv
337.664 101.973 332.013 101.928 328.037 101.854 cv
327.829 101.836 327.615 101.995 327.549 102.208 cv
325.908 107.621 325.625 112.532 325.294 118.218 cv
325.12 121.248 324.938 124.38 324.531 127.866 cv
324.505 128.081 324.622 128.287 324.818 128.377 cv
325.162 128.536 325.589 128.692 326.06 128.844 cv
325.566 133.274 322.972 139.156 321.228 143.091 cv
320.752 144.164 320.344 145.085 320.064 145.787 cv
318.705 149.18 317.365 152.907 317.196 157.837 cv
317.191 157.956 317.229 158.071 317.302 158.164 cv
319.103 160.46 323.537 161.493 327.687 161.493 cv
328.679 161.493 329.654 161.433 330.574 161.319 cv
332.286 161.106 335.267 160.505 336.013 158.801 cv
336.109 158.418 336.189 154.544 334.796 152.106 cv
334.421 151.45 334.093 150.899 333.804 150.417 cv
332.832 148.786 332.343 147.967 332.07 146.512 cv
332.07 145.634 333.191 142.505 334.091 139.991 cv
334.458 138.966 334.806 137.997 335.064 137.22 cv
335.382 136.267 335.673 135.48 335.933 134.776 cv
336.619 132.923 337.116 131.56 337.318 129.255 cv
337.539 129.18 337.767 129.111 337.974 129.023 cv
338.123 128.959 338.232 128.828 338.267 128.669 cv
338.834 126.057 339 123.571 339.176 120.939 cv
339.299 119.088 339.427 117.178 339.708 115.222 cv
340.445 115.224 341.993 115.23 343.315 115.23 cv
346.013 116.904 351.169 123.944 352.622 127.97 cv
352.681 128.136 352.825 128.258 352.998 128.292 cv
353.201 128.33 353.541 128.349 354.035 128.349 cv
354.161 128.349 354.337 128.345 354.539 128.34 cv
354.795 133.942 353.046 137.87 350.829 142.79 cv
350.322 143.917 li
349.99 144.657 349.619 145.385 349.242 146.125 cv
347.919 148.721 346.552 151.406 346.42 155.247 cv
346.414 155.442 346.521 155.624 346.697 155.711 cv
348.728 156.728 358.646 157.295 365.714 157.295 cv
368.578 157.295 370.975 157.203 372.189 157.008 cv
372.386 156.976 372.546 156.831 372.595 156.636 cv
372.775 155.92 372.906 152.742 371.879 150.933 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
367.289 94.3921 mo
367.044 96.5591 366.643 100.243 365.037 100.018 cv
364.746 99.9741 364.494 99.8638 364.292 99.6841 cv
364.209 99.7983 li
363.246 100.097 362.552 102.37 363.407 103.942 cv
363.168 104.467 363.114 105.622 363.71 106.547 cv
363.654 106.577 li
361.438 106.28 358.611 104.725 357.956 103.444 cv
358.535 101.1 358.767 97.1206 358.656 96.0044 cv
358.826 95.9868 li
360.464 93.3071 362.989 91.6382 364.433 91.7974 cv
365.726 91.9517 367.177 92.1606 367.306 93.7505 cv
367.326 93.9399 367.321 94.1528 367.289 94.3921 cv
cp
.0797436 .400244 .584497 0 cmyk
f
367.496 93.73 mo
369.907 93.7925 371.55 94.3042 372.32 95.354 cv
372.984 96.2583 372.996 98.0698 371.869 98.9839 cv
372.836 100.194 372.642 107.014 367.917 107.796 cv
365.55 108.192 364.299 107.484 363.71 106.547 cv
363.114 105.622 363.168 104.467 363.407 103.942 cv
362.552 102.37 363.246 100.097 364.209 99.7983 cv
364.292 99.6841 li
364.494 99.8638 364.746 99.9741 365.037 100.018 cv
366.643 100.243 367.044 96.5591 367.289 94.3921 cv
367.321 94.1528 367.326 93.9399 367.306 93.7505 cv
367.496 93.73 li
cp
f
351.251 69.6431 mo
356.234 69.2544 355.82 79.9409 355.181 86.0142 cv
354.742 86.1147 354.25 86.2065 353.722 86.2622 cv
351.419 86.4956 348.341 86.2583 345.523 85.5737 cv
344.712 85.3813 343.914 85.1479 343.169 84.8735 cv
343.953 79.6079 346.781 69.9976 351.251 69.6431 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
352.685 94.4966 mo
354.716 94.772 356.921 95.436 358.632 95.7954 cv
358.64 95.8442 358.652 95.9136 358.656 96.0044 cv
358.767 97.1206 358.535 101.1 357.956 103.444 cv
357.925 103.571 357.894 103.687 357.863 103.803 cv
355.495 103.886 346.455 102.262 345.224 100.619 cv
343.318 98.0718 344.927 88.8735 345.487 85.7212 cv
345.523 85.5737 li
348.341 86.2583 351.419 86.4956 353.722 86.2622 cv
353.732 86.4517 li
353.318 88.8198 352.945 92.3657 352.702 94.3521 cv
352.685 94.4966 li
cp
.498634 .76672 .682032 .673518 cmyk
f
371.552 98.6011 mo
371.339 98.7739 371.307 99.0854 371.478 99.2993 cv
371.872 99.7935 372.105 102.092 371.289 104.216 cv
370.818 105.442 369.835 106.973 367.836 107.303 cv
367.83 107.304 367.824 107.305 367.818 107.306 cv
366.121 107.583 364.882 107.281 364.234 106.432 cv
363.617 105.622 363.691 104.531 363.866 104.153 cv
363.932 104.008 363.927 103.842 363.851 103.704 cv
363.388 102.859 363.472 101.759 363.76 101.044 cv
363.944 100.589 364.169 100.366 364.324 100.296 cv
364.523 100.399 364.732 100.478 364.962 100.511 cv
365.11 100.531 365.255 100.531 365.396 100.507 cv
365.634 100.468 365.861 100.368 366.066 100.208 cv
367.148 99.3687 367.492 97.0356 367.783 94.4458 cv
367.791 94.3755 367.781 94.3169 367.785 94.2476 cv
369.902 94.3403 371.296 94.8081 371.917 95.6519 cv
372.402 96.3091 372.503 97.8208 371.552 98.6011 cv
cp
358.491 103.345 mo
358.992 101.146 359.232 97.814 359.18 96.3228 cv
359.203 96.2964 359.23 96.2778 359.25 96.2476 cv
360.799 93.7144 363.148 92.1577 364.376 92.2993 cv
365.091 92.3804 365.769 92.4761 366.228 92.7651 cv
366.548 92.9673 366.902 93.3276 366.781 94.4028 cv
366.609 95.9272 366.291 98.7671 365.453 99.4194 cv
365.337 99.5063 365.229 99.5386 365.1 99.521 cv
364.778 99.4751 364.525 99.2993 364.329 98.9829 cv
363.825 98.1704 363.812 96.6411 364.298 95.1763 cv
364.386 94.9136 364.244 94.6304 363.982 94.5425 cv
363.718 94.4585 363.437 94.5981 363.35 94.8599 cv
362.766 96.6187 362.817 98.4429 363.479 99.5103 cv
363.503 99.5493 363.535 99.5806 363.561 99.6177 cv
363.271 99.8599 363.019 100.209 362.833 100.671 cv
362.504 101.486 362.333 102.811 362.868 103.973 cv
362.716 104.468 362.681 105.195 362.89 105.921 cv
361.009 105.44 359.076 104.238 358.491 103.345 cv
cp
345.621 100.315 mo
344.459 98.7671 344.56 94.0073 345.912 86.1763 cv
348.355 86.7222 350.976 86.9536 353.166 86.8013 cv
352.872 88.5933 352.605 90.8726 352.388 92.7378 cv
352.248 93.936 li
350.748 93.7778 349.351 93.8579 348.265 94.4487 cv
348.023 94.5806 347.933 94.8843 348.066 95.1265 cv
348.198 95.3696 348.503 95.4624 348.744 95.3267 cv
350.561 94.3374 353.877 95.1577 356.544 95.8169 cv
357.116 95.9575 357.667 96.0942 358.181 96.2085 cv
358.237 97.3208 358.033 100.938 357.494 103.219 cv
357.482 103.249 357.469 103.275 357.461 103.306 cv
354.585 103.237 346.602 101.624 345.621 100.315 cv
cp
351.29 70.1421 mo
352.037 70.0835 352.652 70.313 353.168 70.8442 cv
354.931 72.6558 355.492 78.0239 354.716 85.6011 cv
351.847 86.1724 347.197 85.7095 343.731 84.5347 cv
344.613 79.0308 347.365 70.4565 351.29 70.1421 cv
cp
372.722 95.0581 mo
371.888 93.9263 370.24 93.3345 367.699 93.2437 cv
367.554 92.6831 367.255 92.23 366.761 91.9194 cv
366.124 91.5171 365.322 91.3989 364.488 91.3062 cv
362.816 91.1196 360.343 92.8462 358.691 95.2954 cv
358.102 95.1714 357.458 95.0122 356.784 94.8462 cv
355.63 94.561 354.417 94.2651 353.238 94.0728 cv
353.382 92.854 li
353.609 90.9009 353.89 88.4907 354.199 86.689 cv
354.306 86.6743 354.425 86.6675 354.53 86.6499 cv
354.798 86.606 355.054 86.5552 355.295 86.4956 cv
355.5 86.4468 355.652 86.2729 355.673 86.064 cv
356.292 80.2769 356.484 72.8179 353.884 70.147 cv
353.158 69.3999 352.258 69.063 351.21 69.146 cv
346.042 69.5542 343.291 80.645 342.679 84.7964 cv
342.644 85.0308 342.78 85.2583 343.002 85.3394 cv
343.616 85.563 344.271 85.7534 344.939 85.9302 cv
344.006 91.2974 343.027 98.5239 344.821 100.915 cv
346.244 102.811 355.654 104.385 357.879 104.304 cv
357.9 104.303 357.921 104.301 357.941 104.298 cv
357.948 104.297 357.952 104.292 357.958 104.291 cv
359.062 105.52 361.425 106.741 363.449 107.05 cv
364.07 107.857 365.358 108.721 367.979 108.293 cv
367.986 108.292 367.993 108.292 368 108.291 cv
370.466 107.882 371.658 106.044 372.222 104.575 cv
372.997 102.559 372.988 100.223 372.494 99.0796 cv
373.515 97.9419 373.492 96.1021 372.722 95.0581 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
355.16 71.897 mo
354.181 72.6206 352.884 73.1655 351.763 73.5962 cv
352.048 72.2437 352.919 68.6069 353.423 66.0112 cv
353.653 66.0601 li
354.36 66.1323 356.783 67.3472 356.722 69.436 cv
356.701 70.4282 356.066 71.2339 355.16 71.897 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
344.232 68.2222 mo
344.148 68.3452 li
339.816 65.6108 336.198 63.8677 333.99 63.603 cv
333.855 63.5806 333.724 63.5796 333.601 63.5669 cv
333.607 63.5356 li
336.292 62.0171 341.136 63.2241 345.042 64.0688 cv
345.261 64.1187 li
344.991 65.3579 344.705 66.6216 344.232 68.2222 cv
cp
.826932 .410346 .420874 .105837 cmyk
f
333.99 63.603 mo
336.198 63.8677 339.816 65.6108 344.148 68.3452 cv
346.518 69.8296 349.091 71.6089 351.763 73.5962 cv
345.116 71.3491 340.478 69.3862 335.996 69.5415 cv
336.001 69.8032 li
334.707 71.147 333.458 73.5532 332.299 76.6558 cv
332.162 76.604 li
330.255 75.6187 328.847 72.7876 330.333 69.9233 cv
328.113 67.2056 329.539 63.3296 333.601 63.5669 cv
333.724 63.5796 333.855 63.5806 333.99 63.603 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
355.171 71.9058 mo
356.393 76.9351 356.453 97.688 355.47 107.378 cv
351.231 109.904 332.511 109.636 325.5 106.451 cv
327.035 96.2485 329.421 84.3403 332.299 76.6558 cv
333.458 73.5532 334.707 71.147 336.001 69.8032 cv
335.996 69.5415 li
340.478 69.3862 345.116 71.3491 351.763 73.5962 cv
352.884 73.1655 354.181 72.6206 355.16 71.897 cv
355.171 71.9058 li
cp
.74789 .241123 .31931 .00552377 cmyk
f
356.076 83.5835 mo
356.146 86.3101 356.166 89.2563 356.144 92.187 cv
348.75 94.3276 335.428 92.5942 328.683 89.2915 cv
329.354 86.3794 330.074 83.5923 330.829 81.062 cv
336.579 83.0308 349.331 85.4604 356.076 83.5835 cv
cp
0 0 0 0 cmyk
f
353.798 63.4341 mo
353.809 63.8667 353.652 64.8286 353.423 66.0112 cv
352.919 68.6069 352.048 72.2437 351.763 73.5962 cv
349.091 71.6089 346.518 69.8296 344.148 68.3452 cv
344.232 68.2222 li
344.705 66.6216 344.991 65.3579 345.261 64.1187 cv
345.441 63.3159 345.625 62.5327 345.837 61.6851 cv
348.83 62.2749 350.613 62.397 353.798 63.4341 cv
cp
.0797436 .400244 .584497 0 cmyk
f
356.226 69.4233 mo
356.189 70.9175 354.341 71.9888 352.458 72.7817 cv
352.528 72.4731 352.607 72.1265 352.691 71.7534 cv
353.117 69.8755 353.519 68.0737 353.816 66.604 cv
354.558 66.8413 356.266 67.854 356.226 69.4233 cv
cp
355.002 107.068 mo
350.681 109.276 333.106 109.09 326.052 106.146 cv
327.202 98.5942 331.076 75.6138 336.361 70.1479 cv
336.394 70.1128 336.416 70.0708 336.436 70.0298 cv
339.922 70.019 343.562 71.2798 348.395 72.9644 cv
349.414 73.3188 350.482 73.6919 351.607 74.0718 cv
351.611 74.0737 351.617 74.0728 351.621 74.0737 cv
351.638 74.0796 351.656 74.0776 351.672 74.0815 cv
351.718 74.0894 351.765 74.0952 351.81 74.0903 cv
351.819 74.0903 351.828 74.0942 351.836 74.0933 cv
351.875 74.0874 351.911 74.0786 351.947 74.0649 cv
352.949 73.6802 353.958 73.2446 354.824 72.7212 cv
355.91 78.7261 355.88 98.0308 355.002 107.068 cv
cp
330.449 73.8042 mo
330.167 72.9722 329.995 71.6626 330.782 70.1538 cv
330.875 69.9761 330.852 69.7593 330.724 69.605 cv
329.73 68.395 329.507 66.8472 330.158 65.6597 cv
330.814 64.4595 332.193 63.8911 333.935 64.0981 cv
336.71 64.4302 342.139 67.3501 348.757 72.0317 cv
348.746 72.0278 348.736 72.0239 348.724 72.02 cv
342.14 69.7261 337.384 68.0649 332.241 69.6616 cv
331.977 69.7437 331.83 70.0229 331.911 70.2866 cv
331.993 70.5493 332.269 70.7036 332.537 70.6167 cv
333.394 70.3511 334.24 70.186 335.085 70.0981 cv
334.005 71.4712 332.992 73.5083 332.05 75.936 cv
331.339 75.4478 330.75 74.689 330.449 73.8042 cv
cp
344.106 64.3774 mo
344.666 64.4985 li
344.452 65.4419 344.216 66.438 343.894 67.5903 cv
340.488 65.48 337.625 64.0522 335.523 63.4272 cv
337.953 63.0405 341.3 63.7661 344.106 64.3774 cv
cp
345.742 64.272 mo
345.892 63.606 346.039 62.9526 346.21 62.2651 cv
346.857 62.3882 347.449 62.4907 348.016 62.5903 cv
349.72 62.8872 351.207 63.145 353.285 63.7954 cv
353.142 65.2368 352.261 69.1235 351.716 71.5317 cv
351.614 71.9819 351.523 72.3872 351.443 72.7397 cv
349.07 70.9937 346.832 69.4526 344.777 68.145 cv
345.203 66.6567 345.48 65.4409 345.742 64.272 cv
cp
354.008 65.6216 mo
354.199 64.6069 354.31 63.8335 354.304 63.4292 cv
354.3 63.2144 354.162 63.0269 353.958 62.9604 cv
351.618 62.2017 350.028 61.9253 348.187 61.604 cv
347.494 61.4839 346.762 61.356 345.939 61.1938 cv
345.68 61.144 345.425 61.3013 345.359 61.5581 cv
345.181 62.2407 345.033 62.8823 344.887 63.5239 cv
344.32 63.3999 li
340.46 62.5591 336.091 61.6108 333.417 63.0669 cv
331.567 63.0239 330.045 63.7827 329.281 65.1792 cv
328.48 66.6411 328.671 68.4937 329.752 69.9819 cv
328.444 72.8315 329.677 75.6919 331.683 76.9067 cv
328.212 86.4243 325.812 101.024 325.005 106.376 cv
324.972 106.598 325.09 106.814 325.293 106.906 cv
330.972 109.483 343.695 110.123 351.047 109.089 cv
353.136 108.795 354.792 108.367 355.73 107.809 cv
355.866 107.728 355.956 107.587 355.972 107.43 cv
356.902 98.2407 356.912 77.7349 355.72 72.0972 cv
356.604 71.3843 357.199 70.5239 357.226 69.4478 cv
357.283 67.2358 355.079 65.9243 354.008 65.6216 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
341.359 101.34 mo
342.587 102.224 343.775 103.117 343.755 104.066 cv
343.732 105.34 343.385 106.673 341.527 107.184 cv
340.811 108.839 336.608 112.276 333.701 111.656 cv
330.792 111.037 327.999 106.848 326.583 102.532 cv
326.582 102.522 li
328.092 100.987 330.033 98.2456 330.765 96.9634 cv
330.914 97.0493 li
333.349 96.4741 336.681 95.228 338.659 96.271 cv
340.618 97.3179 343.36 99.0962 341.953 101.14 cv
341.359 101.34 li
cp
0 .167361 .439734 0 cmyk
f
326.582 102.522 mo
326.47 102.633 326.359 102.746 326.255 102.845 cv
324.186 101.697 317.281 95.6343 317.072 93.5884 cv
316.76 90.4233 322.89 83.3833 324.992 80.9683 cv
325.103 80.8569 li
327.165 82.9116 329.675 84.7007 331.773 85.6714 cv
331.683 85.8511 li
330.101 87.6626 327.957 90.5122 326.718 92.0894 cv
326.626 92.1968 li
328.222 93.4829 329.763 95.1948 331.056 96.3823 cv
331.027 96.5005 330.921 96.7017 330.765 96.9634 cv
330.033 98.2456 328.092 100.987 326.582 102.522 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
331.773 85.6714 mo
331.683 85.8511 li
331.128 86.4907 330.503 87.2446 329.875 88.0396 cv
327.213 87.3745 324.319 85.7661 322.497 83.9028 cv
323.495 82.6841 324.404 81.644 324.992 80.9683 cv
325.103 80.8569 li
327.165 82.9116 329.675 84.7007 331.773 85.6714 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
338.226 70.1782 mo
342.698 72.4146 336.833 81.3579 333.142 86.2163 cv
332.71 86.0806 332.251 85.8999 331.773 85.6714 cv
329.675 84.7007 327.165 82.9116 325.103 80.8569 cv
324.509 80.2739 323.952 79.6636 323.453 79.0425 cv
326.833 74.9429 334.222 68.1714 338.226 70.1782 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
341.395 106.702 mo
341.249 106.742 341.128 106.847 341.068 106.986 cv
340.433 108.453 336.423 111.72 333.804 111.167 cv
331.411 110.661 328.701 107.175 327.15 102.651 cv
328.54 101.175 330.177 98.8999 331.007 97.5308 cv
331.015 97.5298 331.023 97.5317 331.031 97.5298 cv
331.484 97.4243 331.968 97.2944 332.468 97.1626 cv
334.589 96.5962 336.99 95.9575 338.42 96.7144 cv
340.443 97.7827 341.581 98.7837 341.801 99.686 cv
341.897 100.079 341.812 100.459 341.541 100.851 cv
341.54 100.853 341.54 100.856 341.539 100.859 cv
341.523 100.848 341.509 100.839 341.496 100.829 cv
341.044 100.504 340.593 100.183 340.205 99.8569 cv
339.994 99.6821 339.678 99.7075 339.5 99.9214 cv
339.324 100.132 339.351 100.448 339.563 100.625 cv
339.97 100.965 340.441 101.303 340.914 101.642 cv
342.017 102.433 343.268 103.33 343.255 104.06 cv
343.228 105.583 342.69 106.348 341.395 106.702 cv
cp
317.574 93.5366 mo
317.378 91.6128 319.923 87.5864 325.126 81.5757 cv
326.953 83.3188 329.083 84.8628 331.022 85.854 cv
329.845 87.2349 328.444 89.0415 327.293 90.5278 cv
326.542 91.4946 li
325.34 90.5854 324.103 89.9341 322.867 89.8804 cv
322.591 89.8628 322.357 90.0806 322.345 90.3579 cv
322.333 90.6333 322.548 90.8667 322.824 90.8784 cv
324.889 90.9683 327.307 93.3833 329.25 95.3237 cv
329.667 95.7397 330.069 96.1411 330.451 96.5044 cv
329.918 97.4976 327.83 100.557 326.181 102.219 cv
323.759 100.686 317.739 95.1665 317.574 93.5366 cv
cp
335.72 70.397 mo
336.612 70.2349 337.381 70.312 338.007 70.6245 cv
338.677 70.9595 339.085 71.4741 339.253 72.1958 cv
339.828 74.6577 337.537 79.5444 332.96 85.6323 cv
330.238 84.6577 326.488 81.8696 324.103 79.0474 cv
326.516 76.2017 331.691 71.1294 335.72 70.397 cv
cp
342.363 101.42 mo
342.8 100.79 342.937 100.125 342.773 99.4487 cv
342.477 98.2397 341.207 97.0562 338.888 95.8296 cv
337.108 94.8892 334.506 95.5825 332.21 96.1958 cv
331.974 96.2583 331.759 96.3101 331.533 96.3696 cv
331.529 96.2388 331.491 96.1089 331.391 96.0171 cv
330.942 95.5991 330.46 95.1196 329.957 94.6167 cv
329.116 93.7769 328.23 92.897 327.32 92.1235 cv
328.084 91.1401 li
329.283 89.5903 330.763 87.6792 331.953 86.3013 cv
332.31 86.4546 332.662 86.5952 332.994 86.6987 cv
333.073 86.7231 333.154 86.7271 333.232 86.7124 cv
333.352 86.6909 333.464 86.6245 333.541 86.5229 cv
337.058 81.8872 341.074 75.5991 340.227 71.9683 cv
339.991 70.9536 339.394 70.1997 338.455 69.73 cv
337.63 69.3188 336.651 69.2114 335.542 69.4136 cv
331.073 70.2261 325.427 75.8608 323.068 78.728 cv
322.917 78.9106 322.916 79.1753 323.064 79.3599 cv
323.474 79.8677 323.935 80.3696 324.417 80.8657 cv
320.847 84.9819 316.277 90.6655 316.579 93.6382 cv
316.818 95.9956 324.064 102.204 326.012 103.283 cv
326.112 103.338 326.224 103.354 326.331 103.337 cv
327.785 107.356 330.51 111.492 333.597 112.145 cv
334.166 112.265 334.765 112.253 335.373 112.143 cv
338.14 111.64 341.066 109.085 341.878 107.601 cv
344.207 106.843 344.244 104.772 344.255 104.077 cv
344.273 103.083 343.385 102.24 342.337 101.445 cv
342.345 101.436 342.356 101.43 342.363 101.42 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
379.524 37.061 mo
379.399 43.8979 378.879 53.7905 376.319 58.603 cv
373.027 64.8032 366.401 68.0034 361.633 68.5903 cv
356.996 69.1665 341.777 69.1538 331.355 59.0229 cv
328.935 61.0815 322.988 60.4683 319.802 55.6069 cv
318.458 53.5562 318.122 51.5376 318.431 49.8042 cv
318.851 47.4888 320.409 45.6655 322.251 44.9331 cv
325.492 43.646 328.83 45.5317 330.914 50.1978 cv
333.498 47.6128 336.583 44.4419 338.012 39.6597 cv
338 39.6304 li
342.589 37.7134 348.789 36.7388 354.099 32.6099 cv
354.152 32.646 li
352.966 34.5757 351.976 37.0317 351.709 39.7153 cv
355.091 37.6431 370.054 36.7954 375.431 26.1968 cv
375.494 26.2212 li
377.631 27.7104 379.076 29.8833 379.564 31.6772 cv
379.558 32.9829 379.562 34.8599 379.524 37.061 cv
cp
0 .167361 .439734 0 cmyk
f
378.128 18.1313 mo
384.519 23.7153 382.716 33.2886 379.785 37.0581 cv
379.524 37.061 li
379.562 34.8599 379.558 32.9829 379.564 31.6772 cv
379.076 29.8833 377.631 27.7104 375.494 26.2212 cv
375.431 26.1968 li
370.054 36.7954 355.091 37.6431 351.709 39.7153 cv
351.976 37.0317 352.966 34.5757 354.152 32.646 cv
354.099 32.6099 li
348.789 36.7388 342.589 37.7134 338 39.6304 cv
338.012 39.6597 li
336.583 44.4419 333.498 47.6128 330.914 50.1978 cv
328.83 45.5317 325.492 43.646 322.251 44.9331 cv
320.409 45.6655 318.851 47.4888 318.431 49.8042 cv
318.074 49.7349 li
315.453 48.4585 311.449 44.7935 309.775 40.9253 cv
311.894 40.2378 313.755 38.5688 316.736 37.3042 cv
313.125 35.272 309.343 30.7134 307.404 27.2397 cv
310.846 26.437 314.367 22.6157 321.694 20.3081 cv
317.738 19.1479 314.685 16.7349 312.529 13.0786 cv
316 12.605 321.128 9.60596 327.766 9.39697 cv
325.369 8.27197 322.724 5.36084 322.131 2.36182 cv
325.55 3.23682 346.026 .109863 359.3 3.71729 cv
370.816 6.83447 378.158 12.728 378.128 18.1313 cv
cp
.373144 .782101 .665248 .350225 cmyk
f
370.064 9.83154 mo
373.064 11.7583 374.695 13.7632 375.557 15.4751 cv
371.354 21.4731 349.322 17.6997 338.499 17.3315 cv
329.486 17.0151 323.159 17.5493 319.377 19.4263 cv
318.353 18.9644 317.398 18.3745 316.527 17.6987 cv
328.072 8.4165 357.056 13.4097 364.416 12.2739 cv
367.724 11.7632 369.403 10.8735 370.064 9.83154 cv
cp
.341833 .684718 .553277 .151247 cmyk
f
378.128 18.1313 mo
378.137 16.5132 377.492 14.8638 376.265 13.2446 cv
374.948 11.4927 372.942 9.79053 370.378 8.2583 cv
367.4 6.46045 363.65 4.89209 359.3 3.71729 cv
346.026 .109863 325.55 3.23682 322.131 2.36182 cv
322.164 2.5083 322.196 2.64697 322.24 2.79346 cv
334.623 4.35986 348.937 1.15088 364.107 6.8999 cv
366.537 7.82178 368.49 8.81494 370.064 9.83154 cv
373.064 11.7583 374.695 13.7632 375.557 15.4751 cv
376.31 16.9644 376.492 18.2339 376.503 19.0552 cv
379.958 21.4839 382.862 27.1421 380.31 36.3003 cv
382.906 32.1274 384.127 23.3677 378.128 18.1313 cv
cp
0 0 0 0 cmyk
f
322.878 50.146 mo
321.214 51.6157 321.861 54.7983 324.911 56.1587 cv
327.261 57.2085 329.359 56.1343 328.511 53.3345 cv
327.453 49.8306 324.666 48.5688 322.878 50.146 cv
cp
.0797436 .400244 .584497 0 cmyk
f
379.524 37.061 mo
379.399 43.8979 378.879 53.7905 376.319 58.603 cv
373.027 64.8032 366.401 68.0034 361.633 68.5903 cv
361.047 68.6616 360.291 68.728 359.4 68.7554 cv
364.667 67.4614 370.339 64.7163 374.578 58.7847 cv
377.653 54.4604 378.148 44.8511 377.904 28.52 cv
378.727 29.562 379.296 30.6763 379.564 31.6772 cv
379.558 32.9829 379.562 34.8599 379.524 37.061 cv
cp
0 0 0 0 cmyk
f
351.709 39.7153 mo
355.091 37.6431 370.054 36.7954 375.431 26.1968 cv
375.494 26.2212 li
375.58 26.2837 375.666 26.3462 375.751 26.4194 cv
373.074 39.2915 355.922 40.3706 349.083 43.6694 cv
349.019 42.0093 349.263 39.98 349.902 38.6694 cv
346.177 41.0835 340.099 41.3638 337.072 44.0581 cv
337.177 42.9741 337.243 42.105 337.466 41.2231 cv
337.664 40.7231 337.849 40.2046 338.012 39.6597 cv
338 39.6401 li
338 39.6401 338 39.6401 338.009 39.6294 cv
342.599 37.7124 348.789 36.7388 354.099 32.6099 cv
354.152 32.646 li
352.966 34.5757 351.976 37.0317 351.709 39.7153 cv
cp
.0797436 .400244 .584497 0 cmyk
f
338.009 39.6294 mo
338 39.6401 338 39.6401 338 39.6401 cv
338 39.6304 li
338.009 39.6294 li
cp
f
380.05 31.5444 mo
379.501 29.5366 377.985 27.4556 376.064 26.0259 cv
376.3 25.5298 376.523 25.021 376.718 24.4829 cv
376.812 24.2241 376.677 23.937 376.417 23.8423 cv
376.155 23.7485 375.871 23.8833 375.777 24.144 cv
372.499 33.2173 362.715 35.8901 356.242 37.6587 cv
354.646 38.0942 353.3 38.4624 352.324 38.8608 cv
352.976 34.9399 355.225 31.3667 357.258 29.7378 cv
357.474 29.5649 357.509 29.2505 357.335 29.0356 cv
357.164 28.8188 356.849 28.7847 356.633 28.9575 cv
355.718 29.6899 354.748 30.8062 353.875 32.1714 cv
353.845 32.186 353.814 32.1929 353.787 32.2144 cv
350.125 35.0698 345.962 36.4097 342.289 37.5903 cv
340.001 38.3257 337.824 39.0259 336.001 40.0132 cv
336.234 35.3696 339.55 29.7573 343.078 28.2788 cv
343.332 28.1714 343.453 27.8784 343.345 27.6245 cv
343.238 27.3696 342.948 27.2505 342.691 27.356 cv
338.546 29.0933 334.806 35.6772 334.996 40.9048 cv
335.001 41.0835 335.103 41.2456 335.261 41.3286 cv
335.347 41.3735 335.444 41.3931 335.539 41.3843 cv
335.617 41.3774 335.693 41.3521 335.761 41.3101 cv
336.201 41.0337 336.677 40.7817 337.174 40.5435 cv
335.735 44.4458 333.158 47.2339 331.064 49.3403 cv
328.886 44.9692 325.484 43.106 322.071 44.4663 cv
320.257 45.188 318.799 46.8062 318.169 48.7964 cv
318.132 48.9165 318.111 49.0386 318.08 49.1606 cv
315.559 47.8481 312.099 44.5757 310.457 41.2046 cv
311.402 40.8257 312.314 40.2788 313.271 39.7046 cv
314.32 39.0757 315.509 38.3628 316.931 37.7603 cv
317.107 37.686 317.224 37.5181 317.236 37.3276 cv
317.246 37.1372 317.147 36.9565 316.98 36.8638 cv
313.689 35.0132 310.148 30.8882 308.162 27.5483 cv
309.536 27.0952 310.94 26.2388 312.531 25.2661 cv
314.867 23.8403 317.773 22.0649 321.841 20.7808 cv
322.05 20.7144 322.193 20.519 322.191 20.2993 cv
322.189 20.0796 322.042 19.8862 321.832 19.8247 cv
318.252 18.772 315.398 16.6255 313.338 13.4399 cv
314.493 13.1958 315.783 12.7505 317.234 12.2495 cv
320.108 11.2583 323.681 10.0288 327.779 9.89893 cv
328 9.89502 328.206 9.72705 328.253 9.50049 cv
328.3 9.2749 328.185 9.04541 327.976 8.94678 cv
325.97 8.00342 323.614 5.5835 322.799 2.96924 cv
324.285 3.10107 326.89 2.97119 330.269 2.80322 cv
338.27 2.40479 350.362 1.80225 359.173 4.19482 cv
370.07 7.15283 377.661 12.8804 377.632 18.1235 cv
377.631 18.2681 377.693 18.4058 377.802 18.5015 cv
383.458 23.4517 382.363 31.7163 380.042 35.7515 cv
380.056 34.6245 380.06 33.5991 380.064 32.7505 cv
380.069 31.6802 li
380.068 31.6343 380.062 31.5884 380.05 31.5444 cv
cp
375.878 58.3687 mo
372.757 64.2495 366.445 67.4897 361.573 68.0923 cv
355.376 68.853 341.173 67.8726 331.701 58.6655 cv
331.516 58.4868 331.224 58.4761 331.028 58.644 cv
330.062 59.4653 328.435 59.8052 326.675 59.5503 cv
324.085 59.1772 321.732 57.6382 320.219 55.3286 cv
318.886 53.2925 318.498 51.0796 319.125 49.0981 cv
319.664 47.3911 320.904 46.0063 322.44 45.395 cv
325.474 44.1909 328.544 46.106 330.458 50.3999 cv
330.525 50.5493 330.662 50.6577 330.823 50.687 cv
330.983 50.7183 331.15 50.6665 331.267 50.5493 cv
333.648 48.1724 336.888 44.9204 338.423 40.0044 cv
339.719 39.481 341.126 39.0142 342.595 38.5415 cv
345.825 37.5034 349.424 36.3394 352.789 34.146 cv
352.005 35.7993 351.408 37.6714 351.208 39.6694 cv
351.188 39.8589 351.279 40.0415 351.439 40.1431 cv
351.533 40.2017 351.642 40.2261 351.749 40.2173 cv
351.824 40.2104 351.899 40.186 351.966 40.145 cv
352.792 39.6372 354.513 39.1675 356.505 38.6235 cv
362.201 37.0669 371.366 34.5405 375.587 26.9204 cv
377.55 28.4233 378.67 30.355 379.068 31.7446 cv
379.064 32.7466 li
379.057 34.4966 379.046 36.9507 378.957 39.6792 cv
378.621 39.1196 378.185 38.937 377.853 38.9087 cv
376.381 38.7935 374.617 40.9946 372.424 44.3521 cv
371.875 45.1929 371.48 45.3843 371.343 45.3618 cv
371.21 45.3442 370.993 45.0864 370.828 44.5659 cv
370.728 44.2495 370.391 44.0728 370.075 44.1743 cv
369.759 44.2739 369.583 44.6108 369.683 44.9272 cv
370.071 46.1528 370.71 46.4868 371.179 46.5503 cv
371.283 46.5649 371.386 46.5679 371.49 46.5591 cv
372.142 46.5015 372.792 45.9819 373.429 45.0093 cv
376.265 40.6655 377.361 40.063 377.751 40.105 cv
377.86 40.1138 377.957 40.3003 378.004 40.4106 cv
378.136 40.7163 378.492 40.853 378.794 40.7231 cv
378.843 40.7026 378.88 40.6665 378.921 40.6343 cv
378.672 46.9399 377.963 54.4399 375.878 58.3687 cv
cp
378.628 17.8989 mo
378.458 12.1851 370.796 6.31396 359.435 3.229 cv
350.47 .79541 338.284 1.40283 330.219 1.80518 cv
326.36 1.99756 323.311 2.1499 322.251 1.87939 cv
322.085 1.83447 321.91 1.88232 321.785 2.00049 cv
321.66 2.11963 321.605 2.29248 321.638 2.46143 cv
322.167 5.12354 324.142 7.56982 326.132 9.00439 cv
322.569 9.35205 319.466 10.4224 316.908 11.3052 cv
315.185 11.8989 313.699 12.4116 312.458 12.5806 cv
312.292 12.603 312.149 12.7065 312.076 12.8569 cv
312.002 13.0083 312.009 13.1851 312.095 13.3296 cv
314.048 16.6372 316.75 18.9771 320.14 20.3022 cv
316.679 21.561 314.117 23.1265 312.01 24.4126 cv
310.171 25.5347 308.719 26.4214 307.293 26.7544 cv
307.14 26.7905 307.013 26.896 306.95 27.0396 cv
306.886 27.1831 306.894 27.3481 306.97 27.4849 cv
308.75 30.6743 312.146 34.9292 315.667 37.2339 cv
314.565 37.7632 313.615 38.3325 312.756 38.8472 cv
311.626 39.5249 310.651 40.1099 309.621 40.4448 cv
309.487 40.4888 309.376 40.5864 309.32 40.7153 cv
309.261 40.8423 309.259 40.9897 309.316 41.1187 cv
311.003 45.0093 314.982 48.7808 317.855 50.1802 cv
317.867 50.1851 317.878 50.1821 317.889 50.186 cv
317.679 52.0679 318.182 54.0425 319.382 55.8755 cv
321.052 58.4253 323.658 60.1255 326.533 60.5405 cv
328.373 60.8071 330.122 60.4858 331.313 59.6802 cv
342.392 70.1577 357.867 69.4282 361.109 69.144 cv
361.428 69.1167 361.628 69.0933 361.696 69.0854 cv
366.825 68.4497 373.472 65.0356 376.761 58.8384 cv
379.307 54.0415 379.876 44.3306 380.014 37.4956 cv
380.078 37.4634 380.136 37.4204 380.182 37.3599 cv
383.164 33.5269 385.152 23.8013 378.628 17.8989 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
365.306 58.9272 mo
359.706 61.4634 353.35 59.4907 351.552 56.895 cv
351.642 56.8813 351.724 56.8774 351.789 56.8872 cv
352.062 56.9292 352.318 56.7456 352.361 56.4722 cv
352.405 56.1997 352.218 55.9429 351.946 55.8989 cv
351.365 55.8071 350.59 56.0698 350.101 56.5259 cv
349.765 56.8394 349.597 57.2183 349.63 57.5933 cv
349.654 57.8687 349.896 58.0718 350.171 58.0474 cv
350.447 58.0229 350.65 57.7808 350.626 57.5054 cv
350.625 57.481 350.641 57.439 350.671 57.3901 cv
352.275 59.8276 356.583 61.4292 361.056 61.0376 cv
362.627 60.9009 364.219 60.5171 365.719 59.8384 cv
365.97 59.7241 366.083 59.4282 365.968 59.1763 cv
365.855 58.9253 365.56 58.812 365.306 58.9272 cv
cp
f
324.294 48.9878 mo
322.887 49.0376 321.832 49.9751 321.685 51.1938 cv
321.652 51.4673 321.847 51.7163 322.121 51.7495 cv
322.396 51.7866 322.645 51.5884 322.677 51.313 cv
322.765 50.5825 323.462 50.022 324.351 49.9858 cv
325.661 49.9106 327.455 50.9331 328.205 54.062 cv
328.263 54.3071 328.492 54.4653 328.734 54.4438 cv
328.758 54.4419 328.783 54.438 328.807 54.4321 cv
329.076 54.3687 329.242 54.0981 329.177 53.8296 cv
328.284 50.1001 325.988 48.8901 324.294 48.9878 cv
cp
f
354.739 44.814 mo
357.258 47.3862 358.64 48.3286 359.771 48.23 cv
359.801 48.2271 359.832 48.2241 359.861 48.2202 cv
360.817 48.0884 361.352 47.2446 361.859 46.3169 cv
362.019 46.0269 361.912 45.6616 361.622 45.5024 cv
361.33 45.3442 360.966 45.4517 360.807 45.7407 cv
360.392 46.5005 360.06 46.981 359.697 47.0317 cv
359.688 47.0327 359.679 47.0337 359.669 47.0347 cv
358.678 47.1206 356.363 44.7563 355.595 43.9741 cv
351.234 39.521 346.693 40.4995 344.128 42.6948 cv
343.876 42.9097 343.847 43.2886 344.062 43.5405 cv
344.278 43.7935 344.657 43.8208 344.908 43.6069 cv
347.08 41.7515 350.957 40.9526 354.739 44.814 cv
cp
f
355.308 53.2495 mo
352.966 53.2495 350.585 52.6909 348.897 51.8101 cv
348.529 51.6187 348.387 51.1655 348.579 50.7983 cv
348.771 50.4302 349.224 50.2896 349.59 50.48 cv
352.294 51.8901 357.019 52.3335 359.741 50.7476 cv
360.097 50.5386 360.558 50.6587 360.767 51.0171 cv
360.975 51.3745 360.855 51.8345 360.497 52.0425 cv
359.046 52.8882 357.191 53.2495 355.308 53.2495 cv
cp
f
372.958 52.3882 mo
371.841 52.3882 370.753 52.1968 370.047 51.7983 cv
369.687 51.5942 369.56 51.1362 369.763 50.7759 cv
369.966 50.4136 370.425 50.2886 370.786 50.4917 cv
371.873 51.1069 374.791 50.9888 375.74 50.2905 cv
376.073 50.0474 376.542 50.1167 376.788 50.4507 cv
377.033 50.7847 376.961 51.2534 376.628 51.4995 cv
375.837 52.0806 374.375 52.3882 372.958 52.3882 cv
cp
f
318.173 48.7925 mo
318.133 48.9165 318.114 49.0386 318.075 49.1626 cv
315.56 47.8462 312.102 44.5757 310.453 41.2065 cv
311.402 40.8228 312.319 40.2808 313.272 39.7056 cv
314.321 39.0718 315.513 38.3657 316.927 37.7593 cv
317.111 37.6831 317.227 37.522 317.24 37.3296 cv
317.244 37.1392 317.147 36.9565 316.978 36.8618 cv
313.727 35.0376 310.251 30.9946 308.246 27.688 cv
311.564 29.8169 316.074 31.4497 319.068 31.4897 cv
321.915 28.5698 324.426 27.6782 328.332 26.8745 cv
326.214 28.9468 325.226 31.5425 324.904 35.0845 cv
330.004 29.1362 337.238 27.7007 341.974 27.6978 cv
338.127 29.8511 334.808 35.9741 335 40.9058 cv
335.005 41.0864 335.099 41.2485 335.257 41.3257 cv
335.351 41.3774 335.443 41.3901 335.542 41.3813 cv
335.613 41.3755 335.691 41.3472 335.757 41.311 cv
336.205 41.0317 336.675 40.7798 337.176 40.5454 cv
335.731 44.4458 333.154 47.231 331.06 49.3413 cv
328.89 44.9644 325.484 43.104 322.07 44.4663 cv
320.257 45.188 318.802 46.8101 318.173 48.7925 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
366.001 54.4458 mo
366.714 53.3755 368.156 53.2534 367.994 54.272 cv
367.832 55.2896 365.558 55.1128 366.001 54.4458 cv
cp
.0797436 .400244 .584497 0 cmyk
f
159.624 104.574 mo
159.523 104.673 li
158.523 104.843 157.534 107.003 158.174 108.673 cv
157.864 109.164 157.654 110.303 158.124 111.303 cv
158.063 111.324 li
154.944 110.654 153.074 108.593 152.574 107.114 cv
152.454 107.064 li
153.384 104.904 154.273 101.184 154.404 99.9634 cv
154.534 99.9839 li
156.523 97.5532 159.404 96.4233 160.824 96.7837 cv
162.083 97.0933 163.484 97.5034 163.394 99.0835 cv
163.384 99.2739 163.354 99.4937 163.293 99.7231 cv
162.764 101.843 161.874 105.434 160.304 104.994 cv
160.023 104.914 159.793 104.774 159.624 104.574 cv
cp
f
159.624 104.574 mo
159.793 104.774 160.023 104.914 160.304 104.994 cv
161.874 105.434 162.764 101.843 163.293 99.7231 cv
163.354 99.4937 163.384 99.2739 163.394 99.0835 cv
163.594 99.104 li
165.974 99.4937 167.534 100.223 168.154 101.364 cv
168.694 102.343 168.454 104.144 167.224 104.904 cv
168.014 106.223 166.904 112.954 162.124 113.093 cv
159.734 113.164 158.594 112.303 158.124 111.303 cv
157.654 110.303 157.864 109.164 158.174 108.673 cv
157.534 107.003 158.523 104.843 159.523 104.673 cv
159.624 104.574 li
cp
f
149.574 89.1235 mo
149.204 91.4937 148.894 95.0532 148.684 97.0435 cv
148.594 97.314 li
150.604 97.9233 152.734 99.0034 154.414 99.6636 cv
154.424 99.7339 154.414 99.8335 154.404 99.9634 cv
154.273 101.184 153.384 104.904 152.454 107.064 cv
152.394 107.184 152.333 107.314 152.284 107.423 cv
149.934 107.104 142.394 103.883 141.043 102.324 cv
139.264 100.263 140.954 90.8237 141.313 88.5435 cv
141.344 88.394 li
144.164 89.0239 147.244 89.2134 149.543 88.9341 cv
149.574 89.1235 li
cp
.498634 .76672 .682032 .673518 cmyk
f
146.793 72.3638 mo
151.764 71.8833 151.554 82.5835 151.014 88.6636 cv
150.574 88.7739 150.083 88.8638 149.543 88.9341 cv
147.244 89.2134 144.164 89.0239 141.344 88.394 cv
140.534 88.2134 139.734 87.9937 138.994 87.7339 cv
139.674 82.4634 142.324 72.8032 146.793 72.3638 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
166.958 104.474 mo
166.724 104.617 166.649 104.921 166.79 105.157 cv
167.114 105.698 167.036 108.006 165.942 110.001 cv
165.31 111.153 164.132 112.54 162.105 112.598 cv
160.372 112.667 159.181 112.18 158.652 111.247 cv
158.15 110.36 158.372 109.292 158.595 108.942 cv
158.681 108.808 158.698 108.642 158.641 108.494 cv
158.297 107.594 158.528 106.515 158.909 105.845 cv
159.152 105.418 159.406 105.227 159.567 105.18 cv
159.75 105.308 159.947 105.417 160.171 105.479 cv
160.302 105.516 160.434 105.534 160.565 105.534 cv
160.82 105.534 161.071 105.465 161.306 105.329 cv
162.493 104.64 163.146 102.374 163.78 99.8491 cv
163.797 99.7817 163.802 99.7192 163.815 99.6538 cv
165.897 100.03 167.215 100.682 167.717 101.601 cv
168.109 102.318 168.007 103.829 166.958 104.474 cv
cp
153.042 106.949 mo
153.041 106.946 153.039 106.944 153.038 106.942 cv
153.842 104.952 154.637 101.867 154.854 100.355 cv
154.877 100.335 154.905 100.321 154.925 100.296 cv
156.883 97.8989 159.582 96.979 160.698 97.2651 cv
161.586 97.4878 162.411 97.7339 162.739 98.2837 cv
162.931 98.6069 162.955 99.0386 162.795 99.6665 cv
162.421 101.157 161.724 103.93 160.804 104.463 cv
160.679 104.536 160.567 104.549 160.441 104.516 cv
160.128 104.428 159.902 104.22 159.75 103.879 cv
159.36 103.006 159.554 101.489 160.233 100.103 cv
160.354 99.855 160.251 99.5562 160.004 99.4341 cv
159.756 99.3149 159.456 99.4155 159.334 99.6636 cv
158.52 101.326 158.325 103.141 158.837 104.288 cv
158.856 104.33 158.883 104.364 158.903 104.404 cv
158.584 104.605 158.286 104.918 158.04 105.351 cv
157.605 106.115 157.257 107.405 157.631 108.628 cv
157.408 109.11 157.276 109.848 157.399 110.618 cv
155.024 109.874 153.488 108.259 153.042 106.949 cv
cp
141.419 102 mo
140.422 100.846 140.52 96.5454 141.71 89.2153 cv
141.747 88.9868 li
143.544 89.354 145.47 89.5591 147.263 89.5591 cv
147.881 89.5591 148.462 89.5288 149.015 89.481 cv
148.756 91.2583 148.532 93.522 148.35 95.3726 cv
148.302 95.854 148.259 96.2896 148.218 96.688 cv
146.849 96.3228 145.538 96.1919 144.426 96.5679 cv
144.165 96.6567 144.025 96.9409 144.114 97.2026 cv
144.203 97.4634 144.485 97.6021 144.749 97.5151 cv
146.702 96.8481 149.829 98.2222 152.341 99.3247 cv
152.883 99.563 153.406 99.7915 153.896 99.9927 cv
153.759 101.111 152.923 104.716 151.99 106.865 cv
149.331 106.314 142.583 103.346 141.419 102 cv
cp
146.84 72.8638 mo
147.636 72.7788 148.284 73.0386 148.833 73.6382 cv
150.548 75.5132 151.169 80.8315 150.543 88.2583 cv
149.644 88.4556 148.519 88.5591 147.263 88.5591 cv
144.692 88.5591 141.84 88.1245 139.54 87.3892 cv
140.383 81.4351 143.135 73.2241 146.84 72.8638 cv
cp
168.594 101.122 mo
167.922 99.8911 166.374 99.0825 163.88 98.6499 cv
163.843 98.3276 163.753 98.0327 163.598 97.772 cv
163.029 96.8198 161.823 96.5161 160.943 96.2954 cv
159.434 95.9087 156.675 96.9292 154.584 99.1919 cv
154.014 98.9663 153.394 98.6948 152.743 98.4087 cv
151.594 97.9048 150.383 97.3813 149.193 96.9839 cv
149.239 96.5386 149.29 96.0308 149.345 95.4712 cv
149.536 93.5356 149.771 91.146 150.044 89.3599 cv
150.435 89.2993 150.807 89.23 151.138 89.1431 cv
151.342 89.0894 151.49 88.9136 151.509 88.7036 cv
152.012 83.0386 152.083 75.7085 149.57 72.9634 cv
148.81 72.1313 147.868 71.7603 146.743 71.8677 cv
141.584 72.3696 139.039 83.4438 138.493 87.6685 cv
138.462 87.9038 138.602 88.1284 138.826 88.2056 cv
139.436 88.4155 140.089 88.604 140.769 88.77 cv
140.723 89.0552 li
139.853 94.4126 139.06 100.8 140.662 102.654 cv
142.141 104.364 149.855 107.598 152.217 107.918 cv
152.24 107.921 152.263 107.923 152.285 107.923 cv
152.315 107.923 152.34 107.904 152.37 107.899 cv
153.176 109.439 155.071 111.131 157.799 111.764 cv
158.292 112.618 159.394 113.602 161.857 113.602 cv
161.948 113.602 162.04 113.601 162.134 113.598 cv
164.634 113.525 166.062 111.863 166.819 110.482 cv
167.856 108.589 168.162 106.275 167.826 105.076 cv
168.993 104.086 169.218 102.259 168.594 101.122 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
129.574 152.133 mo
129.994 152.883 130.273 153.793 130.454 154.684 cv
130.414 154.694 li
128.914 147.604 116.744 149.824 115.744 156.923 cv
115.674 157.074 li
114.844 156.713 114.074 156.263 113.414 155.723 cv
113.054 155.684 li
113.464 151.713 114.604 148.503 115.744 145.583 cv
115.884 145.234 116.054 144.824 116.244 144.364 cv
116.414 144.444 li
118.434 147.414 124.804 147.543 126.744 145.684 cv
126.824 145.694 li
126.804 145.874 126.784 146.024 126.784 146.144 cv
127.174 148.303 127.914 149.144 129.574 152.133 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
155.664 145.284 mo
157.374 146.574 159.523 147.204 161.503 147.833 cv
161.494 147.854 li
159.994 148.194 157.634 150.673 157.634 154.093 cv
157.624 154.423 li
151.534 154.154 144.864 153.394 142.534 152.763 cv
142.384 152.744 li
143.034 149.104 144.773 146.484 145.994 143.694 cv
146.003 143.673 146.014 143.654 146.023 143.633 cv
146.164 143.694 li
146.914 146.253 152.934 146.894 155.684 145.104 cv
155.704 145.104 li
155.674 145.194 155.664 145.253 155.664 145.284 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
157.624 154.423 mo
161.583 154.604 165.293 154.583 167.404 154.173 cv
167.474 155.194 167.404 156.074 167.324 156.404 cv
163.164 157.083 144.804 156.484 142.134 155.114 cv
142.164 154.274 142.253 153.484 142.384 152.744 cv
142.534 152.763 li
144.864 153.394 151.534 154.154 157.624 154.423 cv
cp
.181369 .0870985 .113436 0 cmyk
f
161.503 147.833 mo
163.734 148.543 165.744 149.253 166.664 150.934 cv
167.144 151.814 167.354 153.074 167.404 154.173 cv
165.293 154.583 161.583 154.604 157.624 154.423 cv
157.634 154.093 li
157.634 150.673 159.994 148.194 161.494 147.854 cv
161.503 147.833 li
cp
f
157.434 139.164 mo
156.624 141.894 155.864 144.404 155.704 145.104 cv
155.684 145.104 li
152.934 146.894 146.914 146.253 146.164 143.694 cv
146.023 143.633 li
146.984 141.434 147.894 139.423 148.624 137.414 cv
148.744 137.454 li
150.074 139.503 155.244 140.013 157.324 139.133 cv
157.434 139.164 li
cp
f
115.674 157.074 mo
120.884 159.354 128.674 158.354 130.574 156.574 cv
130.724 156.564 li
130.813 157.644 130.784 158.463 130.744 158.624 cv
129.414 161.704 116.244 162.133 112.914 157.774 cv
112.934 157.053 112.984 156.354 113.054 155.684 cv
113.414 155.723 li
114.074 156.263 114.844 156.713 115.674 157.074 cv
cp
0 0 0 0 cmyk
f
130.414 154.694 mo
130.454 154.684 li
130.594 155.333 130.674 155.984 130.724 156.564 cv
130.574 156.574 li
128.674 158.354 120.884 159.354 115.674 157.074 cv
115.744 156.923 li
116.744 149.824 128.914 147.604 130.414 154.694 cv
cp
f
128.494 139.914 mo
128.604 139.954 li
127.824 142.184 127.023 144.524 126.824 145.694 cv
126.744 145.684 li
124.804 147.543 118.434 147.414 116.414 144.444 cv
116.244 144.364 li
116.904 142.803 117.854 140.694 118.773 138.374 cv
118.824 138.394 li
120.324 140.614 126.164 141.194 128.494 139.914 cv
cp
f
150.244 128.003 mo
150.244 127.984 li
152.984 127.874 157.734 127.374 159.784 126.333 cv
159.824 126.404 li
160.164 128.704 160.074 129.954 159.164 133.263 cv
158.714 134.904 158.054 137.093 157.434 139.164 cv
157.324 139.133 li
155.244 140.013 150.074 139.503 148.744 137.454 cv
148.624 137.414 li
149.793 134.223 150.503 132.024 150.244 128.003 cv
cp
.0797436 .400244 .584497 0 cmyk
f
132.023 129.083 mo
132.054 129.184 li
131.804 132.513 130.994 132.793 129.804 136.454 cv
129.494 137.414 129.054 138.664 128.604 139.954 cv
128.494 139.914 li
126.164 141.194 120.324 140.614 118.824 138.394 cv
118.773 138.374 li
120.184 134.854 121.554 131.883 121.824 128.694 cv
121.833 128.664 li
124.464 129.454 128.753 130.074 132.023 129.083 cv
cp
0 .167361 .439734 0 cmyk
f
140.494 102.093 mo
140.494 104.944 139.744 112.093 138.414 114.374 cv
138.414 114.543 li
136.634 114.543 134.494 114.534 134.494 114.534 cv
135.864 111.854 136.744 104.624 136.664 102.173 cv
136.664 101.973 li
137.984 101.973 139.264 101.973 140.494 101.973 cv
140.494 102.093 li
cp
.498634 .76672 .682032 .673518 cmyk
f
160.634 125.694 mo
160.464 125.923 160.174 126.144 159.784 126.333 cv
157.734 127.374 152.984 127.874 150.244 127.984 cv
149.284 128.024 148.583 128.003 148.304 127.954 cv
146.844 123.784 141.474 116.213 138.674 114.543 cv
138.583 114.543 138.503 114.543 138.414 114.543 cv
138.414 114.374 li
139.744 112.093 140.494 104.944 140.494 102.093 cv
140.494 101.973 li
144.674 101.963 148.124 101.923 149.414 101.854 cv
149.824 106.824 li
151.333 108.753 158.194 115.333 160.634 125.694 cv
cp
f
123.244 101.854 mo
127.023 101.923 132.014 101.963 136.664 101.973 cv
136.664 102.173 li
136.744 104.624 135.864 111.854 134.494 114.534 cv
133.744 119.494 133.994 124.013 132.994 128.734 cv
132.684 128.874 132.364 128.984 132.023 129.083 cv
128.753 130.074 124.464 129.454 121.833 128.664 cv
121.194 128.473 120.654 128.263 120.244 128.074 cv
121.414 117.833 120.744 110.314 123.244 101.854 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
134.354 114.744 mo
130.284 111.503 124.214 111.994 121.384 112.463 cv
121.684 108.914 122.174 105.463 123.244 101.854 cv
127.023 101.923 132.014 101.963 136.664 101.973 cv
136.664 102.173 li
136.744 104.624 135.864 111.854 134.494 114.534 cv
134.484 114.614 134.474 114.684 134.464 114.763 cv
134.354 114.744 li
cp
.498634 .76672 .682032 .673518 cmyk
f
131.674 131.583 mo
129.104 132.793 124.624 132.583 121.454 130.944 cv
121.634 130.194 121.753 129.454 121.824 128.694 cv
121.833 128.664 li
124.464 129.454 128.753 130.074 132.023 129.083 cv
132.054 129.184 li
131.974 130.213 131.844 130.954 131.674 131.583 cv
cp
.0797436 .400244 .584497 0 cmyk
f
166.89 155.958 mo
162.157 156.565 145.848 155.915 142.65 154.792 cv
142.678 154.29 142.732 153.811 142.799 153.344 cv
146.138 154.12 155.315 155.031 161.942 155.031 cv
163.904 155.031 165.639 154.95 166.932 154.763 cv
166.938 155.245 166.92 155.67 166.89 155.958 cv
cp
145.351 146.2 mo
145.611 145.676 145.863 145.157 146.107 144.637 cv
146.543 145.224 147.234 145.714 148.181 146.064 cv
149.136 146.417 150.346 146.619 151.58 146.619 cv
152.963 146.619 154.358 146.346 155.476 145.769 cv
156.893 146.804 158.541 147.408 160.181 147.937 cv
158.698 148.967 157.208 151.19 157.144 153.913 cv
151.502 153.635 145.469 152.954 142.971 152.36 cv
143.465 150.004 144.419 148.079 145.351 146.2 cv
cp
148.817 138.294 mo
150.095 139.479 152.555 140.051 154.686 140.051 cv
155.424 140.051 156.114 139.977 156.71 139.841 cv
156.684 139.929 156.657 140.02 156.63 140.108 cv
155.798 142.882 155.424 144.149 155.266 144.759 cv
153.625 145.738 150.654 145.912 148.527 145.126 cv
147.497 144.746 146.827 144.185 146.641 143.548 cv
146.636 143.533 146.625 143.522 146.619 143.507 cv
146.958 142.737 li
147.625 141.217 148.256 139.758 148.817 138.294 cv
cp
150.752 128.451 mo
153.056 128.329 157.057 127.952 159.399 127.039 cv
159.65 129.291 159.437 130.393 158.679 133.129 cv
158.25 134.678 157.643 136.724 157.051 138.703 cv
155.116 139.457 150.438 138.958 149.213 137.241 cv
150.266 134.258 150.917 132.172 150.752 128.451 cv
cp
148.67 127.488 mo
147.008 123.09 141.886 116.005 139.056 114.207 cv
140.26 111.611 140.936 105.481 140.988 102.472 cv
144.684 102.461 147.528 102.427 148.953 102.375 cv
149.329 106.871 li
149.337 106.967 149.373 107.059 149.433 107.136 cv
149.652 107.417 149.982 107.795 150.396 108.268 cv
152.867 111.091 157.982 116.937 160.083 125.556 cv
158.772 126.767 152.463 127.501 149.251 127.501 cv
148.988 127.501 148.801 127.496 148.67 127.488 cv
cp
133.394 120.848 mo
133.227 123.422 133.068 125.859 132.558 128.375 cv
131.354 128.853 129.87 129.096 128.14 129.096 cv
125.371 129.096 122.394 128.436 120.781 127.769 cv
121.163 124.312 121.339 121.198 121.509 118.182 cv
121.827 112.543 122.103 107.656 123.617 102.361 cv
127.029 102.423 131.568 102.463 136.164 102.473 cv
136.184 105.203 135.301 111.865 134.049 114.308 cv
134.041 114.325 134.041 114.342 134.035 114.36 cv
134.021 114.393 134.005 114.424 134 114.461 cv
133.666 116.665 133.528 118.792 133.394 120.848 cv
cp
128.364 139.119 mo
128.32 139.244 128.281 139.358 128.238 139.48 cv
126.146 140.613 120.841 140.076 119.361 138.253 cv
120.664 134.971 121.884 132.357 122.247 129.299 cv
123.939 129.753 126.072 130.096 128.14 130.096 cv
129.38 130.096 130.495 129.963 131.502 129.727 cv
131.294 131.731 128.729 138.075 128.364 139.119 cv
cp
126.414 145.309 mo
126.409 145.314 126.402 145.315 126.397 145.32 cv
125.539 146.144 123.489 146.569 121.415 146.351 cv
119.321 146.132 117.667 145.349 116.859 144.204 cv
117.016 143.836 117.181 143.453 117.36 143.038 cv
117.846 141.914 118.397 140.63 118.953 139.272 cv
120.283 140.462 122.79 141.088 125.074 141.088 cv
126.071 141.088 127.016 140.961 127.809 140.719 cv
127.133 142.687 126.628 144.257 126.414 145.309 cv
cp
128.158 150.658 mo
128.194 150.72 128.237 150.795 128.275 150.861 cv
127.144 150.172 125.73 149.806 124.102 149.865 cv
120.419 149.991 116.217 152.303 115.349 156.353 cv
114.765 156.06 114.212 155.731 113.727 155.335 cv
113.692 155.307 113.652 155.293 113.613 155.276 cv
114.054 151.58 115.121 148.559 116.209 145.77 cv
116.272 145.608 116.344 145.431 116.42 145.248 cv
117.47 146.372 119.208 147.125 121.311 147.346 cv
121.722 147.389 122.128 147.41 122.525 147.41 cv
124.034 147.41 125.401 147.105 126.363 146.563 cv
126.685 148.112 127.224 149.052 128.158 150.658 cv
cp
129.922 154.799 mo
129.937 154.87 129.966 154.931 130.004 154.985 cv
130.087 155.419 130.148 155.845 130.192 156.245 cv
128.515 157.722 121.306 158.738 116.284 156.769 cv
116.941 153.086 120.778 150.98 124.136 150.865 cv
127.209 150.751 129.379 152.23 129.922 154.799 cv
cp
130.285 158.423 mo
129.911 159.291 128.106 160.022 125.577 160.333 cv
121.13 160.878 115.435 160.005 113.417 157.607 cv
113.434 157.192 113.469 156.796 113.501 156.397 cv
115.972 158.186 119.551 158.907 122.876 158.907 cv
125.938 158.907 128.764 158.306 130.283 157.401 cv
130.307 157.941 130.299 158.325 130.285 158.423 cv
cp
139.988 102.475 mo
139.93 105.563 139.177 111.954 138.017 114.046 cv
137.002 114.045 135.946 114.042 135.256 114.04 cv
136.434 111.03 137.178 105.057 137.163 102.475 cv
137.564 102.475 137.966 102.476 138.367 102.476 cv
138.923 102.476 139.46 102.475 139.988 102.475 cv
cp
166.223 151.171 mo
166.611 151.874 166.802 152.845 166.884 153.759 cv
164.852 154.073 161.624 154.1 158.147 153.958 cv
158.209 150.836 160.324 148.705 161.532 148.368 cv
163.634 149.042 165.413 149.708 166.223 151.171 cv
cp
167.098 150.687 mo
166.018 148.737 163.695 148.001 161.236 147.224 cv
159.492 146.672 157.691 146.103 156.216 145.074 cv
156.403 144.348 157.004 142.343 157.588 140.395 cv
158.301 138.019 159.108 135.326 159.643 133.397 cv
160.477 130.384 160.682 129.094 160.35 126.571 cv
160.642 126.388 160.886 126.194 161.039 125.978 cv
161.121 125.861 161.149 125.714 161.117 125.576 cv
158.997 116.578 153.497 110.292 151.148 107.609 cv
150.805 107.216 150.52 106.891 150.313 106.636 cv
149.909 101.812 li
149.886 101.542 149.657 101.343 149.384 101.355 cv
147.979 101.43 143.86 101.476 138.367 101.476 cv
132.88 101.476 127.23 101.43 123.253 101.354 cv
122.992 101.333 122.828 101.497 122.764 101.712 cv
121.124 107.26 120.84 112.295 120.511 118.125 cv
120.335 121.233 120.154 124.447 119.747 128.021 cv
119.722 128.234 119.836 128.438 120.03 128.53 cv
120.375 128.692 120.805 128.854 121.278 129.01 cv
120.787 133.557 118.188 138.6 116.442 142.64 cv
115.967 143.742 115.559 144.688 115.278 145.407 cv
113.92 148.885 112.581 152.705 112.412 157.758 cv
112.408 157.874 112.444 157.987 112.514 158.079 cv
114.313 160.43 118.771 161.491 122.924 161.491 cv
123.877 161.491 124.814 161.435 125.699 161.326 cv
127.443 161.112 130.477 160.5 131.23 158.74 cv
131.325 158.347 131.404 154.383 130.015 151.89 cv
129.639 151.216 129.311 150.651 129.022 150.155 cv
128.049 148.482 127.561 147.642 127.286 146.142 cv
127.286 145.238 128.407 142.028 129.308 139.448 cv
129.675 138.397 132.334 131.798 132.534 129.431 cv
132.757 129.354 132.987 129.283 133.194 129.192 cv
133.342 129.127 133.449 128.996 133.483 128.837 cv
134.05 126.161 134.216 123.612 134.392 120.913 cv
134.516 119.011 134.643 117.049 134.926 115.039 cv
135.663 115.041 137.207 115.046 138.527 115.046 cv
141.228 116.766 146.384 123.987 147.836 128.118 cv
147.895 128.285 148.038 128.409 148.212 128.443 cv
148.415 128.482 148.755 128.501 149.251 128.501 cv
149.376 128.501 149.554 128.498 149.754 128.493 cv
150.014 134.25 148.263 137.282 146.042 142.334 cv
145.536 143.489 li
145.204 144.25 144.833 144.997 144.456 145.755 cv
143.134 148.416 141.769 151.167 141.636 155.101 cv
141.629 155.294 141.735 155.474 141.908 155.563 cv
143.94 156.605 153.864 157.188 160.935 157.188 cv
163.797 157.188 166.193 157.092 167.407 156.893 cv
167.605 156.861 167.764 156.713 167.812 156.519 cv
167.992 155.787 168.121 152.536 167.098 150.687 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
150.377 70.897 mo
149.397 71.6206 148.101 72.1655 146.98 72.5962 cv
147.265 71.2437 148.137 67.6069 148.641 65.0112 cv
148.87 65.0601 li
149.577 65.1323 151.999 66.3472 151.939 68.436 cv
151.917 69.4282 151.283 70.2339 150.377 70.897 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
139.449 67.2222 mo
139.365 67.3452 li
135.032 64.6108 131.415 62.8677 129.207 62.603 cv
129.072 62.5806 128.94 62.5796 128.818 62.5669 cv
128.823 62.5356 li
131.508 61.0171 136.353 62.2241 140.259 63.0688 cv
140.478 63.1187 li
140.208 64.3579 139.921 65.6216 139.449 67.2222 cv
cp
.826932 .410346 .420874 .105837 cmyk
f
129.207 62.603 mo
131.415 62.8677 135.032 64.6108 139.365 67.3452 cv
141.735 68.8296 144.308 70.6089 146.98 72.5962 cv
140.333 70.3491 135.694 68.3862 131.212 68.5415 cv
131.219 68.8032 li
129.923 70.147 128.676 72.5532 127.516 75.6558 cv
127.378 75.604 li
125.472 74.6187 124.064 71.7876 125.55 68.9233 cv
123.33 66.2056 124.755 62.3296 128.818 62.5669 cv
128.94 62.5796 129.072 62.5806 129.207 62.603 cv
cp
.823453 .403418 .425788 .104005 cmyk
f
150.388 70.9058 mo
151.61 75.9351 151.669 96.688 150.688 106.378 cv
146.448 108.904 127.729 108.636 120.717 105.451 cv
122.252 95.2485 124.638 83.3403 127.516 75.6558 cv
128.676 72.5532 129.923 70.147 131.219 68.8032 cv
131.212 68.5415 li
135.694 68.3862 140.333 70.3491 146.98 72.5962 cv
148.101 72.1655 149.397 71.6206 150.377 70.897 cv
150.388 70.9058 li
cp
.74789 .241123 .31931 .00552377 cmyk
f
151.292 82.5835 mo
151.362 85.3101 151.382 88.2563 151.36 91.187 cv
143.966 93.3276 130.645 91.5942 123.9 88.2915 cv
124.571 85.3794 125.29 82.5923 126.045 80.062 cv
131.795 82.0308 144.547 84.4604 151.292 82.5835 cv
cp
0 0 0 0 cmyk
f
149.015 62.4341 mo
149.026 62.8667 148.868 63.8286 148.641 65.0112 cv
148.137 67.6069 147.265 71.2437 146.98 72.5962 cv
144.308 70.6089 141.735 68.8296 139.365 67.3452 cv
139.449 67.2222 li
139.921 65.6216 140.208 64.3579 140.478 63.1187 cv
140.658 62.3159 140.841 61.5327 141.055 60.6851 cv
144.046 61.2749 145.83 61.397 149.015 62.4341 cv
cp
.0797436 .400244 .584497 0 cmyk
f
151.443 68.4233 mo
151.405 69.9175 149.558 70.9888 147.675 71.7817 cv
147.745 71.4731 147.823 71.1265 147.908 70.7534 cv
148.333 68.8755 148.736 67.0737 149.033 65.604 cv
149.775 65.8413 151.483 66.854 151.443 68.4233 cv
cp
150.219 106.068 mo
145.897 108.276 128.323 108.09 121.269 105.146 cv
122.418 97.5942 126.293 74.6138 131.578 69.1479 cv
131.611 69.1128 131.632 69.0708 131.653 69.0298 cv
135.139 69.019 138.778 70.2798 143.612 71.9644 cv
144.631 72.3188 145.698 72.6919 146.824 73.0718 cv
146.828 73.0737 146.833 73.0728 146.837 73.0737 cv
146.854 73.0796 146.872 73.0776 146.889 73.0815 cv
146.935 73.0894 146.981 73.0952 147.027 73.0903 cv
147.036 73.0903 147.045 73.0942 147.053 73.0933 cv
147.091 73.0874 147.127 73.0786 147.163 73.0649 cv
148.165 72.6802 149.175 72.2446 150.041 71.7212 cv
151.126 77.7261 151.098 97.0308 150.219 106.068 cv
cp
125.666 72.8042 mo
125.383 71.9722 125.211 70.6626 125.999 69.1538 cv
126.091 68.9761 126.069 68.7593 125.941 68.605 cv
124.947 67.395 124.725 65.8472 125.375 64.6597 cv
126.031 63.4595 127.409 62.8911 129.152 63.0981 cv
131.928 63.4302 137.356 66.3501 143.974 71.0317 cv
143.963 71.0278 143.952 71.0239 143.94 71.02 cv
137.357 68.7261 132.601 67.0649 127.458 68.6616 cv
127.194 68.7437 127.046 69.0229 127.127 69.2866 cv
127.209 69.5493 127.486 69.7036 127.753 69.6167 cv
128.611 69.3511 129.456 69.186 130.302 69.0981 cv
129.222 70.4712 128.208 72.5083 127.267 74.936 cv
126.556 74.4478 125.966 73.689 125.666 72.8042 cv
cp
139.323 63.3774 mo
139.882 63.4985 li
139.668 64.4419 139.433 65.438 139.111 66.5903 cv
135.704 64.48 132.841 63.0522 130.739 62.4272 cv
133.17 62.0405 136.517 62.7661 139.323 63.3774 cv
cp
140.959 63.272 mo
141.108 62.606 141.256 61.9526 141.427 61.2651 cv
142.073 61.3882 142.665 61.4907 143.233 61.5903 cv
144.938 61.8872 146.423 62.145 148.501 62.7954 cv
148.359 64.2368 147.478 68.1235 146.933 70.5317 cv
146.831 70.9819 146.739 71.3872 146.66 71.7397 cv
144.286 69.9937 142.049 68.4526 139.994 67.145 cv
140.42 65.6567 140.696 64.4409 140.959 63.272 cv
cp
149.225 64.6216 mo
149.415 63.6069 149.526 62.8335 149.521 62.4292 cv
149.517 62.2144 149.378 62.0269 149.175 61.9604 cv
146.834 61.2017 145.245 60.9253 143.404 60.604 cv
142.71 60.4839 141.979 60.356 141.156 60.1938 cv
140.897 60.144 140.643 60.3013 140.576 60.5581 cv
140.398 61.2407 140.249 61.8823 140.104 62.5239 cv
139.536 62.3999 li
135.677 61.5591 131.308 60.6108 128.634 62.0669 cv
126.784 62.0239 125.262 62.7827 124.497 64.1792 cv
123.697 65.6411 123.888 67.4937 124.969 68.9819 cv
123.661 71.8315 124.894 74.6919 126.9 75.9067 cv
123.429 85.4243 121.028 100.024 120.222 105.376 cv
120.189 105.598 120.307 105.814 120.51 105.906 cv
126.189 108.483 138.911 109.123 146.264 108.089 cv
148.353 107.795 150.009 107.367 150.947 106.809 cv
151.083 106.728 151.172 106.587 151.189 106.43 cv
152.119 97.2407 152.128 76.7349 150.937 71.0972 cv
151.821 70.3843 152.416 69.5239 152.443 68.4478 cv
152.499 66.2358 150.295 64.9243 149.225 64.6216 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
174.743 36.0581 mo
174.619 42.9058 174.089 52.7896 171.538 57.6001 cv
168.246 63.8003 161.609 67.0015 156.853 67.5874 cv
152.215 68.1646 136.986 68.1519 126.563 58.021 cv
124.154 60.0796 118.198 59.4663 115.012 54.605 cv
113.865 52.8481 113.462 51.1167 113.557 49.562 cv
113.734 46.8872 115.425 44.7515 117.471 43.9302 cv
120.701 42.644 124.048 44.5288 126.133 49.1948 cv
128.708 46.6216 131.792 43.4399 133.222 38.6675 cv
133.2 38.5278 li
139.444 37.5005 146.006 34.0259 148.442 31.6841 cv
148.495 31.7202 li
147.441 33.3276 146.596 35.3687 146.344 37.8911 cv
152.5 38.5962 165.684 33.3677 170.554 25.1216 cv
170.713 25.2183 li
172.851 26.7075 174.296 28.8804 174.784 30.6743 cv
174.778 31.98 174.781 33.8569 174.743 36.0581 cv
cp
0 .167361 .439734 0 cmyk
f
118.093 49.146 mo
116.429 50.6157 117.076 53.7983 120.125 55.1587 cv
122.476 56.2075 124.573 55.1343 123.726 52.3345 cv
122.667 48.8296 119.879 47.5679 118.093 49.146 cv
cp
.0797436 .400244 .584497 0 cmyk
f
174.743 36.0581 mo
174.619 42.9058 174.089 52.7896 171.538 57.6001 cv
168.246 63.8003 161.609 67.0015 156.853 67.5874 cv
156.267 67.6587 155.51 67.7251 154.609 67.7534 cv
159.876 66.4595 165.548 63.7144 169.787 57.7827 cv
172.873 53.4683 173.357 43.8589 173.122 27.5171 cv
173.946 28.5591 174.516 29.6733 174.784 30.6743 cv
174.778 31.98 174.781 33.8569 174.743 36.0581 cv
cp
0 0 0 0 cmyk
f
170.885 25.354 mo
167.291 36.48 151.632 41.6538 143.126 40.812 cv
143.267 39.5454 143.417 38.3979 144.056 37.0874 cv
141.52 38.9644 136.34 41.2554 131.849 42.019 cv
132.391 40.9888 132.857 39.8833 133.222 38.6675 cv
133.2 38.5278 li
139.444 37.5005 146.006 34.0259 148.442 31.6841 cv
148.495 31.7202 li
147.441 33.3276 146.596 35.3687 146.344 37.8911 cv
152.5 38.5962 165.684 33.3677 170.554 25.1216 cv
170.713 25.2183 li
170.767 25.2642 170.83 25.2983 170.885 25.354 cv
cp
.0797436 .400244 .584497 0 cmyk
f
173.347 17.1284 mo
179.729 22.7134 177.936 32.2856 175.003 36.0562 cv
174.743 36.0581 li
174.781 33.8569 174.778 31.98 174.784 30.6743 cv
174.296 28.8804 172.851 26.7075 170.713 25.2183 cv
170.554 25.1216 li
165.684 33.3677 152.5 38.5962 146.344 37.8911 cv
146.596 35.3687 147.441 33.3276 148.495 31.7202 cv
148.442 31.6841 li
146.006 34.0259 139.444 37.5005 133.2 38.5278 cv
133.222 38.6675 li
131.792 43.4399 128.708 46.6216 126.133 49.1948 cv
124.048 44.5288 120.701 42.644 117.471 43.9302 cv
115.425 44.7515 113.734 46.8872 113.557 49.562 cv
113.366 49.5591 li
110.583 47.9253 107.224 45.3286 105.002 41.5073 cv
106.637 40.1099 108.672 38.9282 111.963 37.8872 cv
109.157 35.8745 105.019 31.5981 103.079 28.1245 cv
106.001 25.6099 110.277 22.8569 117.098 20.5034 cv
114.13 19.6294 110.296 17.3345 108.074 14.8892 cv
110.478 12.2993 116.518 9.63232 123.156 9.43311 cv
121.033 8.11377 118.768 5.16943 117.565 2.896 cv
126.54 -.649902 143.874 .132324 154.52 2.71436 cv
166.109 5.5249 173.376 11.7251 173.347 17.1284 cv
cp
.373144 .782101 .665248 .350225 cmyk
f
165.267 8.86084 mo
168.277 10.8062 169.918 12.8101 170.781 14.522 cv
166.641 20.7866 144.681 17.729 133.848 17.3618 cv
124.867 17.063 118.778 17.7974 115.063 19.7378 cv
113.957 19.2515 112.808 18.6304 111.731 17.9116 cv
123.694 9.04541 152.386 12.397 159.625 11.272 cv
162.903 10.7642 164.594 9.89404 165.267 8.86084 cv
cp
.341833 .684718 .553277 .151247 cmyk
f
173.347 17.1284 mo
173.356 15.5015 172.706 13.811 171.477 12.1519 cv
170.146 10.3608 168.147 8.62939 165.562 7.07764 cv
162.585 5.29053 158.858 3.77002 154.52 2.71436 cv
143.874 .132324 126.54 -.649902 117.565 2.896 cv
117.612 2.98193 117.661 3.07764 117.719 3.16357 cv
128.1 .890137 148 1.50732 159.326 5.89697 cv
161.736 6.83057 163.69 7.8335 165.267 8.86084 cv
168.277 10.8062 169.918 12.8101 170.781 14.522 cv
171.522 15.9927 171.702 17.2515 171.713 18.064 cv
175.167 20.4819 178.072 26.1499 175.53 35.2974 cv
178.125 31.1245 179.337 22.3667 173.347 17.1284 cv
cp
0 0 0 0 cmyk
f
175.265 30.5444 mo
174.708 28.5122 173.163 26.4028 171.208 24.9712 cv
171.475 24.4917 171.716 24.0024 171.923 23.5054 cv
172.029 23.2505 171.909 22.9585 171.654 22.8511 cv
171.398 22.7466 171.106 22.8657 171 23.1216 cv
167.462 31.6069 153.786 37.8452 146.901 37.438 cv
147.484 33.1157 149.829 30.4106 151.733 28.8872 cv
151.949 28.7144 151.983 28.3989 151.811 28.1841 cv
151.638 27.9683 151.323 27.9331 151.108 28.106 cv
150.298 28.7544 149.22 29.7935 148.242 31.2271 cv
148.188 31.2505 148.135 31.2808 148.09 31.3247 cv
145.021 34.2808 136.135 38.4731 129.4 38.3149 cv
129.916 33.6528 133.534 28.3384 137.365 26.7319 cv
137.62 26.6245 137.74 26.3315 137.633 26.0776 cv
137.526 25.8237 137.235 25.7046 136.979 25.8091 cv
132.701 27.603 128.673 33.6548 128.357 38.7622 cv
128.35 38.896 128.395 39.0259 128.483 39.1255 cv
128.571 39.2251 128.695 39.2847 128.829 39.2925 cv
129.719 39.3433 130.63 39.3228 131.552 39.2417 cv
131.878 39.2134 132.206 39.1694 132.534 39.1265 cv
131.131 43.2495 128.445 46.1606 126.278 48.3394 cv
124.101 43.9683 120.698 42.105 117.285 43.4663 cv
115.472 44.187 114.014 45.8062 113.384 47.7964 cv
113.276 48.1382 113.203 48.4858 113.146 48.8364 cv
109.878 46.8257 107.354 44.4048 105.651 41.6187 cv
107.352 40.2446 109.366 39.2319 112.114 38.3638 cv
112.295 38.3071 112.427 38.1528 112.457 37.9653 cv
112.487 37.7788 112.409 37.5903 112.254 37.48 cv
109.637 35.6069 105.711 31.604 103.72 28.2358 cv
107.254 25.271 111.687 22.8931 117.255 20.9722 cv
117.461 20.9009 117.597 20.7046 117.593 20.4878 cv
117.587 20.269 117.442 20.0806 117.233 20.019 cv
114.366 19.1772 110.886 17.061 108.765 14.8979 cv
111.222 12.5718 116.902 10.1206 123.166 9.92822 cv
123.404 9.93994 123.577 9.771 123.634 9.55908 cv
123.691 9.34619 123.603 9.12061 123.415 9.00342 cv
121.548 7.84424 119.494 5.27979 118.276 3.15479 cv
127.189 -.0825195 143.813 .626465 154.4 3.19678 cv
166.544 6.14404 172.872 12.4331 172.846 17.1226 cv
172.846 17.2681 172.908 17.4058 173.017 17.5015 cv
178.672 22.4507 177.577 30.7153 175.257 34.7515 cv
175.27 33.6235 175.275 32.5991 175.278 31.7495 cv
175.283 30.6802 li
175.283 30.6343 175.277 30.5884 175.265 30.5444 cv
cp
171.093 57.3687 mo
167.972 63.2485 161.659 66.4888 156.787 67.0913 cv
150.596 67.8599 136.387 66.8726 126.915 57.6655 cv
126.73 57.4878 126.439 57.4751 126.242 57.644 cv
125.276 58.4644 123.649 58.8062 121.889 58.5503 cv
119.299 58.1763 116.946 56.6372 115.434 54.3276 cv
114.101 52.2915 113.711 50.0796 114.338 48.0981 cv
114.877 46.3911 116.118 45.0063 117.654 44.394 cv
120.689 43.1929 123.758 45.106 125.672 49.3989 cv
125.739 49.5493 125.875 49.6567 126.037 49.687 cv
126.197 49.7183 126.365 49.6665 126.482 49.5493 cv
128.871 47.1646 132.129 43.9009 133.655 38.9517 cv
138.832 38.0356 144.007 35.5396 147.017 33.4487 cv
146.458 34.7095 146.016 36.1538 145.847 37.8413 cv
145.82 38.1128 146.016 38.356 146.287 38.3882 cv
147.088 38.48 147.983 38.481 148.946 38.396 cv
155.84 37.7935 166.207 32.8169 170.676 25.8237 cv
172.719 27.3403 173.876 29.3247 174.282 30.7437 cv
174.278 31.7466 li
174.271 33.4966 174.26 35.9507 174.171 38.6782 cv
173.835 38.1196 173.4 37.937 173.067 37.9087 cv
171.597 37.7935 169.832 39.9946 167.639 43.3511 cv
167.089 44.1929 166.696 44.3882 166.557 44.3618 cv
166.424 44.3442 166.207 44.0864 166.042 43.5659 cv
165.942 43.2485 165.606 43.0728 165.289 43.1733 cv
164.973 43.2739 164.798 43.6108 164.897 43.9263 cv
165.285 45.1528 165.925 45.4868 166.394 45.5503 cv
166.497 45.5649 166.6 45.5679 166.704 45.5581 cv
167.356 45.5015 168.007 44.9819 168.643 44.0083 cv
171.48 39.6646 172.571 39.0649 172.965 39.104 cv
173.074 39.1138 173.171 39.3003 173.219 39.4106 cv
173.351 39.7153 173.705 39.853 174.008 39.7231 cv
174.058 39.7017 174.095 39.6665 174.135 39.6343 cv
173.886 45.9399 173.178 53.439 171.093 57.3687 cv
cp
173.843 16.8989 mo
173.678 10.9517 165.836 4.94385 154.636 2.22607 cv
143.688 -.432129 126.331 -1.10889 117.376 2.42627 cv
117.244 2.479 117.141 2.58447 117.091 2.71729 cv
117.042 2.85107 117.051 2.99951 117.118 3.12549 cv
118.105 4.99658 119.869 7.4292 121.737 9.00732 cv
121.676 9.01221 121.615 9.01709 121.554 9.02295 cv
115.314 9.56885 109.958 12.1206 107.703 14.5483 cv
107.526 14.7397 107.525 15.0337 107.699 15.2251 cv
109.58 17.2915 112.723 19.3716 115.588 20.5063 cv
110.358 22.4429 106.149 24.8188 102.752 27.7456 cv
102.573 27.9009 102.527 28.1606 102.643 28.3677 cv
104.452 31.6128 108.145 35.5288 110.903 37.7124 cv
108.309 38.6147 106.363 39.687 104.678 41.1274 cv
104.495 41.2847 104.449 41.5503 104.57 41.7583 cv
106.432 44.9673 109.289 47.7261 113.058 49.9595 cv
113.047 51.603 113.561 53.2925 114.597 54.8755 cv
116.267 57.4253 118.873 59.1255 121.747 59.5396 cv
123.587 59.8071 125.335 59.4858 126.527 58.6792 cv
137.606 69.1567 153.081 68.4272 156.324 68.144 cv
156.643 68.1157 156.843 68.0923 156.91 68.0845 cv
162.039 67.4497 168.687 64.0356 171.976 57.8384 cv
174.521 53.0415 175.09 43.3296 175.229 36.4946 cv
175.292 36.4634 175.351 36.4194 175.396 36.3599 cv
178.378 32.5269 180.367 22.8003 173.843 16.8989 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
160.521 57.9263 mo
154.92 60.4624 148.563 58.4897 146.766 55.895 cv
146.855 55.8804 146.938 55.8765 147.002 55.8872 cv
147.274 55.9282 147.532 55.7456 147.575 55.4712 cv
147.619 55.1987 147.433 54.9429 147.16 54.8989 cv
146.581 54.8071 145.804 55.0698 145.316 55.5259 cv
144.979 55.8384 144.812 56.2183 144.845 56.5923 cv
144.869 56.8677 145.111 57.0708 145.386 57.0474 cv
145.662 57.0229 145.865 56.7808 145.841 56.5054 cv
145.838 56.48 145.855 56.439 145.886 56.3901 cv
147.49 58.8276 151.798 60.4292 156.271 60.0376 cv
157.842 59.8999 159.434 59.5171 160.934 58.8374 cv
161.185 58.7231 161.297 58.4272 161.183 58.1753 cv
161.069 57.9253 160.773 57.812 160.521 57.9263 cv
cp
f
119.508 47.9878 mo
118.107 48.0269 117.046 48.9751 116.899 50.1929 cv
116.866 50.4673 117.062 50.7163 117.335 50.7495 cv
117.61 50.7856 117.859 50.5874 117.892 50.312 cv
117.98 49.5825 118.675 49.022 119.565 48.9858 cv
120.875 48.9106 122.669 49.9331 123.418 53.062 cv
123.478 53.3071 123.706 53.4653 123.948 53.4438 cv
123.972 53.4419 123.997 53.438 124.021 53.4312 cv
124.29 53.3677 124.456 53.0972 124.391 52.8296 cv
123.498 49.0991 121.202 47.8892 119.508 47.9878 cv
cp
f
149.953 43.814 mo
152.473 46.3862 153.855 47.3286 154.985 47.23 cv
155.016 47.2271 155.046 47.2231 155.076 47.2202 cv
156.031 47.0884 156.566 46.2446 157.074 45.3169 cv
157.233 45.0269 157.126 44.6616 156.836 44.5024 cv
156.545 44.3433 156.181 44.4507 156.021 44.7407 cv
155.605 45.5005 155.275 45.981 154.912 46.0317 cv
153.924 46.1343 151.583 43.7632 150.81 42.9741 cv
146.448 38.52 141.906 39.4995 139.343 41.6938 cv
139.091 41.9097 139.062 42.2886 139.277 42.5405 cv
139.492 42.7915 139.871 42.8208 140.123 42.606 cv
142.293 40.7505 146.17 39.9507 149.953 43.814 cv
cp
f
153.523 47.6118 mo
153.416 50.2671 151.734 52.355 149.769 52.2749 cv
147.803 52.1948 146.296 49.9771 146.404 47.3208 cv
146.513 44.6655 148.194 42.5776 150.16 42.6577 cv
151.841 44.7622 152.018 44.9106 153.32 45.729 cv
153.477 46.311 153.551 46.9478 153.523 47.6118 cv
cp
f
150.669 46.4751 mo
150.379 47.5786 149.48 48.2993 148.664 48.0835 cv
147.846 47.8687 147.418 46.7983 147.709 45.6938 cv
148.001 44.5913 148.899 43.8706 149.716 44.0864 cv
150.533 44.3003 150.961 45.3706 150.669 46.4751 cv
cp
0 0 0 0 cmyk
f
172.721 45.9106 mo
172.837 48.5659 171.644 50.7739 170.056 50.8442 cv
168.468 50.9136 167.086 48.8149 166.97 46.1606 cv
166.95 45.6978 166.969 45.2485 167.024 44.8208 cv
168.421 43.0669 168.348 43.1548 169.636 41.2271 cv
171.223 41.1577 172.605 43.2544 172.721 45.9106 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
170.406 45.7905 mo
170.448 46.7544 169.919 47.5601 169.225 47.5913 cv
168.531 47.6216 167.933 46.8638 167.891 45.8999 cv
167.849 44.936 168.378 44.1294 169.072 44.0991 cv
169.766 44.0688 170.364 44.8267 170.406 45.7905 cv
cp
0 0 0 0 cmyk
f
161.215 53.4458 mo
161.929 52.3745 163.37 52.2534 163.208 53.272 cv
163.046 54.2896 160.772 54.1118 161.215 53.4458 cv
cp
.0797436 .400244 .584497 0 cmyk
f
132.53 39.1284 mo
132.162 40.2046 131.708 41.2085 131.196 42.1265 cv
130.491 42.2183 129.804 42.2788 129.162 42.2847 cv
129.135 41.2837 129.367 40.269 129.775 39.3101 cv
130.358 39.3188 130.958 39.2964 131.556 39.2446 cv
131.875 39.2163 132.202 39.1685 132.53 39.1284 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
113.383 47.8013 mo
113.272 48.1421 113.202 48.4897 113.142 48.8354 cv
109.874 46.8228 107.354 44.4038 105.655 41.6216 cv
107.352 40.2485 109.371 39.228 112.116 38.3647 cv
112.292 38.3101 112.428 38.1479 112.462 37.9644 cv
112.486 37.7808 112.409 37.5864 112.259 37.48 cv
109.7 35.6558 105.899 31.7925 103.862 28.4771 cv
107.262 30.2778 111.263 31.2534 114.147 31.3013 cv
116.658 28.4419 118.765 27.1733 123.54 25.8726 cv
120.888 28.4937 120.435 30.5405 120.123 34.0815 cv
125.205 28.146 131.459 26.3237 136.062 26.2622 cv
132.148 28.4624 128.66 34.0171 128.362 38.7612 cv
128.354 38.8921 128.395 39.0288 128.484 39.1216 cv
128.573 39.2241 128.699 39.2837 128.83 39.2925 cv
129.143 39.3149 129.455 39.3188 129.775 39.3101 cv
129.367 40.269 129.135 41.2837 129.162 42.2847 cv
129.804 42.2788 130.491 42.2183 131.196 42.1265 cv
129.757 44.7222 127.875 46.7339 126.279 48.3394 cv
124.1 43.9731 120.694 42.1021 117.29 43.4634 cv
115.476 44.1851 114.011 45.8081 113.383 47.8013 cv
cp
.433509 .775906 .674159 .526574 cmyk
f
135.764 105.104 mo
136.824 106.184 137.833 107.263 137.654 108.204 cv
137.404 109.454 136.833 110.704 134.914 110.883 cv
133.924 112.394 129.184 115.034 126.424 113.923 cv
123.674 112.814 121.654 108.204 121.003 103.704 cv
122.753 102.444 125.154 100.074 126.094 98.9438 cv
126.224 99.0532 li
128.724 98.9136 132.224 98.2739 133.984 99.6333 cv
135.744 101.003 138.124 103.244 136.384 105.003 cv
135.764 105.104 li
cp
0 .167361 .439734 0 cmyk
f
121.014 91.9536 mo
122.753 93.1333 124.043 95.2437 126.474 98.4233 cv
126.424 98.5337 126.284 98.7134 126.094 98.9438 cv
125.154 100.074 122.753 102.444 121.003 103.704 cv
120.874 103.793 120.753 103.874 120.634 103.954 cv
118.784 102.463 112.384 95.2837 111.944 92.4038 cv
111.503 89.5132 117.833 82.2437 119.954 79.8433 cv
120.063 79.7339 li
122.114 81.7935 124.604 83.604 126.694 84.5933 cv
126.604 84.7739 li
125.014 86.5737 122.354 90.2534 121.104 91.8237 cv
121.014 91.9536 li
cp
.433509 .775906 .674159 .526574 cmyk
f
133.273 69.1538 mo
137.734 71.4233 131.793 80.3237 128.063 85.1538 cv
127.634 85.0132 127.174 84.8335 126.694 84.5933 cv
124.604 83.604 122.114 81.7935 120.063 79.7339 cv
119.474 79.144 118.924 78.5239 118.434 77.9038 cv
121.844 73.8237 129.284 67.1138 133.273 69.1538 cv
cp
.74789 .241123 .31931 .00552377 cmyk
f
126.694 84.5933 mo
126.604 84.7739 li
126.094 85.354 125.474 86.1235 124.824 86.9536 cv
122.164 86.2837 119.273 84.6538 117.454 82.7632 cv
118.454 81.5435 119.364 80.5132 119.954 79.8433 cv
120.063 79.7339 li
122.114 81.7935 124.604 83.604 126.694 84.5933 cv
cp
.498634 .76672 .682032 .673518 cmyk
f
134.868 110.384 mo
134.717 110.398 134.58 110.48 134.497 110.607 cv
133.617 111.941 129.099 114.464 126.615 113.462 cv
124.346 112.547 122.283 108.644 121.544 103.918 cv
123.124 102.737 125.167 100.773 126.238 99.5493 cv
126.244 99.5493 126.25 99.5522 126.256 99.5513 cv
126.721 99.5259 127.219 99.4829 127.735 99.439 cv
129.92 99.2515 132.396 99.0376 133.675 100.033 cv
135.481 101.437 136.427 102.62 136.487 103.546 cv
136.513 103.95 136.363 104.31 136.028 104.649 cv
136.026 104.651 136.025 104.653 136.024 104.655 cv
136.012 104.643 136 104.631 135.988 104.619 cv
135.6 104.221 135.211 103.826 134.885 103.438 cv
134.708 103.228 134.392 103.198 134.181 103.377 cv
133.97 103.555 133.942 103.871 134.121 104.083 cv
134.461 104.488 134.867 104.903 135.273 105.318 cv
136.223 106.289 137.298 107.389 137.159 108.107 cv
136.872 109.583 136.187 110.263 134.868 110.384 cv
cp
112.437 92.3237 mo
112.282 91.3081 113.088 88.4116 120.087 80.4487 cv
121.898 82.2056 124.016 83.7651 125.948 84.772 cv
124.918 85.979 123.581 87.7466 122.385 89.3276 cv
121.813 90.0845 121.298 90.7642 120.892 91.2837 cv
120.083 90.8071 119.174 90.4819 118.022 90.3345 cv
117.748 90.2954 117.498 90.4937 117.462 90.7671 cv
117.427 91.0405 117.621 91.2915 117.895 91.3267 cv
120.876 91.7085 122.082 93.3423 124.484 96.5972 cv
124.904 97.1665 125.357 97.7808 125.861 98.4438 cv
125.161 99.3315 122.575 101.978 120.663 103.327 cv
118.541 101.436 112.829 94.8804 112.437 92.3237 cv
cp
131.604 69.2759 mo
132.145 69.2759 132.631 69.3843 133.05 69.5972 cv
133.718 69.938 134.122 70.4546 134.285 71.1772 cv
134.84 73.644 132.511 78.5132 127.889 84.5649 cv
125.172 83.5698 121.443 80.7534 119.083 77.9126 cv
122.162 74.3257 127.826 69.2759 131.604 69.2759 cv
cp
136.709 105.372 mo
136.718 105.364 136.73 105.361 136.739 105.352 cv
137.279 104.807 137.53 104.177 137.485 103.482 cv
137.405 102.24 136.359 100.854 134.29 99.2437 cv
132.701 98.0083 130.018 98.2388 127.649 98.4429 cv
127.406 98.4634 127.185 98.4771 126.952 98.4966 cv
126.971 98.3647 126.956 98.231 126.873 98.1216 cv
126.285 97.354 125.765 96.6489 125.289 96.0034 cv
123.939 94.1743 122.911 92.8062 121.716 91.853 cv
122.121 91.3354 122.625 90.6685 123.183 89.9302 cv
124.375 88.353 125.846 86.4087 126.876 85.2261 cv
127.232 85.3813 127.583 85.5249 127.914 85.6313 cv
127.964 85.647 128.016 85.6548 128.066 85.6548 cv
128.219 85.6548 128.366 85.5854 128.462 85.4604 cv
132.016 80.8511 136.079 74.5942 135.26 70.9575 cv
135.031 69.9409 134.44 69.1831 133.504 68.7065 cv
132.943 68.4204 132.304 68.2759 131.604 68.2759 cv
127.041 68.2759 120.742 74.3647 118.049 77.5854 cv
117.897 77.7671 117.894 78.0308 118.041 78.2163 cv
118.447 78.728 118.905 79.2339 119.383 79.7349 cv
113.799 86.0786 111.126 90.3677 111.449 92.4751 cv
111.92 95.5493 118.429 102.818 120.314 104.343 cv
120.402 104.415 120.509 104.448 120.617 104.45 cv
121.35 108.662 123.314 113.209 126.241 114.39 cv
126.771 114.603 127.353 114.697 127.959 114.697 cv
130.779 114.697 134.125 112.679 135.188 111.354 cv
137.613 111.013 138.008 108.98 138.14 108.298 cv
138.331 107.321 137.603 106.337 136.709 105.372 cv
cp
.57763 .759823 .688411 .808469 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.1
%%For: (WINDOWS) ()
%%Title: (Boy_Idle.eps)
%%CreationDate: 12/15/2014 11:28 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6qfCN3Q6?+;X8G3OQW,:.NHror1k;'pXWg(%:3N0u`OReXRbDf0&fka3MdBPt\XC5343r?U+9fG&;Lr6(A@'\I5(3:?qt(\3
%bdZ1?Ve6g\bd[WMl_L&`16n8<[=Jk]b84N5nS`&)DEc*`VJ0JF!c'.3\kGbqSkRV?_P2@F=*WJ/HZK()F)gljjn<6Vq/`l*hd1d2
%l_O?)I51P@r<rP/T)>5*q>'`nao$O7ngiKOqkeVM3]l6#[[/)f<tdYiW%`Qk2uih4g]\/FB.<lCioL%6FRoUi^H)8T,Q.P/IOX1&
%QT(D7/*JcOeR4H,Du\/`%X[g!8MVlU,W5)+/SeR%oH?fT'L($'Z2*J(s86m.bLu'ZbOsE=p>Z+$L$d*uZ.u*5Rnmi!!M0E)Ja5u(
%EO+60?XKF4EE=O%(4<dkC4]1XJ!9=c@EE/nb>&\])*/rXIl!??d-DEA92Mbf#sY>OCm+C2Ie[?&cUbTu9dY,d5GrOSkr\r=^8+LJ
%J:H:#r,fZeg<d4)8M\7&VZ4Ld=rF2t._\MRJ=iCFb3F"^D3@XF(Dus#2g?%ir8VVbgKu?.[TT5?/d2o#QWJ+NrYoH3:D/&F'`WE+
%^:F1=`Ru!Ac;IfiZgmGVFE>`+/[qq/f/WRLK^`8_r3X39ATJ$r]fj-ManY1tE_lN!qW$o7n!hMHg0jmQqbN]>T=4bp*IUqb0`%M3
%5UKJ?E4%`2-CYiN#IC@'ir+,2[Th_or;^O-rT2]cB,?&G"_4(8b,#L-gV7$cSU(\sdn.Ms1luDd]P;jd:LW$[=.9Tb\k1d;htiXH
%`kHjGchQbBouD7mlSF2u>"o>cTsZreSA/1-YLZO?Ufe-?o?YPVpFBER$2e?P^;Epe?X;]=dqEH]iW!&8^LeA_RUuE_C.5W'D:W/R
%C[mn%=Nt$NB'j?0NRfu<WGAS6_]R]@f3#/XYo8).GHB@P=KQ<,eu$8jRKi)Z<qtuqAM)`P>%*-8MJqKLF-jF-r(R))Dq3aO$uX,c
%YSrN0hm")[91R1?iLoZ\lenH*S]7hji1"^kpl=6N;#$&F0sJ0%*#--9f^T%Zj1+TX$rcQp<l:Wi44[Q:YY8\d3mWn"=>HiEST!W;
%o)Q;tgcKsKF^Ct<X7.33__L.42T6?O,Nmrpip[%N__LFM1MHPq*$`2X2]Nt#!PV4iYmB6l)NGEeGqp7C(qA?'I&>m)F^?doViJC1
%YfCJe4G=6*Sd.NOkH=?=\S[lqY+gDJ#7%1eM?B[/H0"lZNY10R)WNl=Ol=/9j#bi.!Q+5]jgpTlI/FDmF@Bh2)T=f'4JN<0Ke="/
%>D>?9O($@1B&HPLF^fH?gjQ9$cfaH$!WJYiV";5q)7+VV)*luqMZ+HXrT`Qmi-&D>I[qplr&S4Zf/;J@O`'pGUat?K[_gbE#51X)
%8[j&.BQpl-qIFK2D`&l85Q"kZV3+"#M=g!2kJ'.Bn,@h9KA2<9Mu<VQ=-id?s3H0p`S[`=4h[#nfo1FOs7>,qcJSU#r!0\a(0or#
%kJ-,A^\e',06)J.kA_"%S`c?SlSneba-c!`?E=nK6?&(>=g_G#C:,NCr%c=eE`$#Qi"Nem):U(-`e&*kTCY'D02hY\TITbP2)Fmj
%!cR*;r-`28;2eeeWa*V@e@J[V9D:!)kBrlI/\V&]iHDAaD3pP=@RE*l/^NT:+G8KE'DSCR/bI1`kOH+EK#c`ldKFL(f#.OX&Mo%A
%UP@4I.P7oiDJrUb/$(;JPcF*hga)H?heI``:Wm%i7gNP:UdC0?M-\NXqgbF!K??h*1\;ea["c;VSd/W-b6/']Kl>nPLUHb9FWS.a
%?#"<cnYbeR_LB$c'SLV]8Ilei+n58\eSlYd4P+Vg/EuC!L(_3O4H/OF'osG#c1+7-WSY]0M3+nPq.Gs7,@`\sU[N\c$25_t"nMP/
%_#F_mAI+*=>Ui:Vmmaj)VEG?'d-^cj,D9c5-LRK.>YV\#jiV_IlpK.n$eOML78oasT'b>m1'FOO1`&+c!o6S[#c1\n$mAdXlb/9X
%&R$dm,N^Lk`abeC0,*N,TQ8?(P:dat&:&csXkO"*C5-s,C$eD66-abO3&658+/Ip55AFdIns)`!G/_10;uGgVf)j:hVJ#b["ZA4+
%NkPpI+grW4i8aUsj_c3;eiu`m1]N>S9H[,0;oFZk`1h>ppiH<5Bd02XD^%Ru),^=<\duUVA_s\U$p"o'Y2X@bVWE<Rk=r)EIA)j[
%R&1N45H1WO)L7ns("OpMm*r;q4Z2cZ[4Iab=Vs)X,QiNtC^?=80jfRh8P>fF6Jl96mt$E,2t[Rqm&He_e4dcs>=3Agrr=(N%9POG
%1LpE%ib/'+_e1FQ?EO,mADTZZ@ftFb+C^2_\0;bi3mb0oYntK=P:!,D/V3[9,nMKh8:Ld>Pb9m6Zc(QWE=KaMa<X-^/F",!"uT$g
%WT-=HV3^f?SO!;lM5maiHk%3:@:+%k%Yk-^a80=;8@Tt\E*EuG\)7h@@Re-9BGd7KIeoSd;LBEX&tg*Sk<s5%m)M[E'Lo0^SqKnd
%B)uHQRAARMa8L-<Pd4\:1dD0PMK)lAT`EDOiGYSD4hPoLFR3SFj=W2I85S>X1hTZWDrKBb4s<,J4fIoWb\$o]m":>#rB+D/p_\;/
%P+Kt$dIUH[.N&Gin.c-GXp9UeejcBcZ7\LnV@55V+0bk36]U&9'h`k[_NJ%JP<<JC$KSHJgjhMf60;,XG`[1q(d/FeKf<nkkcE3r
%q)JXt"_:s0J9^KpM9qfi5V""oN(F0gPmnq>M@*&U&AndQQhmG5ZO/b3FGi)`E/%jKJJc<_QrJ8KiYfR_^)$u,-IafcLi#,Kd^geL
%\4V.r@^c'B[&h:j3u,kp`^]9`d)NSLdEk,oaN/Vb+GE6(+a@.YG<sM#p&T0)(2(a^j<f/<=Y/Yl0dF[]BN#b<2PHa""<o!LG**&2
%-7HQ<`.ii-K(H^4DF%.4@5RMh&9)L]SSKJ$!>qIc#0']`\'Pf+n"gKp'd8uh^I7T0bu.#8Wm$L0::P0ZTICNb.r9gK9Yr1:\h9,5
%cr?Ys$kYjA)JV?g&BSB+6n2mcPqYd#2B(lGMOI['$ZV9R\QQpLS,ld],1B`D-s9kN4R+V4+D*A?<C*D*,IRam?0`3LL`KF%$J!Y)
%8R*8FlZ$$T`MeE!K/m$?l-bi.BMC=h(*/H3q<?-"&<a,TiY+rb@(N/!>qcbo7)`=^hWcOA0gAq#H8G.-,RXI-W'j$+dM4ZuZW&iY
%KK9Z%^3s+7=D>lQ.?)Du0F&=Cs3Li^$T%/1;T,.2(FP5AW^0#I/(?#9#3(#/*KopJH;@0NCIqUE]GiR+2&\>/,Y>RXGUV;lZnVX$
%<TS-H*k.M:g/7bX\!MImJ@]2L+kA4JOt-UVP/drP2M54,VCG`"(C\/m7?M!fpoP=T#o@*JPR4VR)sN]`R)(F6`G`\ZRB1@k$p&5G
%T9&Bnn<jU.48rEh6&$>TqP&f-fJ1)L-VKo.jHid/SMY#Ro+h7#:G6>,_3Am#:-j)jghj2^9pZ83)Z>U6.V@3+N5d-A;"AJUJDQk4
%8nDZ?\8M@^L3t03bO&Dc@@Q=X?IUm,`Yk!p]i_m;M]*PtV['][lk>]<7%mL2't&^CQd#D?3,paeBf2r*\J2&(?ltVd-tHHJ,+M4"
%(H+HVCu/'XME9%IB,Rpb&RAP*k=-%tF(^ggjb`*Ac+aVLoK9uV=p5d&8`TrRn;fBCK(`s@KTq1j"#RNdO#1jqN(;4Z23"s3G+u@F
%Eqk&/1k3>`O*DjQ$U$a)QmaoY"Ym'3N`28nUJ"HoEtoQl;df\UFZJDn@YYPr[4aY0Pp!A,&0D6iOX[WV>[Y/4EgFq#X,]&;c6FfP
%8JtC(UHBu@>0rNDO@Y5U<iB1[@HC+dc75+^=:D[^Ufpb@jE13&)T:`:Z=MXaKJk?gaX,_#P$eG+TeqU:aCc7BG^.0&=AhShB;0oP
%@^/=[RjC`%UuO%l#%.a/<l@QF>aZs1-#6"NQDdYg+0Z?KEU521.;"Fh[]<YRB,fFW(fcteP.7Yk?ttn&QK</k)=cLY.(r5m:a"(^
%bLS4UAYb,2PL@TUPsp.H?`4,CDJ'.`TN*1*'(q2oB7<#rS4XJOOub]rWB%$F%=q'3B/Dm=[]3/i_2@`^*$SU(N5eSVNoYSNW!eh6
%)=Ch+nPig/JjL>8$)l?T((WN;.Tpei3R=rK9/G4fY"CQ:i#FGYa].fH+r8BnHQZaV#Cr[iPce+?VR;3)PaQ12]#LH\8@4BG=Ks$h
%^D#0qYuM]s+MmO6VNd`/)H0"FHVd9k$DlqVMplR/Q,t.i-C%>aot6;$.ou2g"PoZUq!)tRf\GH0c!$S*im8Ld8tl*pfIi87G/dZE
%3"R)CED>^p5M>X^?$2].c.k1O#&^/e"]&35;kSubkP1ZL@`0`go`N1FE_Z>6o99jBF7-!,h?n6WloI,rK;+3teWbi$&*?#KKD<F!
%$-YT31J4QN6f&?LSB_Qo`"6j/&fR6sL1iqD_2M6.=0/'K'5'IYSBWPXL'M>FZM'R,/B"4t:7SV&%j[_UmC9GLl45QZk?MC!baPP@
%(25IV/n4a=<[405)/IT$-'d66&oT/rU#G:2a"hQ\'*,/YS:;hgV\P:5OFf"(+psZ6Ki!Vj@S*5K"l660r_L`=%=Nt\-!_u8:K]#X
%_s4C?TOD&i&dKPDL:N67YS+:,?SZ?;A2reK!0Dn#1e3D%3P^,\?;0/8`&&_o'`:+:n4+-#W[5%K$K_.68V9QJ;jJ5&eauko3l?2m
%Z4r0hCtBg\"3FZ>5r0WU;+m@GZQ(N`O=4.=R<U?`QR%rT1e1N2^M-1Mb5<bo=7Fe8p/%Cs7ndUTa>=0S,"i\heX'T.`.;@#e@?]"
%1q$-77/iUu;B-)Y&0;J`0#ChpM?=N,&cV#t'e"Ep["VCH(=KIRkt5a9.TR]jnoQgie(!?"<cFD<+SdH_KA!3^+crrS<UjHGZm0ek
%nIh>`_DtUB2Q`cQHfS.6*2a]@@")1QYMb[cot1l:GZiN'3+E)*6*X!!I'1Ygo!$i#;b&uRE_k>IN`\QU$S>NP%:#HY_qKe7qFV]>
%"sRl8*AmuMQ27/=5R2tRe<N:>=67s56hIa."/CacX]3oXge89Zo!%^3,7Yr[$GT7@)211`38>WfUD)N-:hKmV!\`pS$L6si`obr-
%:*plk;S;qGYTefiY07p\E+_FVX9-u'c:>"3R8`3jDeQ!oe*sqI1H.,RL2Bq<X0?/<TZZ<ajqYnJ&9?6@^K=g4@VDE^CpkE?KG+Fi
%3Ge2?bO,-!(\uU2U#4^CY-("&jD[X>Gl-;4DE,8Dd);8(^>n+N[m-Bi_iK;Zgg5L,k2Q@5jbkd)VqZEba\S8h'<!qernW'@:9M="
%Hmo6ue!o[0X3Ga7p?AUsRTc8c0/jRD'lKqQnGdk5J&qSHc26ni8)F<5/hd4/3T#8m)KmFmMpodtX=ldIC&EbXou6cJ69hug?_@9!
%ITZcWI-\L_:pZY7c^t2VF;*2=4^q3@i28l%>$l]Fbg/3aVk78\r3b(#/f`=#S)6HEgRb$crob7/9AJ]]]t<!'?@77=h7UE"r*f0F
%G'iWX_%l#Y5KT6nI*]Vk`)Z5P!;q)ONAp1po<VdVf:P6sSb0>Io=K@rNdD">d0W+PmtpR1mU=p5%c]PTkkA^+Vf3#@4V,*ja%s3N
%A+Jd"q@aWSbuITh[p-KK+rq<T=0M=]B2_Ug(L`TD?*6uLJ-#Q_B^#:,8G%)24T/j/HTL(.IAN-<P"k):044Y?b88:Mf$$p0mfd_Q
%qNOt`W[#Wmbj#7hDopL>AQhou!BJ;C=^'nU+eO/PG(08&N<PlBBQFi(D5*"a[&o0C23F1Ol(gis-:tF)%(Lfa5g@P<5=j+X#OPX`
%@/YDuDK2lB$]j\4YWIsA]?U%Yng!ReR/Hj70,GR0P).)*`ONOToQXUfAX9/$Ju$Bd?MKa$APPcuA_,pqAkADcWXL!?11=umTYIue
%7T&V]U!"R?c0`04fCR[C0jch1A"'L@S"_@$WgPa9Aq=.A,$e`;Hr6!\=Y44nW/O$RMq'RKM1:pHMks]G+-u#o>0c&X`o)Fu'"GOT
%!Af;Md$;b=_1h><IELY$j;n5Lq8/EZ6*3h`P[<=&XlE>VTS8`P%9$%<fI,l-p2!KPSC(>(TCFDqZ>^P#jY/I&:oc<i--HFeI(YaZ
%U^Y%)8A'<N&?,[_'u@r-<<0CHJ6<)<9,@dTR%Sj/+,i-Ui;+GO4/6I+F=17BGla#Q!WJbT2^ut(BgA#=$T\WUJK*`mR&:hG<])Ph
%Z7pV/b[ED*iI^=nT00.\>_Xm05NNe[PO%d&3W5RI)`b<le$jqC=ns-FR!s)E\Z<^DjRSna;rGd(Q+Y!BJ@pF,"Ul54!Q8S+pcP%r
%oVuLL]o#rfYDccl%6(Vh?IgWO/a@W;^oO>6=i6u9M`S&j3eLN)njRE\"=A*hYGRagF*L\b$(%dbWi.[L2j;CKW;Xp@i3O%7-p\N"
%V,NU]BgDIpXTg0!2Ki\F043?M?0lOl2RSB!J<2Ii0MSkT)MB4%%lD]Y.?](8'+SE;jleOQeOT0&Bl7qnLq872"j@'Vf@_^UZB?d5
%H'W&FB!R)sr^GP:1RO[nX\uOGgGDE;8nSk];ZKel8c^[Oi.@%nEmOp)V62<g(-onQF:^W`,ljJNU*r83i</,XGDY+aEae,C;JB\J
%<\&b<+fIZ-VG.%-m/VbA\>90c")qJt,sZ8QY\P))fEI;],m_A,Xar"-#qRZ_,9d`;Z4q!7"A_r5=QH^aJ64[>^@G*;_fZ9D%$>c]
%E(.k1[$(jUMKY#65^%lYIJJI;Mm1H>B1,&h$1q2#-oDL(!d1/]+SG4/7#MgE/uiH:?qc(V-T((,_-0R[P(1Y>SQ2Bu):Jkc%h#*?
%9GIo/"t<CM>lQT`pB@]Q>"s'A3u1ji$CH>o":./mM[TfAZTYL,=946VVHh7`QAk9clZ8Gg$>,)J*9IFfUk[P6]S8EHX9JCN!.>5o
%cN*MB^jQ7Ybj`%Dm8RKL!<17HHNA<k^4mcC'F4fh)OLUlKFl.[K5oqEN,V6W'>b$ViR)\BmP9%'*15s$pE-beVn71S@9ie(G?hcZ
%P3rK*-3U1ECUrJ/oNhu50YXE*c$*F!*EO7fd%^P@mC::ZQgMDX`F?lQn$oYDQXG`Qe[1<#4]ft2!e_,69+Wb\MP41s!/hGU/^OqP
%R^GH049o\X,n5*[_G1.InLoM0JMc2G1TUX]<"iQ+_n'Q48hEU[8dK9q1Ve#U5%.lj<PUVVGKc25_"pF@[t5d@j.T>ORchJc@?k#h
%P=R9@TUJD5)rO@S90o4;d,BEnoZ?5`D_8&5Uq\cB(KgPD;<DGpU'WLh+9n&RK1:t6>,(0pcjZ`=F/&:7T_UkO@1j%F(c1.Zk^]>N
%@`1!5`,RNY'#^i;0?P#M@^o=/90%!)j?4gY+^eZq]B?u)(*o-H#b_[sq$d%$6+j><MSSUk5k@70!:C'n(eP/%mQmM/'S40-,[F@p
%CWq<@2F'8=Z_a-kSknD/P%V(DZab*5R(:nNB]eG<CG]Zd@k\.*^3I(%DPg='-(,pJ+.f$gS!i'V9!'o?nqG;DEH>RE4NqpXA-Odo
%rQ7DIiQa,iLdN7)]Oq`*.gK^AEp4_%37o,S=,(Il&-_l?M6\2ER[N@SV.^Wci*E!]bZCTIUnV:"dP5Lb1)f(t9@>YUl5IGW/SQ.]
%ko5W22b^/i!/f:#D4mc2U0.p_*0u1>.9jn?U-IT<?R1Z,GV-NCCZ;KFQf;TP+uq3PbKF?Db@;g"W_BiHN*MHL2TM[c2QN?a`mPaG
%Y(427^tjg"[Nl_+A[FJ>Y]s)8Ot<bu,*L<7TWZG688*)(mSFKrQqD%[88&=O[S)d#;7(!#X9tc0'P0(^E4p'GK2/^_#,;Z=Z\2mG
%^tXShZ^N/G'!SqY$,M^^YThc%d<.pc:]HOK)Q&L+.2OEqXKEBA#QV6-[7GnEalR!3$Tt%F.Chos[rOS@Vn+#m2&D90"(6E"KE/jg
%XiPN.AN5.6]YqQ@B??k%StBO*#>#rnnF'[98K:Ors$)fS@X?n1#;d)#rVKZ2a3Z5T)Lk?JR1\3iGG0jI_gA?A?"bEih&`S@(RbU[
%@h2SP$V^bMY_O^rVhn0T6TQK78a'-P[ATgqZ]<:VG<mf`C9=9Iq'&]m#L/:1"T$`s[?,/q(KqPS:@R;?7m]b1ad(=Tcira-eN-_6
%)^8&jCL8mNCud=V.A'9YAF70JKpO>b_\Z-n;U!3OP**-t-OUSoUkCBn\O^F?#WWW/c%D/!n;_L%Oc;J>Tim3`beuq4j'p=Xng-18
%j<@W;!j,G\[7fG$Qe?l%I*o5p[BJqO.rScHHPfu/G$jrt$eP]k=RN`"]iX$66&Y`sm"T9s?Z#eE[%`=Z[-:"\MJ?&uTG^!nqPa\J
%NKA0/m0G#<W[5mkr;]uXBh2<oNTJj%6u0jrPE?h]KQ8Y8">raZF.kB@gFgS\`_r09))l\9#g4KIaseOBYhWHH]oAlG\]?d;mSQP(
%VEg.O3B9+^@dWp1jCAi=Mfc>1/9T`+%J[:#CZXJ[cE92S>8gT_'c@$UA9i_P#M"'%,A)@,,nAA??.W2nBAHqV(6W,lC8jb(R>Hm?
%Un1/^&hC7ZU#dPB#s;%1MYX_`K@q#VSK6?BHYZ!3/6c2XfMtk4;3rJpcGX/t&h.3/aeNB:?&99<&h$DFKh.d^O?-D(o^X>#Rk/?,
%mb!>s\P(A0jik/l),$?_o\33Z,l*U>J$mq'$F*'GgRhZF.VFsf6E:gELYASD?>RY3`AT0QqcT'l1QqI%>p/VR'Z+(eh`uSp7SGQf
%k<W4-(Lc:t(j!)&q%IA#j&OC2T\]i&Hr@Lejua*PnlP!o^^I*4E8lTC4uA:0cbp@1(\@>uHkLfAc8UldHpAa1<4ipb)3@nE?a4\c
%7jFT5rgS`LUF+4HMkh3*BIdDE6G*]kT?*NJA@t)BC2u?KD/OA=pZ^dH&LZ>Zs7UG-]K.#K>)Z,JoC!1hDdBRQTZ)<l`.%MlQdk$0
%h&la+-)Ma^4*Ati+VH:u^b_*I(FkQ),apdiZOeX<g'L$e"M@\/E[_cV7'$TlP9^M`5??'Y0R&]>16<#T?,HFI,ss$nMDpV[K=*DT
%\asX;GB;_*N%=T^')[p6bGhdR)Td,-q+bS8#j3#]8WF3le'/=fh0V-3ZT/\;VA1ar8sBSF%8iJra;>%%ofaLp=:d(RIL#L/i[SO]
%6Q@H"jcP_#-&fN;87PN_".Dkd+4B);kV6h#8>"RQM-;!*/9@!7fMX^S*s59oP#sG2E,;(5gZ2%=[hX1L;R&ZV@YJWS+JQN'S0oO6
%`0q`O*g&rE5Ya[^#temP`@Ufg/+F61lnp&V/.m@U8n@9uXMs?.g)@UWfGhr(8U+h+X^oah.A"ae4IZdO>UX#<ir<8h585CogndLR
%<p'$Ammk?^Ouk.lhlL$N\S-Nkh;'4qIFT+D<Ri3dMhX8rl6O$srhX'g?l>sQC^;F*/]G/5!]r^lG(dEY&_K.I[W*g`EOL```6d"o
%J:B7:_C3F')6jCRKSN[kn4N')X;dNl2fP($cj+1$DF?]#]=/r5AaXBk[DOo8Q=BGDcFVpchK=?oX<k(hAKi-\rN25A9eP!/(8;tN
%k;F^09_ALr5S-E5V-8E^.g035W&r>j%=a"7m.76%^PdDMEnnVZ(hCSq<Je\4m]99&HPB\[qWq'iN?U$Zg7fF:fFDHrG>P>.NKWs+
%9:@,7MPE?PYDu_iA=<V+X<g#L:=P"I9e#\HKXjOo;M(u4Vti,671,_0$^dJ!k^t2(JFigd,;P.V5[HDp*f/T)%:X8@>upKe=l&2W
%CAYTrYR`@"dHa<YCR6-Gf5J\n4_V+dkM,)7XERp3^CaZAhfefF]3\4GH@;JTU&(ru#+o2:Q9W_Dg4-a4^O_G*YQQSKju.;[#>9NI
%>^R!8>d#[J0W9IEp+GFe/PA)R-Lr[??A5g`_)U7'p*m5#7lh\f2i[]29i(]pXQujoa82BBI&TM_`;Tqgr."jhnK4J+[epQ6#I5\T
%^'<-l<?#IsOQ1.hj=b)HOS(rj$s>Mgm?%!.eIY_NeE@Ip'7j(\"G=]JYdUM,U2#W9qsHmgUstINWjj>-CbDu)Tj23"ACciQ<g0\!
%GJo23]GS`**&#=Z+WMfJ&Rosk#QUIgg'$h]&Vtg2JPG(j('0L/HYih.[g5MU:raoeh]`VG30+W4M,T/o/Hs:R)mZ7^T:D3s66U?[
%p_tt&id+Y7,3$;0n=N\a-jWaP97Rg3o8K"r9\GS\]6)J50"@sDi%A?ql9&=6fRlX6?0lVKk#Jr<YDYRlnVJ'2l2n_$1s&>k)Ifp,
%'#A=Onr!.3>=T+UjIf3Y&.NAo4pE855\eBW`s<9O`."M\,j[.I^p'Z.!h]mo![@b"EAe3D7\Ra>Kq-mfL%C1(IE_$cVrV%E=K./M
%cY:3?o1-BUOZOO1Wt#2L'B]eMLm[7t\5km$mXdfE`L4P7WMkqg3!bdFE='^5.40L$oQQ;gBO0VAo'eo&$i\Ydg3*P3i]95H;N'N&
%rn:rIkqhB'VAaK![#H`4\t,gPh&CT1@@,&a"'7^j`.\>&ZEp/DrlUH_-keu>XGHK7rb"]k\Nn`1g]E332MH:sCIof(^D7IK$85TE
%$Z\#dMcEu1eO6]UUhE^[S:Ftt#m't`:g'H#Uo:(W/LYR=Jdk[==HI:8J[BJ2K.EZ;'raKQ$`fQ.g(Ms?JUBa,U'm\:W)?V0IV=RI
%Ub9lW")[38N&W&NJ@$GATsdV>I7UEr;IErd!MM#Imi2a>&aRcL4:&Ap[`X?Q3$`k=%&&pCWPr8mE\_jY&6->!12emgD-Sc,5ti#m
%oR]CbB/K3?;.U56f$NK0+D_=\%7(QM('RQA6hIg,!La1sab1ec&A:ImM=aZ)jc'Ysj?QFMLd:p[Kf4/A;!=LGH7J\4E8+%tOhHqI
%Mqg*S?sThS1p5f+)TZ!iJ;Lu_]DJOk@=[GAKPL=U";2Ro+B6Mh,lkYD8>qgb8q8ep+JDt&-iri35shu,TGFW6JY?75:h?8N[T=L8
%=1nY=Co=!rGS=FQFP5k%nV;@=.A9<&<CbXl]&p,qnJ=3V(=BO+?'.RiV8('gUH]<$rEg=GH#se'b=5Rt0+s;Gel>5,GbB[Sb,(RJ
%<I>P@$JX!_ajpqoN=2%X]$\Bs18`9LbndICg(t6jeaV5qH.t<3<eG'a2B:.[kKlmQ#"/p!AMYM8eVZ)DBRkigC2baD(9Is-5cT>R
%q.@prfWYZ$BnQl&24Pb>W.c-2/TETW]@F^O3Q]/H$2.Ve0W(_gP_'W*ifP48X+@dG1JH)"3:=YO-TQh\i$a/eC8drp+;19H!P1gM
%3l)U7NI!rc:?7G%nEVWE^@rS5G*nKq1K$0q4:Fgm%7L(f73-[fRY:O]45sp1]Z!QDHZd!Fh.AFu7[ArWfSJip2ibkW5"bQ2ebrfc
%?WI'5U<dTRN']_@1h,5UWgR[plB=`>W:L<eG]T0A8<Q=TSgCnC..@sgNQO\4?R">^A7SW&DJ<;&L*kEO/4g_h,UosK.,0nc^7&"\
%e.]=KA0c"7"X.T4_E1gEDm7I5aLof3Y#Y=s!r7JRLd-RoS/I`aZQM@U's':/-OhTr=FYs&Ehgjq0cS=(hr9Bkflt!?N&P%K)m3?t
%BX-E6<B"5qhaMlYb@#7"F?,EA"3-<Ei<;"5J8q>T-@q+>@,*.;BWso!LhI-`E:3qojF6P#5J;%89^]eLN]**8\/c9VIMSJ['Jo8,
%/Qu"`WPk);&m<fB8O7?,*;_BUASC]a,Y#3,Gl/@>4oSt!H20d#+Ys]je`0GFUhr$?h)Vle2q7ht:@Jao<HgU6),#4^G;FB0Q=FUE
%:8W!6;XRM[C_,RmA[KjF\".8sGVkD)bn88>bEq3Cce)G3kVFGJq,4ld\`!+=r)rA*BA?pfpe6+pJg5to[q:T4SX=%i/NSamfs:@O
%(.DjPLdZ2M`\3>(!/)^,2C#6bGG%%hf)p7dA%(<*%q?@f176;1[Z<GmKgFrN.h#+"T/Co+jq<e@(Y2)rL1l+5(dfO,Z681<,p#nt
%WYZ@Dk_3_]]7nnL.oQ6,A,tP4%>r^Bfi3`#pQP=/g<1>+71Q'&l+2^G3JI_imUC<c).jGge%22@s/knUCk6d;Xk`;5!M03bTp<7G
%-lCliQdEn2DA82sp=RT[D2j/WqpHE_&k_B9)mkbI/3:l^.MiSn#nA]s>Y-4%:H**t*MqUm.\#M4SJI$Jg1^Am@q@Dg4AYKJXI6T3
%1o12X?+,oNNml'lg8dre)fBn?04d.V'I8W80\`q"&fd*,W)XQ?8MDf70e!g$<)cb(8]<",?Y^:B=rTlW`R``g\m&fa][#6+Z*MrL
%M\YSRH7NV1(6+SGCJ[q=`%VV%=]50JT`>KC>(_D<cJ+4C0au=.$9^B73<+tU)?mcU&r0739Hto>V\W^"R9@DN/COOqp5ScHN*p]q
%j@AH@ij4.NgD_;F?Ur_?ZJ0"Y8h%-Whq&LtlTH_k?R>EE<"oZYH;^gPE,BquI(5s'P#mbZHmW+7lc=XK/7HsHXB8,_@Rf3uUb</\
%.aD>(Ep9M10K9[pifja*U*hjn,>"Q1k%#.*,btk#bt>jpEXE8]ZrV.:/7!L08h5O7A5elBS-'H5=@!RqQkItS$6#q#;U6e6W$1H.
%=O&(J)RNTXXfi#Z/#*#a_KQJuA;p7T5U%A2L+#knfWX7nlHNc+Nq`6H_K4?G`."D*i%&OD+4<IX,NTYeT9e=iV9)d?hj"CCWc(Nh
%\`?.o9,G[H$:sQ3B"[6%&R)jR'bYd0$G1]<0Xi)2<Y,gB3"&\#=I3QfA/(ENRli0pi3Tj^!lQ`a9.M%iV;im09rh:=-+]WR#.j:\
%nNJ(,#)Wi%^6\9@'k(B;<0kGO=NEEh6OOLr)cBrNiCgFG^h<1d+]QjIpN&sbZ]_Om:(j@OK8'*.]l9$`CoGM,JKbm7DAsD#S[/dl
%J#\Xl!J=s^#7h_(K:>%H2HY_3ILd>J6bN=_K4W+K0JHTU0^?k-\15/F?A1/G@ZNq<Xe6CCq_M\g8,Ft5Pf-bu8clWSbL6+"`;Z/O
%]%Xlh_!_@Wc<>[j[b%I:Y1VbKH_ZB+6&XT((&P<1-^9JDY(?V34Lk9P`AF#1`YkItN)8WQ!Nh7pb$7JF.pf/==pXn62dT#W"a@om
%Buj\#U_(m>NYS;\;6>):"aOatR%_YK/[-k,'Sd>o5[f]Dou_t';IH1k1f_.i+q63T!5ja,Ob+!IR%^CM!bdb+8lnFB64OmZ'qZ4^
%]p4!0E,b6Hjb-^pRoIU/$rLifH!`aafNR]dD!A)+h9AsB`I#=@(RT));tWrZGEP+_7:mj&gLHNRqpYL-oeb='*rjR$lMnG&bqKN%
%7M+oh;alog6PJfcX$hKFF._i[ZL,ad1f["F&[fpOP*5CXiB\*P(PIQX5/'AC^_&U1#?lC%ofabN[NbFu:dE[MmA2bKh[*GXFl?bo
%bKe2@SJkt'96S@nbK,_=<*kt+^ATQ0G$C&Q/t\n?ps"`b._o]F1(3Z-T"F(^NmL;PmAToDAo<C!hq],^:(5%E1u!nB5W0[d_L@JS
%^RXD'&+^O1<k"#=@D7t[A&5iPQlKI++\jgu*.*Vr1Wj,B11AG&2KtS=$C;3`1TAoh;o=dQ$lLZ&jj`969?GJmE4]&rRRf`#]t*5k
%Tnj_H,RuhI@bo-W<t`I!Fi[D!^bq`cXs/'u.esc=WuP_J>Z1:10W1Ge.#1t(()!Kt:d?4f:i=2h"`)N\-'+R.Ojb:j95tYdI_IKI
%F!6rX-pe@KPZh))b[2r.f`$fGMDVP.6]7[T?=H^\*D;(o1=@j$2:-R]NH%5i]5r8"U0M#M-c^da[h^7?Gp?$r5EklQeC,.Cnd9Os
%76(llQZen>X1PF3E^9c$L.:,`l9Gl45Pi8^q?'!7&.j`+pE;30_)_t@=8Kd!Fp<Q6*:sGf\Cl[j6$gF7id_T-!t>S$%17qcCG%#G
%bVs_BgcD\@Q)HfVHR0TKoK<Ue=9W+@9[/RDnM$'Q"YGgcbQh&^'Oo3A]9/VY9!;/&Vi2<:<L4??hE%QnIQl5rJ3='r<i^5`kPdl7
%eH__d!?Yb\GG1ojfd'As4$&\Qgs%=Kj,eh<=pG9!S:Z1Db%[hA54H`hEocqpVCKGEoec.dh9.k.o61Hl3o0"N_>uJ1!(<A`&Y"!'
%ecarU8%dueBMBN%J>>53;R)!Zd.T2R5J&B0ok#V</m6KfaOcu6'b]Z%JIWU`&-b5+"?J0r_$)u8arHbN$_qFR<*_]cTleDe1bDcB
%KL'8o7,l]9(CU?9<Wn8gFE`P<gPQUeYYrg])K@R&$(24.(r'LfLfk*>S#*>)cWHR:.%VhS;9NJeJDb:.$c*.g#TnZ&MF%khZ:a_S
%k`i_>2@OI/E)6F+rRe$,MHNpqms*/GLj'p+fRq*k!@kSOH6Hu&e37%s/6gO,?]D7L"!G79<%XoWeX-"+r(0HAI8.:iK.[.MQV$q3
%q2d!sl;e,F4Wskc5AuS`):5\6V0<.Ogh]@_?4@PIIRA-GKCqugkN39qrI3d#k`C]t1iRW.,WsNU&'YCN")2?ibmEG5!5^i`P-r/<
%EV6"*!--/'<_'])I8E2s/-s8_U@+4#fgX-QVj05r1LUV/rME7R)*f*Nm]a"QYDTV?2F7CKoU?JB7hQH>:GEMZ7Z[fi/V5=R"`NYJ
%!aD&$NeLN?`._Cige:A]IL,e79h[?4ZCOamFul5AZ7!(E0>"[`n+c7/R^l::2D0S44Cf1I<[hsRas\K1(0QsoSJEW%foAcVGX78E
%k%1&gC*bmMQ=;@[1cp`MUC+:r'f7Q'E$#s86[=K"PV37r4f<QtBf6j?[EtU6o!'<lKUGjp&>YsmF.DK(6/gt*7!$oF5*X^%Jtf\g
%a_%4aFpaS\@P2p=I7=UjRV)^Z^4oN,-(u/Gq(CZ3hjS2U0/$d/cK`*jZ/g(GaJl6QW@H!RHD>:'/eipX]R/GGI2`\RVb#c5Cb!QW
%[tqn;$8S,Q&hCG5Jrl81+cX!D)9SI(A4b-:fWmS^5riL]Xq9*O,sRM<Q[`M3,^=:"&/K+\&o4Ki98Jk<YK3hOO;K-$6:?2La_K,+
%P=DtiUHfY%pjF#HgbqlLgpe=6iQ3*')'%q'=*UhW0L@QT.*#/Ud6>;ibhoXD:<7UUka^uf5(A2G,b*ZW%9\q/@Hj;GlCK9'>?pM\
%p'.FEa13-]VhGBDb+6hPIWnZ0@3it.SARn+?I$NmeE8[RFW5HD8*VuVQYN/YW7Q=%_gSo8J^j-TMO[6&)@TTD0l+]@B8m1W"e01H
%'5_T\ND64NM)I6=Q6tjl/>b<[`MC_T5g%R6BXEP3Qd9Q]?^jJ>WQHYdi9\:k))S=jb5i-]GfEsZ,\8i)pmTnd"jDK-24k)n[oQF+
%jCr_-g`::q-US&q2,HKX$b<IjZfgVle/$)$=#k4Sf)Vn`13id])S+&dlY0NLq45PZ[m(REe8Ro]4Xb2=P7Q0\)Cj;<Sd4VU2G$&"
%puXg[E<:+Y!NW2Y\-u+>8;7HMR.GE=$YBb*=tkg-C5!gr!2WGqc^?@uI,'=J+40SCc<./A!M?3BFIJXR"O;F!\Hb7FBaHWq^@74b
%*XZtoW<&.R5qtluI&J+Ke#]Lj#OS3AaZV1)&1csVcn?rt[OJ3X.6[gC].k%p8lAV'4VZ5LY?aL<I>"Ql!0,e:dt'H0Ui9[7QWEMb
%*BQ]Xm"(fSNBIDFV9fuKCtN?2P(t9Om<0Rd"k6H^I33P3E/V1f@J5J_MdIhr_UnH@Sh(h0SJZ$B&!Zb0Fn[R,M/dFP2`p&Q;k%oZ
%MMl9T&QrV5%4)'f-!IW,BGt:(Xe;NuNH&9\\\^n-4f[,(,g[XnY]BV71>,giO)X"[XXe&Wc^_aAO!:'7!/&3Va'38qD7&g[>)mCE
%f`rZiMjb>%fh(0c8tdo;m71X7@I-;.UL$!q,ME6rTl[Q]K/=*jkJG,Ag'>1L]a)*44U8O)%s7>3]',h?ra;)NGSc]M^:e*S0AiY[
%I<>r]hQ5bdPibPEU=_.H?dm!*?keq<`^hcjLS>IqVdGY1`mOXBKV9qgTi:EI&&drB*GO_om`:hicj>!C>^-J5IO9oUfiY0:Y\0bN
%2PbXO.1FAfeOj+L#mZ`[/tcb;f#IjB=u,=gV!)DCBf7HV\6_d*LGc\7\4`kUVau/AQL7gW8/*`FCfs>OYO9TVgs.HD0u5[!ZSHaH
%O-d.FCF':s'0TM79`VPIY)lXb#3h5eKZJI/J=M36]CM8pA&2LbBMJA#N9!k-=5J9=].`io);abgU>8`Wm>7iWs-'9":V=RoEBBZ`
%moaT^Y*Uf3PH4*5MB,urX33N8K)H)&h$%o;]=d]JYN4+lUZS+qP'sqf-)E.=44amalCMbXOUT[\qS][&]-KE&,g:FVBO-uqXr/3b
%*lXI=4q\rIm\A!S<_CY1ai7!rCX,Dob\].DqcDcNS1>D(cLL'9K<B4X)N-e#&a?]]9@o(_:[:h%e\eHV0Ah2gSVOgrZ&=T]/t*Ur
%S\m<G]%fd.nWI9=D]9e3o@<<-&bdfd]>=ZmgDHpXdG7BS><#3$_1q=39c[8XO&:l*P/>TJgiQM0-uR&WR8Xee$U]P0&8_gbEO66L
%#u:R<@pEk\WsS>j`#'G&D1K0IM]r(CnT`WCe"&!EAc=&kfQ8"BdRe&J+<tH]]LLl3L-"t`HE+(L;eD9rk,1sq\cWWUT]65L1G9Z9
%,`+AMgYI-JM>HZW([I-Oe&a7@1bgC\pQWN^1R50DPr;@Ei\uMR:"o=(6m&$S6H,KrW[q5Xs7aCDMBJ"V-^:>?8E%E@HkrcN9DP>s
%HcYU>kYQZ>9huh\c9Z@0hB:AJ0\'_G<Km_`b8IkFiom^*MEYOJAJfckHc^J$Se6_b?']L&fePOCR&,SdV*]1B&%`-_9o$n^`KI:i
%-7rNOO,?:!-2!&:?e1<K\=o-D$Q!KY_:E&1[EhdkM*X,r=p(ubE^s7+?ID,M4qtUQ.<lopj(foo8<f6t*$.Bu4uZXT\@9:FD=GXO
%1:utM%5YW8s4cc$!.S[,HuNkG//so+dBBC2\R4G@\'hs5+%5O\q=l^*%*gH(LYPR\65Q2#I?P3/<[Y-Y6b8Thc&m_8mI"sUHe]KN
%M]d&7];%mB.LZ"CU_5Df0:&OU:"0tPjJ%JZr[UYf'#tXX7h`:>M&^5FT:=AP(06MuTg+m5:Grl`Wp.X7esehIVqpk_4a.]3ZXiJr
%h<"C6qE:B5gOnsbS<hl<i_oqI/ZHh4=-mI\#"k$mD"t'X\;/)))FuSdW+n(X1,BB,n@`!;(RW=eP)NeGZjD3^8o3.<`A`mnK+3o"
%2JKZ-PUK49IXZge`$GWcg9=ARk$c*s91iqHPL4U_/TII*)<H=lgfn1>+gHR=P'E+C.9mSXlq[os".m3Rb+D=C?#Y*Aq^9?^7?N%I
%!RIm0k>")9fISmuk)S\*/e,]JMO`,E3Q;p`CGO6f-)atm,ia\0%V=3IaHg7\"\S.oVH2V2`u6Zak%+1QnJP-]#sbck@$h!-DkHIN
%5jae?:^k"r&8n61DPN4N;KoQI]84uB94u48c,m3]5fp+EW!Vaj,RqhH.oa-_6uZp.`3r*+mCIV[EcSUb7<GhTBO0>':%CnRkqCbQ
%i;_rU[0SDH!4iP(Y;Ea7EX8P`+7Yi44UQM#_,^)H^V\.i/H]f*Ye<?T*<'&<i1nmA()6+;\P*pHkbHmqEjpJ(OUXmF$_K=Co/7je
%-QOJ>6$Gf/BWTC/^MmDd1<P*]TM8XXB3$hGj&T&NgU%UI8ii_ppGlgak:H?R*>-?fB,?eZ[\Smb$0@VH79aEhr/Q$,9#d<=^;En[
%@J7b2*7-Cmh'0B(r"Zp-_%ks>*F.Q1kq;9Tg83`24Li6c&LQ-9P>;=uZR2RO&u@Js]b\H7"P;F?M>gT5W-Pjgqu,7`@AVjAgOB/\
%73Ik>cF2WFlU^U,%*l<=@k5A\S#R_a"Ul<g%^o9>kQ)btJ:d#EE8:"b[A[2C!:hOTA1:>_\LlEP*)#]i]$$NkmeMb^HMb>I\KD3q
%]TJ^sCf\`M"nrX?+G6:I1?<:j]XM"-ebsM#Pdc%:m[qmVHgG,_4(`Y.,2=da=AVFo(B*%-JA.ZE4oRS0+$Z!Fj7ghZmje%Vi]<7B
%G&9;K2kFT*U:HAF0%#JH7SGMAcK6o/'e,u1$+HSPK.Uc)bC\L**k$hl6lS8]r(^$9,#[BUKf9Wu=dHtdAg-KTc1]&""/8?IS;Y>I
%,>)2.jA7nHZEL$DRhG$P>'KCGg(E>R.B;ICoK--#*4G.6%?mYh;8P/L_@K!@@N:fZi>?"+Kjj=Z-\HtMg>3PVZ^7bK]u1>V`F;@B
%T=Jon0R#j>7I@_o98?)IciK!)^t(Y,c/fqtV%Z8/3*!DMkKVhk7):G`7r[3e9d!3n&XHQ3*30jXblWifM_p._>/]$pE5J78WY?\R
%)%kC!SFCVF`!FWfYYX3@'ffsr5oV'&i^R#-BT!l0K])eg&T9n9*.;fn8;%dQ@5MadBSrB_EF*j3IA`Oi4im"sG-GI"Y-bXsU%m$S
%O<VIRO"17NcnQ2k2_jaE'Pj<8*9)`eZ1!L4rh,L3ifVp.:%<P<@L!jWI@=N8*)a\Pk.q7<%\0OE,\6#<(4'<`MU&G<Rmm4uieGnD
%MS4U@'Qe6VM8]qk_;Z,dKCauV:8A&)W(JKt<Hf6W[`HSPe<aR9P?qX9BZ7btOH]q7Q@"D]g[E1Ihn.<&hJNj_U`@l/j6G43RE"\)
%+)tc.M%M+)SCi`5Hdlr]MPgI3rH^9MOJ)%dTt#H-jqTdg@+p#=^:1Z.Xmu*%RiTLmhu;bb/*t4bKcS<':X5oCNsbc_Y`B.gW3D<i
%ql$`[$N$d+O+R/*S;fK_il$Wd:Sk;Ud0K&<FK2OCr\AZu]Qs^5?9XacF9aROeE,-,q':Nje#ec]=^[aP:j4%idKS'-"7:bmM*FSY
%m7(!t:u"n6;#G8L6HRR=."FC'qi5R4P<M[&rBV@?]qjkj0U6c-;,SH"6L9MJK@1f<,&tV]/m`e(#]X<\b+f,3;tJppDP*:\eKk&F
%"L4eiFS(kiY6cIT5BiA`\[FAJ\]Dj\p9?cEiEYZ.a%H!3?qs!#O8"up],ppplM;#eKj4hg)^Jm>q4^:ci\YJ"'Hmt<mg7Xe6PfC>
%qS%Va]ei"fNch9e6l4Q:i3:!;d%Jls-9Es[3UO@=Uqn(pi,GDRf<[_Xn_nP_L?%qJY7!?1TI@r>9`H!g_,@!_gR(h*fOmb&J:J='
%DF;Bt^)aHJ.A7-YZVZ:+.3+_\+_rLqDO^u2Y(rK+\srh*CiPB,=KsXo)P(?5C$7mbfL6ZEg>EU<#u8]_LD,6'd$HYXjb(;-:3&B/
%&p[2ne-Stn4RBufNhgcu9EXlmdQmsTV-6eoEs<Xi_OT/inYmB7E5dS=:o4Rm0^%Ik)Mq?DK^'bGRH!dg-`K2u"JL]'bo[rkY^H7U
%(R9t&3HNtW+mEG"%miilLPJ+.-N7[1#'PlAmZL_n<]0ZV%6AUoc;CZk0s#m=pP<;GMdZcMEK;O!rkgX;8$N7G&;5hMhf&e9b85L9
%G/*PU!]j>OO)f16&9lJO&it:sUXOB<SZH&EfsqQ_I(L;:@`4*8-UsUCKG/>0eQ_fgPGq.=]/kN)jrO!K2OW]1]fTpp;!$9Rlf;qH
%IXh]F>P1(ZTtD+K/gkorDW`"n\Yp:7,Ab5N'rDZ!]s&D=Qp*RJVX8PubMh6*H1`1fdrd`bEp.NU/@Ht'5i?P*A\mVoX.oc2Q@)^p
%]9VV/R^AV\/8ukmqq.$#6c:\kGDUO6kdT'T_FnrH`*"KDbYup7>S3b8#e/CNVL5$8+ARN]NgUcQ''>G#?.41T#n\F#!YTKtBbH*g
%$p$P.:=:4\!ea/Y+DC=u)6#38dN;ASKQ`J)P#FFgLJK8M[_job.`PXiN:ca&5(?>RSP.e<F(LI%_`4$i+Pq9F[:d;Y6@:,J6G-eY
%V$nPSe.6?U_+]Q(P)GKrl9Z(f3G&kCT5F4)dAihNs)kI^'>dP._'J;3(>P2L4J?HeXpPVf-V+fOV#d0BYY=,aWXFY)=E/9VEG.M4
%mEuNMH.H,Z?bUajqf-:4VR,:ND*JMI!d(s6!;j%Mh%q\:g,qoYi):`-/2NH,,"aiB8iZou5KmWtP"tWi,TA)%E6$)Cn^_..$(#r>
%,a!!8M/N0HkV/Lq31EYE$I"7T51!ofOZ'=/D1Z87SFqg=pYOI9g8UjBD4Du.NU=(1WnldGYa3+:4*c7+gcj(o/h&R81`<u`13TJ9
%=G3Y/,k$h(`irtkHdcOkMli3]6PF(u8=?/A(GB%)P9rhHi_uJnHI?Q\[%_@H8HLEbn;"*68A6QHaYIU*;&/5(O4%duUD8n)1Lhs_
%]1>Y&(aI^fJNXd7P"qg9K=37QjO^ta$hoo-e,F%$P_'oCg!M6$\I5ACjXHOlBkS&"SL)f&`4(o:Xo1P4@G"m'Zo=30GWpOk*3L*4
%lpZJP5'/F`85#Kdf1f>slj-&G"?6J,H32J25"m,C#,E!I!GQ\<3@##&CV+XK_.[_>HC@YIC_[05KunYSFRA1*%E+J#UPV/?\FN31
%&3jnGjQRg!"C$"<:CrUu$pG\!2s`"$\C*W**MEjnRg%L'oVb2R%(gV,8Lu0;`Nt;bPit!M91$ZKdRd0lGsf-62af@[o7gjthGE'U
%hG=<cF$_7AiONMU$70!)Bg[:!:oKt\EmC\17ko4/GjeR8@^-%al9<$p^mQckT`ep+!GAi_S_?-ALE0_39RY7^#+eI$NtLktd()"#
%0tKAmJ?sI:;8NS\i9["RN%i,"BCEcKlo"`P#oc5]bkORT%l2;6:mJ7C3K'.VfnAtPis24OTZ&<$Uch<6Dh46a-A9$,MjdQ4UN*$*
%'N-s8dY+\f.4(8%289n,(`q<E,9ESeqm,gBDVega:3@M"/rVk.`gmLtc@p9$_ROYqgpo-,>SqZ;N"O0APkp1L,>O1WnOKJq\4tUD
%a!Pbp)g=]*m*,_/!35i)h7SpVE6'@+h?#BQ"2LQ@nl[Y@2hhYM$pYlfU3M]R6m5D9da4r"K5WL<Amn(0R>[6HQMdF!99OMsF?aa&
%'-:C](SOdnrf''Hf$(dNWT:a)/CSCSntq:(pb8TOPo[\rYkDrm:p;T]=862S<XNHKn%b2^O'X)U8N-cl:Cn^r!/;N)&d9K!Tnm,2
%,&Y-:G6K6]Ah=H`e=]3hOE-pS0jUUi+U+OL;.VSTDl.TPOfCn>&rY4&b@ek04frCdp-CDZgT>g`MK'5+@cV3YXu1XJ`A$,C#UrXa
%JO[Y7`Ipb$jPaN%UdeN(03-2XM7iMZ&T]IA"88e*j'olm.3C9UK>S@8A3Xm$"dR.X!ggo$JV$BaBsD<BI$B]3r1pI*M<!/BpW@3A
%]P?gu`A?UcO*m0i(p0U];>?1C'HVP;TDam2_(dm>-oc^8NQs9'2RF;CEta"[&&G5N=aV3L5PR^.Z>mqC=J$,:F]Wt0^P58>&-Q[r
%n[VSn,^n=.FJ/0*-pVE2ZdlR1+Whr);*fmt;*\W@,haW%mo`J_=5QSY<H"+')Ff!pNYS9*)j4pH#7G[8(,C4I(7P-Q/rDY"A%T=-
%$Ya.<O6p[(/JQ0Hd4XK#EEtYL+1moCE::&mkgKEed6+OY30b"R$BEs80dAWsHZ`)'l](Ym&ae+q-kac%^0%S9-dM%4,E\Y<JVPH:
%NUI2u]E":A*f@<\]$%]+quIl,O9_LQE:mn&8QM"@2$J7RA[cTCnl\L[<99n]WggC'goN*hnQtTFN@nB+b/ZqT4s#ag*0173A;ThY
%_!tOBnQ<Ro3Yq3]%_fR,=ajdTma]O0\YAKQMRIA/*P(1N'h>DdElF.k*[k)P'OGl@r:rN]Z0^S0jVSUmL'3P\_.-%*(_Src"HO_B
%@n?)+')^p5:laM,,>O1W1#g-fiP_?:,e-'Y>P16iNj]V`.,qX5c#4Q^\5WKU5ZjYm\m^$CJ3NcSaemcXI6NcogPjrDAIf,Xe'Hi(
%2XQcD$%ZM%>::?.!H%3H[NM+-0uC@E.5Of4HdTDj@7i_;;*.IN*Mg&?j.iCjC'Q25P@?UEWFa;%P-CGW5rh*Jb/.$lJgATVUaotd
%Zts7%loe@:'G]:<o-1075'h@TAtFa'e\0J5^'42pAr,h(;E"hpcT:^!5=]NsQ<5mS;#6.'E7E#EHOE9O9Cn;VjYK%60;(6i0QS3\
%)q)VJ#`B-3=qiI?G3ai7]pVcn5:hieSs]REr452hg.TA%,%DW[k2S%GXEm7n/N^o;L9,]DT7<k0pgW777g?TdY`CK`HZR_[M.N#e
%p1LX/;JLP27o6h9&nK7E4Y^)>U"b2*SCK/BPt'HW('F%%ki?#Rpd7U5J#oh3QUhke"#NgWKTOV6>FOnN-@[@C'XjbfE?8gmOcbVl
%)53<_$6`"+rs1b1hZ"0i.E+WAQ`^M1FWuB1":MJtU7JZc>ZaN".CUt5$mL<t#lS(i:cS"Xqe@:T"/3)Y/S'DLeFFaN;hJ82O?:3f
%^DaON$1"+K</Y7^&Qd%GZ=k3JmUh\V4"%58-*p]B.D+(her[q>o4m:h+p.S+1\*BcIROo7j,G'o(*lD<1Nh"i@9H2T1,]Q@K5?AO
%R^gC__K]inj!Mo?jcL.<_^H9dpd@^lF#e2k3@GglR=BPWSE$5l1pbQMrnp7QiJtab)8mU!FHPL8O:?ll+!Q5*JP[-n&V5t.E>gk%
%jDK$GFZ\?oD(Q!0e-eC%FcRp7jt)2/^kW&['("\b/K[8'41^``X31XX]))AgoLE%&6dK;)V3-tA7R"r.9TA>&'Ybp;B&oM!d?RN/
%li5l7rZ<Y0R]kCWCi1b@D5FAJ7kEM"<$m'$O,s$$TkYqO`9&\)2I@*k+F@p+7fR#b(9-MjLm+d\(Jm'"KJec>Pt]qe^AGOM4EHWb
%R;8)<J'Q/An:"_iNXFA69[;;HpH9&$'s1j-)mm\YXR'?D?V:'`s0#soE9VPWmAM,785F3Jruj0UUM1,Rl"uDi2^HfRS`F+SZ+`VP
%rT6uoX/,8X50l")/c#?)F6C`Kjf7AkII?3`07mIj*7s7-0lq`+O)YMJ1@I>8OMVCtYC4Q$'qI*^3YJ,3,EL+gPg]hN4)&ZnTSj$?
%`[eHlQJ/T:m0KS&InL?tPdW3n\ruRJ#if?*j7WtMp-+j]Y2ab&9P\8LZl&1lBsX$eg@d.'iSO0.#&T3W"#TkkC'06=O1(#lB)fCm
%)Q;$iduZ7*$M8W>U)WCh/6pZ9s%N&++"i\5,SaH$p=`!Jp'DC7B%+gR&T>$/.)8re&E1'&+("<)kETPMFi6`o<XLEnd'7K%DVXr$
%^#kKb_?V8<1^(oP9,AdD$oJ>nEFP*OYfRrs#HD9'=U'V7fT]9(-3:=Bk<0bd%36;8g;_iV=IDTdW3N2/F_h'ilI6L,M!.<4><BkA
%KEi@hE+#%\R'Y'rf:=h`IOfMNDV8H'+fI\b[lP42Va];C"@J)+*t-F;'YNI.!.]%E%LqipEraI*1:uU9%2pWbZdooJD.j8)aN`jg
%hM*IKWbGJe4>?-W^F]rKXg4[ogqO^Jb^p;$3QPB71.j+n!pOl<8k[9Y0f(LB<0ku7ejA#gq_oi,"9;Z+E)9,+=\9<s<1,>fHrX[r
%@bP*k-I=e2:o*Tb1(AZ#GAi.]!MI[HG90q^'+]Vg8g&.\=%Pk>1fILu4\UDD=,GSV$8Vj+&Pgs\2"i=e3@K1Mh=fi`bHm,-Z\r0s
%]aBaAi@cikI.rJHbP8OgelPqBbDX,1^0I215Ai,L-dD=rc"FEH`<?o:/V)MKN0sbBdn*P5Zc#h,ZCVh^ZIn\_m_,.N0_tNgrr0[j
%o7''jDj,S>mGpM3D_a>$M<-u%LqgEfr>:bje!&Bcep:Y-W-?#EBp$OjqO72(X!S$pl@Ofi]qco'M`O3QQa*2Hd:!ia-^?Qe,gm>Y
%8m($UrWp@\#`Ot>f6DLG9P]T\0C0DK'mDX<Ti8@e^lLKFpsV#tM^[I4bgL2/$eF/5]!"gXHlr?Nj\m9bAc/nlSX(-%5C-L4W)(ms
%?h^tmT4X!1MRT_tH<O0AP6.Bl!FFN:$=SnrT24K"[+jq2:#QaKNB1/7oiMUpBb>UED>L0<iBpBs26?i5hMc+pS!l/Q!:ff31ESb1
%)MC4'.[+N$N(Xb;&@tq$`Xl?K9aq4dC*P3-%+3g:pU/\F1MS/Xj#O^hVfg:Z0!sC*:Xc-[XgPI'Q?b5rhTHU6HJ.Rb]?TcmU:$jo
%],@O>C!j5$\(Q151iN5th=/fYI9JHrm5DQnWGP$?)1b+.1+Err]G[3q$V.?TAA<YITH^.U!/._P]hJfHo9gDai.!r/#fEBul8">>
%hV7!GG'AFS?EH8._eJK*ofATQC!@oP:2c[U%3!MPL=>_LS7=N[*)=\$F2a5UlHk^F&fjN]>>973&Ig.&&Y4Kk]5L80\5;4b?<J$'
%6F;Q(e*_CKGMs7RC%jkfOm_6D_eF<J,oe=+ki<5Oh7I6TiGt+49]G7-f'0?ri>egu@]mt_Z?b#.F#QV#RG12J.-BjEH>E5U@2X3@
%q[14HSVHaNG+3^7[_4iTZ1Z]7_>QVN.BV$YR&LU,Z`U,&1]ICE`UY<*NM'sBb4tP1RV0USbqH7bIrK88QoZ^g5l"J7P6i;Y48J]]
%QS5N36`=,\X-Kbc^+*ok10%3c?G.g=^f1\Lj.b/-U7sn1b]5`$fMf^I?;OFr1Z+sE+\=rXV^%4<RaJS0\uP%Io?Gj_mW+%S'SUDV
%*.WW21AR(+>1Y(haL5ZBnqRXKfMN=+l@OsIGgKB?-15//6Oj&XUZ7jk^V,<jUbtoM`Qm4P;H>PpkQ;@7QbRF)=&[I*$\:stcE;3F
%cF[+UPlYkUXTe"h(+jG`Ko<enFf.mEb(Flo[>cR?eD>2Qi=Il\X#%BGcjr)!$nRNeo&Wr:TE!r#GQEjX%'7R6YSHF?2H1gAVGjuZ
%&'>'@o4afI.Di!OAp'A33V(@^i>.]&gXiD5*asU:<(1FHV76sZ+<qY0j#`LAYe0#aep#GM:E,k-6uDBZ[Tu/N"gg+YU;%0-Tn[\*
%f'eX`h0nItL)J&G;n(r$L,mC2)g,r!CKPtmW60:miJH#?Xbol!\,DfI:'B=4g3AqF72tB>6dru@Zjj(,S_;P=s4h;UHM[4U0FsT]
%O?<MCLuc/Qhq,EQefC=JcKWC*_g`?*R<rq12Go<fFANIA5a<cqabjepg:FV^]'VVuSFgouh7]3<m98o[]'Y:KD?orT=G!\<Jllk_
%J9[XR_;[AkmQ[g:%rHMSmUT-8FgALJ/[j7,9TgAdJ$BtP>eZ]gH!A3CPM)jBJt>h*Y6(/%M-d6i(WpOiXX]Iik[=?P]?3KT09K#o
%")C0a,\=@(17KeV/7C_Z(6lROQ,?9@2Ka,\[BlnrB]m7Mk!99)#G:H*ORThV4/8coV:fl5F</<7TPIe7AQ]TZT'/.SC[tM;5Nncn
%Y`S^#dY1LpK(]j8X'gk^TS4bR&TNTDb2J#`Aijs^(>_7WcBhhEk4UbF1.l$IgYofWB30A;oD5D#>3AK6`HK!q@Vkd3/&l>UcE?_&
%"P\@n@VcRu*Encm]?=@`>Y_=F9=rh_:%QT)SY`$4NY[a1%'_sKO@)[mClH0XLDI>1%Yp=e$$"45i:':i?JQXVqc3I'b,-KrBQR3Q
%V:.ct9PtSeMdf)(&.HaZQ-DoWq=Z*BP,>2+i8GcCT%V8"3G9a+cTlH86;2QtL%$cIbQ%[d_GeC[W&$'09l?c4bmKW65t<X9'k/7Y
%<_4Ga/gi.0(3Pd3Gm4B269q,7R^H<uf@g>RMY)?",(H&%H'/lP<7W+d856J=().V+^3KOAg#^cDm,[GJHa1<_II^Gjqsp!Qli]Jg
%IPprES#a`=MdIf<cKDNtPO"8oDQhVnq5_WP@+DIN9a>1h\^3n\)-7@CJ8d5J]B?HD#_6!E.M!l7jInnc;HYr`L*0cP"I?YdbHbN,
%JMSXC=Csc5`WU/C`+DnLA;,.>b@CY]o;W-E[OS]?R_hd8?;%WQ#FaApE$#'(752,@/KISB2mK=l36R4O0,,I?@Pd6U3@OlgWD,0\
%O%F6TE,#b4cgoR;cUnOcPINqpL%/2D=b]kEeY;[;=`IB@`4iT*<PTrX(7'4e:2MU/]W=`cVH2e$m/p'7)(D3hFdCa#C2G7;/fZ4k
%['!tR7HN`&%#7?@>kd"lHi?N/DU)#l_AZ*c.]bVK?042YKbP/&e&b<WB(%ueZZ'rq[&@^SEA8Sr$\?c=DJF7O>/@9Y/jc"1l3*E<
%lC@EaRT5V)Lo(B_R`_jbZhRZTF\Gft0Im@Cj34M5S#GmfcRLEQ74)8t`#5biPZF0I/[A&\VR3FYmfCd?+l(.m"YL?68El;^@1(Ie
%22!N[R3lKY\r]*@,q5qe5k-8&6H\nQOT6]?.[<?P#:QZpm6d!?A4)\7F;UedWN9VT_a1;]fRh"n:G+gtSdV+-T)TCd.i;JaX#_uo
%jJH*e<jeE%/%gpR17_[9Ot?rZ:4f1]25:#H7]0;<9^1USRbC*n=l\'b9l6olR?Q+cZIVLQ#<9,gPTH'#(/A]n>WGFiD*e%q9^<sH
%;]A*_;5Q6O\Y6s5ruk<FWbKV#nJK&UCLNGq/Tkf,.Enj2'k5B='p?f-V`(_HXi[p):Mul;?02P"^j*4?cc]^:9@b&T]I9<h=#-1o
%AslHC>-9>-,:X\WX\j3kFaB]TQ%9%E*Ibt8Gau=pkLL@Q%m9:8U2M_#10^3s8]V(8!$WT(,Vr@&\[Z6q5f#'A.BHX>K6rL"WQ.hA
%16mK)A?omQ8g8t7>*Yi;->=o<F.O>[n3J[%$GlAI&F?Wg)GAX*OBHFOPUl/h?!H2Q%G3'QI@@-e%BDr(FdZEM[KVGAT3QV/Obes$
%Lr8u7-eHoND9T.#:2[)n^cC63Wo0Bn`YDOBaN.rWPS]cn'o184eB14_iik$*bY;t-oYB1\#U_R]b%7^H=Ojen\j#'5)CoiS>,:-<
%B%l3KPW51</*KhH/>m^Nn0jKi.n?VDkDqg;+D#)Oi&3!iWOK@pTrh41`BKE8aAE=`,qAU<1;d3@\L5ZbP:9m6_I=uQCD'X@@'6=;
%BU0>J`]0ugK6FH.<2;jt62@lWF;ia9-nKH,6\$4S?<QZ7S^^Q*1.q)`l<F^$E-V0"Kh'5:XUA!NUrhG*`Oee0N_0#d2uilde_)r>
%p%$(/gh6!C?[i"Jolo0>%=O8WZKJ-h-XZlEj7rlVp^0',H1p\&$FcP@VuS*0lZSh_%qk('QQ$ui3r-rX(K^T+I(T7RdtW>L1AN*o
%>?Ku/lgnnko?SFWd%!ZbnBp$\6QO&4",?=Bdga,=6O*)8g$.%B!<\I1LHV"8S$QHc>R_O0<d^q+beA?a49+q]rRTadW3aqR"2[Z+
%243dCs4WuJc*u:@VpNK[G1Y.P`q5j9fAA7,Y!*@5>ZCT-L(37kB]@S8jh'jMc,IfeB'A_i2hK"+raZ,BGpo#Kce%>I<hrcDWo73!
%hcu^XSa7PS_2piZ]q<Tq2a_OCWr5nL95bm%`V%:?:Ti:K(c81qnrn',:rR;nf":V<c0B?@s/oel%H5p@q?)T!Xq@%L,Ij.4DLT0R
%BEVVu57^OF7;oWdQRA9;?*6D?3'/"nkUqTD\r/p'H"Rr*Q<QJ3o]ZRc'@O]N[\#IEl`9F7J?emL:V:#&mDi#WcY$=sQHLNGJqTDY
%47JTUk5FB,;3a5!+cNGVTag/Z<4RBUjo-7"h##8P#f#Q[D9kD,b$=CC7V2!"#<.1Y*2,,H^^rEhEhb6Gl>iXP2sPF-_j"6e1XP9=
%%H>b-\bnJPF+X[<9`!Olo8h/lRh+i6m;EO&TK>VkLKQhj\^,fr^H93e7F@/neJY"hI(hXID#SE$;(Da5S?Vi'9*'NH?[r'&[_A-t
%T!cJ%Rg70`kn'/-qLgtTa;BYNgs[W]\\ja3_,IQ)qtH^A=*muc4_`PIY4_6tCe)%YcV\;jBYK\tq=aB_^O=b:[mYoFp[]Q:6)cdq
%SU1h+o;BjTpXd%HlPOpIJG=oGf9bsX-_!%BlX?.r<IZc`@_fK]19]$UQd,6`o@<\HaD?!;H*Zrd_[!^LkGR^dk#MTV[iDBanZ#-C
%!?aFF9*H?)F7cnu=6Zqtr:b_Mr:cDu(dDi_0!8Lk1I_5bj)sCA/Ci>r2]S[@1ROjW]P)7W$cg*\"J26a1O;%kOTGr!$bu*b*e`!n
%Pn$pKr&#EKL?u.b0SF-<qLg\@#VPK_B/Bhae9p?Q36?*Ti=DM-StB<eYWgg@80&pR>[O(.IJC=_)M2aSC?Bc"9(6[K]sf.1:H>-+
%DD$Fl+=*"Gg)3XOT'(J`C+mRTT*I0DI<#1^ZU#`\#AuLWAdn7`24=UQnnGPeoD.K[oA9WiFlU2qkHJmB9F'p:`Zor9LHn6X5-;!`
%>b\NYN8`,"iIEX&NG<`bG.o"1_JkHKjgX!f:ER%.gKt-j&-o.g4>/J`*/N4.N?j9S]UmUG^QEa]/Fe&Z/7M2C"3l-%RE($j@Z5mZ
%2o\)Q1-,-;5!WL<r3\^Vl9,mhj]NrZ(_E!\KF%tiT\l-0i!GgtXr*^K/Id\kJ(jDd57c(#r2>a%"46?&=m(<$*"D63EI`8>q67TC
%fUT_0S8V/Wl1a"<Sn`YZ!KPL\O0<oR'6BY^g#l/ol]]T6c,J5BlVC$mE^$Y"\H/kAUX4,TFS]N'l$P>8a.!<-+,>Yq>4I\'j5I>u
%kE't.a<6MfPgeQ&i,A?%M8Q3/K+RA,=2t;`o^Gr&J3b07"?0k<miRXsjNpr^qglRSn'B;*LILR"5M[:i^t5XS&=I5/FCSFFs0hoT
%QP:)d]W:_e^m2qtT57[8%-M_'VB)i4A?tKN@D'K&Z\B=U\D@6"_tTMPO$a[F<I:`cS=a)'ecW?1S?1%4^>09U3"N#QeY"P'(BXs6
%)NTTah@jo@%P"RX<5Z<&OQnu:A>c><=(hOM1bMl&WCAa1AdF0h&-%XoEV&tbqG4+oX=qj_%`5Z(H)r&LK>_T0W\G.J+;D2Hk7EJ*
%A.Zdn^)/(l%`pmrBUKk<>(7$E-pn2Y1rbnq*JlNsdFo1eU5T=!*]X$7+BfgX/BXT?lPt@)b/n^\72[k:ULBa(/BSffEZcprH,lYH
%5=$jC+S(!NXS+ZmU'qpXYo.VC4VhT?@NGC3GRgu,6O%Ne'&8&VU)\fPjqqTC"td>h:lVBCbMu?h2^f)QS;H:L\8aVEnYj-GarW[G
%r.VIqhC^4+a4ghWG9%q.)Ib6ZQ:sNh/NNNlAS.`RGG8krUh^&t0[d@kY)RPj.-TCU&kYW5D%tS3RB16:8Ood=;RP7V[8C$FKsd&C
%NE#;U:pnXpo_*j,ouBVY#(YW-jT$9edI!8t3A.'-+;gHm\;].bk_HKoDU*_k?iU-!3G\aJP"@AN,*?O.a$E"J6/AFWeTeOL!$GQb
%5&PT4P<ZM:/^H-@M&DI3AB]GlLJGt0I%;St;o!`8J_/NC)?0XSI[E6m\F-\]e'7crMquG+7P!cQApq'(KSMkLV]+:P:RLk;k$a6@
%?cJlpO#*f*A>qe%`g9%+NLn`fL$sa:aF39Pb-5:o9c3nDIQ2-^0Q>P^qVo8tpZV,@P]&d8g3s7Zo_[qTkLq!e4kPT_8+%%+FLmKq
%$4O.urOU/o'2Ad5H8;UF^_h6K!C^M>%XSUO.+bXu8@XE4d]RRZ@kbqiI#iqB%Mn\tMDm^sHG?@4mp;SkIJC=_)C!&rWL;g%3[/Hu
%[,XorEMq\[pj\o'@`Zss)i\h/s7Scko`'sNhpMHSe.Op[C%Cp^auT<GTAJ`m*qV2`Hq0gt+/&7b52S^^ClLX9*AZI7o,W7nce[c2
%HM7@:ooN*?%Y"?e*m)fkJAG:^2ZpDR8%"t(<53@scaU[F4LF^d?Tq^\Ki]XhgNC<qg,C#@ZjElngPaBZl\cprfX^%ao\'=nl2's6
%aQ5do19Ng&0-(rm(bK8'DBTtFL-7@$))HlJJ%=?N0"qO0C@h,O`Tc&/gTUWs[QWMQI=8XdrH`h$^=_\6)GOk>l"i2INMa#^!saX@
%U]'Q$KdBY,n:n%Eqs<A9eZP,5U1r#D:PF"9^i23pn84hp-E-g[At$[VW>i$\@6J=@b(B;Yf<W8S'()<Jalr>obmCVXbNBU=&(9T]
%[RpAtCASZ54q&9q+RC](/_sV@HKM$4bC=sBEV3?7oXBd6QdP<n./5kB?J5L,@`++k=kN3f<Z&-WN/!\Hn1kng7`3D_GSprD7q$X&
%hd`!4VV$UMJE3$?@s-jl-p1":6+W?GjkpS>cYZ2>o/)DcaX.L[&j1q['19cYkfG0+N8`-I9ajU\ETkLkT%h@'_rGbJT.ce.?2^uk
%gM)s;7]&-lR2D@PdhCh1B9$IKVScf%_[5hKo>OpK^dl9]`sbXk6KWNOrq9P=m$N38beE^KBKH%Qm@+XPe*V)"iolpf8^UoZ^n5CD
%rmAdi!tq8dgY&3<nI.B*noP\uM.3jkq/eSSA./Q8>GXrI^$H9$H>VQSs1GnZeSr&Z*Cu@^6Hbs@c$rN!r%mU<GF@:MW=0d#bWMU=
%jEN"_eBj4A6[NC%05eeV+Yq(OMB'M<0gt5M6CGaPaac\TG'5np-rB1lfjM*/KDD_h(6IZ.51OVb*TK/UO<3d+UE/C)m21#R@iViU
%>Wi0N`fMp6G)V((F@SF4Z#JFENcD".I'dCBG)RZNA"\R"[2p%K1?rMu5sK^G\N[Q-T7==5)\SdfpY?)lfDLg@l/[DjH(JUZcbVq'
%A.V8+/735N>b,/km'7O!3]#@al0Ndo/r?P#;[mV8k+R_!O5C&AprB%)KpA9F:s!fE\tO?6c^WJHk5S_*/l%/bTrn/]9(nlWU7l*Y
%i-^B^m1@:FIC`9<_fSJr-!Se/3qE8jqf0\LTk[@\Otgn%QoA^&)tZ[r)BqcN$.B)AQJq#)lcXM(k5ai.1^X^jn.&_sI;VVP`q1C7
%\72(qTl`h1c@Lat%2m$V#C@cC.G/F_@#c\gbHpEA]6<ojP<!]+-k$+(eP0N+Z+1Ne5bf4o36^"WJrPf;MOb`G)10lpmQi$dD/Rkc
%7W!%mk!j3*eE2crRi<K3N8!'.d,pp.GhAt@*KNBC+:6%"l>m%s26(_m3]F'[nT[NGDH,eR-8KfM$JhpP*4eaD4=?D3csVl*V>H>@
%p@O]poao8,l>t9;T6kH'9+9UDIH\3<bjn@7:iOFe&n?C70gFfAat)ujaRGQ>j.ONFqf<<Mq,H4c^,o\or;-)>Mmf8/-YHMqs)jE;
%mISlsk<l?#;X^T(ET#fn#J[,?NoScXd0^KS-s+em`&\C2F5)($#B/`%9F2?$B<qC6.#p>,Un>jRI;&9?R0_?\cceLn)DHC]8$h[i
%T5XGcA3EK7N+tT-W.+UtBOCPFS2pUaT-+^UY'n1gc^LMAZb?-][GH2I?t;H7hsj[@)\A2*q>0[\qIDAr.HB[qH.&C+"-X/obkf*#
%5$ecj5e3=Z29iLqSjRBD4!<S1jrD)EZk*IbT3-JES.R2p4j4B109=cuU.qhFrf5F^'5D[!3U-3MjIkZg1&M&7ohZqX7G(h#6JYk;
%CjZ>0MtV>icVN;Rc)h36D]+8'_\%bqR:qhADXPRb=i3`]']&?8p]HkBSm.`Uo9Ao;A+q-EJcQ;?f3LT1E&t5O;dn7=1$hLS'9+.s
%lnJnl>e`HGh&;q$r48q(1^<R$]]An,[gr-6*Bmgm5J-c#IC<)'3_$!V^-'%(n8U8J]Sqt5*[4HFFQPQ9-m(Kk*&<79B9#>ul-PjY
%DutFVI.<L@nAlP=hKZ9;nJEk!j'dRq.eGh5O[#H5Ggp%>,t:#7*'V^7<:LpVV&U`WJ(An%T&js+A"M@@VrSrOd+j/a#"Ltsbp8FP
%muo94H*m3`a<K)ja$AeuSn\-4mf'jHlKO-!p<i$'DtgBA_^6&C90.BrS&`Mg)2Gn]?9O&h)6X68F9eEaj703E:GSI/a!;=R]^B\]
%f/u]*3s'%$>2F6q5<Z2Dc=;O`+ju"t+kshsKQ&mQ[LjS*i\<gGkT0omOg.+&.f/u>k&PTfq1SI&6_!&8ot)BRHPG&QF>CYM:BUUj
%U#sCop(LAgeb-o'O%2c2SeI8]b=OI7mV)='&^?mcc-5c,B(IAZ%NuPl[fl_Q\\@k:I`P(f#Dhu\PA1S68A"P$OJ=LWn>IC(n/P.E
%UZk/B:EaY_oCGhs\a';:6S'<,`:B%:E6CV1^6j=YP./Vm;g0&kPndEnp:K_2&'tZ[Z$@YWo?Aq$(Z@##?[VT>gS#_Hr;Q6Bp)KW0
%ld*=`Y.f4M9P,qb,a4jMHhl[tjbs.YNFQ4$anP9_/W1kXiGNDRg/])>8CA2of4gcmRnF17cYL0Z@r$Pm*P_P+q".oip=gjbHoq/M
%s-l\WiE8DFq!uD).P^$A92%7C&t;Ti@OE8*fT^*1`V=tpS7#b[9l4U<Yc+J>U_OVVe&7Pt:tS#@fZ@iuARX]P>]-HNQA,":0V;B[
%A\uJb@@8C?n!Z)'9sZ[sii8@][4S@dkXYk".B792H\>5n*oXDtk"7_[bGp)bbApdO[NGiDjY2kG>3o-i9WKEhZ*<B5=I@"p>Z1u*
%\:o<FMC`OCcMF!Sg3qnQqJlrS:.m)k%*AT?BrTpMa2'a7En!$"PeO\ZKU$C]ZaS\FAd@*.Y4,?naA^T&#GaYr++"1Y<(.iq$"hOV
%bm:*[i(6tVlK3Msk3XcXg45F.&.Qe\d,!.P)#9cB!;458/!k[dQL-:]4.t^9>!kTI<#pJnjaQDiBWR2%<82+6'dItSYYn0BY+56o
%R^]oE^%UPB5_F)AFT8iN8A9!s7,9i>\n,6LA\/>p%]B\!X!F[A7G:5XYZM,?A_9TmU*:C#BcB4/fM2ke^/j'aVpV73r.a[liXhDa
%YmrgBPQO_.XUpZS&Al"Y:SUqUq+X)\(lnXVmtsK`Ak9P7C75rm<TL64P35Asl?$clB'EtA>sU?0YoGr9Tp[6=7YNi\@TnHkJZRGm
%pi6b,^>KcSZfT[``_<`M.J9C'Aq`TU?koQY/jff3<N1'lm3tYYB-^nG(.sKr#+X=o0DTgH)&6./F:[$Xl_"Mk<"n<a/]5`/C>&dg
%mT*Fj<Fo"p='/>]>`RT;<`hsZJEJ1K]Qts(;8Qe[JI157VNn-e(*K98A==chXfZ-bQY489l%piR0`g]/CR;V5e5U+YJ5UZ*I+ECo
%#*M7UisS.?Xa'@"f/d`)MKBbC#=U[P@EWOL>>S_[39c@+-*Iuu9k/^JI+/Hno?qS:.U/2G&O:-IG:nXeFViU/XOjORBVr>>lC`i#
%AYc+emVG_\!bk/9Va<X^%+Hs;%4N\VV^X1O8_aA@MbT^0OT9ipn3dBBQ_=O)&d9m:=@c6unm#anog>"W/6dfN7&;eTTP4MMK&B]\
%/8>_6/'GoO\lG_`JA[2t]hiSj3=VXMApMZX%'uAd/>Pi.MP-I?S)jLo4A"h:W0edMKu[k8#,GD3M/P&<_V3riqhIi'M5!8,gT4Dc
%R-#hLfW\Lc(j3V1#@7#)#".[7s27cCq"Ma3:`Z`KjnObCKd]NcF_!^eWk#[Qp^qV/cW?Iol2F9IV(^[D43=Np%Knrtci`"P3@o/L
%,6%/nApqrJdTA5=XF>5>`[NN+_ti'Kg$/Onr%8GUh+(s1`QP=?U!WR^]023*?(eb(DqAX"U(VtG(A4l?0434m0>EtRr#_Uf-7Vuu
%<crh>^:B]FR`sA2^]([U4DcTNf;`$A<0p;,eX$o3#:gN+JA52eP?8\H3>O:s@j]CV9Ap3Pbp8#.-1jnM#hq+h^DHfF(2h7OA@]i-
%\8FliJ8\)q(JY_*?G$c^Bchu9BFOear7FEtKmW"O&3P?b59PCPo'[Bn/"]Rc\QkbuD.'sB=84SE02O%G8^5b^WD*Q7r&t?k3!I<-
%<rDo]I\?q%SO761AEin[T`F[E;e.;[TfHe2RXn5#Mq/:70@Cb3$iD*SA<aMfp-<cQ!Db-K%(N6tl=(>,Uh8QHL<1*YGJL7(i7/5u
%C*7=CZ*agC*<E?E_+,Q_FXu$7?!I0]+\NRo9,@4UBT'm'aHB!563>c]o._k?Z>RM9Uj[b6Ij[B$5@TIu8Q8#6KnkD31K'@(88L;+
%,;4]K,W=R<>-UIQ?(91oNXM-o!qM=4V+hfc82@=p)Wg:H3n!:WIJL`0#t^Xu-&n4?55FoKU*7Sr+@4Q#B0_!kMEE;"aZQV^Jf2)+
%3R*O,-3hmn?"FAO1n%,7#-AS^/RgYeKRThJ1=Ko%.aT=8bnD=EOeIPIl$(JAK<Djf^"k"nlnPH1)18e[349S2)IEDk9>:<2=!/EV
%E%T\KjtiKNfDI.`+;;-G]ZNj.b<bK@Q.q-K'tRsQU'/m:kE#T`W1)jIOD'ONHa8$&j*I)bh#9>*iQo@%RTiU"jsL1DME(r_%E+rt
%Af6CTaCVsF:s*6Y5t0U%[)fha=]"0sI(^KgBh"2n\:+SQag=fop8.t:/1g@DQ/G_hARHudRL+U%1*DDq[/1!53(]$5`3choR/Ct(
%E(9C*"M)`eEc]r]F-TfL6%B(Vgl*Afl\"@f+,nR!"[[CQnA0"FqW4M+?NEGA@305m&t[E^-R[LfJ)"B+YX#]]]Q`q5n$Z:^DGIX,
%V_BnNe*M[68!%Ithu$1qo;D?;bE'4FNJ/F8MGCYL2K*6ce8M&(Dt&_&\,P?kCkPSQ!f+:Kh@`oDl]_G38>RJ\afu#W4]tQnQ#bW8
%01=]nk/FJ00S(KOr,DAUc1qm>bP.Ki/!fAtD1-DM^57WX;s:og/J^$iFb8m1AE7h6L^!fPqUgt9q'.0F`V-d!;(DPIUgip1d]0Ck
%M`SaOBp%JLD'>q_0b)iN0>SWn:fFZEXC#(-YVh%=jMj#*7N$K9Oe5rL%Rjpo7:[bhQTGB3l6ZNlIm=#ph^]gNTn",>oHGCo752#l
%r;4HCPZ'>9J_6n&EaG39gaOA`,=.nqE,kRZXsr*]gB+YaOXnV!#fn]egt5._*r;D8J@t&*kiAs:<Xf\'am>9Rk9*VZ[2[in2lnGb
%,+GH$m7YOW%*0el=&/pdZHJ+6['$8io4G8=X:.dI11<brOGaIdnHt%\!1@6W6-P&O.4ht;PROj5TMZCl/;7+)2Y9A7V)UA2l7a,J
%E#&liYh3rpDL:h.pouII2?`LiSi.\e1]h#iVnqD2'V_Flj?\I_h1.Zh6+RRg7QGdn*,R#frK%#JB-BdK[[3b?Gr.49_Xf0<Ns=ao
%_#-\?Qt\lS"#I_6.!/(>_&8X+\mo-.DS1aU=XCGLRMlSgM/:D>f[cPd#cFB((/QA16>J/I$JTms0l$%A\N-i$&7^X*Aa6tpKBIk/
%N(^Q.T%:im'D;YR*04._dE:gPj4BdpS`'3=1`idCUS'^Vb+k5IZnakSQ'j2BDHDmHHgSRJD@];4)d/8<%H'uZ[Z-%#)apC*BaQ+/
%]TF:U#8?\ZSM"DN%.ZiE,Qa/C7)eHWCpb<tZG<LDc/9=2*W9),n"@K2b4@+?FXMXSjb2)b(P(-DhE*iCI_3WU"=^j.L`HA$@WXi5
%%mYRbNQ_&1T:_<eq+!J9H^(-mq0A3s8,7FpT1A_QO-Q>_/"g*^R?sQ-S!06*m^H#A-L3KWB8"k#X<Ts]rXj@9T6JVIb-,(o<#0a-
%2$^T*e&n+opME@E*fP?h#!ZsRX/A+@Ub!/$-q$8N#_g$C)C<I%JfH)X;1e^U,fn1N8Xr*Zp3;fE+%LqD?k>aJc8H?Uj2Tt+rJ&1!
%*>[RNrBrQaO`[Bs.#<pu>gp9&G7*qi`I#*m>>EWm7ggK:+=Z6:1k?q.<T+Fp5_S_@Zm=['8fsWn@ni+/1W\X;1<Fn2KfMGnQ;b#V
%fO\bdn+,E4/KW-oKO9H4%M:L:+WB9`%hR?s#O\?mFqgnd6DV?,g0S/j$-X^J'rp^L='Gb@R)NX%8P56*37T!'=<I]D"a@JBAJl<8
%7Znu"7J4#[;\Fpl@j[oHh"1"sF3#'6<Eg8E`-?!HJ`UGiGEm<69,6?+<2`qsI$*`0cre-k;;Cd4Hdd\c*n"?!QsJm/Z&[@H5g\l3
%OMEs\fcZ'a5`_eQ2751sP5Bg,aRFcOJfYLo#NG+s'Gi^bNKbrsMftWKD'(sVbJO?sdl,H_<?X#3RF-JE1+Q$eC4`.=+/gS5^b8Mo
%.*K!=CX+>b8WcDNJ=-IB="tV@<6Qa?8gECNUSQ[FaCJ["lDP6t0,;EQ+lGgqA4CO59ZaQ^8m-Z`[Yl)n((G=&PuT/T&a$!/KlGLL
%U$G*Ckdqcj[r789jUp\h_9,X"34QHg]`eG<ihBL"5l!TGP@ma$eCuGifDj1RS$o_e@h$?EkIIbp%o-a^$`527UoFD$?8.%oKESTa
%`Y`YK2R-!&oR(n4qg0)M<Fm-0/D\c<pY:0-Z&c:6*M#np8!F?3hje0eKtT:NUYU*&6jmk;9aJ&]L7P>L-Dh3=?T/M>L7;sR0I7Jg
%0u6nR9C.c3]IDi7D*e16,o4km-#'O\0M0A(Y6]eK#Lc)goe8()1l,@+S;Ccp-LLkrVbcq?'0K-.!['1)6o]++!=18fbV)=_'Q^3o
%+E4es$I#q:4uYPui/T#%aHdGjN"J$!MQJ(^o9`P1,&U'5m!Jm:rd%95"EnH")7%U$CC.Tq9j1<Pa=Y4&K%+IVVlf<DS<V:?843T>
%/L#hjK#/IBn!=$&e7olahuH`LBc9SUL7('B@7730#!$&masj+@[tlY9XW>c4++W-s^a+Si/f'JqEhoJ+ctX&VFe8]@EJ>8#':PG>
%D>m`naMLk6"b<Q-ogDJ*-RZkUF@6uhq)43/_K;_UbZb77f#aQIB.BQ4656#;e6:")(>t-+mEgY<-JA-X"6TAT!%,9.,^Z+LRhY'M
%%CrH*/e^QfI=bF*=@o1Z8/@]>J@P^AJD!adS,#WM@\?bd)qj\"*^_[`jJF++B9G0(UgqC3MB"</^]4N&dt[H\L,LIgkp2"H4GEj,
%_MY^&(mBISU@uiD_#+gV^hfsCc2=@a0i5I^1RC^oK(-Q&>c,.>4W&b@@ZuJ]DJ/&b=\Tf4f+tAmmQm3rg3lhK)J'XQGQCIZo%7mq
%P`T<iV@6X1>YmY)!AJY6Hs(;O0hNMth"p.cX5DB;P[N]SA>Z>s$#lgK&$_'c@`h[\\uSm(_8=bH4Z8EpA)"ll&J2/^g@K^1j`/d.
%o"kEk@Z'CXBn5,nrSeT5>[;Eo)lo&jfb8opEDRiEhjN>VY<!\G=[pDL\-<S9'9gl:B=49Hbj;@fFIV?T6a`]U;%tJZI62h;Cg?\:
%>k6C(I1PH>MOob+I""\0,flVG8W`'#S0mhQ.,g1"=L1Y*!dt5eW&@(Pk"3WZ$-UqJ@pT90rFN]dY[O@a#'4rXCi#89aT^km%o!jj
%6(&4U0[s?;On1.!riuX$!Z#CPn<BL;&u9.%8H?jg.un"7JdOglNA*1!Cb8cLapf4g.[pFi)fsme_;NM:/'Ij(b`i(/]iVtLG?fME
%d](Lp/(*8ZgEb0<Wgl*ufOY&A*V9d7/-WR!*#gOB7;sI'=P5f6Qp;@Y/<@VpQKJYZ1neD^au;1B8N?T>lSQ@2<7i&;EZX?I:]S%G
%k*haH/]*Oh8Y[83r7`1$\iEgs>H8$=S';HEC^h9&@mH/:3rFqI3OPh=jVr8iP8n2Yp_JmA<eRoq9f!k#BP)]2I+*@K[Tj]k%lMrU
%c"@Fm'3rI\UAhjaZcWT!:878]'IpI-VK$DiP5/>-]9J8(F!^jD_CV"cc2tKXJ']JRs.0,TNTP0X!PYEg.2Zt.anWn=MF0nOPhJ53
%@#<7:*\LUt&%OEAI"3FQbR-eY$3F6$bR:8^7%eQ:g_]LZV_"(0QB@<8D1kLF'?q[QjcnOU"JjWMd!-fQ2irU,*_.%E[KhF+9cH6L
%h5jKa+X!+(F*#*7kn)CYZifU,pTHp0;FQ;Fr'Z+D2W#uK@h<tLb#7?@aVtGb$@Hn=RhKq-(]oHFoBR$:[\$&)]iq,o@A++5o]u_e
%(nG"7METnHc2_B[&UW*'\6Nalga^.ape&RfNt_V0^VM_SRQHRR\`!'j8N)[8Pp_.iMCI9Ug$`U.Ae^LuTZ`G0p@(LC@Hpse^nY`J
%BsaQb#JL2j]3!Z[+;pUHm(9?X;P@cIlbAD"c<@'g:g."amlc_+%s7+<m3Y[k<Z(%'qIsB`HA8959hC`qMng1+P>$R\V8a2M4%bS:
%8dGoC7%eUsQpc\O`d=;@lt!ISil!i:_7GRGIFqZNnH(bmP;/4*KZ)gM,OM<l'kOkY!TM^/qaNU=5!Gk%pDaXXm:DLK:m20GIfP+0
%S4tGU5rsT"]#*NbF+Df/Na[h'M$n6C8>X]P.7K@q-E4"g!OZ2_5_&S-!-Fp1oR]>c+hTP.T9:6.!-)QLBM%hd)JYc/mR6^.mG_9f
%+!l[NE#n6^JWV,!#H1Ub"5`O8+mjLYBp\TqLQ>WUO"J-@7?[LSBo=Ia@=PE`%'.8ud]>75!i:Gg:3r)=bSVl4*/o%NdVZ^E7&*f9
%gI'a0WgU^e&*$.njV#CCs!1($M>K0S2V18\9YN=@lC'Y,2QdISNIM:A>Q-o.fV`H%3P!rnLN7JAP"LNM,"d6iQqdA+\i@n95.8,r
%Ob16Ebj%G*:/cUIaYuLZ0d:3IqK#c"r!PrD%T4qe^bfWWd'k-'\f#8++l7EuDo`LYac?`2>+cL0`QcG\n8"D5^57B66@XMaiP\)A
%\3)H=@iCA3q=gZtFCDa_"a1u[qU)-oD$GAk;#&Z&;Am+A?fPc:GmWkhDFJL[,h_aB'9k;-Rl(df3l6m"1=Ui)2?BeW*6$'GZ/^XI
%K7]/#A0HdIFE01a$L<XR4?2j4)[1NJ*\*>h<=*&EKj.`tlCrVmN?^YR9b=B4!&.<b2gQFa9b'j@9c@YtWYZ=55%`g^9D5#6HMh3b
%"1mSi@B)(7(/@+VM\qeD?[lV"Le^-Y`[9%CbR!kQ!n.`4Y>CB#G90@rH?gW.=6R_$+pUodOZ'p4,PbBJiUfT%=B;4P5RbX^Z57pK
%j!SMS-K,\?JMQb+fQ]8MOB+YEU$.&JojcR%kqk5_m"N7*M.<FgCQ\H0IGFFYLa*X^<[g5GADQ9I=ss<33uN*JFLI6]JA]@ZMgBY.
%m(=ll.Hh'8L=cW6)!A_9dOgs]:S^:+asGhpO0Gl?O,S<l^q+kQ'&W2A_EYjB\r1p)9#T/!4K70,1%"Lsf4#CbM3n:\Z$#:ud=<&$
%6)Q-=5,W)\&lbPVQ$BY<X"brDCJ=^/#0K=o7nY,[qj.D^]WRq3L6FZ7K^[4+m!"$;gj>.sr$?<3eG0`+U^I\dCku3tKI97Pi(hUq
%A]@R!fTB?fi<)]ObXfU%!IqB3gTF+qH:nK3eb/B^%_m7JMI%aT'i#1PEggo(#:g3*#L<UD[@3`<":A?3=T9a30a12.htgc\c2Qs\
%=5m#$X;>srirec7[4phU`14.Fp.2]BBA=GE;&8Vl9SEaK[t*Z(6EHa*/]!>9[[%&&#;"#AXF*hXB&r'odXXncgmbXp36cJ(([>p1
%U!*+HoMc+H$HI+Y5\S9[N4BFq@:HkDWc(:O(H(X1#FRld1J"5A"NC@>8?S8je1_3FLDLVfToo#Ce>R>#.@MYrMiBe5LqT,2@HjE<
%b9it.pc<.g`$Es'K]HnH'qL`L^e%?:JlSj[5'Z?(@r+qOkh/"*d_@S^GrjTmi(-\/.VFdXLi6`@k`/NcIZc1UUB&mPCE/7SLPm4+
%9d6-6IaR,&>M+Sp:ilnuG@4rUjFP$0B@:=0cu>6@'nmDtb3qn,43DtqdQNO>="ZEfhr;$-[cWLI;X.9uF,1`1if:Gm#59_/"[7%W
%WY-_(-q%K#GVH(X>tC8pM\u@2EJP^uUaICR`f[91B[u_qF4h"Z3QLf*h3H'VFP=Eb!_R*4Pjeq79]K'T&^d',$X-#3(Jk:3Re:(Z
%7ItY<;LoDT73Fe9M3aC$8In<G(cfda22YQ-D4jDn/Por?W^7SqLGN]p#:oG8LPI&8g<:m"2Wm)1",5_/p]uNF-u9Df29!,3A!,Ec
%ZYbEiKY*PTkeB)g+JmOSfQ:N[Qm)j/LG5@Q.LIXq)qA-+.YGI.aMjLXUL=P-"`S*u,4)QQ;KF:GBXAi%G_u[b;uhbFB`T'4>4Y:-
%E)M*E5WQ3.85umN<;Q$1gBi[NG453H6l\8XPf,09Jbe_Tn8,2:B#Bk=8Jf\X(iD.@QBku*q+?ss*6"Qk-0*3nCa9$V-iA@"**U9j
%T;6uCpUum_=]4m4jYE,?>0I)hf"o81Z0%JiC`E68ed@VUe4DgbKU;L'G(CB-m2YR#='3Y/mh_YUMo+f0CV(W/nbEM2CU&^VZJHIY
%Pklt3b2e(=+p,ZCMhM>go?u]h/HFTD>5mI)_9lh&3U.`&(/kYMk<KGcnA&F;\cIT'q5K'[Vr;&ZfdPhtS6V0!KpW*poOH-XCW:D^
%j#SKsFlF<rk$oIFM\q5_OMNeDE'*6O&:E[YQXfZ.\oTA3_0*!?J>PSt@bHF"LdIjSbRL6,H%Un8EnuCL0ud+eU+cWZ$_CHZg3hRi
%>.IZ]E:>[7#Q<m(jNYNumY`0)R'3s;-0!lO2KkZ?nr]K'_ZbgOnLPp,8RG@3(JVqiZ1:c\":R8d'=U;:4<TU((S5D##E1H'>lehN
%"1];'B$ho[[t"irnA)7ZDSZ(bg!k&e:>k)D/.3NpJLSjeikL0:qTd)fWF,s3m"L!giVb#47Gd#$Q=.i^I(C5i5L?qF6"P$T_?#;d
%f19*s$Od+UNf1#O5W=5OH1bPc[.2KkQu"f`8T=_O(lf]nB_-qqA93`j+lI"7#./89bUUf1s5F55l-d-.ClFG:2-'@^C)OYD1)3.%
%F5VlCg9^f2ME"[oM]QB$$)cS^%'(UNX2YLEk[Cc,c"93^6FON-SG/bi<[F\?C]igSi./WOl,T8DS=ab6FrUlS7Eba3g=QcOpVdYE
%$K%8?fIn)a+"MLOKC\$hh[H#o0\R]k#.\L^.GfsAn/SArTr/dT0b@0+e$r5A67Ut?.5Y6/\fnR!4IdT'PY=^FB'F9R>t#'0#f(E#
%kjODi$G2^;X\M1!c]KcO:)N";$\'U7bk3kuqG[<TA(%$p!4227-\EX<\O-M(p?D"Y9;9E";_24^dQ(^n.MQ&`.%K;q]>PDQc%(6O
%%`]WN)MI)0p!>1gqc\_F0HNO\[X:IKO#LE*bUhB2,SkjO`mM"pSbRE$$i%TQr6oVq<$%u@:ZHAXd#It.U_YuN/`AV_<(8C)_?NOT
%EiPId>Yl@8Ps'EAq2L<0+]D)iS>)/`kV&;)GroL;JC;!@SY"cdCs25p=EC&o*gaX?*/.FU@rRB&`%?\VA;kVp_M=1oiiDm**h=g+
%lGiJ@d9,VG[BU,a&9'rP9`](C#7^/7)cnpmUjq?,,j`fCa_ueP.PZjAG.g>7$P@<DfSC3;0P?ug&?Ul.gkFmk9#.ARg!laH"iB2n
%PZ#`%`ao<>(<6@s&CaJb#'>``/S]nCHbuUD;&C*^q"^D8*nJ3+DD8.3s%W;7$!m:^45r]d!C,qF'?ZG9U//d<>i9-u9t)bF0Mc2(
%PH$22$2OSY6QBO+T/lc0oHu>d"P"<Gahj!&;ef3`J`8(c/mb)ubS4.r;pH,QU%Y!:qA/VT4\Ra4na%^^[#Y1.F=K)gnIe&0b)U_*
%-XfuRG./U9PR=[\OVXIrJ0Whcq1U*&k3t&m\9J3c:Zu3h@*If_2;^/pMJ%1p[*RApOT83\%uUS2=2c0+f^`k+"[>Q%Z,E-(nf%%p
%H+kZ=kX'3P^W@o\XUWFYho9+fNtKZ)6'rnKEfrDi62F+rj>4?.'p-V)SeV>e[EQEGp*X=n;@$qaA=%f`TN1T@;Jb#Bl!-l,Fcr8)
%_P;*e+hj9j@<rHJ&f&<#l!H44:nIcI_m2iFA;C^\,&B3:Q%W5:Ck=C.LA3or<FnNg7WVA&dROb'a=X)dasC[U@,[dM;rJb]"KtC)
%\CkBp+Hck?$'6UVL1onESq>dWO[k>P?n/d&Q)F:MC^,h.Mp$iRJ=2h)F^Zk\:7MP:`T2X$D]-*,b\23^6?1\"^0QHeS#uVYV#0&U
%Z@?M!AW+b>"(YXT*/mUK_GLNiRF\kn+%Gkd(nPdqYrhpX)dO:&+,TN(\-IG<2"2EDB[W+mNF=8iFC>Rf?2EM\,=.ZmdQ"QZd$qnW
%4+,VNqERo8LF8]&a0sA8XM6[t57=Z0_mb<,(T[<<3/Za`lgaAh`6%5)ZAi1ldijMY'/p2pK$jMt#NYY5!%Je3M81NZ0rUmP3].PY
%@q;+)emN$Vf1q1/U"1`b1N[(PIXkX:4FUV4L`$i:ZkY<G$u@QC@IRq5\Uaq^Jj(FTkYQmW0j9Z>%]Z_.NN+B/-=3$?/jS:_UXc$n
%K$qrj7AopX"t3eS7)oWf?D*uP?<cEk!5><>_c<E^0tJ%m]0^4bfM0b[+K*_[dPF$,D9DLN#F("(j)hRN"n7*fAD+4'`U#@JF3#>P
%cN1p+'1&,=F/D!!&O$Nu1\fEXYN=Z.4c'L-KG&hUeYK[-=!a,N=]JU!@;AM-ZIe=2V.:^'Z1=Fk]S-u]YTc2<gWY>t;PVp'6pQY[
%OTY0FSHsB-6tJ9`ja<a=YTu2[%0dTQhM)'Rd[aPk$js9-!6Relnl6F@XqH[6Ff-uQ3;:gKaVQC[iP8VTNOAEH)M!_kEL`Be@PCWi
%B8$<r/pBM!JGSJ/*JYoM!,#5jJp4VLitYCee(?+&Jg2'ZQK%ed]0qc)TJ?>gUANP.JXf#5<Ns"MPoq_\_Q7HK_iE0./Z`'98qT-B
%$si,E_M*2D^a[6o@sTQ9p-F!=YShg='/ho.PsPs7=]qM]iEV]rEQKS"K`X.IdHd_8\IQVWbgeFPH/p2.=9VZ#*;u,5F?_6qBcAb`
%;0C_M_tjZ]7gYnG(?8ON0%QVe7r<^lbFd\)R"&2o`)>>;_,d'Yb=+K>AaNKl`&e+<`cG0YXK90g8Xg$MBsQ!M*H;JI4?>eV55HHM
%k7LuJdDG&N(U7u:Qs@-WW&2r"4opCr;E)Tac_FR`^IWo7-tMTQ.`qW',3<7R'9>aFcRZ'YRN,fmk*p[EbiO'p'VnAHiV:SArYD8(
%[<72ffe1"ALgDAS=c"dG'9Lk?F#>+da*]0=PM#Yli$@9nHNpjTf_a%8f&6iJV&3LV!["g>-U++o_C>SAQ-s(&,t.JOi!F<n`(BGV
%V5Ut?%+L'`,W5mC/F_khSVif9N.sm;(VC-sflhq?A"kGd5/tBM1jLH`K9S]^)g"p7fK_WFXPgcd?r3aIKh`=uA"J.;%j?!!BnZBi
%(1:<?F<O+;i#TnkVs0ab`-hDq=SPL;\83c]"@Si5DZ3SAUi0JY^F^BKna,l-!C<MQB!<.grH0Ab=nk60d6;rH1l"N2.)J)3iq?5-
%]*Y9uQ4E?NlX8/$aH`S%!#AZK-=Clu9q$?N;E>$$%I=`"72T2TSWZ@\8C!$dX\L\!9&qfQ2QVFhq*:"<&@j@k/f=rl2I501!3.mH
%(DA4hL[M/Z`=XU/1sB;A44>&/mX65)L9-.os!IQ-KLu-;pEic*II/HVVrGZqp]5dkdXq.=V+Gi.)E[T7i%*M8Ng0I^&hcse/3G"<
%8hbT+\Wq\45Y5G?/;+$I<dU<6`I+!mPA3X$Xl5Ne1u;0-&iNO`<<pO%:4J44L)pKTRGfM15n1ZSHfS3OlX[`dq&r4=/`,D0^Ch`3
%H<n@d1&6E!/A0Lkhp=BjLr7M(<`57^GrQE_0pIh")2cg#Y3Oo0,>I\W-'Zc=I'F7g8Xt):6\:l)'BLV6b^b=X!>@eEc%/[/XE09K
%]U#7nFAHu!aGV,,P,!QHA>QIO96Tl^i(IL%j<A4Fk%otSD)ul,cJYZiM"=F_\mmE89'bh?O5;Z8T9==uH4uWbKC<QZjb_7dm1Nfo
%m-rT9S%u*Y@N&>QVTbd_LeW+X2ZeHg0"6sl=7\r/'T>Al-&sA5nJio-7^p#<7$q)2+4-3LNRoQJ+tFtdMs9>'JJp*W,SF'40S$qM
%(MSKd!M3e_7gU2HR!oUj=ti$2R$pgFQNfU0/n[0+hMJ@m%g?a*S_q50@5TU;OA9bQJ7^O42LIk&)VUsRJIbW'-BQ(f$9A^HGY;\`
%Net`nG_9(`d$L.#YtilGP8rM:`16V,TfVq(a]>3Bj`DsaU"2B!6Rftkm2pi-i4IS2n&h/@f2SW$n6:+eQCU!4aEX/i0s4Ed-0JLp
%GagL4k?]A,4[dYm5#dAs&MrFiC;.)<aEJWJ-kB,+$'T9@UhF4:/tIUk*\P.s#]mt*'D1ZdS+R3(?oa7bjg:A%Gn?/JE%J]>BQfKY
%Q@36]RuHU2k$kWC]U(l"H"17;F?Lq:]@-a-e4H/LHBt:c?IJq71+gs8pP%.++/d7P%\=P2G5mPm=22<;`;A]p9/g9<^DQ][:(&:B
%0?nk7?!"M,n*Z4nfo!'s>CY"r:bq)\<e81aN+Zn'@rRAk$L)ke&tQ`XiE\_2bAjOu%d5g+Ftt[W2OSA<KD>P$o-=jEF!dOK`sL%%
%aoFOXfI(RD\\boAB!"hfJ;N9;>?7pLDngO!#Bmf-l3pk3/*3[5V.I6a(Eim7+,`7F:Gk,kS'@C`)$G!f,W<o`[lk`)J00q/h@tq<
%XGSSK*MSBgQV&'$JBR:@OGq=&ogVgD;$Bo54*;lJdOg"3B4CoIML%g^']@=ARLjp]$"rbjn@UUN$"W%KNl*QZ/`rNEPEW.TJ;e>p
%LE;:@W(B,1r?b9H:rF$]j/#kk9(4U@[he#B57Wu]5>)?U@fO,:Cc4ok7tU>VQ8r2M(rtAsPUV+OQuJ'R`TQD_LKqH!.bd2T/j/cd
%=cuU8#2+V.@QYKY29/2c9eWa=[[Vp#naq4;IrOC2auU=bS1=m3#+PB\,a-H3S9rl"7F4TVm&7_e_<)>C?tmgq&"oV[L$HP#<P0:@
%M,r7M?,&s>-hn&OOUn7-O^P,S`l_X4TLWn!!DJIf0(8R?lhG3[bj?%@LfNfi97W#_/LLmbhuGX\;iEf/UR\GAA%sM[;7(m>h<#:W
%T0NV>mXc;t5Xtj@E1Tlg`+#*,c.9H+a5+9II[Kj+ohXc0%oEO7o(1<7B\+'%\c:b]<h7s3]'fL>O/tINE5C9"00coA1qosTcbKA`
%"^HS!C7?L:$XQM5l0Fs^C]3'>N8.M*_kIti@_rINS>a3Lk2284%-">3OaB;g>CHS%ceddN6-ETWnAAcqQi(mF8IiW8.!`]sV:Y1$
%&fV"4k`=%kRXeGS2e%<!.Hi&th"rlKOTiW>cBgpaWSOniYm[&;babrF5m0eDF.`W/=RhpmD-TCS4:k,\ZHf@Wp_k@]*+i!d.S^sU
%C5$Wq#$L3-"=QR@i@l@BKZ_,G5(9-lhA4:D/kYk).OP&_pJtN-,t<;mLAKh<<da^)OY-]lDcms,*XB$'.3CqA1LOW48K3h9@6@NU
%DBYhgH`So\QLK/b:!Bf$:9I"TSo=<a.`,<Pe13&SYW4D$Y`<4;V&1aLIi)SlJKd+eC0ma#]Vp&g8-j\U"IPdeQ'ChWMC=#eVeXZ=
%Ypf86gXrQ8$/b9l7tOW"35GHe-4RMt..DjAW1!-7(7tBl+`,"#!5*PK\MPfMlg/'J=>n*SjiZSnX%Pd5ce>oK";i#L>u7"i15(+m
%Q=lr-P\YN;OhEuL,nrKF`nfhZVWI7bTJnhUB7oX)nje0Viu?<p;bF);:b>FqgHt<t#Vm'1Ho>#WVqT%*8@2lJ=6#NW9,9E5$_mQf
%:XVc#!kR'VkH,&dHmN>"oA?#3VTb]tCF?RcA=pibTICp#+=](5f\]i`*An'<5N%WQb\[8+*8IrL+=3$;BE!Hs&3K;oD)O>^r=P\1
%3hY,@,Jt2J**#Ql5>kX1VZ[+3h%#91;FjjlqZGKY\"<)"DmH/F%fKkS2KbF@$Nm(COXTtLG;erq3H!1A\iODm7!/S;>?E?Lbq%/r
%VS'#`koQD-?gGH\s0AVN]:4*):OD[_>R1F<knuQP'Vle4gA#bda?*nt/e99G)]/!]AUn8/I@ngnq3VOG1RP4,+PsV%<Z4-E_>;+r
%*3mssUH#p)Jap/T>mJ/<&"'sZYc'OXe:'<Mk[Cqq(e#NfepmDijjt$Hp4jD;>QM_fMFC*4ee.HA>g%M%6'-tn*sd4#,rLl.3+%Yc
%(VXr(`U$fRB3n7S"sp"/kl`2/H3Z'n5Wf7'a_5^g$>[49RC#=0cBAj37ZW6:6$,K0%FX(=UY@&35#-]-r5c>(jU&n0@pkI"8HIG3
%&)4t0&q$UY:su4ND7[31o0%-rF+6P7N,`Yldm;m^";g<.M2pAj%0[32qA#$$ihfMV<ak*"5*a#"NN!5kVYs/@PYdPSi:%l1>*l0l
%\T9nQ;X>S]%<"g?HMBX3N<*]rAsctm(WPB@9PN.K5.(^RZjB<-E>fgcN1(JND$A(+M83%"g=Z+r4f@Wf05`KHGWO57?5RjJUq,IR
%+bb9M0fOEqQ\d]t*lajb.I5"$^4"\8oq4ZTI_uRs1;0Fj?"0P_EMa)u``NZ:M=LN\N3J92<"JFu;'K_Pg?>%B9I9rb0VfDOLOk`_
%8B(5$M0gfs&U8j3D+sTjIrDgHH+V$_6L1fgUcno4J#k>0%>lnM,V$4uVe>u"hEbk#gcTA=:AY9+RIVspReRc6>hI8M>$]it?Bj44
%41$7LY2EZ+e#_L9SbgUU+;==n8i-l\U29b10TJ\D,&:g?`i7:'!$L,m)WR9f.tukt^/b3hFj-sagpbN=_gT.1'5H6Spm>\F_qCYQ
%dBoA8Si'![@skX[iJ<G":F9i\`EB2f?ElsA4!%$iX^mrA3<"0q>Wn'2=Zrf5N$eYNC$b?WHu'D3F47KqPfl19gCNtNL_"d1<VL).
%)8+pT`:'%s'Tg<f<OOk>YE2O-Niadk.o/gWNme:QM7eS<-*+[`$bdE\p"s&qN^iTWgWkBJ%(K;$.-9'1$[AXVb0i#V[E_O122If+
%O.(WSK2HcLPUS6">-Y]uJak:$0:@[LjgUgb8K)c@N4iRV=%CeZk_K_Xe9Jd^jTiWNfa]S:4$*OkE?LkWSar%aO2Eh&kOR\qAE6R[
%Qs)u+8nLKP85Efm-ZpisRk=]s3#lWWS@/)?I-30,+31TKK1X'&(r7ltOo+uahP`-V]i8N)oUH&,;IkV,lDGCs@Z1cADR;H#UQbaP
%VWe5_MQr*g'?'1.1)hT@c9R[3Jo5.W">GCK)bU)E1BE+?"A"-hrJ.<Ar?Ipg"*Ne$k<8i%I7K:ak?(FEB1J?brG9t*Xmb1ZJJ=_S
%U)f4CG7mUV0?``HMg&_cg4!V?oZ-ZJ6m:;$Ci2fT2i_bEbIa^uh$)Ma8K(B'E%!G=::*!6RRe2NJLot4#o#HJ:g>AnJ\kQ4$3DNO
%bK*#N3HYThc8;==PotQ7`F\iBTCB?UGdu8%H#DXTUUgT%SuJ)B7"Sa!g)^LbO;&/&Mt/T2Le_rlUL[i9UEn<Qh/dL^]hRfh7#)Ik
%3?SgLa8&QIGO#.UIcQjl2DA5rFa>_f"HV%`4]l.$<".Bt>@A5>>LYS67;I8XDW5YC8`9Bll7p;3RUfY`rmor,hpjg-R:.@aJWbm@
%<\V43?#um0]6ia80:1Wj#odO7"hSto@C:%bB9$PXBF\ADM=d$NeUNpe@:j&gUGLcsW-*OjY1:ThE""=b>$g)WE-+HBnWF]Tb9rIj
%Po@-E'IJj&(K:GkLqMp;RsQ&4]k6q*pYa$#ZYZ)5lCYEX03),:[prgSq-.R7)S^cJddQQ33kZ,aAoZ578Wh9to#j7hSC)6]s0gB>
%LVHXZ^ApkkeYVR:V<ZudG[,RMlnsjXK@85b6$mS:Z6)a;CTZ:WG$lPc*Ht\ikT7rgW?b,LUN5V`Db^!h=VNb6[ZRbdB3(BtPhTkn
%S"iV,.&ubV]s#D\gr>Qsp7`IhA_gUESu_trqQpKCI9^Htg?eLd"(-dR_2Y3KV0$9&kl9*tC)$>'KJ(Gc;1T:99DY4?nZtgP!b<J9
%j:Oi<l-X;As!Zn,d5Q9J4F<s_3J*2J\UTJ9R1]c;hm`BuqGuX?=7DiSHLAO4UiXO<DAhkHQaGAJdm'Vj%-?-JTO&GNFAn->nHX2S
%a)Q"U^Mh-fce]kpQidhZf`Mb,WT9<Z0!g2ScMpB9X$j<EJsPsT:VmFDW=t]:\LsCP.?<SD18gX>,FJnH98"HTQgu+85k,qM[$6(3
%\,(ior+"tgYQ)oiI7%:oj%T\'Q[&YM7Ie."gGqF_[R1oKI2_&NGt^..,=ru!&n@fAL]^KLPnp,mM(eM[R898V&r\m1WUdM+QZefO
%P7jf;V58M8&3jDRE-qDrj"rLOq553cF<aOMUlQFp1mp@e#)a8&`[pQGh`lAT']ken^&g@VDqX'8C@7n+dHL^P;mk=6Zs;T7$tdi(
%Ot210<1Cd#.p%LM#dKpuXZq>1%8*3?<a'b#m@I8G?%5[grsKNl,pki)de3cJ(i*VqY;>J7ct?ZoQ)r;t(=:DgB+8pm7!0>:43bTt
%R[Gqkh,1M$nr5H^*=_immFdaMIH`p9\AFTX@YkK(jXGTk=g18IBqYYc?HBN3"!-FnWqC]DkFL!h;jpu0B6sq+B?i`3m(XCGf7.T1
%SfSlucj>[r#:lLEMfCM!Nn&"d#kS?K\O8#sa)#e&aI8JV%B-W4YBK4O#;_iL$jOu69:PlGkMQ6p#kl[C"cKD@qceOMoD%2Qr8/"^
%OWDN[AoH&_%5H2EUnA#YQ.DG,j)VJI2I4npR[@1%"T44+?)JIDaGIPH3plsuIed\j'Ymshcp$fJWqD+>W04dP_cF+%jkGDg]/M4j
%U#3:?^%PPE!t:6/J#]u=#&X*=m$okETYgCaisiQE?ZYC?>rS3(ON[8pl<<GCT@WjO*S5J>_IgO!plM)"$uS+b=ID\$jqO%:HO'Mu
%cG/+4EO&`_aa>&k^QLrK6qaMdd02<.%F"jWjo;UI^Ed%/k]Dt@f*D8\ddD,HT`<>rR<$#mH+C5"*:%;1qq3g=4O%b]#l=":NNN[q
%8$+C"5OJ9sIeT?UhF509mI;[bV+P*pJ(AH7?fturJ`e,_9@``SmI'uXj&H'+`p$8feC2=Q@=*[AUuP$'jaOje$Q!!6(J/Vn'=s`5
%<ZT&K3?4%d46oOXFS605kYL3Pb[npX8hfR)6n`)LPkQ.]hL]sNkfEgPmcMPMcl<JkO(Kd"iN#2.S]mJ@s)a3l\*<q:c10'>ISg/+
%:B)[*9m`Qf(^D9&n.hXTo"Y.]`aRHN3</`fIkNs&%Ssf;J2Guq'+r3)CGs!KH@C_;pd9ktIhL]n7eEO5m^c4+hW-JMha?]/f3P"b
%O8R=qrh$:habo"P2)i9WB'#!>n$L.D/UXTjhAQl-(ZD=Z%RO`90[W]0.o_TTr-%Y+#TF!F4@mhOk2:nXM\o=ZTu[,J^V,8`(\b#a
%EJAkDfPg-X9,pn(D[#2qIe!@`s8Vk4Ha"$l6"SD(L/Di3NfLa@^V@".o0:(%AdA</m->#d?G+<+/*+29\'(+tVu'hm_h-brjWh$&
%Qd'"h+-;*=:>Ja>aY`AE9(0h5?eAi\%SVNeGrKpe5m:UR#G!E*:q3B_5<Wr&TRa9?qNJ\EgLie7_l(1WPN2c0[>1i>:P_j`OSBS!
%L'(r(8q\!qf``LOZ4[iN$Q$6L\VS?NB>eXH[L:(9ZF>AOOAMq5)4ku?^[p(:KKSCoUFAl\!Zgp>YC%4nMN.Xk4J*H_oO$se5gh/%
%`K<V6NMR"6`>h'd1B:d0P*R0*_/&p>r.iYVghtC:!c)mTPi^4H8H6`fVt#!,fAuCGc2N2Tr6KIDA";YQ_ScD.#3U4+R63?:6G'3M
%D5d(BCFk&=DD=duJdMrn2TE6*r2U?JOshK'a:n5:P>D%I;ZZmgF>.k)`N:,`qoPGLru8uF4+K99];#n'#*;XN(Hqe0rcH@#MP7"*
%()I4<;`t)+miWFkJ,-L&SS#>o)RXi/48\W1Hf86o,O:+hKRqbT7a)TspuNSZX_Cm@G]hdZ[JeG/OLuKt)D(oi>tcMrq=h2\,uj1*
%7^_m$I1SGqN*uWT7NT8Zk''<DrheMji"]T$P\q/4U")KWNBt24$RN3bpm=Oh<s)EjL:N$G[GRHVH/Q1:o-]g*8VQ\m+6C[e@LlOH
%)Tp8/'`f&3$H'uNJ)!/<S_jiUn,Y&%Eq5.<,!o4B-,66iCePp)6SS?)K[2V-poKrh>ns=gD60bE<*bK+L<'X8e(`u`M!9IuBOCV+
%!bk=m@='tA!TnD:P8qI"F5JaMp"if9$+-d-DCI<J-saLd,-^-:`/DK+#-kdnTu(2q9`f-@'m.iNPB=HNkY:(c16ci;9shaqF!l\`
%D4Gdf:JKgs"[;4ZWhOm1;Gd5@3/J;b4L%4ARbL5;./moDc3l+c8gp`,Ri7&R:TCP^1i!cCZuVoC9/)3.@u6ud#?-?V8*!*p%?3qI
%UEVh#D!dDhVT-\U.=!_B*?lHHhFLbeKS8En*G\O!_VeY)q%e)u0ZbcP8<^m/O&WtAY@AnSl`o[?<_l/(KJQACO="`U+4T9Qc-Vc9
%I-RgJ>EY/@#KP>YNdN*^dl"+=>nR/ig,Rhe7O;Rt$`hZIVXZ.'H-4%3hJ!Fo9+p+t%5,Z^0\LK^KP9s*'k;DW7%bjkOX;iP=$#L1
%]P+Y34t<oU+oZSlB.WC<c,0Oe[L'-kn>dJ)RGEaPQ;ei9.7C>@"J79_AAqD4A&C_#jKh1iZokkV0eefD1Us-4[Mbi5l/!)N13\dD
%@bqkg+gGHD(@j#/NOspSVICO7PhC4QXB(!%/PW;K@k5SSD??=W3mr+Y3'uSCOsEDD.TF>[5fY^;89(qHb`iZ-jG3n%6)5]&5ekR0
%f8n6CdkOQRp;8+m%kB%_b:?JiQIMkK)%oF;Sl"4@h\3@COKjTib0_kRoHf59ghocQMC#uD!0b\F.L_A`NSbB]DHp9d*+-.]EN1mU
%"Af(h^r?@k&^O_?Mp?TSjnYQm:*IC.XCp62cF+\].Vt5Z#Pp[4L56I.SD7L98CF]bY^A>9oR_!TD62aHdi<_NGGH+EECt,r-qa!n
%&UYGGZ%iaQ4NbHGUrR$bj[H\UKFk@9;=$56-:=.Le(_B9'LdhPAW\/MPnFaYi$P?\UiA!8R)Qf41h0A)OC'T'F=GUY69?EI2.5Tp
%W=bS!9\;$B+r3O!VILhR-.W\R-"T`C;1;tX6/9:7a%[:%-")Y\!'i_d6/[)=1&N0\]ED%7@0c]1KcMddP&&[TM$NFeK%bpt8>nN[
%jY=.ZGbA7_akYXYS)Ag2<u[\t.D;:&K:s:^fWJX/%F`+K4R4pc9'T:9(CRc<?io6W"PV2sX:cH/5<qOJ$$1ItnrIH6:""h5ae9nj
%#)%&JL,/:.E2sA0=Gb7*2H')5^_^LcSKs6bok^'-o"[q<.5/#ugaNL]P$9qYWD\%63l74n,JjYX(=R:KX_Ye.UB6Z`NmP_sl65DT
%$BS1d@*'*_LZTK!YU`gc"70\.9N4<r\fH]SfJ>@^L^HUlL?$oiAtBckRGhFd"moLrqk$\7rJ60bF:iS1f.c/c&Yo&(c.S\Jk!?Vd
%f.X6J?sGC"k*MI,e#HqQNk%$=[)#La%VEngoWiPfCJu./9A6"=V_I77c![<lBSK/c33o)Mn"`AGA\+3dPqU;iP4Pi;+j&pEGYKPm
%Sc=&'C[4@PCnf'r(euW$O^mOlR+/cWNA8A&_)=mhm:e74"Ns;ZH$fIAkJTn2&udL]$(*P]<lF/>#50TbCCR-O&Qn`kYLK7<Too*5
%N1Coi/.!#MalHA9Um<tX%%)dIr2@V"\99H@2Up]&N`?.q-.P<ih")i7XCS:n),Y!-QJ_VTK%.fTaMfo@"7eZ'p5Nl6ebK`<eP?,@
%_2Ws6D+ilMA.l`9D"gPsB[ai\9pkm1f[)0l61qHW!h"X"A&4qj\2XT>O*IYB="VKQ!LBD3fW]g4iu`ZDQ=V=U(,k2++Bf25:nV]<
%l%<$^*)=BN4L%:/B`Q5WiGW<.-*\e<$1)b&oEU73^+(1hEp3\G56P77,!-'%>NRLp:nH<sPa[<6s+!g'mU,lNR!tj0`44=d2l"E3
%3i6uB;[':-k*/$R0/caKXbAP\]NhmOn4RXUO9mF6,bf-NK:5#JSa8g/`NUr=IJfXS"VXt?Wr,\$?fJ*uLjfYfJSQONq(R<@CN2HL
%8X*sG4A4?$RSth@(=kehCRcThdaV,p_7UOTRZWs+mHmk/?WcfBI9UTJmETZME!p7YLu\5=I[Rk?pWLd=g9Y7&-N/6QP4-Wi;9U8C
%:&TRgqe#jB7HD<t]6hQN?%s_D)RY'6';bD@0Qn)*r"q.&47<5'98ap/H)MUVhZ%5l!8)02(/);".t"IN)Xu)8i1L'doEQH2FHE?n
%`tG-Z#l/IjbX(gg!K<ku*ID")4FNX8ap\\?g8OaMkGR_(W88NACP#2#i*HJVp,)9&r^$F5T9i1Ys#TQ@TYP#X1`CK0cUT/=g(KUq
%T@h@`l6TN7Fkl4&%,1\\0RqsIJ&X^J//@!XNSa0RDp?+;3Hp^V0Dere=3hW$+,1RG`5<1Z\?=mchYh@Z<Nk:qc\&'3^NIsgQjZX&
%khX"l"SY!k!uS80B9GM9]C!uZR`ufcbnpDJ7.K;.&[RTT+"B==]Q(*F1!`Jl`sL_ZRDQYpk%>'(p9-dO37$1OE7@,N$a@B1PXOsL
%Rs:lh1)0H@r07%jll-eg?Yqq*?!DT!ps6\TIK'a9q%2$Orn"6b`<XmZ#l)B>52V7t7<nO#T\&"q]l[SqcS_o`s!%&4M1fT"jO.c@
%ZZAB?\X-+:Q2F9K:DeZ'=Ri6:4)V[R/XOf0(]A,Ccpsa734&QI(sf*nTg'Q>^oj5DNg#b-1-,RnbME0nT[g2S.-P#*W;p)qQPdbW
%Hdk.XD<iPX-N2o>>Wm$YPIY?Z=.62)He^gKS=c+=[tjqM\Vii`%94GV;$oK):nGtY-oQG%7do-XTT+.%EgC)#H-3L9ei\RO_p7Ll
%2uf2Sa$1>R%S$?ok2;o^l??N#[4*&"Kq!m2c%CZ=Y"gDl5nQ";l]9%oc#1R?,O7;d_-*]&?p9&[N+A%/X7EJo3?Roec^VgLHf-]f
%+j\%RmJK@7L2+uiDp@6Y<m56ZoS)lgM:-j]P$5j\\[\`bQbBc^6$iZ/[$H1:9-%.&k,8`K[`L8^kET<j`HE?4LW<ik["p_/RGG\N
%YMVD*T8uT7KDt\7Q\850q5<DN1FR67#F?V]S#jgKUF_+3:"X6`hdI(e"!GR4c].99$;[0*g\J^\J.C9WKAYCZ^%T31V=fJdW4CgM
%G"1G%ME%t)\^S!V]qb2];7j3a578kJ#cr4(m/rRo06?KQq!28dm,B,/jdc?2W081VrdM3N]R=t[*G3J+k:kh=!:kqYk=qIBBq$n^
%9oqbB3XcE!aJ%AQ[7_`0L>Rk+@LGU06kbKn[5$->$&6pq[ALXB0s16p>q-^u;YnTj:&h]ri!eGjQdobl4(n3"Dn#Zu+M&f5NN](?
%JD?^h@!L8">J'ZXa<t5eom_rVSi`\uX\#5UJr%TI3QgmQPKLe_H+3*RjWu_a"+agWY&]elN;PG,g+l*n@^k1LClY1am=)+h7HQe0
%!n1/2:`:+S4a:'^Pg06BLZUO=*I_588$J&6CEgVY0/m::XRGMAT$CLu=T[1Qe.KW:JKU\FMX=tcRHofiN;%JJB`/[@V+cYKqU47S
%"3WsD44_Z$.I*qdp%p1Br/$%#>RR-n?..[#UiWsTHRL6jVj8:;/fkGUI<tp)^+jqO34s@;^1;].bCNN"2#^O*s'bB#?cpbf;7t8e
%:L1+sn*'GN/R@Z6pdOUZB/GTrd,NVq?e=)IIU:[YQg7/k_CV6+cf(fVMn>gPbhB'ces;Z;>^XHH8SRl.S3S-^O9Mo3[4l;I^-+ci
%8GGm.&egY'JV_Fbdl1?W[Tm_$FQZLcZ&Mo]/Y\3IIl#B[g)NZ\Spc*32CPm^HH)8f63hlpmc?j:b:6a!*A<oV!$nftV\bXMf[:0#
%p*%ZNTX=`GWBL<m1Uo;j_d^ks6*m2"]er!8Mb=ch0b$]RMKH:"q+,L-P:^n^j\rC2Ar^SE;!njSb-M?@$McK;>_;,.@[+)W[!$0"
%he!=i8tC*/^X&Pg0%B.qB;-(INB5lh]:V]c8#I`r@CZ"gUX23i':0GK%Jj]n`dQJYPn1IFeX9TSGeP9^VP\Jo/9c.RkL:M0/FRe%
%UWseLYhX"9d7rlYV-<iSLsCfh($Z-j29jMoM]"$)4Dob$c)[dAMkTDR/nF-iCVJH9cH6gSn[(W]]Zq?WPj"aIqNmHacGBRH3&mOk
%[uXP%A5@j+!9cE2[:V0!.b3nYK(2(#fVK"eFdhJ;$STZ7jjL4'50-7@h[W9I(Ns.Kh0FLNoUEL$<m\Y8TRYT#4%i?;"k8c[V`/B9
%,LbE9N)#jUZV4KY;]-_)/#I/M8'(1_U-Vr9kMYBgr1lPB\_=]4"AnY##VIBi,3s8a0iH7'X^/_u@?fU1fc2!d'qE6QM,gtJ=iQ)^
%Ur#6R80ta,1WmR4NA.bnmi4,,9\\?)(;r@N:h'QKqI!1Jmso/#=h-idlKG(W)Vl5,c,"?78i,&U5<K(?HT7J/oVb"5[CEa9TVru<
%<h-kdhEu?mq:"KaA2lL<3D*p/T;-@SjDu"gN-qY`.STJ^fEUr8N;6U<R3h1Pi3;+.\`68ISK]9r?:#hYVV7e"&O[g[)WMo5E$j#V
%V\M@`Mi".K@NIFr1s;d5AA?H%;P^hiVi"fH2U:G%%VKlY4J)LBXjc0?1=*%4TC^u%.I#i#;78$hll<D0998uI^hYP8QKUVJP7<[6
%Ju80"*-Jq`60pc,3PA]Lm`OXEnVjbd#:L\+^%k0<2OiB/;<G8ham#;q9SLb@E5]rq;(.k"kh1+oQd0O6g"$n)0C7p@[SiaG03rHI
%NL--7&fe96SYKM_ePFXJK!/eDS`J%3P=ju&QC.oG6WQjW3ccdb_F<l4SN4@SD`E)QqI\?(ra]`Er)p?BCk_=4iB+`:mVi;fjui7Z
%^5o"H<'OH3fGY_>^5aB"@IL"F!Rc7p>W/CW;?^:ZWAd"\9!?7-Ip*_Krn/B`<%en=^8=,cW.<F,h]-JlIr>k[oR'AK/iseU0?kg@
%a]EiEn+Bo*0`3iK]Q5d]UJ>_cY<Y;g9qIB,0J+SbOUht1br^]ORGLSDGDETtLV6a_*/3?H^Y9&qpH79+cau,Vc!3G:W`_]cX%!/+
%U<d!80'I;HqK&3i>ZPjaiQ"p0o\7Z4/gQI:61ahSVQ[MY-I;,@"[.X@)+?\V5$ck1s#.i7=KF[CZ0-6%ApW@`>d"rEFTca$PV;MT
%b^Z'r^7jlJ/t@o9Wd#DakH-m%jEP9RA03V=Np#CadjP*2Cj.ti7Ad--ZP_Q+Fo$j,T3l2^>Zc&#kX>mJEpkuPEnQrEej="DH3`$_
%@:m;]YQJ>clHPm133gYloQtHm$[]o:IS.jN]*+RGa_@@nR.lF)2#m0Wh(&r(^L<VV?3t7mMsC,K,BGFoL\RWks17%mOU^F#M]jqd
%Itq:4d.$N&o?nM\[hA&A2G,:Z"c'pR*ap8+:64_+EX9EaJrW2#4d^\4eAm;Im8A_bZ'qM,PO&1-E>?a)1LU0obD58_@iY!U?Cc2T
%X>0.ro`mkcemtb0QjouM/=lN10QU=k@d-XDL6c%rcIjLURkMH6JFVa'X:%Zf]7;,p7mWM64c<;`KAD.djFV6_8Ptj<KhI"5Akco^
%eEe46Q+M;GQ(.[4gPBSEm?)S*QhTgl7MW2[0jJ"=g?JP)1-n''J%J\29s$:2Pr(bCJ[PE]e,JMm"2e,TNnSj#kGS3jAu@`>h;rF+
%kaEB%&D8V]l/*omp0?I!`cs.W')LU7K?i`Ak2><#rX<YpP^2bhE8!O'$$`9sK:-=cU$:`]N[$qdbd"*qP4PkPdEJ"-EHfb';<mh$
%UZ]/?jqnSaQ*J_A9TI=Hp2]\8F4;D^Y83Y31[Hr=bM[pE$=V&C>';n,Zd,kTei_t(Zqf!I_(p^*CpVZD>b<k*GFQ@T++kj+^fIRr
%7=?^tJs%'>:O&M-`GdqI@]R7NHHJJ6&+Z'e*H(pZG&%U1-Fs[Vn,Xhq]H0:^HK3hPPuk"FQ^b2IDQ+RN(TV>(NRQp78%gEWN@T2h
%DUpkno'i)nZ+4bThHP?3EW:%Vi842)Ruc/*k:PFjQ]I?r,*&irdBNVHIWRN[[^Q+=I!]_lmb)Prpdd#'2f$Uk<sHCgeu3o%q.tCp
%-#W2&3ii!ZolBljd6q?r#B-8&>Amc]BA[Tcl<c_Sj0sqj/#W@5+WtWDI-85SHJYU@f3VIlFDnmFDX*#)f)F1MY1`Ho^3oYBI:]T_
%IX,q:q/Z3nXKA!L5-3QZQ;?u!mp84s/8Q:G68sS$`b1B]otq<DCpgn+I=:RgH9A2JgUEo-Oj>uO/[>7sD<8UY=54>qH<C&hoW\q!
%DLAQN4Eu+I\sRlU<nUckg>bK3DB><82sHZ_40A1AI^W'7N^#,!<3E8@GH+I,I_N-h]D80uCS0Lus)RGjnT(\\4Maga46q[Va5"(Y
%QC<!D\b>i*kMt,Z[<qkgc,IMipZIh/h&B^@!k6aH[uM2FA!UJN=KD't2c&nD5$hR$Vsd\Keh.CB<FsO'..3V\';<NKI;ATj0P>=4
%m4/nlh!<IUR]slmn`n!Nh0-2AG><DnDmljQeK1kuIC4M_eX5m5rpZJhHJd<M+7H;D4Eu'GmU,oXmG@;;LFM%<\$+es]JHb8ZQ>k+
%IeDcf=`afCnmFNl+0If10/ZgK1p5VZ42>_BrpZ%RTd%iX[/]I0R(h@dhcOlj<aMmmipsLhl^t^Fq*mON$@X#O\UT,-Y,jiI>'1:f
%>$Y8pq"!JjX_&D)[.gr-I5b!&\eTth+WH#8=FH4+g+gG9Q"p72Tc8*:#I/Pi^9fA:oe1OSLJ*]BXuDh/Y>rjHMe=Q0ohY<4HcN6c
%A`m7_EFhoq,_:jOnE)3"3dA:9qX]@2J0cQ!!k!J>a]_?Kjh[g$Zo@s[iU6OCTbQ3thR[e.lLHH3-#=I1=oTc8]WB,V[i0%7_=<HY
%hW%ZJBU'4d)&QJlgNW*cqru.@C_iq?8%hD-0.o-dh(7Gd4^VmP]:p3\l$Mo4,O058pW\/:D0^'lCLqF"F?YQ+Z.7'lhQQqE_%hXj
%+]%u=mSq2'FoFL?2\p;$h5VKbkASuHUQsU,p0_huC@A5VLQO8[!]mbK.\F-PdG2n(k6>hW8*0Tb0=L,T!3^.Cqt9SYjlshNj$rET
%.uD3>rI[T,i:IIudOFLd;=0h&='=Qq[(Z=E]"*$-F_hW9%?.(\[(^O#]a]BQ><ukrU;M>]qNKq[0@teOG=NTb^[A#aS`TXg(f$A=
%%f;$hcELf7FY:D_OghJWgs"oggqJ!m'__1j>=`:cn#UE?h=A6#]a(.+i7I;L[l6dK%SeOdT==)YSbUfZDW($HVQ&oFmN8REgj@[i
%X=)>#6T=`\hiYH-E#l;%2:!5$:UdJH]B[f,BYDs_G)0q:gjSd%ULHGo)-3L/k;Fj"^;'=.>%QmbK6KFGACJm7EU%q&`U;cO]2q(t
%.slV%mcL=-M"]0HDt\A2Ks`qSZi9OgVACqqDq#:JWgse+iE%9*=()!:^,<G!H*[;&&*?mfOf]_n%8;39f'D.OlPj&Je9Ja*nCKi0
%Z_R+]V=j6fG5B$V..[!>d*RF#Y;i"uQ05mpUp6#M>O.2k&*&!/nVr7<YjU:N)Q[;NcT`DF5g*qYn>E^TIrLT/.fPXN?YfBJ[T7o9
%0FpmO&f2!7CUI!&54)1C:d(%YKKljKrcsNRlFr'K\XUTbTe@m\CP]R$:UZAp5HD%mpVYrEeYj579f:/eIMgY=LN.+;d*9iM/6+=f
%FbR'[OG6K\*YbWX@=_F3X_)EL6K,>&aCbZ%0M7sj<[tZ5jB$-JqTchm@k6NLaVJA2i2[W$pB.FQ(u]aO?`RVPNNkdZDSh!cc";uI
%Tt:0$;=$17Q+NGZ*gb?qG%"\p]hD6TGB4qA)!BEN7WPil]a1g\m9+5c#^TsW^(Po&D2\q%0h0mkMnN#8CMmuEN&2lJQI/bAUKikW
%D])#-<a-#[K5%ZS,6;\+DKO2r1kbQ!Y+(tY.BJ!$d]TeL*Q1LE?-/9q/bK$!I+f#CU#A4ErT(fbn=0[@B`$c;[DD)'o?-Lsoj<XJ
%UCV,=E5B1M>sCc#&@A47V;qPt'5ak$XWclB?#S8.VkB/R:I#\>FO'^o.9I[QWobWVE4;G#1mPbVo/h48QnS18e\Pir:H,'>>1Dil
%SBqZ+&P43&&C=Un$Zc148mt?>e[:`&(Qd>"&%^L;)Kl!ZNceiuhekA&H>Vn8I<2*+[IWP+DQiPFo=Z#(gY?(==gYrp\*dMO"euV;
%:t3+sPZog^o=1df+4],Tf=)-/c"S;E^g>^k>1n1Gl[=1'%+Qd9Y`2?11j$WF6]4SJHdAaoFcObicgEo?g&1-cgna`jC+a4k:=I25
%G!RL$=rXTY4h,qd5Hd2JZY"dRp<)Q`7f>D+GNpM'mt";LE_b4$S+#[fhSq'FGY]7D!fY*(PKHGgDaa<oC)bN/bjD&]N>iqg'QiA=
%gG[U%b52!UctCM-%Bt,[05Sct2tk4Gp7qKCZf1=MBBNRND'#4WP/"`#D,\_k:qldXQF*EG(Y;HQ]:rt)gc8U<gfQO`<3AV>HZ/#J
%CEHWj-C@;'rFk`P"/_5ol>+0*kgf!7Y`8&^%B\Z,EpGF6k/`MbCkG3Rh@BG\\Q]Y4l)W@RC`fH#m70$C2NJC:1d6E#T@U'tDbd/<
%(!W,@GE#fgh.><[R5a'\Q<[Z3CH"%.10_Ya;+n(P9([$"+DH7_[SE9\o(2G>*W.e+GAu8qJ9?`$@Uc\;f:H8PIe;c(Y^)84";8LC
%Fm&jO>1q^kp]?\g3fn,1Y,&^-mTs+D\%6N2gL,Qf392._c''G*mOm#;U1H<%-ne($Q9S;,]pH.j0WdK[?AA&1f.0YCWghQ6]GcX=
%08<p,IOG:3IJ:"0/jEMJ5O<[Up&8T>pMRI8Xj(4>!TE-%bPV$o/Tm'PZmi]gm&ip]EUSoC`uQr+mE*o4nbXj2mbH^poVp2^q,-hG
%nXXH>mdD-->O`ae_T1qu>eQ=!!8Rc*M6+1i4F9un[]?.R\ao/80\GZsH?APaZJIY<H@o6DrA$n_NK8k\2]J#p%tWVV4C^H$P,<9;
%n`n_1<NqY[e"t+2hcI$n<U^JndS31*U0lE7f&kc-S!\ma8B"5FEnYC&&*MWcq2mWM+1hj9!3oCJe/`IJB=%Ij^Z1W[S_EVG)XM_?
%q"&%.URc3?hmrdL_em.HOhC_e'Ni3!Q*me+>&D$?2pX"rrn1.OCqdQ?`3>$Zr1!Okq2/dKY&4]'dDL/I.m[RFhqMo6Q^OE$2btX]
%C[]R2lMF[!*Q3!irQWJkmHJN%r;9rBmG=%j:+!h5l=24.NQpXid<'iHI^f@P]TOmiDeDd)[iq48$Vu+rj@jj2p_a4drX3DP,r9i7
%MH9U>-+iG`rR%D>Ep`Hi2$P)=4KUhah0B4/4lQ#8fDj[\d;`Y.e@('<PMP?,\*Noad1NAuqb(ihpRW?VGLlN_DL=%92hjJ2HT/+p
%2EkE[n\"C+V_URdp\sgD+'h*^2,&KgO6J!u\#uc;qs4f5kY1;Nq.*MAecq&sH0*`HqI+O:?MeQ?f6\^Pnt^9kc-?TZ.WH#KfY4]g
%kfH-hi&&-:FU^-3=?oJo<,T@#mCX&JI_0m<FPQljfsfASr<d>ME<Wf6_8ise<Nut&8R5V/]M^ZJP7-K6"JFuWH\[kVO"Mu;737o$
%9?V@M89afSj3n<Nb+3`\n(1bSDWpqlLKAZJSa0W$CW!:A0A^d9R*?m.eN1HO1N#G6>DGLDcgHf,LcaTu3aR/YpnEYhI$RhQ>uS6k
%)^"FKV2F.-n?Ak*]%'S;e`Q_KL3ujD[f#E::-j%2R4d!uL-$5q@*0G?2r9%aoJU#4)_2k:+`#6bC%!&/Pn2Hoj7efkD!1ZTb4E<S
%YBdP2NGT!og?mW0qgQ)aG43u5Nd[a']<YN&:Cs,I-XWqNQ9cP&dbDG5[B\.n%<Ee9J(5t!/sc73-[gDM+I*0BVc/G_qC;uKIC*V_
%f?cT]I<N;B(419"Jss*I.XNfjS?/jJ5C6:RZ1M^@IK-1YYfKJ!$b(j=*%QRr+Z;9_2JSKf8+:0]'Dg2C4-/K6)oK:'rPcHEfK@?t
%j4iV2\V:3?Hn4[Nn$/@IFo;HiIK)92Gi6r0p1hWoZr:?.I!3-uATZYJ2u[PL#(c;l\:3VL3Qu:,n7V:X;t]2)bA3kM2D?D-eOQ7X
%e"*VM+*)ElQE76u:/-K2i/6D=p062j^$F/YDesS14]m/%a#V?1O#tB\L^#:;-/(^o5IYPfC=Vr7l>TNaiN!C<S"JRijB&asG$[DE
%qYgrV-4?sKQFXD$M=,;QNbs@/p']QRD`rR>)Aqf&,*;N1%7FB.-f$$A/ZW3[f1ulbj;T>j3a[B>DlkM"rpf7PL\ft9YFN"Y-RfSI
%!!ToPDp+]DJK^.q95i]QCS0(udsgU6IA/rC_6W^)K+bc0=0_#]UZ/0K_V,TL3Y$HP2K8>bU.2WXQ05j$p%A:$:TIF+JPu#)q@mI5
%oPD56C+U=\Cshb?>P%Ram3\bj2d]>o)!9Giiu>K6[JJI>_s!h4o\8u8(UnDa7D)sS%h?&f$]d3oS7sijb<"o!h9=RQ_/K@^?0eRU
%8Edi7J*=:bjWkPS%;Nk$Z2X59C.1eGDS<aSnQ06Z43ubI!G/8,3%kKbash!4YHBlY_]<L+XmGJJ*V,V]>]!P`F3XM1o]fY%s5$\F
%g%c;GQ4rB,pt_^fhVRp,\WnN+aZmH5JsPZgF#5:r?Ili,2a35(*bGaYiBT/^2q/:5lhf")IIdlgrbHXC"52El!E@%iJ.'%TBmf83
%8_<\Q.i2t)k5O$7Z;-e@_lGR.NSVj[cgN6S"<Q?c=`+cEUHljdDZdAjEn7WGJZSV<kpuEF$+^]_oWd!(AK,T9Xsd[m:Y+"@Q2^=&
%gNW&rhkkt&+Ys;PX*e]*iRt=leRpsZ:R4%Cn#^,t3u)IWl7NrNj\0mC^-5`(,TFW5Su+/!(:Fucf#3Kq@<RHlmi%Eo2K=Y$Xj_++
%PhU&QiBD$p_YWu$jhp]`^`B3Uk1m^W?cpn)gVV4TR'.^i"`o"!d9&J6lN3pM*B;iAV_9iX]!lpo1<;F.g"D#b52a"j?:e8bQ,f0G
%]5+'?*8U#t]"o&fS*R3J?U%PR`U^5*XbBtkCi*32]"N8E4ukSV040*ORFhbP9dGX(*C&?9g]W6.Yh5m:^G;ItJDpmI]%'_5XLME\
%Du.^sWZJ.o0V7lKcX4Sa]su8`.!MBj7;0Hs*F8"*%LuZh>Z?^4gQfBh5/41B(WG7NRnm[hMk&!IZ,",+Ch8pogbl_a)e9Z>gl/7?
%:3tNrRn*.Rf=Pf%DrT&H]D$T!@HHqQqi85ep%Is&le/DjJkM;bCb@U1k7p,1r:171hOBGrlLt1CR2NDRj3DE$l-0b)MoLA(NGebg
%]HVWM?@**Q*aAdnXQS*!@["$_?@Ab:gA:<(3+U#H?)*sO2)L`KbHWeuHE]V2?uYV:JA+P(8oj[bCAg]R2D`7>cj\C)+0=@Fo'?RJ
%U6UAhdNs:S#4Z&o31D.0IO3:KAq)slFmni@oaXbuY?Z\XYWtD7j4UX%XZ,WkbKX,e0D2170@q0/a`AMeGH%;ITN-:6BX:8W-L@3<
%&sSZHUjd9sp9N,M*1GY&W:8)4o?p9f[Hkrk[@S7Og_X9]J8W`.s3g[a^[_jT9cMP$hi@<[LUU\'B?p%:-\5p'qE8`Ogpl2@ob;W#
%9(VPVNLojN31J9V9qM$%a$b3HTuFKV.hAZCNE_$j)nA7i#%6Jn!^Gu,-j,#O^6ptWc<*Bq?@2A1BgBMJ]WqG%rDhK9eKf&lD&jZT
%f'D$jc!@lMFhN1Th)GHtXS)j$kG)*#mQ'e4c52S"[<H*n/X#:lX7]!5okWk8:W2eWi4O'9hWTB6?2nm9+UY!V8Zf)DdPn(3B.kh*
%Ck0iomCDk8Di%[ceq'muV;?*gL#Rs,S)m-2`oAUNWc;NYqs7)>lBPj^J#FF3qR(PAU@skC<IL]e>C`$R3GdKbFZ0N5q\lTE[?\?/
%^%Kd4LT;io5K(ILs12&L]tIHlh?ThIADtGhC[1rUs!?GZ.n8:D.;L5:g9HK14ulIk(FU9orf!a)g[4+*rCu-Nb<;acp;k9sHmStL
%jo(?hC5&g^nH5!N2o'65_?ZVW4W(12]"S-e58L2>8_be4pF(!b1)N_Yd/;m3]l^HrV*@7[`^o_.MSi6!Z@RJAB6WPWl.>t5jWE[b
%s7pg&Z:KYC#BZ]Ynj@^iW7\d@S+np9'E<ea&mkA/L0(@6/1VZrd\<sc3O28C5jTFg<ltMU$p]`sb!G>%&LoA8M(ai\KW&o8ThOj?
%IfN:p/d,\9q*MZ/n7a%r6jYfSnbHgtAo'KHG8pWsb/VAo'W:^aVI0Z=.lQK7ojb9^<s52"W6-R'VAi`c>`0al.tnNX\Vr)[=9^;0
%ZLf9A6j^diFD3"ETZWBt[\Sm5";?aPq]r=J^\m,Rcm:RB#no&'5`!=R9Wq=p0YteC&VV.<V<(5k7Kl!C8BjXeB>gEm8MX,,[DZ7S
%9Ws6":p%GCnIt4E\V?<cYOVIeIb'2'm/dh@2h\FR^q&S6d\>-Rh1XV:-aBo#fTB!``iE%2%[[o=8!H_7dt1APNCsJ<^jrqrOELU:
%)u^oB"J9>uL!g*mJhFD>9pr<+p9b0C)8I<#V'Ab`7[4ELTJ_^i?h/_I=Y$()e4m:lR)8Kb>*`+Ka%sXJ!E5.)Q6Fm!/;C!Y!7^cD
%,IXIX0t8Q]%))hcXn)Y"\0s1,-m:\s-P4:RS:$,ul#N<`*[+EG-'1#Y#XIA]N"$pbIS[IDr6AYtLFOna``F?$8:uXM)W,#4*h1M#
%NWs6SJ90MM$MG0!n?l$#Y@C#o'&e&G9S"Io@cG!$TUQk8'#d5hp_'q`$.t,tDdMDRP@<RX6_#Y`-@r)5$quJ5P_)dq#j=AS&l^pY
%!gClQ$uLr0JGPtYAOiW?XWKkT'*u%Fr@U]",M;_tW(d:1iuN*2@fsQU-H8,%V<JY+<WWh[Nttr__D<!512,9X!6b7`@WF>t1N6(I
%8W>'LPEm6qPXpa0_57dV;r$M78/ht'K&[<:g`V^:gopi!LOmfiP/*=r5;XR%.K%Od(`L16krY,a2\Q1"mj("J6A5hP'A5mobu4q>
%E-KqM:cG-`J?`RtPi:<IKYc-+)7KbL23*%r28W59"MW[B6q/0fF1@?il(PpqC.llkM^Wa%?i)5L_CMt'LEso#.Pf+cVE;nc-b+A;
%RRfqD1a^BmV;8XPA19Mc3k#E/*M3QL73k6)Nf7rj(--?p7UG/a3cNi,b?4M(V!S:Hk#u8RRsFWcJ"Mf'PG5q9O1\$:Fs;X\Xr1@h
%nq%`%!dRu^P&Y2k)sG_n885a;N)4apMT"606@0'FZ)(N"AM!=J7=8N(V=u6dGVm0,bRZMi'<([uAU%UN7"J_uDk'jN8g(l1JFsR_
%Oo]P/e$Ou7>Co#`=Ak1G@*NCu"7L2u&P+3;eiq@pCK%_jZaVYI<+Jp;ClB7d(q2m.0Hgn&8;qQ!_Er!2!3rbj/A"a[6^!2dQ1dbB
%@W#G$9"tr`^)>1C9J\.!P-IE=1*7Iq=j4sEbRJjD,R^,MP@L]D1"RVih.E>Mj0B:$?:G0QQuT^93GOIgCAE/I.$F3'<[:FWn^1C4
%;CP;]5AH43VK#kFj%0ZLP58`1Lsumd(\BR6>>dguI&e3ANI2s[F<Zg+!!G@VNgl2URJ+3(=:n5sTS%7E.[8?)b<Z4XI_s'o1'/#r
%2dpgHVC-L9hSKHPMqPq6Ji9dK:$R#*r/GEDaJNEBrn7qn[`(iO9LptX@?X2\5]4sF@!#GsH2oN>Hf\mC'>HO)Gd&rpIqj;u4WtkS
%JeZ+H>i!+NSn`6"fJPns9*6"T50+3r^_]Qt&raNh"$iS-e/TL'5mCGe^Bk4g@WP5/1@5h[m\ECFPh\.M4Tu/<_VFNm(d6967,s&\
%J^p"#8-._,"?EJl2ob;8^j0[cC642$,*o2^I*FRGFuI/^Y5Q'9=uWrX5h:Z2Q8T%G/q'rro*`Lj)=pbT$ci/u/n(ha1r(*E.3:aY
%T4>6HA(k83R=;F3quqfh\TKA%aV[FN/\J+AJL]cYnN.r^%2=]4<hNPca39=3GEU$e0Nt:[Wbi4oK2NCVD\%(8N4erAcV+O()5"Z"
%+LN:O)Y`)W&_7qP,SZ>i-kF^cIn\fa7K,-h^'Zs+7[r$Jed02/J3Dq+bO&L67(cU*Oi/\$TVFm`e;WhJY\up4'!uZ*rV_'3b.4rD
%&0O`%a?dgHGC7LWVgXWTauCi0@6;4(\V1I7*<K+7_j5<_&0VVsJIVl05b&U`"-8eISFPG;"s*5g,E[a^55+'b5[/2J\\m9%^j^7C
%=O8<<_[fWQnpP4d[#O=PFaarckh>G,D6F924XFKe_T-l9pb"jUQ7rUOp>j"j-6_c`,=bYQBKYIb?E_a9,#lNti4'A7*E.7+,jUk/
%:Qo%BD.A?&!*[fc@!KOU8GG_GlZ)"08e["/A_fn_Y5h[IK_ekM=CH`k!IHl#.HDmgOu(UbXTEG4(NXh#iR>^@-Y()m$_46M4"N^_
%._S]Wdd8lHS_hcSp?9#9:isCJV1i-Mf<<igqI?%BS4ZNo'Sd-X@N-JJ^U"U\9*l0uR091(p`V>#oUlO41JO#_:P/MP>Z3@!_mNt`
%'kMFFLqn8@;c+t*Qm@P[<"T)F7K&7KojbSt2lT&;4QSuBf+96*4).?,clnoC&'/n]AJ>P$A0a2>\XqifdP6'O[.6O3p?P%hZ/LD`
%IM8L5ro`Jmhm1;`:YB6"#]TiRfC--%kBP]Y%u2.Y!cCZt*$DT>,RISgFMa0YFSm:%:QPEFL\lTpNb5=-W5XrrKX[OA&J:-+"fsaW
%^`ia^'("os=]iHL;9G\+if/'qP:n!e2r)ekdqe[%C0X@^*@Kne8CNsm/Tgt0egNe7PtB1bD%j-3@$-"69B<KO&H1h]2MlL3aN.7t
%fR,0>$>eC50gPW;h22J+**S?$FZ+o-/PHmF8h1K0M1H5G3#e+G9]EQrd8:M'Qp?J)Z"/1d-*)1ROO5=gSQUk#'9*tGkYu5n<WNGI
%r?^%FK+3a[LlD3@XGY_'/6PPh+JTT_Q!$g5JUA.<9Gusq%+NH6=;J9!?p!BsAJ33IS>]0d"!]DN"LDXXJgpf55TqC.M1``s@Ae)^
%j0TViKK$_V)Ap7HVNM$P%(qWE.PcaCQT4OIVtE=`8inXB8$GOW0,e7=+!_4)<A*N?,"RUp4Y92/6n_5s23eaE"s0LdL[=M`M'^$V
%J8LMNU(\3PH56ohKLk&K#eNK7LT&ECO[C:S%'nX;8<sC@&/HG;=M]%6UqEW=D,N[4"XXWP7<?Y?DD=0_TM^4>CJ2A3X,1Wn(gF1"
%K98\>8Y9Br_Z3F4@aiD`8Ph5'*m'u8%"-;e2,\e/8.\uNSVe;ON2>!7*%EcdAYH6)OGh,k;,eHLoY,j3FltYJGgmldBT_:K8(naT
%Q_a-=Qq3;\#>@k0HX,R_>N@%beiM+p8HjZ8+3&Rm<<@gR&GWZOV]p_*82+Tl(b;g:"<PDckMb#`o*DVD*N+upYXL1Ia:d0.@.Z1J
%Sp3;Vh*4VlC:'l*lQJ7,KRA=G@d)I@D1E1.L`lS;9\Tdp+;JR:.M,@D(h/*V't>\Rob;C6*(-IBbt%f^@>%&>XHDS&&u%]RZX?'*
%8GE*q'\MV81l:fR;WBA&*hYla3-?]Z-:jaUG"824]q;7J=@0=p\k.m)6Nmg@X!*UD!CWX<c]5us.YL&!k;#\/aZdg/O>r(pb_l0$
%+\l^L!X)&N]FIb+\Y2?b_-_`q6_>d#9;fGXW0.JQS0=1'MDC_VLu'Rc7>6c[7'Ucob/>JlVG>>;_8ab]d'ujX8E?YbBpqM0Daa:c
%$7,'_\1(WmLd\4D,='`,BT'q[G3u?O)M7IaC6GBtX-b$uA&b][)Cf1dU!6BW)&:Pd70kRi6pcfs>0HI;L1+2@",f$J5&W83(M#:[
%A5ko?aU04aB<+0,O8+8\Rb1cOQM;mO8;-GJN]Q#'D3Gk?$BAMKNn+uGbheQ'Q4.M;/`P[K4XM<@D2H5JC)eb1pkC,ele5_iiM9Z<
%aFbN$MBrkU2LoIK\.4++LRK=;V)_)),RlFd<@k"8W!BAV(,9Q_%MF&\"es932A.%WTbPGmnPg`mkWE')M8F-sa+'!X7bmfo`39f,
%k9i`^-=io6#EP7m&c\X)`>'V*?jn<0:J@6I$;;&]#X6U,]U!%2E>fC=?k$8:5q-40+R:nk:(1t>N5hgXP!m5"%EZ6sJI/Y@BFL:^
%5iS$t?o9%``5ZR_#Y@JO3j]K]O[]-i62eV*lMq\8!n:Rj.NZs2\-o4CHQ]V`R+;WU'bV?+Khr%VOjo.%`NFa4GK1+Hl?7CP,(08[
%6kmtANK"f"OKQ*fNNM0eK?6GG)k\n(/1mY#"AYtr/a(rlPId20U^#eUaHD/`C+)FVLZbB+YNC;0$P!b^"VCk?,$%)`&!'@S>2ksC
%&0)$dI?Y/f5'gM/fH'3i<8lIcQ<MV-Bl>6NAAo<I*dDXh0Niq+@5So;(u-;uF&'O%6Zg4D-d9Kg`%=5oIQ[EC"*o]*Tfe*97fF7W
%"pkA@Wo"+<L/]U72]?KN2&6r@^kJmL5cp`"+:'5:0HBjXHN<E)(psiW:8NS)&F,+:D/3eG+^\-S<9Q\8UC/4hNVtgW6R+`GaT4to
%,#1FcU5Gn$MAVP??RUXP4/UBS"D2C47NhiHJqYj-g8?3t%-&;&1i.2`_@WT?=H\<m9IbSAHYgipTCoHGVLa7)TF>cf:kkbgAd$)/
%_XLgTE`4k9I3ObmL0G&i17bFZ^Jba^%77FAgCVSRGDZT06#^<nA/V_4U7i7h7O<iCW/%%mM-+Q<J8"IFla/</kL/^5U]/[eddBpE
%jr/<GQjtZD\65`'-00^r8#aB_@Pr.AMaXU5FW.jl2\OfB(J$_A7GH-ZepUF$0hN_:D33u&Z%sfg8YL+G2DP_H#3E]npeVVM#lFXt
%[1<3LD-GGNg%7S,bb2s']UFJoO4i/UI5j"M(miktC=/2$8fKL/QAMs60EM\P:5]XB=XkYk69LusUrWnO\2/Z*-ZR'$R0#m+<O?jQ
%0SpRJP8ILn8Eq@%8QsA0)TNpjgL3TOOqPorf>4*\9,3FF4CA4Fq-&mE\J_'.iCn)9kp<@L]LX^YoH$S_b2==L';3FIOV4g.jJ3?'
%#<Gj[NHXL/$C:l<lpa6KL1W;I$ZW6g<MY4i"#49ii(aE2ZB:?0$(;C;N@7>\L*_BP?i[DPmNbtM=Ag-LM;@tZ0IQ22)JPaHJsH[<
%R3Q@^J7L!i&;bMl_IRa38Y@W/m>%3:,3:66!1"ehc63"BGSits@cK%`,AQ8!Vh'h0/=-(X'FFIimTZ*t1'_7J`"Kn3(p'CWTg/+5
%U[NkkDHJO^d`6@o.T04n):>^Q6j^lb9[K4Q6(GHGeBj&5K+RBLU$rLP,DVSm#>k"kQiUU+33FK)#>5_gSl3@mEt52!dT-KVeP1hc
%$9!s?,TO?>_5$sHUk;2=\i;7%M6/R$_+aSb2H@c-LqmCkYp*>HUsY;X((Gb2$%7`-c_8)g[.k8JLJhV>ja@\JdR]':7i)DufdW\J
%NG;Pq_kfm`TO1"lf2?-^CliY-6't"fR>?5Fa[bD=iX%-`XPEltCgpmJ0[i;%(JY[2R8"0D)E"12@eBdU(6Nb&^cjLa8N1ZD)mN*+
%RWQ]T%?qKk?*SW8SbO<b&u^3%%%8t-7Sd9^+eY_Tn3mT/e2Z,[N%cd73<u2'5qPs),Y\<a#+ulk_8ioHW/O68j3J>P)U:DP8lpUX
%9dH3gK$>2jECl5_!&d0[>*/PXGWI4C(KkK:1QmJT*8%]A/pnACmW>)\-SXOYZF9sRI*G]1!MaQ,J7-uk1\lh-SW\+&_O!q?P[Z(E
%[>BjU6P)DCb'J[[m4Ch:kSFfYRB05L7#@&Oc5iBuPg);\mSj]"[#/89=^j=7Ud1qbN,-ZN"4r[]+CYb6dH"8Np+ae3Ulq$;)XUd<
%<jQFjh!DE'$6s`to/E4da(.eh__H,_>q-=.MIHrq91)2rT'XMu5n?4#!n^&-@mpZSA?mBa&Xn_LJ8P1Y&[M/Y6FT]m9ar%iGgaYF
%OQ;kH3"7DSGt:R#CeDX)A0BMtKL"\<F?5q20dGN%':j:lN",mpl+I3SF$+Og!(P(u^hc3SUK6<$P9e&A"LL\]3M!N)@,+Y]&1Zp4
%Y';d_XuWle@R;ns:8,K@@mt),Q1HK3,9RVX%6PdM'Kt@urpX_MO`[+ae!X(.Wq#=r/A18.Jf[^!''"+T'[@Nuj/TrP#cIYnn2R1p
%a3Nbe/K8R-6P_h@/B&0(AqZt515)ISqZa^Z3FVZ=G#oLd@aP"2EAs?bbBO"8fG+lUOkP*)aaPMaSd'q)cmU.f8;_4XoXubJj#<CT
%,%1i-.(Q`mO"iR_P.<;$N0N-`^)2T;`W6-nSm5H2e*+:X+uiP"jheoc7E1?DTPs/rkO)PtA4r)f^4:^3+[X>;^E:?d1-?d,O;O^V
%R&+1Us$(inbTekel;jN<=nIDFf<L?lg^eUMZXq=GJaf96M89LV1U%Bs#kR5'Q==%_L97s1n?L4XL/j<#=Ui$l@CLt@M96<0-HGSK
%^c@8nR?047>p.3(^,A4`bE&`\7Ns&_I=j$rLF(+f^k!8&7t=n-*2h$=]B%j(:T=^/._7*_nZGsOQ$:-"BjHdq,OXnqE\(=p:XAYr
%[[.YP3:Q7WI+F6gJrPJ+#7G4`fmKUumC2E]=aBEsMf+*rT:6Ft`0r$nm=g-0ic1TnWu3VlKe*&]A1kucTXq#.JZKssW7.hbZ8Ua2
%FiQP="cmaqPU+Jg_mgSM\t$'>2(Q`k#`+[&Nc>]]Y)nST5hl:t*fB*am7UFHqW1P)Wa,p8KHE`4E6`>G@kMrOe9]cM7nH@2:Z7mj
%4R;H9"g7=Rrs5Pklin9Uq#J#/+;8HoH,@Hc<EL&P?]?FgJ-1J"Q2FfI&uFd#mo>M<ScrW*:E#eu+f`-/&7Q;?hG(_mUPgZE2=%*M
%"#"i75af*q*LF*%2adh,f>._m53+aLpr8*YHEM1\`ea0dWF0fD0A7Uo2c#%"O'TIRmmpR]i\70f@%L[ilS,8i3)?](7$VnoXFh)G
%HF]i<7KF>_C:QpM#c8>!rqI\'o89(HCUlMQ_eHf.nNF_IVGEWX6NrN)Gf>KdEC.p#K-omq4H>`<hcm<0M.T*,V@'!BY>FEHABNik
%P_CCUl!82KYY/k_[s:Cq$:k3LA_`HrQFhG@r+!D;NW4UL&7&;%NP[qr"q;fa`'Tlihd@aJmkjt.@g[#lH`T;e5Zu^A_MF)qmK&jE
%CUm-IKZ/'`:kDD30(S/J#P1l83$g56_OmHZ2T(%>0B>4MPC2.kq<&&2neAV6Ct@RC<fm^qfj$"Cn=\-idZtC/VT:L,dg(3HZ7oPL
%?(V-Q5K*:@*Bme+a[QV8Ck;I;YAW588O4&AJ72.cpRZ#'6qfVP104%)0F2RoSf#.sI)qCSd8>XG^5,np@lhVQH;*>=gi*fBaR*o_
%RI.Me=V"T\Zq$AFmoe8@`*U8.)$'TMp"Z<F!(Ae#Dt72Sh'D/3hc_s4T?L:U<b,\'>>:1D6dU#e,E&jDFOHWo#`eCakp&QtXGTo'
%C0a<gOQ/$hZe:8_CI[V'ImHj<5IfK+H?`#[-1_Vth6#/F!Wqm.YN,p6aq(6G`qWEY-F7`b'p-tD1M4!gi%[_(kR+&!E=4@E&9R4<
%?44Xl-;jPNX`8l\^'J5DX8\*`.i6+pRebm1H!XZMX7,-gI9aojbPc]fBWHO64`:">g1&C_nAT9ngsXN<rmc@E\K"p,R9(p)@<Hs%
%V\qiFr4Qt0WP\:jCt#EcFNuh4:a$FqR7Bu?g^ij9kY6fDCoTdeE!rla#!MKP3Wu9iDMq''9^m%7.9J/q?rOggVi"B=/tW.kAb4YI
%?4a(7D#HGU.e'LLV>'Of&M83DXn&BfnF8(=I]tKtG.ZJnPkLQcQb2P2]cJQ^L3KLK=shWIHY3u]r:Y'rK&:R*?QA78B79#p&+@.f
%q$I8P>Q8;GMLV,Ah[_4ViP=iir*oGq:jsNi4eHNFo"Q7l&X\[uS"^oqH!8pf/GdK::W(JEAatD\ji<)H[('GD5a]3IkrdHnkZsVM
%Bh.6TjJ#\AgFq`5qE^`\pWmoKe+[mNmmEZcfCE!WQ8i2+UI"V1NGXN)U#I11i8OcIG"*Oi.?M-Kn9+tL\:!$G$l8::@KJ.P5oeZ]
%cjO^mj1^J+V#ieO%+PUW<#,:N\60Tq`k_Q,7.P<P]?Z8>6(Es?h9q?2Xl_9CJSDr,\l';^8FeqYQE7n(fk"]Q$N=0UT-pDOLfh_p
%JoV_A;BhrV?1k9-/m]lAV<WiOG\@d:-nVT0Q8ZCHqC94*#2`aTU35NIEp:B?!';qp^XamFJfU@<3QS0aps,pRS'V1qD;o%M0o*Lp
%,>DdC1\Z3.dH0gSfDWaoq,pVU:JH.t[_"I1YlfVKknl_Q6i=ENJ#[)Bjt*uUo4?=:nF2]j,]q:AVMApg1##E&:B4up&U"qM-!2a/
%$,_DIOm,k]!q(+)Gd;5Gj,#^t/b[KqF.\+e$!W+9D]fVM6[L?&5c9hhP&t!D3O!I5NO`aY%#BrnbtWAei4FnnJo_55ZOcU0Y!"T$
%nETY.A:DXc?24r"h3I5!=XnC)GHp<Id=KM/$,!:8C)p%L<)+@#!!t*ITS]IC=3<"p66)(_^_Id3<l"pp>d\j3U!FEeHf"?2[CAk9
%a3nK1R4Koc@VNaomQVK2J(u.GIK&*U_0f/:$9\^I\tn-(,5,,tD5-mDME!<;3N&W<Sh,g_'E8sN.6]oEO&/P<^m];YZREi.P/I.c
%Z)hEMSOKLPh=o:q>iNf^mDgA(To051/:\/'`diaNesqn0D0cm:J=6RNB[+oq##[uqH?/L8LO^AoZ3=Y\E!Pb9'lYn1Y>]OQ;a:0>
%NuO\s\.\&,#j)Q5?@09!<H%((or\a_He@$<Cp:a[1H4*I2g"f*gf9#87"kbr2k!sZ>2Qh2Y2bg0=)L\WOu,S5!ENR9(HhLAW"j..
%*iU2_ZSgd:=2`Yi3>*nE4L7o\:NTuODG9e`i3+CjS`-:r[YB#u8=SDD1;mA,]IU$Fi8(=GE*_'0,_V8r514HFFiNUYm7/`]F)BfK
%2cms_!hFCS4(U0_nJK36aB?^l7LM8\Wna%0Lhl5`SHKD/=D9=2A+O4]PWpp&Kp)rS!qbbPSMJfFlmD2P`N5r!]K6hpk46OsR8F7S
%j@>Z;:B'6l\slPG]*u*d+Uq$RhI;@@X]1k55`,@2hd`2W%mmY:lXSu\A+pA^b@pEM6+!/7LDV4A,33<Pa+QdrI.G`AY5^:;r`p\f
%;M;l8lstu<Mc:sFo&)mLk__oDYL9Y;&T(CU7$_CRBPEKY46fOdZ"[tmU\"9O@Rr[0cS4oB-C<<$$9Ub].s$UC(lXAK0g>!eMDdLW
%*k2]R7Bg<j3c18VQ`(_E)&^3k,(*NoWa=`o`=?"m#`I)Ri2VEY#P#kJg0SRfqJ'+6TU)V/QVCkNb:L1a$tC1U%"IVG-\F!$m`iOc
%Rm0V=O8'Dr,5P]9f#\K@PFn8W`DT]U7.mEGro-Ppi7A>0:a/0ZjEe.5nH\#[Z87d1Zbh?bFZSn5RotFO5P:t5!b#.r)S_REe>_Lo
%qG\WnCj'kcCXnAaM+KJd-U;GOO9REs8/Wn1'jNUdCqP+"B[5:(\q1KJbK@`WJ<a8BdrZ_TP+q7u71X[BR1k'HKKI,QE!M$]oH6XJ
%LJ[>fcN2@URtI:/;qKl_lD&+EN>##bGG9U5j3fC2o8Z0EL\bS\47K)?Z5rq;S3J*C@Frh#b@h6T?t[f;5;S;7!TXhc!hBkca("/W
%]6Jn@JrfQ`Z?\d^o$4XkV=R\V;Y%'GVo"KDRM1-a,St?n6'eXo7CITS#,]P#p7Xm)8Eb?r)S&5DZOYX;=D"7I8$j2>=TUm?R"38k
%(C`ciBNS?Mb'+4EXLLTVr!'o"ZXYP,.1gFen7F1.rgpt>=7?6qEK?gLI5j"A$Fg3+m\:ned)3r7Lhl(0jmd[(%8-BPlW_I3UEETH
%!6Z[#ET4W1^KC6*!;45aeU_';]eL/Aq7Uocq6%BtZ\=/W!NrQlhUR8q5iIa^89:8VLnAV'mkLLucefgn`1'c'T"6p"(%_h24`_;+
%Eo:6Di=!P#?g`t'j,22E`4-#XNtoi`ctT^\Un>L9aA!]S.+fMY&LI7YfVesl&D,$q7$M-/]JIWc['o,K:U(qakbNZ@kAJIXiXNc8
%.MKY(`>K2iXI'&p7pSbY]GdBYW]n8Oj/?Qci)^<OO6h6F`hLQIHRG2/*BW()p_:*J>POs#T7I8MB5RnmTK7$]JOVgQ?(:FEerQ8N
%V-^Nq*qnO4+'!`<*B6Jb!GV6[N9k\Sb9pR-1;!!O&aaguQXR8HU9YUT)e*'I3#Eh0=G2[o41cnZ'b?t;&A<frGTh1qP[!?D2B.@0
%EgL3bATdf)dGNLh]*r..,V&uebi/-t,D_oOPi2c@^3;cFn!@8.6[ar*rHgMUl`_=PA(L\?J,GXoO2$2DkPt@ms81V#pZMcMCpFAD
%[O^icXK@bp.,8ceNck.D@PpJP>;m[IpBhJ;ZbL3+*RO'g&;P?Z2;7sN`$gRT%Iq>NBH+%-\<a7)f8n(97*)#t#/=\8!;[-i$)[f4
%/fB@jlKt*,Zn6b8Z+&H1W;uV"MA)TJIb[rZrIdGLl'H]p`>oP=/\7a,KppT^?p*tf3d<iIh?S,rlTLFZo^k]2^\aT#ijO,[dd"r(
%GT2_4lfk6p0K52k.KCPuFH,rH/lnMJ0D6;*oE(J&/TDDld"t4/"XjslAeFBo)lJjoF5ZUS_Nk6J(@Ag)Q\Lq8)`t^@d7<\6fc7I5
%JVbfUg++*\[`Tp]6nDrr^rF&?naNM([ZQrOB.o+]c,;QZ3L2+.$Z[_f66JE)go<[lIqNabXl-*7rjWKQF7oI"WZBkl!s/ULKYZME
%<G"(gi/*'3cqeaO&ND+5XT\rj4W_K<.E90u-+Kji"d$Z//l89TEIb<0RdSBX9b+Ee3*Bf_,AV&Zj*Q+B+4g/`Z8s%ncf5Z0ZMUpA
%J#IGZbBeS?dD'b@4Iec7-e3jMIt.!uIsgEgq"lQJ>F[s<B0C4a@8/c/@Mt%*66\1P"f8&4!<<aFR;kUID44]c96Lo>jOrgI4G"ou
%$J@'a^tVSUmo7f88t(rh^OR*M16&=9LE)h$&T(HYNqfc+h_#lCQAMW12&-5(m,NQ/^Mhq95>c+Zql^V(Y`?br(DNqdlW@/0[85I(
%LVWLi&=jdEJApd\3$1L5eL_iZW/!(me`lRBJik,0O6=meM]bFNo[C)CE,\%5mQ-ljoYRh?GCE*B%BBi4J.r*$V5pgSVKKTc*tB"$
%O\i<8^X98bSGE"Ls(P,DrP)1`7%1lR@V`\=a7U+;@g+_+pa#FfAHcT]-B^n^A13,0,"2VI2TFV=$=>X^1mT8<V"`(3J<)d<^aeUs
%kt-G9lGUKg1:<oM,g98o1s;uJ2I''^cu@Mbg)2ccQ'HP"i+5\'D8pe!/@2YU)@U$)o.O)Y!*XU0"dU&^;4KeK.?:O^Nr1JT65VnR
%K7Nnd&Xd449V5e%BVd)l7d)oNqIKioeLXldWeaue+XTCeaqd88!NbG?7tBtqmtlbR%n90n,>6'X"Pun6IFTAcqu`B#C9EN!&H!rj
%6@fcij7O+2b,[>WMUEnI;R=Kuf-+MW_M;leR[$/t5ViGPKN8);]OiiGe:#E@P0r&2[TbO5Pu'[K=>:;%A\kgLP!YQA(9-PGEQc1k
%T3*3AW*$#Qj^crDqUF/q]Vf@Z4>T72!2A"!>n!,t5-qbX76"UB+Sm`/XkH^NlZ<I#n?B8"W(<`]i$!P\G2:dq((VsP]MRN0Xpi$+
%.K(351`'&EqIgc&%.#,o+sr"*>[]=j*LKeI-)ofU7J8f?+7<17huVdhO0?1nHNRPu,'9Ihr*0eU#l2b'WoJ"SnMbROA30dUC"k>=
%KItbM&SdRW)[k$Fnq;md>O.sIKTZMJP7+lK0<t8)HZP@;Sf)N#JHr(]]:)cNE.ofIWn]k'd;ooU##CR[E1Q3UNl[aRnQ9)cNV`s\
%At'_H(T]jW#XIdWN_uFV/ZZ`ZFuO<&_Cg(qHkpCR_89K9(T\9*cgGk^WpJ9g:qX"@':msGVuEf["[l#:)6oWPN3#jkBQQ+sZZQ,G
%-\b]fRAQb.'<;Ri%!4?9T'K&<lWl-JDoFQSb[qjnc#(ka&!\N$qB+(C=1[6MS!?RLifV\X:jBS2DdDN=&l9"UReEWtp?GP@Qn8sC
%9LDI-XE:BO!l9T*%0e6_C;R@I_;Ir8W7Yucr#'O58WI?&C0)>ab0ek;PD1a'ej_7V<u'I&Hb>5pK>5YT0A[HjEY(c!);)GtrHS.r
%9kC:Trotq),c/"m"*b9>AnE!,Hgk=n(X>9:R+TF.WF7R\+o!\2LbU!,iQsrLDR,o:McNFsDJP(2`9pf]G.FSUMgf>32rIo+rEb_7
%fiA?0@JP,FAZ\^Gs/&c+o%'+b8H>$m8o4Oc-dX-66rk<7TFN)05a,a(.a-k=V5^+UQHr@:K+>T\LGmk'd1]3mY$L/"+O5XFHOl^[
%3pdf7CnEA*F.f_P^qQ\D`V6K=]jiu[+1E9XfkR)rXuX%"'Oh72Q,;L;Xc.!_W@hO_J'b+p(&c(u7cmk,r*,0W<$IJ,L-W%Fo3*0D
%7np]8%*O;/VOH!;>rEgXH5E-8NCDJkRfU>?Z\dDPhQ"#+*cQb?(5KjD`5kDB0ITJs5e``I*VMuHptA"1o/_mRBc(\e9iPmc)i>'"
%=2cONXG)UM8_[i(G271dCWb"mIs5"P.JOggD=QKJn5$sNP6b6I%;%?V^R^:;$!gVhm&jr<&e&R.i8S7$0CfW.TK0Uh(V"^@B#caq
%aq&Q.I"@g/FFnj%;oG#YYVshL.N(3S/;pJZ-oBTG0Qb36";.4AijZL<5UUmb:LZP>!LJpJ#GAF)`N-!Lpr02)!>#o4.<!h;UqJ>]
%Mgl<ChaKX>YRQB(UuEG:n:e5SY4VS;OEd3I0.:B19>Pu%bh4KdDE\a3+o_[P+sH.>NkX$s]WNZVJ[&hH*7l)sL(7kK;9HbXOYK>V
%;C>@KC'Ok+r!0&kQWbBc+In1tl1H7'j5p]!Y(qc,@:(&s3?^b#&n\9U2W9G<cGsg':]K,o#gu[O*eJnQHVh?:@IW.SLV%jOnaD3O
%\/2.=l"<o7>=T>F63enQZ67hfkD\;k<Pr2U1as-`nZ=Fh$>lHBr1Kc!l^$UsV_"N;A?k@n!-]nLd;[3DfF+PcI]/a[9gpjCU7i84
%Y:9UpmV(nA%GjVU8US!N'ZE[R&d+ri:h%5tm\nIEZa9W$,dPhfr*X3WH[OlKN_O'^HH"L2+&ZoFJ?nYjaQ:X02(F8"&7+Ktf`j(N
%`Xh.%i*bP-TUjEW=/<^.FuaXIjH*E[<#.0H:`QUIEsS$_4WT(-320hk-R=G7FNY"iYj6Tj\QF?3Z<Z"^g^M[OYD3W0^Q\n9]MV\i
%3_XQOlAX.HH6.WZdmp*pm59V/OX>\#Lr_A"1#BIX_!OF;"TV:KWFT0PLq"is^,;o+cegM.n?JcSqCN\Vdb2OjMAe9mYGs7b,.T%>
%P)+'6M^)Rfg)F()kT[b4Bb8pGKAOSAG`E7F6o@M::_(9tb;^o(_K+V'K"SZ[_P<Q[!Q>;^V^O2CHmHV&7%b`$!H;;$Ll.te09n*^
%@!@M,<nbs-]A=.kff,m`r.aT7C^:qTOD0(4#Ck\*'.D9nOeMc,F$q(?aX9fI(a)Pfi^20JN6-[-!$T\oB#iX_nqu2(dW@cu6X@_e
%9I=%<r&N+><"fE@WsX:tk3aDi6sL"4*L.7F5aF_3)'%khgfs/4\JL4+"7r6TZj@1@\;.`!8303:q2kLe!AMf_]YXrq2DMO+$S9lG
%dl,^b*qnm:Aq%/HT:Ecnf6HC\T%qYUIsQ3GG&1NUh%+ZqIJ&Cl54b%LI<*&_hYEuUJ+W>n#JnktT`aBATn3C-l/[+NRpI1E:P[`C
%+o#V_s$<1EEuXIYE:Nb;\G5aEs7IBt3']\2>/LD6TAnsp1,?*H74V5>#q!b##JZklk.b&Y:h37J2V=s&#Xjhg"bpo;AdK+.*7h;j
%&C,]X:A-:U06\Z;.[_M('1YYdc)_M*pai9">6T?j/=>,')^-f_QSb_HMi)hufi<R?KMq;UN5!0Pb_p1+4J/4_^Ud1sn-md5r?j_t
%@hH)kiS]UeQ"u)@7n$1)MdQn?,j#74.J)%t!AHPs91;W_b#N*dBPWDZO7\$P`$.4NiP1X`)aG>RgR@&]VE/DqOi#Mb;sd;@h&D-1
%$,^@>,2P)RLsQ2'I%:-kPWO9(Y<R>pja,=frT!6r?QC1Ac/](S';?P?['<d!N?`Qh]8DglO*S<H3//Bi5j_L@G2hQ!L,MO-^,?*5
%n:3J;Z%%WI+r,Sk-uVAA1qni-opMN89\#i),7ke<._bLM8OtH.ShMGWMZI;L%&%Mdhh]2NPs^/\BUJsG$.8;E5<Kog4["Zenr9bX
%:B/WnGmO@(3ulhZr1o=7/_;I*W`eZhH_B=e.=/s_H56ST2n4,bRfrNr[ZD^:DONO:Ys$mq'VTh.8*+5LOF\e#<Xjr/D#U82[[6kj
%*<\D<<)M[P^?`GK/[1du04ut#qKbrpq@#rfOIlagX(o2S8P7R!42Z,*?SOp:%Da$/W>H7sq[Ymc,hrhcQn"1*Tc*u2^k':"nCT0$
%"/HHEEtHp\,G_]:aD-njNLMX`@pMJ;h!ES,#/aQ`Z`?]HRe=6;)s8r?lM>h_-W8ud(Aof^d?G.uNnn*8GQ!O"D`A)SIREc:rL'`6
%6M4D;'\;l[%OsteW,0E("U`bD_?4@l+T/9]CJ5HThZ=Xk(WAF#e-W5On`bIGM#OnW?9eXt;-"20Z[ei\l]T'fI6d-&K]=WBJGk1h
%=fZaFK+,OL,/f?!Y:/uc3uWu-CjSSE*BJK<5U^gM#-'SKBp_`6EY41m$jU*L3[)G%F@\M6'@L9]&i;Xe)D7FV.'0;tIHj_XEY2(4
%$+Ede/VQ^q*=Kr]W`q34W9VITn<_d(LIDJD&'DDC0C7`F/9cJU\4s$X;;t[XOW1KYZnN?\5q=-XLSN(,hjRQ!:sNQ"[7sQ7<g%^S
%S&,qi$(k?cnp-I,4(L4P!S!2RYkQc3M*DZnNk^<Go_2]?(#]l_liT0JS:"$7)Pn:eLurR&h'bi"(P^Rca?Y#0eRF<nYTsKR^Ncl6
%mV./%c??$!4J.5XZhTr#$$"4;M,?L&g&mNd1'qPBmO?b!=-.#QW1a8EY#lD<?`/8pFb^3\At/&D[kopYb:i>VYBIY[1a(kM>or8c
%]526)$"'sGUfoI.KOl5BMSs?D!qn/``!4&L:;*XH9_XJoL2uJ/'p^#bip$Hb2i:d_hA>9Y)#f.a"L3&,OZ!Rc^@N=RGOHL6*5ZRP
%.)=i`9$%%)cHuI'9sQ%uGpjq6B?#UY>2M^38D4^V-Ho&4ZpjZN7<Jlp^Ml//VTFX=pTC<-&3)k,'-?ZWj"SEg=kP*UD=Kl\Ak,09
%R0qRTcmL-?^Kf[*^-?9>;D=Q'7!_D^;5=b)$1V&TVC9=N1^AIr_S$<<;[*RkNErlsX4)3E1B+Xca3u.,f%]usGENd*Opi[h!QO/W
%&35+F&It:W.BALU!@;r3q9jI0SM+!L0bh#%RD7=67&#8-+K&f:X(H1)f--l9Ls_D#n.t$f9(kXUc>s3C/ut'4NRTqab7m3;qA*;<
%$WYjaY>B>NCa$1FiK,.G3_uM$66u[?(*,bi"F!L+'hJo=ER7WYnocKa3UN;1n5p2,2\GE<U>lUQ)[fhS-776(,R+Z^*51?ZB!tQi
%%']M'`CuDrnN@G&if>59J7`iQT;h["9o?+$gWsRhc)Ri.SKj$-M'GZ'$Bf0L*mfa-Ha\\fcZ=eH&^M9_Je>):5f+Fa&>%k?flGMS
%A'Ke2Z%1H;gZPF<]]%buXf:A?/G`t92,cGB3Ih1FQb2KAm"$-R-V@WZkZu,0R$0qQ3J)\W#2oj)HM(qPOFu?l7Sl3WUT\YCiZQ/C
%q%%'o38hr)i4M*G"Lq]%[WDj17S4_s".f`CZMgk<%e0GPp(tgL:hgpH:tOSo$\#!^W'pUCM$lQW-OL=7l@HmfLdos@a3$bT$5Ehe
%00bhT8ge(Z*W.eS.9%TI=/+^Si$X[E-JgU]L5\E=V1uRJR5D.Z4f,F,1^GB>pW[=e!nUJZ3C=/%f!dL*.=5b,ZgM91:o8*0&I5U9
%lCj*S`hFI8]BGWd;!A4Gn:LA;2Zb0oZ*lD[]GrgRBmuQSi[J`>"g@$n2=l4N1>@S(Iof<06a->e-l8tbI[W3Q<F:)mBfu>5V)o;7
%Q*9WERq'>8`40o/lM^?Aqp`\7;u)jY)+S/gKt%n5$E]`7AY^fuU_Fjo906qPOiDpi%S-b\5Bto#^cte6U_jc2hXITRZJo6lVM`OX
%hMUO&2D,a`UF].RoO0A\FV8bq6u+F3Mq`,(\UlRNEsqrC#QdZEL^,<j"6E6*Zn&D*)6H]ps(J>3=Mrd_o;]#L\)J%[eE5@K-UV)Z
%O_*ZC(/>R[P=/O_dYjp*F1,`jG1#T.'0m%-SFGH0)IWo')"8Ko>!;<_2Wf*;88lW@3q*g8@,RGM14O<s8?f0E&-`d\5t_.k)t7UH
%FXpsVHlaDeKZVRcPj<=dO@DU%'r3d1qT4:XIp!/eC/c\Ppc4ItF`gbhH?/0j8cnU'Bs4b7cmHIU@'ctROi-!!TL1-`[%5j@"Fl(%
%%5B(lKVPZ]Bc'(P;-2DIDQ(UC:T>l6$BoUKL(%1(]U5R##hgSO;Z*A#eXS-R=>ls-_GFD7er$>S'pD1+_>[2qQpWlI1C)G%Nom=1
%mm?ON$f_4T/-;`b`RU0^?HC.=/O[uVks*PGQ&5"W'ko"7J0QLF6XS'\Gr.\F1A;ee!1m#-fgL,'eKa@pG3R5(n2(H[MqNulCDi0P
%U)+A0!.bsCPQL0gltBE4<:8jRWEp^m/9#>`+I(@-)i.c$MB>Ytk'Jeh*(XpQZ'E*7R5%\iME)LZ`OQW.\nW.@JL:s0'%\c+Xe^O,
%X?3)B`raBPU"i)KilED^,=qXLT'ppJ_akm!Xa43SO,rS@V$U1YjtSW,;KYpb3_rB'!u"m6CDPG2;j4fYGat`j/^Yc[eDhE\qciVR
%ZUA[mKLNbEP7J)R"!!T4oTC9A)%IKG&`>U(C/I7T+AYVLTGfM<>0u2k&dK<J^dsnkM$[Zk)5N]j,'8161]>I:eV3MLdR'T\$,UuI
%]/\o7,;2\aNI4'&S5%K8)h-Ho:l^2F4GXn.%VMRCNC<&E1r_eK"CO6mVZI2O>eIT(^)ha\RL(QuZY\-,JZs*J!`=XiO,,O\'Ij7j
%a#'B0#]R]+9PCU0,S!o_0:pU%'E?XlD3C78b>ChLNI&6]O2-?ui?ElGbT?j7Y8"/Bc#RPn&MJgh3V'X^<b`*r2&Kr,3,)#0*bW7E
%e?g'=3K>:;[.qYlQ5U4U/4gF%fpX%G`.)/.&[WMpcuGYVl'5p?(pYlQmo'aa3qN325_&JjcM3P`Q8m-!nO";NpdR<VL&!\;Rgq>;
%h4uN]^Fj*+9$dU*NC"pK#L-K>+Afb8*\T,H41'"-&ks9,![s$6DEatk+N&/ZA??W!iSV9h$.?,ImI/^KPH>nK6UA\*W4aoPDlW]0
%En%W`[TGsbI]4H:F;'!AZB8Wka[`Kr&&-!7Sn6E7K2+X%fq'0l`'ulu,0Uf3`>c_PiimJZ=3MLZ<2YRsOJXHP2).5Z*j8ech=8F&
%_aLp7Di^TP\EtI_\dp+RMMGRn[CI&I:P"L\ih7)a^Sc-$PGUcH(<;&]],Qk$[h)m(2VD]j27!IcYbIGcQA]sp6RO6qluY])4Gh91
%,N3a]D=YoiFQ^;(f0Jldn=hmQWGCHD5tX<\R](ZWS0U\217Wua`Js!>\gr;>E$ZB_O"H@(&'j<<0a;*E3)Xdeb)A&%-[IEUZ'rn6
%RQ6(-FK_fd5.Po5dP12F6ec#7ni.rkSIA.djJ8:`E_8<LUsjr6'"#=ZcY]J96=D%lQ2)R.T2a6Qb-"=!iTP5Aq'=3$IHrq4?(NIU
%/b@:Nr/DW<7:a\[&mI_B:sJ+W]Eui87ZrA.$lHHIQ98DnQ^0XB8?r3!k7RQ@b"76g:)@?AnqG:['plZ)+_IT'qC:aqAWZ1DYnBYZ
%LV4.$EY4ZYcB&lqJK63d\hTnuf5?O2g_FukNqaSGY##qN0`V2`)p,X#NF'^u-Qk7^d3kMH=Zg7p!S/[m1[lX8$\K/6(9s)u]YpT7
%bZRj!,ktBJJ"b%sahO&O]8)0/q@[FTZ*ACKRt05.7'E&n1E9QL,U*u"$?=h>(a#-*FSQKlpO(O13knX!bH0GtenmZIgsXO;\>Nef
%Kq^"*Mh]5R&bhchS]GQmUJ=G<.6EhT7&cT.)JEW._bO1,3TsO59E^k)#0'h=ko!(-;;qCUqPta=EL?gs%\a"W#bF,g"an+RQe`m]
%=(q(()$&AZ_hmQ#5G5on5U<A>cmB.O#f"q1K4(kI@ncHq!=sJ_L1,A'faNBqRJ.,irh60X_h'B5gIiDHA.G"k&WTBK]/r@;18g!*
%a'$A<)S4X)fDq^CbYUmXPfN%)0\pL[L;L*Y'"$8ahCX/V!a%m!"nE6H+'CKX&ER_O*^[+K24g@EZ?Qkb!,1YOs(4l\(lsP3#f`#c
%=0oaKY8Q:)]T)E6WM1qq)u?,9jOl^J`%Ij;`DBM`&K8I#`[Qen)TrDS8q^K?2[N\d_,D(XNn-o5bc^-,B=!qt<8+o)i:b*[U<B=]
%GB.B5ai'Y-MauPN9V"RM!,n!&&`.a&gaipl#(noD=b."=B(pWfEJY@UP#+Xi7QCCa^hid571rXI!VO5IK@<=fb8L(`\$S>=SmMAt
%<=jCp;-qWM;F<#L%r$Aq[GSPK8oq$p"s\\!nL7\ec*g'u-\6"LTQ18>>b2@@puKf$Nl7+uH?O2LH,cuNj;?mN15U0;U'T!%\Nl-I
%XuZ8&_,5f%3RHU,W'r-8D'6ka'JS:WkSaY?#_9s.E<:rG:ZFo3"K9>#?=)N$\PBKj3&"LS-e)%meUo+ei?g'p6U/JSNT-)e6tKTd
%+C#u*"F#Mf3&;sS&p7M/7oHR^FY8B9YZ4ma'NVM[bR!BM&t</*[njGLN>jPrZ2;?-b5OaZfgENd\\cS-TeESobs6CY*ZVR1p-XIT
%Kq7hB._^&MTfFbfbqE^3+TnPPdp3<e`)9nUNmr0hZ(0Rb_N\X`j[%Y/`Sp)A%(5rh.0^!V`GM:AYW-IfHF`$dZ>X\M;,%>p2T3@S
%&j_uOQ1tp@'ZcZMK^X*7Sid]'#'d-Qp+ngWPYN>q.8qkt$6/Y&XCul%&eM8+YQ[ceWV.o=*=U?nN2OWtK4*(QjcLaJi;n!L:fhie
%6Y/bIeE,s&E\ZXQGod<f@/Oju_K#D_K'CW;JXZ(kNI[IPL+;2[N&nQ.H)r5,EBOL`K8A$FAKfGKmf<Xf#\mph)5u-UTm6Z4h]RYI
%gbK%hP>tn:>Y*b`8fp))IrRR[e$c)hOCL%'hcJ:88+Mm^%qQouK]2N9L2S7H#LNZGA)f]g%>:\1$5F[(K2m]Z3)/$'@NmLjZ_p&;
%^0Jn^j`Jl."Jf3fJB94rJ,k+8=kgqsl6`,n_fb(b@$@nX;")kI7K@T\IAIW2doTKU*Zr>per?>1I_>lsV(2O=Cp'3YZZt@\T16fC
%lE^C$:\9.p75=hBo9OlSZJo$8&7pdq5%]m%(4+ASESV'L<*?GV@7rrm,NRGl1;fI`qT:5@!O8:-1E8-mJ:LEXfosDP-7"G",K9R(
%?4[1&'"[X50,IRiTcHl3,Md2-9dL-JA,$[W1LsrG4(DL2V>+p#XDcMTT=N)]^k,`@+dB>BTm4^;,,VZ*5R:sF3Ihs(8'<\U,_i%B
%&QW`W[.FS'AK!h5djn.%?PIH9d_Tq^TF7BAA+dN=Z;9f_`QE\e*`%.HBpZNcM*a%Uj^[%H-A95`KHsi`E#Na7m6E;ALs$Rn_W:P$
%jO0M@(TC@7EiGnGp5iE;Q\,6#l9ZL&U+VUl,jI.ET-/q7aPq/t@TPBGO@cPqcm8q\Z@odLDTi8(n`5NO`*B%9Q0#n5i/EJM=U7.$
%J[f[[,nUrC#?#EN)0$N`>XfhgAI<E3hNHoR1a\T7Mbp01]VROF/N./6m\5BPWZ%%]`Z*iD&)f+bGg$&7s&OXA1W6crf1EFL4Z";]
%Yt!4]>("aoO(%\?'LM_dLe)*/="Vj\E3WSMg-Y5m;?rIFb;^46<gOX\ZNVG_[aOYXQ8D'RdY/8nj^mNQdXk2PDZ)?Na5KpN7#4Hn
%bG\!c.OGSe_E^sY/16I@aSLg%NIY\lOSdN@D`l'OoGC9FnWt/<0Cg-];dBuu4.Ojt"!b#C#:&qcN4`Q.%9pDG6aba2U<L1t]G#d2
%l.:IYpnj4hGb.Cpo6GiU11Qj5YF_!):J75!G\Je)@=Ek^*;$\9B-2%:T=:A8/;e\r(q3CR.7CXc4\mQl/IGAJGWZDGCANS^,n.3@
%bAO=n62>$/]=)eeCa%V2HMk`M)>E#J[6Qs:#3(*@!\mNL]A[>AK1K<S5KMK9:\lBCEC1hc]u![nMb^kHGHNm4[)5G+aUbB%H0?P^
%fLEkdbcYb#EW]pQJ$%UW%<X9$>$!]p:%6lF(^L0Wiq;Sb?KBEOiFrJ:H2`-"r;<'LJ+#CMn'-bdmU(YUWF94T$Yh:mn'u2A2jeEo
%mQ/Na8Cn_tRkf78a0SAt*@*2\q5&HKa]4U(cX4U#&R,*6Y.1)CFP,nd8u_eITkOSX8U=D/"eT>bg",L7chWZ[2A9On>D@P']+i;G
%Ol7r'J?=%W)>11WnC(<cH7t=4cT?8pcme.NPo/&^Q^;1O+5;#*DVW0gW*4\XP1M`"ldnYtn^DEhHuCS+IB7/D]VFn^O&;/J06%CX
%W<NO8C)E>0KifM?]UD-LUi?%$fV7%DZ'c@TTLWQF%1.\W)@:sm&^NrkHt7RmG(S4"-R:cq+`hSB33=L79*?f`o:-*N@c]G'89M0T
%3+A;>j^<)I!6,q44:-E5fSDa_;Veu*J,C#0bR_)hGZn1XOS4KeXWSlNqIieP/R@$AE61LIF&[_d^u6l)T$$mH!DgtAb'F0\Meoia
%q*S]aLWX&^=j+O/`UFeiPGFfp@:+ICNS'<oIct8bMc8)E`C#'P28triR/?Sc)IO$qEkF9,;qYO=1%<-cd,J4lPGS/;eK-s$?o+j$
%l-Xcc%&!m)Gtk9:15@l5=lTTT@n<cF6-=&D4Ol!p8$O[A\l7U>NQXot)KOLl[$(Um[:W!7U1bOhHSrrmO;Y.JSnmC6KgGI0M+D'e
%?;lhLSRAATn7&'sisr.(^aeE,q]Wo!mH"kd\`ob<m,r8N!6V8Y\INM>=Gtk(GR3B#,ITL,*q^<M!?pTb#KRKM)-UjqOVsAHN:1K*
%-Y^hSOLAIoKR"j9K*\&+'3Q@-4GVTO`M$Bs3Z2tgoUi5-"5>2(=GD^b*i2Abk;a4cAC*.XK&l<;l&8U)_];W7AQl?rphN.o4,<d-
%[`k<^dkYWGOUF.m\2Sf&8=]-b'f#u+>SO.fh6!Rh"Eo-5%<W(Sj[A>R`Epmc)X>40%\V1.qd%!Oh<pHa!&'@(=B;=dnci&5DV,'"
%b'>\Z,HK8ucDlPop\5SndSKl>j#6o-[W(h$aJfKV@=ulYh5;2e9iSNe%6UA-$f3iaKSS.8h.5F`[L-&0P/:T#J>Pr8a<m`RcJ09%
%J3[AZ56WF/=gJ!"2T4(Hnhj-V6eGU;:+?Ra`/5qmHVY54FccLG]#nLt<%OX-q/IYBZ]Y7m;\m]o5TU"IoomBm22QKJMZWZI5D-JV
%I@H"BijrTr1YR=8%5&C)SY6>6#u.q'WNqV1'DSOdOOSSN-O?_GkqP+MXV8Wf]jLRBnTMr8PEXKa^Z"/0O^.f,Buii]3nH0bM?Cu_
%:=c4rV63K8>?:AiTK`p(IBd.(&V,[VZF=O@W(;HWcH\KgLRUfD@VK8]%'I*o@34$dRf`8"(.[se%sT0+L+XY$cL]RVW?e)rN00B!
%A.6bjaGQkoB^mgj1t.'t<]M?7TZ"nb5eb[V8[*V8[#ZVj2_ddU?cdM%XTMMNN:*E\rppKFb,V6P`rHmN?(Wr3O!L2%*GUh'W>Z8P
%+L')G%*A!iHk:hUB`S3gDKrd("h3]3L#j8"1/?$Bj1:7,IuRuV:h=g/G>[b8=MpaB5`K_dC;?@=N4g5pC)Sc.0e-W^_oXG/b7XDb
%j3D>32]30c_N<7BSdB?ljtFTm6ZdW0$nV`t&-_LsWO5nX.$M-;2k*p%;$RQnPp7hHV53<AVjt4MS<t>-<9-K\3qR<QeiVU72+n+.
%?<+6D`YOa^8UNk(BPX?9bNu17oE_2E?D5,)iiA&Sl=2OrP1<3/b-?bu?cPb*MdAmG&0=u["pm8BKdA21TX\n1V=N;i(/]K0ZNSNh
%:'Y`!P;[2@LC^[MY/mpHD_b[Ma_*i<;"FokVVsjh=u#@k#1cY-$-+Wu*#oA@U^k9G*uG^T!b1Wb)G(4k1p25H*>=^hrGBk?Wg`pC
%lm:t:D(5tGGp_QpF\1g<Z6;el#HU9Dr[.q-G2Di.pAK4r>46[Tm/:*3?I8_L2hu:+g-c)n7/-:(;S"?[WpAe&<P>ZS7N*,4U'tKO
%eT8`DXTCRL&!W3`G;ret3TK"deGY!*(uK=3+/:^_mC',ZB6`L]Qkg.b'*.r^`2M*%c*!G2P]<k#+#d-09)pYdh?/7H81'OEcX,qS
%F-M.VZ:GrDiTil0#3$-,^7d>oQm#Nj<fDN:G^X>B0<3hkDJR:hNS=P%9!`cG..+fRY\Ze7kt2HuMsRqZW\i(Fiq`-#_2:"f%pT"g
%Y":`E&h,Z!$@2C7^&@@A#XkC0m[G`7+T(]Z/krd"?7t]dQ%+'q?%Jr,n!K=B/B$e,Le8@6["+7Eq:n9fi?d<JWWYKKjcer$=Gj2`
%1SG!D5bDTcVk>iHk[RVXTL,2,/cP@Q3N5Z$UM*p+%p>g&%Nd3$'Y$f/3Isn%^pN86<2Fs>Z"9A3Ac].#;]8pL$[3R>qYI=?HfHNq
%B"\fV+Ko:IpGBN";)S!7)X:BPj(p0/)?&u:*I"q6[Ws<D4Zf,1LV%Y-+&(h6ijihO5\?3,?P&6Gh$X!'E%QIhH3@/01%-br5h%@U
%Q')ej\mc@`a1:2&M#c&<1(sLT!)MqCh4@]aVuBFBi[1[!!Oo>UN;s.%Y"+*q_*>)gE,hQH$.B2d])*!BVup)$G36Hl@^F,0S#5"\
%a_8#dc\>)iWAfZ`iN25!c?H>1@p"1/l'eY.aqsBnX7sepk*gR%peRC>q<@-SHL^k,=AR1U815HReUF*fFI>4V%*Ht1am:E:9XAX4
%8F>W!)V]`(FhDs;YMS]rNJ*5bl8X6?[AM[[IdfZ7$haJ[1\p!bQ,:4U`j1Y-OR<88Tk$n/5D%1s,D.Aij6hjHqfO!%cTZ:B(N/3b
%ItU2cl>,`d*"9./*TtL70hNEZT1W%Ba+ZE%&,V*hb=$pe0<f,O#JWn^ea#!25's\_cZ%2%SNlrHo^!<aoRd^'\E8T"YqE#(=H,Iq
%E6Vl1-EaK457N8EIJtk[nFZ3NQ;shC#fDU(H9>FDVf+kU?NRWB(f'^JMN]3g^A8Cu]IO]l)RVOgH&?KG`'@,7&eFUQ05LE3C,u2Q
%aO5I2Xe*cmmV`$g8U;sQ"aGL5?R!<.ZDm^B<Xp\=O8?%Ak^N&Gr7<$na^O8j`BW8=lR236?iEkEFru:LLf'd^p"bZOC[_"G`[AXc
%Qk@ngYlKZJ4@5a#!b/7`B[)%h3JNI5mOm.%=SF!bHk%-g!_c%RG@@H=I`Rk9&g:_AAMoV]Z'lo-kt>+TY%Z?%$u:M_khbiH,WV/g
%Dn[QAd,VHji:5.Z1GRR#o;oq&n*J[40lWIRRibsBV\F6tFCGsW7pMpoaSfDLVf*:#@5eB28)7/QmkJaP/]AgRnL=*o<^FU,2@@fC
%*8T-mPC5a+54Ar@B0Z1L*>PR0HdGhHp8]FHDgq3.G0bUAh-@,K=iQ:&/gCncqoAXVIeY"[(DSdjC@Pe!cDp:nB^l(k'sN/.lGZLq
%*Tro>Okn_RnBg]nEJoo%O6SfEqH,pW(rN"_HJ#Ch0/b_Tp%')N[F1\U6u8*kgP<OG,kSn8XCqZk>E51aQP<,up=>Z'.'(q`e7;!0
%#3W4(+D/9=hHE@&i-<[O4?resI(r/(i/kS.#aV"UqUh6o"\#2%<*!F`S&7lrW\fm.HRiSd/qk=h26<WKrB:YBDZ:.f42Fkg$/OZ0
%JS0&)[1doh\2oDic'iRR];I`NMiKG'EHhFlMYkW,<V6&K+pb8i(TlR@,5&U[m^!o47E6B[dtW?tjdr(BfTWN9iXOeQb8i4!I*=DW
%;!]nk;9TqYXrgi0J66[KZ<"^F8u2'2-tP-o4GS$k/AG<eM=V)=;4^GlYQ&<6U_B4]/uYZ_p[B*8]UJ^64l_-&AU"D7l9$R@d1`*Z
%YT2/F*`IEm\:e^P+_cu]l<l(Pr=>pjiYF?^om&R1Iht?<H's0)qK4SVDjQ5R`Q^.0Qm7*u9']X]"p&5QXkPag:msKd"UGt.!S.^(
%VTe2!5C2G$?F[IW5Nm@DNu@;.rXghJEgRP]<c<h\,"uleJQZk&?fPuNNl48/o]='LU:@NpE&Zf:#<eM'a7B6#mJQ`^Ra:mQ);oFL
%F*UqNT=2.0p$<6_ao8$RZ#ni?ogmDQIFm^JXNBZZ5\Q@1Q.?%0=$20P#!*@/9`ZB8]<><T/X@[Yl/I?hZ`*aVhYG@Po:Ock^DJ+Y
%#?VJJI)%URlkXbW.:c/56D1TXoF0nk,cVDKe<B2eYt:q8Mdhhk6*Y_Q\d42b/V4T#/[K#B:cJ/Ci@Y8&s'LY4?H8X%\J`.p[*03,
%o#A?Vh=;?gGehrIeJa-VH&k;GBI]o:fn:JSRg*ZuaNCS]#cFbfRpB\!=;0jdG;LNW:.]#&Tc%qFCdke@'VCoMHog>aKa$>8%#YE@
%6Or*pWZ\$#Ea'CoD7gS-bFCDqP\UjK@904U\CC(Y)%jPd('J0T`=?N38^]5!C,Ja?3gqhMi9o07QcoQ$gk-B,;@M;oEJA[C9%>al
%L3$jipp1[AJ.Y4h4O9hE$lWDU5IDgm'W<7e#C24!FSQ!$^6-VK4,5'c&i-ggAL!EL:RVS$YEM^Iei1UW,F,#F.:O#I%Uc"2K4m\h
%eHfnHgq7=)Vc,s_O/nMf.2&D#/h6,ak\1rjAAR!6_bJT!<5D>rI=g<qOL(CmkY,-kS)m"7KUFRXF/Vp;gTN3"!/A;X)$O=B/Ma%,
%X(XnlSMY]FBe%fFHL3&]YA0V+5!+Y<1)cec!?#;/AV/&%b\E7CJ!]2RY.'cDb0+VI!D#(.NAH'@a>@\JIOHetL^cg'Lq`[NQ)5/>
%5g-R>(G<nJ@FP4^U_t&4ke:R:[q>u4Fl#]bOrb1Q3QFgj&bWrm3Ur[eH0!0(,lj5(2I(@4'9:M8]j33Q9H=l]E?SLE\e$mdKYT#N
%:IYPkBeBQSDa7/b7AX;kaI`op0SsKtkL!LqO_bITC.OPbCYUF7Pb4U_nh-feG^^IB@cSb2WKXOG*#;@rJBBWJL=*7[nM-())fHgg
%-CVc6\O8SKRO6>Ur=BNr>,\M@NJJR31KCd2>6T!85DWp;Q"umeg1Wl;QO[cQ];q<M@"@orXiK['nK3?L.%<YtcQaAU.c/WBh%6*B
%F3<HO[%>e$E64$dQ)oSdhmIQ4maN*TPGem@,SuXEmYk,Z_k5;KT$2B%hX3%M,9+j5DDCjNO9q0qE,3$IU/aRJ2(:9`I\P#XW,^EB
%G)]7LBs\p`MnWoWMq#/TF#njUL34rjlTl*"-oE;3;Jfj0iQd(m'KnPQcn]JDmr(is@"mdbE:=I&?c]&he&nG`;I1<rgWb5$,V5Ck
%:9]p*DW1%V5Dhs,jh2.>W5I*JF?gPrFHTdPjhl*6Uu/6(6\*;!,o8Q].jh-pLs%5dqC[k`@l@jCU:WSKS0g7;P1@G-`7p<A"1FVi
%DiLbu0$11F<#_*oFh^tCS0D[Bg]pUiOken4nT8/Z-32NE7-h_K+5pr`"@bN'D[^r&:qZiU,#3KP5'6"B=2"L(EB9Q":;$ojVb"9\
%7(jU$1Cihsj?Sd;]=q-bo.brdBC&QT.oD16`*nlsl@(aJnZd&Gp$EM(MGpTZm_"[NBoLk7PhaA[gsQVI-8.XGW'^0i&k1tm2\#*4
%)EmpB:^,Y!Q#.<PS*A8*T:&*$>>m_2O@kSt`@([J*Epu=i+$6S1BR$VIIN+='pYMr6aeW5_8TEKcjb]Zcn;Dj.P02_apa&%0Z+9o
%M96[:0]c0k]9JGqI5"<F7A1Z3BQ3N,a3btf-8[AsANs;F)F"s`CEEEDc7itl/h'hq7"F"(?&b^Z'][IUbfLb\`n%H04bF'6jj1]m
%9[=%lITkhG33RSkJLe/t]WX@SVn(dDm.ttYo4NRr@LF-MVTHY:,cFc>ia,=h5U=a/APSi`VlUe0OP0UCOsMrdfHZue`!u-S:Z:]7
%Rs7hFk6A/A+Nd)lLB.k#N-tD\Bt>VLVYd(7B<]g2q5_[4<s";4l(mUg+5V\O9*"TdH#](=Q0E)J>&L#aFM[,=qDf,@K/Dh"H[8BS
%VoJ"G3LL8BO>jg1(BcEJce`p0(8sXn6#T+(%g^42>A4s5#<`59.-)h]&@q^8I\,*+egUa>W[EV)a=s8,3pUnF-qtnZK#EgE'O<S$
%&O4@'>GD]42aI\p:eP+Q9HU:G0W;__+EI<6rDZ`%f5i^:L95ML*jZGJi?@M;4:nEoA-ljnGfK:;Mb'c<G<D)LiJT#lI3n*41+Fa%
%/0OYn-jJEa;,u<2.(<s8DLKEGEe50\&2<clVoln($;r\JR1n6j`@GYtA6MiLmTUQ$QrW\,UeB-KkWogFS&(Nb@M$r@]-T=<IL,T"
%p?"s1&#g+4`DG.(;!o,1b*sKR1<6j9\:3/aFVZ6H/]4s57+$25DE=[."#>LJAj\kT!^R6]\bt16OXgm_Dprg?Qg4L"1>-W2`E`MU
%'l"%O##Yi+WtX`'R0':hMpmC*!3C2JR>RZRLnMZp3hDD7Zq,)'\cXD8V*-(!?<Zj0@,ci,R[3VEaS4Vo;d:F9C<9nQA]V+[]SUXR
%q<B"iX97i$n5Rs#[=p9\Uj*NOgl1]2.J"DZTd.H><2krp\\f#R<9ONa#"_!CkGO1O:IL7!cK$,3]1oU8BS"#tiN0jrmS(p)%P?&"
%>J]jH?PP]54[r=s6@8F;/YYX.Q9b>L/e+@TCg;3gN*`=T9uVfR)<RiV,9DeAjrG$<9uX!D8smU*J*!%,4X6.eZ34[U"Pm!\Q][ci
%==]rT5:KOOG=PL3Y,P4@R*?i[GM^QJA>*UQEojfmiG)X?gbfA8Q%(\@$"K4A^5NT9E>S5^5!q.m15S&""t.L5`/u^od3rdBaM?K\
%Ls6>VKbJh&C[/#()8;CuMkAHrkNVAT>68:32)VIe2PX#1"T!E"quB6qj$![F\l[)P.k4"e_t0A23HijL)3Ihu12-*u[h-DCM38aT
%S9+/AR@(!8(E>pcR^<-2`f[dYS`Vi,3B[Rk["o6kHZf4#&rZq[Uu%>h#H^`K2#X0kI6.Uh($Y%gLEm$QB:F/8@7bab0ULub?CPF,
%9"GYfMJ6NjEmaK4(RZIkNDZ#F5'6]g`OrINl+G)L_/'/W#"\LE;`[Fhm=VRY@fBAO-.($AI_W75E"=kNAkJO'IFAlV:>+bao(68K
%*!2``3VTB)r)CD5M8ktHnlB3Q!DC;929TO'""C.eU'SBp>r!(c3Z*SN6rDqB.BM9&@.WF4pE)dNb"6BHSDV0B+P,X'Xc2,\2aV.o
%f6[nd!(.ugMC=X*"<]],fO2\:_Dt[%C=fQZ#_4Y=rAfY[!7TBLD3>$3E14(?Vs#H:)<SBA7*Z;?@$M6(<$ruX'rX8CKb9gllA0)k
%^9'<8!jc+S4FC<S9OZZOlK$Gb;?F/o3EUEo<%f8\7Q-(=;D&@0h-\FgTIEST3OiqIXqQ!+J]2W$8@Y9nPaC+FiNI7#=d(AXSe]'B
%4=-qX0McSdC3K!W_K)&NO\5\o9;qY5I3WtSR*7*5T'm!7>lrE^8IiPuEi9!^S1,Fh3TGaN4pL;KIcnE#\08l54V$<+Ir^1kd&%U9
%P5IVF+2G7!a?Ap90GFfu@^Qei+uI`TMEI6=:d]&P0N>?<3C92`FthrG3]km@&*<]>\!_G^c)@*OeV+s^1V<^Ca0=hL4i0DC%ebI`
%9dsF5Qo1Mh-?_a=]lK`$.(pTOM9GEfpYr+]%YZTFaMWjE__PGQa2!63W<EU5V1Te/k>3Dt<lW!3!jPS8U>WOt20-!'VMd`560dH3
%CD6uH;rH-9P2OA81#QM+f]e#]0FCEC!R7XZ'4C70-5+njW!%7>UA@1)[DSe+><$:7)Fe'rW;!Wf3'`IQVgA=YR>mpSF)"#Xfnfe)
%55C<#N75oj-GIp)0i%Hb>\^VZfoJ]K2/g%(+X&q+^;DF-etZUQP8<haFEsd`.[,Ggh-%S[`%a[jMjL`D*6MY-->,L%/o;RLL1_p\
%gVikFBO:>n&.E^:hK24*0eF^N#j7b?];<(DB13qQi^h5N827,@1_uF"(gth2EPaQ;g]E[<P'Z/)^u8jY?:EN:%pb-k^6:gmG;0fS
%m7B1m+i`3Q9D<2b0p+Ip<njYU*u`$o3$Za9mGRA64]TWDYG_ih3E0LpS0EAF\;RS)*N,FR<4aSe6-;AY&eHP%&nqup&1mP:I"bO'
%n@t]6D3MZ$_3!CVVtt-#CIGE-d(88S#DC^%$Vs#a!LdM29.3*EDnJm:P21Q'>elpb2T4%[=$da%YT8X&j48^4b-CWB:n-(qM7P\^
%gc.p-\17dchX#bC!^4[HO`R$-\CI0UaDUF[5'Bo?Gdfk5JV:JrgmdCf2f7qufSQGW]6?Fj`ej#$>oL4@ma;#EmtfCRnVcg4;Z^2!
%5,bO9I(q,KT!4%%Ya$E+gp+k,Rf"),D<tEo9ZF>C8%a7hM96srLoV&1])jp#md]^XTE>qu!7eVgRXqd]Y^p+CWV;a]_ftLbJ"B2a
%^T%I"*NOS1l<#>CD`lflk3@VY!t\Djc>rY^';p8eKc&7(5W+V7&LR$HWV3JYs806tiZW*A;V'c]epBEl-m`tC8YruZRqE!j`R6-'
%\X=.WY69EMWn>)he.GQE?\aL"#Dj?!Dt/%:#f)6]pP7')V3:$C67c4u370nLhX]KSXU)mhpsLnVF=^!_W5>^?D(Pj^#X`mK"=]WM
%VpI,a'b<*(3d$NMh0&P8Cn5egZu]4FDUCp3p;hA]@s)EWE9"&^(s^fCgcY-?)#I2?a0NU>mKPF3;Te8o96.H.cL]2)s4?@7YJXo$
%q@?@`R/O*9[OQ^*Yd1VA?t7PZ/=\FB7#X+6'A]87Ef3RX^L5OK1.cZk<oed6h5.#6Z;;gl1C&$U1ThEa-P/(j<`/<$TS/fHTEj&a
%\Cn/_ZQ@!+%!PUDQ:l1[]duqe1d]%AQ2G+)^Y0MXGL4f&HeOS<V@T0J4Z"g8q3*IVkqcZ@Q5:V+eUmXgL%f&!^0JZb<mZor>bBp$
%4HH_$"P0EK[%BOu&[AMcR63kfb`F"+"edHC?AuK=Mn&.Y&[!UHK5T&D1mfh^AI/YhM!uN*nd,J^`E#a#J;NYBPXdfHF1OTWrIV?M
%%Rm8A?bS$&VPXopq6>t;e-nsDj<j"S15Yd32)gL6gKS>3Z>J%QeeYUWkn/>kmlUG)"uU*)_on))Q.)<J-lmoK9OsWJCf?TIq\2R6
%q!0."q%PM8LoFY/8`Oe&(:Ec5mK)m+dQF'jY7E7I%>=Z_$\b?RLK2DLn!=eu"ngGQJlG&u%!kM?!iZChE%B5VZ#D*EbR5R*mXcs%
%K@9YV;.D%paL1Z88-/El8*OcbHs/iX(?,kDY>6\BH!S2A!!!R.pFii%r'OLj+dB5;@KGn_LWYnpNP8%GX`uBmlf),Scd+;9qd67#
%rd@D64ALT26c]Y!5u#2"r[SsO5m\6%Xk8Kp!NjiF)lLbpMm`$B7I$U94>n5n.fX)^BfMFB@VOaS_[dbg#&:Il8<JP;6c4f_Lebiu
%'*ebjkgZ/tAn9M.&AqAMQkrX(`=3?/_;3DKbtl_`=pO]qZ00?4bFYk?3&8!J;NsE?Tm\n`c>gXuVEH@Ha\cXon/t*ejjmJdX!>jP
%?UnS?/9OZ,J4[,Rnh`Mp!oTdI*"W]&f&muB2$?qq=E#SW/l[7jh#o:0H;\t*\DpOj"@Z]2DMUnZs-i#<a!'umQM19h\-snC%j+@_
%P1Phj?dguYSrcKi59aT,Yd5S?*Dmf1THR]'hEGR!YK`<J\:X5"[9SV/+YnXpp-rKCbX/_qEl_C"qo)?nQ;9_iPRf'RSFle,DB4ib
%B;eN4+8=!!,KXKfeAC7BT^LhscCS1b9$t!b-'ZV^CW6/*C-kFKDU.s,-`+coX^ZQ6bGRmcbrm+Y`,,<o:203'R]>@UML$:,@RPS_
%4\/_pJ\*WQ6'sK0Ir<m03<U0Y`j.jO$[_]M;:qh]<1\;VKdh58`:KtnUG-_'U3/_RK%WJ*MP,nXEFmpE.H)W]m`C)nbCMP$K")&?
%Jqt,f%\$3aBO,$tEb&bf'[n4>RX'W:\Xd3/7\Dt=8-bN6MH/#j,eY$o46m#QM_aiG,s>qIADGGZBKJ1dja+I,bh#NJP\C[YV:.JN
%,"TT3%sIf.(S:PO,;q=N&/6lui-occaOs\:h:B:@Joh$[JNY_4P,Fib?.nUA%2$4C<DNcU\1%]>EfDlLg\)U,<U-O9AY9`RPMYC.
%BqcXK2NVM='"36.&N-Vs@B\>,@+&PGXt>(HkI^ZC-]'7/=I.f*ODZlRR](CTWE4o-.LHJNJYuBH_L]Go:cAO]EE]<*;f=*jEs/"o
%p5C?Vn5I/j#C%a%(8@R%Y=cr8FUjO%_kCl!!lQD2(#LmCc@jP"?`8l.++PX-"3r_l&jjU'q8QiX,>p%-#5a]C,9<[KhKr5l3AlRU
%1kqCh^eWodB\f*!!Q&'OPX[bkr!22:6sGqbn>RQ/@IfDj&;!LG:'eSjr[qnP31i%DR^n%uhncLM3bfIG`+kg61j8&(3oSj+;Wc08
%.:Ut7\HC$`$q=.$fI:Mpj!<+#OPMNoL:SG.e=<?!e2"":WAm@"]I6m&XC+)+0oeMZZXP%PWGi(2YY;fU)iWa$O&V,jRVDig[PdUA
%`X,MLO7NdNVg8"j.6?^g`1T,P-<3ZUhaK5N[5^nd,YZ1G[pqi8PcMGU&K_TP!8;DnT[fnGO3/ri)/1iT.>O]W's`]cisC3t4IfkA
%$&(tlo,=IJ`EaZQYc#B>X5Goo)ejGtZHcNQkj(iQ^I:D/>fa!DHH#[D'5?'kk3!IgYVhl$Y.%,G0^hYG-C@\k7`H<Q,gQqiGQ;r/
%\hmV[6-(,3BhU+/f'1:o0W?[W.4ZYmh&nbuih!'.?PG@"5(LcM4;?c0,]QTpRGPf+P]BqMa,XDZKLLV03QAq+Y/jd5d$X)+O]C%*
%%HYo.1a7;'i'Hkq'P?9sCpS/]?IOnq-.T*E4;Ffc]GjOf4CB77'H)Fp\-bM!lB]Z=[`5I#+;D^jdh-\A]/p<qZ^rCpA'#]\o9)?%
%TQ$cY>6/%'Rmr/&'4RJ)D5EIlAh51T3PMPh!7^Y*O3F'U%[@e\LFECO"akU<]05NVDhbF>cW6ElGTf*T"AiK5O@=l6_2=frBX,]C
%GP'q89)`cZXQ)$^EZ`g=<?<bF`:E(RM?E'l/DDJeb7`VR5gb9u"2+'INGg/`h2Y@senf11B"`\-l=%hD)98Lc(,4KGV5R6:RAUR9
%=ol'-E]a<H--)29CH]Pk)L0D,2EN$?Mkh1,p3/m%\#NQO&#rD4(f`"CBq#.Z=uW-&#8\N8eE&h>67iEXGkXms;i;gmpq,4[4cNj(
%#cWU93O'd`XaQ7GkWp!;Z-*We@#AINbS"#+XoZY.K,lRo=bYU+V$=qZDrSQ'I<FA2LQ_T4N_NQ6nF;*Ud'R2?Ejr[8(1eakE8f$q
%;AmRq$DQ8@B#Ud3S2DOlBTE?*U'/IHZ@kDDr'@J;R0'n]iV4J5+,=Utg<t;>%Z]0T_i:rGk2FYnB0CB`L5[$*f'uNU<g_HV06Z`l
%7N2;!H2#o@#p\/\0r\U,^nDL7+L;Y(Cc-*4fOIMP#O,C'b*tA^<neRj4;:FZWZ>s8aUCHZ8s'p)&Ga,?N'J0JPougk>Zk?2U4lqt
%Lfg<]+Z9=QL)K#Tgd@qnE0:cr+ngkYHF#J.`O\VO\,8`LlakmB'>nNc)4Q>1l\rj/_`LGJ8j6>#Ek*7*'A!@j2nJg]\l7B$\u(oN
%SR3h9>OFtV_T5]!(QU#%BGpY)$^-J$M\,Ac2rVWNYL..&M'o\#+GV3dTlsO!]4Z+Cn.hUCAfNZ>9uDMogXYk3Ke6NMlA9k^'oSVq
%b77)h7t.=M1lh*N0hbtCG[dp*7F8*W;6s0=^j$=#oqs208&t*p^VaF7=-$/5.P-YLk3;h-]k4$K')u->lMARm'shhCHK"^-DFcm4
%k&rhShM@b07L;=%=a*/u2"NL'M^>"0.`$[OX(]EF>hm?6feOZW4EGuL9hF+ca1ls,']G+LfPlJU>YFJK]\2,'.@PS8Jd:o^cFImR
%:)Aq1'6#_HMoEJL;G(L-^F='trOo')]Y^:b_;ektc=Q[,ir*h$c(h2hW9^`BHO0+[)fa#D;PqR5#i\`6kdp,:1CE7!ZJ;_]S!n*=
%35k7NH3!NqRJ)"7r=nS0ZZjUn&t(Gm.JpIh54fa7f?D^LH<bj&,/5[-Y/mNkr4M$=n"b7hcs@]<&*Ln.X&nd\osp\u+b+tjFGpl,
%rALW),5-B07eN`R:IC[->Y(SB9n[1G!%&Na5s"e,&p,tlHOa`Z!'3^S0RulP(AQa!%$O??*>Os#+UsCkI%1'Y8taY@OKCYIf`fXJ
%8gTQl"Am)!Ia`/+me'eni6N*&^LpO;mg[eE"V'7''rP&LP/K%pOr]UL+h"U/lmB%3F5Z`MIIIf?4iMBD:R:/GkkU<d4NlSg"ZJX:
%T257&.,Zg^Ll+AuXUI$_N"G?r6_gSaKU=RC,"d4VfE>BP.iW4+KW9)>ZVU;j3WIQ/iqJCTrMrT]'RNDT?[RWk8grb7Z+c+"H`g=_
%a0G9k'eDgQQ]+@/T2E?!:o]P$_GL/gXN3!&."1;]PJ#'?23(=$s(JA>HWSPXb('"b8CE,n[pb9>;Pu#6K>CX&XGA[J6Jf_;<hIBf
%_+8[^>$;*h'!+(0_T"n>4]f&4CLK:A<ZeAq349I+S)V:iGKUmlOV#Lt_S6rPTQD/d+:ls:FZD;-.@nVD'kA-Rna%GBK'IURYGkdG
%.7Zpe=*;,8o_(hV!h-Yq,Hmd;'rWJiMoL(NV>B[EWC7tP)l=D1M`gfnH9%q&`"o>#f7YXUbT9Z9o(TGX@bq"4[@WDd'Gk,Nfc,hG
%SfL8#JXBlIZlZk!7G:QJF[I/Sre3tr3o=62eqMb/^rbn/;c+_Y6GYqHp1YSPX;n7NCrrSK9Q`pMa[]FC5VYK)1aUZS:eb`)eAK"P
%gRTP_D7)d<.kB\%U),me0<F,P<>lD%b\plV&I+UtX)8@3)DGu:Obt1*8V**5p97Ak!VpnY+8UdbZHIqNE\D[aj.(u"Z`ftZHc'Su
%Fog!2%p)XJ/5.Yd$)@=!IB@)qGRUtaGT8!<@PguUJP(b"$6h_IfH.\J3f(f(@pgFf*@=O/kYr6fN8#1,%8]&%gqo*e&Lf.t`BAAm
%4P=T+X1=ll:'c>`=`teV4ns',4)0eb@lZMaT>;^NE+a;VdGf#`Nr:rO4_`LG&C"TF?ETlY.OAm$\p`5nF%WL,Z+>%]RYIe*]n^M0
%=/a7^n,nM)Tf'a'G?%L8*)S*l>"?^@Pi\lE\?c<P6rdJjDt)T>[-PA6MV'/BW2aDb<p'#8Bk?*AF;jJ8.2%dD!oieZo>67t`P5[T
%\*ej;)U,@!B)Rrk-1`-<1j(j=g*YD11BuF=L7$Wdd7)H4Zi7uln>>\MJ2VOSVJ$Sk";Rh+$OHR*>eEI9QYZM6O60L.)C4U_B-=!B
%0V>!=OaG"QBN\qf:0A%=Ms6uN3jtbT<Ooq44^/+-6h:nSnMm=UX(\:pXSp&(=QS/)7iA=Ar'Cg"#q?[tEqp7Z*XfR"R7OJ0/O3p]
%faoE?$9iR_8sO%WQ:uu7Lb+X1P,pRXi[ALg+e;_&E=HfQ<Oe>?T>;u(X%KCQC9IKY*[f:"%+X'p0&Wf6;BYM(6WoIug:.8J:r=P>
%7^lr6-r.QSHl'=UCAtL']/s;VUC#I]GLPflG7#':=@d=T?DHED*@Q3\I#<-4mbC"i=g'-_i[DofVClBEZccYl5,S1@&MSu?OoXi!
%0=E9\E2tJ,[<bE+?L:a<*kqKb?s2>_d]A,W15dhk!;f;qMsu^S[hWk\^q,`AMEmKdDf[%H3sUgqSthL9qX"unmHW>]D4t/Lnts_6
%dVPt%*Yj37[\lRq&-q`<r&q#8d(#>fZ9Udp[%ZGb?l9aEK9>83)L$=MacI%f]'I.@n!u"L[-k]"Mru#]Mi&r'/Zm[2L+P#HFr/Qu
%#H%c;BqK5mkHZBjgX+Z7bZLZ+4?k]C8%O7a/0/4JSNL).A3N=Y(8KEDH`:;c"CjTa"T,E&^\9Pbo!8daZ(j0!,N_1_Z#0)H<EWr/
%YS;;;3P6pf@C/_#d3&kgX-Q'\d[*LlUZCU`$<nJP$]5$/^ks-NkrBt*cE_e)NT^X@cu@?YWZ?=9=ZD_g<\%c_4Pnr(3g/(u\"=Lc
%Z^p]-MCkLJ:RrN"e"!0]OtAt%9!iL!kSu3TWWtYe:7"6THfpJ"15iDf1_$\2A^GJ[e3Q4CM:0g[C'gPf%/k1%VSY\:W8@*;WHKm"
%#j!3IALh[C;(Bc[m8Eg0(/1UkCscStCJk06fY(g'5n9[4$W>:"GGHeG!QecP&@d156mCb9.`F@R4XM_)00KGlg>-T6C%2dpOV`qu
%J\qg4=Nl!GmPQbdAVJ:]NoAJuF/:*<q!`b4#R/6:c_"l'qUMPf:J_!h`n&EDkSQDrUuNYi5AJB+Gb$]g4/`S\:]RC+(,_Gjq-+L2
%/`!5bCp@tBkL+tUOLE1Z5i]`rqdO\4V!6k@-cjH6UK;<0b%2knqM.jX#oP%2#ioD:5n*^(olOm$Lk>h"D9lk96bqD]0@@`eG>P(Q
%;/mDQ;jY`=$4&'Ik^qpL'aoEpViDeP?KkK]aX)VSk%P_?.M@>iZ@W=;8)ff:EUd/ZPiTa9(R#k-1P/fF]1JT;du-B`\2sWQm.mXB
%q[EWsT&8Aen%ZId9Yl,tBj*6QBMKI0W?G*h<#h;E5S<OW"DJMV@ne`FDVaU'gE=iiid7[<a5C$?YZat^;.8'k<.dd9r4i7nMu*<W
%h9UW"jY&3Hr9B[@&Q%#D_R0n^9mm."JfpNr5t!7ta]4)XR;=(GD\LWo]QFcVBi#u_.q,I+e9gS'?G+8o0DfH`f^1RHR'F]18u1ot
%^1OD7@jMb75Y"'o<)ZL$8+&gR.r)DI/Ml3.p@OIG.#@`Cel)M(!lm5824t=^m6%A:ie>=j)d4]Pc1\,akcLi-jOF66mHG0A;cDVJ
%.A.!QN7:i>g!h0jG71mRHT)ffThKki6($.a$5g@tWXI?(E2'`IVZ&E%NW@#i;59F1/6ACd=VYH]"B+p7_rcLu'DOA/l-Kd[?5ML^
%\\G`R^uaE3rC8eNiS'C+d50B`hOW@?!D)IJ"dqBtMp!#5#uu;&'\P;Z^9AYSS^D;JMDO(uNY%i+%bY</OLcO;j#edN?Z@.Icpr).
%%uFMI2>&bh!J5(6njYA\rBXH4$*"=Ui@)BAoHqk+:me2ANu1BWWPiP0=>ZTOJ8ak;WQW\1_V\#@FIP7mEbZf"E,)$uj9uuX-kb(3
%P>Ru>0h8+@nLgJMa;bPt?h7)-bZYY1PMC;5B`UOl\'u!9T\"lrQ.u'LG,7QRJFE[(98T.YC'05DMZDmI`iE!u#ETaCjVh*OlT2"@
%#leK<hdSHrhb,;3m\NBi=b\Jd'(il:n#^!9_c_">_qq7u_4_Krg"TdkolS!d'fV>Datc*dDHp"bnQbPl-c3tNLZ<n;N9k27#hYC=
%Y/#]OYa(43S4;Q'`YPpM;bJs*>00Tgo=Umt(d7CX;]$+bV[t=jo8dCNW@9*_.btQK8IlJ5?dKk8ocnUS.LIN[Ar5QI\gTo4</pUN
%G8".3I8r]nq!c*M+T`pPfR7"MomgnTWja!(fr/PS[^Zs!OLZYB4dOP,C./8-8oX]rGCI%Sg:HkmcGI+fOL#rZS9`i9>(F9Rh(E$f
%I'BnaS<Va]@Slmd3Uj.`V+Oi$4P`HN_TPp6Akc(f%p&.T2cg$5F)(j!Sm-GVN[YMkVUoc+Db])P.f)?G]@4pj5]PeNi%.<-`S52Q
%<^94Kg,m=#,ZTX7k2]at;V\@P02a9GgBY^;;N/LaAY/fkg0D8%?B7(<?1-H7Wh5m,[m#28X^,"c]JWoP"2^O2UH)O=%Wu!tH)2DD
%]/;FS'1S8["+D(F8--cj5Z>r3*>@YZ.F3oknP$9XV`/_mPt0LI9Ir)+n_d?V3[YO0+qr5G<hbKneK)mZTncan8U#C&,sMhr$"nN3
%Wah+nF%9>Td4#WZFO\sJJX/*>7a_4<aI@:4fm1>Fs.M*0'lZi]OLQfF2:j;2]1")/ET/R^iT4GO=MVn<_b0Si%_(:`/!R6PV2.L?
%-+uVIQ8s-#4aX/WjImcRL5Qf@..K9j".#6+I!>3=f)+kF6=l5ZZf4AO#4Q)uIIBdGBCn_L:>fQbmMKJ5H</,OAQtl[`rJC0cKd/R
%7b/"HZpt/(k]"RIcK&CC;q'k_<PEaS<'<j:cm5N$(hb*L>2am#6^GI=EDmXh0q9Oq!P@TK/#F7kdBqB)FVG%W>#k\f3R-^QldePk
%3Bigq810C.Mbc@_D;BcQGpYW8G69.]G(1bVd6rOTT:$`rN`J5mL[?Lm7:U0R6';D5ZX(6&S0`BDLj"EmU&B("`[DMD^Lteir6VKM
%VaX+`N-;Ruo8Z`6NZ\p3$T7,Bmd20!"3C3P!lI)H*mnN'%O008#Gb1(Qr^;<j30T8':@3/Q^flB10_Vf;!dD[2:`?VSBdlI<l_pC
%VgZN?-p#<uQO+<ucBot*atf4"P5>S8]\D4/V3VaI[cKWO@R>Oqr48&e<uHM>S]OHO?$^/6O$J")m>+76,;&">AiDn_?u5NR)%1q[
%@'%8A#m/'D6[Zd'XX/!L65\E/>niP?Hi@5tb-0A_f(;l)W,mfsMCK*)a>pX.R3tW"Pk73[)FpF$-6-nU'(PKS^s4a$cne$D)G,_h
%7J!LL8rZ]P=efq,Z!8hIU`soufHU/'P;p-'aq%/VCpOXMh`dr.AY!nrcSHKsW3(W)$W4Ls71'9'I4l$"@?IKHFSYKd#pB:Y`]f)q
%:'4qE`u]7(%4Ko6PR-Oh1Q35e^L6ka*Yi`Cif%9C(Um;H1lC.=q7EKF?hf7!gUkt]=aY/OFH%cXC,ogp+ie:\+5]'+^lUehFV,J<
%]DTS>/^io,rjo/<$J8>cYlnM@:uTDZaZ#;i@ce&SSbugQeQYOGU@KFCor]LG#Sc*-KD88fcF=-j6nZ3:29q+.dX@8k&?^RH]N*KU
%nqNr_C1ma0oILjCLJ<Q)=HV-C[,0quYj(G&1ZAEC-h=r:W32U"6t=Y^&hB(Jn$]hkqe9R<_6-K?FhrR?KQM'i9Nq6sjbcd;+\,$r
%MD0t5j^<P6cCUp!(qtCXm6@t!L\`.M&5aUK_q#"SJ/-jOBsrU9SJ!=.Mda%!mS$5O\?fpRalDdfLr]/_:gQ;p(XMjG2*AXRa#=p?
%q9-CJ53:6+H!3Wif@ohZHsX5lCYR&2lQ387h8<9=hG-kY0"0c+rTT'La)1a]eR*WU(QROt\%M8sc]7:E1OJb>n+(bhpOEk/%PFAo
%Uj.$Lp-ZfOC^Ec4;)PT\4lnqD&/LGd#l9V8$Uo2YE4SZkdkO(U;^.*V_KaH!>Xas%_4+FMna"V0"6#.K+#kh./4N57M%X+<9RQ=B
%n?CRENG&VcA@?.8OtY#c)r:om$udlXcV`^8\gU\7Dh'g8nr_FLh&M.NpR(tZ4l<G`EeB*.EJ'QoH>>CFqZa8S?>1.7p4gHlpP'f]
%Zor@7KWlaoVS#droeuS8o!gW<Q0KMMB%U%>KK(r[iV1!A"q^/gAjN!$AZ[jq39eX_T&gK?=?l!GI\uUr^:3UIdO,r&X%EiQ!el!7
%&f:b<'Y1__8Hq]3,J"N^G5DfLDD-X.kfEosT(,]:>)8D9$H.Yc>]8Q&A%i-eS*%BbHK_%-^YQ$2M/8,5215N:4s)>BIK;Mpk<n6>
%Q3uQ$6dod@ecE`4$*e`Vl!"QFnn-J16[IS4#Z.=Pe=-'\dNl<=.p0jXcnQ)=),^N.]$;fi?<_G!_IQ5@YlZ!M*!q>Y\aV=]E\qqg
%^^&#45!@51?"u$]oj45Y1npKB<WVAZXO',/*[&7KQ[?31?,hu8R"SLM#W66j2r0Q>AVePDW%&jLlUSk>(epLEi\H0NYj3ebP$d\7
%V`k%G#$uY7jN11gEl\iH"UQ1>qBD_*lr,T4VU7#,btoD"2%Y8S6)[*g14QAc9')1P`Yj*RI"Z_U;+W<,ctFT;:K/CLO,;`b]DqYi
%H\pWq/coH[E,DcoYAdZI!#Cao0P\/l'<?pHfV5n^/J^n<!Rbuqfih!]hCr;FR>AR/(lH+aJfBNZ"PR7P'l+WcAfU'fhs3g_V*?^^
%#ViP4#'5b50E[5cR4eT0;fdeH,Za-9pt:F[.-e\-*9(XQ-N8j_OnFA2_$Fj\=OphYqnXs<)S`KGCEk$c`s_js%,c7YnNSrOBCm/1
%;JUQ6hsb;X=Oc^P(Bd+L?H3<a_RaLgMkT%g7%f6kf[*Aoq2Nj$_hEEB'S_1c'4TEeKa++>,f[$jXsk0?+=t=F-m@!T*2IOg+ele:
%rXELgIt$!3AN6=>SkW;$*>f)sY3IUTWI.(9=)ESo5jdsp/t;B%?QmBlc'%NJ,dO$k17m;!7@YZWhS;3ZjI/lH."&;aCW))bSE>4"
%l+`?`8.H@*m$P&3eg(XiXBT2=<M[,VVIX'GRS%DPjicV>Mlg36'sfO=ghJegAn!2;!dGb[&b/oUpt&o@ie0"Q%St+!(dqI;LAY,J
%2&+)@H<L4rB[-:Rr9&G)r7sm5`U_o8&']Fs_*=UfrcL`sqJ1n1J%t/<M0/L8@dM!Ai]&1q]/]La6NL9j6h.0'B-Ros3D@\k6&_3G
%i1YRQA7\T=k\2`HOg#Hhf?4_[7cP3oa>.7W,jpgY#QfS6Z=T96mi[PjNkdid:/7X[Oa/HDKS?iG=P/gCXRsaZ?PZX2MGKWOW9KGm
%<+>hFcj)$W(QYP-GhhlcMqlG\ajoBRc-&RURlFIR`C:$clSc$LF]>4<Mh;+nN+puVjoKP[*`@=hO/T8%P<k^7%X7U((Z6?D6rkuc
%3P$,$8)#0(Lc\:23[aJpq'cV3i.<s1Ua0_%Jij_.)H9_6^F)T9Q@/1&&Il_R35</<'#MCb*$]u&c,$skD:hI8b`^r>1=)c-=,?[M
%jmV*J]#k.VkdM*XX&7t`5cYO3p^iHQ.O@h1$8!&np:.Ed"um,N8')dpYZe]#b]b+W_grGBH<40e%l,gJCjBe``G^2Yk-?07@(cp`
%ZE-$-Ell1\fW^H+bV+]o$R:er<ro&C)ojUPKQqX8`"#9F#CmSbJ7Udb_.lE\!gZ:FEYPf]K>PF;@M0aq6.4N8k71p-4=r>#6>-C-
%RJOh4]-[58@gLlmkQn."0fYAT.>KDVO!fOoVLTV;c'2J/V9!]QTIJ(T(OHPo!QT3b/BP4>K1_6=]eR;*d4T0G%(M'sk$_f04cLr>
%9/q3aLI)C5#X`9s5s3[<+Ze;4id#FXgN:S3OG%*aOcB*agk@(?c7:VC-E=%.AHm8k9Fe$fT[D3"&>ORk41%0/Q+R=OQ*urUlh7-i
%\^fs["K0Z&TdV)J\7`6G/^;1,DXAMm+C^u]R<Y)k^ucmHoN>WXI<pjL1mqUbF_WP&ccCJ_p>4T\/r`B.\LXjeif8C7IMTmI7UNtU
%f)Dn,$aXOWh*u2c.NJW0-#Z@"a2fL9+E%aUP\f=5JauI<!RV"o!0m$n!&r9kLZeqPX/Y"HFJaIBJFoHJ)2et0TuraR$3_#"/Me`N
%?>^EN!#Z>,_Y*Q5fTT7MgkT?^mBc,=UT0s>L5A<Z@d"q:ObYZXd!G:@`5A&3&8,VZJRVa2"7GW&Kjaj6]pTYY?nTZeI!QsABnl!K
%\]%,t^IQ]J>XH/MZBCt=Vh``d38C2T*TVdu012o0PBE7'0KhoI]1uj<0Te6H`%aW]1(q?NJ_fC?a?(mf*95=.%k>4o6mF1^A5.-B
%D:/E$BrGNfkR(?:O%bM`%=AN&c'!+SD$00<QnVGMjHd>PPK!13RASGbD(fml3JSRY<j/dKaW?81r_P%FnD9P(.*u-WXepLtnjup6
%FCGRG-hs&P\3JD"2e]1$U&fBf7882bIG[L$[EYtqR.$dTRFInd2*hA%JQ%GPHE(s-OL<Q^kgG"7V3?^@',&RBNl]s=_ER6k`TO9J
%%uY<qm\7b'?FD&M[UBXWIZ">^R0^2YH>no7+$*E28gF>0n'<#tll.9(dG7%EK,hhEf;!1b4d/PdVWMMML'20Xf+a]d$!GPAXVSsR
%.]BDF*-)G^SmE=L'h'F7)j]CLB1>6EQ(@5KWNa-TR?n$VA(C"Q28KX>]hq*Bd=m6Wc`gZ/p[PsSoGJDo!d0:gpi5isEJ**6\'*EL
%&j\sE0ecE>#+J^`8,r[rY[7sh`A5094OXa/Mc1G$A`C5?JPHMX/ut[+=Wd[hWn'9LXS5?[lQ3[)!]F$&L>RW[\_S:h,3<-=jIA(%
%/ep@L_hiBT%/DrAdIeMk/V-7K\Du\JLCoO:5Y"etXAU)%(P0^V?+sKek1&$hrk;ul:Ns6eYKdc1;<?4IisV3CO>)NG*ZB7?<`_t#
%#j2QH9DrB<WCVRf5q4]Cdnbm0q="e],C55ZnbXh0.=;Ue4&Ok6UIC-Z@9-dr/7"2W_ClL)\M]l!o:4[9TWn_U-d[3UmD*[A(1D/c
%Zr+9!R321B'ZQ,"lWm'Z0TcfJ7(R7\.fLK%\+=rK"2[&kpN7"3.OBiT$_0WCJNQ2kr_@$L>Se>6!%Q.^G_CPsYf@$)<L@P0'A,*[
%9C8=[T[`MCYcs3EE-=0>f3%D_Mqd(KG[2lu+Pe2,&qp^fOrt57-\:%h8KCddFB8d#2SQFsh7nu2&LrD]%Q?CI/m+jP@_0=pL)7d-
%PR>CIiacnR9(\*87M^7*jc!JF@1qihRr]lBh&c`;As*.96%[",,9V>lgegBp@rt;N$u)=TU4QsmPF(m]dhr@b%Okpd)?A^4(pY_$
%G'-UG!iHe:"9-:-Ss&5R(0W,4KC4*3lc/^G8lL9+R/7a7Sf*d"V88s,lQYiMN*oT2RNQqJ870D^:/A@[oeaT#@8KI70XBlV?nn='
%'YT;VZIcoRB$t%Z=3bubY]TkBQLLKnQpZt^^g!<?SBQT&Sg@S<APO92o1$I3R3]QWUBA+($)Eu?UEYh1=sY*-\7F29(TJ]?B&S9.
%aXr$5?StS0=?ofObU^r0("&c#Z"KD45kd\9aNs?)J1MBd'4!unOFK4HN_6K_I./-tnmul0%;ugJ@(b-+3Eo6c^lr2D!#B9$_*9M!
%a=S)kDD6,h/KZ\MHag7i+r`^#0K'B7.iQ%7aM`UMm&O?mOoT'bL&RN_?21hlXpQX0_,;Rr2'^Yc$/$^V_,Y+<OKmu85/d1igm]HN
%1A_]Lh't.U@1@^o]e(6b.[Pa>bn+Eq[E;_S5pJ?sg9q'fo(Wh0GOik3P)a0TT^&Rf[P9's@\AQ;Qr14a_j#<t!.buI#9s7-N*@S'
%!0j:UX5]VFJVB#e2#R2U@%'JU:otpL""9(`q?RcTj'sLl2j.SHG6'23lA#0\Lp!kRY`d0Hd#;T'E=QA<TGV<?A)$M)3N"(CXjN[@
%s'bsVOQV@:W-f(&l+R:I[D?$2KcH'K;\%I;U47f8#_Iun%?(FFW#T?5^d8M5^R,2,d#4(P!-AZHq\sM\Ubq#D1DN5T;R%K1:aB*6
%Z(j_(>*dr[d<Z^7O#X%Lo=tpG_-pdBbXl97W:Le\D03jLEg>6(@6oJ>.WG*s4)l&*7F;$n'U*-(Qn_(1d"kmoB.QtVr";)0fEaR'
%c`1mdQK/X(CqhYgJB_nt.l,6<)BtXeK$S\@e]\PVGN.O\bN.Z@dVK#^MU%&3dC]\'Vqr,&(p5<6I^A4r!2E;j6MJ543bB#eijD0\
%MUj9-/1=s5dKplFj%bKPjqsc>3D5pFVIZ)9&=-YTHIP+/%<seND*#iUe6/Mf>dIuNaaC995&37?@C1G^8N<@P`kJaIF!UR;O&<S!
%c^JlgfKbQ`!3bJo",@%$)(-Ce/P?D?QT>l)Jso$6Nr,1`r@<iKQ\0A=hAi)/R&JqR6umKiV"+a!6`:W#R#I+u,tC2lEeOLa\`/V`
%%2T4!KRJZT4"L#1?@#/?X,m(!b-]EA_Q^6q!i1bA^U2ATPhY-fj\@9&r30k\]o@[MIa^"RAR:tGdr14pd=T101]doK;C'hkVj6:.
%7Nh1Z64X?9STHo&36N:Hbf1b01EG+)H$l)R#"uEtR';K_]esHs\ok6:Lpl=X,T&\""a$8f]Q$]ERm:B!F`QR4(/pSWAQYbS&/o(i
%DL!K#5QEKhR#iu6^ZZ(h!jU+TR7#[]r8Mh1/hT?"nkIdo10Fl66)uj4Vl&T'qMXEDJ4R]]4ZH^!@5Q<7m:ABlQ826d.",&3WFjdg
%-CE9G4.u[C8opq#ipTHG'1Ti7pg1V&l[d]_57$W$)GGDD:!e*\L-<t/B%9ukH8VD!K+<q.K5GqI15m,KN-S%t)Y\)`o*EN*Ve7t<
%jO_V)VPg20XX+KE;P+M?c#Eq7OkcUpgGQ$,RXX1oCjkd<ir7g$&T1M20]q%orpo[<R3om<C[(*Ibc1_")0)ot8cLsB7'Ff-Mflb0
%_j+:F:'p)l1q]&4N53Qb9#BBCTjq#RM.\f2R\HgFrcWM@MUW'IP?h!BF:\YQ1Y&bV7P7qk1bVm*pEBc6)?JY-jtUA+SQJ#,5ZGQM
%Bh.#`*"`TF<1P?)"hn@(gk6/O.A<0p6p\hoo1u-_L_H_PG=IGLN%M(bB+?GGRgu!kfmg5!Z[/()JtZFH-`p5Xa)f$Vc]_>s=W-eZ
%S,_?!`N1k/q'b?S.][\;5!5#2A'5$,H%$_QpM>4ci(hE`HGhO4PXq=L*2ha"=O&9\nN,mrQ]XlESA?29#F9)Z6CNX!d(-a,BkYHT
%V'`r/0ZP5hXR?JG6jq\ZQ,TQ-E"GEr%MYn?q32pA^k\Okl`IA?G[\[>NB!._<\T@:Tn<1Z2l0[r;mEUkd:f#r;Jf8@37J)V^Gp*Q
%)]EG=']i.fOV:']ocGk4`e60CL2f\G.%o=b.2':khMm;d]Q'Be41R<%mi,o\]<+r5@75/JW'j8SlE.FM&4?f'5[[t`aq^sIX?d;&
%%4:c!Bm57n:<^"Q+&39*N(a$(:J:=aGJJ]R6*/2CrQG6;2G26`Ugp]"iBfY:<jK(gW<n:o"h%unKBej3]aP_"qG#C;4j#SO#eXOc
%@7e+hm_2kAeT<WWa_nV2pAc`@5NI77P%2UrjLn"W&,_!SpqE8nO)aP!l#WBTaT!@G@L`M^P#]J[C9hJ?GfVWALpsm`S#NBd$#Ql/
%Q(XdaG+6hrQ=GmrDM(tHN(m/%n1a_"@9*:K*[UaHS#.qOFtdRE&#3cF$F*D$nm)1QC]/g>RVoV4$cIL1&1t#X&tK>lq2foj$=[n,
%Yjc38Hc,o/*42K31=8(c"7[^+K[WXkWf%>Pp&3hGp)X;m6[0)(&i8kJ2)53%Rq,&hS:V-bP(k^/@b.T`Wu<_r)k_Q9dFVV#XbV4\
%%WC%]n#*)_1;U%rm0X4&bNI@IYO+e;Q>6b=V^u_?`hb:dZ[^2H+5jl=PqHLp:u3%TMJffgdL!rbdY0S\+CImlmtKdS\%BjR9Z)HN
%la+ce^$-'-X9l)R3XdQ-GCesuL-,YF;!JWPX<e;uD,-m>`#r^B=/,CV&Zb5mq(4h_l=f9\)I9AJP%!e-Vi6<r[91AYXr-RaPXaYu
%`P@'K8.0YW3lOr.7?!"Y.SPqSYGjf7"n;<6#6H-+?*$l]kZpL=!"R)Tb*_-Q`r<41/\b@DJsAgf;7I]Jd.,+X9mOIjDgeE,kjtVF
%Fh(QtS#mX_/:&+D`7k'>D"df1D5q'U<&-YaAgrHmM.WSLVS>BcD&M(":o,hlAhg['NGOK''n`3:C^),aW%!_IAmRqb7l@SDXL!0d
%0+$E7?3N6ob[;cSNl^?`l%dD,6o"9k[(-]g9;HAjRlgWag<@O_VL+h"mY+(@AkWd!TE\qf@W`a39q,b`q6<Ih!gO.RWPpDt&pI/_
%+@W<?6D$[5GuL:\3Jk1r$sGc!#X@14VR.ch"h+U4F[X3;<DAr;2P^LSH6b[Q`&(b3D"C>H;]_ZJCI8FmUb0Qg>PpVk=11p;K]U8\
%N9Ep?/i$'BoR7XH+sq[la-n<9Qj['p#8rnfjq:3^D*s=?MM<U3`#!3Bp^ackHO5@!mi";/O8FBa)Mim$K&eJ6'UM'1KB)O:C*5NO
%;1_#8"NaLDEQOtPQ(LJVQUT!a4%5720^58<U+i-HWJVf.A6A\d,08a21s\6m0on2Rp@Anf=jJB*a&0ea`@l,gm9dhHTDq+B@Pb$F
%e*i)+f:0Dkj(Ssl7M@SAoO@b\i-WAoJLB8emQ#;gO<>t\3hr)S*K+aH^\kq:c:D7OH@$JIrG1,u'i[![V_TX!PD`8bn4kH@Sjha7
%R)HbMjXO0,L<1+Pd4A<tlD:m1CLsP8D3h0uOV.2[j0bV_YkU/3L/q8q]ZP8A4l&KRBOu/becDa&r#hqj>F,GiH$`+:AP*`s[3;'?
%V4UC@P&)fZc%;'<jL_K/9:[[hj7`[UAo'/KnDO]dTQG>S^a]q'=BU*kc2!DC5_mg=WVF)"E@el:iY'<1BiUciHs/'==83?K1ZB6A
%S[d8DE&#'%#9a49H8)Igb4':aMbE+NaEf05_1[Bj?S1$/qc\3"2@eUY9^t"m$@?&JE^nq?HasbreR_GU(KdF'/5aJ\i*n450D&k?
%(YOG?$DYHi_:j%:9jfuQdI?'+I[9lFFpj)QPWDP+I&btg5X/1n@0Mhr^Bd4pT>bf#7uYMX]4b:\ZhANZU`S>r=rZ'</do8n(.euK
%jhV:S8V2Cb6+d7a^6:fgr8>2gn]kAaY5l)Fb_Ec<*G;\j,kI<F^))]leot?30Y3ib%;\g%!GY;(-I8s4)e_777^!0CHf*%H-'rQ,
%%q02uiS2QKnF!]MDc$kjcC:$*)L\d`>%16QgFZN`.rs$[pO_!3nYs8;Mn5n6U/$\!OTiCQ$M%J\26t(,c6LaA_D;C+5(9_O<Pg"6
%5>5_1_(Y&89oo;3]$^LG?&6fF`BZ*DG$it:SaRK?VJ45]Gu3U\jm):u/T!,1lQ1;U;m$X-kMV8Bpo.Is/;'M0PrImDEBkMOU:&5>
%P0O>t9$SdfZ*@cF:/DSM@8Kops4LVe^:ih_^>;KWN3Ai6rMqe\c3q[7?*S<$T8_>U2i%)Q].8:V,GuL710I9oln,u@J4![[e_%ZE
%[l#i<])Q,^M5r]Es7Fk7E335AQIe[cUQSV_I5>,CFej7qh4-uA@u:G?ib%o#"[H8[VgCqmB&Xp:;8]H\qhU'kK9Q--*:5.,n-=O\
%:\1*J^Z.#hPFbVEj=(S&c:F$%prAdDL$AMT82TR&E_^WO&co*#Lo85Pp<$o:E*`p\5Fj33(-Pao#mObg0ZLrRf8.JPdW8gg,'phR
%=ZlUT]Y3PClk[^rl[p/"=,_;bn"K:@!%s>^bPMnpqGBJrP4,]VcN@4RPPDK`qd&lb(OsPVs66O'Ld#2Foc@I)MedS6XoRl=N-u<(
%?>fS`O!99f+CDpX%HQ^fGetAJ)"RkZJBaDI`[ECH@.W9d#(I*hT)qI\hM[3\)L#NI;[9F#Tral>B@rqN_\a&[LXoVpH2J+A5U74l
%Z.'I(%Vs!YADu_g%C"l!_AgJ&\j"&g4oab'Z?!$(J$[D+7_]kJ""OL=26:g2A&mibb`8cbMJnf0U]P5ZrIp'E]-:J:@LEu.mp=?T
%G^S,8_UR-d"oaAl&t*8JZ):@EW8>Fq11GLe)!rrJS>`3qMmn,nP:t590)`o>o,$Fa5XpCo#V_'0_JY20q?#NjFoOY%d`SQB>\=Kd
%.WoH@[<NNRe)DK<pTV(m[i@S*I]F;k^M(dQ;r\p9K9TKuc<GZMT(p_6i>5_pmH+%cY4fNH?YtJ>Ner2VFa&*QM;O(YY)icQ:ciQ_
%I3LAaC0YC@3N[Bbc,7?a4.ImT'$mMU-+3d19\]!rq?g\ArmEp.g.OOdFG*/gra9Sh;&+"JM[1?nb-k4C1X';f.FY&WJK^B!MWGf.
%$9"sa#Y`m,s,@P\33;saDo^sKL]mH\44,T9[*C+C\)t<+mjZQZYh$^FIk]^I38YP&p$)8,AXQY9^H^d=jh/b(:gfkL%HoU1"+'(C
%?F[OIcLBgNhrFnSM)Q6(kU]>.R#@i/8:fZ%Ol2bGJ\[HE7siH(aj>6E(jf$RG]S>Wq?uJ/U(pRdkL&q/'J9b=ST+>BqKfCR0/)DN
%2*J\K&Jn2V#sSXEX_:?!QRB3m#Ag)<*AKmPSRi!_WlAX%K*F-B*04=_Nde5gc:7cO>1SU3s(Ufjp:0Oab?j4`l0"I)Sqr8X(YsWh
%n*=rK[lJ]qnq.W%BC+8%A"$VPHnX=,/-#=[$XUKB?)XATkAfEuJGQtPB;_NWqRB<L_W:1*_OJOklcD(^2SbN.Y1\]?'^O^!*hIN'
%K&V#^?!%'tp@>?-L]%.G^hr94$"BF>G&CP$e>KDpp&bUo1teS036TUZY/X5noN_P0YU3l/JBCNp"^qc!p/On!Q)him'a@%YQ2=bT
%&k-9'&%48Oa#nqQTbm\9g[l<"mq\:+_409q[bt,Lk*]a7arMfVKAAW?;4=+#(i+those2Rg:3hl/-U^[q&TQ^=s-9Wn0)81lS.IR
%__LmM'0X#=@/o01r0(_UI^B"fJNaF?jWO=R?Fdu390Fp2'/ck&d(^34/"3UA/@gW]7"guI=b=rWL,4LFCE<MXT\.`&9/gZ@I1uJ.
%HA[q'41(0D1l1&"(PQfNbDM,)WQsFt9KLUim/EjJc1=_5;_Kmt;@Nq<#8caEi>E$\=H__Z_5-L7/ckB]kilgn#o&EZRW5Fp(R\TQ
%Sb+O7+gf^pS5GOW!6=Z:!aCCHOhht"r0Va%N"J;dTSZXUN7fU/IH!0'#gHaeK4]Y,cr2p&b*<_SA<1K%g6K"r;'NmZJHAR@9FZ?-
%[UBgP9GB\<E1<\Y1PA!@W8iE4SKl\?Uklq0IT)UjHjV4IobgJhLq.9=VobZ50X<V?eJsImaJ9)(=Wlgn5.!i1CO6"'MJ2&LF0!B;
%mi$]+0"b*j>W25]_YHj$JmUpo:6S.%ES?rZn)7t)9Um<uef$)DS1rHBY;J-o&PfQMjMNqb8);#kJKG+iG'jA+Q>e-Qr-=(a)CeK4
%gOpHcJ;sucRbS#OGL.7)mj"jd'ZIt>()9-q*8O\tOZa-"ZAqN&F+YD_XTU8e1ap!Ai_LH%jj[?n,uiI*6dM&bD)QBq%05cbS8*pY
%c.u+Y,FGJ8"G6&&1nb0LWeUQdNk[RW^pVU*a],YhP:!81&D#+??!&tjF&$j?cpTUNb^LPu$k=<=!:&gK^kX&fWX5Di<l4U)Sr+V8
%=\K_A6Tm$AoV",gFb>G[L+4uRR1",*<X0:NS:)f]kfo`0#9RCooj@5UE:#W)]sc;gj"[$g@K>3U"Bq-UaD!^cXPf`td6NnXVL&G1
%FBXT6#gZ:9'hm%AJr(LJKNU.,$!dM45ufm94_g3J@9cge`+9"UGQkL0QF]]Ejcm@F<^L&Vj.Z7ri(J1,=gKGTd?s2(J2P3#,ln&'
%*4rfcIgn^*?<,)=h";eWRmYID)3*DX-L"2;Z5J%7R2QPhYYX>ta;)`C6DQM+4plltXMHr3VlE8_!caWq$>FreMhMSSY#gPDG:8lp
%Uui2V4HC1W.K&Z8Jn,?bP+1G`70aW&rVTpAr\.F..1W#n>9+Ug94+IS!J3;"8VlQ%f8f="-S.WIHT:eBCkcY7+OS^NfOI$);fR=L
%-!b::EFUCM3MN-dk4B6o@$Z8m2Rn$jl2:*3$YGm.YjMaWa"RO\bK:W.%`Aaj^uME"Z@+.UTIMC'28&%8*##FIK2Y`>,-2J4U'WqU
%**aD"*gR<WGqJsaq3[j>R_"NlGl.(hlf2AISIQO!1.^gj\=[$CgjlL(dENm#);F8gWG$lIQ1WRM=ZLSpDO!=j(:'iR(*)`C9A=%j
%%*LTfX;-/T],312YCbS"oDn6`KkY5%(eW`*4rRIFh6:S2gOQlcS?B31XBFBI:=E7%0$ed5(h`n\Us^R+8IN-N(dsK@IS:/t\fnBV
%kEbsH<(;I/NQT]*^W%;cTh&5l:UEHX%44k#AC"m$Im?'O/8/HTiOdGN<)AM0;oC%;WTsX6&gmgrLo!=pVuNZ(C(Htj^NDVUA_/0e
%SaalX/KNNN7.#Ck6j[1%RP(t.R(\;j3Cpc`[#\TAB^J/490Nfmn@d*888\OMeS(H4A4:%/TO.kF&khcP>U\`/%#rjBh'Opm[;I:N
%#bJCVmaX]/,_kY=c-^A,.>Vnhl<RII@\pF;<up#`dE+\e<_!bmGC,is4VQPt<pm%--S7L1jS`*E*E\#"<IG(,r*YX)/1b[p&uZgE
%R\7n50'CPQ@HL[;FVIQ6kp^R'pV<&Ajmr(s=efaRIdQ]rhG.A.F*=N:k^j1-L99*YSUHb*c07Kt)46,ONLh/*REOIaR'9_535\i"
%6(*,>F;q^shHPL$Pb);G'm(`cjS*L)BW0WO;m:)$`&/8KDO6.SC&rBl/U=7EN3g6#GdZ"[&GOMYA=3dZ5QksGT$^@NLeH8>:5eef
%q@$'SBi?44fB4+!4i^cZUa1u\GjlWL$*#KO$lP+>+='Y%q%S;^9ki+iid,X))EXqc2!n[#;6^-K.eea#;"hT"V6'aC`(Yb_S?P]u
%#JbD(Uc#84ihu8(MA1`^G"&'r7DVN8nVCMBRXu<>;i=J[.,7K/;BZ-0C"U[[ESTf:8+gj/nKeqM-M'#0ietfe_ht+=-;@!aF+WG+
%8Ko65=]c]r__*UR*d58=R4HW%4*%1Vl1&7Jgkn$4Xn%^T\1>h@]jQ^.',8(2Y)_$k,mm,=i!lA,#Ep5./Sno^!'uk^l[WZ";]ATq
%C!G?fC7M1*W#n`h)o[71s&&#PiTce/,6ua2"F_.n5&VUsJo#dS/uGTY,h/P)PpT4oAa9gm8WjXn/9kFtRq`]dQG^8KfVq:u&.NOg
%aWpFBgiQ&F<<G<[gt$\=e.6,B^^*W*V&lKE@<ZG2r8iQ0W1a-mnA,i>"k"@Wf"o7#L-!Nq(,!CqB)$%fYnXl@/XC5tV;*S<-.nJT
%R+KG^]%!<^.P4>(Ku]@Z3HLiNKe%L\/Gm_)2b^?4f6E>)ISP:AGHmto2.-=98hchW3`-emK?s$I.C16u,V^;dO#1IZWmd^!(dseY
%.f%Fm?2I!o$Vb-,X=1\lrG]otN/m]OV[44qW$T'/Y.Y5d760i(kP/*J9Ggpg9cn](OsbbSi/Y`uR-m=nNX7R7]pQhNaBA]\i9*3^
%).>6<>qYU>I\b,c+^,$T'qS^A()j_<Eek%nXoTn^B?,&<h2.&ReD"js=b-Xs7%UBrK=mH^Vp'E$*,n#/HoJT-0m?8gdSth5TG&6E
%GK%I<V_kY&cl7.jFR2(q*#6DsW'$[jSAX0,]K!o']Jfps<b,TuM\[Gd818l+F;FD-iA@0X&WAlc8c\6PkZW!Kk:ud0q=M1Hn<@`$
%H4b6c$^.GLAj-Fk;-cV`;B/hl_IpJ"m'!TN:*RmrBhj*@3Bq(,6P*Occj*5Wc6P`74G0WIJ.?+[;k7R6*6n7j,!L-+m[R!+\ib[h
%IgY[^'^`J]&='D^ekUM+K>p1YCo;EuT&qb-.H&Sq)`^H@@9IYkR-[,6G0rrmOK!Mfm@l&q:WSoMru=LqeC`4&E+u93?.:im-bu-S
%1(cZbLLe:Nf&7^PK%AUCfN%E]+N?t!kX8;K8:cf3%^JB]"X>3W=e$0kRZ.M_a^>]k"*Cbf/<@:Eb9'\t!@@mhaYc]VFgD]UVb*_f
%+r&$e<aG:B0:%gR)+W6h'X3\aV]Z@i11m]^<0\hh*Jqh=*'UF(QT)?b3P6"d><XGn%`2a'.k6lFeF@Sjfn5R)8:)aYb$[XhK1h?D
%O^;N2<9!f^n([f'A<LV>3[t7tYDrH]5r'Ec3fNZC<t^>8e&%,6ReAiLMC*(IThtlNa@HUN)olB%*[6UkkNiOF$Y2-7JWYGK"%):4
%Bln?91(,IqYp+D<#g`#"!ugQ.oS!!u08PZBmf'b-&NuP^TVo!^gID[^RbM&5.OSafp'BlNeOis23khGpaHj6#plhCYXYSH;aH6:1
%T#]%n(7#MaGqNDGCg6Ipbkr?3FdG'i:fEnj9*DK+/gT(lbQt]cgdA,`LChUaiPtX8@gG7_5mr4LOs:SRPgV6KN[GoBeB$eZdh'H&
%+4T&u8F.edT;gE=-V'>?76)X:q(d/dET/.RTr&;!EgT%405]5;jb$30l=(+#gM'59Of%?!V:?)7$3dA-m,?#5W<d[.5gmR0SL8q:
%_?Y34bJhh]2KG1\h>u(s)&^p3A+-Foi"6gV*_n]aXBbS`(j?4ZHpZ;3KX3,KnesMT8#AnWlKEa:lCR*=Q_[Df"T+R`&KbMJKpH1e
%no-Ol.(6o_e4J,J%Yhg+'&:[D[;h'H%.q5#B_97opKGA4>2(&4N,h-o23:<,o`-*p:MAN0fj23#B0Cr`9X\/\<Zg*cBQJ1id`q"p
%Sfa_H*-D6C"t,bTPn:$='kNJn&4JnpN8ct?oO.tI*9@+8iR)WB3MKRdBbJ?KHo?3UqSX4OY/ePj1FKGtBP*)XLFk#>+!4U^HS-0F
%@)(S#-0FPkX;VjP'lM[9s)-B)V3TFN@Hl#7Kj$HZ0keu&b:4&#c[JofB0m2rG0,P#a,>0-P8":9btc2[`$9T^XBn0!Q;=2Yd9e!6
%j$h/A4iM<L7j"%m>hHq_huY5oks/DI52[Zb-HNnPpS`-JBkLB5/2jSLj/-Z(r)=:Sa(,>-ou$Y3B5G.mGinD=1?4N<3RJaa'.!is
%;QUWR.UW=kGZ<BVd"M<gHh0Ht,/P'FR)oh:r*H>[EjJq#+&@O<$#c[mC'@ZdSNTH-)puKRiO4B@]4I+?'hT@>H?+<ChctWo6c/Z>
%eoFkQT(H;]]uSIlBekPr*1Y![[;e0'l=P'.`k*K5$WRNDjHrUA[9Xgo-L"JS\m^9MmlEe/&FqMLF9N`u0G*G$DugHb98i`i!ZVK]
%FuWCbYjj@o.C-`h\<<4L*!Y6a^UM#@N%<ilH"b*OCQ6&+*FZL7EkoJ`0aGp*"(`P5N!r#IH0@"Q@5Cjdq&#P+-8[/p_obea2V4^i
%8ujSA.eTQ*?r+6-i/:%sp5f+LD[4Cap%S1Wj7d3\7Dt(k+GstDoJtBPIP"Vuo[n+41^Cq=C5_)5O,E:,nhfSA9M+?M2Pc,5'R.4#
%XMcPq=IuEn<N7Y3h/$tZ*oI5ijjE'6q!&DBbE(^4h'18gm"i2':PXHRf("[KraK*EhEOf*m(+(J7@uL+]<"g*qs"5h3JnXPjFu32
%[??!IjK@h>jnaC13kmE.nrKorn*&fpKE*!t9/DYnF_6g=M"+LkikZg"g>2lP)93,(86tQ,BqIkaVll`RXE1GdFYcn`K,LFZV$(6r
%3@t@D)H58?0a7VMGZ&@B*l@q2V<Fbff)q3a1,0eM]f@r;O?Eb;+IPL]mh/4J>8.eli>QFE[\d88T$bUQ^;OCF]@kcQ`<p*Ap$!9d
%GTaK1'kaW]fR\aA"IpcrW;m,U:<+ig$CJtA5bb:GE?_?4pua$Fon[lWLOODQA^M\pn4cBrqLo6n]4f=@*p,;O+><"<;Al(M!X_hg
%G)-lfKd.mn>Y+ER6a99f3*n^_I*eGNBpnUO77SY(/3<>C%';WD7B9'df'INj^YT$r$:Df<EDF6kl>'&n@(3^fMKgr1'1fVAj?PT=
%l0[T\pf@.\#M@;#I;e#Z@p"%i3.D1Dfrl\\c(+ct<K^,LogC!9N#5&A`885N?Kc8?)f>!AQcbCK.g$!I'.W2+9SsL.GF\[:6f$m8
%6%jL2J`S-oN3m(<PrWRP/.Y)s$Y2)@C0Ukg/MSucV7;p.$7X+d<F5*%eYKJs6bO'l_1bobGCf'6M_839[;p)M%/d@@m6c`0_+HI!
%5W_CY3N>]Mo*?tm*pMdODc?d>(J4s)A0g"8Fi9\1;\L^[.CtSoY5$cc9$h@o60,pCH"8<V7NMa\,4:uF1ZH#8HA>s7Z!*VJk/S0A
%Y7[X(Ip1nem^r<?Hr1l-A2t=2P4un$8(((pG_F2Ph]It1itU71mZ+6&mNObg%fl:a78j#VV6Soe/_An4!K9Da1IDVdZksuJb$eh#
%+;0-\Cj\+s0iq.5@`W.99f9>*-jcq6f;WHk%bWC5:U5]/_m+=ojXd6J=I5D:n=!'!FVdp_mjc/3U1q"B/g?e(8Nh0m,r*I82^gbI
%0NfDA@)=<m.nP.S^0.d\"N?[jDcJUMW/[Q[f[7;S(UN@?Xo=t';OS/5N#;:UdklVl*6":SVOL70/-N6Tkp(f%;'QF]=])k`_%e(Q
%CU/V(<.?FYN_<5pQ0AKt#Z0>c]7J\Q95sTdpeuP\T;!C:E<_EgOHg,H2]&ff"A+N;2bhDr'Jk%Wn7RUAbS<9++S:aq$t>?hCN0GU
%,XX`I9o?cT+3?rfp[LN6e]A@A&"F%GIDHn61(%HQTB_B\?T@]HNSR.T6[2-K"S\_`6f<M$%b;+mW,4Jt[b>.ZA5G?.]j)c2Ugibd
%j[bHL:JIOi&"t"e&;[ANlSW1/EAf6m^s0i#8R7TfEljX@>16.YD_0/*fIOCOd,u2b^i0_[jX.b86"8Fu"fGQI[qU:ioK%eYP(DG!
%\/N\&dNa):RtuR,nPKBM*3(Eb+\7f[3F].fES%jcCc"?k,^J=Vl5*&CA=[ldhq8/p@a^8DMY'Hs!]@/Co"ktg?g/D1l2Zq1ib,E_
%5JkLHA;;$BdeKLTdF\dIWl!P<eEq8PN[=a+,?]8)Vf?sfDH"fOn-7?@+&t5BW3X9q%g9k4_oh#npb*[M[JF\"$/o](:7f'C=']Ps
%d2dK5=X,=E'^fr,b3=Sra^aaRQ>ttORN8^>r\hIMMY)Hf*5j&pj:mK"di[-4$<Tm^U$:&Z.F,(EL2\nA3;+@@Qokal*ias0!&Chb
%o9,`4kP).Yi<BBj"NfSo3WtDG,TbYBqir7BX?2u(eTCU4a\DL!+_hbm-5B%*jaLq''#YK:F?W^%3UTQ*_gM8*(D?!FD^ns1RlI#I
%Bo$1\7>->%ojAmo@=M1Ji&#;5W,)&*@,nVc,MY.F/f2!L!3A-!;D^7jTlLSbAtaAghfYUE`HIQ+(IOVN3l#&q[]C-RQ_<;I'&"7=
%gN36f`luc*#//bL#uf":<Hkc^&!UZ_^>pV'SYD"<rE&$(maXQaSiR@eX&([nZZ,H@%P;q.c%s;.NUN=%Nnr#l*$<[[kNq)h5!FBa
%.Au.PFas0&QLf[[M4oS5Wpqd]^A7@Aim*4O#hp9?Ss<ebVp=)U$q_49A916=h/GAYUQ8DSpAlq>L@,*>S?49M@<%'W!;e6cd6mR0
%"Nj(@=2JssfI/;lIL(/ICaiI8,$V#M[Ius-#d/M/_Jj$15n2?F95&CGcL.hI1mX7R'XPZq5u7;uUmfA2>4<DIZ!;FM8I+ls]72VA
%]`N4C</cOnc2h"XYpH3dBDDi;<l7UYpYNn&rbr4G,E_b;aSY3m6l5$.ctDh^oA"L?fGL4!7oEU-104^R2(@q!#IFrWLhFfV](unP
%;tR)8HST`5r"m@?&mR:)N,>U.fdIbIX3ZbN7jb/JD_\*mEA^MC?1)8CjiRj8ZbMr%EHk8tkj<(.4VcP7>_!E_ieb?*RJTtVJ,7JP
%U]?[W/oR^%c)4NPVl*Ae'Teb2_+AoE2Ze:l:dI^(l9^?kNDbG\3#S5E(s0W""'7/jPm&^1IjVsUNqE^F5=YQR4dQfV`hSA6WP6"4
%AKeOX^rh([k%.;gdO"L`W@,(+pVtp4'LLa&gX=d5i.%[eS*Qg:*"c3C6MI-mi=#`s5TbqpKleDb.P)me5_m[;YG+CBCVCm`FY+mi
%Y.nN.P^/gCU)kGWRP'uXa>6Rk,$o*ADiHUQ5tUh&9*m!Q+A:O$Gm+VY5];"8&VFj#(cTWO?%KA]=PH7Ka3bN#g=`KKB6FXe+_!Kp
%KZnt@?nTLFG755)9c/3beeoG*?lGH7U#q&[=lb9:hWdLK/V<#[0$mrXB5Wt$iDSG[Pa/u>no)4B\o2TD+0"[ebrS,%7A5]poTC!O
%I;[0PWfsX)-%T9r04aZIFXK7[>Z4pp:91aGQ9,VV.P_GNXtI".)hXPAXK&LbH6"7iXidUSGXs)5iu!<+7lceLM6t1Kfd5qj!jlA$
%nVbLf6t+#W[H8E`[es7\>tAA5P,,^I4%(gE9":/V15#*:(I9;*PBRl^qYaN.AZ/FY+HQ]niRfeZkdQT35Pu"@F^%!nohR`KkBCum
%J!\c'*),X*CMUpqjn+P3SX'g-rFA82-[%S>cH'U#rm]@)3qf(f+WRJK2Ue2d_FUWnr@\]+;4HqR&,N-tPE`H5ggBE^4TpGra6JsK
%_%s)<Z7XP'c0c'8CJ:3%BF9&D5JmI5'tpC$eBLfq6Yo5,c`mEbPDmpS>.DoEqmm$8468O?eLsZ6JCc9"jW"uoU@7%4_`c(d,5A6e
%8RkeW7$SnW1.-6@[Q.Fs8j3G>M\gk!Z#bQr!X9-3g.Hgdc-4l-R8.u3()]Y__Hp9[a'\i+`IbY'WTTOjQK,jq[Hi0CaOeE1E_frd
%Z5;][f+[02e`6\3Wn\\"*IiPfV2V0B(!N[c39pG$4/+L8q8rdM>G:@\`?J@RD_b`CdCY8q8AYEsj4B^#1E)V""`Z$ig9a5_)pToS
%F>lonJCTTNP@r@;,=F*]PUL_6GIN6EQ@LE&Okq!/ns`_XI&#T1p&7M(o6[:a/qQjLEV]hRh<a^`.X-#F(m4j_5T+#7)m=.R(16)R
%(S@;9Z>8[tqEVT_44gh'q$;=o("6:WnbHS-*raJ?K$Q=I'd13jUUZmMR&d/+K^B?SM's;!cPBo#]!CkF1W=W:C?MeP#Q6;[MVk0\
%p1IIad0D@-[<0t?)$J-pX$t[529:YJPmVN<n3en,CPtXn.:FK[;QV:(##:rT+64TNgjo$jo8M[JbN33uAPd;`\J("53[qTi1CiBq
%KM+\DLI=2-Lk$M_Eq<I<hC<9Cqk.R[it/t2P!S2UA??BM//B%1@='-rRS-bYZgaX(nmb*"l^^j4VAkCm?/1p'+=+>_:i.MB$UG8[
%`GksbL9dNXf,Rl_O").Ufk<L^LkRgYVA;DFWci,7*+;P"Yc^j,hM@s(mF:R_kpt+US/+4%QUU`>;j)f#fJZDN`#"V1ibVMiDA&qE
%qk;\D#L=I>Ie"<21kEe3/'kU-k#tYfIYjBYK%"G(hJ]Gs'fV&UF&fo^W6'dABU983KV;F[ENSigjec9^iAgWCnIas%A(=H=pP1#&
%%D,K@Y#on2YU@O!i^=P=L(%&f\$1;M4]aH_eH8TAMl+uk]UJ-*UZpPN/)i2@"O(<*024f688ah6*PcXOj@21?-LB'gM1mC7i,ee`
%jSCti,Qf^G&b]SuOcZp18&b]BH^lt8]D&@MpthBAQ/!S[imP3=:F/]_"CreHI9[sjB^,\u_61lRV?oqJiBV9##EVNNMdXdNj#P4e
%@<&KlE@%u$I->+gPN>9*`U&SY^Gq)fP`bq#H$dZXfrIO^CWC_0/5P,t9)rTWZDQ[O&:NrID$Gpf^n&G&-\[P.'?I0D5#J!*#!:YQ
%+!gH3GH4544F[19X%2DojJnA*6@Pkd1B9\1F9XtDLi:74.,$hAdP[nG+Xt=UG8U\o.;>#+f9%UNdp,`U['Pp3E>7$S)gntR-%TK-
%-*0O'iMiFhNkm*e'?fr/0aX"a;jg(W35V]Dam5dQlR%_S$[6C:RJ/.?A,US+fZ_T<\e^6NBFq<+A0O#V>1:mK?'?*-lMZ?hh71PI
%Lh0MWKdZV,]`4Z.61,.IhfN1"n^rO!B0cMRSiUdErZ9qsh]VU<!#JI[&s37f)O[S2ZNkDXqCI>,XgW/5%g9_*3haIsOdRoY@tt]P
%SVP38%4\Y0<qS%K-VIH:?T/6`OJgV']fZ>0EmQ*m>uUD0?MHD^R8O/0!^FbdiYOI'DFY,HV#s4nK-A<VL,reOU)H-JX)CP-=d.Z5
%[0J&F>I\93Vk5b]ouGm;CK3S]OWO%Y6T7dQe^i2++K,rqqimlP!)rQbRK=6&fSZmj:tUn`W`-Oo=Q''eP.@',IFmTV]m^"1Bd0X0
%;["#dI=b>mMrlsU/eiB,fL!V"H?VAk(@)EJ[%OT^-!n_h\*!n!$(_<]AW^.LaReWGh?=9+aC+7%B;M!<GOHRX:5iJ)s(o[[gQ"D%
%m34*<1$i&^DFSE=NuX"_mG`TODC%D-C'@URriEDep_[WKgQ?0NmLc#[W=jr2s$V6o$JdOB^J9/s>,Eko_9as=^rHNc5lcmHbhYMo
%/[LA96feYXi_[<+fnU//>#p$Nq0T2.dSc-2TUZl!+GU,HMt'-#Z<Jc,_:%%taK<BYc"bdhA-:.[;T6V?9H:(K.S&.2Xg.45@&RPb
%:;\.)L&/L'!&1#YU8<0S$DC!3k\Al==]*um3%RK<1[^B#^ni%8Q1$LQA&hKi+rc?;5%UFOMs,AB6<@<e)bDkt3_IZ0bCOsI&Iq8@
%VlfHuaMP/01Q:d:LrJrpI]F]=?"Eg76ZSJ+5,9LC5X0C/KFDp^8k9GW_,@!r4,97A-B,E_#%b<5Mtn/W<RLGgKGQIpOM^S=Ab7bi
%%l1pFL/e4dVXLdi3eW7*-&Po'o,XW\#IfR];Tg`dQ$[R<T>G;A'p0&OYnS+)B8oC7U@ta6A+jcMoZ`JeZ%s6+bZ26L&JOD`&p59M
%D?rRW(^H`^O'.i'G:Nk@*&'CT1&OCH[^/1Sbu]Kbk;6IWDRUF]bXaLCK\X![3\e.mH([s:pUBX!r;QTrrC"C]*ounY5QB^\#fDV4
%1Rff\":;BAA>8j[2?Q<ick'q8mnKc3.Or'k*icrNKp5ne@ZC[f^'4OSg)cn`&+q7a9DBYtBCS2P)L*8cC?m[R,WbS0:M%5)"G-8/
%$mDQ,TNN>LR]@_)CsQ`+"f0s#VrAUoAXNg0$''g-lR(j.=3[$;kfoKEQ$%>j3a]_!UMd(J]"-8"(c242P(WEV$50'>2i47\\CA%.
%i5@_PjP"hHf2.secSin'h=P1&4g0q(3e%(T!rdqB,1i1Uq=Br^Ucdm*%_hfX]Sn[p<^VJ?C=1rR[_OM]db*t%=jXmV18PmQdETJ&
%%2s&W\>Lgm*I]rXCFtg=-^LUoE\h8;'DrqTe_g,drWjjAs4$V\YKgMD&KmIKitGN>,QWfGI-',o&IMHWOeDpe6TY'%*?DJs8!)4P
%13rLlYSngWpY+fCG`=@_p177VnPX($/O]dkZT:qV(-'N\a8gE58Fj>-UN/<Trlk>ZO-skm]0)hFMP:$VQ'B"l]((ap%ESP2TWb\5
%l;Q(I,p$`r=>rq,6sM5GCYIQ%_sOf5[&m2]EmRe-Ck3'OYc1"LmEr2k<D):q>KeU.hnW8b5M]5f-&YRc5t_sJr7T[BHq4hO<G1hn
%6Vt(ga44Y93f_oXM>^[FcDH1#9eFY>130A.fV0U`L$0>uXW<qB"NiEHZe@RJFnKuml)Y&H3UdDI_n-SU9$3a'W_)]6eTf5n>+Ztq
%a!gQ#;eq$G[MTQ$2IY<+RWsYR9ZFo0g'/WuErY$UNY:]$VPItnD1Z$2J42ia%$APC=Ie]-0NAMf[]rd\2)hqGd3S:AgB-lp*C=is
%FLV'u8\W:b*\aGA4lU.b""'RA!k7irJX%Z'K*DjE2>S>3U3X$ke%b%=-'0;1X51l\2AcW0?j=fpPfV#P#0Rn0U=N0i%M4.U'V;0Y
%#Um\[b]Fe/k)<]O&3V-Y?He`j`,3%)`4$!_-UCGge6^JC*6l/BfIKU\,94BuIh.(hc*Dp-%sQ-TYd^$%2)*"_h.0G[gFIYk1O4h7
%FOe'h!nrd3M62lu8N;)C8.K=JaF:.FJ_d2`^p*-CG\.-BbuD[=QE<S+96>pjR?C0(aQ@b>h(a67MafKHC_r4c+.Dr?2pG$3eM+%:
%a"X:#mF#^/P_9Z*+oW"'J0pFYQUE6:XamaLENUTeY5$Nc!f@c5`.Q%kj4Z!gD^.uim1@0)/aG70j`#pt0%me3hM>VUKUttg;?a4Q
%\1$XI5=L"<O83c*8%YNt"Pt,LfpdD;b4as[MWseV\`jSP590maH<R=peY4=u3;FbSJh0**J$<nDgq]aM6qnLIK\(F2;t+"1;)Q<H
%O^YJ<LU8\3mkIGUpO`N07)E]+/O<iT1Uar+\kEI-IRH1VZBcAVi@2K47;/)OB83IY;%B@dGu?'aX(',188\h`_$P!2[4fkg>9?*'
%V_sBp\RoVrTN+Bq1hWl-6%N7_?"o&-D@'nAPgt'pbd[rJj:H=&#pt4L8LlhlWKlLsk+lrV7@Unqq5Kd7LrCE&*djtfB>ha[Lr8eE
%dE6"MK8Ksfl*K/ok<7`SoT\t>2_FlZ`Xn=_MHTk_ntK"PAmH)tKu2qfTsPP(qn$<SdQ%qZ^sBP_/=EBRBq*3G#S\n1_4L(Z<ZY"6
%%^/X,%3""`i6_I*:Z10a)/*iN&G[$+TpSAmKk[+0m,95[lq\//VKPYHGH`>M):8>nU6+h<N&=*bKe=][AS@F`h<g[6JB*S%p:UhO
%fT[(%Mh(p?L:s/9G,lNedSA@uU*phA^spjimf("Z?tG)LIgu4blDBi%WDPP;<dhJN1pWQ`8WlUM<r%hp%l6#/U'F>%a&D^;k><4'
%O`)gu4p9@$<!iK`oT`?n;5RXZK3?a(U;:X8W<dZ!m59K+Z=D*;O?s<BU"jfbD!(>WkqQu;YnMT=@T:\<VJSJnlN#)\0&YY:9@j`G
%Tq]:GBK7)p0s2epl%U-1*hK1@]"^]L%=HI7Lteb*@)Ij8TrLqq_m]7-Qtp*N%i.LL/&iLTA:]aV*!9@N"N*'*#8h/]<mQ@D=gWt%
%XAX-a/Y4CiTpP<tb,c^JQ-^\$#Ml#2ppA'D-p#;TUmPS"]btmt`DqY?=NY8Gf"H2uD'\N*`4]H`UlKBK<_f5DM8*4<j'rfmDf#9&
%&sd29Te:47oDA(-9T4_NSeL.@W$Rhr0Kn@n+gp8ugChUK+H/56fs]n>5Ag47FXb(/$iqMb+jL8Cf4<Fnc2WEK$'9Hc;o=*(`[K,s
%j`98iZl`J5@te+-C*!hAnOJ"bT#,"B%@i?.U2/R63MW!"^?gX0%U.$giIS_#4TNqefaQ](DNIi8j?,iM1c&=l3)gPg3u]-P9VM4%
%65o]uRF4I'S'ou+s-k&46E(6(Z%cQkhBA42VI$JR#IQdLe'KL?L(V37QrkCj7=IH"*a*!i%WuSRF#G#0<[ZChVlB#R+#t\X'4%A2
%X_Q/N2uppa\3\\DN=*$(&qLX:nFn>Ni@SLK_PRmgYk32_l9;"s3)tFD/;g\b_rEge`8t2d8?22&-$;jk8H8fbM>)[D11^]1(#W]p
%a.eJ4=&C7:,k2s]"A*jr@I_a#2obSW+I7j?m;NN-*jbX$_YiO10K0)d"i;+0*GA^8?kSk6"=*MV:o0!IdfPlkh3EEA(r*=kdmE`i
%pD8s0>9f>45$,;6PLttl,Nh@W`EmMF^/ASk;lR7uWSRTJS_G//@&PN_#.?-Di@NqGZXN0WDJQJlYYH[H<7iD)Z"d=]oA..$;gNm>
%0:pq!a8>KAY4(W@bOk]1qU-f^H!))Qjn!MT?.\(Y]frW7YOo$AT/<t!0"LDGbD(p\pgn6P#OcpC?Zu6<BCNcN4F*3YY35)CY!24*
%e\0'p$B]oPc4Uq#/Fn<o5*S#l(H[Hj,Nd&l?=VM*l7^9J",B*<.T.,!jXO,!n#g+%RM!04],.#>@;3"h>sb.u+=r5t!n49-hHAGr
%?kMJA]KE?J`T>4V7nsY8P3k9?RkgrK(ROjsErp.fS2XETj:$=(0c2mdF:YM06sM`R3!T9t"GIF]4&'h6b:.%c0i]AkU56,8@M<>&
%+SWfWDqfXtA0OFnf_'sk?EBs^Y=WR(;,kLZBUmXNItTL8>2].&&.?9`5[$HZ4V3.cog:GBJ+2H!I\VSha#r8J00J=/^UN^J_C%%'
%W_u3RXE35B*JB`C[O>uJ1]d^F[ZT;B+4;g$n]5r(+NJs]lB/>T(8QP39`@$`6Vb4"1!m%+`UHUj6Ch:*G>tgi,sYRl@h?g0T;09r
%k/6,QVBq1\A'ltA$7Q^If]4/!J"rYJTUOpk)7DP\kAW8D.01>6K1X.cYD*IT/n#c<^R,,]`:"lJ+-ji+DL5#%72.e'<\1cdd7,a$
%4<$Hj$jGb:0qc9\s1CJDDd@97HM(ScSBK'U5EGqfeASZL6#G1=7`\5U[@1OtTi4T.F>`2S@h:)I.N%Zo=;cGU"KI>^Iss6(SG@_j
%9t&Vm1aajjH$[/XY<2^J%:2)TZ9@!B=F>]9%T5Z3cO#<['N>W=V@bI,cCA6@Hu`YdWgnh1+.*%nnOPZm?^V[UKGZpo[GmbmLd#Ku
%#MLahC?+mU5Q9=V`@k9DJZpl=^d2r6X-TI[)=LcKUK@&"QFecZ'A6[pX;9=eS10mb##6.f)\QN$9_9>mB7![Z>1mtSNJEWrXC(o&
%ps\oLrq'9\,_7pp9-D#!`cIINM_bOc&\Tbt17OA-!fql50^#^PL^3"'I2Eq`**pi8:>o^D4oqlsbOi05XM:]AAp`0LN@'>k1!0$0
%IVT_g\s<%tSrkf=Nddt84KK%p\!2#<bO&'B%Le)ZYRXqX2D_G.YR*Br`:J]9+@DWdF\U.M%6)ul.tSoboS1b\KYUK<[Esl*36qmS
%OCA%ukM-e9'5>E.2!j8[3;`U92pN`(q>BB>\u6<7,>h1Bcu;pjm[7PNG=7l#$^BN)m'N05oG,fTeSKO#OYQ*e*DM[mjQ8,8-2p.n
%[`CHNU4D3\9c]tnQfGHGpf]Q3N+OZa:LRoWF#O@Do>GO_GQ^Ao;V`+`0q]2Q6<b\(*uD`'MC>GY<TNqZHG2k^Yofd5'*7Je+E<h9
%c2Se\9TU8I7X_cC]84o7NtE>-UJoBhIg'<QI1-($PFk'f(1/WmrDQ8Qq$2D%lhficY4Kuug\q)50I?/CYHk$+pHVlGh%84!rY6VL
%QDCC[B\"]<da5k\fHu4N$q@-tbJh&D*65#!OM"fKKtsWPeB.Mc-;B<>?*\*.JAFu!4S/3Y+2Eip@]53NWfk9@r3`KQ63GuJO`)He
%a%n?=-l8jX_'VoUM,A%r+&#IF<mOGbr;LaWSVE52/Y8obP(*aBR?M/H!9':M`%Oue6m\+[2LZG)0#og>EGc4O6gdBL.Pcbs&#R9q
%7Jn/U`IZCO%c7Uo,Ym>=>p+Y9L@5\q!.+a&5?*)(F(Gq=E@qO_1kI;S]`rM0h-ZA7*\?)DJ0s8kS>9.j%,l>@MbjD*kPSS(BNXWo
%<*tXM#4P$.`?Q4MnPJ]p'hS2WiebA,Wj#KWIig<X38&KBNXF8=&A)J<CUPWRnK#n:bu&MrL$YX>[Z;>u\-Noh-:(*2S3U1+E./Y>
%Ck@5YNk\)Y3TGV?]3le6`SltQ(0-o%iu/uFSO9ubHTI^("<\N+=lc)lcfH:rPq<u+9T>g9TngDt#?qI>Ps6Z6bVbibR"9mO7H"b#
%?"1==_$Xaa4=tQbH=VgCr1,m*8Z_HIC?c"^KE4q%V<[Cb:(4@dr&r,_i&L3B'lTjuLiSEI#Y<#IKPc.B#R'KK%>;<[g[HIaHDHsF
%K;5RsaEAOh9D!02eT89UgkVR`L&CBQQ*\\:$uX3C%[P/C`]6Q-o"*tb,0D/K=#e<"6GZUMhEoJA'+`Mj29DuHTT=]I+ZTht8A,<a
%/=(r>`ng'YF]iE_,dgg*!#C<q6#p`.gpR'dDj_VF99V"d`K2;KgqgBL$A:DBlq_(Eh]s#U-9D\aA<+FKm5"GZJR"!s?r@'&h5OAX
%RaiE[N6R__@eh+'S]1/e#"+IgCZ["_$(+.)S":*R\OW3"P?6LK>!*5C?@X=J=nHn6\FTa;O(-`FOVk*UTWsZR%CE"2i,Ld(^)965
%:I,@lEcXh`e'O_uQ@UM"C?8KMd`d3N'C\K0TUa^K*t$Z.e(-R&rPj[/GV%?/#B7`]DJ<[OYTY>/(8b8(QDoVC6kd)k<:E>['0I)n
%2]*LLni0Z"cgnV02%o:4UqojV?<rr[`-WK5^a_G%r,ShWZoYN$X?,8oM^:=c`T&&&Du4qL/oj4!Qp%EJnOUg2:U>;).7S</hN,<E
%VL?AS@e,pHg\']!Q?BTdacSLhSMd]mCU\gT#)99g=6?N9Ig&@H,;l=\l//),%RYfW7]/*9PUENs7s:\GI>r1f?NoE#:bLm2kI@Da
%kms&$\+88;3<H=N9b+YRS\Q4^b?pm'U3S]rkT2H-Oq9eVnn:)H$X')F)q9D32EQ*9EnQec?\)dN:4_39Bgk2Pe]86QBc\2gROR!5
%,-cVadM^S$H.tjKLZf\9P1f4,gNXpiD,BbslSCh$m6P](6C$)sXQb'pkf7\anM:C_h'T,KR+t-cj6)30Lm@o)_kQ6e0./gi@PG$@
%_*L"eSgo0+ALc,dq8N:k<W@e$gL>M+$jN[G[3^o)Z^p`.9_@li!7X<bC:?=E"rIPhafM%rjb7D"`<.B!,T9MoEk"5)Gp^0Z%=3aT
%'jXmn"s>Ikmdk^k#mYZ7F[ldn!OXWF`/Dfj/=B0dc<,hS<].,sK-".ZUC`b"I3:=DK9tn=BLio"Rcs7\i8e%L-*UnV;T38E8n_o^
%kSl=#@-!h7!(K\t6n"?]$<@D0-$=jc;k,.=K73<4n&'sQH,(YTPis[03F39A<Y/3cb;2XfC7@Y\k&?4t\*>O770[6d3"MCo$gjNo
%Oe9Y<0G_J1\+$Q1D0A#M-hU_7FITX25:f.`_]olo9U1:hpD<P^MPU_/3BX?26c:5%$@nWmN"LG^LdpK^'q87"^`<W?#3<C,->B6X
%_WplL7A,STlG3Si!TX2)W[_R>IN83O9%G>rTs;8.Fb`s:ASCEk^:)0<gc;5bHt]:Rk7SP<]E&=:e,](WW"-Sd0dX%PbO\=)Xk4]T
%)X_UPM?DThI`nDrKITPW`HASi!X#2s>aI?/1?dfEnmrS"'-D6@&SePME]Z0?^lfF\YLH]pLC&Pk;@HcP1HST@W]m:S?JS&t/A(6P
%dP>u8ZZ6d&(OQQR,r15j6",U8PY0^&b*MpgaM/5rc8O5&bGDNiTR4o:;/S4#F@l$46Pi/^;mqO6*'9`mW%f1#C4=Pqo+mm!$JhlI
%.:&VAJTJWAfGl7M1lf*m9R&jXjHONlA4Hb&@W%4JA,\hL;BM<q?,Zc3JSaUm&P>PQ=(C5[M>+>FlC]g7kLFOaf#XH_6C'tS>L44Y
%R-$)3btsD9BXV.p/Brq-WcDXZ)&&H]Mi&[Sj`0(^=Gp2f*V]0N_BX8Gl4)QY8l_K^4F/X%]BCahPC46qQ,nH90f[7:FjL.toHZ02
%s3PWbi4piHm#C))7FPajZQu7"-%i/^?k,Ws7#r40pbU1e9N>Le!T?+VTm4u?>Os#FO>C/:@[S6f%71+#LAimBD+.\t32kq<RC9XI
%Z0#^)"[pQumT/aYnHji)C/dRKh-X-b^sEJm[9YZKaug.3]f9.D6cK$38hIkWV$3FLceW/L(mX#'F.H?80LX2W:=sd=B/iKT9n/,n
%#"2#Ib<9f=LQ9NSliTmQe6,Wl/KfXmm#AG*6VMqeVY;h-#%4@HZ&0IC+FiY`)&'5\4ZjGa1O5;^Ql<+-A0;*:JW`F"%E\)t'#=K,
%jq+%/6eYF><^GE:2o05ZZc4[nL<_l<"Ta@aiNq`:0WTX9A>,t(=:X+"S>i"m=`Ph?&lVa@A?C"T1*J$t3rFCaNHKNTV,iT<@:Y%=
%dcj2!,oqH_D$io*&AE(2XT_LXikYO3a\3!-"-92m[t6n)2\a8;P_QT'(uRj*cG5R*pAh9h:*lmG%9OR55kH*4ldA^t6cYO(JO$_S
%;V%QOPrpM.HIPl^VhU:I:jqOMD?+mL]jWKsSZ@!%%BAq,.0B:07nFbk<'l!AXe#`U3S9.<@n]psZ-2@<F'INC10Kj:/fm_\9Ch"'
%bgiIL-8N7eeBV<e+hu>>^BoK-`>6J`-4)b&9j<-12%0Kg/,CU,5VgZk6<*C[FUte\EZ&t.*t+5#V+)[>a!=jj5_hWQeO=.N9+40Q
%&l@6+hVC`BjSb*=R9QsJYZi=]5Smg:)cHDZ$YUJnMQqNESg>l-2-Jn"4SUB_?i-79p:UQ`mJZ5L>jUupeeu<%-tNT/GtOt8(lSk)
%nPC)Q%1q^=&N@eV?ql4D;MXcUb_hg3gC2;/AMC@113;"S@h4ilWUM;YB1.&ikc2E&R_P_rG2'S>*bCR0<]Log>V4SORLYAc/-Y*=
%od-@3XS@!coc^<;53WY8P"c*W9D/hD6FKI.47J[L3FGNF?dUjPESOUbU!Y<bP[@JL5M]8BY#4Jn#/OtFi1(],XiPpP.s^:2k1YKM
%06+c>"0mAN8[U?d[*6>irUuTX\,uc9B`P]q1+h>)@DX_nR<\qT%"/S[mt`@EloTtkFT;`(B$uBuqMSi+&tT;;?t#K3Mc:WD9ignS
%ZQB2g'Rrt&E4:u]/<7e<d:Tspi4r&-]X[t-6F_>k_/(:9":H0ZOf]Z:2/CCP81b]Zb_o:YO55g'$7ob[:m(Ef)C]W]W*:Cq1a%j;
%-cgtrG=Ci@[,NEk`1gXjC)JUKq5<j$LYRM:V+u%b;HO:\O.\in:R30Pc/!oQNpQ?HO<&UH.qTN+r/u$>I@oE0_f?=S)=@i&-Slo>
%49@"O'ph#u8NgU;3Ff3mFX;Y*[qg#TL1::@^m/5lq"LYKE1"e-!JT=g:TEb,X%kJ1RH*9$+tV7JR>S=5+/H-!n+K8qg1'<2dHM).
%`$7YYXE"fJmGUqs1(Re"P<U/W";XIqS31HN35oo5+aoIe);mgnXK[go9_<c%B]NS_`QF?a5dR$_"spQ@M^KJrQ.$-#4<nPC&A2a2
%L)NT31?cu^H*ift;&uYbb"-en,;"KUe/FjOk](4%<AupG3+DJa']umRd\eqcU"$\F86'q_32u"Rb(_4DHKN>9\,O(!$7Y]Z_ER8]
%T1X!d.Kaf8*aVU=0-]PTnH<f,;o#e6O"ditEN!*."tdf.fO7HPph0s7CsRN`Z#]ph=;R2<MGODBC_uG&chPs0>bN2Wo39)blu!qA
%NT>DZKR;M_AR2DOJL)MB&BC^EXN!^!/Rp2DES(SZ^)a#/i'<gV#W_,FE2IUbn/-B:=r<*Idg4<?)!I*Yg7fR"kje6t>/:?]Tb/[&
%6,[^BcUmVZq1n,I"mW6A>Ve4!p+'lDJTjur-_$!N0usqQ+\GQ3&"W84$R*8=U1FU;j=*.T^"Ncm#7fsNauKL]mLDk;'KL*6>C;?9
%N:&d5m(*I(N.ErM3-$ZdIUAE*\*ej_$^^)[AJ^T0i9WZ-o"^@pUCM4.K8O5H\cj,=&:I()/Kppm/e%k'boY8RfXd;;3+6kK@9Dut
%D']R#CCFu<?]u9[*'N49,@V=s#gf^XXu1-VRDk*HihFH_U_[$mj]oDN6DIVe]h*rh[;2aLRA+G=P_-,FW_X<d$J[0r*eT;*VKLNf
%Di^lr,AIj]AB7)\F..7nn`<KDIf!KUktp9VJkG0Q:[?&N$HH-2)+Ko/Qoe$c#;W>&2&<A[?K?32RgXa3-DDOb$eDFZJRNm/oR"-c
%IV;AsLZJk<W8J$@jMaQ:l]8h\UT?e^!QqC3gB!:\&p3[#aQEPEPAG^G;@Ja:be.Lt+@nnGa0A;R!RTlh67I[]3@g89+YKC+-S1e_
%be^Zf#ZXsc3=L,(^SpZTdrRoR3+CXXr@q[9`m:!e5@,,?/C$iFBhnh,7;d[ldiM<#'6E$6^f/M_T#q0)1]hp=.Nn3p7B6MQV8/Wa
%roPa!<!%8a$!"<3M*%iTSV"K5E=p'Y&A8X!g>07POf7DnWPG()KeeKHYn.&n#uMIh-ZV*l<@EQ*N,7Ed+-oV[m'Q@[@AhZb4%1ep
%13^@"]T8s5\mLM5,/hYqpXX^K58Ne"JLbf%-q:q.G+?ce.Aqcd7)=+H&=\A)YFt8Keu9KhmS!/Y$qDP;Ccs%Je<J;gJQ+DdMN_b;
%LtIr"r0r_*?ZZABK6jn*RkSYAXY\Troo6iJdIZ1hK4LJH:6<$nUc)_n)"SnCD,$K8ZW2fZO(OX1N+gIc,>)7>;<n#p*JQeoc-j3@
%L3<\uY@X*T\nchq3Kf5+m+jXD+P2c.WTM81%Af):_=3U(n$iPu":$W7e-T-eFN>'W!EBLErrQ16E?<78UtWsC\&>4,;"\cbPat*I
%U$?6cHBd<><%ir<`K[Y]mc*V@76hpo52A@XW^P=>ku5U(p7?:H$f!.&O)prV#9X\XE;a332$nBLnPF>s^`rINbFe[_=Rj.T17@Is
%&-'g`.nNqJDS8pg%+\W4Z=IOjp^V(hYYmnAUBYH2+1b^)VH&VF?M`fR^.C@JXUHlQ9jp8RFi;R"I&cI8WhiMhh:igQA>L+VYGK0>
%CN_bpgeJp<aFQRm1bGJu?XkEB#ls`h[W:,WBS!pRBNLgBEasAkr6;NbU^t:P-!l[C/WL6TN'JbgLqd$O=g>*![l;U!]3$m-+fi"\
%L9u1hnD,+B?=]hj]*MC(qE]MWN6etUI(C[Db,SfR@Y<$lie*bo"]M@IGt<M$Wu$rZm35Sh`BbPZB&XcUM8Oc:"MgNi.qA2LRV$Go
%4^?'NXi]c(C_=DVKpR;PeHK6^r,R!GI0_KteuNH[o&6bn+7'n6S$C*$Q_/&+\Ic^'F=/f;IC[.YM<W"p03rSl_A.V&^XV7O/2(mc
%,*+2EY;[Qo)$*"a1YZQ;Pr$i41\$>5HB\'4+]Ni<Z:XlJQb3(!k?g<+(I$p>B.a\YmH(oV(X4VUK]bP9D'VouqNP!+:rt@'q6Ur(
%P?qni*,QU_].R(#)XCk2-Nsk[@;XV/Vd`GH-GP/FiaHAY@%e'1MtN&P0H<s3g`):r,f/p3mcrf`Y28X#8_S01e]/egglE:ZnZC2L
%fr4;3b.-'9ig\R<\_VbY"J&5<MLI&tftE>2X`&ctIsrqjrU:sIqN(d<3pZiK8((&[8-V9LCbcD6%hgU_GlZ_Y>/Tl2kDinb*maXk
%8]4O(j[%b5!]`=*LL^42l</IePTC;A8NBoiSp4ThT2A[3('YQ)\P>.Ze8/mT&F8LD]>s(^EICrULWUu-[=Qg!(YeI*C!%g@<31j[
%gc<64e^1]O$@u4)cfc=ZOitZ<L]mU!#+2lJo"SVU.3(:99slQ9jqLkhU2j=f=,mAoPl'-TH`S*-O;]?5Gjt5OaCZ[6_2rV%;[U?-
%_Rhk9/0+(ln?C`S/di83:ZBU.`RS#^-9?eCjgI:QF\26Q+!X-W4e)+r@)tt5fu6WEU",=P7I"gD25p\1rXZOJ>uT@Fkp>[t??08+
%ELGt4%:U\HKbe1[O1P:6RJbHh\*ZG<d@,9'gMt!H(GdMgh7(5j8hf)XMfgs-lgUV::AnQ8%l^g98d0^eKZdh9_IUc%n("\,pD8Z.
%\-ZU>1h@TjDQtc^G0D3s05kkhjhN^BVP,P27\-iArY0@9&,DJGQMjA+X[]s[6)i3STXQEkAlWqjpdW`jgpJ[r#b5\>"/BWm'>i3,
%kans^I]H1in0LXKD;f>M+R-r-QEgqm9sYYp?ql+!PT3kL/qFA]O1RtVmO#(*0#N2PX;Za]=,!W%E)]h0RRmWu>T.[*]?>/+KE1[e
%6!JW$<Rc&L2?u/XImFB&p%gs$k'-F&Jp-k+_p$MWemMa'^saD_AZAUMbH0,jLQi7(IKH;q%U5nman%Be[@XUr997gCJ$Vp#aaa,V
%"FJ>)+7lrVC)PUd6-<'L@%bN>3"dk6iMa];f+0mFcEiog3Bfl.iUUrc,#F^\6"`>-lRlfcR9I213:@Fso'p4$o*JLmK&il5b2ht0
%ppIM.Hkh&FE0E/#Ts,EuQ>[u^:6l@FU2r<@cC%#Ba;_[ZVMSfAU-!k,`u5%tBJno\-:W%b6f\RiE@iRL?N"A0Na5-lqm1O]D%92j
%3h/EG]Ibi[KAc$'X*"m7lf"El@:\9Wi-G*5_KqC]&:D8F)PO*MP"lHM'PG0\II%!fbXO,+IJB"hjPt,D@@7]oh@Gn_`DjIOq=lsh
%PdSlJ8R(@iR<k,8M),:5@DCG^Vo2_A)<AK%FmH-I?D!<#+(LGdX`WHt$=WkO\O%2M\/=7i3BWL`gE#1bmA_)PNq<Btfr=cGfYbOm
%0tAB!c5SjL`5jH&I!Brmqr,Y=2.A^tmdAK2VH@Kr87_T:P#D3Ee1uqLKWg6i?"XXJ;S"TmZCk.P<Oq*e+k"C5R+L*Kk/r;p?kc:@
%ViV9-.g!L+ZTQ;fk+-B^`H(04hM_eq5P&SIEHi?OQL&8.NX(s(k,>$jWoYq6pcsDj<Q=iPf6Qe!'MO]r#)#e1$6Ts)X_E/rG<b'@
%H..b;O<;Z`pV\j$,U^,c9t=H]+<U/o\V;ppGbY[)7^8+0?O6dsXS7S\$8P`o;soh(*=Xq)22)(ME\T[j-.334^U4sJ2'seTT-1Io
%C56W/QL&1"HdMq-hO<)PLUmnZ^cG\%].V/p/57uqopG/%(G!6%:_9KY38;tYN,n3&s#EMk\Vt_@T5cW<VbGR\IYQW91p-*L4\^c&
%epi&EI`"9mR*O=F22'Tii6La\,J3cJ"!;I#Dgd7PP1`!8_/?0gqhV%D$,S[+'m#e<=7I=KlfRO6;pH+S;9ut[Ct8&,8P=Dr_'P*_
%jX'Xs"G_N!oZA<o&<YGG9,14<(_Plq;S?DX,DKq!l(;I=mI,e&H5-qtVOM(>4@*ilYqiANf-<>mF'"P15u_+uVamPFW+;UUMXRjs
%8j_F8$hIhJZ@m?HQk4Bmm[#s;#*oie4Ae"dp#`fTN3Ga$n4bNa`eq`#*SK[>@n3GMINkRsSVQ_<]0L?L,UhZa[j8t;96i)GD>&46
%W\PYj>%B#OJuPAM/5S,&>tRWV3Y2?KN/7Y/i>>7K7OYa<F"HBVC>iQO[-C=c;RIK-lcT.TRK7h^,\^k1VE)pGNl(89iYY*:%A2qA
%#WO%YDn]H"\bs:h=-R/J"pOmIrTai@@7LB1Z<SE^D!Q3eB\K$Xj,lniV/GKk&LcY;((Z!YiBt@nk71>k<!E(fo_>?9+39;-g]W5@
%$-8N^7)aFCN+YP#\)bqM,j>OBrUcmoMU2ka[Er].\AQ\InfWW'SVME5>A]rL^r+pMXX+.h>Bq)[e5,0VR5tJ^=\G0)EefY842q-\
%ZM:/?\1>4&o[WNEHcDG*H!f^(;sWqfklN^O(Jg*`MbA36D041%^!)u6"KP?,F2Ymp)Yn4)k,%oA_eKXA?D8m5i"f(1`30VeoN%hp
%e*];hZ@`K6c$K,jB:5+,;Q7<4Xq)lVl_IrmpCFFJ-Lc)lcX7A5Puls7,eS2pKfE*6-c7r;Q@pY0f0)ri3def+,iY=:koj[uKZg`M
%3b9"_Bq!)of0IaLj7!-N`<=qnPk6Q!#h/1+AmGbm'B^$OBGa1hA1E3%)CSHF&,aEGe&M<B0)dL60$O"HQf%sWc#1hW;\-rh6AEQF
%"s.L-gpg&J!>mBbo;:soCPEQlh08f,cRB\Lp*5obD+gCb09('sUVbBA&HFeG2T35/=W$2+>URE#?[Xj?9^GrLd-oL(%Z#oOnoEW!
%SOJ#Uhga&33t>mmot7rr:([CA`8:9!-rD[u_!B0PMRt'I3dea<MnZW._Ci$d#;Cng8Vfi&8D-e?n8UBm`VirKW"HmmSom-Pm.UE4
%q9&hT*t0P6q8Z`k!U5RDC[L;e8YG1a>'^!'XF%J;8C)BGWNQK$M5.c9q,m/1TZH]OMXdb.Z:5D:W!,^r(!8bRXPojbp$!uO!!-J?
%l1Jrb=Ebk.XsihmF5\'/RV``dc4m2*QO@5@`:3UoOU.-!8QSo"/TjHB=o>X0#XMpp/]X`8,50R=?hM:nPj&n>]R:Gfdfs)YNUeJk
%3GL3)@/Tf5GNX:$m9LtAjtLG!eu<?>jXc'2&[Ys:nD3/?]JhUb&uq]*LDR)M^V'GG=1A+#&g>"1Cp(q:QKmjg-,SiSK+X#Z"`1p@
%IdR!K5+Njqj?^U)KIeF,]s+_g1.-M]mknj;W6SFl9K2P30q[/RH/o@;SPseC`?0C^<G9\WT(-]T"XZ=\6V1tgI+KPP/;5?TEOgSn
%BgMR,?^;bjmU^rUf'r@S7>cBDAtQXrf5uUWS,&TDl)Oc@[l`E")aWGK2(SRb"'$h-QP'i$eZ63oZg3O_hF?klYIj]1X7`uRMlZX<
%:>T;@OEWpg(*:0$`6H8&j,0LKa_b#;D%,SIc^Q?VeX+Nm?HU`gI'I[p4$5XF=)[#F?c43-ecm?me`&JT9L6X$pX"=h$+l:M/Mf"f
%qcm`7Rl<>K?aSMP?K*2LR(RZa/uN#dKjOrhGfU/p]bLsuTh37rS$nhjkT#@rP1fVD>HiT,J`!<mAtFQHB."BjLe&-?R+B]2;mbRP
%IV"dG+r"-C2&.NSD,(gU*M`CpieFIc)8?kF'F#eK5fR/Z$@3Ok]SMSS`))f`..@$WQucs9-1#uFbp>8=As$PQVci'&=\lXl?pF:]
%=2Ee+]X$j=I<jLQ6V0Io09PBS'#!.4gjRe'7hKQa#=F&8_',+a/G@dn+I:9$^beN!YpO1D(ZChBY(rs95B`%a?GqWN5gnWQA&PA$
%&!G7p_KkBsfF?06"U*a[KA;XrF%9JT^Cqp/+8'IrZ/AJ^#qt?,]Z\3NoDG4m@,_ggK/#ago;cT\fm;L.D$K^]id>KY4r&VWL9AK6
%.Br6@q<3";kZ_gTQ-0-mK0*aF,<c95]ERs7JtDnXr@eJ'Cu-39^8o/X)gl[dNi'P#ckg$^M^Nrekl9_Jm@R+Hld^)2P^deBTa`K>
%+S,<Ohng',^.E,YK+,-oR^mC0ZMGFqMm'h;l=H$V&at`8"a[$niJc*-f^+CKXd7\_S]5rrk.eR][r3pC33VARQ=$`gbKbq2noYUk
%^GHtfC_Dp^1Xb!0_c-83I-^2>BT;2A>?kTsS/&H3l8r$>%q@s2:=j.Yp+6\4WnmT<#R8oLkG,/iT$TU";_&jAIj9i`a14<7S,=7a
%l1L9VD9\G-he`?]o\]M4j!L"0q'grV4GE>*462(iEeKEZXKDA]K]%"]3[Ln`=`uaZn!]!?(Jc5A^DV7BqYec/;XKh%?#td:WF97^
%rR*:2n6T0<pZ)XUSCD*@B'p6Sa*qXr:E-=YqmKn;:Y%";.T8kF:V-jolQ":AT);@^-gkoVLKAaX4h^Zhohb+hk@l5J(Y[JbnFU&4
%4,-P1k8cM=]BQ=L.CMBj>KJ84n)mq@YqB/@I3!JUq?V`3hW'_H#.gskZO),dW=**V^L-3&&=fCY`spE&4Po^Q#@-uA#ZC\67m6=N
%VgZZoiWk(]I/=$e37YD2rfR`VcLn5"OrK4,$EjO(,eTg<a&h]qV;Jn2a/^/-;kDq!"_nNk3IplE-ATcWA)/BRFV_!@5''-#X0uAB
%c.a=O--gEMC(iSs0DbVe\N/5DM0O9fa](46iUJkG4T$!;rsES:R`t#okgs-mQA2u32ee3*lM4<VS#l2E\U]qG!DHJt7e/C#prjcR
%]0+(,?Oi%"h=T?uKbI<!3rU<KFnh1s,T&r.ZBWP+6h)E6lSu!e&^W`=m)u:&o-9Qn7uL(5E.pE8lAd[$-O8bbkOKQrnX%:"r2d*e
%GOPI%NX,L8+8t=f)?f03Tre^ib&<^'->3Yf,D_FgB>ocC!E=Lkm6M%;iq"TKr^28`.]sS]laolDg>EYf>A^\`,!K>!3ju+$,Fa[-
%[n-`JqHg,'b8:6h?*iF(W7/RCi%$!^6Q^)0*^I0<]G[%2W//kO0mGBj7T5PkZ(P9c.`bBN4-<n(du+'CD$$\mK#SGd6Y_2]D?<3_
%q$(i3)Z*Y.SC<TB"[VrD<EhuSYa`e.S1=UJgT:@(9.,IE*<kO;f(rspM1c(.P5S97j-/iF&&g4O=@bftUr.uJd(?B\:u_Hop'o<'
%K;(KpR8M"K9'Nr>DBia7R]AFpH=Mc9>0orD4iF_%FU.=@q(bqG)D8$f#@:hZIB_Y1&C7Ca5DN.f)YNXPE/paXCftbB+H@3`2ea68
%Bb[W$6j[Us9(KZ9@aTt$A6m;QMMD3mU1>Lshglk@ZGdA4G&#1:LCocq=uaO_66q4UU*G^Kq/!bo;%=J[lYb*11RB=!(EPSF[lTPk
%qBcq)\Rar9rE#gl+GUEC*a,VuCHGGCgX;LM]XHJopfo'<*856EluOui;[eD]#R:ARWD36*E/igDOOWZf1W!E)C@+t3BSNkX:S==M
%h%d2'9H1h>L->b]%jsf%@Q%I7TJ@fe'W*4?l;<d$1)QRE,-e+"+@T0f`B*%[SL-)dch9XKk-Teu14/FP8:$CgJ`]i;K-/Qt::a]r
%f+3Iq68m+EOVMn5SN+kLQ0CYeN>g;TV-#C5<k5!i+hF)j&\,9Cf]CMrYkF?1,A^85l!?>P;8O-U+uE>ZSre+aQS1!g;5>,5f20C%
%-45A:8`f$Z&)elnFk;SoRTA]0N3A-&JmjDn9<m8W:@UBH:%OR:>RiMad"n!$)V.b/^fB`ul\M\UU+_BEDJ<)#=jJUPC$t'$]qGH)
%-?jG;iuEq1@RX&?_D2A+Xc;k9G6,7Vp,)3>@'A&/GAle[Ge65>N@%Cti1@M#W;:D?3$Fh01gFH5D3S6gnU2WCUbia6V0Z#N,>"&9
%nEuub$O_a>dHPjQ"<4d:0lB=\,4DsrUG".1=G@*td"0Ri6HKpiOb48nIb1oupd[kV`U;os/#2,?\p<_UpE>mSr]Kpch_i5[UPfr-
%[(/&L9]NCpF-X&k]=1:Jj?ec^N9;1[)T*#W)emk.dt]Uf%3bQ<6%a%@hO"@;;GQc<T^MN@nNoXNQjPDG2R`1<-\Tp9=EB9aZBR(3
%L,R%HlD,r4A:0C.F2c@N/G[<'"`3=k?*`K&aP085aY6JB$C^s_pE[0H\U^YIYH"oh7^+LcN)6]IgrB"_rAi;hH4p`PgHTjZS3I.>
%gsV-0cn(BN$SMX'NFTN*Mf6Y%YC*AFfZiS5Gu8D_1La>*Xo>FP\OKVX34+W67R"=)S[YL^"V[`i=Y/I.3MS:(+b^76PEM20B7m_$
%cf+626[JthEQ/*7<4?AngZ^N],J2%tP/e[]$=#Y.MR3oH_S&`B3iApPF".9MdY\ZFi[Hkrs3\dD5]7!4gE<PD-FF>G=1>OBQB+(k
%Rmlqh\nIsfU.oRH#<<.mQZ@E^>OIrek3MEGV@SN*1IJLgZ5M'7iq-r1+O[r7<DJL<?NE*VeL`b)\'[<e:"HIhr0I;@0]<'^g-Xs-
%;r0YmFI,<<?DG-4c0W<md%aIH^-,`+s6_@N4]lu\-'3]@&2HJ'O@,eb+$V\@G5Ca\/e@5R-1*8oha96:Y]5Do(j@][FG'Nn**75O
%V3js!\8#n)L*s>J%Kn2]7"2K=!@PC^?"IEg3l#)K?TlQI@U<Lk.`eBT]*k^i*N,lpbG)g%D\8rDpUHcO[CCJi'g\6%2+i9NIAg\>
%G>uEW_==u?[H:pl5!9_c=$`N[(On;hM_Q(g6"'!K?g_'CnUU((5-(H6e!0V*am\5@DIlmXV'MHnaCu4]L`+Ssg569<Xd\@h1DV<o
%LXX"Ws23?P9A@o?D-0N$%QUM^b@k(t<<d4EBMbDql[_.\K1B.e1n@.M@L0IY%o`:_cqUpO:[/d:a@M:f=t+&RmQm*_a_VX(5,40;
%hNf@7Ni>i-E'*^.:U5TQVHq*X]EYrF22Ag7":JOr3lQgW<Z10TL%&;<$#bN4@4]RAXWT]&>76*_)*"C66>_c>,UT`+F>TZ;E2]KD
%AL.^W"O?0)*KsBap:t">,hS.JU!9lI4;nR.dZfc+RVs?<.%5JV9?SAHXMYR,lujPti^\+&i>2';#%`=T&G<>FUC[tmVj'mO@AlfI
%A=S_M\BH!eAX6a3!L`*rmuN!$Qssg`NM$ZPCWLB^X),;hNnj^d^<.lCdc_7HA!=6fZ6):8)%_h`B!V[cKc5i?jCr@P%?(qej^G$N
%-D^Ze=J;;E`BoLuHKR7ENR@S2CZGrAgAr$<nSE(nTrG1K3<cQ?Qm.?iV#3.Un@WQo]`>44Xr<pPoQ!3e6G"1D"j;QAFfBgY*/MY;
%S@_';;H*PF`0uI9.*m)1;i+0P&dqlt_8b)X1!7n"(0.,s=^mW.T3FsW)N9Tdq+bQoBOcHHarlb'Y5%.k:$Pu]Sf698R%11QB9PK)
%/TZ=8@$;EE9bc,*m:FY6E>F]onaXH,+rJTf$pm:CTeJgJ(U*O-\oHt)XmCgddjH4IDQpXFcZ"E3>P>AiW#.%(Sm3g4pB7^D?^>[M
%^(6*]!XpV$0u8N`7]?FMTL+-_8J:7Pa8Rb#WFm@dRA11JE>A34^DR;Rrui-I#Z4ZamO%"S[KhNiPU&F>Vmf$^%JLC-VAYU3Zd(8*
%_\bA?I00_IMCR(_\iqgI(=t[1][$-@nr+e/4GjKe5B3ftZ8O^=Um$%jqS/Lmf2Ne]]"K;'>F$0Q#a(;orFu`bX/hb0lI/+&%hA[m
%?1[T-jljPmkScW3VfTIkS?<,.0dpcER-U6R&i[o*UN.%[8H10rjJZB=*!'^tlIGT-*3=nLV()bF?lqH6*mQt8@N[^2=UJVd/],XY
%9XRfNg(/n:el">!/IDc6s2kel(3R8I63ukUY=\m*%T##\<V,8^]&aU&_Y44tHf/BD.?/C0;TBg*1:$qu<ns<!bBTPfTo`KmDJXie
%*f56B9*qsGG"5i)PLiru&V1XBYm`bjVeULph+rnT@(Q`qk`1!=X[#)R+(B4eJe+B>NT\9sG!n?7G(U?qVce1\d=T]L#]G34Q[4O:
%JtB*^.@jNF)1;-e-bm3u^=fe2P"$1gr9q)*$#rKQR(u,Cra8gB2q:`8@5"JY%*'HG^:2LI;O=Y8KjWYW2V$&b0Fg:62WRW^.Lc;'
%FPHCDF`"aj^eW-5eIX\CLTdJ[RB?"dbrWBX0&m?!iiMA6K9B'W1#MTA$b*_QGao6H"C5=m/c-PI9=;+*L8,p2<66??\bV@tXpoYB
%X%\M"/J9^3Gs><"W@,#&[m-b%V.bao!^$?D"]WGKkBl7dDlQ-(V+"dYXYPL&?"XHj*`QSpiXue_O*_1e1"-8u'OD`=\Wf@NeBmZQ
%.NQ&dl0G+%B/hG*YOYCLgdo[Lk66"-DlHr!-<;7d\?5N(@/A6PB]S9m#:ff7+]I\BmLedqnshR/C"68$k9T4hUBH6Wql=u0,CY&D
%,QM$5]fGrJd!K+h`)=QH,<ZBf#BkYLl\]p]8QJ&<%e)&q<:kf_Jo@(4C6!`!Mo-*$:8+P<n3+aYGUI:=R>0IL?`\gl_+M*\Qm?E#
%6A#;V[7?I:L%f1<VtN:cEq;7b2n*]eWoL`XTo[/gWb>O???N?#d(<k6$8CL=ehs=s6gd=46.p7h)g#N:GV5:l&-fi4%W??.,Tn8>
%d<7WQeKb1SlD\r`_:^1q=cFJ(mY.J#ECa%o@2j!A@Bp\"E]iN;i)Jn%(-IEr5fLJRhejG3\GEZ4K,b`!A'fg+QT<=%Mop16J\H!C
%jIkj3LHV*(!#%")/0`sj<iU',9chMu(oOG,@M+^i()p[nSP>KS^"d1j!6t#G*M//4mI!*h-)h^Lp>[uEF2A(ep@'a-SQcarbd)/%
%)WM)M+W.ft::?LZm>1\g>+9kKU]pnLMVDX$dpiq))i,%/HF[.;$:s>lMgYo"+lLi!aT<Bk,JBtrn?FG-kC`PD-8Y^8+@aSE?-B+_
%Vh*CF;\Kcg(B6'pP7`:L+4T%0BW1n,2bEb;gkoCFe)(43_3*'nD.=PSP$?Aa,Ud:_C?rf/]3Wo*D4eXqpDCrilj)E8P:qZk9<=k3
%\Z++Y,]\-mYn%XcD%W3:2u19-\]%Gl*>&]L-l4!(R:E=bU29hUp2RH%EJKqa2,`"K*W#Sd5Q7os0bd[2n"3^CNPA%cCH2D,`Z%L-
%4NX*S>W^euH#'OOjRW(8JE\Cs98p#B;Z/')!2Bn@<C5(@SJ"R+:;LHM:gb$;QSG;QBNeN$V33=)Aqk,SR."uc"W!h#5Xmc7.u##<
%MiuFkY$AL0LnuoOLZ6ejio<uV>M1WsEA-d[86a9Rn1BFGV(oZi8spY;"r]1$Q9orWX63I5lP"UAmW\H,]B]3kIlb^LqJNJ)n+)oQ
%.asX/gT'Bm,;qaD8D6Y#]%=P+&"RjUgY*J3K>a.Ul#"acfFVi+XDKSNX`lh]R)Z>+<h/maZ#Sc3Z<ir:=0oi3oV!ulMV&;Ipo5(K
%^_`q/(3aC9PC&'5M@Z+.*M,eDM\YpmoMAY3?n$E(HbY!ja:5Z\lJtN@K+B>61?E.!pU\/DS)ARmI-7O+7K!>`Xep<f\HAHbeG1$Q
%Cg.[+C.g/'U0*@/>ICuaMGDFag!jK=ZK8!m!+=0jQA8#MTaoIF-nc^"7r<-iNFZi\U.IdP,-FST4H/G<F'2Jg9/"lVQUPZPpU$6i
%li$K"FZmpNkM=T1nb1rG]RT,8q"r7[;4LsPO#eP-rROK)>TJNrBrK3aFgDQh@>8Kii&PBl#VIdl@Q@Gq3[SQ2H$g)F_(K<0.K((c
%KhIP:Jl:>=-JKi@K<&MP*8"[d/@@FW_ss3X[&?k4*E&p_hb;>6?JOhTDSJE1[bJNMf7)\oReljgSV85n\$Gk%*NO/iX%np'O]Q7c
%Y#&kYNk%hjH&g*$_;!/ho6g18:T)AZp@]u9#t`RCU]&a5s#!F<dDdQL#_T'A$ab:m-bA@rAVMMan/M5V&g(/[.V@j_ZpkGpY0033
%QS$,O^I%R\;q'Yi<mrRX"G5F-<F^%)hYI:EJ7Zl0'Nc]&?9Dmd0M]_mc%L'bF!'E3_*ZY0J$Jjg-Q[,XKFnpT,A26E*G)--U/K2H
%77&u427Z8L%:*2;BS*`2$5K<1cE6@(,a^;LRJVs8,\jAOFB]J@+FrNe:R3?(Ul,>6J$&ta5!@#6-/iS_c$%pJ!$sJF@6u`eOE=PB
%^R^QlQ>DS;,EQFPXEfE*.'.YN4!Eg*P/-*>_2r2M<j^1RCU2qQ(*1<Gh!ATuqhKd,>J`8)>:F';US?/d%(B,CdPgSD7W$$ENVF]T
%[?+A5AsP447JnNj0D\O,opWLk)?/JEaRbfES=`Dbc&u2?H>o%d22:Hu2e3,.l]-=f:L"BfUR:*iiq"jTLo7i-MXatKq`oN5pL](Z
%)Bg<7Nc)_A\``[eb'h">i'g))idl[q^/*9+c?B*3_63=<Wg#+JileV;?Q,4rd9(P6XQAN&_[5C)+P"X";)[<!'AePr&n'Qf<FY.8
%M&#%cXTVI"Slp&t,QV9rkBG04]+rtFUuXIqWE>@:cZme^n(t8)iHo'L''.]@7j+J/W;J*6)CZNGHP^m@3l5[:OpuRcB<eQaAPPTc
%[;6`2*!$jA?.d&Z7ct9C-F)r7s7m4\.>3KRGR@IlMJ[:GXB:LMF=(h1g!=2g_,<C-!@hQ6ILcM)jh^/6q3PDlb'>%`7hsUG[*b[S
%NifdSi)En4rd^do37p4+8SDEl-6$c&m-o2kBH[#2['.MU<*W*-m!]#Alpi==K3j'V>WofYDoGaZ5/A3pr&TV0"Tsjk01IS2%D;"j
%S#"6hahj!.Ql7gS*]+BW`uX^k^=f.$o:g!8_OtCr&fd"tB=qJfHW-37Q(dkYnoB_"XI,/u\b9st#imYDd)i7#9q)-ZBjtEgh1_Z7
%(X4hW&n):Z>TL'tq!/N,mtfs(:sb'"<Mb#q4jl+.Efs*T"gro6lWUfo(_QO;jb76>Y:d(J>uK*tTQ[U?gs*n(ppkZ]$,I)97Nu#D
%HV^JMUgHOrB;1f32*Fnr5W%MTKF+>3_46:5rcU=IK#KddeqB.gITY%ha5liDAIOJ,Du@,m`KL!u[U(:u\.cc_f%IrR3#26VkH.p4
%nO9]LRV/t0-!#ca./n3-8b#7?ZJ^S]T?$E0U4cZ)+(2R^AS>5PgmPVG_/"lH7.gk$bhtpN@05IeVTgK'QpbTOmDh1.Jd$"f]ibWQ
%aS.ec^em5dQ%b<9=.KkLVrY3Oh0ggX)./`opGrPdd*;!B]RrQK.@_W@KS5O1"9ELa=BWMGc14#R(F:n!LC5H%EMt6=LVbK"^^Z<R
%7ltQfEs<_$EK(O<GkRYj7gkSiQ[(7Nq+TP/j>%*T7^Bu:gMY2K-$D9L]S8BHQ/$@/ED*c&+(!+&4)7_>%O9**mc+#ALStaUpMiZp
%1PF416H4tMD4,iN_n0j[I)]O;jNGo[Pq-H]fPWK3BE>\2$bEh,MkoI`aKZgX18fV:G0S2RnfpdIYL_YA)b!@sY-t]Hb9")ogBPYU
%rP`4<0l8aRl-biSM$"-/Z/[gc_/GAO^#pD\bUh]qY[c>rkA,ra"opNjTKVZg@-JF12u[f"XP\@E!<(k]S+XShL2gah6L&`^T>B4S
%fO?rL2(T>n%;4?Se/Y*Dqu@/,!pl]q2>_(>VQl=UA:B-$CC.dApH417'KP8-[GDc!.]!DBBsbQQU^K:BZ:Dg:=6]EAai-F#hm`HF
%T*X*KDE/lY#,o;r!E>93R'puUCf-c)95PYRNhd&\hHV+%0J2D&U8(6KY3H$>kgc=cmi'U%gcX3m:sPI&Yq%U\W#K20TcRA/cpl:.
%_ce$R3RtZSS51/s+TI?Qm*W:,DV)qnXC)TT!mb]Glph^7E^EM?B,`\[q]$;)PD6NEI?i:K2of\)HW4RHSEd,a)<>KQ-=fn_d823q
%a'k6Z-[<7!4])OB!ShDcT&ronC*CP0]!*uho?ab\;b!fH0dcscSG*ZeSrDlX$rWJ7Uh4f)E<\39/osIW3>4"eN$rj5U@X8$5id^"
%X5l9C9h%Yc6?l0.12WhjRp86O`K))0/>sEhjhSKA9,;NO6(FA=jD[6:G\JEHcB)MR:U/Q*2?c"++cLCj`^YZ5-NkZs&XNO6N.lX)
%]o:t_fTOY!]F&U0CF^CsS@_qR0X2JqdkHM?;A%KRk"Z9Ko>^Qb?2MZs`Vp4MMWDNta>hIpl8)I@R':te-MnRi=G=)!e[ij?6o]hG
%1KHZX$e4g+m!5<njX?MX#_!0j&]p+W(7K-do,$(ba@YOt;M3-fK7Za,i'1N2[m%X[22Ham2`"l81$<Sg7r$9c_QQVt)K!*@e(A]*
%:T$:*<d/E^ap(?EX_Mkf/s'r1BSaLUrU;-V',!A5h&!:Dr!1E(>[m=gc)$E*\+,]JeQ'M4k60n4)e6\sV.Aol>FT7\due,H`Bt2I
%)I*Q.I$:MU9D`5[:jPSG%=MKOmneUKUpnRqObD#SHV=mu*l*EG!Ar,)*Fr"#r@ock!oBnr!0N,l6[4;X2D_jdAVr(>plkiQQD?<p
%/+?*Us0%K8Br,>W3LGF7(//,0(OU]3^CeWf=_$*&8aW-R\#VHkc@%EK_8AVtT`\glo-7g7YYn@H9r-8KkAgJE:RZt"rBTBGU0Y@Y
%iNde\mNMkL`j(#,\fP/&5g&?Hqr@I>0E0lm]Z=0Xn\VIl]:S?IIL-!,Mo.(-lS@IW\ZE7*ML<*VYNu(s#G-*2!2s85e@U1rC$/cG
%k@G=IcMk-*6hBnbJG:=EHl6^+6IJNVqDu'uL;;Cpq'h\[;_U?A&D?#VD7FnN)!,]h0M,CRbL,*'4Jr=0J3nE-,di7*bV>5.;T+B%
%%SeU'ek9tPL,\/$nLB:p;%14^^]@$75jjboGiL*L(k^M^\GG@XHN&PN!'+0]qL`Gk"&T'NLt\5bIe!a9pd-,/?&i_iVO%NH!FOo^
%Y!Wee7`f)d!GRJVI6!2.PemGBJU'pgO[9EjWJ<@Arl7Tn0rAG@EMZ4OOXB3,)u>'VC,JY=*L@!Zo+8`\#:OM?!g[]+j2aF0TRjcc
%npnp,kQ^-"Ne^j\1k]XG"E\W;hs-(j3!CD,W_D1pWH#C8*f(mX8k'a3dbk6uK#m0R6]j_*q$tgb3g)TIQkJCC+EPKH>:>k7'M3j'
%D]LiST0hA^]7-49%TSa%KaKa<U0j@c#Z,f8hLE_HYO_C;omAg$M#jhXEb6f/"YGW_M'RL&Y<i8+:`X%--L/:ojk`JN%pQiSd$bu&
%<)u\tCPa`gNBSBL'V`[>ot?_[TZ-Ld]N>i]W;OS42d<a2I9tCO+MKt\Dgg0>dX[[>=#/Q+ne_UIToP/NX."c+4^A(I9[r#g-\o8R
%0siF[1aG#riF6#8\2&YOF<^C'L+1s8B&t@$9f&3=qneI?Y;adMO'VM=X5+-;5hLtYF"FVJ#aaMb9Al>En5+_c%ae&D$F13R(&XI&
%RME-.MES%EP-q"L4EIAX`TbNAgGTf5)QF>p1d!F0ro9X)6m%<S(rH4Oa?M[W)a-/RDcnS2(7tG'2_Z30(.C&d6hM/I9WS^<!\.8f
%737[m^j/,ANtcu#m3;o'3E:2j',nf@=<%9]^"=D5./TVM;#ZSMp`;'A,F&#[;N*,<["D0_L8u?4VAopQ:NjS!C&t3,M9Hj.4BK?3
%\&M"[H=tc>)tH8AAPMPkeH.b:O$A=Bm*HN'm#!@M;8UnuV4XW9FTB",H+m3*Knq<frR5MM_hQ4Y;HiSA-0`dOgKe=e9'@K#WBj6!
%\p)90]US'rg3b-<U6_l*$&VPW_\DhjbKLKklc#,Ta+LI>^gF,=5Gj+^XcfuY2<p5!45.G7cm:[`D8.1naHGYi3T3iml\^VAd/-WB
%8+I>l!1RM;mmAnM;9Y2t!s8C$*/TXn!L9+HDVLRm(4s-t>MH^\=E7Y:GV;>^JK$4GaB)AR/L=R)$kTWZp=^WYA(lHf&kKops1N>u
%&R!pG4g[mVF2pl/l<C_I+6US!'4HSciQkK$C2kr/fFP9L^9N?tX21r&3K9]/6&:=2R6C_nC.)*Y>Li(CN\%0<<?3C)R?<-i.^E*,
%<)P77<1;g"Ugah6+h;K-#doe.-`T%P7d>+H!S6plLW?J5`XV,4b(mD5e>bCgo4NIpod;kA&TbR,X/9M,FRDI-Q79]prTFh4dNDdt
%$$`PC^gC*>a%9[lb\\U"KT=RP6GGm7o[KBn*:;5[7;ZlFNboU234<h*I-7.+<t5\JQ)[!I(fUK7O*5:t2jHo1NU,U4i?5W5\B>XX
%mB4o3[oqF[5XgKB<3"K3f=DYh+1<9aSt_>b3S'(XL.9I.qq8FDE;BHQpXLDn$.DBT95BC1#99cH1pfIY3<a1<VOHA24fc6>D$2o[
%8B_6Gc"Q:MIAM:P<r&S?iUk/A`1rHi3Es7ff[[/*N=ct?d<p0=S]o)Mkc9^8NC1:lo82?0;"Wut3tXH08h40bKHX0"O);*_Jro9)
%T'=#/4JMXOd]H7$cfjNdp7n%s;<`@'3&36FeY/$^jP8n<C6;#?66iF2M1Tq'A$Ru`UkaZqKVd)9d5A<h%3>-bHi[us]GOcYB=+*Q
%)+AnOG(-7$Uto)?WfqB0AJSk6&t=q9mUGR/)oQf"1ZuEoA(@0]>/iKWV/9RR[=Z[0j`$6M&UedIWI,DhXdc\RQ)J<R,FQ9E*>Ef$
%0j6RqO(&u?=>LT#)T40&]SRi<e>p;\e$Y"Q!uTO#8M"u(T6A7"YC\gl)<5D]H3YD1hr[8m-&*XL?'P?]imrJMDi$,H'pE>^:IZU%
%K:8dI'mkK=b;luTCV.S4=1*M0;[5O0hAn*dGUC<3?(J^tgua0dUOu"BH?VUj,['bnS.G@:1B_&n6mL="Y.0;j_q/2AKqnpt^PaPc
%SjQo7kM73imYjbJ9]`?c.=(Lm]C)oi'IpGqPL!RW,35?CZ5lomq[q"qJ@_m#RkEN-)@Qi.CN9UX2M5jm\$7uu7M)/a'>!tBfd'Wi
%f+CQ74fGMG/[iLT-)2'Z)-$7DpKLF=V<B5/X/!H-g#t@*cI+Grmn0X^2V>-4K^]i_Y+GGA$Tp<^XU=ii>*$\6\hj/Xs6fhUFF1A2
%cWMV(iaakI0@t!$'+0]XcJEV\G02U$[E_Kl_6m(ZMH8]`K>35pSGTe/U!t"l^qCep[?MDe</AO(9_iJS?sAS`]Bg`$mTj%OdL%7_
%g=j0)I2"IC\P/'9XHJ^6a*$OMF[&gfjQE(tDsq#$`N.gB/Jk*">mX?Ke5+[[XHat:4Ru*$k6,im)juh:R$I_fW:XaHMK6J0f(@Wr
%daiOlMa5#2OM^W0Tp:tOiN+(dL.B3>H:ufg/&HC'n"(%iW;[\pC'$?f/<*obf)ZCmEa/<C.[Il[\h*ur)$/IC#NVA?fn^`c\;S2?
%'N6ZLdDVq//'r-!pr23M.2.1C"jn_\IC!:J[Z&6PQo3PY$M@<^;12Scd#sNc[]\i9&_AI>*KhcuIaRlR*mIl\r$bC=Ojkd8j:O+"
%a".ZKdhSuUI13q$S]&S5&W-XXPHtl[eb"JB<ec=P?6.bO,GYT1T4KY=!!<TdEtB5KEhg#kM3P'N[!9F,VL1+:3]rMf'C%V%[5UuM
%jUQ@"e6\6/;gr_HRt;/`Bgb"E^,3o+)Q>lAY*0Q4qFF@8FKcX=!o8XnAKJBjj\EK:C?rQlIEZ_QWs5i;`cr6=Z"L61MdlKjLSc9q
%Q08cgQ9j0Vo<H^;L"dqDprVC(d?=[#RUu]f6I$A]OciWl5)/2lqj(3)l5#YN8ZC]fQ%Vcn7#qGea4R,e6_=Am+3-0H2b"^8p1]:7
%.Lfm.$pZIHR3;u!.A?0A#\B9#9#bu0URDQ15jj"fLms:7g*sstI:qd2b\kq.q6B/)Z9=I,5YWUfeoOUDO6=3:1mm_nZI_+cl]rK%
%?q)KJT/jD=F'<ln(W?Z>PVfdGB&UTB!l%>BoL2,ZM`8]W42kUrnqa]i\^MtYFqG/G5/Jp&[a(U/4h#+65SKjn$1QMYXZ&2QC=d*=
%;iM\j?'.VkMW2ORRHp,GFuGt--T%u`O,YDZ<mk$lD(Ca>k:Kl:_>o4$>qT5B:>pg;B9=)]r8hM+_&s#r>q0,^@+5d2[PIu5.OU?R
%P&g#_5^f^Zj=ig)SgfHZ\SEN"`NVUh@^Zl[]/ke/RWUs6/!u^T&Ggo],kreh*7O:6\IeK]_Ob8>M#;U$UT8p[?$Ful]Wi3<eW+I#
%qDff9Cl\[OjRV.^h--$"G9@-n-)CpJOorh/2W*b`!fHjgV9LS-(YO*D3\[I+MV;:V!n7LR*dI*Xqa0<CRYAZ2ff28Ip2nLds.Tps
%W>iNdR2.Y0*6[?2^b;j9#k=k+(JCI%'K=9ceYhn@;+(A74TsbF'@=o6QbZ!;jDnWX$!I.ClYCL5#/KF,b8Lc!U^+'!.N4Q3&e$"T
%c!ij4fWbjdhqr(c#!fhM4)-<]\jGHa4e%EOoq3IBMpk=jWgpAUB@0lVPhk]\)TuI?ksD/1Je1Xq\o;Q7Eoj'br@M3G0U%eQ.b#\K
%YAY@7cc5$35BYMO)1\N`P*egFd`H>qq/3%9FZAUe_/lJ-,6'4FJE&ID$o7?OTAJ4Ve?tol*l\KV])k,B<2fLG>7&0ci8l0oWqEjq
%TL1"L303R*`A6b_U8^)2e\hO/BLfIg-Rr/0]\-MRHfc(p("0FF[$QHpTZmR=W46p8@&?t$Zm.[@f^Lp'B$*Q<^8R4dR<b^)LQ[6:
%MIao8Op0EfDB]>ZaJoXLd^YDI`SQ,h31')k/h#5,g(ioM)<>ah$"@@og.B,:rD6'BK#[;k/pA-4bioU0fg/Hh]sEL!2B-ncO<MFV
%e0e=t")KdrEZsp4iqdU`>2$<e9J6=]Es/a.g:XUF/pX=P7T6MPY;\sI4[!&%#'U3oTT]0iH<PfI29l:\_OcJPGdu.SUSjO,h1V"C
%3M<7derb<\!^ius4Ke62)PQ;)1InhO$o]b:#HaSiOkYp!SM(."1C^,#&Ka.YQm#JG.p'NgS4kt?>7`H/54H52'Q'2mTg#(%Dk$!)
%;^?DtlXWY$;E3(T/?B6o[-^=2r<eWN[f++Z'pq83,"u/saL9?IQ'nIC.=bSulJfKg+(?XoBFlqaUl&lr'X*j`&<1(1EaB$VVSm!3
%"+ad#DlVP-k2EkPMQ^XK<ZSm#V3TN'ZK:<[OInf(4oCY:5]Ef`T[2ZdXYpb[TY<_dimOh5W-X0e4S20%dWVgc2H#(RQ<$M8J/^JI
%otX&/;=2YO(@RW[Vq&8sLMgm&[s+;`.8GBGh0MU>$pOtTFW;lt"1rHimS@3hgWlp27S!=Amc4<)P`N.ELb!L"U7,+h`OWrJeW!^k
%>0[u"21pII_3n>?Ka7lbE6YJ&##[EFGK6Fmp`)`\:sFNoK29VYiH^EgpDNqN*A@fFAHD")k.qNd%(c5]N24<'h_c%"<VW<VN<Xr!
%I>VN<2oTQ%,;P^16JEngJd+N.fS;4g*lW/bGXt@EEHat=iLt"CN;.?*N]hIV4a<"HbB=dOUI-;2X-JAQi+(Z-!1`<tIB]&uFa_(X
%VJrCl/+N*D#na@Yd5fM6&YK&8ZgUL=S2d;6)Tb9F/ssAN?Abk/3SCo]Vs=ts-5RKq\;.-N-=2Y?e"l[,/:5i;r%FZc#1Ti*s4931
%bH!g`9r49`Zk#R0eueo)lE$YjinKFM@pFe&L/cFXGj^;R2+rSg?%D&B)g@NI7Hu-.B=W__!]k=4Ei0)b^(#B-mLu)s5r9$hXX3YG
%:9P<dHgmNXrMR<59(ID%St[f+*RMKPRBebCFgXK<4G?A<-Md1Qq*/6PP90#LQoMg13[I%g*F<-_Et+Q!iM3We%Ijl+b/o$6[F@sU
%B9Xq;.NIej\%R'm:jpX!T@(]'jr<bh"p8QX(bQ(I9.B)W24LB9*\a%o;=n7#'3n&5pqXEF2Bi&ul\Js"a1q._4k7TTSB(F)pEt?n
%A*@K*XXBofbIM=:DJiHrU_3]^$u"1K(C]o]Lcj">ahMo=P[0kHljbFT1`uWTB;5E_$-#GGJqR%fpR@R,+$3`d91<=",0X">&T1YM
%4f9)+68"4]<%3@8"Bf(`e:[g\!fiskB]XHPn(K-UZd-MT8+X2J]$VUnp_PK;)(g29Y#p&n4QqDbZe5!uW:J#%*W/*ZM<Nj/$EZ7l
%=Ptu/CrrZ^hs48+jqct&I`=rBQdmd_7kV)>i>M#TN4r],Bdq9!"tFC3JZV4o3;P3Ya#qpuYCG@I5>KL[0Bh"b\>jS#,K=513SoYC
%cAZR%HG[og5$P$=IYK)e(JIha9=GHcH%qu@oQ=q#@R'_'2a'[g^bT0iek.1&9l1W><<7H#"ci@7S+Ftg'9c'*/*dRf<`8\@R&X*A
%Y"#kZO%j"KFRE5)Rr-=o2<qc07GZCo-ZnGp!*lEXg5tj;iI(7!(g<4@5jcT?ok=dDb)N(?qqJ:7.A5"bI4-,TK0HK3cQ><:Dr.qa
%D"K@O`<'JWcp0`aA`nN<cj-#M4a[#W\!m>9gSQ@.JS27A4p6+B!Xa1lfG!1gD;b51,P!(D*<Dam(Vk)0!M8$T4HBKg4hu-@$"%o>
%'Ys=Q!^(7-!'I0":f^t:OK*":k\gMaO&."^(!q7$6\n;NFC(r[O&Rh7SXYHBL,`Lkc;_LYSZ,2NgL$h8=Mooga!j3@%tC*?Q/Pai
%9Zn`f/*a5o/tK"Oc"!29G>LLrW"jgZe?Dsfp03SC+-r<KV`3g$:05uf,iN.31iu,t8-q,9@X)4&F":$C,E=`'ds"GUY9<Jm!gV$p
%%->.aoa5k;J]a7USub7RU5CG,''qW\0=:])nN.Q8H8q>BRF:g"80HZaGX&q18ti67:Ff/_"fg'*f5m]-Q)8=uR`;KeV1s(FI<XB3
%;U`<H>T'nsPk*II]j1N.fcja>,G3_)?LLCfGHKIYgWs\d[]Vb`r8md[6'9Wt<S+./cdeq@i'L%VH)`hW`9)[BeDXXBqV<c"_=62S
%#V?\+Y#%QEi8]gV9m<mM_WUn573-lW9SMh\Rl,,E*-u+q`8KKp%QdP9MA66`DNUdJ<bQ2bpFqklXc<q:\\##6CN6'92@QVK[a#!`
%jP#SOcmq?J%lh-b[u&9&kkIO$bp'c[dllEnW8IIDrb0nEr%#AI,c.7K\+OK(NEsKS;AIFMG'\'T;<_"a.uK&$^a6_fb.]XnUd09"
%'SO[JP"j?VJ"BDFcj8/!MJGmf<DAr9[4&:HX=Orm*kUb*P8@mqijUmJ(\M()#Im*JpukR<Nki!p^lat=`\oml<RAMT\g=uWfCjG?
%A\Uh&iN0E!rlcVdbe&,u`]jE;Fc8.A`#ebD>PGNgT"/^815H$Ahq+I7Ha[)B5#:eFoh3smeb<aDG*0JiXs>Ze!2""Ws5/?dZNa%H
%;j&hF73WTn*FGcko<N6h4/A_e]j?)'WVI!,*X=p1FI.kRVIbgQ7OFu_H0G-H_g-'/f6OX_Zk"o1=2c8np1Z.a*enEXVC-gR-2(U@
%6;;N(PuEq"l>tX3N(?NZa:;eHHH=S*8Zr&mlDH[jASS;lSOFN^8CER5+-.A>IccL#HEs/gr3'F*VMcf"[9T:<bF\NYXf,lI0;Ysq
%9hS91j-Nt%X45%FTfR(K2(Z=?&'&tE09HgKDr*YL`OXR#L]?>rVsD#H'IsRL)h:?O&S4Xu"aj^Co>LdF[XHulK3kbKbeqrfZ2t3J
%#j[K-4tZ0C=P^];B@?[t)pa-8eQ;2mI*(d-ku)lo4u';VD&j,d,YHI'(Un<@F;'CB&+EE;cunFI>EO(J,;CH[rY<UnB<8'+5X%KD
%!q2l7>YodVK,%)"e9j_uPg7p=?]_Q\%cWpjPC6_@GBd=.++"uJ_h*]=4cPSF^93hPd.G7RfM][Vee5m"3chYn$`UZPL8.q[b.^d/
%mHeZZAZEip)+)]thc_4u9S3jm=IX][Bj2ek]Q2f]XL4oMaAW!c+KBd';dF2Lb(8EO>>65Q*FuSMS,TgI)098'\)St[pU/Yp=<m>V
%X2Xa4pcKSoUiJVV+7)I*r!-7u08!Q@b$c;.I]=F&jag7&M1KI2b37mJXB)m5WEaW,][Dqa$""1/#i@XeCX#NBTXTK7\Hb%OYhOPQ
%&*6EIRm6bBR:gp5))#aJTcn$]Fj&<ImdDQ<5ua!SM*`DM#TI5>Ip-b$>:=*&gS1ZK*6EuAZ8:[_WVgI`6AcVZ/1BEObcT4FH,V`R
%F=rP@,?(U9ANZ#ap0-kQrg<74[_87mWVSeN_UnF`:+>!skn6C[k![$K#GMA6&`grq@iCBMKbHK"CKV*N7k4q$f8>u[[V$47G2@5J
%lRVi$_mdQo?)b-X6V+c"L?H[ch'EHGEk??T(4nV^>-)>g60K,EEbId2b-CD_%)h%+U\L1L05dK(Xc09Ie$c@69l#ThW1=h*W90\^
%jV,mD)IDWaZIrtO.4)0o2#^l)+j*-)9^Ym!,@`2Jb^9q@WHt@Ve[dsnpK"Iq1tjTY5BE&`X;fL!I^WuC$+31X4\$,MBYCl`XrbJS
%Rt8Ys#ZjBdE/?K5,5.rIpZ43/Kb$Y^Ys$FZjf,a%>HCNl+S*0\X5G1=/e4[OKq`mb(#^r^Jbf-cT^0!<[k[b.YeDF(8lhU3I3`ge
%JsV'N>ViX:FrJTeFLmOX^fL%hk&Q=\?rOHJI<BB/G%$[<!;i(6`iHcYCpMul`_-.f_Qof:gi]gUJ+L=-AF+\4n`GTlO<(Cb>0JDT
%n>!%Nh:MA>.Q"G]YNL?c`NSn8.(kBO;r-$Z721<[nX6]B^om&0?tf\E:TA;+/ET?gkq'V=).1ar?8U_KiCmu,+7AK%[Ys9,==o.o
%ZpoMq\T=.m<)t(d?BFVmZ@a`>TUfcm#e=8To5Sr4,YG$36hfA'5q9q3ijk>"'6$Ymeu88X25fWm2sA7Jm?0=o(gl*@,5*U>ZP4F%
%Z?H8X(>E@SGCh<7cdTJ7D-&,Fg9#`SKR*F7!KVB3g/=G3j^m^?*Vl)XYN*7`LhRik19uIRMcJAhTP\8><_9/a8]ujoB+l@occ/Z-
%dGeHLpM%`u0Kd8Up*_\8UMa..nZ0;hA!&7"@"iMT[Kj6O9fXL'IND",RF=U)h3=n92TjG8i$VQuQu'Z#]=(^&n:J".`tjusS<?3X
%V7oQn%+_CaoK>0045,te*"T3@`l_i[a,;,?>o\NT^"af!?!H&NotKpaF8n6Z3fGXH/?8I_R;ok30N<8nke'^)X`,M%]VB=s9128C
%8^r;s@#.W'9gl>V(S41O'415;F:h+VhfbkkZ"Jjr,=Ou;0C=e:Y8iqBk\dft-Z]9/_i2#eg<9I<F-`N.10")k8pI"+e8,"!XVPSe
%(.N&`d+EWcmJ8jhhS3u(K$PEs;"p@Xm)b^6hRT']GjdDA.38QU'd#3/2_!D9duNY1G@"-:32!%$8&2I[Gn")+m7>.=%F2&6*+q7h
%=ql,:SQi4!@JQmU7"gn%NO=7Ao7"OjVc_;X@#_kIlJRE[VcKD#*Dl/]\#$mR>;uF&N6sEq&GajKJ+m*Pe!L+5m2mC[lL4c3pt%b0
%n>C3>qk*UI5!;%5^Ab&!^461/5CW>KIt%FXDh%BW:Z)-&qlda2i<M[An,N7Z?XJ6]j85JJo.N>Bs6?M3s3#n-6l4YqI/W^[s7,Q-
%qj[Thn<3Q0~>
%AI9_PrivateDataEnd
